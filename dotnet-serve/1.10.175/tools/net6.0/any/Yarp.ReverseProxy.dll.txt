[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.AppBuilderDelegationExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IReverseProxyApplicationBuilder UseHttpSysDelegation(IReverseProxyApplicationBuilder builder);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.AppBuilderHealthExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IReverseProxyApplicationBuilder UsePassiveHealthChecks(IReverseProxyApplicationBuilder builder);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.AppBuilderLoadBalancingExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IReverseProxyApplicationBuilder UseLoadBalancing(IReverseProxyApplicationBuilder builder);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.AppBuilderSessionAffinityExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IReverseProxyApplicationBuilder UseSessionAffinity(IReverseProxyApplicationBuilder builder);
}
public interface Microsoft.AspNetCore.Builder.IReverseProxyApplicationBuilder {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Builder.ReverseProxyConventionBuilder : object {
    private List`1<Action`1<EndpointBuilder>> _conventions;
    internal ReverseProxyConventionBuilder(List`1<Action`1<EndpointBuilder>> conventions);
    public sealed virtual void Add(Action`1<EndpointBuilder> convention);
    public ReverseProxyConventionBuilder ConfigureEndpoints(Action`1<IEndpointConventionBuilder> convention);
    public ReverseProxyConventionBuilder ConfigureEndpoints(Action`2<IEndpointConventionBuilder, RouteConfig> convention);
    public ReverseProxyConventionBuilder ConfigureEndpoints(Action`3<IEndpointConventionBuilder, RouteConfig, ClusterConfig> convention);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.ReverseProxyIEndpointRouteBuilderExtensions : object {
    [ExtensionAttribute]
public static ReverseProxyConventionBuilder MapReverseProxy(IEndpointRouteBuilder endpoints);
    [ExtensionAttribute]
public static ReverseProxyConventionBuilder MapReverseProxy(IEndpointRouteBuilder endpoints, Action`1<IReverseProxyApplicationBuilder> configureApp);
    private static ProxyConfigManager GetOrCreateDataSource(IEndpointRouteBuilder endpoints);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.WebSocketsTelemetryExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IApplicationBuilder UseWebSocketsTelemetry(IApplicationBuilder app);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Http.HttpContextFeaturesExtensions : object {
    [ExtensionAttribute]
public static RouteModel GetRouteModel(HttpContext context);
    [ExtensionAttribute]
public static IReverseProxyFeature GetReverseProxyFeature(HttpContext context);
    [ExtensionAttribute]
public static IForwarderErrorFeature GetForwarderErrorFeature(HttpContext context);
    [ExtensionAttribute]
public static void ReassignProxyRequest(HttpContext context, ClusterState cluster);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.Extensions.Configuration.ConfigurationReadingExtensions : object {
    [ExtensionAttribute]
internal static Nullable`1<int> ReadInt32(IConfiguration configuration, string name);
    [ExtensionAttribute]
internal static Nullable`1<double> ReadDouble(IConfiguration configuration, string name);
    [ExtensionAttribute]
internal static Nullable`1<TimeSpan> ReadTimeSpan(IConfiguration configuration, string name);
    [ExtensionAttribute]
internal static Uri ReadUri(IConfiguration configuration, string name);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
internal static Nullable`1<TEnum> ReadEnum(IConfiguration configuration, string name);
    [ExtensionAttribute]
internal static Nullable`1<bool> ReadBool(IConfiguration configuration, string name);
    [ExtensionAttribute]
internal static Version ReadVersion(IConfiguration configuration, string name);
    [ExtensionAttribute]
internal static IReadOnlyDictionary`2<string, string> ReadStringDictionary(IConfigurationSection section);
    [ExtensionAttribute]
internal static String[] ReadStringArray(IConfigurationSection section);
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.DependencyInjection.IReverseProxyBuilder {
    public IServiceCollection Services { get; }
    public abstract virtual IServiceCollection get_Services();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.ReverseProxyServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddHttpForwarder(IServiceCollection services);
    [ExtensionAttribute]
public static IReverseProxyBuilder AddReverseProxy(IServiceCollection services);
    [ExtensionAttribute]
public static IReverseProxyBuilder LoadFromConfig(IReverseProxyBuilder builder, IConfiguration config);
    [ExtensionAttribute]
public static IReverseProxyBuilder AddConfigFilter(IReverseProxyBuilder builder);
    [ExtensionAttribute]
public static IReverseProxyBuilder AddTransforms(IReverseProxyBuilder builder, Action`1<TransformBuilderContext> action);
    [ExtensionAttribute]
public static IReverseProxyBuilder AddTransforms(IReverseProxyBuilder builder);
    [ExtensionAttribute]
public static IReverseProxyBuilder AddTransformFactory(IReverseProxyBuilder builder);
    [ExtensionAttribute]
public static IReverseProxyBuilder ConfigureHttpClient(IReverseProxyBuilder builder, Action`2<ForwarderHttpClientContext, SocketsHttpHandler> configure);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Configuration.ActiveHealthCheckConfig : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Interval>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Policy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public Nullable`1<bool> Enabled { get; public set; }
    public Nullable`1<TimeSpan> Interval { get; public set; }
    public Nullable`1<TimeSpan> Timeout { get; public set; }
    public string Policy { get; public set; }
    public string Path { get; public set; }
    [CompilerGeneratedAttribute]
private ActiveHealthCheckConfig(ActiveHealthCheckConfig original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Enabled();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Enabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_Interval();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Interval(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_Timeout();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Timeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public string get_Policy();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Policy(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Path(string value);
    public sealed virtual bool Equals(ActiveHealthCheckConfig other);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(ActiveHealthCheckConfig left, ActiveHealthCheckConfig right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(ActiveHealthCheckConfig left, ActiveHealthCheckConfig right);
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ActiveHealthCheckConfig <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Yarp.ReverseProxy.Configuration.AuthorizationConstants : object {
    internal static string Default;
    internal static string Anonymous;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Configuration.ClusterConfig : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <ClusterId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LoadBalancingPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private SessionAffinityConfig <SessionAffinity>k__BackingField;
    [CompilerGeneratedAttribute]
private HealthCheckConfig <HealthCheck>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpClientConfig <HttpClient>k__BackingField;
    [CompilerGeneratedAttribute]
private ForwarderRequestConfig <HttpRequest>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, DestinationConfig> <Destinations>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <Metadata>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    [NullableAttribute("1")]
public string ClusterId { get; public set; }
    public string LoadBalancingPolicy { get; public set; }
    public SessionAffinityConfig SessionAffinity { get; public set; }
    public HealthCheckConfig HealthCheck { get; public set; }
    public HttpClientConfig HttpClient { get; public set; }
    public ForwarderRequestConfig HttpRequest { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyDictionary`2<string, DestinationConfig> Destinations { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyDictionary`2<string, string> Metadata { get; public set; }
    [CompilerGeneratedAttribute]
private ClusterConfig(ClusterConfig original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_ClusterId();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ClusterId(string value);
    [CompilerGeneratedAttribute]
public string get_LoadBalancingPolicy();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_LoadBalancingPolicy(string value);
    [CompilerGeneratedAttribute]
public SessionAffinityConfig get_SessionAffinity();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SessionAffinity(SessionAffinityConfig value);
    [CompilerGeneratedAttribute]
public HealthCheckConfig get_HealthCheck();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HealthCheck(HealthCheckConfig value);
    [CompilerGeneratedAttribute]
public HttpClientConfig get_HttpClient();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HttpClient(HttpClientConfig value);
    [CompilerGeneratedAttribute]
public ForwarderRequestConfig get_HttpRequest();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HttpRequest(ForwarderRequestConfig value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, DestinationConfig> get_Destinations();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Destinations(IReadOnlyDictionary`2<string, DestinationConfig> value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_Metadata();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Metadata(IReadOnlyDictionary`2<string, string> value);
    public sealed virtual bool Equals(ClusterConfig other);
    [NullableContextAttribute("1")]
internal bool EqualsExcludingDestinations(ClusterConfig other);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(ClusterConfig left, ClusterConfig right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(ClusterConfig left, ClusterConfig right);
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ClusterConfig <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Configuration.ConfigProvider.ConfigurationConfigProvider : object {
    private object _lockObject;
    private ILogger`1<ConfigurationConfigProvider> _logger;
    private IConfiguration _configuration;
    [NullableAttribute("2")]
private ConfigurationSnapshot _snapshot;
    [NullableAttribute("2")]
private CancellationTokenSource _changeToken;
    private bool _disposed;
    [NullableAttribute("2")]
private IDisposable _subscription;
    public ConfigurationConfigProvider(ILogger`1<ConfigurationConfigProvider> logger, IConfiguration configuration);
    public sealed virtual void Dispose();
    public sealed virtual IProxyConfig GetConfig();
    [MemberNotNullAttribute("_snapshot")]
private void UpdateSnapshot();
    private ClusterConfig CreateCluster(IConfigurationSection section);
    private static RouteConfig CreateRoute(IConfigurationSection section);
    private static IReadOnlyList`1<IReadOnlyDictionary`2<string, string>> CreateTransforms(IConfigurationSection section);
    private static RouteMatch CreateRouteMatch(IConfigurationSection section);
    private static IReadOnlyList`1<RouteHeader> CreateRouteHeaders(IConfigurationSection section);
    private static RouteHeader CreateRouteHeader(IConfigurationSection section);
    private static IReadOnlyList`1<RouteQueryParameter> CreateRouteQueryParameters(IConfigurationSection section);
    private static RouteQueryParameter CreateRouteQueryParameter(IConfigurationSection section);
    private static SessionAffinityConfig CreateSessionAffinityConfig(IConfigurationSection section);
    private static SessionAffinityCookieConfig CreateSessionAffinityCookieConfig(IConfigurationSection section);
    private static HealthCheckConfig CreateHealthCheckConfig(IConfigurationSection section);
    private static PassiveHealthCheckConfig CreatePassiveHealthCheckConfig(IConfigurationSection section);
    private static ActiveHealthCheckConfig CreateActiveHealthCheckConfig(IConfigurationSection section);
    private static HttpClientConfig CreateHttpClientConfig(IConfigurationSection section);
    private static ForwarderRequestConfig CreateProxyRequestConfig(IConfigurationSection section);
    private static DestinationConfig CreateDestination(IConfigurationSection section);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Configuration.ConfigProvider.ConfigurationSnapshot : object {
    [CompilerGeneratedAttribute]
private List`1<RouteConfig> <Routes>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ClusterConfig> <Clusters>k__BackingField;
    [CompilerGeneratedAttribute]
private IChangeToken <ChangeToken>k__BackingField;
    public List`1<RouteConfig> Routes { get; internal set; }
    public List`1<ClusterConfig> Clusters { get; internal set; }
    private IReadOnlyList`1<RouteConfig> Yarp.ReverseProxy.Configuration.IProxyConfig.Routes { get; }
    private IReadOnlyList`1<ClusterConfig> Yarp.ReverseProxy.Configuration.IProxyConfig.Clusters { get; }
    public IChangeToken ChangeToken { get; internal set; }
    [CompilerGeneratedAttribute]
public List`1<RouteConfig> get_Routes();
    [CompilerGeneratedAttribute]
internal void set_Routes(List`1<RouteConfig> value);
    [CompilerGeneratedAttribute]
public List`1<ClusterConfig> get_Clusters();
    [CompilerGeneratedAttribute]
internal void set_Clusters(List`1<ClusterConfig> value);
    private sealed virtual override IReadOnlyList`1<RouteConfig> Yarp.ReverseProxy.Configuration.IProxyConfig.get_Routes();
    private sealed virtual override IReadOnlyList`1<ClusterConfig> Yarp.ReverseProxy.Configuration.IProxyConfig.get_Clusters();
    [CompilerGeneratedAttribute]
public sealed virtual IChangeToken get_ChangeToken();
    [CompilerGeneratedAttribute]
internal void set_ChangeToken(IChangeToken value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Configuration.ConfigValidator : object {
    private static HashSet`1<string> _validMethods;
    private ITransformBuilder _transformBuilder;
    private IAuthorizationPolicyProvider _authorizationPolicyProvider;
    private ICorsPolicyProvider _corsPolicyProvider;
    private IDictionary`2<string, ILoadBalancingPolicy> _loadBalancingPolicies;
    private IDictionary`2<string, IAffinityFailurePolicy> _affinityFailurePolicies;
    private IDictionary`2<string, IAvailableDestinationsPolicy> _availableDestinationsPolicies;
    private IDictionary`2<string, IActiveHealthCheckPolicy> _activeHealthCheckPolicies;
    private IDictionary`2<string, IPassiveHealthCheckPolicy> _passiveHealthCheckPolicies;
    private ILogger _logger;
    public ConfigValidator(ITransformBuilder transformBuilder, IAuthorizationPolicyProvider authorizationPolicyProvider, ICorsPolicyProvider corsPolicyProvider, IEnumerable`1<ILoadBalancingPolicy> loadBalancingPolicies, IEnumerable`1<IAffinityFailurePolicy> affinityFailurePolicies, IEnumerable`1<IAvailableDestinationsPolicy> availableDestinationsPolicies, IEnumerable`1<IActiveHealthCheckPolicy> activeHealthCheckPolicies, IEnumerable`1<IPassiveHealthCheckPolicy> passiveHealthCheckPolicies, ILogger`1<ConfigValidator> logger);
    private static ConfigValidator();
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Configuration.ConfigValidator/<ValidateRouteAsync>d__11")]
public sealed virtual ValueTask`1<IList`1<Exception>> ValidateRouteAsync(RouteConfig route);
    public sealed virtual ValueTask`1<IList`1<Exception>> ValidateClusterAsync(ClusterConfig cluster);
    private static void ValidateHost(IList`1<Exception> errors, IReadOnlyList`1<string> hosts, string routeId);
    private static void ValidatePath(IList`1<Exception> errors, string path, string routeId);
    private static void ValidateMethods(IList`1<Exception> errors, IReadOnlyList`1<string> methods, string routeId);
    private static void ValidateHeaders(List`1<Exception> errors, IReadOnlyList`1<RouteHeader> headers, string routeId);
    private static void ValidateQueryParameters(List`1<Exception> errors, IReadOnlyList`1<RouteQueryParameter> queryparams, string routeId);
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Configuration.ConfigValidator/<ValidateAuthorizationPolicyAsync>d__18")]
private ValueTask ValidateAuthorizationPolicyAsync(IList`1<Exception> errors, string authorizationPolicyName, string routeId);
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Configuration.ConfigValidator/<ValidateCorsPolicyAsync>d__19")]
private ValueTask ValidateCorsPolicyAsync(IList`1<Exception> errors, string corsPolicyName, string routeId);
    private void ValidateLoadBalancing(IList`1<Exception> errors, ClusterConfig cluster);
    private void ValidateSessionAffinity(IList`1<Exception> errors, ClusterConfig cluster);
    private static void ValidateProxyHttpClient(IList`1<Exception> errors, ClusterConfig cluster);
    private void ValidateProxyHttpRequest(IList`1<Exception> errors, ClusterConfig cluster);
    private void ValidateHealthChecks(IList`1<Exception> errors, ClusterConfig cluster);
    private void ValidateActiveHealthCheck(IList`1<Exception> errors, ClusterConfig cluster);
    private void ValidatePassiveHealthCheck(IList`1<Exception> errors, ClusterConfig cluster);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Yarp.ReverseProxy.Configuration.CorsConstants : object {
    internal static string Default;
    internal static string Disable;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Configuration.DestinationConfig : object {
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Health>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public string Address { get; public set; }
    [NullableAttribute("2")]
public string Health { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyDictionary`2<string, string> Metadata { get; public set; }
    [CompilerGeneratedAttribute]
private DestinationConfig(DestinationConfig original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Address(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Health();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Health(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_Metadata();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Metadata(IReadOnlyDictionary`2<string, string> value);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(DestinationConfig other);
    public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(DestinationConfig left, DestinationConfig right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(DestinationConfig left, DestinationConfig right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public DestinationConfig <Clone>$();
}
public enum Yarp.ReverseProxy.Configuration.HeaderMatchMode : Enum {
    public int value__;
    public static HeaderMatchMode ExactHeader;
    public static HeaderMatchMode HeaderPrefix;
    public static HeaderMatchMode Contains;
    public static HeaderMatchMode NotContains;
    public static HeaderMatchMode Exists;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Configuration.HealthCheckConfig : object {
    [CompilerGeneratedAttribute]
private PassiveHealthCheckConfig <Passive>k__BackingField;
    [CompilerGeneratedAttribute]
private ActiveHealthCheckConfig <Active>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AvailableDestinationsPolicy>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public PassiveHealthCheckConfig Passive { get; public set; }
    public ActiveHealthCheckConfig Active { get; public set; }
    public string AvailableDestinationsPolicy { get; public set; }
    [CompilerGeneratedAttribute]
private HealthCheckConfig(HealthCheckConfig original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public PassiveHealthCheckConfig get_Passive();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Passive(PassiveHealthCheckConfig value);
    [CompilerGeneratedAttribute]
public ActiveHealthCheckConfig get_Active();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Active(ActiveHealthCheckConfig value);
    [CompilerGeneratedAttribute]
public string get_AvailableDestinationsPolicy();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AvailableDestinationsPolicy(string value);
    public sealed virtual bool Equals(HealthCheckConfig other);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(HealthCheckConfig left, HealthCheckConfig right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(HealthCheckConfig left, HealthCheckConfig right);
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public HealthCheckConfig <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Configuration.HttpClientConfig : object {
    [NullableAttribute("1")]
public static HttpClientConfig Empty;
    [CompilerGeneratedAttribute]
private Nullable`1<SslProtocols> <SslProtocols>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DangerousAcceptAnyServerCertificate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxConnectionsPerServer>k__BackingField;
    [CompilerGeneratedAttribute]
private WebProxyConfig <WebProxy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <EnableMultipleHttp2Connections>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestHeaderEncoding>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public Nullable`1<SslProtocols> SslProtocols { get; public set; }
    public Nullable`1<bool> DangerousAcceptAnyServerCertificate { get; public set; }
    public Nullable`1<int> MaxConnectionsPerServer { get; public set; }
    public WebProxyConfig WebProxy { get; public set; }
    public Nullable`1<bool> EnableMultipleHttp2Connections { get; public set; }
    public string RequestHeaderEncoding { get; public set; }
    [CompilerGeneratedAttribute]
private HttpClientConfig(HttpClientConfig original);
    private static HttpClientConfig();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public Nullable`1<SslProtocols> get_SslProtocols();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SslProtocols(Nullable`1<SslProtocols> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DangerousAcceptAnyServerCertificate();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DangerousAcceptAnyServerCertificate(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxConnectionsPerServer();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MaxConnectionsPerServer(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public WebProxyConfig get_WebProxy();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_WebProxy(WebProxyConfig value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_EnableMultipleHttp2Connections();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_EnableMultipleHttp2Connections(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_RequestHeaderEncoding();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_RequestHeaderEncoding(string value);
    public sealed virtual bool Equals(HttpClientConfig other);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(HttpClientConfig left, HttpClientConfig right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(HttpClientConfig left, HttpClientConfig right);
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public HttpClientConfig <Clone>$();
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.Configuration.IConfigValidator {
    public abstract virtual ValueTask`1<IList`1<Exception>> ValidateRouteAsync(RouteConfig route);
    public abstract virtual ValueTask`1<IList`1<Exception>> ValidateClusterAsync(ClusterConfig cluster);
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.Configuration.IProxyConfig {
    public IReadOnlyList`1<RouteConfig> Routes { get; }
    public IReadOnlyList`1<ClusterConfig> Clusters { get; }
    public IChangeToken ChangeToken { get; }
    public abstract virtual IReadOnlyList`1<RouteConfig> get_Routes();
    public abstract virtual IReadOnlyList`1<ClusterConfig> get_Clusters();
    public abstract virtual IChangeToken get_ChangeToken();
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.Configuration.IProxyConfigFilter {
    public abstract virtual ValueTask`1<ClusterConfig> ConfigureClusterAsync(ClusterConfig cluster, CancellationToken cancel);
    public abstract virtual ValueTask`1<RouteConfig> ConfigureRouteAsync(RouteConfig route, ClusterConfig cluster, CancellationToken cancel);
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.Configuration.IProxyConfigProvider {
    public abstract virtual IProxyConfig GetConfig();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Configuration.PassiveHealthCheckConfig : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Policy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <ReactivationPeriod>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public Nullable`1<bool> Enabled { get; public set; }
    public string Policy { get; public set; }
    public Nullable`1<TimeSpan> ReactivationPeriod { get; public set; }
    [CompilerGeneratedAttribute]
private PassiveHealthCheckConfig(PassiveHealthCheckConfig original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Enabled();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Enabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Policy();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Policy(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_ReactivationPeriod();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ReactivationPeriod(Nullable`1<TimeSpan> value);
    public sealed virtual bool Equals(PassiveHealthCheckConfig other);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(PassiveHealthCheckConfig left, PassiveHealthCheckConfig right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(PassiveHealthCheckConfig left, PassiveHealthCheckConfig right);
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public PassiveHealthCheckConfig <Clone>$();
}
public enum Yarp.ReverseProxy.Configuration.QueryParameterMatchMode : Enum {
    public int value__;
    public static QueryParameterMatchMode Exact;
    public static QueryParameterMatchMode Contains;
    public static QueryParameterMatchMode NotContains;
    public static QueryParameterMatchMode Prefix;
    public static QueryParameterMatchMode Exists;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Configuration.RouteConfig : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <RouteId>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private RouteMatch <Match>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClusterId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthorizationPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CorsPolicy>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <Metadata>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyList`1<IReadOnlyDictionary`2<string, string>> <Transforms>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    [NullableAttribute("1")]
public string RouteId { get; public set; }
    [NullableAttribute("1")]
public RouteMatch Match { get; public set; }
    public Nullable`1<int> Order { get; public set; }
    public string ClusterId { get; public set; }
    public string AuthorizationPolicy { get; public set; }
    public string CorsPolicy { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyDictionary`2<string, string> Metadata { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyList`1<IReadOnlyDictionary`2<string, string>> Transforms { get; public set; }
    [CompilerGeneratedAttribute]
private RouteConfig(RouteConfig original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_RouteId();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_RouteId(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public RouteMatch get_Match();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Match(RouteMatch value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Order();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Order(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_ClusterId();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ClusterId(string value);
    [CompilerGeneratedAttribute]
public string get_AuthorizationPolicy();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AuthorizationPolicy(string value);
    [CompilerGeneratedAttribute]
public string get_CorsPolicy();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CorsPolicy(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_Metadata();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Metadata(IReadOnlyDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<IReadOnlyDictionary`2<string, string>> get_Transforms();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Transforms(IReadOnlyList`1<IReadOnlyDictionary`2<string, string>> value);
    public sealed virtual bool Equals(RouteConfig other);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(RouteConfig left, RouteConfig right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(RouteConfig left, RouteConfig right);
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public RouteConfig <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Configuration.RouteHeader : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <Values>k__BackingField;
    [CompilerGeneratedAttribute]
private HeaderMatchMode <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCaseSensitive>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public string Name { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyList`1<string> Values { get; public set; }
    public HeaderMatchMode Mode { get; public set; }
    public bool IsCaseSensitive { get; public set; }
    [CompilerGeneratedAttribute]
private RouteHeader(RouteHeader original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Name(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_Values();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Values(IReadOnlyList`1<string> value);
    [CompilerGeneratedAttribute]
public HeaderMatchMode get_Mode();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Mode(HeaderMatchMode value);
    [CompilerGeneratedAttribute]
public bool get_IsCaseSensitive();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsCaseSensitive(bool value);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(RouteHeader other);
    public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(RouteHeader left, RouteHeader right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(RouteHeader left, RouteHeader right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public RouteHeader <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Configuration.RouteMatch : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <Methods>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <Hosts>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyList`1<RouteQueryParameter> <QueryParameters>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyList`1<RouteHeader> <Headers>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyList`1<string> Methods { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyList`1<string> Hosts { get; public set; }
    public string Path { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyList`1<RouteQueryParameter> QueryParameters { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyList`1<RouteHeader> Headers { get; public set; }
    [CompilerGeneratedAttribute]
private RouteMatch(RouteMatch original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_Methods();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Methods(IReadOnlyList`1<string> value);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_Hosts();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Hosts(IReadOnlyList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Path(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<RouteQueryParameter> get_QueryParameters();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_QueryParameters(IReadOnlyList`1<RouteQueryParameter> value);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<RouteHeader> get_Headers();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Headers(IReadOnlyList`1<RouteHeader> value);
    public sealed virtual bool Equals(RouteMatch other);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(RouteMatch left, RouteMatch right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(RouteMatch left, RouteMatch right);
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public RouteMatch <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Configuration.RouteQueryParameter : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <Values>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryParameterMatchMode <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCaseSensitive>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public string Name { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyList`1<string> Values { get; public set; }
    public QueryParameterMatchMode Mode { get; public set; }
    public bool IsCaseSensitive { get; public set; }
    [CompilerGeneratedAttribute]
private RouteQueryParameter(RouteQueryParameter original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Name(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_Values();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Values(IReadOnlyList`1<string> value);
    [CompilerGeneratedAttribute]
public QueryParameterMatchMode get_Mode();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Mode(QueryParameterMatchMode value);
    [CompilerGeneratedAttribute]
public bool get_IsCaseSensitive();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsCaseSensitive(bool value);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(RouteQueryParameter other);
    public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(RouteQueryParameter left, RouteQueryParameter right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(RouteQueryParameter left, RouteQueryParameter right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public RouteQueryParameter <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Configuration.SessionAffinityConfig : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Policy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FailurePolicy>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <AffinityKeyName>k__BackingField;
    [CompilerGeneratedAttribute]
private SessionAffinityCookieConfig <Cookie>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public Nullable`1<bool> Enabled { get; public set; }
    public string Policy { get; public set; }
    public string FailurePolicy { get; public set; }
    [NullableAttribute("1")]
public string AffinityKeyName { get; public set; }
    public SessionAffinityCookieConfig Cookie { get; public set; }
    [CompilerGeneratedAttribute]
private SessionAffinityConfig(SessionAffinityConfig original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Enabled();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Enabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Policy();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Policy(string value);
    [CompilerGeneratedAttribute]
public string get_FailurePolicy();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FailurePolicy(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_AffinityKeyName();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AffinityKeyName(string value);
    [CompilerGeneratedAttribute]
public SessionAffinityCookieConfig get_Cookie();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Cookie(SessionAffinityCookieConfig value);
    public sealed virtual bool Equals(SessionAffinityConfig other);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(SessionAffinityConfig left, SessionAffinityConfig right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(SessionAffinityConfig left, SessionAffinityConfig right);
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public SessionAffinityConfig <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Configuration.SessionAffinityCookieConfig : object {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Domain>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <HttpOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<CookieSecurePolicy> <SecurePolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SameSiteMode> <SameSite>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Expiration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <MaxAge>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsEssential>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public string Path { get; public set; }
    public string Domain { get; public set; }
    public Nullable`1<bool> HttpOnly { get; public set; }
    public Nullable`1<CookieSecurePolicy> SecurePolicy { get; public set; }
    public Nullable`1<SameSiteMode> SameSite { get; public set; }
    public Nullable`1<TimeSpan> Expiration { get; public set; }
    public Nullable`1<TimeSpan> MaxAge { get; public set; }
    public Nullable`1<bool> IsEssential { get; public set; }
    [CompilerGeneratedAttribute]
private SessionAffinityCookieConfig(SessionAffinityCookieConfig original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_Domain();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Domain(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_HttpOnly();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HttpOnly(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<CookieSecurePolicy> get_SecurePolicy();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SecurePolicy(Nullable`1<CookieSecurePolicy> value);
    [CompilerGeneratedAttribute]
public Nullable`1<SameSiteMode> get_SameSite();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SameSite(Nullable`1<SameSiteMode> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_Expiration();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Expiration(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_MaxAge();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MaxAge(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsEssential();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsEssential(Nullable`1<bool> value);
    public sealed virtual bool Equals(SessionAffinityCookieConfig other);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(SessionAffinityCookieConfig left, SessionAffinityCookieConfig right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(SessionAffinityCookieConfig left, SessionAffinityCookieConfig right);
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public SessionAffinityCookieConfig <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Configuration.WebProxyConfig : object {
    [CompilerGeneratedAttribute]
private Uri <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <BypassOnLocal>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseDefaultCredentials>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public Uri Address { get; public set; }
    public Nullable`1<bool> BypassOnLocal { get; public set; }
    public Nullable`1<bool> UseDefaultCredentials { get; public set; }
    [CompilerGeneratedAttribute]
private WebProxyConfig(WebProxyConfig original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public Uri get_Address();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Address(Uri value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_BypassOnLocal();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_BypassOnLocal(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UseDefaultCredentials();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_UseDefaultCredentials(Nullable`1<bool> value);
    public sealed virtual bool Equals(WebProxyConfig other);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(WebProxyConfig left, WebProxyConfig right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(WebProxyConfig left, WebProxyConfig right);
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public WebProxyConfig <Clone>$();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Yarp.ReverseProxy.Delegation.DelegationExtensions : object {
    public static string HttpSysDelegationQueueMetadataKey;
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static string GetHttpSysDelegationQueue(DestinationState destination);
    [ExtensionAttribute]
public static bool ShouldUseHttpSysDelegation(DestinationState destination);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Delegation.HttpSysDelegator : object {
    [NullableAttribute("2")]
private IServerDelegationFeature _serverDelegationFeature;
    private ILogger`1<HttpSysDelegator> _logger;
    private ConcurrentDictionary`2<QueueKey, WeakReference`1<DelegationQueue>> _queues;
    private ConditionalWeakTable`2<DestinationState, DelegationQueue> _queuesPerDestination;
    public HttpSysDelegator(IServer server, ILogger`1<HttpSysDelegator> logger);
    public sealed virtual void ResetQueue(string queueName, string urlPrefix);
    public void DelegateRequest(HttpContext context, DestinationState destination);
    private sealed virtual override void Yarp.ReverseProxy.Model.IClusterChangeListener.OnClusterAdded(ClusterState cluster);
    private sealed virtual override void Yarp.ReverseProxy.Model.IClusterChangeListener.OnClusterChanged(ClusterState cluster);
    private sealed virtual override void Yarp.ReverseProxy.Model.IClusterChangeListener.OnClusterRemoved(ClusterState cluster);
    private void AddOrUpdateRules(ClusterState cluster);
    private void RemoveDeadQueueReferences();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Delegation.HttpSysDelegatorMiddleware : object {
    private RequestDelegate _next;
    private ILogger`1<HttpSysDelegatorMiddleware> _logger;
    private HttpSysDelegator _delegator;
    private IRandomFactory _randomFactory;
    public HttpSysDelegatorMiddleware(RequestDelegate next, ILogger`1<HttpSysDelegatorMiddleware> logger, HttpSysDelegator delegator, IRandomFactory randomFactory);
    public Task Invoke(HttpContext context);
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.Delegation.IHttpSysDelegator {
    public abstract virtual void ResetQueue(string queueName, string urlPrefix);
}
internal static class Yarp.ReverseProxy.EventIds : object {
    public static EventId LoadData;
    public static EventId ErrorSignalingChange;
    public static EventId NoClusterFound;
    public static EventId NoAvailableDestinations;
    public static EventId MultipleDestinationsAvailable;
    public static EventId Forwarding;
    public static EventId ExplicitActiveCheckOfAllClustersHealthFailed;
    public static EventId ActiveHealthProbingFailedOnCluster;
    public static EventId ErrorOccuredDuringActiveHealthProbingShutdownOnCluster;
    public static EventId ActiveHealthProbeConstructionFailedOnCluster;
    public static EventId StartingActiveHealthProbingOnCluster;
    public static EventId StoppedActiveHealthProbingOnCluster;
    public static EventId DestinationProbingCompleted;
    public static EventId DestinationProbingFailed;
    public static EventId SendingHealthProbeToEndpointOfDestination;
    public static EventId UnhealthyDestinationIsScheduledForReactivation;
    public static EventId PassiveDestinationHealthResetToUnkownState;
    public static EventId ClusterAdded;
    public static EventId ClusterChanged;
    public static EventId ClusterRemoved;
    public static EventId DestinationAdded;
    public static EventId DestinationChanged;
    public static EventId DestinationRemoved;
    public static EventId RouteAdded;
    public static EventId RouteChanged;
    public static EventId RouteRemoved;
    public static EventId HttpDowngradeDetected;
    public static EventId OperationStarted;
    public static EventId OperationEnded;
    public static EventId OperationFailed;
    public static EventId AffinityResolutionFailedForCluster;
    public static EventId MultipleDestinationsOnClusterToEstablishRequestAffinity;
    public static EventId AffinityCannotBeEstablishedBecauseNoDestinationsFoundOnCluster;
    public static EventId NoDestinationOnClusterToEstablishRequestAffinity;
    public static EventId RequestAffinityKeyDecryptionFailed;
    public static EventId DestinationMatchingToAffinityKeyNotFound;
    public static EventId RequestAffinityHeaderHasMultipleValues;
    public static EventId AffinityResolutionFailureWasHandledProcessingWillBeContinued;
    public static EventId ClusterConfigException;
    public static EventId ErrorReloadingConfig;
    public static EventId ErrorApplyingConfig;
    public static EventId ClientCreated;
    public static EventId ClientReused;
    public static EventId ConfigurationDataConversionFailed;
    public static EventId ForwardingError;
    public static EventId ActiveDestinationHealthStateIsSetToUnhealthy;
    public static EventId ActiveDestinationHealthStateIsSet;
    public static EventId DelegationQueueInitializationFailed;
    public static EventId DelegationQueueNotFound;
    public static EventId DelegationQueueNotInitialized;
    public static EventId DelegatingRequest;
    public static EventId DelegationFailed;
    public static EventId ResponseReceived;
    public static EventId DelegationQueueReset;
    public static EventId Http10RequestVersionDetected;
    private static EventIds();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Forwarder.AutoFlushingStream : Stream {
    private Stream _stream;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public AutoFlushingStream(Stream stream);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Forwarder.AutoFlushingStream/<WriteAsync>d__14")]
public virtual Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Yarp.ReverseProxy.Forwarder.AutoFlushingStream/<WriteAsync>d__15")]
public virtual ValueTask WriteAsync(ReadOnlyMemory`1<byte> buffer, CancellationToken cancellationToken);
    public virtual void Flush();
    public virtual Task FlushAsync(CancellationToken cancellationToken);
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Forwarder.CallbackHttpClientFactory : ForwarderHttpClientFactory {
    private Action`2<ForwarderHttpClientContext, SocketsHttpHandler> _configureClient;
    internal CallbackHttpClientFactory(ILogger`1<ForwarderHttpClientFactory> logger, Action`2<ForwarderHttpClientContext, SocketsHttpHandler> configureClient);
    protected virtual void ConfigureHandler(ForwarderHttpClientContext context, SocketsHttpHandler handler);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Forwarder.EmptyHttpContent : HttpContent {
    protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context);
    protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context, CancellationToken cancellationToken);
    protected virtual bool TryComputeLength(Int64& length);
}
public enum Yarp.ReverseProxy.Forwarder.ForwarderError : Enum {
    public int value__;
    public static ForwarderError None;
    public static ForwarderError Request;
    public static ForwarderError RequestTimedOut;
    public static ForwarderError RequestCanceled;
    public static ForwarderError RequestBodyCanceled;
    public static ForwarderError RequestBodyClient;
    public static ForwarderError RequestBodyDestination;
    public static ForwarderError ResponseHeaders;
    public static ForwarderError ResponseBodyCanceled;
    public static ForwarderError ResponseBodyClient;
    public static ForwarderError ResponseBodyDestination;
    public static ForwarderError UpgradeRequestCanceled;
    public static ForwarderError UpgradeRequestClient;
    public static ForwarderError UpgradeRequestDestination;
    public static ForwarderError UpgradeResponseCanceled;
    public static ForwarderError UpgradeResponseClient;
    public static ForwarderError UpgradeResponseDestination;
    public static ForwarderError NoAvailableDestinations;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Forwarder.ForwarderErrorFeature : object {
    [CompilerGeneratedAttribute]
private ForwarderError <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    public ForwarderError Error { get; }
    public Exception Exception { get; }
    internal ForwarderErrorFeature(ForwarderError error, Exception ex);
    [CompilerGeneratedAttribute]
public sealed virtual ForwarderError get_Error();
    [CompilerGeneratedAttribute]
public sealed virtual Exception get_Exception();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Forwarder.ForwarderHttpClientContext : object {
    [CompilerGeneratedAttribute]
private string <ClusterId>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpClientConfig <OldConfig>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <OldMetadata>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private HttpMessageInvoker <OldClient>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpClientConfig <NewConfig>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <NewMetadata>k__BackingField;
    public string ClusterId { get; public set; }
    public HttpClientConfig OldConfig { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyDictionary`2<string, string> OldMetadata { get; public set; }
    [NullableAttribute("2")]
public HttpMessageInvoker OldClient { get; public set; }
    public HttpClientConfig NewConfig { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyDictionary`2<string, string> NewMetadata { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ClusterId();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ClusterId(string value);
    [CompilerGeneratedAttribute]
public HttpClientConfig get_OldConfig();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_OldConfig(HttpClientConfig value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_OldMetadata();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_OldMetadata(IReadOnlyDictionary`2<string, string> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public HttpMessageInvoker get_OldClient();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_OldClient(HttpMessageInvoker value);
    [CompilerGeneratedAttribute]
public HttpClientConfig get_NewConfig();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NewConfig(HttpClientConfig value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_NewMetadata();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NewMetadata(IReadOnlyDictionary`2<string, string> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Forwarder.ForwarderHttpClientFactory : object {
    private ILogger`1<ForwarderHttpClientFactory> _logger;
    public ForwarderHttpClientFactory(ILogger`1<ForwarderHttpClientFactory> logger);
    public sealed virtual HttpMessageInvoker CreateClient(ForwarderHttpClientContext context);
    protected virtual bool CanReuseOldClient(ForwarderHttpClientContext context);
    protected virtual void ConfigureHandler(ForwarderHttpClientContext context, SocketsHttpHandler handler);
    [NullableContextAttribute("2")]
private static IWebProxy TryCreateWebProxy(WebProxyConfig webProxyConfig);
    protected virtual HttpMessageHandler WrapHandler(ForwarderHttpClientContext context, HttpMessageHandler handler);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Forwarder.ForwarderMiddleware : object {
    private IRandomFactory _randomFactory;
    private RequestDelegate _next;
    private ILogger _logger;
    private IHttpForwarder _forwarder;
    public ForwarderMiddleware(RequestDelegate next, ILogger`1<ForwarderMiddleware> logger, IHttpForwarder forwarder, IRandomFactory randomFactory);
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Forwarder.ForwarderMiddleware/<Invoke>d__5")]
public Task Invoke(HttpContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Forwarder.ForwarderRequestConfig : object {
    [CompilerGeneratedAttribute]
private static ForwarderRequestConfig <Empty>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <ActivityTimeout>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Version <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<HttpVersionPolicy> <VersionPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowResponseBuffering>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public static ForwarderRequestConfig Empty { get; }
    public Nullable`1<TimeSpan> ActivityTimeout { get; public set; }
    [NullableAttribute("2")]
public Version Version { get; public set; }
    public Nullable`1<HttpVersionPolicy> VersionPolicy { get; public set; }
    public Nullable`1<bool> AllowResponseBuffering { get; public set; }
    [CompilerGeneratedAttribute]
private ForwarderRequestConfig(ForwarderRequestConfig original);
    private static ForwarderRequestConfig();
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public static ForwarderRequestConfig get_Empty();
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_ActivityTimeout();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ActivityTimeout(Nullable`1<TimeSpan> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Version get_Version();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Version(Version value);
    [CompilerGeneratedAttribute]
public Nullable`1<HttpVersionPolicy> get_VersionPolicy();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_VersionPolicy(Nullable`1<HttpVersionPolicy> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllowResponseBuffering();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AllowResponseBuffering(Nullable`1<bool> value);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(ForwarderRequestConfig other);
    public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(ForwarderRequestConfig left, ForwarderRequestConfig right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(ForwarderRequestConfig left, ForwarderRequestConfig right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public ForwarderRequestConfig <Clone>$();
}
internal enum Yarp.ReverseProxy.Forwarder.ForwarderStage : Enum {
    public int value__;
    public static ForwarderStage SendAsyncStart;
    public static ForwarderStage SendAsyncStop;
    public static ForwarderStage RequestContentTransferStart;
    public static ForwarderStage ResponseContentTransferStart;
    public static ForwarderStage ResponseUpgrade;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[EventSourceAttribute]
internal class Yarp.ReverseProxy.Forwarder.ForwarderTelemetry : EventSource {
    public static ForwarderTelemetry Log;
    [NullableAttribute("2")]
private IncrementingPollingCounter _startedRequestsPerSecondCounter;
    [NullableAttribute("2")]
private PollingCounter _startedRequestsCounter;
    [NullableAttribute("2")]
private PollingCounter _currentRequestsCounter;
    [NullableAttribute("2")]
private PollingCounter _failedRequestsCounter;
    private long _startedRequests;
    private long _stoppedRequests;
    private long _failedRequests;
    private static ForwarderTelemetry();
    [EventAttribute("1")]
public void ForwarderStart(string destinationPrefix);
    [EventAttribute("2")]
public void ForwarderStop(int statusCode);
    [EventAttribute("3")]
public void ForwarderFailed(ForwarderError error);
    [EventAttribute("4")]
public void ForwarderStage(ForwarderStage stage);
    [EventAttribute("5")]
public void ContentTransferring(bool isRequest, long contentLength, long iops, long readTime, long writeTime);
    [EventAttribute("6")]
public void ContentTransferred(bool isRequest, long contentLength, long iops, long readTime, long writeTime, long firstReadTime);
    [EventAttribute("7")]
public void ForwarderInvoke(string clusterId, string routeId, string destinationId);
    protected virtual void OnEventCommand(EventCommandEventArgs command);
    [NonEventAttribute]
private void WriteEvent(int eventId, bool arg1, long arg2, long arg3, long arg4, long arg5);
    [NonEventAttribute]
private void WriteEvent(int eventId, bool arg1, long arg2, long arg3, long arg4, long arg5, long arg6);
    [CompilerGeneratedAttribute]
private double <OnEventCommand>b__15_0();
    [CompilerGeneratedAttribute]
private double <OnEventCommand>b__15_1();
    [CompilerGeneratedAttribute]
private double <OnEventCommand>b__15_2();
    [CompilerGeneratedAttribute]
private double <OnEventCommand>b__15_3();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Forwarder.HttpForwarder : object {
    private static TimeSpan DefaultTimeout;
    private static Version DefaultVersion;
    private static HttpVersionPolicy DefaultVersionPolicy;
    private ILogger _logger;
    private IClock _clock;
    public HttpForwarder(ILogger`1<HttpForwarder> logger, IClock clock);
    private static HttpForwarder();
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Forwarder.HttpForwarder/<SendAsync>d__6")]
public sealed virtual ValueTask`1<ForwarderError> SendAsync(HttpContext context, string destinationPrefix, HttpMessageInvoker httpClient, ForwarderRequestConfig requestConfig, HttpTransformer transformer);
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Forwarder.HttpForwarder/<CreateRequestMessageAsync>d__7")]
private ValueTask`1<ValueTuple`2<HttpRequestMessage, StreamCopyHttpContent>> CreateRequestMessageAsync(HttpContext context, string destinationPrefix, HttpTransformer transformer, ForwarderRequestConfig requestConfig, bool isStreamingRequest, ActivityCancellationTokenSource activityToken);
    private static void RestoreUpgradeHeaders(HttpContext context, HttpRequestMessage request);
    private StreamCopyHttpContent SetupRequestBodyCopy(HttpContext context, bool isStreamingRequest, ActivityCancellationTokenSource activityToken);
    private ForwarderError HandleRequestBodyFailure(HttpContext context, StreamCopyResult requestBodyCopyResult, Exception requestBodyException, Exception additionalException, bool timedOut);
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Forwarder.HttpForwarder/<HandleRequestFailureAsync>d__11")]
private ValueTask`1<ForwarderError> HandleRequestFailureAsync(HttpContext context, StreamCopyHttpContent requestContent, Exception requestException, HttpTransformer transformer, ActivityCancellationTokenSource requestCancellationSource);
    private static ValueTask`1<bool> CopyResponseStatusAndHeadersAsync(HttpResponseMessage source, HttpContext context, HttpTransformer transformer);
    private static void RestoreUpgradeHeaders(HttpContext context, HttpResponseMessage response);
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Forwarder.HttpForwarder/<HandleUpgradedResponse>d__14")]
private ValueTask`1<ForwarderError> HandleUpgradedResponse(HttpContext context, HttpResponseMessage destinationResponse, ActivityCancellationTokenSource activityCancellationSource);
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Forwarder.HttpForwarder/<CopyResponseBodyAsync>d__15")]
private ValueTask`1<ValueTuple`2<StreamCopyResult, Exception>> CopyResponseBodyAsync(HttpContent destinationResponseContent, Stream clientResponseStream, ActivityCancellationTokenSource activityCancellationSource);
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Forwarder.HttpForwarder/<HandleResponseBodyErrorAsync>d__16")]
private ValueTask`1<ForwarderError> HandleResponseBodyErrorAsync(HttpContext context, StreamCopyHttpContent requestContent, StreamCopyResult responseBodyCopyResult, Exception responseBodyException, ActivityCancellationTokenSource requestCancellationSource);
    private static ValueTask CopyResponseTrailingHeadersAsync(HttpResponseMessage source, HttpContext context, HttpTransformer transformer);
    private void ReportProxyError(HttpContext context, ForwarderError error, Exception ex);
    private static void ResetOrAbort(HttpContext context, bool isCancelled);
    [CompilerGeneratedAttribute]
private ForwarderError <HandleUpgradedResponse>g__ReportResult|14_0(HttpContext context, bool request, StreamCopyResult result, Exception exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Forwarder.HttpTransformer : object {
    public static HttpTransformer Default;
    public static HttpTransformer Empty;
    private static HttpTransformer();
    public virtual ValueTask TransformRequestAsync(HttpContext httpContext, HttpRequestMessage proxyRequest, string destinationPrefix);
    [NullableContextAttribute("0")]
public virtual ValueTask`1<bool> TransformResponseAsync(HttpContext httpContext, HttpResponseMessage proxyResponse);
    public virtual ValueTask TransformResponseTrailersAsync(HttpContext httpContext, HttpResponseMessage proxyResponse);
    private static void CopyResponseHeaders(HttpHeaders source, IHeaderDictionary destination);
}
[NullableContextAttribute("2")]
public interface Yarp.ReverseProxy.Forwarder.IForwarderErrorFeature {
    public ForwarderError Error { get; }
    public Exception Exception { get; }
    public abstract virtual ForwarderError get_Error();
    public abstract virtual Exception get_Exception();
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.Forwarder.IForwarderHttpClientFactory {
    public abstract virtual HttpMessageInvoker CreateClient(ForwarderHttpClientContext context);
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.Forwarder.IHttpForwarder {
    public abstract virtual ValueTask`1<ForwarderError> SendAsync(HttpContext context, string destinationPrefix, HttpMessageInvoker httpClient, ForwarderRequestConfig requestConfig, HttpTransformer transformer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Yarp.ReverseProxy.Forwarder.IHttpForwarderExtensions : object {
    [ExtensionAttribute]
public static ValueTask`1<ForwarderError> SendAsync(IHttpForwarder forwarder, HttpContext context, string destinationPrefix, HttpMessageInvoker httpClient);
    [ExtensionAttribute]
public static ValueTask`1<ForwarderError> SendAsync(IHttpForwarder forwarder, HttpContext context, string destinationPrefix, HttpMessageInvoker httpClient, ForwarderRequestConfig requestConfig);
    [ExtensionAttribute]
public static ValueTask`1<ForwarderError> SendAsync(IHttpForwarder forwarder, HttpContext context, string destinationPrefix, HttpMessageInvoker httpClient, Func`3<HttpContext, HttpRequestMessage, ValueTask> requestTransform);
    [ExtensionAttribute]
public static ValueTask`1<ForwarderError> SendAsync(IHttpForwarder forwarder, HttpContext context, string destinationPrefix, HttpMessageInvoker httpClient, ForwarderRequestConfig requestConfig, Func`3<HttpContext, HttpRequestMessage, ValueTask> requestTransform);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Yarp.ReverseProxy.Forwarder.ProtocolHelper : object {
    internal static Version Http2Version;
    internal static Version Http11Version;
    internal static string GrpcContentType;
    private static ProtocolHelper();
    public static bool IsHttp2(string protocol);
    public static bool IsHttp2OrGreater(string protocol);
    public static string GetHttpProtocol(Version version);
    public static string GetVersionPolicy(HttpVersionPolicy policy);
    [NullableContextAttribute("2")]
public static bool IsGrpcContentType(string contentType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Forwarder.RequestTransformer : HttpTransformer {
    private Func`3<HttpContext, HttpRequestMessage, ValueTask> _requestTransform;
    public RequestTransformer(Func`3<HttpContext, HttpRequestMessage, ValueTask> requestTransform);
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Forwarder.RequestTransformer/<TransformRequestAsync>d__2")]
public virtual ValueTask TransformRequestAsync(HttpContext httpContext, HttpRequestMessage proxyRequest, string destinationPrefix);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private ValueTask <>n__0(HttpContext httpContext, HttpRequestMessage proxyRequest, string destinationPrefix);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Yarp.ReverseProxy.Forwarder.RequestUtilities : object {
    private static HashSet`1<string> _headersToExclude;
    private static HashSet`1<string> _contentHeaders;
    private static UInt32[] ValidPathChars;
    private static RequestUtilities();
    internal static HttpMethod GetHttpMethod(string method);
    internal static bool ShouldSkipRequestHeader(string headerName);
    internal static bool ShouldSkipResponseHeader(string headerName);
    public static Uri MakeDestinationAddress(string destinationPrefix, PathString path, QueryString query);
    private static string EncodePath(PathString path);
    private static string EncodePath(string value, int i);
    internal static bool IsValidPathChar(char c);
    internal static void AddHeader(HttpRequestMessage request, string headerName, StringValues value);
    internal static void RemoveHeader(HttpRequestMessage request, string headerName);
    internal static StringValues Concat(StringValues& existing, HeaderStringValues& values);
    internal static bool TryGetValues(HttpHeaders headers, string headerName, StringValues& values);
    internal static bool ContainsHeader(HttpHeaders headers, string headerName);
    [CompilerGeneratedAttribute]
internal static bool <AddHeader>g__ContainsNewLines|10_0(string value);
    [CompilerGeneratedAttribute]
internal static StringValues <Concat>g__ConcatSlow|12_0(StringValues& existing, HeaderStringValues& values);
    [CompilerGeneratedAttribute]
internal static StringValues <TryGetValues>g__ToArray|13_0(HeaderStringValues& values);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Forwarder.ReverseProxyPropagator : DistributedContextPropagator {
    private DistributedContextPropagator _innerPropagator;
    private String[] _headersToRemove;
    public IReadOnlyCollection`1<string> Fields { get; }
    public ReverseProxyPropagator(DistributedContextPropagator innerPropagator);
    [NullableContextAttribute("2")]
public virtual void Inject(Activity activity, object carrier, PropagatorSetterCallback setter);
    [NullableContextAttribute("2")]
public virtual void ExtractTraceIdAndState(object carrier, PropagatorGetterCallback getter, String& traceId, String& traceState);
    [NullableContextAttribute("2")]
public virtual IEnumerable`1<KeyValuePair`2<string, string>> ExtractBaggage(object carrier, PropagatorGetterCallback getter);
    public virtual IReadOnlyCollection`1<string> get_Fields();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Yarp.ReverseProxy.Forwarder.StreamCopier : object {
    private static int DefaultBufferSize;
    public static long UnknownLength;
    public static ValueTask`1<ValueTuple`2<StreamCopyResult, Exception>> CopyAsync(bool isRequest, Stream input, Stream output, long promisedContentLength, IClock clock, ActivityCancellationTokenSource activityToken, CancellationToken cancellation);
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Forwarder.StreamCopier/<CopyAsync>d__3")]
private static ValueTask`1<ValueTuple`2<StreamCopyResult, Exception>> CopyAsync(Stream input, Stream output, long promisedContentLength, StreamCopierTelemetry telemetry, ActivityCancellationTokenSource activityToken, CancellationToken cancellation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Forwarder.StreamCopyHttpContent : HttpContent {
    private HttpContext _context;
    private bool _isStreamingRequest;
    private IClock _clock;
    private ILogger _logger;
    private ActivityCancellationTokenSource _activityToken;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private TaskCompletionSource`1<ValueTuple`2<StreamCopyResult, Exception>> _tcs;
    private int _started;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Task`1<ValueTuple`2<StreamCopyResult, Exception>> ConsumptionTask { get; }
    public bool Started { get; }
    public bool InProgress { get; }
    public StreamCopyHttpContent(HttpContext context, bool isStreamingRequest, IClock clock, ILogger logger, ActivityCancellationTokenSource activityToken);
    public Task`1<ValueTuple`2<StreamCopyResult, Exception>> get_ConsumptionTask();
    public bool get_Started();
    public bool get_InProgress();
    protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context);
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Forwarder.StreamCopyHttpContent/<SerializeToStreamAsync>d__15")]
protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context, CancellationToken cancellationToken);
    protected virtual Task`1<Stream> CreateContentReadStreamAsync();
    protected virtual bool TryComputeLength(Int64& length);
    private void DisableMinRequestBodyDataRateAndMaxRequestBodySize(HttpContext httpContext);
}
internal enum Yarp.ReverseProxy.Forwarder.StreamCopyResult : Enum {
    public int value__;
    public static StreamCopyResult Success;
    public static StreamCopyResult InputError;
    public static StreamCopyResult OutputError;
    public static StreamCopyResult Canceled;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Health.ActiveHealthCheckMonitor : object {
    private ActiveHealthCheckMonitorOptions _monitorOptions;
    private IDictionary`2<string, IActiveHealthCheckPolicy> _policies;
    private IProbingRequestFactory _probingRequestFactory;
    private ILogger`1<ActiveHealthCheckMonitor> _logger;
    [CompilerGeneratedAttribute]
private bool <InitialProbeCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private EntityActionScheduler`1<ClusterState> <Scheduler>k__BackingField;
    public bool InitialProbeCompleted { get; private set; }
    internal EntityActionScheduler`1<ClusterState> Scheduler { get; }
    public ActiveHealthCheckMonitor(IOptions`1<ActiveHealthCheckMonitorOptions> monitorOptions, IEnumerable`1<IActiveHealthCheckPolicy> policies, IProbingRequestFactory probingRequestFactory, ITimerFactory timerFactory, ILogger`1<ActiveHealthCheckMonitor> logger);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_InitialProbeCompleted();
    [CompilerGeneratedAttribute]
private void set_InitialProbeCompleted(bool value);
    [CompilerGeneratedAttribute]
internal EntityActionScheduler`1<ClusterState> get_Scheduler();
    public sealed virtual Task CheckHealthAsync(IEnumerable`1<ClusterState> clusters);
    public sealed virtual void OnClusterAdded(ClusterState cluster);
    public sealed virtual void OnClusterChanged(ClusterState cluster);
    public sealed virtual void OnClusterRemoved(ClusterState cluster);
    public sealed virtual void Dispose();
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Health.ActiveHealthCheckMonitor/<ProbeCluster>d__17")]
private Task ProbeCluster(ClusterState cluster);
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Health.ActiveHealthCheckMonitor/<ProbeDestinationAsync>d__18")]
private Task`1<DestinationProbingResult> ProbeDestinationAsync(ClusterState cluster, DestinationState destination, TimeSpan timeout);
    [CompilerGeneratedAttribute]
private Task <.ctor>b__4_1(ClusterState cluster);
}
public class Yarp.ReverseProxy.Health.ActiveHealthCheckMonitorOptions : object {
    [CompilerGeneratedAttribute]
private TimeSpan <DefaultInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <DefaultTimeout>k__BackingField;
    public TimeSpan DefaultInterval { get; public set; }
    public TimeSpan DefaultTimeout { get; public set; }
    [CompilerGeneratedAttribute]
public TimeSpan get_DefaultInterval();
    [CompilerGeneratedAttribute]
public void set_DefaultInterval(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_DefaultTimeout();
    [CompilerGeneratedAttribute]
public void set_DefaultTimeout(TimeSpan value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Health.ClusterDestinationsUpdater : object {
    private ConditionalWeakTable`2<ClusterState, SemaphoreSlim> _clusterLocks;
    private IDictionary`2<string, IAvailableDestinationsPolicy> _destinationPolicies;
    public ClusterDestinationsUpdater(IEnumerable`1<IAvailableDestinationsPolicy> destinationPolicies);
    public sealed virtual void UpdateAvailableDestinations(ClusterState cluster);
    public sealed virtual void UpdateAllDestinations(ClusterState cluster);
    private void UpdateInternal(ClusterState cluster, IReadOnlyList`1<DestinationState> allDestinations, bool force);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Health.ConsecutiveFailuresHealthPolicy : object {
    private ConsecutiveFailuresHealthPolicyOptions _options;
    private ConditionalWeakTable`2<ClusterState, ParsedMetadataEntry`1<double>> _clusterThresholds;
    private ConditionalWeakTable`2<DestinationState, AtomicCounter> _failureCounters;
    private IDestinationHealthUpdater _healthUpdater;
    public string Name { get; }
    public ConsecutiveFailuresHealthPolicy(IOptions`1<ConsecutiveFailuresHealthPolicyOptions> options, IDestinationHealthUpdater healthUpdater);
    public sealed virtual string get_Name();
    public sealed virtual void ProbingCompleted(ClusterState cluster, IReadOnlyList`1<DestinationProbingResult> probingResults);
    private double GetFailureThreshold(ClusterState cluster);
    private static DestinationHealth EvaluateHealthState(double threshold, HttpResponseMessage response, AtomicCounter count);
    private static bool TryParse(string stringValue, Double& parsedValue);
}
public class Yarp.ReverseProxy.Health.ConsecutiveFailuresHealthPolicyOptions : object {
    [NullableAttribute("1")]
public static string ThresholdMetadataName;
    [CompilerGeneratedAttribute]
private long <DefaultThreshold>k__BackingField;
    public long DefaultThreshold { get; public set; }
    private static ConsecutiveFailuresHealthPolicyOptions();
    [CompilerGeneratedAttribute]
public long get_DefaultThreshold();
    [CompilerGeneratedAttribute]
public void set_DefaultThreshold(long value);
}
internal class Yarp.ReverseProxy.Health.DefaultProbingRequestFactory : object {
    [NullableAttribute("2")]
private static string _version;
    [NullableAttribute("1")]
private static string _defaultUserAgent;
    private static DefaultProbingRequestFactory();
    [NullableContextAttribute("1")]
public sealed virtual HttpRequestMessage CreateRequest(ClusterModel cluster, DestinationModel destination);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Health.DestinationHealthUpdater : object {
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private EntityActionScheduler`1<ValueTuple`2<ClusterState, DestinationState>> _scheduler;
    private IClusterDestinationsUpdater _clusterUpdater;
    private ILogger`1<DestinationHealthUpdater> _logger;
    public DestinationHealthUpdater(ITimerFactory timerFactory, IClusterDestinationsUpdater clusterDestinationsUpdater, ILogger`1<DestinationHealthUpdater> logger);
    public sealed virtual void SetActive(ClusterState cluster, IEnumerable`1<NewActiveDestinationHealth> newHealthPairs);
    public sealed virtual void SetPassive(ClusterState cluster, DestinationState destination, DestinationHealth newHealth, TimeSpan reactivationPeriod);
    internal Task SetPassiveAsync(ClusterState cluster, DestinationState destination, DestinationHealth newHealth, TimeSpan reactivationPeriod);
    private void UpdateDestinations(object cluster);
    private void ScheduleReactivation(ClusterState cluster, DestinationState destination, DestinationHealth newHealth, TimeSpan reactivationPeriod);
    public sealed virtual void Dispose();
    private Task Reactivate(ClusterState cluster, DestinationState destination);
    [CompilerGeneratedAttribute]
private Task <.ctor>b__3_0(ValueTuple`2<ClusterState, DestinationState> d);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void <SetPassiveAsync>b__6_0(object c);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Yarp.ReverseProxy.Health.DestinationProbingResult : ValueType {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private DestinationState <Destination>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpResponseMessage <Response>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [NullableAttribute("1")]
public DestinationState Destination { get; }
    public HttpResponseMessage Response { get; }
    public Exception Exception { get; }
    public DestinationProbingResult(DestinationState destination, HttpResponseMessage response, Exception exception);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public DestinationState get_Destination();
    [CompilerGeneratedAttribute]
public HttpResponseMessage get_Response();
    [CompilerGeneratedAttribute]
public Exception get_Exception();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Health.EntityActionScheduler`1 : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<T, SchedulerEntry<T>> _entries;
    private WeakReference`1<EntityActionScheduler`1<T>> _weakThisRef;
    private Func`2<T, Task> _action;
    private bool _runOnce;
    private ITimerFactory _timerFactory;
    private static int NotStarted;
    private static int Started;
    private static int Disposed;
    private int _status;
    public EntityActionScheduler`1(Func`2<T, Task> action, bool autoStart, bool runOnce, ITimerFactory timerFactory);
    public sealed virtual void Dispose();
    public void Start();
    public void ScheduleEntity(T entity, TimeSpan period);
    public void ChangePeriod(T entity, TimeSpan newPeriod);
    public void UnscheduleEntity(T entity);
    public bool IsScheduled(T entity);
}
public static class Yarp.ReverseProxy.Health.HealthCheckConstants : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Health.HealthyAndUnknownDestinationsPolicy : object {
    public string Name { get; }
    public virtual string get_Name();
    public virtual IReadOnlyList`1<DestinationState> GetAvailalableDestinations(ClusterConfig config, IReadOnlyList`1<DestinationState> allDestinations);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Health.HealthyOrPanicDestinationsPolicy : HealthyAndUnknownDestinationsPolicy {
    public string Name { get; }
    public virtual string get_Name();
    public virtual IReadOnlyList`1<DestinationState> GetAvailalableDestinations(ClusterConfig config, IReadOnlyList`1<DestinationState> allDestinations);
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.Health.IActiveHealthCheckMonitor {
    public bool InitialProbeCompleted { get; }
    public abstract virtual bool get_InitialProbeCompleted();
    public abstract virtual Task CheckHealthAsync(IEnumerable`1<ClusterState> clusters);
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.Health.IActiveHealthCheckPolicy {
    public string Name { get; }
    public abstract virtual string get_Name();
    public abstract virtual void ProbingCompleted(ClusterState cluster, IReadOnlyList`1<DestinationProbingResult> probingResults);
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.Health.IAvailableDestinationsPolicy {
    public string Name { get; }
    public abstract virtual string get_Name();
    public abstract virtual IReadOnlyList`1<DestinationState> GetAvailalableDestinations(ClusterConfig config, IReadOnlyList`1<DestinationState> allDestinations);
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.Health.IClusterDestinationsUpdater {
    public abstract virtual void UpdateAvailableDestinations(ClusterState cluster);
    public abstract virtual void UpdateAllDestinations(ClusterState cluster);
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.Health.IDestinationHealthUpdater {
    public abstract virtual void SetPassive(ClusterState cluster, DestinationState destination, DestinationHealth newHealth, TimeSpan reactivationPeriod);
    public abstract virtual void SetActive(ClusterState cluster, IEnumerable`1<NewActiveDestinationHealth> newHealthStates);
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.Health.IPassiveHealthCheckPolicy {
    public string Name { get; }
    public abstract virtual string get_Name();
    public abstract virtual void RequestProxied(HttpContext context, ClusterState cluster, DestinationState destination);
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.Health.IProbingRequestFactory {
    public abstract virtual HttpRequestMessage CreateRequest(ClusterModel cluster, DestinationModel destination);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Yarp.ReverseProxy.Health.NewActiveDestinationHealth : ValueType {
    [CompilerGeneratedAttribute]
private DestinationState <Destination>k__BackingField;
    [CompilerGeneratedAttribute]
private DestinationHealth <NewActiveHealth>k__BackingField;
    public DestinationState Destination { get; }
    public DestinationHealth NewActiveHealth { get; }
    public NewActiveDestinationHealth(DestinationState destination, DestinationHealth newActiveHealth);
    [CompilerGeneratedAttribute]
public DestinationState get_Destination();
    [CompilerGeneratedAttribute]
public DestinationHealth get_NewActiveHealth();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Health.PassiveHealthCheckMiddleware : object {
    private RequestDelegate _next;
    private IDictionary`2<string, IPassiveHealthCheckPolicy> _policies;
    public PassiveHealthCheckMiddleware(RequestDelegate next, IEnumerable`1<IPassiveHealthCheckPolicy> policies);
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Health.PassiveHealthCheckMiddleware/<Invoke>d__3")]
public Task Invoke(HttpContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Health.TransportFailureRateHealthPolicy : object {
    private static TimeSpan _defaultReactivationPeriod;
    private IDestinationHealthUpdater _healthUpdater;
    private TransportFailureRateHealthPolicyOptions _policyOptions;
    private IClock _clock;
    private ConditionalWeakTable`2<ClusterState, ParsedMetadataEntry`1<double>> _clusterFailureRateLimits;
    private ConditionalWeakTable`2<DestinationState, ProxiedRequestHistory> _requestHistories;
    public string Name { get; }
    public TransportFailureRateHealthPolicy(IOptions`1<TransportFailureRateHealthPolicyOptions> policyOptions, IClock clock, IDestinationHealthUpdater healthUpdater);
    private static TransportFailureRateHealthPolicy();
    public sealed virtual string get_Name();
    public sealed virtual void RequestProxied(HttpContext context, ClusterState cluster, DestinationState destination);
    private DestinationHealth EvaluateProxiedRequest(ClusterState cluster, DestinationState destination, bool failed);
    private static bool TryParse(string stringValue, Double& parsedValue);
    private static bool DetermineIfDestinationFailed(HttpContext context);
}
public class Yarp.ReverseProxy.Health.TransportFailureRateHealthPolicyOptions : object {
    [NullableAttribute("1")]
public static string FailureRateLimitMetadataName;
    [CompilerGeneratedAttribute]
private TimeSpan <DetectionWindowSize>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MinimalTotalCountThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private double <DefaultFailureRateLimit>k__BackingField;
    public TimeSpan DetectionWindowSize { get; public set; }
    public int MinimalTotalCountThreshold { get; public set; }
    public double DefaultFailureRateLimit { get; public set; }
    private static TransportFailureRateHealthPolicyOptions();
    [CompilerGeneratedAttribute]
public TimeSpan get_DetectionWindowSize();
    [CompilerGeneratedAttribute]
public void set_DetectionWindowSize(TimeSpan value);
    [CompilerGeneratedAttribute]
public int get_MinimalTotalCountThreshold();
    [CompilerGeneratedAttribute]
public void set_MinimalTotalCountThreshold(int value);
    [CompilerGeneratedAttribute]
public double get_DefaultFailureRateLimit();
    [CompilerGeneratedAttribute]
public void set_DefaultFailureRateLimit(double value);
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.IProxyStateLookup {
    public abstract virtual bool TryGetRoute(string id, RouteModel& route);
    public abstract virtual IEnumerable`1<RouteModel> GetRoutes();
    public abstract virtual bool TryGetCluster(string id, ClusterState& cluster);
    public abstract virtual IEnumerable`1<ClusterState> GetClusters();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.LoadBalancing.FirstLoadBalancingPolicy : object {
    public string Name { get; }
    public sealed virtual string get_Name();
    public sealed virtual DestinationState PickDestination(HttpContext context, ClusterState cluster, IReadOnlyList`1<DestinationState> availableDestinations);
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.LoadBalancing.ILoadBalancingPolicy {
    public string Name { get; }
    public abstract virtual string get_Name();
    public abstract virtual DestinationState PickDestination(HttpContext context, ClusterState cluster, IReadOnlyList`1<DestinationState> availableDestinations);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.LoadBalancing.LeastRequestsLoadBalancingPolicy : object {
    public string Name { get; }
    public sealed virtual string get_Name();
    public sealed virtual DestinationState PickDestination(HttpContext context, ClusterState cluster, IReadOnlyList`1<DestinationState> availableDestinations);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.LoadBalancing.LoadBalancingMiddleware : object {
    private ILogger _logger;
    private IDictionary`2<string, ILoadBalancingPolicy> _loadBalancingPolicies;
    private RequestDelegate _next;
    public LoadBalancingMiddleware(RequestDelegate next, ILogger`1<LoadBalancingMiddleware> logger, IEnumerable`1<ILoadBalancingPolicy> loadBalancingPolicies);
    public Task Invoke(HttpContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Yarp.ReverseProxy.LoadBalancing.LoadBalancingPolicies : object {
    public static string FirstAlphabetical { get; }
    public static string Random { get; }
    public static string RoundRobin { get; }
    public static string LeastRequests { get; }
    public static string PowerOfTwoChoices { get; }
    public static string get_FirstAlphabetical();
    public static string get_Random();
    public static string get_RoundRobin();
    public static string get_LeastRequests();
    public static string get_PowerOfTwoChoices();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.LoadBalancing.PowerOfTwoChoicesLoadBalancingPolicy : object {
    private IRandomFactory _randomFactory;
    public string Name { get; }
    public PowerOfTwoChoicesLoadBalancingPolicy(IRandomFactory randomFactory);
    public sealed virtual string get_Name();
    public sealed virtual DestinationState PickDestination(HttpContext context, ClusterState cluster, IReadOnlyList`1<DestinationState> availableDestinations);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.LoadBalancing.RandomLoadBalancingPolicy : object {
    private IRandomFactory _randomFactory;
    public string Name { get; }
    public RandomLoadBalancingPolicy(IRandomFactory randomFactory);
    public sealed virtual string get_Name();
    public sealed virtual DestinationState PickDestination(HttpContext context, ClusterState cluster, IReadOnlyList`1<DestinationState> availableDestinations);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.LoadBalancing.RoundRobinLoadBalancingPolicy : object {
    private ConditionalWeakTable`2<ClusterState, AtomicCounter> _counters;
    public string Name { get; }
    public sealed virtual string get_Name();
    public sealed virtual DestinationState PickDestination(HttpContext context, ClusterState cluster, IReadOnlyList`1<DestinationState> availableDestinations);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Yarp.ReverseProxy.Management.IReverseProxyBuilderExtensions : object {
    [ExtensionAttribute]
public static IReverseProxyBuilder AddConfigBuilder(IReverseProxyBuilder builder);
    [ExtensionAttribute]
public static IReverseProxyBuilder AddRuntimeStateManagers(IReverseProxyBuilder builder);
    [ExtensionAttribute]
public static IReverseProxyBuilder AddConfigManager(IReverseProxyBuilder builder);
    [ExtensionAttribute]
public static IReverseProxyBuilder AddProxy(IReverseProxyBuilder builder);
    [ExtensionAttribute]
public static IReverseProxyBuilder AddLoadBalancingPolicies(IReverseProxyBuilder builder);
    [ExtensionAttribute]
public static IReverseProxyBuilder AddSessionAffinityPolicies(IReverseProxyBuilder builder);
    [ExtensionAttribute]
public static IReverseProxyBuilder AddActiveHealthChecks(IReverseProxyBuilder builder);
    [ExtensionAttribute]
public static IReverseProxyBuilder AddPassiveHealthCheck(IReverseProxyBuilder builder);
    [ExtensionAttribute]
public static IReverseProxyBuilder AddHttpSysDelegation(IReverseProxyBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Management.ProxyConfigManager : EndpointDataSource {
    private static IReadOnlyDictionary`2<string, ClusterConfig> _emptyClusterDictionary;
    private object _syncRoot;
    private ILogger`1<ProxyConfigManager> _logger;
    private IProxyConfigProvider[] _providers;
    private ConfigState[] _configs;
    private IClusterChangeListener[] _clusterChangeListeners;
    private ConcurrentDictionary`2<string, ClusterState> _clusters;
    private ConcurrentDictionary`2<string, RouteState> _routes;
    private IProxyConfigFilter[] _filters;
    private IConfigValidator _configValidator;
    private IForwarderHttpClientFactory _httpClientFactory;
    private ProxyEndpointFactory _proxyEndpointFactory;
    private ITransformBuilder _transformBuilder;
    private List`1<Action`1<EndpointBuilder>> _conventions;
    private IActiveHealthCheckMonitor _activeHealthCheckMonitor;
    private IClusterDestinationsUpdater _clusterDestinationsUpdater;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<Endpoint> _endpoints;
    private CancellationTokenSource _endpointsChangeSource;
    private IChangeToken _endpointsChangeToken;
    private CancellationTokenSource _configChangeSource;
    [CompilerGeneratedAttribute]
private ReverseProxyConventionBuilder <DefaultBuilder>k__BackingField;
    public ReverseProxyConventionBuilder DefaultBuilder { get; }
    public IReadOnlyList`1<Endpoint> Endpoints { get; }
    public ProxyConfigManager(ILogger`1<ProxyConfigManager> logger, IEnumerable`1<IProxyConfigProvider> providers, IEnumerable`1<IClusterChangeListener> clusterChangeListeners, IEnumerable`1<IProxyConfigFilter> filters, IConfigValidator configValidator, ProxyEndpointFactory proxyEndpointFactory, ITransformBuilder transformBuilder, IForwarderHttpClientFactory httpClientFactory, IActiveHealthCheckMonitor activeHealthCheckMonitor, IClusterDestinationsUpdater clusterDestinationsUpdater);
    private static ProxyConfigManager();
    [CompilerGeneratedAttribute]
public ReverseProxyConventionBuilder get_DefaultBuilder();
    public virtual IReadOnlyList`1<Endpoint> get_Endpoints();
    [MemberNotNullAttribute("_endpoints")]
private void CreateEndpoints();
    public virtual IChangeToken GetChangeToken();
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Management.ProxyConfigManager/<InitialLoadAsync>d__28")]
internal Task`1<EndpointDataSource> InitialLoadAsync();
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Management.ProxyConfigManager/<ReloadConfigAsync>d__29")]
private Task ReloadConfigAsync();
    private static void ValidateConfigProperties(IProxyConfig config);
    private void ListenForConfigChanges();
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Management.ProxyConfigManager/<ApplyConfigAsync>d__32")]
private Task`1<bool> ApplyConfigAsync(IReadOnlyList`1<RouteConfig> routes, IReadOnlyList`1<ClusterConfig> clusters);
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Management.ProxyConfigManager/<VerifyRoutesAsync>d__33")]
private Task`1<ValueTuple`2<IList`1<RouteConfig>, IList`1<Exception>>> VerifyRoutesAsync(IReadOnlyList`1<RouteConfig> routes, IReadOnlyDictionary`2<string, ClusterConfig> clusters, CancellationToken cancellation);
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Management.ProxyConfigManager/<VerifyClustersAsync>d__34")]
private Task`1<ValueTuple`2<IReadOnlyDictionary`2<string, ClusterConfig>, IList`1<Exception>>> VerifyClustersAsync(IReadOnlyList`1<ClusterConfig> clusters, CancellationToken cancellation);
    private void UpdateRuntimeClusters(IEnumerable`1<ClusterConfig> incomingClusters);
    private bool UpdateRuntimeDestinations(IReadOnlyDictionary`2<string, DestinationConfig> incomingDestinations, ConcurrentDictionary`2<string, DestinationState> currentDestinations);
    private bool UpdateRuntimeRoutes(IList`1<RouteConfig> incomingRoutes);
    [MemberNotNullAttribute("_endpoints")]
private void UpdateEndpoints(List`1<Endpoint> endpoints);
    private RouteModel BuildRouteModel(RouteConfig source, ClusterState cluster);
    public sealed virtual bool TryGetRoute(string id, RouteModel& route);
    [IteratorStateMachineAttribute("Yarp.ReverseProxy.Management.ProxyConfigManager/<GetRoutes>d__41")]
public sealed virtual IEnumerable`1<RouteModel> GetRoutes();
    public sealed virtual bool TryGetCluster(string id, ClusterState& cluster);
    [IteratorStateMachineAttribute("Yarp.ReverseProxy.Management.ProxyConfigManager/<GetClusters>d__43")]
public sealed virtual IEnumerable`1<ClusterState> GetClusters();
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
internal static void <ListenForConfigChanges>g__SignalChange|31_0(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal static void <ListenForConfigChanges>g__ReloadConfig|31_1(object state);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Management.ReverseProxyBuilder : object {
    [CompilerGeneratedAttribute]
private IServiceCollection <Services>k__BackingField;
    public IServiceCollection Services { get; }
    public ReverseProxyBuilder(IServiceCollection services);
    [CompilerGeneratedAttribute]
public sealed virtual IServiceCollection get_Services();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Model.ClusterDestinationsState : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<DestinationState> <AllDestinations>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<DestinationState> <AvailableDestinations>k__BackingField;
    public IReadOnlyList`1<DestinationState> AllDestinations { get; }
    public IReadOnlyList`1<DestinationState> AvailableDestinations { get; }
    public ClusterDestinationsState(IReadOnlyList`1<DestinationState> allDestinations, IReadOnlyList`1<DestinationState> availableDestinations);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<DestinationState> get_AllDestinations();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<DestinationState> get_AvailableDestinations();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Model.ClusterModel : object {
    [CompilerGeneratedAttribute]
private ClusterConfig <Config>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpMessageInvoker <HttpClient>k__BackingField;
    public ClusterConfig Config { get; }
    public HttpMessageInvoker HttpClient { get; }
    public ClusterModel(ClusterConfig config, HttpMessageInvoker httpClient);
    [CompilerGeneratedAttribute]
public ClusterConfig get_Config();
    [CompilerGeneratedAttribute]
public HttpMessageInvoker get_HttpClient();
    internal bool HasConfigChanged(ClusterModel newModel);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Model.ClusterState : object {
    private ClusterDestinationsState modreq(System.Runtime.CompilerServices.IsVolatile) _destinationsState;
    private ClusterModel modreq(System.Runtime.CompilerServices.IsVolatile) _model;
    [CompilerGeneratedAttribute]
private string <ClusterId>k__BackingField;
    [CompilerGeneratedAttribute]
private ConcurrentDictionary`2<string, DestinationState> <Destinations>k__BackingField;
    [CompilerGeneratedAttribute]
private AtomicCounter <ConcurrencyCounter>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Revision>k__BackingField;
    public string ClusterId { get; }
    public ClusterModel Model { get; internal set; }
    public ConcurrentDictionary`2<string, DestinationState> Destinations { get; }
    public ClusterDestinationsState DestinationsState { get; public set; }
    internal AtomicCounter ConcurrencyCounter { get; }
    internal int Revision { get; internal set; }
    public ClusterState(string clusterId);
    [CompilerGeneratedAttribute]
public string get_ClusterId();
    public ClusterModel get_Model();
    internal void set_Model(ClusterModel value);
    [CompilerGeneratedAttribute]
public ConcurrentDictionary`2<string, DestinationState> get_Destinations();
    public ClusterDestinationsState get_DestinationsState();
    public void set_DestinationsState(ClusterDestinationsState value);
    [CompilerGeneratedAttribute]
internal AtomicCounter get_ConcurrencyCounter();
    [CompilerGeneratedAttribute]
internal int get_Revision();
    [CompilerGeneratedAttribute]
internal void set_Revision(int value);
}
public enum Yarp.ReverseProxy.Model.DestinationHealth : Enum {
    public int value__;
    public static DestinationHealth Unknown;
    public static DestinationHealth Healthy;
    public static DestinationHealth Unhealthy;
}
public class Yarp.ReverseProxy.Model.DestinationHealthState : object {
    private DestinationHealth modreq(System.Runtime.CompilerServices.IsVolatile) _active;
    private DestinationHealth modreq(System.Runtime.CompilerServices.IsVolatile) _passive;
    public DestinationHealth Passive { get; public set; }
    public DestinationHealth Active { get; public set; }
    public DestinationHealth get_Passive();
    public void set_Passive(DestinationHealth value);
    public DestinationHealth get_Active();
    public void set_Active(DestinationHealth value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Model.DestinationModel : object {
    [CompilerGeneratedAttribute]
private DestinationConfig <Config>k__BackingField;
    public DestinationConfig Config { get; }
    public DestinationModel(DestinationConfig destination);
    [CompilerGeneratedAttribute]
public DestinationConfig get_Config();
    internal bool HasChanged(DestinationConfig destination);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Model.DestinationState : object {
    private DestinationModel modreq(System.Runtime.CompilerServices.IsVolatile) _model;
    [CompilerGeneratedAttribute]
private string <DestinationId>k__BackingField;
    [CompilerGeneratedAttribute]
private DestinationHealthState <Health>k__BackingField;
    [CompilerGeneratedAttribute]
private AtomicCounter <ConcurrencyCounter>k__BackingField;
    public string DestinationId { get; }
    public DestinationModel Model { get; internal set; }
    public DestinationHealthState Health { get; }
    public int ConcurrentRequestCount { get; public set; }
    internal AtomicCounter ConcurrencyCounter { get; }
    private DestinationState System.Collections.Generic.IReadOnlyList<Yarp.ReverseProxy.Model.DestinationState>.Item { get; }
    private int System.Collections.Generic.IReadOnlyCollection<Yarp.ReverseProxy.Model.DestinationState>.Count { get; }
    public DestinationState(string destinationId);
    [CompilerGeneratedAttribute]
public string get_DestinationId();
    public DestinationModel get_Model();
    internal void set_Model(DestinationModel value);
    [CompilerGeneratedAttribute]
public DestinationHealthState get_Health();
    public int get_ConcurrentRequestCount();
    public void set_ConcurrentRequestCount(int value);
    [CompilerGeneratedAttribute]
internal AtomicCounter get_ConcurrencyCounter();
    private sealed virtual override DestinationState System.Collections.Generic.IReadOnlyList<Yarp.ReverseProxy.Model.DestinationState>.get_Item(int index);
    private sealed virtual override int System.Collections.Generic.IReadOnlyCollection<Yarp.ReverseProxy.Model.DestinationState>.get_Count();
    private Enumerator GetEnumerator();
    private sealed virtual override IEnumerator`1<DestinationState> System.Collections.Generic.IEnumerable<Yarp.ReverseProxy.Model.DestinationState>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.Model.IClusterChangeListener {
    public abstract virtual void OnClusterAdded(ClusterState cluster);
    public abstract virtual void OnClusterChanged(ClusterState cluster);
    public abstract virtual void OnClusterRemoved(ClusterState cluster);
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.Model.IReverseProxyFeature {
    public RouteModel Route { get; }
    public ClusterModel Cluster { get; }
    public IReadOnlyList`1<DestinationState> AllDestinations { get; }
    public IReadOnlyList`1<DestinationState> AvailableDestinations { get; public set; }
    [NullableAttribute("2")]
public DestinationState ProxiedDestination { get; public set; }
    public abstract virtual RouteModel get_Route();
    public abstract virtual ClusterModel get_Cluster();
    public abstract virtual IReadOnlyList`1<DestinationState> get_AllDestinations();
    public abstract virtual IReadOnlyList`1<DestinationState> get_AvailableDestinations();
    public abstract virtual void set_AvailableDestinations(IReadOnlyList`1<DestinationState> value);
    [NullableContextAttribute("2")]
public abstract virtual DestinationState get_ProxiedDestination();
    [NullableContextAttribute("2")]
public abstract virtual void set_ProxiedDestination(DestinationState value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Model.ProxyPipelineInitializerMiddleware : object {
    private ILogger _logger;
    private RequestDelegate _next;
    public ProxyPipelineInitializerMiddleware(RequestDelegate next, ILogger`1<ProxyPipelineInitializerMiddleware> logger);
    public Task Invoke(HttpContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Model.ReverseProxyApplicationBuilder : object {
    private IApplicationBuilder _applicationBuilder;
    public IServiceProvider ApplicationServices { get; public set; }
    public IFeatureCollection ServerFeatures { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, object> Properties { get; }
    public ReverseProxyApplicationBuilder(IApplicationBuilder applicationBuilder);
    public sealed virtual IServiceProvider get_ApplicationServices();
    public sealed virtual void set_ApplicationServices(IServiceProvider value);
    public sealed virtual IFeatureCollection get_ServerFeatures();
    public sealed virtual IDictionary`2<string, object> get_Properties();
    public sealed virtual RequestDelegate Build();
    public sealed virtual IApplicationBuilder New();
    public sealed virtual IApplicationBuilder Use(Func`2<RequestDelegate, RequestDelegate> middleware);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Model.ReverseProxyFeature : object {
    private IReadOnlyList`1<DestinationState> _availableDestinations;
    [CompilerGeneratedAttribute]
private RouteModel <Route>k__BackingField;
    [CompilerGeneratedAttribute]
private ClusterModel <Cluster>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<DestinationState> <AllDestinations>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private DestinationState <ProxiedDestination>k__BackingField;
    public RouteModel Route { get; public set; }
    public ClusterModel Cluster { get; public set; }
    public IReadOnlyList`1<DestinationState> AllDestinations { get; public set; }
    public IReadOnlyList`1<DestinationState> AvailableDestinations { get; public set; }
    [NullableAttribute("2")]
public DestinationState ProxiedDestination { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual RouteModel get_Route();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Route(RouteModel value);
    [CompilerGeneratedAttribute]
public sealed virtual ClusterModel get_Cluster();
    [CompilerGeneratedAttribute]
public void set_Cluster(ClusterModel value);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyList`1<DestinationState> get_AllDestinations();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AllDestinations(IReadOnlyList`1<DestinationState> value);
    public sealed virtual IReadOnlyList`1<DestinationState> get_AvailableDestinations();
    public sealed virtual void set_AvailableDestinations(IReadOnlyList`1<DestinationState> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual DestinationState get_ProxiedDestination();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void set_ProxiedDestination(DestinationState value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Model.RouteModel : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ClusterState <Cluster>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpTransformer <Transformer>k__BackingField;
    [CompilerGeneratedAttribute]
private RouteConfig <Config>k__BackingField;
    [NullableAttribute("2")]
public ClusterState Cluster { get; }
    public HttpTransformer Transformer { get; }
    public RouteConfig Config { get; }
    public RouteModel(RouteConfig config, ClusterState cluster, HttpTransformer transformer);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ClusterState get_Cluster();
    [CompilerGeneratedAttribute]
public HttpTransformer get_Transformer();
    [CompilerGeneratedAttribute]
public RouteConfig get_Config();
    internal bool HasConfigChanged(RouteConfig newConfig, ClusterState cluster, Nullable`1<int> routeRevision);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Model.RouteState : object {
    private RouteModel modreq(System.Runtime.CompilerServices.IsVolatile) _model;
    [CompilerGeneratedAttribute]
private string <RouteId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ClusterRevision>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Endpoint <CachedEndpoint>k__BackingField;
    public string RouteId { get; }
    internal RouteModel Model { get; internal set; }
    internal Nullable`1<int> ClusterRevision { get; internal set; }
    [NullableAttribute("2")]
internal Endpoint CachedEndpoint { get; internal set; }
    public RouteState(string routeId);
    [CompilerGeneratedAttribute]
public string get_RouteId();
    internal RouteModel get_Model();
    internal void set_Model(RouteModel value);
    [CompilerGeneratedAttribute]
internal Nullable`1<int> get_ClusterRevision();
    [CompilerGeneratedAttribute]
internal void set_ClusterRevision(Nullable`1<int> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal Endpoint get_CachedEndpoint();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_CachedEndpoint(Endpoint value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Routing.HeaderMatcher : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Values>k__BackingField;
    [CompilerGeneratedAttribute]
private HeaderMatchMode <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private StringComparison <Comparison>k__BackingField;
    [CompilerGeneratedAttribute]
private char <Separator>k__BackingField;
    public string Name { get; }
    public String[] Values { get; }
    public HeaderMatchMode Mode { get; }
    public StringComparison Comparison { get; }
    public char Separator { get; }
    public HeaderMatcher(string name, IReadOnlyList`1<string> values, HeaderMatchMode mode, bool isCaseSensitive);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public String[] get_Values();
    [CompilerGeneratedAttribute]
public HeaderMatchMode get_Mode();
    [CompilerGeneratedAttribute]
public StringComparison get_Comparison();
    [CompilerGeneratedAttribute]
public char get_Separator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Routing.HeaderMatcherPolicy : MatcherPolicy {
    public int Order { get; }
    public IComparer`1<Endpoint> Comparer { get; }
    public virtual int get_Order();
    public sealed virtual IComparer`1<Endpoint> get_Comparer();
    private sealed virtual override bool Microsoft.AspNetCore.Routing.Matching.IEndpointSelectorPolicy.AppliesToEndpoints(IReadOnlyList`1<Endpoint> endpoints);
    private static bool AppliesToEndpointsCore(IReadOnlyList`1<Endpoint> endpoints);
    public sealed virtual Task ApplyAsync(HttpContext httpContext, CandidateSet candidates);
    private static bool TryMatchExactOrPrefix(HeaderMatcher matcher, StringValues requestHeaderValues);
    private static bool TryMatchContainsOrNotContains(HeaderMatcher matcher, StringValues requestHeaderValues);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Routing.HeaderMetadata : object {
    [CompilerGeneratedAttribute]
private HeaderMatcher[] <Matchers>k__BackingField;
    public HeaderMatcher[] Matchers { get; }
    public HeaderMetadata(IReadOnlyList`1<HeaderMatcher> matchers);
    [CompilerGeneratedAttribute]
public sealed virtual HeaderMatcher[] get_Matchers();
}
[NullableContextAttribute("1")]
internal interface Yarp.ReverseProxy.Routing.IHeaderMetadata {
    public HeaderMatcher[] Matchers { get; }
    public abstract virtual HeaderMatcher[] get_Matchers();
}
[NullableContextAttribute("1")]
internal interface Yarp.ReverseProxy.Routing.IQueryParameterMetadata {
    public QueryParameterMatcher[] Matchers { get; }
    public abstract virtual QueryParameterMatcher[] get_Matchers();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Routing.ProxyEndpointFactory : object {
    private static IAuthorizeData _defaultAuthorization;
    private static IEnableCorsAttribute _defaultCors;
    private static IDisableCorsAttribute _disableCors;
    private static IAllowAnonymous _allowAnonymous;
    [NullableAttribute("2")]
private RequestDelegate _pipeline;
    private static ProxyEndpointFactory();
    public Endpoint CreateEndpoint(RouteModel route, IReadOnlyList`1<Action`1<EndpointBuilder>> conventions);
    public void SetProxyPipeline(RequestDelegate pipeline);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Routing.QueryParameterMatcher : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Values>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryParameterMatchMode <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private StringComparison <Comparison>k__BackingField;
    public string Name { get; }
    public String[] Values { get; }
    public QueryParameterMatchMode Mode { get; }
    public StringComparison Comparison { get; }
    public QueryParameterMatcher(string name, IReadOnlyList`1<string> values, QueryParameterMatchMode mode, bool isCaseSensitive);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public String[] get_Values();
    [CompilerGeneratedAttribute]
public QueryParameterMatchMode get_Mode();
    [CompilerGeneratedAttribute]
public StringComparison get_Comparison();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Routing.QueryParameterMatcherPolicy : MatcherPolicy {
    public int Order { get; }
    public IComparer`1<Endpoint> Comparer { get; }
    public virtual int get_Order();
    public sealed virtual IComparer`1<Endpoint> get_Comparer();
    private sealed virtual override bool Microsoft.AspNetCore.Routing.Matching.IEndpointSelectorPolicy.AppliesToEndpoints(IReadOnlyList`1<Endpoint> endpoints);
    private static bool AppliesToEndpointsCore(IReadOnlyList`1<Endpoint> endpoints);
    public sealed virtual Task ApplyAsync(HttpContext httpContext, CandidateSet candidates);
    private static bool TryMatch(QueryParameterMatcher matcher, StringValues requestHeaderValues);
    [CompilerGeneratedAttribute]
internal static bool <TryMatch>g__TryMatch|7_0(QueryParameterMatcher matcher, string queryValue, string expectedValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Routing.QueryParameterMetadata : object {
    [CompilerGeneratedAttribute]
private QueryParameterMatcher[] <Matchers>k__BackingField;
    public QueryParameterMatcher[] Matchers { get; }
    public QueryParameterMetadata(IReadOnlyList`1<QueryParameterMatcher> matchers);
    [CompilerGeneratedAttribute]
public sealed virtual QueryParameterMatcher[] get_Matchers();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.SessionAffinity.AffinitizeTransform : ResponseTransform {
    private ISessionAffinityPolicy _sessionAffinityPolicy;
    public AffinitizeTransform(ISessionAffinityPolicy sessionAffinityPolicy);
    public virtual ValueTask ApplyAsync(ResponseTransformContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.SessionAffinity.AffinitizeTransformProvider : object {
    private IDictionary`2<string, ISessionAffinityPolicy> _sessionAffinityPolicies;
    public AffinitizeTransformProvider(IEnumerable`1<ISessionAffinityPolicy> sessionAffinityPolicies);
    public sealed virtual void ValidateRoute(TransformRouteValidationContext context);
    public sealed virtual void ValidateCluster(TransformClusterValidationContext context);
    public sealed virtual void Apply(TransformBuilderContext context);
}
[IsReadOnlyAttribute]
public class Yarp.ReverseProxy.SessionAffinity.AffinityResult : ValueType {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyList`1<DestinationState> <Destinations>k__BackingField;
    [CompilerGeneratedAttribute]
private AffinityStatus <Status>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyList`1<DestinationState> Destinations { get; }
    public AffinityStatus Status { get; }
    public AffinityResult(IReadOnlyList`1<DestinationState> destinations, AffinityStatus status);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<DestinationState> get_Destinations();
    [CompilerGeneratedAttribute]
public AffinityStatus get_Status();
}
public enum Yarp.ReverseProxy.SessionAffinity.AffinityStatus : Enum {
    public int value__;
    public static AffinityStatus OK;
    public static AffinityStatus AffinityKeyNotSet;
    public static AffinityStatus AffinityKeyExtractionFailed;
    public static AffinityStatus DestinationNotFound;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Yarp.ReverseProxy.SessionAffinity.BaseSessionAffinityPolicy`1 : object {
    private IDataProtector _dataProtector;
    protected static object AffinityKeyId;
    protected ILogger Logger;
    public string Name { get; }
    protected BaseSessionAffinityPolicy`1(IDataProtectionProvider dataProtectionProvider, ILogger logger);
    private static BaseSessionAffinityPolicy`1();
    public abstract virtual string get_Name();
    public virtual void AffinitizeResponse(HttpContext context, ClusterState cluster, SessionAffinityConfig config, DestinationState destination);
    public virtual AffinityResult FindAffinitizedDestinations(HttpContext context, ClusterState cluster, SessionAffinityConfig config, IReadOnlyList`1<DestinationState> destinations);
    protected abstract virtual T GetDestinationAffinityKey(DestinationState destination);
    protected abstract virtual ValueTuple`2<T, bool> GetRequestAffinityKey(HttpContext context, ClusterState cluster, SessionAffinityConfig config);
    protected abstract virtual void SetAffinityKey(HttpContext context, ClusterState cluster, SessionAffinityConfig config, T unencryptedKey);
    protected string Protect(string unencryptedKey);
    [NullableContextAttribute("2")]
protected ValueTuple`2<string, bool> Unprotect(string encryptedRequestKey);
    private static string Pad(string text);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Yarp.ReverseProxy.SessionAffinity.CookieSessionAffinityPolicy : BaseSessionAffinityPolicy`1<string> {
    private IClock _clock;
    public string Name { get; }
    public CookieSessionAffinityPolicy(IDataProtectionProvider dataProtectionProvider, IClock clock, ILogger`1<CookieSessionAffinityPolicy> logger);
    public virtual string get_Name();
    protected virtual string GetDestinationAffinityKey(DestinationState destination);
    protected virtual ValueTuple`2<string, bool> GetRequestAffinityKey(HttpContext context, ClusterState cluster, SessionAffinityConfig config);
    protected virtual void SetAffinityKey(HttpContext context, ClusterState cluster, SessionAffinityConfig config, string unencryptedKey);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Yarp.ReverseProxy.SessionAffinity.CustomHeaderSessionAffinityPolicy : BaseSessionAffinityPolicy`1<string> {
    public string Name { get; }
    public CustomHeaderSessionAffinityPolicy(IDataProtectionProvider dataProtectionProvider, ILogger`1<CustomHeaderSessionAffinityPolicy> logger);
    public virtual string get_Name();
    protected virtual string GetDestinationAffinityKey(DestinationState destination);
    protected virtual ValueTuple`2<string, bool> GetRequestAffinityKey(HttpContext context, ClusterState cluster, SessionAffinityConfig config);
    protected virtual void SetAffinityKey(HttpContext context, ClusterState cluster, SessionAffinityConfig config, string unencryptedKey);
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.SessionAffinity.IAffinityFailurePolicy {
    public string Name { get; }
    public abstract virtual string get_Name();
    public abstract virtual Task`1<bool> Handle(HttpContext context, ClusterState cluster, AffinityStatus affinityStatus);
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.SessionAffinity.ISessionAffinityPolicy {
    public string Name { get; }
    public abstract virtual string get_Name();
    public abstract virtual AffinityResult FindAffinitizedDestinations(HttpContext context, ClusterState cluster, SessionAffinityConfig config, IReadOnlyList`1<DestinationState> destinations);
    public abstract virtual void AffinitizeResponse(HttpContext context, ClusterState cluster, SessionAffinityConfig config, DestinationState destination);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.SessionAffinity.RedistributeAffinityFailurePolicy : object {
    public string Name { get; }
    public sealed virtual string get_Name();
    public sealed virtual Task`1<bool> Handle(HttpContext context, ClusterState cluster, AffinityStatus affinityStatus);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.SessionAffinity.Return503ErrorAffinityFailurePolicy : object {
    public string Name { get; }
    public sealed virtual string get_Name();
    public sealed virtual Task`1<bool> Handle(HttpContext context, ClusterState cluster, AffinityStatus affinityStatus);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Yarp.ReverseProxy.SessionAffinity.SessionAffinityConstants : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.SessionAffinity.SessionAffinityMiddleware : object {
    private RequestDelegate _next;
    private IDictionary`2<string, ISessionAffinityPolicy> _sessionAffinityPolicies;
    private IDictionary`2<string, IAffinityFailurePolicy> _affinityFailurePolicies;
    private ILogger _logger;
    public SessionAffinityMiddleware(RequestDelegate next, IEnumerable`1<ISessionAffinityPolicy> sessionAffinityPolicies, IEnumerable`1<IAffinityFailurePolicy> affinityFailurePolicies, ILogger`1<SessionAffinityMiddleware> logger);
    public Task Invoke(HttpContext context);
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.SessionAffinity.SessionAffinityMiddleware/<InvokeInternal>d__6")]
private Task InvokeInternal(HttpContext context, IReverseProxyFeature proxyFeature, SessionAffinityConfig config);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Transforms.Builder.ActionTransformProvider : object {
    private Action`1<TransformBuilderContext> _action;
    public ActionTransformProvider(Action`1<TransformBuilderContext> action);
    public sealed virtual void Apply(TransformBuilderContext transformBuildContext);
    public sealed virtual void ValidateRoute(TransformRouteValidationContext context);
    public sealed virtual void ValidateCluster(TransformClusterValidationContext context);
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.Transforms.Builder.ITransformBuilder {
    public abstract virtual IReadOnlyList`1<Exception> ValidateRoute(RouteConfig route);
    public abstract virtual IReadOnlyList`1<Exception> ValidateCluster(ClusterConfig cluster);
    public abstract virtual HttpTransformer Build(RouteConfig route, ClusterConfig cluster);
    public abstract virtual HttpTransformer Create(Action`1<TransformBuilderContext> action);
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.Transforms.Builder.ITransformFactory {
    public abstract virtual bool Validate(TransformRouteValidationContext context, IReadOnlyDictionary`2<string, string> transformValues);
    public abstract virtual bool Build(TransformBuilderContext context, IReadOnlyDictionary`2<string, string> transformValues);
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.Transforms.Builder.ITransformProvider {
    public abstract virtual void ValidateRoute(TransformRouteValidationContext context);
    public abstract virtual void ValidateCluster(TransformClusterValidationContext context);
    public abstract virtual void Apply(TransformBuilderContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Transforms.Builder.StructuredTransformer : HttpTransformer {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ShouldCopyRequestHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ShouldCopyResponseHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ShouldCopyResponseTrailers>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestTransform[] <RequestTransforms>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseTransform[] <ResponseTransforms>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseTrailersTransform[] <ResponseTrailerTransforms>k__BackingField;
    internal Nullable`1<bool> ShouldCopyRequestHeaders { get; }
    internal Nullable`1<bool> ShouldCopyResponseHeaders { get; }
    internal Nullable`1<bool> ShouldCopyResponseTrailers { get; }
    internal RequestTransform[] RequestTransforms { get; }
    internal ResponseTransform[] ResponseTransforms { get; }
    internal ResponseTrailersTransform[] ResponseTrailerTransforms { get; }
    internal StructuredTransformer(Nullable`1<bool> copyRequestHeaders, Nullable`1<bool> copyResponseHeaders, Nullable`1<bool> copyResponseTrailers, IList`1<RequestTransform> requestTransforms, IList`1<ResponseTransform> responseTransforms, IList`1<ResponseTrailersTransform> responseTrailerTransforms);
    [CompilerGeneratedAttribute]
internal Nullable`1<bool> get_ShouldCopyRequestHeaders();
    [CompilerGeneratedAttribute]
internal Nullable`1<bool> get_ShouldCopyResponseHeaders();
    [CompilerGeneratedAttribute]
internal Nullable`1<bool> get_ShouldCopyResponseTrailers();
    [CompilerGeneratedAttribute]
internal RequestTransform[] get_RequestTransforms();
    [CompilerGeneratedAttribute]
internal ResponseTransform[] get_ResponseTransforms();
    [CompilerGeneratedAttribute]
internal ResponseTrailersTransform[] get_ResponseTrailerTransforms();
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Transforms.Builder.StructuredTransformer/<TransformRequestAsync>d__19")]
public virtual ValueTask TransformRequestAsync(HttpContext httpContext, HttpRequestMessage proxyRequest, string destinationPrefix);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Yarp.ReverseProxy.Transforms.Builder.StructuredTransformer/<TransformResponseAsync>d__20")]
public virtual ValueTask`1<bool> TransformResponseAsync(HttpContext httpContext, HttpResponseMessage proxyResponse);
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.Transforms.Builder.StructuredTransformer/<TransformResponseTrailersAsync>d__21")]
public virtual ValueTask TransformResponseTrailersAsync(HttpContext httpContext, HttpResponseMessage proxyResponse);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private ValueTask <>n__0(HttpContext httpContext, HttpRequestMessage proxyRequest, string destinationPrefix);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private ValueTask`1<bool> <>n__1(HttpContext httpContext, HttpResponseMessage proxyResponse);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private ValueTask <>n__2(HttpContext httpContext, HttpResponseMessage proxyResponse);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Transforms.Builder.TransformBuilder : object {
    private IServiceProvider _services;
    private List`1<ITransformFactory> _factories;
    private List`1<ITransformProvider> _providers;
    public TransformBuilder(IServiceProvider services, IEnumerable`1<ITransformFactory> factories, IEnumerable`1<ITransformProvider> providers);
    public sealed virtual IReadOnlyList`1<Exception> ValidateRoute(RouteConfig route);
    public sealed virtual IReadOnlyList`1<Exception> ValidateCluster(ClusterConfig cluster);
    public sealed virtual HttpTransformer Build(RouteConfig route, ClusterConfig cluster);
    internal StructuredTransformer BuildInternal(RouteConfig route, ClusterConfig cluster);
    public sealed virtual HttpTransformer Create(Action`1<TransformBuilderContext> action);
    internal StructuredTransformer CreateInternal(Action`1<TransformBuilderContext> action);
    internal static StructuredTransformer CreateTransformer(TransformBuilderContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.Builder.TransformBuilderContext : object {
    [CompilerGeneratedAttribute]
private IServiceProvider <Services>k__BackingField;
    [CompilerGeneratedAttribute]
private RouteConfig <Route>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ClusterConfig <Cluster>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CopyRequestHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CopyResponseHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CopyResponseTrailers>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseDefaultForwarders>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<RequestTransform> <RequestTransforms>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ResponseTransform> <ResponseTransforms>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ResponseTrailersTransform> <ResponseTrailersTransforms>k__BackingField;
    public IServiceProvider Services { get; public set; }
    public RouteConfig Route { get; public set; }
    [NullableAttribute("2")]
public ClusterConfig Cluster { get; public set; }
    public Nullable`1<bool> CopyRequestHeaders { get; public set; }
    public Nullable`1<bool> CopyResponseHeaders { get; public set; }
    public Nullable`1<bool> CopyResponseTrailers { get; public set; }
    public Nullable`1<bool> UseDefaultForwarders { get; public set; }
    public IList`1<RequestTransform> RequestTransforms { get; }
    public IList`1<ResponseTransform> ResponseTransforms { get; }
    public IList`1<ResponseTrailersTransform> ResponseTrailersTransforms { get; }
    [CompilerGeneratedAttribute]
public IServiceProvider get_Services();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Services(IServiceProvider value);
    [CompilerGeneratedAttribute]
public RouteConfig get_Route();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Route(RouteConfig value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ClusterConfig get_Cluster();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Cluster(ClusterConfig value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_CopyRequestHeaders();
    [CompilerGeneratedAttribute]
public void set_CopyRequestHeaders(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_CopyResponseHeaders();
    [CompilerGeneratedAttribute]
public void set_CopyResponseHeaders(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_CopyResponseTrailers();
    [CompilerGeneratedAttribute]
public void set_CopyResponseTrailers(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UseDefaultForwarders();
    [CompilerGeneratedAttribute]
public void set_UseDefaultForwarders(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<RequestTransform> get_RequestTransforms();
    [CompilerGeneratedAttribute]
public IList`1<ResponseTransform> get_ResponseTransforms();
    [CompilerGeneratedAttribute]
public IList`1<ResponseTrailersTransform> get_ResponseTrailersTransforms();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.Builder.TransformClusterValidationContext : object {
    [CompilerGeneratedAttribute]
private IServiceProvider <Services>k__BackingField;
    [CompilerGeneratedAttribute]
private ClusterConfig <Cluster>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Exception> <Errors>k__BackingField;
    public IServiceProvider Services { get; public set; }
    public ClusterConfig Cluster { get; public set; }
    public IList`1<Exception> Errors { get; }
    [CompilerGeneratedAttribute]
public IServiceProvider get_Services();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Services(IServiceProvider value);
    [CompilerGeneratedAttribute]
public ClusterConfig get_Cluster();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Cluster(ClusterConfig value);
    [CompilerGeneratedAttribute]
public IList`1<Exception> get_Errors();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Yarp.ReverseProxy.Transforms.Builder.TransformHelpers : object {
    public static void TryCheckTooManyParameters(TransformRouteValidationContext context, IReadOnlyDictionary`2<string, string> rawTransform, int expected);
    public static void CheckTooManyParameters(IReadOnlyDictionary`2<string, string> rawTransform, int expected);
    internal static void RemoveAllXForwardedHeaders(TransformBuilderContext context, string prefix);
    internal static void RemoveForwardedHeader(TransformBuilderContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.Builder.TransformRouteValidationContext : object {
    [CompilerGeneratedAttribute]
private IServiceProvider <Services>k__BackingField;
    [CompilerGeneratedAttribute]
private RouteConfig <Route>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Exception> <Errors>k__BackingField;
    public IServiceProvider Services { get; public set; }
    public RouteConfig Route { get; public set; }
    public IList`1<Exception> Errors { get; }
    [CompilerGeneratedAttribute]
public IServiceProvider get_Services();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Services(IServiceProvider value);
    [CompilerGeneratedAttribute]
public RouteConfig get_Route();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Route(RouteConfig value);
    [CompilerGeneratedAttribute]
public IList`1<Exception> get_Errors();
}
public enum Yarp.ReverseProxy.Transforms.ForwardedTransformActions : Enum {
    public int value__;
    public static ForwardedTransformActions Off;
    public static ForwardedTransformActions Set;
    public static ForwardedTransformActions Append;
    public static ForwardedTransformActions Remove;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Yarp.ReverseProxy.Transforms.ForwardedTransformExtensions : object {
    [ExtensionAttribute]
public static RouteConfig WithTransformXForwarded(RouteConfig route, string headerPrefix, ForwardedTransformActions xDefault, Nullable`1<ForwardedTransformActions> xFor, Nullable`1<ForwardedTransformActions> xHost, Nullable`1<ForwardedTransformActions> xProto, Nullable`1<ForwardedTransformActions> xPrefix);
    [ExtensionAttribute]
public static TransformBuilderContext AddXForwardedFor(TransformBuilderContext context, string headerName, ForwardedTransformActions action);
    [ExtensionAttribute]
public static TransformBuilderContext AddXForwardedHost(TransformBuilderContext context, string headerName, ForwardedTransformActions action);
    [ExtensionAttribute]
public static TransformBuilderContext AddXForwardedProto(TransformBuilderContext context, string headerName, ForwardedTransformActions action);
    [ExtensionAttribute]
public static TransformBuilderContext AddXForwardedPrefix(TransformBuilderContext context, string headerName, ForwardedTransformActions action);
    [ExtensionAttribute]
public static TransformBuilderContext AddXForwarded(TransformBuilderContext context, ForwardedTransformActions action);
    [ExtensionAttribute]
public static RouteConfig WithTransformForwarded(RouteConfig route, bool useHost, bool useProto, NodeFormat forFormat, NodeFormat byFormat, ForwardedTransformActions action);
    [ExtensionAttribute]
public static TransformBuilderContext AddForwarded(TransformBuilderContext context, bool useHost, bool useProto, NodeFormat forFormat, NodeFormat byFormat, ForwardedTransformActions action);
    [ExtensionAttribute]
public static RouteConfig WithTransformClientCertHeader(RouteConfig route, string headerName);
    [ExtensionAttribute]
public static TransformBuilderContext AddClientCertHeader(TransformBuilderContext context, string headerName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Transforms.ForwardedTransformFactory : object {
    internal static string XForwardedKey;
    internal static string DefaultXForwardedPrefix;
    internal static string ForwardedKey;
    internal static string ActionKey;
    internal static string HeaderPrefixKey;
    internal static string ForKey;
    internal static string ByKey;
    internal static string HostKey;
    internal static string ProtoKey;
    internal static string PrefixKey;
    internal static string ForFormatKey;
    internal static string ByFormatKey;
    internal static string ClientCertKey;
    private IRandomFactory _randomFactory;
    public ForwardedTransformFactory(IRandomFactory randomFactory);
    private static ForwardedTransformFactory();
    public sealed virtual bool Validate(TransformRouteValidationContext context, IReadOnlyDictionary`2<string, string> transformValues);
    public sealed virtual bool Build(TransformBuilderContext context, IReadOnlyDictionary`2<string, string> transformValues);
    private static void ValidateAction(TransformRouteValidationContext context, string key, string headerValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.HttpMethodChangeTransform : RequestTransform {
    [CompilerGeneratedAttribute]
private HttpMethod <FromMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpMethod <ToMethod>k__BackingField;
    internal HttpMethod FromMethod { get; }
    internal HttpMethod ToMethod { get; }
    public HttpMethodChangeTransform(string fromMethod, string toMethod);
    [CompilerGeneratedAttribute]
internal HttpMethod get_FromMethod();
    [CompilerGeneratedAttribute]
internal HttpMethod get_ToMethod();
    public virtual ValueTask ApplyAsync(RequestTransformContext context);
    private static HttpMethod GetCanonicalizedValue(string method);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Yarp.ReverseProxy.Transforms.HttpMethodTransformExtensions : object {
    [ExtensionAttribute]
public static RouteConfig WithTransformHttpMethodChange(RouteConfig route, string fromHttpMethod, string toHttpMethod);
    [ExtensionAttribute]
public static TransformBuilderContext AddHttpMethodChange(TransformBuilderContext context, string fromHttpMethod, string toHttpMethod);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Transforms.HttpMethodTransformFactory : object {
    internal static string HttpMethodChangeKey;
    internal static string SetKey;
    private static HttpMethodTransformFactory();
    public sealed virtual bool Validate(TransformRouteValidationContext context, IReadOnlyDictionary`2<string, string> transformValues);
    public sealed virtual bool Build(TransformBuilderContext context, IReadOnlyDictionary`2<string, string> transformValues);
}
public enum Yarp.ReverseProxy.Transforms.NodeFormat : Enum {
    public int value__;
    public static NodeFormat None;
    public static NodeFormat Random;
    public static NodeFormat RandomAndPort;
    public static NodeFormat RandomAndRandomPort;
    public static NodeFormat Unknown;
    public static NodeFormat UnknownAndPort;
    public static NodeFormat UnknownAndRandomPort;
    public static NodeFormat Ip;
    public static NodeFormat IpAndPort;
    public static NodeFormat IpAndRandomPort;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.PathRouteValuesTransform : RequestTransform {
    private TemplateBinderFactory _binderFactory;
    [CompilerGeneratedAttribute]
private RoutePattern <Pattern>k__BackingField;
    internal RoutePattern Pattern { get; }
    public PathRouteValuesTransform(string pattern, TemplateBinderFactory binderFactory);
    [CompilerGeneratedAttribute]
internal RoutePattern get_Pattern();
    public virtual ValueTask ApplyAsync(RequestTransformContext context);
}
public class Yarp.ReverseProxy.Transforms.PathStringTransform : RequestTransform {
    [CompilerGeneratedAttribute]
private PathString <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private PathTransformMode <Mode>k__BackingField;
    internal PathString Value { get; }
    internal PathTransformMode Mode { get; }
    public PathStringTransform(PathTransformMode mode, PathString value);
    [CompilerGeneratedAttribute]
internal PathString get_Value();
    [CompilerGeneratedAttribute]
internal PathTransformMode get_Mode();
    [NullableContextAttribute("1")]
public virtual ValueTask ApplyAsync(RequestTransformContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Yarp.ReverseProxy.Transforms.PathTransformExtensions : object {
    [ExtensionAttribute]
public static RouteConfig WithTransformPathSet(RouteConfig route, PathString path);
    [ExtensionAttribute]
public static TransformBuilderContext AddPathSet(TransformBuilderContext context, PathString path);
    [ExtensionAttribute]
public static RouteConfig WithTransformPathPrefix(RouteConfig route, PathString prefix);
    [ExtensionAttribute]
public static TransformBuilderContext AddPathPrefix(TransformBuilderContext context, PathString prefix);
    [ExtensionAttribute]
public static RouteConfig WithTransformPathRemovePrefix(RouteConfig route, PathString prefix);
    [ExtensionAttribute]
public static TransformBuilderContext AddPathRemovePrefix(TransformBuilderContext context, PathString prefix);
    [ExtensionAttribute]
public static RouteConfig WithTransformPathRouteValues(RouteConfig route, PathString pattern);
    [ExtensionAttribute]
public static TransformBuilderContext AddPathRouteValues(TransformBuilderContext context, PathString pattern);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Transforms.PathTransformFactory : object {
    internal static string PathSetKey;
    internal static string PathPrefixKey;
    internal static string PathRemovePrefixKey;
    internal static string PathPatternKey;
    private TemplateBinderFactory _binderFactory;
    public PathTransformFactory(TemplateBinderFactory binderFactory);
    private static PathTransformFactory();
    public sealed virtual bool Validate(TransformRouteValidationContext context, IReadOnlyDictionary`2<string, string> transformValues);
    private void CheckPathNotNull(TransformRouteValidationContext context, string fieldName, string path);
    public sealed virtual bool Build(TransformBuilderContext context, IReadOnlyDictionary`2<string, string> transformValues);
    private static PathString MakePathString(string path);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.QueryParameterFromStaticTransform : QueryParameterTransform {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    internal string Value { get; }
    public QueryParameterFromStaticTransform(QueryStringTransformMode mode, string key, string value);
    [CompilerGeneratedAttribute]
internal string get_Value();
    protected virtual string GetValue(RequestTransformContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.QueryParameterRemoveTransform : RequestTransform {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    internal string Key { get; }
    public QueryParameterRemoveTransform(string key);
    [CompilerGeneratedAttribute]
internal string get_Key();
    public virtual ValueTask ApplyAsync(RequestTransformContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.QueryParameterRouteTransform : QueryParameterTransform {
    [CompilerGeneratedAttribute]
private string <RouteValueKey>k__BackingField;
    internal string RouteValueKey { get; }
    public QueryParameterRouteTransform(QueryStringTransformMode mode, string key, string routeValueKey);
    [CompilerGeneratedAttribute]
internal string get_RouteValueKey();
    protected virtual string GetValue(RequestTransformContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Yarp.ReverseProxy.Transforms.QueryParameterTransform : RequestTransform {
    [CompilerGeneratedAttribute]
private QueryStringTransformMode <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    internal QueryStringTransformMode Mode { get; }
    internal string Key { get; }
    public QueryParameterTransform(QueryStringTransformMode mode, string key);
    [CompilerGeneratedAttribute]
internal QueryStringTransformMode get_Mode();
    [CompilerGeneratedAttribute]
internal string get_Key();
    public virtual ValueTask ApplyAsync(RequestTransformContext context);
    protected abstract virtual string GetValue(RequestTransformContext context);
}
public enum Yarp.ReverseProxy.Transforms.QueryStringTransformMode : Enum {
    public int value__;
    public static QueryStringTransformMode Append;
    public static QueryStringTransformMode Set;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.QueryTransformContext : object {
    private HttpRequest _request;
    private QueryString _originalQueryString;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<string, StringValues> _modifiedQueryParameters;
    public QueryString QueryString { get; }
    public IDictionary`2<string, StringValues> Collection { get; }
    public QueryTransformContext(HttpRequest request);
    public QueryString get_QueryString();
    public IDictionary`2<string, StringValues> get_Collection();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Yarp.ReverseProxy.Transforms.QueryTransformExtensions : object {
    [ExtensionAttribute]
public static RouteConfig WithTransformQueryValue(RouteConfig route, string queryKey, string value, bool append);
    [ExtensionAttribute]
public static TransformBuilderContext AddQueryValue(TransformBuilderContext context, string queryKey, string value, bool append);
    [ExtensionAttribute]
public static RouteConfig WithTransformQueryRouteValue(RouteConfig route, string queryKey, string routeValueKey, bool append);
    [ExtensionAttribute]
public static TransformBuilderContext AddQueryRouteValue(TransformBuilderContext context, string queryKey, string routeValueKey, bool append);
    [ExtensionAttribute]
public static RouteConfig WithTransformQueryRemoveKey(RouteConfig route, string queryKey);
    [ExtensionAttribute]
public static TransformBuilderContext AddQueryRemoveKey(TransformBuilderContext context, string queryKey);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Transforms.QueryTransformFactory : object {
    internal static string QueryValueParameterKey;
    internal static string QueryRouteParameterKey;
    internal static string QueryRemoveParameterKey;
    internal static string AppendKey;
    internal static string SetKey;
    private static QueryTransformFactory();
    public sealed virtual bool Validate(TransformRouteValidationContext context, IReadOnlyDictionary`2<string, string> transformValues);
    public sealed virtual bool Build(TransformBuilderContext context, IReadOnlyDictionary`2<string, string> transformValues);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.RequestFuncTransform : RequestTransform {
    private Func`2<RequestTransformContext, ValueTask> _func;
    public RequestFuncTransform(Func`2<RequestTransformContext, ValueTask> func);
    public virtual ValueTask ApplyAsync(RequestTransformContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.RequestHeaderClientCertTransform : RequestTransform {
    [CompilerGeneratedAttribute]
private string <HeaderName>k__BackingField;
    internal string HeaderName { get; }
    public RequestHeaderClientCertTransform(string headerName);
    [CompilerGeneratedAttribute]
internal string get_HeaderName();
    public virtual ValueTask ApplyAsync(RequestTransformContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.RequestHeaderForwardedTransform : RequestTransform {
    internal static RequestHeaderForwardedTransform RemoveTransform;
    private static string ForwardedHeaderName;
    private static string ObfChars;
    private IRandomFactory _randomFactory;
    [CompilerGeneratedAttribute]
private NodeFormat <ForFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private NodeFormat <ByFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HostEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ProtoEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private ForwardedTransformActions <TransformAction>k__BackingField;
    internal NodeFormat ForFormat { get; }
    internal NodeFormat ByFormat { get; }
    internal bool HostEnabled { get; }
    internal bool ProtoEnabled { get; }
    internal ForwardedTransformActions TransformAction { get; }
    public RequestHeaderForwardedTransform(IRandomFactory randomFactory, NodeFormat forFormat, NodeFormat byFormat, bool host, bool proto, ForwardedTransformActions action);
    private static RequestHeaderForwardedTransform();
    [CompilerGeneratedAttribute]
internal NodeFormat get_ForFormat();
    [CompilerGeneratedAttribute]
internal NodeFormat get_ByFormat();
    [CompilerGeneratedAttribute]
internal bool get_HostEnabled();
    [CompilerGeneratedAttribute]
internal bool get_ProtoEnabled();
    [CompilerGeneratedAttribute]
internal ForwardedTransformActions get_TransformAction();
    public virtual ValueTask ApplyAsync(RequestTransformContext context);
    private string GetHeaderValue(HttpContext httpContext);
    private void AppendProto(HttpContext context, ValueStringBuilder& builder);
    private void AppendHost(HttpContext context, ValueStringBuilder& builder);
    private void AppendFor(HttpContext context, ValueStringBuilder& builder);
    private void AppendBy(HttpContext context, ValueStringBuilder& builder);
    [NullableContextAttribute("2")]
private void AppendNode(IPAddress ipAddress, int port, NodeFormat format, ValueStringBuilder& builder);
    private void AppendRandom(ValueStringBuilder& builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.RequestHeaderOriginalHostTransform : RequestTransform {
    public static RequestHeaderOriginalHostTransform OriginalHost;
    public static RequestHeaderOriginalHostTransform SuppressHost;
    [CompilerGeneratedAttribute]
private bool <UseOriginalHost>k__BackingField;
    internal bool UseOriginalHost { get; }
    private RequestHeaderOriginalHostTransform(bool useOriginalHost);
    private static RequestHeaderOriginalHostTransform();
    [CompilerGeneratedAttribute]
internal bool get_UseOriginalHost();
    public virtual ValueTask ApplyAsync(RequestTransformContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.RequestHeaderRemoveTransform : RequestTransform {
    [CompilerGeneratedAttribute]
private string <HeaderName>k__BackingField;
    internal string HeaderName { get; }
    public RequestHeaderRemoveTransform(string headerName);
    [CompilerGeneratedAttribute]
internal string get_HeaderName();
    public virtual ValueTask ApplyAsync(RequestTransformContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.RequestHeadersAllowedTransform : RequestTransform {
    [CompilerGeneratedAttribute]
private String[] <AllowedHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<string> <AllowedHeadersSet>k__BackingField;
    internal String[] AllowedHeaders { get; }
    private HashSet`1<string> AllowedHeadersSet { get; }
    public RequestHeadersAllowedTransform(String[] allowedHeaders);
    [CompilerGeneratedAttribute]
internal String[] get_AllowedHeaders();
    [CompilerGeneratedAttribute]
private HashSet`1<string> get_AllowedHeadersSet();
    public virtual ValueTask ApplyAsync(RequestTransformContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Yarp.ReverseProxy.Transforms.RequestHeadersTransformExtensions : object {
    [ExtensionAttribute]
public static RouteConfig WithTransformCopyRequestHeaders(RouteConfig route, bool copy);
    [ExtensionAttribute]
public static RouteConfig WithTransformUseOriginalHostHeader(RouteConfig route, bool useOriginal);
    [ExtensionAttribute]
public static RouteConfig WithTransformRequestHeader(RouteConfig route, string headerName, string value, bool append);
    [ExtensionAttribute]
public static RouteConfig WithTransformRequestHeaderRemove(RouteConfig route, string headerName);
    [ExtensionAttribute]
public static RouteConfig WithTransformRequestHeadersAllowed(RouteConfig route, String[] allowedHeaders);
    [ExtensionAttribute]
public static TransformBuilderContext AddRequestHeader(TransformBuilderContext context, string headerName, string value, bool append);
    [ExtensionAttribute]
public static TransformBuilderContext AddRequestHeaderRemove(TransformBuilderContext context, string headerName);
    [ExtensionAttribute]
public static TransformBuilderContext AddRequestHeadersAllowed(TransformBuilderContext context, String[] allowedHeaders);
    [ExtensionAttribute]
public static TransformBuilderContext AddOriginalHost(TransformBuilderContext context, bool useOriginal);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Transforms.RequestHeadersTransformFactory : object {
    internal static string RequestHeadersCopyKey;
    internal static string RequestHeaderOriginalHostKey;
    internal static string RequestHeaderKey;
    internal static string RequestHeaderRemoveKey;
    internal static string RequestHeadersAllowedKey;
    internal static string AppendKey;
    internal static string SetKey;
    private static RequestHeadersTransformFactory();
    public sealed virtual bool Validate(TransformRouteValidationContext context, IReadOnlyDictionary`2<string, string> transformValues);
    public sealed virtual bool Build(TransformBuilderContext context, IReadOnlyDictionary`2<string, string> transformValues);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.RequestHeaderValueTransform : RequestTransform {
    [CompilerGeneratedAttribute]
private string <HeaderName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Append>k__BackingField;
    internal string HeaderName { get; }
    internal string Value { get; }
    internal bool Append { get; }
    public RequestHeaderValueTransform(string headerName, string value, bool append);
    [CompilerGeneratedAttribute]
internal string get_HeaderName();
    [CompilerGeneratedAttribute]
internal string get_Value();
    [CompilerGeneratedAttribute]
internal bool get_Append();
    public virtual ValueTask ApplyAsync(RequestTransformContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.RequestHeaderXForwardedForTransform : RequestTransform {
    [CompilerGeneratedAttribute]
private string <HeaderName>k__BackingField;
    [CompilerGeneratedAttribute]
private ForwardedTransformActions <TransformAction>k__BackingField;
    internal string HeaderName { get; }
    internal ForwardedTransformActions TransformAction { get; }
    public RequestHeaderXForwardedForTransform(string headerName, ForwardedTransformActions action);
    [CompilerGeneratedAttribute]
internal string get_HeaderName();
    [CompilerGeneratedAttribute]
internal ForwardedTransformActions get_TransformAction();
    public virtual ValueTask ApplyAsync(RequestTransformContext context);
    private void Append(RequestTransformContext context, string remoteIp);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.RequestHeaderXForwardedHostTransform : RequestTransform {
    [CompilerGeneratedAttribute]
private string <HeaderName>k__BackingField;
    [CompilerGeneratedAttribute]
private ForwardedTransformActions <TransformAction>k__BackingField;
    internal string HeaderName { get; }
    internal ForwardedTransformActions TransformAction { get; }
    public RequestHeaderXForwardedHostTransform(string headerName, ForwardedTransformActions action);
    [CompilerGeneratedAttribute]
internal string get_HeaderName();
    [CompilerGeneratedAttribute]
internal ForwardedTransformActions get_TransformAction();
    public virtual ValueTask ApplyAsync(RequestTransformContext context);
    private void Append(RequestTransformContext context, HostString host);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.RequestHeaderXForwardedPrefixTransform : RequestTransform {
    [CompilerGeneratedAttribute]
private string <HeaderName>k__BackingField;
    [CompilerGeneratedAttribute]
private ForwardedTransformActions <TransformAction>k__BackingField;
    internal string HeaderName { get; }
    internal ForwardedTransformActions TransformAction { get; }
    public RequestHeaderXForwardedPrefixTransform(string headerName, ForwardedTransformActions action);
    [CompilerGeneratedAttribute]
internal string get_HeaderName();
    [CompilerGeneratedAttribute]
internal ForwardedTransformActions get_TransformAction();
    public virtual ValueTask ApplyAsync(RequestTransformContext context);
    private void Append(RequestTransformContext context, PathString pathBase);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.RequestHeaderXForwardedProtoTransform : RequestTransform {
    [CompilerGeneratedAttribute]
private string <HeaderName>k__BackingField;
    [CompilerGeneratedAttribute]
private ForwardedTransformActions <TransformAction>k__BackingField;
    internal string HeaderName { get; }
    internal ForwardedTransformActions TransformAction { get; }
    public RequestHeaderXForwardedProtoTransform(string headerName, ForwardedTransformActions action);
    [CompilerGeneratedAttribute]
internal string get_HeaderName();
    [CompilerGeneratedAttribute]
internal ForwardedTransformActions get_TransformAction();
    public virtual ValueTask ApplyAsync(RequestTransformContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Yarp.ReverseProxy.Transforms.RequestTransform : object {
    public abstract virtual ValueTask ApplyAsync(RequestTransformContext context);
    public static StringValues TakeHeader(RequestTransformContext context, string headerName);
    public static void AddHeader(RequestTransformContext context, string headerName, StringValues values);
    public static void RemoveHeader(RequestTransformContext context, string headerName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.RequestTransformContext : object {
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpRequestMessage <ProxyRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HeadersCopied>k__BackingField;
    [CompilerGeneratedAttribute]
private PathString <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryTransformContext <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DestinationPrefix>k__BackingField;
    public HttpContext HttpContext { get; public set; }
    public HttpRequestMessage ProxyRequest { get; public set; }
    public bool HeadersCopied { get; public set; }
    public PathString Path { get; public set; }
    public QueryTransformContext Query { get; public set; }
    public string DestinationPrefix { get; public set; }
    [CompilerGeneratedAttribute]
public HttpContext get_HttpContext();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HttpContext(HttpContext value);
    [CompilerGeneratedAttribute]
public HttpRequestMessage get_ProxyRequest();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ProxyRequest(HttpRequestMessage value);
    [CompilerGeneratedAttribute]
public bool get_HeadersCopied();
    [CompilerGeneratedAttribute]
public void set_HeadersCopied(bool value);
    [CompilerGeneratedAttribute]
public PathString get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(PathString value);
    [CompilerGeneratedAttribute]
public QueryTransformContext get_Query();
    [CompilerGeneratedAttribute]
public void set_Query(QueryTransformContext value);
    [CompilerGeneratedAttribute]
public string get_DestinationPrefix();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DestinationPrefix(string value);
}
public enum Yarp.ReverseProxy.Transforms.ResponseCondition : Enum {
    public int value__;
    public static ResponseCondition Always;
    public static ResponseCondition Success;
    public static ResponseCondition Failure;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.ResponseFuncTransform : ResponseTransform {
    private Func`2<ResponseTransformContext, ValueTask> _func;
    public ResponseFuncTransform(Func`2<ResponseTransformContext, ValueTask> func);
    public virtual ValueTask ApplyAsync(ResponseTransformContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.ResponseHeaderRemoveTransform : ResponseTransform {
    [CompilerGeneratedAttribute]
private string <HeaderName>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseCondition <Condition>k__BackingField;
    internal string HeaderName { get; }
    internal ResponseCondition Condition { get; }
    public ResponseHeaderRemoveTransform(string headerName, ResponseCondition condition);
    [CompilerGeneratedAttribute]
internal string get_HeaderName();
    [CompilerGeneratedAttribute]
internal ResponseCondition get_Condition();
    public virtual ValueTask ApplyAsync(ResponseTransformContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.ResponseHeadersAllowedTransform : ResponseTransform {
    [CompilerGeneratedAttribute]
private String[] <AllowedHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<string> <AllowedHeadersSet>k__BackingField;
    internal String[] AllowedHeaders { get; }
    private HashSet`1<string> AllowedHeadersSet { get; }
    public ResponseHeadersAllowedTransform(String[] allowedHeaders);
    [CompilerGeneratedAttribute]
internal String[] get_AllowedHeaders();
    [CompilerGeneratedAttribute]
private HashSet`1<string> get_AllowedHeadersSet();
    public virtual ValueTask ApplyAsync(ResponseTransformContext context);
    private void CopyResponseHeaders(HttpHeaders source, IHeaderDictionary destination);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.ResponseHeaderValueTransform : ResponseTransform {
    [CompilerGeneratedAttribute]
private ResponseCondition <Condition>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Append>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HeaderName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    internal ResponseCondition Condition { get; }
    internal bool Append { get; }
    internal string HeaderName { get; }
    internal string Value { get; }
    public ResponseHeaderValueTransform(string headerName, string value, bool append, ResponseCondition condition);
    [CompilerGeneratedAttribute]
internal ResponseCondition get_Condition();
    [CompilerGeneratedAttribute]
internal bool get_Append();
    [CompilerGeneratedAttribute]
internal string get_HeaderName();
    [CompilerGeneratedAttribute]
internal string get_Value();
    public virtual ValueTask ApplyAsync(ResponseTransformContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.ResponseTrailerRemoveTransform : ResponseTrailersTransform {
    [CompilerGeneratedAttribute]
private string <HeaderName>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseCondition <Condition>k__BackingField;
    internal string HeaderName { get; }
    internal ResponseCondition Condition { get; }
    public ResponseTrailerRemoveTransform(string headerName, ResponseCondition condition);
    [CompilerGeneratedAttribute]
internal string get_HeaderName();
    [CompilerGeneratedAttribute]
internal ResponseCondition get_Condition();
    public virtual ValueTask ApplyAsync(ResponseTrailersTransformContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.ResponseTrailersAllowedTransform : ResponseTrailersTransform {
    [CompilerGeneratedAttribute]
private String[] <AllowedHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<string> <AllowedHeadersSet>k__BackingField;
    internal String[] AllowedHeaders { get; }
    private HashSet`1<string> AllowedHeadersSet { get; }
    public ResponseTrailersAllowedTransform(String[] allowedHeaders);
    [CompilerGeneratedAttribute]
internal String[] get_AllowedHeaders();
    [CompilerGeneratedAttribute]
private HashSet`1<string> get_AllowedHeadersSet();
    public virtual ValueTask ApplyAsync(ResponseTrailersTransformContext context);
    private void CopyResponseHeaders(HttpHeaders source, IHeaderDictionary destination);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.ResponseTrailersFuncTransform : ResponseTrailersTransform {
    private Func`2<ResponseTrailersTransformContext, ValueTask> _func;
    public ResponseTrailersFuncTransform(Func`2<ResponseTrailersTransformContext, ValueTask> func);
    public virtual ValueTask ApplyAsync(ResponseTrailersTransformContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Yarp.ReverseProxy.Transforms.ResponseTrailersTransform : object {
    public abstract virtual ValueTask ApplyAsync(ResponseTrailersTransformContext context);
    public static StringValues TakeHeader(ResponseTrailersTransformContext context, string headerName);
    public static void SetHeader(ResponseTrailersTransformContext context, string headerName, StringValues values);
    internal static bool Success(ResponseTrailersTransformContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.ResponseTrailersTransformContext : object {
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpResponseMessage <ProxyResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HeadersCopied>k__BackingField;
    public HttpContext HttpContext { get; public set; }
    public HttpResponseMessage ProxyResponse { get; public set; }
    public bool HeadersCopied { get; public set; }
    [CompilerGeneratedAttribute]
public HttpContext get_HttpContext();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HttpContext(HttpContext value);
    [CompilerGeneratedAttribute]
public HttpResponseMessage get_ProxyResponse();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ProxyResponse(HttpResponseMessage value);
    [CompilerGeneratedAttribute]
public bool get_HeadersCopied();
    [CompilerGeneratedAttribute]
public void set_HeadersCopied(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.ResponseTrailerValueTransform : ResponseTrailersTransform {
    [CompilerGeneratedAttribute]
private ResponseCondition <Condition>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Append>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HeaderName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    internal ResponseCondition Condition { get; }
    internal bool Append { get; }
    internal string HeaderName { get; }
    internal string Value { get; }
    public ResponseTrailerValueTransform(string headerName, string value, bool append, ResponseCondition condition);
    [CompilerGeneratedAttribute]
internal ResponseCondition get_Condition();
    [CompilerGeneratedAttribute]
internal bool get_Append();
    [CompilerGeneratedAttribute]
internal string get_HeaderName();
    [CompilerGeneratedAttribute]
internal string get_Value();
    public virtual ValueTask ApplyAsync(ResponseTrailersTransformContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Yarp.ReverseProxy.Transforms.ResponseTransform : object {
    public abstract virtual ValueTask ApplyAsync(ResponseTransformContext context);
    public static StringValues TakeHeader(ResponseTransformContext context, string headerName);
    public static void SetHeader(ResponseTransformContext context, string headerName, StringValues values);
    internal static bool Success(ResponseTransformContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Yarp.ReverseProxy.Transforms.ResponseTransformContext : object {
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private HttpResponseMessage <ProxyResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HeadersCopied>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SuppressResponseBody>k__BackingField;
    public HttpContext HttpContext { get; public set; }
    [NullableAttribute("2")]
public HttpResponseMessage ProxyResponse { get; public set; }
    public bool HeadersCopied { get; public set; }
    public bool SuppressResponseBody { get; public set; }
    [CompilerGeneratedAttribute]
public HttpContext get_HttpContext();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_HttpContext(HttpContext value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public HttpResponseMessage get_ProxyResponse();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ProxyResponse(HttpResponseMessage value);
    [CompilerGeneratedAttribute]
public bool get_HeadersCopied();
    [CompilerGeneratedAttribute]
public void set_HeadersCopied(bool value);
    [CompilerGeneratedAttribute]
public bool get_SuppressResponseBody();
    [CompilerGeneratedAttribute]
public void set_SuppressResponseBody(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Yarp.ReverseProxy.Transforms.ResponseTransformExtensions : object {
    [ExtensionAttribute]
public static RouteConfig WithTransformCopyResponseHeaders(RouteConfig route, bool copy);
    [ExtensionAttribute]
public static RouteConfig WithTransformCopyResponseTrailers(RouteConfig route, bool copy);
    [ExtensionAttribute]
public static RouteConfig WithTransformResponseHeader(RouteConfig route, string headerName, string value, bool append, ResponseCondition condition);
    [ExtensionAttribute]
public static RouteConfig WithTransformResponseHeaderRemove(RouteConfig route, string headerName, ResponseCondition condition);
    [ExtensionAttribute]
public static RouteConfig WithTransformResponseHeadersAllowed(RouteConfig route, String[] allowedHeaders);
    [ExtensionAttribute]
public static TransformBuilderContext AddResponseHeader(TransformBuilderContext context, string headerName, string value, bool append, ResponseCondition condition);
    [ExtensionAttribute]
public static TransformBuilderContext AddResponseHeaderRemove(TransformBuilderContext context, string headerName, ResponseCondition condition);
    [ExtensionAttribute]
public static TransformBuilderContext AddResponseHeadersAllowed(TransformBuilderContext context, String[] allowedHeaders);
    [ExtensionAttribute]
public static RouteConfig WithTransformResponseTrailer(RouteConfig route, string headerName, string value, bool append, ResponseCondition condition);
    [ExtensionAttribute]
public static TransformBuilderContext AddResponseTrailer(TransformBuilderContext context, string headerName, string value, bool append, ResponseCondition condition);
    [ExtensionAttribute]
public static TransformBuilderContext AddResponseTrailerRemove(TransformBuilderContext context, string headerName, ResponseCondition condition);
    [ExtensionAttribute]
public static RouteConfig WithTransformResponseTrailerRemove(RouteConfig route, string headerName, ResponseCondition condition);
    [ExtensionAttribute]
public static RouteConfig WithTransformResponseTrailersAllowed(RouteConfig route, String[] allowedHeaders);
    [ExtensionAttribute]
public static TransformBuilderContext AddResponseTrailersAllowed(TransformBuilderContext context, String[] allowedHeaders);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Transforms.ResponseTransformFactory : object {
    internal static string ResponseHeadersCopyKey;
    internal static string ResponseTrailersCopyKey;
    internal static string ResponseHeaderKey;
    internal static string ResponseTrailerKey;
    internal static string ResponseHeaderRemoveKey;
    internal static string ResponseTrailerRemoveKey;
    internal static string ResponseHeadersAllowedKey;
    internal static string ResponseTrailersAllowedKey;
    internal static string WhenKey;
    internal static string AppendKey;
    internal static string SetKey;
    private static ResponseTransformFactory();
    public sealed virtual bool Validate(TransformRouteValidationContext context, IReadOnlyDictionary`2<string, string> transformValues);
    public sealed virtual bool Build(TransformBuilderContext context, IReadOnlyDictionary`2<string, string> transformValues);
}
[ExtensionAttribute]
public static class Yarp.ReverseProxy.Transforms.RouteConfigTransformExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static RouteConfig WithTransform(RouteConfig route, Action`1<IDictionary`2<string, string>> createTransform);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Yarp.ReverseProxy.Transforms.TransformBuilderContextFuncExtensions : object {
    [ExtensionAttribute]
public static TransformBuilderContext AddRequestTransform(TransformBuilderContext context, Func`2<RequestTransformContext, ValueTask> func);
    [ExtensionAttribute]
public static TransformBuilderContext AddResponseTransform(TransformBuilderContext context, Func`2<ResponseTransformContext, ValueTask> func);
    [ExtensionAttribute]
public static TransformBuilderContext AddResponseTrailersTransform(TransformBuilderContext context, Func`2<ResponseTrailersTransformContext, ValueTask> func);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Utilities.ActivityCancellationTokenSource : CancellationTokenSource {
    private static int MaxQueueSize;
    private static ConcurrentQueue`1<ActivityCancellationTokenSource> _sharedSources;
    private static int _count;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`1<object> _linkedTokenCancelDelegate;
    private int _activityTimeoutMs;
    private CancellationTokenRegistration _linkedRegistration;
    [CompilerGeneratedAttribute]
private bool <CancelledByLinkedToken>k__BackingField;
    public bool CancelledByLinkedToken { get; private set; }
    private static ActivityCancellationTokenSource();
    [CompilerGeneratedAttribute]
public bool get_CancelledByLinkedToken();
    [CompilerGeneratedAttribute]
private void set_CancelledByLinkedToken(bool value);
    public void ResetTimeout();
    public static ActivityCancellationTokenSource Rent(TimeSpan activityTimeout, CancellationToken linkedToken);
    public void Return();
}
internal class Yarp.ReverseProxy.Utilities.AtomicCounter : object {
    private int _value;
    public int Value { get; public set; }
    public int get_Value();
    public void set_Value(int value);
    public int Increment();
    public int Decrement();
    public void Reset();
}
internal static class Yarp.ReverseProxy.Utilities.CaseInsensitiveEqualHelper : object {
    internal static bool Equals(IReadOnlyList`1<string> list1, IReadOnlyList`1<string> list2);
    internal static int GetHashCode(IReadOnlyList`1<string> values);
}
internal static class Yarp.ReverseProxy.Utilities.CaseSensitiveEqualHelper : object {
    internal static bool Equals(IReadOnlyList`1<string> list1, IReadOnlyList`1<string> list2);
    internal static bool Equals(IReadOnlyDictionary`2<string, string> dictionary1, IReadOnlyDictionary`2<string, string> dictionary2);
    internal static bool Equals(IReadOnlyList`1<IReadOnlyDictionary`2<string, string>> dictionaryList1, IReadOnlyList`1<IReadOnlyDictionary`2<string, string>> dictionaryList2);
    internal static int GetHashCode(IReadOnlyList`1<string> values);
    internal static int GetHashCode(IReadOnlyDictionary`2<string, string> dictionary);
    internal static int GetHashCode(IReadOnlyList`1<IReadOnlyDictionary`2<string, string>> dictionaryList);
}
internal class Yarp.ReverseProxy.Utilities.Clock : object {
    private ValueStopwatch _stopwatch;
    public long TickCount { get; }
    public sealed virtual DateTimeOffset GetUtcNow();
    public sealed virtual long get_TickCount();
    [NullableContextAttribute("1")]
public sealed virtual Task Delay(TimeSpan delay, CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
public sealed virtual Task Delay(int millisecondsDelay, CancellationToken cancellationToken);
    public sealed virtual TimeSpan GetStopwatchTime();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal static class Yarp.ReverseProxy.Utilities.CollectionEqualityHelper : object {
    public static bool Equals(IReadOnlyList`1<T> list1, IReadOnlyList`1<T> list2, IEqualityComparer`1<T> valueComparer);
    public static bool Equals(IReadOnlyDictionary`2<string, T> dictionary1, IReadOnlyDictionary`2<string, T> dictionary2, IEqualityComparer`1<T> valueComparer);
    public static bool Equals(IReadOnlyList`1<IReadOnlyDictionary`2<string, T>> dictionaryList1, IReadOnlyList`1<IReadOnlyDictionary`2<string, T>> dictionaryList2, IEqualityComparer`1<T> valueComparer);
    public static int GetHashCode(IReadOnlyList`1<T> values, IEqualityComparer`1<T> valueComparer);
    public static int GetHashCode(IReadOnlyDictionary`2<string, T> dictionary, IEqualityComparer`1<T> valueComparer);
    public static int GetHashCode(IReadOnlyList`1<IReadOnlyDictionary`2<string, T>> dictionaryList, IEqualityComparer`1<T> valueComparer);
}
[ExtensionAttribute]
internal static class Yarp.ReverseProxy.Utilities.ConcurrentDictionaryExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool Contains(ConcurrentDictionary`2<TKey, TValue> dictionary, KeyValuePair`2<TKey, TValue> item);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Yarp.ReverseProxy.Utilities.DelegatingStream : Stream {
    private Stream _innerStream;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public int ReadTimeout { get; public set; }
    public bool CanTimeout { get; }
    public int WriteTimeout { get; public set; }
    protected DelegatingStream(Stream innerStream);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual int get_ReadTimeout();
    public virtual void set_ReadTimeout(int value);
    public virtual bool get_CanTimeout();
    public virtual int get_WriteTimeout();
    public virtual void set_WriteTimeout(int value);
    protected virtual void Dispose(bool disposing);
    public virtual ValueTask DisposeAsync();
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual int Read(Byte[] buffer, int offset, int count);
    [NullableContextAttribute("0")]
public virtual int Read(Span`1<byte> buffer);
    public virtual int ReadByte();
    public virtual Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public virtual ValueTask`1<int> ReadAsync(Memory`1<byte> buffer, CancellationToken cancellationToken);
    public virtual IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    public virtual int EndRead(IAsyncResult asyncResult);
    public virtual void Flush();
    public virtual Task FlushAsync(CancellationToken cancellationToken);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    [NullableContextAttribute("0")]
public virtual void Write(ReadOnlySpan`1<byte> buffer);
    public virtual void WriteByte(byte value);
    public virtual Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public virtual ValueTask WriteAsync(ReadOnlyMemory`1<byte> buffer, CancellationToken cancellationToken);
    public virtual IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    public virtual void EndWrite(IAsyncResult asyncResult);
    public virtual Task CopyToAsync(Stream destination, int bufferSize, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.Utilities.IClock {
    public long TickCount { get; }
    public abstract virtual DateTimeOffset GetUtcNow();
    public abstract virtual long get_TickCount();
    public abstract virtual TimeSpan GetStopwatchTime();
    public abstract virtual Task Delay(TimeSpan delay, CancellationToken cancellationToken);
    public abstract virtual Task Delay(int millisecondsDelay, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Yarp.ReverseProxy.Utilities.IRandomFactory {
    public abstract virtual Random CreateRandomInstance();
}
internal interface Yarp.ReverseProxy.Utilities.ITimer {
    public abstract virtual void Change(long dueTime, long period);
}
[NullableContextAttribute("1")]
internal interface Yarp.ReverseProxy.Utilities.ITimerFactory {
    public abstract virtual ITimer CreateTimer(TimerCallback callback, object state, long dueTime, long period);
}
internal class Yarp.ReverseProxy.Utilities.NullRandomFactory : object {
    [NullableContextAttribute("1")]
public sealed virtual Random CreateRandomInstance();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Utilities.ParsedMetadataEntry`1 : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Parser<T> _parser;
    private string _metadataName;
    private ClusterState _cluster;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Tuple`2 modreq(System.Runtime.CompilerServices.IsVolatile) _value;
    public ParsedMetadataEntry`1(Parser<T> parser, ClusterState cluster, string metadataName);
    public T GetParsedOrDefault(T defaultValue);
}
internal class Yarp.ReverseProxy.Utilities.RandomFactory : object {
    [NullableContextAttribute("1")]
public sealed virtual Random CreateRandomInstance();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Yarp.ReverseProxy.Utilities.ServiceLookupHelper : object {
    [ExtensionAttribute]
public static IDictionary`2<string, T> ToDictionaryByUniqueId(IEnumerable`1<T> services, Func`2<T, string> idSelector);
    [ExtensionAttribute]
public static T GetRequiredServiceById(IDictionary`2<string, T> services, string id, string defaultId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Yarp.ReverseProxy.Utilities.TaskUtilities : object {
    internal static Task`1<bool> TrueTask;
    internal static Task`1<bool> FalseTask;
    private static TaskUtilities();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.Utilities.ThreadStaticRandom : object {
    public static Random Instance { get; }
    public static Random get_Instance();
}
internal class Yarp.ReverseProxy.Utilities.TimerFactory : object {
    [NullableContextAttribute("1")]
public sealed virtual ITimer CreateTimer(TimerCallback callback, object state, long dueTime, long period);
}
internal class Yarp.ReverseProxy.Utilities.TimerWrapper : object {
    [NullableAttribute("1")]
private Timer _realTimer;
    [NullableContextAttribute("1")]
public TimerWrapper(TimerCallback callback, object state, long dueTime, long period);
    public sealed virtual void Change(long dueTime, long period);
    public sealed virtual void Dispose();
}
public enum Yarp.ReverseProxy.Utilities.Tls.ExtensionType : Enum {
    public ushort value__;
    public static ExtensionType ServerName;
    public static ExtensionType MaximumFagmentLength;
    public static ExtensionType ClientCertificateUrl;
    public static ExtensionType TrustedCaKeys;
    public static ExtensionType TruncatedHmac;
    public static ExtensionType CertificateStatusRequest;
    public static ExtensionType ApplicationProtocols;
    public static ExtensionType SupportedVersions;
}
public enum Yarp.ReverseProxy.Utilities.Tls.TlsAlertDescription : Enum {
    public byte value__;
    public static TlsAlertDescription CloseNotify;
    public static TlsAlertDescription UnexpectedMessage;
    public static TlsAlertDescription BadRecordMac;
    public static TlsAlertDescription DecryptionFailed;
    public static TlsAlertDescription RecordOverflow;
    public static TlsAlertDescription DecompressionFail;
    public static TlsAlertDescription HandshakeFailure;
    public static TlsAlertDescription BadCertificate;
    public static TlsAlertDescription UnsupportedCert;
    public static TlsAlertDescription CertificateRevoked;
    public static TlsAlertDescription CertificateExpired;
    public static TlsAlertDescription CertificateUnknown;
    public static TlsAlertDescription IllegalParameter;
    public static TlsAlertDescription UnknownCA;
    public static TlsAlertDescription AccessDenied;
    public static TlsAlertDescription DecodeError;
    public static TlsAlertDescription DecryptError;
    public static TlsAlertDescription ExportRestriction;
    public static TlsAlertDescription ProtocolVersion;
    public static TlsAlertDescription InsuffientSecurity;
    public static TlsAlertDescription InternalError;
    public static TlsAlertDescription UserCanceled;
    public static TlsAlertDescription NoRenegotiation;
    public static TlsAlertDescription UnsupportedExt;
}
public enum Yarp.ReverseProxy.Utilities.Tls.TlsAlertLevel : Enum {
    public byte value__;
    public static TlsAlertLevel Warning;
    public static TlsAlertLevel Fatal;
}
public enum Yarp.ReverseProxy.Utilities.Tls.TlsContentType : Enum {
    public byte value__;
    public static TlsContentType ChangeCipherSpec;
    public static TlsContentType Alert;
    public static TlsContentType Handshake;
    public static TlsContentType AppData;
}
public class Yarp.ReverseProxy.Utilities.Tls.TlsFrameHeader : ValueType {
    public TlsContentType Type;
    public SslProtocols Version;
    public int Length;
    [NullableContextAttribute("1")]
public virtual string ToString();
}
public static class Yarp.ReverseProxy.Utilities.Tls.TlsFrameHelper : object {
    public static int HeaderSize;
    [NullableAttribute("1")]
private static Byte[] s_protocolMismatch13;
    [NullableAttribute("1")]
private static Byte[] s_protocolMismatch12;
    [NullableAttribute("1")]
private static Byte[] s_protocolMismatch11;
    [NullableAttribute("1")]
private static Byte[] s_protocolMismatch10;
    [NullableAttribute("1")]
private static Byte[] s_protocolMismatch30;
    private static int UInt24Size;
    private static int RandomSize;
    private static int OpaqueType1LengthSize;
    private static int OpaqueType2LengthSize;
    private static int ProtocolVersionMajorOffset;
    private static int ProtocolVersionMinorOffset;
    private static int ProtocolVersionSize;
    private static int ProtocolVersionTlsMajorValue;
    [NullableAttribute("1")]
private static IdnMapping s_idnMapping;
    [NullableAttribute("1")]
private static Encoding s_encoding;
    private static TlsFrameHelper();
    public static bool TryGetFrameHeader(ReadOnlySpan`1<byte> frame, TlsFrameHeader& header);
    public static int GetFrameSize(ReadOnlySpan`1<byte> frame);
    public static bool TryGetFrameInfo(ReadOnlySpan`1<byte> frame, TlsFrameInfo& info, ProcessingOptions options, HelloExtensionCallback callback);
    public static string GetServerName(ReadOnlySpan`1<byte> frame);
    public static bool TryGetAlertInfo(ReadOnlySpan`1<byte> frame, TlsAlertLevel& level, TlsAlertDescription& description);
    [NullableContextAttribute("1")]
private static Byte[] CreateProtocolVersionAlert(SslProtocols version);
    [NullableContextAttribute("1")]
public static Byte[] CreateAlertFrame(SslProtocols version, TlsAlertDescription reason);
    private static bool TryParseHelloFrame(ReadOnlySpan`1<byte> sslHandshake, TlsFrameInfo& info, ProcessingOptions options, HelloExtensionCallback callback);
    private static bool TryParseClientHello(ReadOnlySpan`1<byte> clientHello, TlsFrameInfo& info, ProcessingOptions options, HelloExtensionCallback callback);
    private static bool TryParseServerHello(ReadOnlySpan`1<byte> serverHello, TlsFrameInfo& info, ProcessingOptions options, HelloExtensionCallback callback);
    private static bool TryParseHelloExtensions(ReadOnlySpan`1<byte> extensions, TlsFrameInfo& info, ProcessingOptions options, HelloExtensionCallback callback);
    private static bool TryGetSniFromServerNameList(ReadOnlySpan`1<byte> serverNameListExtension, String& sni);
    private static string GetSniFromServerName(ReadOnlySpan`1<byte> serverName, Boolean& invalid);
    private static string GetSniFromHostNameStruct(ReadOnlySpan`1<byte> hostNameStruct, Boolean& invalid);
    private static bool TryGetSupportedVersionsFromExtension(ReadOnlySpan`1<byte> extensionData, SslProtocols& protocols);
    private static bool TryGetApplicationProtocolsFromExtension(ReadOnlySpan`1<byte> extensionData, ApplicationProtocolInfo& alpn);
    private static bool TryGetCipherSuites(ReadOnlySpan`1<byte> bytes, TlsFrameInfo& info);
    private static SslProtocols TlsMinorVersionToProtocol(byte value);
    private static string DecodeString(ReadOnlySpan`1<byte> bytes);
    private static int ReadUInt24BigEndian(ReadOnlySpan`1<byte> bytes);
    private static ReadOnlySpan`1<byte> SkipBytes(ReadOnlySpan`1<byte> bytes, int numberOfBytesToSkip);
    private static ReadOnlySpan`1<byte> SkipOpaqueType1(ReadOnlySpan`1<byte> bytes);
    private static ReadOnlySpan`1<byte> SkipOpaqueType2(ReadOnlySpan`1<byte> bytes);
}
public enum Yarp.ReverseProxy.Utilities.Tls.TlsHandshakeType : Enum {
    public byte value__;
    public static TlsHandshakeType HelloRequest;
    public static TlsHandshakeType ClientHello;
    public static TlsHandshakeType ServerHello;
    public static TlsHandshakeType NewSessionTicket;
    public static TlsHandshakeType EndOfEarlyData;
    public static TlsHandshakeType EncryptedExtensions;
    public static TlsHandshakeType Certificate;
    public static TlsHandshakeType ServerKeyExchange;
    public static TlsHandshakeType CertificateRequest;
    public static TlsHandshakeType ServerHelloDone;
    public static TlsHandshakeType CertificateVerify;
    public static TlsHandshakeType ClientKeyExchange;
    public static TlsHandshakeType Finished;
    public static TlsHandshakeType KeyEpdate;
    public static TlsHandshakeType MessageHash;
}
internal class Yarp.ReverseProxy.Utilities.ValueStopwatch : ValueType {
    private static double _timestampToTicks;
    private long _startTimestamp;
    public TimeSpan Elapsed { get; }
    private ValueStopwatch(long startTimestamp);
    private static ValueStopwatch();
    public TimeSpan get_Elapsed();
    public static ValueStopwatch StartNew();
}
[IsByRefLikeAttribute]
[ObsoleteAttribute("Types with embedded references are not supported in this version of your compiler.", "True")]
internal class Yarp.ReverseProxy.Utilities.ValueStringBuilder : ValueType {
    [NullableAttribute("1")]
private Char[] _arrayToReturnToPool;
    private int _pos;
    [CompilerGeneratedAttribute]
private Span`1<char> <RawChars>k__BackingField;
    public int Length { get; public set; }
    public Span`1<char> RawChars { get; private set; }
    public int get_Length();
    public void set_Length(int value);
    [NullableContextAttribute("1")]
public virtual string ToString();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Span`1<char> get_RawChars();
    [CompilerGeneratedAttribute]
private void set_RawChars(Span`1<char> value);
    public void Append(char c);
    [NullableContextAttribute("1")]
public void Append(string s);
    public void Append(int i);
    private void GrowAndAppend(char c);
    private void Grow(int additionalCapacityBeyondPos);
    public void Dispose();
}
internal enum Yarp.ReverseProxy.WebSocketsTelemetry.WebSocketCloseReason : Enum {
    public int value__;
    public static WebSocketCloseReason Unknown;
    public static WebSocketCloseReason ClientGracefulClose;
    public static WebSocketCloseReason ServerGracefulClose;
    public static WebSocketCloseReason ClientDisconnect;
    public static WebSocketCloseReason ServerDisconnect;
}
internal class Yarp.ReverseProxy.WebSocketsTelemetry.WebSocketsParser : ValueType {
    private static int MaskLength;
    private static int MinHeaderSize;
    private static int MaxHeaderSize;
    [FixedBufferAttribute("System.Byte", "13")]
private <_leftoverBuffer>e__FixedBuffer _leftoverBuffer;
    private byte _minHeaderSize;
    private byte _leftover;
    private ulong _bytesToSkip;
    private long _closeTime;
    [NullableAttribute("1")]
private IClock _clock;
    [CompilerGeneratedAttribute]
private long <MessageCount>k__BackingField;
    public long MessageCount { get; private set; }
    public Nullable`1<DateTime> CloseTime { get; }
    [NullableContextAttribute("1")]
public WebSocketsParser(IClock clock, bool isServer);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public long get_MessageCount();
    [CompilerGeneratedAttribute]
private void set_MessageCount(long value);
    public Nullable`1<DateTime> get_CloseTime();
    public void Consume(ReadOnlySpan`1<byte> buffer);
}
[EventSourceAttribute]
internal class Yarp.ReverseProxy.WebSocketsTelemetry.WebSocketsTelemetry : EventSource {
    [NullableAttribute("1")]
public static WebSocketsTelemetry Log;
    private static WebSocketsTelemetry();
    [EventAttribute("1")]
public void WebSocketClosed(long establishedTime, WebSocketCloseReason closeReason, long messagesRead, long messagesWritten);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Yarp.ReverseProxy.WebSocketsTelemetry.WebSocketsTelemetryMiddleware : object {
    private RequestDelegate _next;
    private IClock _clock;
    public WebSocketsTelemetryMiddleware(RequestDelegate next, IClock clock);
    public Task InvokeAsync(HttpContext context);
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.WebSocketsTelemetry.WebSocketsTelemetryMiddleware/<InvokeAsyncCore>d__4")]
private static Task InvokeAsyncCore(HttpUpgradeFeatureWrapper upgradeWrapper, RequestDelegate next);
}
internal class Yarp.ReverseProxy.WebSocketsTelemetry.WebSocketsTelemetryStream : DelegatingStream {
    private WebSocketsParser _readParser;
    private WebSocketsParser _writeParser;
    [CompilerGeneratedAttribute]
private DateTime <EstablishedTime>k__BackingField;
    public DateTime EstablishedTime { get; }
    public long MessagesRead { get; }
    public long MessagesWritten { get; }
    [NullableContextAttribute("1")]
public WebSocketsTelemetryStream(IClock clock, Stream innerStream);
    [CompilerGeneratedAttribute]
public DateTime get_EstablishedTime();
    public long get_MessagesRead();
    public long get_MessagesWritten();
    [NullableContextAttribute("1")]
public WebSocketCloseReason GetCloseReason(HttpContext context);
    public virtual ValueTask`1<int> ReadAsync(Memory`1<byte> buffer, CancellationToken cancellationToken);
    public virtual ValueTask WriteAsync(ReadOnlyMemory`1<byte> buffer, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Yarp.ReverseProxy.WebSocketsTelemetry.WebSocketsTelemetryStream/<<ReadAsync>g__Core|11_0>d")]
[CompilerGeneratedAttribute]
private ValueTask`1<int> <ReadAsync>g__Core|11_0(Memory`1<byte> buffer, ValueTask`1<int> readTask);
}
