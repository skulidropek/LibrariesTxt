internal class DotNetOpenAuth.OAuth2.ChannelElements.EndUserAuthorizationResponseTypeEncoder : object {
    public sealed virtual string Encode(object value);
    public sealed virtual object Decode(string value);
}
internal class DotNetOpenAuth.OAuth2.ChannelElements.GrantTypeEncoder : object {
    public sealed virtual string Encode(object value);
    public sealed virtual object Decode(string value);
}
internal abstract class DotNetOpenAuth.OAuth2.ChannelElements.OAuth2ChannelBase : StandardMessageFactoryChannel {
    private static Version[] Versions;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<string, string>, bool> CS$<>9__CachedAnonymousMethodDelegate2;
    [CompilerGeneratedAttribute]
private static Func`2<KeyValuePair`2<string, string>, string> CS$<>9__CachedAnonymousMethodDelegate3;
    [CompilerGeneratedAttribute]
private static Func`2<Protocol, Version> CS$<>9__CachedAnonymousMethodDelegate5;
    internal OAuth2ChannelBase(Type[] messageTypes, IChannelBindingElement[] channelBindingElements, IHostFactories hostFactories);
    private static OAuth2ChannelBase();
    protected virtual void FilterReceivedFields(IDictionary`2<string, string> fields);
    [CompilerGeneratedAttribute]
private static bool <FilterReceivedFields>b__0(KeyValuePair`2<string, string> pair);
    [CompilerGeneratedAttribute]
private static string <FilterReceivedFields>b__1(KeyValuePair`2<string, string> pair);
    [CompilerGeneratedAttribute]
private static Version <.cctor>b__4(Protocol v);
}
[CompilerGeneratedAttribute]
[DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
internal class DotNetOpenAuth.OAuth2.ClientAuthorizationStrings : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string RefreshTokenInappropriateForRequestType { get; }
    internal static string TokenEndpointErrorFormat { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_RefreshTokenInappropriateForRequestType();
    internal static string get_TokenEndpointErrorFormat();
}
public enum DotNetOpenAuth.OAuth2.ClientType : Enum {
    public int value__;
    public static ClientType Confidential;
    public static ClientType Public;
}
public interface DotNetOpenAuth.OAuth2.IAccessTokenResult {
    public bool AllowRefreshToken { get; public set; }
    public AccessToken AccessToken { get; }
    public abstract virtual bool get_AllowRefreshToken();
    public abstract virtual void set_AllowRefreshToken(bool value);
    public abstract virtual AccessToken get_AccessToken();
}
public interface DotNetOpenAuth.OAuth2.IClientDescription {
    public Uri DefaultCallback { get; }
    public ClientType ClientType { get; }
    public bool HasNonEmptySecret { get; }
    public abstract virtual Uri get_DefaultCallback();
    public abstract virtual ClientType get_ClientType();
    public abstract virtual bool get_HasNonEmptySecret();
    public abstract virtual bool IsCallbackAllowed(Uri callback);
    public abstract virtual bool IsValidClientSecret(string secret);
}
internal class DotNetOpenAuth.OAuth2.Messages.AccessTokenAuthorizationCodeRequest : AccessTokenRequestBase {
    [CompilerGeneratedAttribute]
private string <AuthorizationCode>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Callback>k__BackingField;
    internal GrantType GrantType { get; }
    [MessagePartAttribute("code")]
internal string AuthorizationCode { get; internal set; }
    [MessagePartAttribute("redirect_uri")]
internal Uri Callback { get; internal set; }
    protected HashSet`1<string> RequestedScope { get; }
    protected AccessTokenAuthorizationCodeRequest(Uri tokenEndpoint, Version version);
    internal virtual GrantType get_GrantType();
    [CompilerGeneratedAttribute]
internal string get_AuthorizationCode();
    [CompilerGeneratedAttribute]
internal void set_AuthorizationCode(string value);
    [CompilerGeneratedAttribute]
internal Uri get_Callback();
    [CompilerGeneratedAttribute]
internal void set_Callback(Uri value);
    protected virtual HashSet`1<string> get_RequestedScope();
}
internal class DotNetOpenAuth.OAuth2.Messages.AccessTokenClientCredentialsRequest : ScopedAccessTokenRequest {
    private IAuthorizationDescription DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationCarryingRequest.AuthorizationDescription { get; }
    private DateTime DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationDescription.UtcIssued { get; }
    private string DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationDescription.User { get; }
    private HashSet`1<string> DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationDescription.Scope { get; }
    internal GrantType GrantType { get; }
    internal AccessTokenClientCredentialsRequest(Uri tokenEndpoint, Version version);
    private sealed virtual override IAuthorizationDescription DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationCarryingRequest.get_AuthorizationDescription();
    private sealed virtual override DateTime DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationDescription.get_UtcIssued();
    private sealed virtual override string DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationDescription.get_User();
    private sealed virtual override HashSet`1<string> DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationDescription.get_Scope();
    internal virtual GrantType get_GrantType();
}
internal class DotNetOpenAuth.OAuth2.Messages.AccessTokenFailedResponse : MessageBase {
    private bool invalidClientCredentialsInAuthorizationHeader;
    private WebHeaderCollection headers;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ErrorUri>k__BackingField;
    private HttpStatusCode DotNetOpenAuth.Messaging.IHttpDirectResponse.HttpStatusCode { get; }
    public WebHeaderCollection Headers { get; }
    [MessagePartAttribute("error")]
internal string Error { get; internal set; }
    [MessagePartAttribute("error_description")]
internal string ErrorDescription { get; internal set; }
    [MessagePartAttribute("error_uri")]
internal Uri ErrorUri { get; internal set; }
    internal AccessTokenFailedResponse(AccessTokenRequestBase request);
    internal AccessTokenFailedResponse(AccessTokenRequestBase request, bool invalidClientCredentialsInAuthorizationHeader);
    internal AccessTokenFailedResponse(Version version);
    private sealed virtual override HttpStatusCode DotNetOpenAuth.Messaging.IHttpDirectResponse.get_HttpStatusCode();
    public sealed virtual WebHeaderCollection get_Headers();
    [CompilerGeneratedAttribute]
internal string get_Error();
    [CompilerGeneratedAttribute]
internal void set_Error(string value);
    [CompilerGeneratedAttribute]
internal string get_ErrorDescription();
    [CompilerGeneratedAttribute]
internal void set_ErrorDescription(string value);
    [CompilerGeneratedAttribute]
internal Uri get_ErrorUri();
    [CompilerGeneratedAttribute]
internal void set_ErrorUri(Uri value);
}
internal class DotNetOpenAuth.OAuth2.Messages.AccessTokenRefreshRequest : ScopedAccessTokenRequest {
    [CompilerGeneratedAttribute]
private string <RefreshToken>k__BackingField;
    [MessagePartAttribute("refresh_token")]
internal string RefreshToken { get; internal set; }
    internal GrantType GrantType { get; }
    protected AccessTokenRefreshRequest(Uri tokenEndpoint, Version version);
    [CompilerGeneratedAttribute]
internal string get_RefreshToken();
    [CompilerGeneratedAttribute]
internal void set_RefreshToken(string value);
    internal virtual GrantType get_GrantType();
}
public abstract class DotNetOpenAuth.OAuth2.Messages.AccessTokenRequestBase : AuthenticatedClientRequestBase {
    [CompilerGeneratedAttribute]
private bool <ClientAuthenticated>k__BackingField;
    [CompilerGeneratedAttribute]
private IAccessTokenResult <DotNetOpenAuth.OAuth2.Messages.IAccessTokenRequestInternal.AccessTokenResult>k__BackingField;
    private HashSet`1<string> DotNetOpenAuth.OAuth2.Messages.IAccessTokenRequest.Scope { get; }
    public bool ClientAuthenticated { get; internal set; }
    private IAccessTokenResult DotNetOpenAuth.OAuth2.Messages.IAccessTokenRequestInternal.AccessTokenResult { get; private set; }
    public string UserName { get; }
    [MessagePartAttribute("grant_type")]
internal GrantType GrantType { get; }
    protected HashSet`1<string> RequestedScope { get; }
    protected AccessTokenRequestBase(Uri tokenEndpoint, Version version);
    private sealed virtual override HashSet`1<string> DotNetOpenAuth.OAuth2.Messages.IAccessTokenRequest.get_Scope();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_ClientAuthenticated();
    [CompilerGeneratedAttribute]
internal void set_ClientAuthenticated(bool value);
    [CompilerGeneratedAttribute]
private sealed virtual override IAccessTokenResult DotNetOpenAuth.OAuth2.Messages.IAccessTokenRequestInternal.get_AccessTokenResult();
    [CompilerGeneratedAttribute]
private sealed virtual override void DotNetOpenAuth.OAuth2.Messages.IAccessTokenRequestInternal.set_AccessTokenResult(IAccessTokenResult value);
    public virtual string get_UserName();
    internal abstract virtual GrantType get_GrantType();
    protected abstract virtual HashSet`1<string> get_RequestedScope();
    protected virtual void EnsureValidMessage();
}
internal class DotNetOpenAuth.OAuth2.Messages.AccessTokenResourceOwnerPasswordCredentialsRequest : ScopedAccessTokenRequest {
    [CompilerGeneratedAttribute]
private string <RequestingUserName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CredentialsValidated>k__BackingField;
    private IAuthorizationDescription DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationCarryingRequest.AuthorizationDescription { get; }
    private DateTime DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationDescription.UtcIssued { get; }
    private string DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationDescription.User { get; }
    private HashSet`1<string> DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationDescription.Scope { get; }
    public string UserName { get; }
    internal GrantType GrantType { get; }
    [MessagePartAttribute("username")]
internal string RequestingUserName { get; internal set; }
    [MessagePartAttribute("password")]
internal string Password { get; internal set; }
    internal bool CredentialsValidated { get; internal set; }
    internal AccessTokenResourceOwnerPasswordCredentialsRequest(Uri accessTokenEndpoint, Version version);
    private sealed virtual override IAuthorizationDescription DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationCarryingRequest.get_AuthorizationDescription();
    private sealed virtual override DateTime DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationDescription.get_UtcIssued();
    private sealed virtual override string DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationDescription.get_User();
    private sealed virtual override HashSet`1<string> DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationDescription.get_Scope();
    public virtual string get_UserName();
    internal virtual GrantType get_GrantType();
    [CompilerGeneratedAttribute]
internal string get_RequestingUserName();
    [CompilerGeneratedAttribute]
internal void set_RequestingUserName(string value);
    [CompilerGeneratedAttribute]
internal string get_Password();
    [CompilerGeneratedAttribute]
internal void set_Password(string value);
    [CompilerGeneratedAttribute]
internal bool get_CredentialsValidated();
    [CompilerGeneratedAttribute]
internal void set_CredentialsValidated(bool value);
}
internal class DotNetOpenAuth.OAuth2.Messages.AccessTokenSuccessResponse : MessageBase {
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Lifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RefreshToken>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<string> <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private AccessToken <DotNetOpenAuth.OAuth2.ChannelElements.IAccessTokenCarryingRequest.AuthorizationDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasRefreshToken>k__BackingField;
    private HttpStatusCode DotNetOpenAuth.Messaging.IHttpDirectResponse.HttpStatusCode { get; }
    private WebHeaderCollection DotNetOpenAuth.Messaging.IHttpDirectResponse.Headers { get; }
    [MessagePartAttribute("access_token")]
public string AccessToken { get; internal set; }
    [MessagePartAttribute("token_type")]
public string TokenType { get; internal set; }
    [MessagePartAttribute("expires_in")]
public Nullable`1<TimeSpan> Lifetime { get; internal set; }
    [MessagePartAttribute("refresh_token")]
public string RefreshToken { get; internal set; }
    [MessagePartAttribute("scope")]
public HashSet`1<string> Scope { get; private set; }
    private Nullable`1<TimeSpan> DotNetOpenAuth.OAuth2.Messages.IAccessTokenIssuingResponse.Lifetime { get; private set; }
    private IAuthorizationDescription DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationCarryingRequest.AuthorizationDescription { get; }
    private AccessToken DotNetOpenAuth.OAuth2.ChannelElements.IAccessTokenCarryingRequest.AuthorizationDescription { get; private set; }
    private string DotNetOpenAuth.OAuth2.ChannelElements.IAccessTokenCarryingRequest.AccessToken { get; private set; }
    internal bool HasRefreshToken { get; internal set; }
    internal AccessTokenSuccessResponse(AccessTokenRequestBase request);
    private sealed virtual override HttpStatusCode DotNetOpenAuth.Messaging.IHttpDirectResponse.get_HttpStatusCode();
    private sealed virtual override WebHeaderCollection DotNetOpenAuth.Messaging.IHttpDirectResponse.get_Headers();
    [CompilerGeneratedAttribute]
public string get_AccessToken();
    [CompilerGeneratedAttribute]
internal void set_AccessToken(string value);
    [CompilerGeneratedAttribute]
public string get_TokenType();
    [CompilerGeneratedAttribute]
internal void set_TokenType(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_Lifetime();
    [CompilerGeneratedAttribute]
internal void set_Lifetime(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public string get_RefreshToken();
    [CompilerGeneratedAttribute]
internal void set_RefreshToken(string value);
    [CompilerGeneratedAttribute]
public HashSet`1<string> get_Scope();
    [CompilerGeneratedAttribute]
private void set_Scope(HashSet`1<string> value);
    private sealed virtual override Nullable`1<TimeSpan> DotNetOpenAuth.OAuth2.Messages.IAccessTokenIssuingResponse.get_Lifetime();
    private sealed virtual override void DotNetOpenAuth.OAuth2.Messages.IAccessTokenIssuingResponse.set_Lifetime(Nullable`1<TimeSpan> value);
    private sealed virtual override IAuthorizationDescription DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationCarryingRequest.get_AuthorizationDescription();
    [CompilerGeneratedAttribute]
private sealed virtual override AccessToken DotNetOpenAuth.OAuth2.ChannelElements.IAccessTokenCarryingRequest.get_AuthorizationDescription();
    [CompilerGeneratedAttribute]
private sealed virtual override void DotNetOpenAuth.OAuth2.ChannelElements.IAccessTokenCarryingRequest.set_AuthorizationDescription(AccessToken value);
    private sealed virtual override string DotNetOpenAuth.OAuth2.ChannelElements.IAccessTokenCarryingRequest.get_AccessToken();
    private sealed virtual override void DotNetOpenAuth.OAuth2.ChannelElements.IAccessTokenCarryingRequest.set_AccessToken(string value);
    [CompilerGeneratedAttribute]
internal bool get_HasRefreshToken();
    [CompilerGeneratedAttribute]
internal void set_HasRefreshToken(bool value);
    protected virtual void EnsureValidMessage();
}
public abstract class DotNetOpenAuth.OAuth2.Messages.AuthenticatedClientRequestBase : MessageBase {
    private HttpRequestHeaders headers;
    [CompilerGeneratedAttribute]
private string <ClientIdentifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientSecret>k__BackingField;
    [MessagePartAttribute("client_id")]
public string ClientIdentifier { get; internal set; }
    [MessagePartAttribute("client_secret")]
public string ClientSecret { get; internal set; }
    public HttpRequestHeaders Headers { get; }
    protected AuthenticatedClientRequestBase(Uri tokenEndpoint, Version version);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ClientIdentifier();
    [CompilerGeneratedAttribute]
internal void set_ClientIdentifier(string value);
    [CompilerGeneratedAttribute]
public string get_ClientSecret();
    [CompilerGeneratedAttribute]
internal void set_ClientSecret(string value);
    public sealed virtual HttpRequestHeaders get_Headers();
}
public class DotNetOpenAuth.OAuth2.Messages.EndUserAuthorizationFailedResponse : MessageBase {
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ErrorUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DotNetOpenAuth.OAuth2.Messages.IMessageWithClientState.ClientState>k__BackingField;
    [MessagePartAttribute("error")]
public string Error { get; public set; }
    [MessagePartAttribute("error_description")]
public string ErrorDescription { get; public set; }
    [MessagePartAttribute("error_uri")]
public Uri ErrorUri { get; public set; }
    [MessagePartAttribute("state")]
private string DotNetOpenAuth.OAuth2.Messages.IMessageWithClientState.ClientState { get; private set; }
    internal EndUserAuthorizationFailedResponse(Uri clientCallback, Version version);
    internal EndUserAuthorizationFailedResponse(Uri clientCallback, EndUserAuthorizationRequest request);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
    [CompilerGeneratedAttribute]
public Uri get_ErrorUri();
    [CompilerGeneratedAttribute]
public void set_ErrorUri(Uri value);
    [CompilerGeneratedAttribute]
private sealed virtual override string DotNetOpenAuth.OAuth2.Messages.IMessageWithClientState.get_ClientState();
    [CompilerGeneratedAttribute]
private sealed virtual override void DotNetOpenAuth.OAuth2.Messages.IMessageWithClientState.set_ClientState(string value);
}
public class DotNetOpenAuth.OAuth2.Messages.EndUserAuthorizationImplicitRequest : EndUserAuthorizationRequest {
    [MessagePartAttribute("response_type")]
private static EndUserAuthorizationResponseType ResponseTypeConst;
    [CompilerGeneratedAttribute]
private IAccessTokenResult <DotNetOpenAuth.OAuth2.Messages.IAccessTokenRequestInternal.AccessTokenResult>k__BackingField;
    public EndUserAuthorizationResponseType ResponseType { get; }
    private IAccessTokenResult DotNetOpenAuth.OAuth2.Messages.IAccessTokenRequestInternal.AccessTokenResult { get; private set; }
    private string DotNetOpenAuth.OAuth2.Messages.IAccessTokenRequest.UserName { get; }
    private bool DotNetOpenAuth.OAuth2.Messages.IAccessTokenRequest.ClientAuthenticated { get; }
    protected EndUserAuthorizationImplicitRequest(Uri authorizationEndpoint, Version version);
    public virtual EndUserAuthorizationResponseType get_ResponseType();
    [CompilerGeneratedAttribute]
private sealed virtual override IAccessTokenResult DotNetOpenAuth.OAuth2.Messages.IAccessTokenRequestInternal.get_AccessTokenResult();
    [CompilerGeneratedAttribute]
private sealed virtual override void DotNetOpenAuth.OAuth2.Messages.IAccessTokenRequestInternal.set_AccessTokenResult(IAccessTokenResult value);
    private sealed virtual override string DotNetOpenAuth.OAuth2.Messages.IAccessTokenRequest.get_UserName();
    private sealed virtual override bool DotNetOpenAuth.OAuth2.Messages.IAccessTokenRequest.get_ClientAuthenticated();
}
public class DotNetOpenAuth.OAuth2.Messages.EndUserAuthorizationRequest : MessageBase {
    [MessagePartAttribute("response_type")]
private static EndUserAuthorizationResponseType ResponseTypeConst;
    [CompilerGeneratedAttribute]
private string <ClientIdentifier>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Callback>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientState>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<string> <Scope>k__BackingField;
    public EndUserAuthorizationResponseType ResponseType { get; }
    [MessagePartAttribute("client_id")]
public string ClientIdentifier { get; public set; }
    [MessagePartAttribute("redirect_uri")]
public Uri Callback { get; public set; }
    [MessagePartAttribute("state")]
public string ClientState { get; public set; }
    [MessagePartAttribute("scope")]
public HashSet`1<string> Scope { get; private set; }
    protected EndUserAuthorizationRequest(Uri authorizationEndpoint, Version version);
    public virtual EndUserAuthorizationResponseType get_ResponseType();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ClientIdentifier();
    [CompilerGeneratedAttribute]
public void set_ClientIdentifier(string value);
    [CompilerGeneratedAttribute]
public Uri get_Callback();
    [CompilerGeneratedAttribute]
public void set_Callback(Uri value);
    [CompilerGeneratedAttribute]
public string get_ClientState();
    [CompilerGeneratedAttribute]
public void set_ClientState(string value);
    [CompilerGeneratedAttribute]
public sealed virtual HashSet`1<string> get_Scope();
    [CompilerGeneratedAttribute]
private void set_Scope(HashSet`1<string> value);
    protected virtual void EnsureValidMessage();
}
public enum DotNetOpenAuth.OAuth2.Messages.EndUserAuthorizationResponseType : Enum {
    public int value__;
    public static EndUserAuthorizationResponseType AccessToken;
    public static EndUserAuthorizationResponseType AuthorizationCode;
}
internal class DotNetOpenAuth.OAuth2.Messages.EndUserAuthorizationSuccessAccessTokenResponse : EndUserAuthorizationSuccessResponseBase {
    [CompilerGeneratedAttribute]
private AccessToken <DotNetOpenAuth.OAuth2.ChannelElements.IAccessTokenCarryingRequest.AuthorizationDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Lifetime>k__BackingField;
    private AccessToken DotNetOpenAuth.OAuth2.ChannelElements.IAccessTokenCarryingRequest.AuthorizationDescription { get; private set; }
    private IAuthorizationDescription DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationCarryingRequest.AuthorizationDescription { get; }
    private bool DotNetOpenAuth.Messaging.IHttpIndirectResponse.Include301RedirectPayloadInFragment { get; }
    private Nullable`1<TimeSpan> DotNetOpenAuth.OAuth2.Messages.IAccessTokenIssuingResponse.Lifetime { get; private set; }
    [MessagePartAttribute("token_type")]
public string TokenType { get; internal set; }
    [MessagePartAttribute("access_token")]
public string AccessToken { get; public set; }
    [MessagePartAttribute("scope")]
public ICollection`1<string> Scope { get; protected set; }
    [MessagePartAttribute("expires_in")]
internal Nullable`1<TimeSpan> Lifetime { get; internal set; }
    internal EndUserAuthorizationSuccessAccessTokenResponse(Uri clientCallback, Version version);
    internal EndUserAuthorizationSuccessAccessTokenResponse(Uri clientCallback, EndUserAuthorizationRequest request);
    [CompilerGeneratedAttribute]
private sealed virtual override AccessToken DotNetOpenAuth.OAuth2.ChannelElements.IAccessTokenCarryingRequest.get_AuthorizationDescription();
    [CompilerGeneratedAttribute]
private sealed virtual override void DotNetOpenAuth.OAuth2.ChannelElements.IAccessTokenCarryingRequest.set_AuthorizationDescription(AccessToken value);
    private sealed virtual override IAuthorizationDescription DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationCarryingRequest.get_AuthorizationDescription();
    private sealed virtual override bool DotNetOpenAuth.Messaging.IHttpIndirectResponse.get_Include301RedirectPayloadInFragment();
    private sealed virtual override Nullable`1<TimeSpan> DotNetOpenAuth.OAuth2.Messages.IAccessTokenIssuingResponse.get_Lifetime();
    private sealed virtual override void DotNetOpenAuth.OAuth2.Messages.IAccessTokenIssuingResponse.set_Lifetime(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public string get_TokenType();
    [CompilerGeneratedAttribute]
internal void set_TokenType(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AccessToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AccessToken(string value);
    public ICollection`1<string> get_Scope();
    protected void set_Scope(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<TimeSpan> get_Lifetime();
    [CompilerGeneratedAttribute]
internal void set_Lifetime(Nullable`1<TimeSpan> value);
}
internal class DotNetOpenAuth.OAuth2.Messages.EndUserAuthorizationSuccessAuthCodeResponse : EndUserAuthorizationSuccessResponseBase {
    [CompilerGeneratedAttribute]
private string <AuthorizationCode>k__BackingField;
    [MessagePartAttribute("code")]
internal string AuthorizationCode { get; internal set; }
    internal EndUserAuthorizationSuccessAuthCodeResponse(Uri clientCallback, Version version);
    internal EndUserAuthorizationSuccessAuthCodeResponse(Uri clientCallback, EndUserAuthorizationRequest request);
    [CompilerGeneratedAttribute]
internal string get_AuthorizationCode();
    [CompilerGeneratedAttribute]
internal void set_AuthorizationCode(string value);
}
public abstract class DotNetOpenAuth.OAuth2.Messages.EndUserAuthorizationSuccessResponseBase : MessageBase {
    [CompilerGeneratedAttribute]
private string <DotNetOpenAuth.OAuth2.Messages.IMessageWithClientState.ClientState>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthorizingUsername>k__BackingField;
    [MessagePartAttribute("state")]
private string DotNetOpenAuth.OAuth2.Messages.IMessageWithClientState.ClientState { get; private set; }
    public ICollection`1<string> Scope { get; protected set; }
    internal string AuthorizingUsername { get; internal set; }
    internal EndUserAuthorizationSuccessResponseBase(Uri clientCallback, Version version);
    internal EndUserAuthorizationSuccessResponseBase(Uri clientCallback, EndUserAuthorizationRequest request);
    [CompilerGeneratedAttribute]
private sealed virtual override string DotNetOpenAuth.OAuth2.Messages.IMessageWithClientState.get_ClientState();
    [CompilerGeneratedAttribute]
private sealed virtual override void DotNetOpenAuth.OAuth2.Messages.IMessageWithClientState.set_ClientState(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_Scope();
    [CompilerGeneratedAttribute]
protected void set_Scope(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
internal string get_AuthorizingUsername();
    [CompilerGeneratedAttribute]
internal void set_AuthorizingUsername(string value);
}
internal enum DotNetOpenAuth.OAuth2.Messages.GrantType : Enum {
    public int value__;
    public static GrantType AuthorizationCode;
    public static GrantType Password;
    public static GrantType Assertion;
    public static GrantType RefreshToken;
    public static GrantType ClientCredentials;
}
internal interface DotNetOpenAuth.OAuth2.Messages.IAccessTokenIssuingResponse {
    public Nullable`1<TimeSpan> Lifetime { get; public set; }
    public abstract virtual Nullable`1<TimeSpan> get_Lifetime();
    public abstract virtual void set_Lifetime(Nullable`1<TimeSpan> value);
}
public interface DotNetOpenAuth.OAuth2.Messages.IAccessTokenRequest {
    public bool ClientAuthenticated { get; }
    public string ClientIdentifier { get; }
    public string UserName { get; }
    public HashSet`1<string> Scope { get; }
    public abstract virtual bool get_ClientAuthenticated();
    public abstract virtual string get_ClientIdentifier();
    public abstract virtual string get_UserName();
    public abstract virtual HashSet`1<string> get_Scope();
}
public interface DotNetOpenAuth.OAuth2.Messages.IAccessTokenRequestInternal {
    public IAccessTokenResult AccessTokenResult { get; public set; }
    public abstract virtual IAccessTokenResult get_AccessTokenResult();
    public abstract virtual void set_AccessTokenResult(IAccessTokenResult value);
}
internal interface DotNetOpenAuth.OAuth2.Messages.IMessageWithClientState {
    public string ClientState { get; public set; }
    public abstract virtual string get_ClientState();
    public abstract virtual void set_ClientState(string value);
}
internal abstract class DotNetOpenAuth.OAuth2.Messages.ScopedAccessTokenRequest : AccessTokenRequestBase {
    [CompilerGeneratedAttribute]
private HashSet`1<string> <Scope>k__BackingField;
    [MessagePartAttribute("scope")]
internal HashSet`1<string> Scope { get; private set; }
    protected HashSet`1<string> RequestedScope { get; }
    internal ScopedAccessTokenRequest(Uri tokenEndpoint, Version version);
    [CompilerGeneratedAttribute]
internal HashSet`1<string> get_Scope();
    [CompilerGeneratedAttribute]
private void set_Scope(HashSet`1<string> value);
    protected virtual HashSet`1<string> get_RequestedScope();
}
public class DotNetOpenAuth.OAuth2.TokenEndpointProtocolException : ProtocolException {
    private AccessTokenRequestBase requestMessage;
    private string authenticateHeader;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <MoreInformation>k__BackingField;
    public string Error { get; private set; }
    public string Description { get; private set; }
    public Uri MoreInformation { get; private set; }
    public TokenEndpointProtocolException(AccessTokenRequestBase requestMessage, string error, string description, Uri moreInformation, string authenticateHeader);
    public TokenEndpointProtocolException(Exception innerException);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
private void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
private void set_Description(string value);
    [CompilerGeneratedAttribute]
public Uri get_MoreInformation();
    [CompilerGeneratedAttribute]
private void set_MoreInformation(Uri value);
    public IDirectResponseProtocolMessage GetResponse();
}
internal class ThisAssembly : object {
    internal static string AssemblyVersion;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyTitle;
    internal static string AssemblyProduct;
}
