internal class DotNetOpenAuth.Configuration.OAuth2SectionGroup : ConfigurationSectionGroup {
    internal static string SectionName;
}
public class DotNetOpenAuth.OAuth2.AccessToken : AuthorizationDataBag {
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Lifetime>k__BackingField;
    [MessagePartAttribute]
public Nullable`1<TimeSpan> Lifetime { get; public set; }
    protected Type BagType { get; }
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_Lifetime();
    [CompilerGeneratedAttribute]
public void set_Lifetime(Nullable`1<TimeSpan> value);
    protected virtual Type get_BagType();
    internal static IDataBagFormatter`1<AccessToken> CreateFormatter(RSACryptoServiceProvider signingKey, RSACryptoServiceProvider encryptingKey);
    internal static IDataBagFormatter`1<AccessToken> CreateFormatter(ICryptoKeyStore symmetricKeyStore);
    internal void ApplyAuthorization(IAuthorizationDescription authorization);
    internal void ApplyAuthorization(IEnumerable`1<string> scopes, string username, Nullable`1<TimeSpan> lifetime);
    protected internal virtual string Serialize();
    protected virtual void EnsureValidMessage();
}
public abstract class DotNetOpenAuth.OAuth2.ChannelElements.AuthorizationDataBag : DataBag {
    [CompilerGeneratedAttribute]
private string <ClientIdentifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <User>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<string> <Scope>k__BackingField;
    [MessagePartAttribute]
public string ClientIdentifier { get; public set; }
    public DateTime UtcIssued { get; }
    [MessagePartAttribute]
public string User { get; public set; }
    [MessagePartAttribute]
public HashSet`1<string> Scope { get; private set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_ClientIdentifier();
    [CompilerGeneratedAttribute]
public void set_ClientIdentifier(string value);
    public sealed virtual DateTime get_UtcIssued();
    [CompilerGeneratedAttribute]
public sealed virtual string get_User();
    [CompilerGeneratedAttribute]
public void set_User(string value);
    [CompilerGeneratedAttribute]
public sealed virtual HashSet`1<string> get_Scope();
    [CompilerGeneratedAttribute]
private void set_Scope(HashSet`1<string> value);
}
public enum DotNetOpenAuth.OAuth2.ChannelElements.ClientAuthenticationResult : Enum {
    public int value__;
    public static ClientAuthenticationResult NoAuthenticationRecognized;
    public static ClientAuthenticationResult ClientIdNotAuthenticated;
    public static ClientAuthenticationResult ClientAuthenticated;
    public static ClientAuthenticationResult ClientAuthenticationRejected;
}
internal interface DotNetOpenAuth.OAuth2.ChannelElements.IAccessTokenCarryingRequest {
    public string AccessToken { get; public set; }
    public AccessToken AuthorizationDescription { get; public set; }
    public abstract virtual string get_AccessToken();
    public abstract virtual void set_AccessToken(string value);
    public abstract virtual AccessToken get_AuthorizationDescription();
    public abstract virtual void set_AuthorizationDescription(AccessToken value);
}
internal interface DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationCarryingRequest {
    public IAuthorizationDescription AuthorizationDescription { get; }
    public abstract virtual IAuthorizationDescription get_AuthorizationDescription();
}
public interface DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationDescription {
    public string ClientIdentifier { get; }
    public DateTime UtcIssued { get; }
    public string User { get; }
    public HashSet`1<string> Scope { get; }
    public abstract virtual string get_ClientIdentifier();
    public abstract virtual DateTime get_UtcIssued();
    public abstract virtual string get_User();
    public abstract virtual HashSet`1<string> get_Scope();
}
internal class DotNetOpenAuth.OAuth2.ChannelElements.ScopeEncoder : object {
    [CompilerGeneratedAttribute]
private static Func`2<string, bool> CS$<>9__CachedAnonymousMethodDelegate1;
    public sealed virtual string Encode(object value);
    public sealed virtual object Decode(string value);
    [CompilerGeneratedAttribute]
private static bool <Encode>b__0(string scope);
}
public interface DotNetOpenAuth.OAuth2.IScopeSatisfiedCheck {
    public abstract virtual bool IsScopeSatisfied(HashSet`1<string> requiredScope, HashSet`1<string> grantedScope);
}
internal class DotNetOpenAuth.OAuth2.Messages.AccessProtectedResourceRequest : MessageBase {
    [CompilerGeneratedAttribute]
private AccessToken <DotNetOpenAuth.OAuth2.ChannelElements.IAccessTokenCarryingRequest.AuthorizationDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    private string DotNetOpenAuth.OAuth2.ChannelElements.IAccessTokenCarryingRequest.AccessToken { get; private set; }
    private AccessToken DotNetOpenAuth.OAuth2.ChannelElements.IAccessTokenCarryingRequest.AuthorizationDescription { get; private set; }
    private IAuthorizationDescription DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationCarryingRequest.AuthorizationDescription { get; }
    [MessagePartAttribute("token_type")]
internal static string TokenType { get; }
    [MessagePartAttribute("access_token")]
internal string AccessToken { get; internal set; }
    internal AccessProtectedResourceRequest(Uri recipient, Version version);
    private sealed virtual override string DotNetOpenAuth.OAuth2.ChannelElements.IAccessTokenCarryingRequest.get_AccessToken();
    private sealed virtual override void DotNetOpenAuth.OAuth2.ChannelElements.IAccessTokenCarryingRequest.set_AccessToken(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override AccessToken DotNetOpenAuth.OAuth2.ChannelElements.IAccessTokenCarryingRequest.get_AuthorizationDescription();
    [CompilerGeneratedAttribute]
private sealed virtual override void DotNetOpenAuth.OAuth2.ChannelElements.IAccessTokenCarryingRequest.set_AuthorizationDescription(AccessToken value);
    private sealed virtual override IAuthorizationDescription DotNetOpenAuth.OAuth2.ChannelElements.IAuthorizationCarryingRequest.get_AuthorizationDescription();
    internal static string get_TokenType();
    [CompilerGeneratedAttribute]
internal string get_AccessToken();
    [CompilerGeneratedAttribute]
internal void set_AccessToken(string value);
}
public class DotNetOpenAuth.OAuth2.Messages.MessageBase : object {
    private Dictionary`2<string, string> extraData;
    private IDirectedProtocolMessage originatingRequest;
    private Version version;
    private MessageTransport messageTransport;
    [CompilerGeneratedAttribute]
private HttpDeliveryMethods <HttpMethods>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Recipient>k__BackingField;
    private Version DotNetOpenAuth.Messaging.IMessage.Version { get; }
    public IDictionary`2<string, string> ExtraData { get; }
    private MessageProtections DotNetOpenAuth.Messaging.IProtocolMessage.RequiredProtection { get; }
    private MessageTransport DotNetOpenAuth.Messaging.IProtocolMessage.Transport { get; }
    private HttpDeliveryMethods DotNetOpenAuth.Messaging.IDirectedProtocolMessage.HttpMethods { get; }
    private Uri DotNetOpenAuth.Messaging.IDirectedProtocolMessage.Recipient { get; }
    private IDirectedProtocolMessage DotNetOpenAuth.Messaging.IDirectResponseProtocolMessage.OriginatingRequest { get; }
    protected static MessageProtections RequiredProtection { get; }
    protected MessageTransport Transport { get; }
    protected Version Version { get; }
    protected HttpDeliveryMethods HttpMethods { get; protected set; }
    protected IDirectedProtocolMessage OriginatingRequest { get; }
    protected Uri Recipient { get; private set; }
    protected MessageBase(Version version);
    protected MessageBase(IDirectedProtocolMessage request, Uri recipient);
    protected MessageBase(Version version, MessageTransport messageTransport, Uri recipient);
    private sealed virtual override Version DotNetOpenAuth.Messaging.IMessage.get_Version();
    public sealed virtual IDictionary`2<string, string> get_ExtraData();
    private sealed virtual override MessageProtections DotNetOpenAuth.Messaging.IProtocolMessage.get_RequiredProtection();
    private sealed virtual override MessageTransport DotNetOpenAuth.Messaging.IProtocolMessage.get_Transport();
    private sealed virtual override HttpDeliveryMethods DotNetOpenAuth.Messaging.IDirectedProtocolMessage.get_HttpMethods();
    private sealed virtual override Uri DotNetOpenAuth.Messaging.IDirectedProtocolMessage.get_Recipient();
    private sealed virtual override IDirectedProtocolMessage DotNetOpenAuth.Messaging.IDirectResponseProtocolMessage.get_OriginatingRequest();
    protected static MessageProtections get_RequiredProtection();
    protected MessageTransport get_Transport();
    protected Version get_Version();
    [CompilerGeneratedAttribute]
protected HttpDeliveryMethods get_HttpMethods();
    [CompilerGeneratedAttribute]
protected void set_HttpMethods(HttpDeliveryMethods value);
    protected IDirectedProtocolMessage get_OriginatingRequest();
    [CompilerGeneratedAttribute]
protected Uri get_Recipient();
    [CompilerGeneratedAttribute]
private void set_Recipient(Uri value);
    private sealed virtual override void DotNetOpenAuth.Messaging.IMessage.EnsureValidMessage();
    protected virtual void EnsureValidMessage();
}
public class DotNetOpenAuth.OAuth2.Messages.UnauthorizedResponse : MessageBase {
    private WebHeaderCollection headers;
    [CompilerGeneratedAttribute]
private HttpStatusCode <HttpStatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ErrorUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Realm>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<string> <Scope>k__BackingField;
    public HttpStatusCode HttpStatusCode { get; public set; }
    public WebHeaderCollection Headers { get; }
    [MessagePartAttribute("error")]
public string ErrorCode { get; public set; }
    [MessagePartAttribute("error_description")]
public string ErrorDescription { get; public set; }
    [MessagePartAttribute("error_uri")]
public Uri ErrorUri { get; public set; }
    [MessagePartAttribute("realm")]
public string Realm { get; public set; }
    [MessagePartAttribute("scope")]
public HashSet`1<string> Scope { get; public set; }
    internal string Scheme { get; }
    protected UnauthorizedResponse(Version version);
    protected UnauthorizedResponse(IDirectedProtocolMessage request);
    [CompilerGeneratedAttribute]
public sealed virtual HttpStatusCode get_HttpStatusCode();
    [CompilerGeneratedAttribute]
public void set_HttpStatusCode(HttpStatusCode value);
    public sealed virtual WebHeaderCollection get_Headers();
    [CompilerGeneratedAttribute]
public string get_ErrorCode();
    [CompilerGeneratedAttribute]
public void set_ErrorCode(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
    [CompilerGeneratedAttribute]
public Uri get_ErrorUri();
    [CompilerGeneratedAttribute]
public void set_ErrorUri(Uri value);
    [CompilerGeneratedAttribute]
public string get_Realm();
    [CompilerGeneratedAttribute]
public void set_Realm(string value);
    [CompilerGeneratedAttribute]
public HashSet`1<string> get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(HashSet`1<string> value);
    internal virtual string get_Scheme();
    internal static UnauthorizedResponse InvalidRequest(ProtocolException exception, Version version);
    internal static UnauthorizedResponse InvalidToken(IDirectedProtocolMessage request, ProtocolException exception);
    internal static UnauthorizedResponse InsufficientScope(IDirectedProtocolMessage request, HashSet`1<string> requiredScopes);
    protected virtual void EnsureValidMessage();
    private static void VerifyErrorCodeOrDescription(string value, string parameterName);
    private static void VerifyErrorUri(Uri valueUri);
}
[CompilerGeneratedAttribute]
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
internal class DotNetOpenAuth.OAuth2.OAuthStrings : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string AbsoluteUriRequired { get; }
    internal static string AccessTokenInvalidForHttpAuthorizationHeader { get; }
    internal static string BearerTokenUnauthorizedAtLeastOneParameterRequired { get; }
    internal static string HttpsRequired { get; }
    internal static string InvalidScopeToken { get; }
    internal static string NoGrantNoRefreshToken { get; }
    internal static string ParameterContainsIllegalCharacters { get; }
    internal static string ResultShouldNotBeNull { get; }
    internal static string ScopesMayNotContainSpaces { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_AbsoluteUriRequired();
    internal static string get_AccessTokenInvalidForHttpAuthorizationHeader();
    internal static string get_BearerTokenUnauthorizedAtLeastOneParameterRequired();
    internal static string get_HttpsRequired();
    internal static string get_InvalidScopeToken();
    internal static string get_NoGrantNoRefreshToken();
    internal static string get_ParameterContainsIllegalCharacters();
    internal static string get_ResultShouldNotBeNull();
    internal static string get_ScopesMayNotContainSpaces();
}
[ExtensionAttribute]
public static class DotNetOpenAuth.OAuth2.OAuthUtilities : object {
    private static string HttpBasicAuthScheme;
    public static StringComparer ScopeStringComparer;
    private static Char[] scopeDelimiter;
    private static Char[] ColonSeparator;
    private static Encoding HttpBasicEncoding;
    private static string accessTokenAuthorizationHeaderAllowedCharacters;
    [CompilerGeneratedAttribute]
private static Func`2<char, bool> CS$<>9__CachedAnonymousMethodDelegate1;
    [CompilerGeneratedAttribute]
private static Func`2<char, bool> CS$<>9__CachedAnonymousMethodDelegate3;
    private static OAuthUtilities();
    public static HashSet`1<string> SplitScopes(string scope);
    public static string JoinScopes(HashSet`1<string> scopes);
    internal static HashSet`1<string> ParseScopeSet(string scopes);
    internal static HashSet`1<string> ParseScopeSet(String[] scopes);
    internal static void VerifyValidScopeTokens(IEnumerable`1<string> scopes);
    internal static void VerifyValidScopeToken(string scopeToken);
    [ExtensionAttribute]
internal static void AuthorizeWithBearerToken(HttpWebRequest request, string accessToken);
    internal static void AuthorizeWithBearerToken(WebHeaderCollection requestHeaders, string accessToken);
    internal static void ApplyHttpBasicAuth(HttpRequestHeaders headers, string userName, string password);
    internal static NetworkCredential ParseHttpBasicAuth(HttpRequestHeaders headers);
    [CompilerGeneratedAttribute]
private static bool <AuthorizeWithBearerToken>b__0(char ch);
    [CompilerGeneratedAttribute]
private static bool <AuthorizeWithBearerToken>b__2(char ch);
}
public class DotNetOpenAuth.OAuth2.Protocol : object {
    internal static string BearerHttpAuthorizationScheme;
    internal static string BearerHttpAuthorizationSchemeWithTrailingSpace;
    internal static string BearerHttpAuthorizationHeaderFormat;
    internal static string BearerTokenEncodedUrlParameterName;
    internal static string state;
    internal static string redirect_uri_mismatch;
    internal static string redirect_uri;
    internal static string client_id;
    internal static string scope;
    internal static string client_secret;
    internal static string code;
    internal static string error;
    internal static string access_token;
    internal static string token_type;
    internal static string refresh_token;
    internal static string expires_in;
    internal static string username;
    internal static string password;
    internal static string error_uri;
    internal static string error_description;
    internal static string response_type;
    internal static string grant_type;
    internal static Protocol V20;
    internal static List`1<Protocol> AllVersions;
    internal static Protocol Default;
    [CompilerGeneratedAttribute]
private Version <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private ProtocolVersion <ProtocolVersion>k__BackingField;
    internal Version Version { get; private set; }
    internal ProtocolVersion ProtocolVersion { get; private set; }
    private static Protocol();
    [CompilerGeneratedAttribute]
internal Version get_Version();
    [CompilerGeneratedAttribute]
private void set_Version(Version value);
    [CompilerGeneratedAttribute]
internal ProtocolVersion get_ProtocolVersion();
    [CompilerGeneratedAttribute]
private void set_ProtocolVersion(ProtocolVersion value);
    internal static Protocol Lookup(ProtocolVersion version);
}
public enum DotNetOpenAuth.OAuth2.ProtocolVersion : Enum {
    public int value__;
    public static ProtocolVersion V20;
}
internal class DotNetOpenAuth.OAuth2.StandardScopeSatisfiedCheck : object {
    public sealed virtual bool IsScopeSatisfied(HashSet`1<string> requiredScope, HashSet`1<string> grantedScope);
}
internal class ThisAssembly : object {
    internal static string AssemblyVersion;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyTitle;
    internal static string AssemblyProduct;
}
