public class SeleniumExtras.PageObjects.ByAll : By {
    private By[] bys;
    public ByAll(By[] bys);
    public virtual IWebElement FindElement(ISearchContext context);
    public virtual ReadOnlyCollection`1<IWebElement> FindElements(ISearchContext context);
    public virtual string ToString();
}
public class SeleniumExtras.PageObjects.ByChained : By {
    private By[] bys;
    public ByChained(By[] bys);
    public virtual IWebElement FindElement(ISearchContext context);
    public virtual ReadOnlyCollection`1<IWebElement> FindElements(ISearchContext context);
    public virtual string ToString();
}
internal static class SeleniumExtras.PageObjects.ByFactory : object {
    public static By From(FindsByAttribute attribute);
}
public class SeleniumExtras.PageObjects.ByIdOrName : By {
    private string elementIdentifier;
    private By idFinder;
    private By nameFinder;
    public ByIdOrName(string elementIdentifier);
    public virtual IWebElement FindElement(ISearchContext context);
    public virtual ReadOnlyCollection`1<IWebElement> FindElements(ISearchContext context);
    public virtual string ToString();
}
[AttributeUsageAttribute("388")]
public class SeleniumExtras.PageObjects.CacheLookupAttribute : Attribute {
}
public class SeleniumExtras.PageObjects.DefaultElementLocator : object {
    private ISearchContext searchContext;
    public ISearchContext SearchContext { get; }
    public DefaultElementLocator(ISearchContext searchContext);
    public sealed virtual ISearchContext get_SearchContext();
    public sealed virtual IWebElement LocateElement(IEnumerable`1<By> bys);
    public sealed virtual ReadOnlyCollection`1<IWebElement> LocateElements(IEnumerable`1<By> bys);
}
public class SeleniumExtras.PageObjects.DefaultPageObjectMemberDecorator : object {
    private static List`1<Type> interfacesToBeProxied;
    private static Type interfaceProxyType;
    private static List`1<Type> InterfacesToBeProxied { get; }
    private static Type InterfaceProxyType { get; }
    private static List`1<Type> get_InterfacesToBeProxied();
    private static Type get_InterfaceProxyType();
    public sealed virtual object Decorate(MemberInfo member, IElementLocator locator);
    protected static bool ShouldCacheLookup(MemberInfo member);
    protected static ReadOnlyCollection`1<By> CreateLocatorList(MemberInfo member);
    private static object CreateProxyObject(Type memberType, IElementLocator locator, IEnumerable`1<By> bys, bool cache);
    private static Type CreateTypeForASingleElement();
}
[AttributeUsageAttribute("384")]
public class SeleniumExtras.PageObjects.FindsByAllAttribute : Attribute {
}
[AttributeUsageAttribute("384")]
public class SeleniumExtras.PageObjects.FindsByAttribute : Attribute {
    private By finder;
    [CompilerGeneratedAttribute]
private How <How>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Using>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <CustomFinderType>k__BackingField;
    [DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
public How How { get; public set; }
    public string Using { get; public set; }
    [DefaultValueAttribute("0")]
public int Priority { get; public set; }
    public Type CustomFinderType { get; public set; }
    internal By Finder { get; internal set; }
    [CompilerGeneratedAttribute]
public How get_How();
    [CompilerGeneratedAttribute]
public void set_How(How value);
    [CompilerGeneratedAttribute]
public string get_Using();
    [CompilerGeneratedAttribute]
public void set_Using(string value);
    [CompilerGeneratedAttribute]
public int get_Priority();
    [CompilerGeneratedAttribute]
public void set_Priority(int value);
    [CompilerGeneratedAttribute]
public Type get_CustomFinderType();
    [CompilerGeneratedAttribute]
public void set_CustomFinderType(Type value);
    internal By get_Finder();
    internal void set_Finder(By value);
    public static bool op_Equality(FindsByAttribute one, FindsByAttribute two);
    public static bool op_Inequality(FindsByAttribute one, FindsByAttribute two);
    public static bool op_GreaterThan(FindsByAttribute one, FindsByAttribute two);
    public static bool op_LessThan(FindsByAttribute one, FindsByAttribute two);
    public sealed virtual int CompareTo(object obj);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[AttributeUsageAttribute("384")]
public class SeleniumExtras.PageObjects.FindsBySequenceAttribute : Attribute {
}
public enum SeleniumExtras.PageObjects.How : Enum {
    public int value__;
    public static How Id;
    public static How Name;
    public static How TagName;
    public static How ClassName;
    public static How CssSelector;
    public static How LinkText;
    public static How PartialLinkText;
    public static How XPath;
    public static How Custom;
}
public interface SeleniumExtras.PageObjects.IElementLocator {
    public ISearchContext SearchContext { get; }
    public abstract virtual ISearchContext get_SearchContext();
    public abstract virtual IWebElement LocateElement(IEnumerable`1<By> bys);
    public abstract virtual ReadOnlyCollection`1<IWebElement> LocateElements(IEnumerable`1<By> bys);
}
public interface SeleniumExtras.PageObjects.IPageObjectMemberDecorator {
    public abstract virtual object Decorate(MemberInfo member, IElementLocator locator);
}
public class SeleniumExtras.PageObjects.PageFactory : object {
    public static T InitElements(IWebDriver driver);
    public static T InitElements(IElementLocator locator);
    public static void InitElements(ISearchContext driver, object page);
    public static void InitElements(ISearchContext driver, object page, IPageObjectMemberDecorator decorator);
    public static void InitElements(object page, IElementLocator locator);
    public static void InitElements(object page, IElementLocator locator, IPageObjectMemberDecorator decorator);
}
public class SeleniumExtras.PageObjects.RetryingElementLocator : object {
    private static TimeSpan DefaultTimeout;
    private static TimeSpan DefaultPollingInterval;
    private ISearchContext searchContext;
    private TimeSpan timeout;
    private TimeSpan pollingInterval;
    public ISearchContext SearchContext { get; }
    public RetryingElementLocator(ISearchContext searchContext);
    public RetryingElementLocator(ISearchContext searchContext, TimeSpan timeout);
    public RetryingElementLocator(ISearchContext searchContext, TimeSpan timeout, TimeSpan pollingInterval);
    private static RetryingElementLocator();
    public sealed virtual ISearchContext get_SearchContext();
    public sealed virtual IWebElement LocateElement(IEnumerable`1<By> bys);
    public sealed virtual ReadOnlyCollection`1<IWebElement> LocateElements(IEnumerable`1<By> bys);
}
internal abstract class SeleniumExtras.PageObjects.WebDriverObjectProxy : RealProxy {
    private IElementLocator locator;
    private IEnumerable`1<By> bys;
    private bool cache;
    protected IElementLocator Locator { get; }
    protected IEnumerable`1<By> Bys { get; }
    protected bool Cache { get; }
    protected WebDriverObjectProxy(Type classToProxy, IElementLocator locator, IEnumerable`1<By> bys, bool cache);
    protected IElementLocator get_Locator();
    protected IEnumerable`1<By> get_Bys();
    protected bool get_Cache();
    protected static ReturnMessage InvokeMethod(IMethodCallMessage msg, object representedValue);
}
internal class SeleniumExtras.PageObjects.WebElementListProxy : WebDriverObjectProxy {
    private List`1<IWebElement> collection;
    private List`1<IWebElement> ElementList { get; }
    private WebElementListProxy(Type typeToBeProxied, IElementLocator locator, IEnumerable`1<By> bys, bool cache);
    private List`1<IWebElement> get_ElementList();
    public static object CreateProxy(Type classToProxy, IElementLocator locator, IEnumerable`1<By> bys, bool cacheLookups);
    public virtual IMessage Invoke(IMessage msg);
}
internal class SeleniumExtras.PageObjects.WebElementProxy : WebDriverObjectProxy {
    private IWebElement cachedElement;
    public IWebElement WrappedElement { get; }
    private IWebElement Element { get; }
    private WebElementProxy(Type classToProxy, IElementLocator locator, IEnumerable`1<By> bys, bool cache);
    public sealed virtual IWebElement get_WrappedElement();
    private IWebElement get_Element();
    public static object CreateProxy(Type classToProxy, IElementLocator locator, IEnumerable`1<By> bys, bool cacheLookups);
    public virtual IMessage Invoke(IMessage msg);
}
