[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Configuration.AuthenticationOptions : object {
    [CompilerGeneratedAttribute]
private string <CookieAuthenticationScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <CookieLifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CookieSlidingExpiration>k__BackingField;
    [CompilerGeneratedAttribute]
private SameSiteMode <CookieSameSiteMode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RequireAuthenticatedUserForSignOutMessage>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <CheckSessionCookieName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CheckSessionCookieDomain>k__BackingField;
    [CompilerGeneratedAttribute]
private SameSiteMode <CheckSessionCookieSameSiteMode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RequireCspFrameSrcForSignout>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CoordinateClientLifetimesWithUserSession>k__BackingField;
    public string CookieAuthenticationScheme { get; public set; }
    public TimeSpan CookieLifetime { get; public set; }
    public bool CookieSlidingExpiration { get; public set; }
    public SameSiteMode CookieSameSiteMode { get; public set; }
    public bool RequireAuthenticatedUserForSignOutMessage { get; public set; }
    [NullableAttribute("1")]
public string CheckSessionCookieName { get; public set; }
    public string CheckSessionCookieDomain { get; public set; }
    public SameSiteMode CheckSessionCookieSameSiteMode { get; public set; }
    public bool RequireCspFrameSrcForSignout { get; public set; }
    public bool CoordinateClientLifetimesWithUserSession { get; public set; }
    [CompilerGeneratedAttribute]
public string get_CookieAuthenticationScheme();
    [CompilerGeneratedAttribute]
public void set_CookieAuthenticationScheme(string value);
    [CompilerGeneratedAttribute]
public TimeSpan get_CookieLifetime();
    [CompilerGeneratedAttribute]
public void set_CookieLifetime(TimeSpan value);
    [CompilerGeneratedAttribute]
public bool get_CookieSlidingExpiration();
    [CompilerGeneratedAttribute]
public void set_CookieSlidingExpiration(bool value);
    [CompilerGeneratedAttribute]
public SameSiteMode get_CookieSameSiteMode();
    [CompilerGeneratedAttribute]
public void set_CookieSameSiteMode(SameSiteMode value);
    [CompilerGeneratedAttribute]
public bool get_RequireAuthenticatedUserForSignOutMessage();
    [CompilerGeneratedAttribute]
public void set_RequireAuthenticatedUserForSignOutMessage(bool value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_CheckSessionCookieName();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_CheckSessionCookieName(string value);
    [CompilerGeneratedAttribute]
public string get_CheckSessionCookieDomain();
    [CompilerGeneratedAttribute]
public void set_CheckSessionCookieDomain(string value);
    [CompilerGeneratedAttribute]
public SameSiteMode get_CheckSessionCookieSameSiteMode();
    [CompilerGeneratedAttribute]
public void set_CheckSessionCookieSameSiteMode(SameSiteMode value);
    [CompilerGeneratedAttribute]
public bool get_RequireCspFrameSrcForSignout();
    [CompilerGeneratedAttribute]
public void set_RequireCspFrameSrcForSignout(bool value);
    [CompilerGeneratedAttribute]
public bool get_CoordinateClientLifetimesWithUserSession();
    [CompilerGeneratedAttribute]
public void set_CoordinateClientLifetimesWithUserSession(bool value);
}
public class Duende.IdentityServer.Configuration.CachingOptions : object {
    private static TimeSpan Default;
    [CompilerGeneratedAttribute]
private TimeSpan <ClientStoreExpiration>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ResourceStoreExpiration>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <CorsExpiration>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <IdentityProviderCacheDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <CacheLockTimeout>k__BackingField;
    public TimeSpan ClientStoreExpiration { get; public set; }
    public TimeSpan ResourceStoreExpiration { get; public set; }
    public TimeSpan CorsExpiration { get; public set; }
    public TimeSpan IdentityProviderCacheDuration { get; public set; }
    public TimeSpan CacheLockTimeout { get; public set; }
    private static CachingOptions();
    [CompilerGeneratedAttribute]
public TimeSpan get_ClientStoreExpiration();
    [CompilerGeneratedAttribute]
public void set_ClientStoreExpiration(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ResourceStoreExpiration();
    [CompilerGeneratedAttribute]
public void set_ResourceStoreExpiration(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_CorsExpiration();
    [CompilerGeneratedAttribute]
public void set_CorsExpiration(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_IdentityProviderCacheDuration();
    [CompilerGeneratedAttribute]
public void set_IdentityProviderCacheDuration(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_CacheLockTimeout();
    [CompilerGeneratedAttribute]
public void set_CacheLockTimeout(TimeSpan value);
}
public class Duende.IdentityServer.Configuration.CibaOptions : object {
    [CompilerGeneratedAttribute]
private int <DefaultLifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DefaultPollingInterval>k__BackingField;
    public int DefaultLifetime { get; public set; }
    public int DefaultPollingInterval { get; public set; }
    [CompilerGeneratedAttribute]
public int get_DefaultLifetime();
    [CompilerGeneratedAttribute]
public void set_DefaultLifetime(int value);
    [CompilerGeneratedAttribute]
public int get_DefaultPollingInterval();
    [CompilerGeneratedAttribute]
public void set_DefaultPollingInterval(int value);
}
internal class Duende.IdentityServer.Configuration.ConfigureInternalCookieOptions : object {
    private IdentityServerOptions _idsrv;
    public ConfigureInternalCookieOptions(IdentityServerOptions idsrv);
    public sealed virtual void Configure(CookieAuthenticationOptions options);
    public sealed virtual void Configure(string name, CookieAuthenticationOptions options);
    private static string ExtractLocalUrl(string url);
}
internal class Duende.IdentityServer.Configuration.ConfigureOpenIdConnectOptions : object {
    private String[] _schemes;
    private IServiceProvider _serviceProvider;
    private static bool warnedInMemory;
    public ConfigureOpenIdConnectOptions(String[] schemes, IServiceProvider serviceProvider);
    public sealed virtual void PostConfigure(string name, OpenIdConnectOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Configuration.CorsOptions : object {
    [CompilerGeneratedAttribute]
private string <CorsPolicyName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <PreflightCacheDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<PathString> <CorsPaths>k__BackingField;
    public string CorsPolicyName { get; public set; }
    public Nullable`1<TimeSpan> PreflightCacheDuration { get; public set; }
    public ICollection`1<PathString> CorsPaths { get; public set; }
    [CompilerGeneratedAttribute]
public string get_CorsPolicyName();
    [CompilerGeneratedAttribute]
public void set_CorsPolicyName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_PreflightCacheDuration();
    [CompilerGeneratedAttribute]
public void set_PreflightCacheDuration(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public ICollection`1<PathString> get_CorsPaths();
    [CompilerGeneratedAttribute]
public void set_CorsPaths(ICollection`1<PathString> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Duende.IdentityServer.Configuration.CryptoHelper : object {
    public static RsaSecurityKey CreateRsaSecurityKey(int keySize);
    public static ECDsaSecurityKey CreateECDsaSecurityKey(string curve);
    public static RsaSecurityKey CreateRsaSecurityKey(RSAParameters parameters, string id);
    public static string CreateHashClaimValue(string value, string tokenSigningAlgorithm);
    public static HashAlgorithm GetHashAlgorithmForSigningAlgorithm(string signingAlgorithm);
    internal static ECCurve GetCurveFromCrvValue(string crv);
    internal static string GetCurveNameFromSigningAlgorithm(string alg);
    internal static string GetCrvValueFromCurve(ECCurve curve);
    internal static bool IsValidCurveForAlgorithm(ECDsaSecurityKey key, string algorithm);
    internal static bool IsValidCrvValueForAlgorithm(string crv);
    internal static string GetRsaSigningAlgorithmValue(RsaSigningAlgorithm value);
    internal static string GetECDsaSigningAlgorithmValue(ECDsaSigningAlgorithm value);
    internal static X509Certificate2 FindCertificate(string name, StoreLocation location, NameType nameType);
}
public class Duende.IdentityServer.Configuration.CspOptions : object {
    [CompilerGeneratedAttribute]
private CspLevel <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AddDeprecatedHeader>k__BackingField;
    public CspLevel Level { get; public set; }
    public bool AddDeprecatedHeader { get; public set; }
    [CompilerGeneratedAttribute]
public CspLevel get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(CspLevel value);
    [CompilerGeneratedAttribute]
public bool get_AddDeprecatedHeader();
    [CompilerGeneratedAttribute]
public void set_AddDeprecatedHeader(bool value);
}
internal class Duende.IdentityServer.Configuration.DependencyInjection.Decorator`1 : object {
    [CompilerGeneratedAttribute]
private TService <Instance>k__BackingField;
    public TService Instance { get; public set; }
    public Decorator`1(TService instance);
    [CompilerGeneratedAttribute]
public TService get_Instance();
    [CompilerGeneratedAttribute]
public void set_Instance(TService value);
}
internal class Duende.IdentityServer.Configuration.DependencyInjection.Decorator`2 : Decorator`1<TService> {
    public Decorator`2(TImpl instance);
}
internal class Duende.IdentityServer.Configuration.DependencyInjection.DisposableDecorator`1 : Decorator`1<TService> {
    public DisposableDecorator`1(TService instance);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Configuration.DeviceFlowOptions : object {
    [CompilerGeneratedAttribute]
private string <DefaultUserCodeType>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Interval>k__BackingField;
    public string DefaultUserCodeType { get; public set; }
    public int Interval { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DefaultUserCodeType();
    [CompilerGeneratedAttribute]
public void set_DefaultUserCodeType(string value);
    [CompilerGeneratedAttribute]
public int get_Interval();
    [CompilerGeneratedAttribute]
public void set_Interval(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Configuration.DiscoveryOptions : object {
    [CompilerGeneratedAttribute]
private bool <ShowEndpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowKeySet>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowIdentityScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowApiScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowClaims>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowResponseTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowResponseModes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowGrantTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowExtensionGrantTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowTokenEndpointAuthenticationMethods>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExpandRelativePathsInCustomEntries>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ResponseCacheInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <CustomEntries>k__BackingField;
    public bool ShowEndpoints { get; public set; }
    public bool ShowKeySet { get; public set; }
    public bool ShowIdentityScopes { get; public set; }
    public bool ShowApiScopes { get; public set; }
    public bool ShowClaims { get; public set; }
    public bool ShowResponseTypes { get; public set; }
    public bool ShowResponseModes { get; public set; }
    public bool ShowGrantTypes { get; public set; }
    public bool ShowExtensionGrantTypes { get; public set; }
    public bool ShowTokenEndpointAuthenticationMethods { get; public set; }
    public bool ExpandRelativePathsInCustomEntries { get; public set; }
    public Nullable`1<int> ResponseCacheInterval { get; public set; }
    public Dictionary`2<string, object> CustomEntries { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_ShowEndpoints();
    [CompilerGeneratedAttribute]
public void set_ShowEndpoints(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowKeySet();
    [CompilerGeneratedAttribute]
public void set_ShowKeySet(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowIdentityScopes();
    [CompilerGeneratedAttribute]
public void set_ShowIdentityScopes(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowApiScopes();
    [CompilerGeneratedAttribute]
public void set_ShowApiScopes(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowClaims();
    [CompilerGeneratedAttribute]
public void set_ShowClaims(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowResponseTypes();
    [CompilerGeneratedAttribute]
public void set_ShowResponseTypes(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowResponseModes();
    [CompilerGeneratedAttribute]
public void set_ShowResponseModes(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowGrantTypes();
    [CompilerGeneratedAttribute]
public void set_ShowGrantTypes(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowExtensionGrantTypes();
    [CompilerGeneratedAttribute]
public void set_ShowExtensionGrantTypes(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowTokenEndpointAuthenticationMethods();
    [CompilerGeneratedAttribute]
public void set_ShowTokenEndpointAuthenticationMethods(bool value);
    [CompilerGeneratedAttribute]
public bool get_ExpandRelativePathsInCustomEntries();
    [CompilerGeneratedAttribute]
public void set_ExpandRelativePathsInCustomEntries(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ResponseCacheInterval();
    [CompilerGeneratedAttribute]
public void set_ResponseCacheInterval(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_CustomEntries();
    [CompilerGeneratedAttribute]
public void set_CustomEntries(Dictionary`2<string, object> value);
}
public class Duende.IdentityServer.Configuration.DPoPOptions : object {
    [CompilerGeneratedAttribute]
private TimeSpan <ProofTokenValidityDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ServerClockSkew>k__BackingField;
    public TimeSpan ProofTokenValidityDuration { get; public set; }
    public TimeSpan ServerClockSkew { get; public set; }
    [CompilerGeneratedAttribute]
public TimeSpan get_ProofTokenValidityDuration();
    [CompilerGeneratedAttribute]
public void set_ProofTokenValidityDuration(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ServerClockSkew();
    [CompilerGeneratedAttribute]
public void set_ServerClockSkew(TimeSpan value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Configuration.DynamicProviderOptions : object {
    private Dictionary`2<string, DynamicProviderType> _providers;
    [CompilerGeneratedAttribute]
private PathString <PathPrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SignInScheme>k__BackingField;
    [NullableAttribute("2")]
private string _signOutScheme;
    public PathString PathPrefix { get; public set; }
    public string SignInScheme { get; public set; }
    public string SignOutScheme { get; public set; }
    public bool SignOutSchemeSetExplicitly { get; }
    [CompilerGeneratedAttribute]
public PathString get_PathPrefix();
    [CompilerGeneratedAttribute]
public void set_PathPrefix(PathString value);
    [CompilerGeneratedAttribute]
public string get_SignInScheme();
    [CompilerGeneratedAttribute]
public void set_SignInScheme(string value);
    public string get_SignOutScheme();
    public void set_SignOutScheme(string value);
    public bool get_SignOutSchemeSetExplicitly();
    public void AddProviderType(string type);
    public DynamicProviderType FindProviderType(string type);
}
public class Duende.IdentityServer.Configuration.EndpointsOptions : object {
    [CompilerGeneratedAttribute]
private bool <EnableAuthorizeEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableJwtRequestUri>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableTokenEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableUserInfoEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableDiscoveryEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableEndSessionEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableCheckSessionEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableTokenRevocationEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableIntrospectionEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableDeviceAuthorizationEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableBackchannelAuthenticationEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnablePushedAuthorizationEndpoint>k__BackingField;
    public bool EnableAuthorizeEndpoint { get; public set; }
    public bool EnableJwtRequestUri { get; public set; }
    public bool EnableTokenEndpoint { get; public set; }
    public bool EnableUserInfoEndpoint { get; public set; }
    public bool EnableDiscoveryEndpoint { get; public set; }
    public bool EnableEndSessionEndpoint { get; public set; }
    public bool EnableCheckSessionEndpoint { get; public set; }
    public bool EnableTokenRevocationEndpoint { get; public set; }
    public bool EnableIntrospectionEndpoint { get; public set; }
    public bool EnableDeviceAuthorizationEndpoint { get; public set; }
    public bool EnableBackchannelAuthenticationEndpoint { get; public set; }
    public bool EnablePushedAuthorizationEndpoint { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_EnableAuthorizeEndpoint();
    [CompilerGeneratedAttribute]
public void set_EnableAuthorizeEndpoint(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableJwtRequestUri();
    [CompilerGeneratedAttribute]
public void set_EnableJwtRequestUri(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableTokenEndpoint();
    [CompilerGeneratedAttribute]
public void set_EnableTokenEndpoint(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableUserInfoEndpoint();
    [CompilerGeneratedAttribute]
public void set_EnableUserInfoEndpoint(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableDiscoveryEndpoint();
    [CompilerGeneratedAttribute]
public void set_EnableDiscoveryEndpoint(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableEndSessionEndpoint();
    [CompilerGeneratedAttribute]
public void set_EnableEndSessionEndpoint(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableCheckSessionEndpoint();
    [CompilerGeneratedAttribute]
public void set_EnableCheckSessionEndpoint(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableTokenRevocationEndpoint();
    [CompilerGeneratedAttribute]
public void set_EnableTokenRevocationEndpoint(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableIntrospectionEndpoint();
    [CompilerGeneratedAttribute]
public void set_EnableIntrospectionEndpoint(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableDeviceAuthorizationEndpoint();
    [CompilerGeneratedAttribute]
public void set_EnableDeviceAuthorizationEndpoint(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableBackchannelAuthenticationEndpoint();
    [CompilerGeneratedAttribute]
public void set_EnableBackchannelAuthenticationEndpoint(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnablePushedAuthorizationEndpoint();
    [CompilerGeneratedAttribute]
public void set_EnablePushedAuthorizationEndpoint(bool value);
}
public class Duende.IdentityServer.Configuration.EventsOptions : object {
    [CompilerGeneratedAttribute]
private bool <RaiseSuccessEvents>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RaiseFailureEvents>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RaiseInformationEvents>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RaiseErrorEvents>k__BackingField;
    public bool RaiseSuccessEvents { get; public set; }
    public bool RaiseFailureEvents { get; public set; }
    public bool RaiseInformationEvents { get; public set; }
    public bool RaiseErrorEvents { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_RaiseSuccessEvents();
    [CompilerGeneratedAttribute]
public void set_RaiseSuccessEvents(bool value);
    [CompilerGeneratedAttribute]
public bool get_RaiseFailureEvents();
    [CompilerGeneratedAttribute]
public void set_RaiseFailureEvents(bool value);
    [CompilerGeneratedAttribute]
public bool get_RaiseInformationEvents();
    [CompilerGeneratedAttribute]
public void set_RaiseInformationEvents(bool value);
    [CompilerGeneratedAttribute]
public bool get_RaiseErrorEvents();
    [CompilerGeneratedAttribute]
public void set_RaiseErrorEvents(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Configuration.IdentityServerBuilder : object {
    [CompilerGeneratedAttribute]
private IServiceCollection <Services>k__BackingField;
    public IServiceCollection Services { get; }
    public IdentityServerBuilder(IServiceCollection services);
    [CompilerGeneratedAttribute]
public sealed virtual IServiceCollection get_Services();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Configuration.IdentityServerOptions : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <IssuerUri>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LowerCaseIssuerUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessTokenJwtType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LogoutTokenJwtType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EmitStaticAudienceClaim>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EmitScopesAsSpaceDelimitedStringInJwt>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EmitIssuerIdentificationResponseParameter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EmitStateHash>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <StrictJarValidation>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ValidateTenantOnAuthorization>k__BackingField;
    [CompilerGeneratedAttribute]
private EndpointsOptions <Endpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private DiscoveryOptions <Discovery>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthenticationOptions <Authentication>k__BackingField;
    [CompilerGeneratedAttribute]
private EventsOptions <Events>k__BackingField;
    [CompilerGeneratedAttribute]
private InputLengthRestrictions <InputLengthRestrictions>k__BackingField;
    [CompilerGeneratedAttribute]
private UserInteractionOptions <UserInteraction>k__BackingField;
    [CompilerGeneratedAttribute]
private CachingOptions <Caching>k__BackingField;
    [CompilerGeneratedAttribute]
private CorsOptions <Cors>k__BackingField;
    [CompilerGeneratedAttribute]
private CspOptions <Csp>k__BackingField;
    [CompilerGeneratedAttribute]
private ValidationOptions <Validation>k__BackingField;
    [CompilerGeneratedAttribute]
private DeviceFlowOptions <DeviceFlow>k__BackingField;
    [CompilerGeneratedAttribute]
private CibaOptions <Ciba>k__BackingField;
    [CompilerGeneratedAttribute]
private LoggingOptions <Logging>k__BackingField;
    [CompilerGeneratedAttribute]
private MutualTlsOptions <MutualTls>k__BackingField;
    [CompilerGeneratedAttribute]
private KeyManagementOptions <KeyManagement>k__BackingField;
    [CompilerGeneratedAttribute]
private PersistentGrantOptions <PersistentGrants>k__BackingField;
    [CompilerGeneratedAttribute]
private DPoPOptions <DPoP>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <LicenseKey>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicProviderOptions <DynamicProviders>k__BackingField;
    [CompilerGeneratedAttribute]
private ServerSideSessionOptions <ServerSideSessions>k__BackingField;
    [CompilerGeneratedAttribute]
private PushedAuthorizationOptions <PushedAuthorization>k__BackingField;
    [NullableAttribute("2")]
public string IssuerUri { get; public set; }
    public bool LowerCaseIssuerUri { get; public set; }
    public string AccessTokenJwtType { get; public set; }
    public string LogoutTokenJwtType { get; public set; }
    public bool EmitStaticAudienceClaim { get; public set; }
    public bool EmitScopesAsSpaceDelimitedStringInJwt { get; public set; }
    public bool EmitIssuerIdentificationResponseParameter { get; public set; }
    public bool EmitStateHash { get; public set; }
    public bool StrictJarValidation { get; public set; }
    public bool ValidateTenantOnAuthorization { get; public set; }
    public EndpointsOptions Endpoints { get; public set; }
    public DiscoveryOptions Discovery { get; public set; }
    public AuthenticationOptions Authentication { get; public set; }
    public EventsOptions Events { get; public set; }
    public InputLengthRestrictions InputLengthRestrictions { get; public set; }
    public UserInteractionOptions UserInteraction { get; public set; }
    public CachingOptions Caching { get; public set; }
    public CorsOptions Cors { get; public set; }
    public CspOptions Csp { get; public set; }
    public ValidationOptions Validation { get; public set; }
    public DeviceFlowOptions DeviceFlow { get; public set; }
    public CibaOptions Ciba { get; public set; }
    public LoggingOptions Logging { get; public set; }
    public MutualTlsOptions MutualTls { get; public set; }
    public KeyManagementOptions KeyManagement { get; public set; }
    public PersistentGrantOptions PersistentGrants { get; public set; }
    public DPoPOptions DPoP { get; public set; }
    [NullableAttribute("2")]
public string LicenseKey { get; public set; }
    public DynamicProviderOptions DynamicProviders { get; public set; }
    public ServerSideSessionOptions ServerSideSessions { get; public set; }
    public PushedAuthorizationOptions PushedAuthorization { get; public set; }
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_IssuerUri();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_IssuerUri(string value);
    [CompilerGeneratedAttribute]
public bool get_LowerCaseIssuerUri();
    [CompilerGeneratedAttribute]
public void set_LowerCaseIssuerUri(bool value);
    [CompilerGeneratedAttribute]
public string get_AccessTokenJwtType();
    [CompilerGeneratedAttribute]
public void set_AccessTokenJwtType(string value);
    [CompilerGeneratedAttribute]
public string get_LogoutTokenJwtType();
    [CompilerGeneratedAttribute]
public void set_LogoutTokenJwtType(string value);
    [CompilerGeneratedAttribute]
public bool get_EmitStaticAudienceClaim();
    [CompilerGeneratedAttribute]
public void set_EmitStaticAudienceClaim(bool value);
    [CompilerGeneratedAttribute]
public bool get_EmitScopesAsSpaceDelimitedStringInJwt();
    [CompilerGeneratedAttribute]
public void set_EmitScopesAsSpaceDelimitedStringInJwt(bool value);
    [CompilerGeneratedAttribute]
public bool get_EmitIssuerIdentificationResponseParameter();
    [CompilerGeneratedAttribute]
public void set_EmitIssuerIdentificationResponseParameter(bool value);
    [CompilerGeneratedAttribute]
public bool get_EmitStateHash();
    [CompilerGeneratedAttribute]
public void set_EmitStateHash(bool value);
    [CompilerGeneratedAttribute]
public bool get_StrictJarValidation();
    [CompilerGeneratedAttribute]
public void set_StrictJarValidation(bool value);
    [CompilerGeneratedAttribute]
public bool get_ValidateTenantOnAuthorization();
    [CompilerGeneratedAttribute]
public void set_ValidateTenantOnAuthorization(bool value);
    [CompilerGeneratedAttribute]
public EndpointsOptions get_Endpoints();
    [CompilerGeneratedAttribute]
public void set_Endpoints(EndpointsOptions value);
    [CompilerGeneratedAttribute]
public DiscoveryOptions get_Discovery();
    [CompilerGeneratedAttribute]
public void set_Discovery(DiscoveryOptions value);
    [CompilerGeneratedAttribute]
public AuthenticationOptions get_Authentication();
    [CompilerGeneratedAttribute]
public void set_Authentication(AuthenticationOptions value);
    [CompilerGeneratedAttribute]
public EventsOptions get_Events();
    [CompilerGeneratedAttribute]
public void set_Events(EventsOptions value);
    [CompilerGeneratedAttribute]
public InputLengthRestrictions get_InputLengthRestrictions();
    [CompilerGeneratedAttribute]
public void set_InputLengthRestrictions(InputLengthRestrictions value);
    [CompilerGeneratedAttribute]
public UserInteractionOptions get_UserInteraction();
    [CompilerGeneratedAttribute]
public void set_UserInteraction(UserInteractionOptions value);
    [CompilerGeneratedAttribute]
public CachingOptions get_Caching();
    [CompilerGeneratedAttribute]
public void set_Caching(CachingOptions value);
    [CompilerGeneratedAttribute]
public CorsOptions get_Cors();
    [CompilerGeneratedAttribute]
public void set_Cors(CorsOptions value);
    [CompilerGeneratedAttribute]
public CspOptions get_Csp();
    [CompilerGeneratedAttribute]
public void set_Csp(CspOptions value);
    [CompilerGeneratedAttribute]
public ValidationOptions get_Validation();
    [CompilerGeneratedAttribute]
public void set_Validation(ValidationOptions value);
    [CompilerGeneratedAttribute]
public DeviceFlowOptions get_DeviceFlow();
    [CompilerGeneratedAttribute]
public void set_DeviceFlow(DeviceFlowOptions value);
    [CompilerGeneratedAttribute]
public CibaOptions get_Ciba();
    [CompilerGeneratedAttribute]
public void set_Ciba(CibaOptions value);
    [CompilerGeneratedAttribute]
public LoggingOptions get_Logging();
    [CompilerGeneratedAttribute]
public void set_Logging(LoggingOptions value);
    [CompilerGeneratedAttribute]
public MutualTlsOptions get_MutualTls();
    [CompilerGeneratedAttribute]
public void set_MutualTls(MutualTlsOptions value);
    [CompilerGeneratedAttribute]
public KeyManagementOptions get_KeyManagement();
    [CompilerGeneratedAttribute]
public void set_KeyManagement(KeyManagementOptions value);
    [CompilerGeneratedAttribute]
public PersistentGrantOptions get_PersistentGrants();
    [CompilerGeneratedAttribute]
public void set_PersistentGrants(PersistentGrantOptions value);
    [CompilerGeneratedAttribute]
public DPoPOptions get_DPoP();
    [CompilerGeneratedAttribute]
public void set_DPoP(DPoPOptions value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_LicenseKey();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_LicenseKey(string value);
    [CompilerGeneratedAttribute]
public DynamicProviderOptions get_DynamicProviders();
    [CompilerGeneratedAttribute]
public void set_DynamicProviders(DynamicProviderOptions value);
    [CompilerGeneratedAttribute]
public ServerSideSessionOptions get_ServerSideSessions();
    [CompilerGeneratedAttribute]
public void set_ServerSideSessions(ServerSideSessionOptions value);
    [CompilerGeneratedAttribute]
public PushedAuthorizationOptions get_PushedAuthorization();
    [CompilerGeneratedAttribute]
public void set_PushedAuthorization(PushedAuthorizationOptions value);
}
public class Duende.IdentityServer.Configuration.InputLengthRestrictions : object {
    private static int Default;
    [CompilerGeneratedAttribute]
private int <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ClientSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RedirectUri>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Nonce>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UiLocale>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LoginHint>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AcrValues>k__BackingField;
    [CompilerGeneratedAttribute]
private int <GrantType>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UserName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CspReport>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IdentityProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ExternalError>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AuthorizationCode>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DeviceCode>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RefreshToken>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TokenHandle>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Jwt>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CodeChallengeMinLength>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CodeChallengeMaxLength>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CodeVerifierMinLength>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CodeVerifierMaxLength>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ResourceIndicatorMaxLength>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BindingMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UserCode>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IdTokenHint>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LoginHintToken>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AuthenticationRequestId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DPoPKeyThumbprint>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DPoPProofToken>k__BackingField;
    public int ClientId { get; public set; }
    public int ClientSecret { get; public set; }
    public int Scope { get; public set; }
    public int RedirectUri { get; public set; }
    public int Nonce { get; public set; }
    public int UiLocale { get; public set; }
    public int LoginHint { get; public set; }
    public int AcrValues { get; public set; }
    public int GrantType { get; public set; }
    public int UserName { get; public set; }
    public int Password { get; public set; }
    public int CspReport { get; public set; }
    public int IdentityProvider { get; public set; }
    public int ExternalError { get; public set; }
    public int AuthorizationCode { get; public set; }
    public int DeviceCode { get; public set; }
    public int RefreshToken { get; public set; }
    public int TokenHandle { get; public set; }
    public int Jwt { get; public set; }
    public int CodeChallengeMinLength { get; }
    public int CodeChallengeMaxLength { get; }
    public int CodeVerifierMinLength { get; }
    public int CodeVerifierMaxLength { get; }
    public int ResourceIndicatorMaxLength { get; }
    public int BindingMessage { get; public set; }
    public int UserCode { get; public set; }
    public int IdTokenHint { get; public set; }
    public int LoginHintToken { get; public set; }
    public int AuthenticationRequestId { get; public set; }
    public int DPoPKeyThumbprint { get; public set; }
    public int DPoPProofToken { get; public set; }
    [CompilerGeneratedAttribute]
public int get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(int value);
    [CompilerGeneratedAttribute]
public int get_ClientSecret();
    [CompilerGeneratedAttribute]
public void set_ClientSecret(int value);
    [CompilerGeneratedAttribute]
public int get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(int value);
    [CompilerGeneratedAttribute]
public int get_RedirectUri();
    [CompilerGeneratedAttribute]
public void set_RedirectUri(int value);
    [CompilerGeneratedAttribute]
public int get_Nonce();
    [CompilerGeneratedAttribute]
public void set_Nonce(int value);
    [CompilerGeneratedAttribute]
public int get_UiLocale();
    [CompilerGeneratedAttribute]
public void set_UiLocale(int value);
    [CompilerGeneratedAttribute]
public int get_LoginHint();
    [CompilerGeneratedAttribute]
public void set_LoginHint(int value);
    [CompilerGeneratedAttribute]
public int get_AcrValues();
    [CompilerGeneratedAttribute]
public void set_AcrValues(int value);
    [CompilerGeneratedAttribute]
public int get_GrantType();
    [CompilerGeneratedAttribute]
public void set_GrantType(int value);
    [CompilerGeneratedAttribute]
public int get_UserName();
    [CompilerGeneratedAttribute]
public void set_UserName(int value);
    [CompilerGeneratedAttribute]
public int get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(int value);
    [CompilerGeneratedAttribute]
public int get_CspReport();
    [CompilerGeneratedAttribute]
public void set_CspReport(int value);
    [CompilerGeneratedAttribute]
public int get_IdentityProvider();
    [CompilerGeneratedAttribute]
public void set_IdentityProvider(int value);
    [CompilerGeneratedAttribute]
public int get_ExternalError();
    [CompilerGeneratedAttribute]
public void set_ExternalError(int value);
    [CompilerGeneratedAttribute]
public int get_AuthorizationCode();
    [CompilerGeneratedAttribute]
public void set_AuthorizationCode(int value);
    [CompilerGeneratedAttribute]
public int get_DeviceCode();
    [CompilerGeneratedAttribute]
public void set_DeviceCode(int value);
    [CompilerGeneratedAttribute]
public int get_RefreshToken();
    [CompilerGeneratedAttribute]
public void set_RefreshToken(int value);
    [CompilerGeneratedAttribute]
public int get_TokenHandle();
    [CompilerGeneratedAttribute]
public void set_TokenHandle(int value);
    [CompilerGeneratedAttribute]
public int get_Jwt();
    [CompilerGeneratedAttribute]
public void set_Jwt(int value);
    [CompilerGeneratedAttribute]
public int get_CodeChallengeMinLength();
    [CompilerGeneratedAttribute]
public int get_CodeChallengeMaxLength();
    [CompilerGeneratedAttribute]
public int get_CodeVerifierMinLength();
    [CompilerGeneratedAttribute]
public int get_CodeVerifierMaxLength();
    [CompilerGeneratedAttribute]
public int get_ResourceIndicatorMaxLength();
    [CompilerGeneratedAttribute]
public int get_BindingMessage();
    [CompilerGeneratedAttribute]
public void set_BindingMessage(int value);
    [CompilerGeneratedAttribute]
public int get_UserCode();
    [CompilerGeneratedAttribute]
public void set_UserCode(int value);
    [CompilerGeneratedAttribute]
public int get_IdTokenHint();
    [CompilerGeneratedAttribute]
public void set_IdTokenHint(int value);
    [CompilerGeneratedAttribute]
public int get_LoginHintToken();
    [CompilerGeneratedAttribute]
public void set_LoginHintToken(int value);
    [CompilerGeneratedAttribute]
public int get_AuthenticationRequestId();
    [CompilerGeneratedAttribute]
public void set_AuthenticationRequestId(int value);
    [CompilerGeneratedAttribute]
public int get_DPoPKeyThumbprint();
    [CompilerGeneratedAttribute]
public void set_DPoPKeyThumbprint(int value);
    [CompilerGeneratedAttribute]
public int get_DPoPProofToken();
    [CompilerGeneratedAttribute]
public void set_DPoPProofToken(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Configuration.KeyManagementOptions : object {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RsaKeySize>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<SigningAlgorithmOptions> <SigningAlgorithms>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <InitializationDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <InitializationSynchronizationDelay>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <InitializationKeyCacheDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <KeyCacheDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <PropagationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <RotationInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <RetentionDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DeleteRetiredKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DataProtectKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeyPath>k__BackingField;
    public bool Enabled { get; public set; }
    public int RsaKeySize { get; public set; }
    public ICollection`1<SigningAlgorithmOptions> SigningAlgorithms { get; public set; }
    internal string DefaultSigningAlgorithm { get; }
    internal IEnumerable`1<string> AllowedSigningAlgorithmNames { get; }
    public TimeSpan InitializationDuration { get; public set; }
    public TimeSpan InitializationSynchronizationDelay { get; public set; }
    public TimeSpan InitializationKeyCacheDuration { get; public set; }
    public TimeSpan KeyCacheDuration { get; public set; }
    public TimeSpan PropagationTime { get; public set; }
    public TimeSpan RotationInterval { get; public set; }
    public TimeSpan RetentionDuration { get; public set; }
    internal TimeSpan KeyRetirementAge { get; }
    public bool DeleteRetiredKeys { get; public set; }
    public bool DataProtectKeys { get; public set; }
    public string KeyPath { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public int get_RsaKeySize();
    [CompilerGeneratedAttribute]
public void set_RsaKeySize(int value);
    [CompilerGeneratedAttribute]
public ICollection`1<SigningAlgorithmOptions> get_SigningAlgorithms();
    [CompilerGeneratedAttribute]
public void set_SigningAlgorithms(ICollection`1<SigningAlgorithmOptions> value);
    internal string get_DefaultSigningAlgorithm();
    internal IEnumerable`1<string> get_AllowedSigningAlgorithmNames();
    [CompilerGeneratedAttribute]
public TimeSpan get_InitializationDuration();
    [CompilerGeneratedAttribute]
public void set_InitializationDuration(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_InitializationSynchronizationDelay();
    [CompilerGeneratedAttribute]
public void set_InitializationSynchronizationDelay(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_InitializationKeyCacheDuration();
    [CompilerGeneratedAttribute]
public void set_InitializationKeyCacheDuration(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_KeyCacheDuration();
    [CompilerGeneratedAttribute]
public void set_KeyCacheDuration(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_PropagationTime();
    [CompilerGeneratedAttribute]
public void set_PropagationTime(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_RotationInterval();
    [CompilerGeneratedAttribute]
public void set_RotationInterval(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_RetentionDuration();
    [CompilerGeneratedAttribute]
public void set_RetentionDuration(TimeSpan value);
    internal TimeSpan get_KeyRetirementAge();
    [CompilerGeneratedAttribute]
public bool get_DeleteRetiredKeys();
    [CompilerGeneratedAttribute]
public void set_DeleteRetiredKeys(bool value);
    [CompilerGeneratedAttribute]
public bool get_DataProtectKeys();
    [CompilerGeneratedAttribute]
public void set_DataProtectKeys(bool value);
    [CompilerGeneratedAttribute]
public string get_KeyPath();
    [CompilerGeneratedAttribute]
public void set_KeyPath(string value);
    internal void Validate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Configuration.LoggingOptions : object {
    [CompilerGeneratedAttribute]
private ICollection`1<string> <BackchannelAuthenticationRequestSensitiveValuesFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <TokenRequestSensitiveValuesFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <AuthorizeRequestSensitiveValuesFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <PushedAuthorizationSensitiveValuesFilter>k__BackingField;
    public Func`3<HttpContext, Exception, bool> UnhandledExceptionLoggingFilter;
    public ICollection`1<string> BackchannelAuthenticationRequestSensitiveValuesFilter { get; public set; }
    public ICollection`1<string> TokenRequestSensitiveValuesFilter { get; public set; }
    public ICollection`1<string> AuthorizeRequestSensitiveValuesFilter { get; public set; }
    public ICollection`1<string> PushedAuthorizationSensitiveValuesFilter { get; public set; }
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_BackchannelAuthenticationRequestSensitiveValuesFilter();
    [CompilerGeneratedAttribute]
public void set_BackchannelAuthenticationRequestSensitiveValuesFilter(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_TokenRequestSensitiveValuesFilter();
    [CompilerGeneratedAttribute]
public void set_TokenRequestSensitiveValuesFilter(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_AuthorizeRequestSensitiveValuesFilter();
    [CompilerGeneratedAttribute]
public void set_AuthorizeRequestSensitiveValuesFilter(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_PushedAuthorizationSensitiveValuesFilter();
    [CompilerGeneratedAttribute]
public void set_PushedAuthorizationSensitiveValuesFilter(ICollection`1<string> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Configuration.MutualTlsOptions : object {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientCertificateAuthenticationScheme>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <DomainName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AlwaysEmitConfirmationClaim>k__BackingField;
    public bool Enabled { get; public set; }
    public string ClientCertificateAuthenticationScheme { get; public set; }
    [NullableAttribute("2")]
public string DomainName { get; public set; }
    public bool AlwaysEmitConfirmationClaim { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public string get_ClientCertificateAuthenticationScheme();
    [CompilerGeneratedAttribute]
public void set_ClientCertificateAuthenticationScheme(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_DomainName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_DomainName(string value);
    [CompilerGeneratedAttribute]
public bool get_AlwaysEmitConfirmationClaim();
    [CompilerGeneratedAttribute]
public void set_AlwaysEmitConfirmationClaim(bool value);
}
public enum Duende.IdentityServer.Configuration.NameType : Enum {
    public int value__;
    public static NameType SubjectDistinguishedName;
    public static NameType Thumbprint;
}
public class Duende.IdentityServer.Configuration.PostConfigureApplicationCookieTicketStore : object {
    private IHttpContextAccessor _httpContextAccessor;
    private string _scheme;
    private ILogger`1<PostConfigureApplicationCookieTicketStore> _logger;
    public PostConfigureApplicationCookieTicketStore(IHttpContextAccessor httpContextAccessor, IdentityServerOptions identityServerOptions, IOptions`1<AuthenticationOptions> options, ILogger`1<PostConfigureApplicationCookieTicketStore> logger);
    public PostConfigureApplicationCookieTicketStore(IHttpContextAccessor httpContextAccessor, string scheme);
    public sealed virtual void PostConfigure(string name, CookieAuthenticationOptions options);
}
internal class Duende.IdentityServer.Configuration.PostConfigureInternalCookieOptions : object {
    private IdentityServerOptions _idsrv;
    private IOptions`1<AuthenticationOptions> _authOptions;
    private ILogger _logger;
    public PostConfigureInternalCookieOptions(IdentityServerOptions idsrv, IOptions`1<AuthenticationOptions> authOptions, ILoggerFactory loggerFactory);
    public sealed virtual void PostConfigure(string name, CookieAuthenticationOptions options);
}
public class Duende.IdentityServer.Configuration.PushedAuthorizationOptions : object {
    [CompilerGeneratedAttribute]
private bool <Required>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Lifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowUnregisteredPushedRedirectUris>k__BackingField;
    public bool Required { get; public set; }
    public int Lifetime { get; public set; }
    public bool AllowUnregisteredPushedRedirectUris { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Required();
    [CompilerGeneratedAttribute]
public void set_Required(bool value);
    [CompilerGeneratedAttribute]
public int get_Lifetime();
    [CompilerGeneratedAttribute]
public void set_Lifetime(int value);
    [CompilerGeneratedAttribute]
public bool get_AllowUnregisteredPushedRedirectUris();
    [CompilerGeneratedAttribute]
public void set_AllowUnregisteredPushedRedirectUris(bool value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Configuration.ServerSideSessionOptions : object {
    [CompilerGeneratedAttribute]
private string <UserDisplayNameClaimType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RemoveExpiredSessions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExpiredSessionsTriggerBackchannelLogout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <RemoveExpiredSessionsFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FuzzExpiredSessionRemovalStart>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RemoveExpiredSessionsBatchSize>k__BackingField;
    public string UserDisplayNameClaimType { get; public set; }
    public bool RemoveExpiredSessions { get; public set; }
    public bool ExpiredSessionsTriggerBackchannelLogout { get; public set; }
    public TimeSpan RemoveExpiredSessionsFrequency { get; public set; }
    public bool FuzzExpiredSessionRemovalStart { get; public set; }
    public int RemoveExpiredSessionsBatchSize { get; public set; }
    [CompilerGeneratedAttribute]
public string get_UserDisplayNameClaimType();
    [CompilerGeneratedAttribute]
public void set_UserDisplayNameClaimType(string value);
    [CompilerGeneratedAttribute]
public bool get_RemoveExpiredSessions();
    [CompilerGeneratedAttribute]
public void set_RemoveExpiredSessions(bool value);
    [CompilerGeneratedAttribute]
public bool get_ExpiredSessionsTriggerBackchannelLogout();
    [CompilerGeneratedAttribute]
public void set_ExpiredSessionsTriggerBackchannelLogout(bool value);
    [CompilerGeneratedAttribute]
public TimeSpan get_RemoveExpiredSessionsFrequency();
    [CompilerGeneratedAttribute]
public void set_RemoveExpiredSessionsFrequency(TimeSpan value);
    [CompilerGeneratedAttribute]
public bool get_FuzzExpiredSessionRemovalStart();
    [CompilerGeneratedAttribute]
public void set_FuzzExpiredSessionRemovalStart(bool value);
    [CompilerGeneratedAttribute]
public int get_RemoveExpiredSessionsBatchSize();
    [CompilerGeneratedAttribute]
public void set_RemoveExpiredSessionsBatchSize(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class Duende.IdentityServer.Configuration.SigningAlgorithmOptions : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseX509Certificate>k__BackingField;
    [RequiredMemberAttribute]
public string Name { get; public set; }
    public bool UseX509Certificate { get; public set; }
    internal bool IsRsaKey { get; }
    internal bool IsEcKey { get; }
    [SetsRequiredMembersAttribute]
public SigningAlgorithmOptions(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_UseX509Certificate();
    [CompilerGeneratedAttribute]
public void set_UseX509Certificate(bool value);
    internal bool get_IsRsaKey();
    internal bool get_IsEcKey();
}
internal class Duende.IdentityServer.Configuration.TicketStoreShim : object {
    private IHttpContextAccessor _httpContextAccessor;
    private IServerSideTicketStore Inner { get; }
    public TicketStoreShim(IHttpContextAccessor httpContextAccessor);
    private IServerSideTicketStore get_Inner();
    public sealed virtual Task RemoveAsync(string key);
    public sealed virtual Task RenewAsync(string key, AuthenticationTicket ticket);
    public sealed virtual Task`1<AuthenticationTicket> RetrieveAsync(string key);
    public sealed virtual Task`1<string> StoreAsync(AuthenticationTicket ticket);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Configuration.UserInteractionOptions : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <LoginUrl>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <LoginReturnUrlParameter>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <LogoutUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LogoutIdParameter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConsentUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConsentReturnUrlParameter>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <CreateAccountUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CreateAccountReturnUrlParameter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorIdParameter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomRedirectReturnUrlParameter>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CookieMessageThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeviceVerificationUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeviceVerificationUserCodeParameter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowOriginInReturnUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <PromptValuesSupported>k__BackingField;
    [NullableAttribute("2")]
public string LoginUrl { get; public set; }
    [NullableAttribute("2")]
public string LoginReturnUrlParameter { get; public set; }
    [NullableAttribute("2")]
public string LogoutUrl { get; public set; }
    public string LogoutIdParameter { get; public set; }
    public string ConsentUrl { get; public set; }
    public string ConsentReturnUrlParameter { get; public set; }
    [NullableAttribute("2")]
public string CreateAccountUrl { get; public set; }
    public string CreateAccountReturnUrlParameter { get; public set; }
    public string ErrorUrl { get; public set; }
    public string ErrorIdParameter { get; public set; }
    public string CustomRedirectReturnUrlParameter { get; public set; }
    public int CookieMessageThreshold { get; public set; }
    public string DeviceVerificationUrl { get; public set; }
    public string DeviceVerificationUserCodeParameter { get; public set; }
    public bool AllowOriginInReturnUrl { get; public set; }
    public ICollection`1<string> PromptValuesSupported { get; public set; }
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_LoginUrl();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_LoginUrl(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_LoginReturnUrlParameter();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_LoginReturnUrlParameter(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_LogoutUrl();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_LogoutUrl(string value);
    [CompilerGeneratedAttribute]
public string get_LogoutIdParameter();
    [CompilerGeneratedAttribute]
public void set_LogoutIdParameter(string value);
    [CompilerGeneratedAttribute]
public string get_ConsentUrl();
    [CompilerGeneratedAttribute]
public void set_ConsentUrl(string value);
    [CompilerGeneratedAttribute]
public string get_ConsentReturnUrlParameter();
    [CompilerGeneratedAttribute]
public void set_ConsentReturnUrlParameter(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_CreateAccountUrl();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_CreateAccountUrl(string value);
    [CompilerGeneratedAttribute]
public string get_CreateAccountReturnUrlParameter();
    [CompilerGeneratedAttribute]
public void set_CreateAccountReturnUrlParameter(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorUrl();
    [CompilerGeneratedAttribute]
public void set_ErrorUrl(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorIdParameter();
    [CompilerGeneratedAttribute]
public void set_ErrorIdParameter(string value);
    [CompilerGeneratedAttribute]
public string get_CustomRedirectReturnUrlParameter();
    [CompilerGeneratedAttribute]
public void set_CustomRedirectReturnUrlParameter(string value);
    [CompilerGeneratedAttribute]
public int get_CookieMessageThreshold();
    [CompilerGeneratedAttribute]
public void set_CookieMessageThreshold(int value);
    [CompilerGeneratedAttribute]
public string get_DeviceVerificationUrl();
    [CompilerGeneratedAttribute]
public void set_DeviceVerificationUrl(string value);
    [CompilerGeneratedAttribute]
public string get_DeviceVerificationUserCodeParameter();
    [CompilerGeneratedAttribute]
public void set_DeviceVerificationUserCodeParameter(string value);
    [CompilerGeneratedAttribute]
public bool get_AllowOriginInReturnUrl();
    [CompilerGeneratedAttribute]
public void set_AllowOriginInReturnUrl(bool value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_PromptValuesSupported();
    [CompilerGeneratedAttribute]
public void set_PromptValuesSupported(ICollection`1<string> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Configuration.ValidationOptions : object {
    [CompilerGeneratedAttribute]
private ICollection`1<string> <InvalidRedirectUriPrefixes>k__BackingField;
    public ICollection`1<string> InvalidRedirectUriPrefixes { get; }
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_InvalidRedirectUriPrefixes();
}
internal static class Duende.IdentityServer.Constants : object {
    public static string IdentityServerName;
    public static string IdentityServerAuthenticationType;
    public static string ExternalAuthenticationMethod;
    public static string DefaultHashAlgorithm;
    public static TimeSpan DefaultCookieTimeSpan;
    public static TimeSpan DefaultCacheDuration;
    public static List`1<string> SupportedResponseTypes;
    public static Dictionary`2<string, string> ResponseTypeToGrantTypeMapping;
    public static List`1<string> AllowedGrantTypesForAuthorizeEndpoint;
    public static List`1<string> SupportedCodeChallengeMethods;
    public static Dictionary`2<string, ScopeRequirement> ResponseTypeToScopeRequirement;
    public static Dictionary`2<string, IEnumerable`1<string>> AllowedResponseModesForGrantType;
    public static List`1<string> SupportedResponseModes;
    public static String[] SupportedSubjectTypes;
    public static List`1<string> SupportedDisplayModes;
    public static List`1<string> SupportedPromptModes;
    [ObsoleteAttribute("Use the ProcessedPrompt constant instead.")]
public static string SuppressedPrompt;
    public static string ProcessedPrompt;
    public static string ProcessedMaxAge;
    public static Dictionary`2<string, int> ProtectedResourceErrorStatusCodes;
    public static Dictionary`2<string, IEnumerable`1<string>> ScopeToClaimsMapping;
    public static List`1<string> SupportedTokenTypeHints;
    private static Constants();
}
internal class Duende.IdentityServer.DefaultClock : object {
    private TimeProvider _timeProvider;
    public DateTimeOffset UtcNow { get; }
    public DefaultClock(TimeProvider timeProvider);
    public sealed virtual DateTimeOffset get_UtcNow();
}
internal class Duende.IdentityServer.Endpoints.AuthorizeCallbackEndpoint : AuthorizeEndpointBase {
    public AuthorizeCallbackEndpoint(IEventService events, ILogger`1<AuthorizeCallbackEndpoint> logger, IdentityServerOptions options, IAuthorizeRequestValidator validator, IAuthorizeInteractionResponseGenerator interactionGenerator, IAuthorizeResponseGenerator authorizeResponseGenerator, IUserSession userSession, IConsentMessageStore consentResponseStore, IAuthorizationParametersMessageStore authorizationParametersMessageStore);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.AuthorizeCallbackEndpoint/<ProcessAsync>d__1")]
public virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
}
internal class Duende.IdentityServer.Endpoints.AuthorizeEndpoint : AuthorizeEndpointBase {
    public AuthorizeEndpoint(IEventService events, ILogger`1<AuthorizeEndpoint> logger, IdentityServerOptions options, IAuthorizeRequestValidator validator, IAuthorizeInteractionResponseGenerator interactionGenerator, IAuthorizeResponseGenerator authorizeResponseGenerator, IUserSession userSession, IConsentMessageStore consentResponseStore, IAuthorizationParametersMessageStore authorizationParametersMessageStore);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.AuthorizeEndpoint/<ProcessAsync>d__1")]
public virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
}
internal abstract class Duende.IdentityServer.Endpoints.AuthorizeEndpointBase : object {
    private IAuthorizeResponseGenerator _authorizeResponseGenerator;
    private IEventService _events;
    private IdentityServerOptions _options;
    private IAuthorizeInteractionResponseGenerator _interactionGenerator;
    private IAuthorizeRequestValidator _validator;
    private IConsentMessageStore _consentResponseStore;
    private IAuthorizationParametersMessageStore _authorizationParametersMessageStore;
    [CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserSession <UserSession>k__BackingField;
    protected ILogger Logger { get; private set; }
    protected IUserSession UserSession { get; private set; }
    protected AuthorizeEndpointBase(IEventService events, ILogger`1<AuthorizeEndpointBase> logger, IdentityServerOptions options, IAuthorizeRequestValidator validator, IAuthorizeInteractionResponseGenerator interactionGenerator, IAuthorizeResponseGenerator authorizeResponseGenerator, IUserSession userSession, IConsentMessageStore consentResponseStore, IAuthorizationParametersMessageStore authorizationParametersMessageStore);
    [CompilerGeneratedAttribute]
protected ILogger get_Logger();
    [CompilerGeneratedAttribute]
private void set_Logger(ILogger value);
    [CompilerGeneratedAttribute]
protected IUserSession get_UserSession();
    [CompilerGeneratedAttribute]
private void set_UserSession(IUserSession value);
    public abstract virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.AuthorizeEndpointBase/<ProcessAuthorizeRequestAsync>d__17")]
internal Task`1<IEndpointResult> ProcessAuthorizeRequestAsync(NameValueCollection parameters, ClaimsPrincipal user, bool checkConsentResponse);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.AuthorizeEndpointBase/<CreateErrorResultAsync>d__18")]
protected Task`1<IEndpointResult> CreateErrorResultAsync(string logMessage, ValidatedAuthorizeRequest request, string error, string errorDescription, bool logError);
    private void LogRequest(ValidatedAuthorizeRequest request);
    private void LogResponse(AuthorizeResponse response);
    private void LogTokens(AuthorizeResponse response);
    private Task RaiseFailureEventAsync(ValidatedAuthorizeRequest request, string error, string errorDescription);
    private Task RaiseResponseEventAsync(AuthorizeResponse response);
}
internal class Duende.IdentityServer.Endpoints.BackchannelAuthenticationEndpoint : object {
    private IClientSecretValidator _clientValidator;
    private IBackchannelAuthenticationRequestValidator _requestValidator;
    private IBackchannelAuthenticationResponseGenerator _responseGenerator;
    private IEventService _events;
    private ILogger`1<BackchannelAuthenticationEndpoint> _logger;
    private IdentityServerOptions _options;
    public BackchannelAuthenticationEndpoint(IClientSecretValidator clientValidator, IBackchannelAuthenticationRequestValidator requestValidator, IBackchannelAuthenticationResponseGenerator responseGenerator, IEventService events, ILogger`1<BackchannelAuthenticationEndpoint> logger, IdentityServerOptions options);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.BackchannelAuthenticationEndpoint/<ProcessAsync>d__7")]
public sealed virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.BackchannelAuthenticationEndpoint/<ProcessAuthenticationRequestAsync>d__8")]
private Task`1<IEndpointResult> ProcessAuthenticationRequestAsync(HttpContext context);
    private void LogResponse(BackchannelAuthenticationResponse response, BackchannelAuthenticationRequestValidationResult requestResult);
    private BackchannelAuthenticationResult Error(string error, string errorDescription);
}
internal class Duende.IdentityServer.Endpoints.CheckSessionEndpoint : object {
    private ILogger _logger;
    public CheckSessionEndpoint(ILogger`1<CheckSessionEndpoint> logger);
    public sealed virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
}
internal class Duende.IdentityServer.Endpoints.DeviceAuthorizationEndpoint : object {
    private IClientSecretValidator _clientValidator;
    private IDeviceAuthorizationRequestValidator _requestValidator;
    private IDeviceAuthorizationResponseGenerator _responseGenerator;
    private IEventService _events;
    private IServerUrls _urls;
    private ILogger`1<DeviceAuthorizationEndpoint> _logger;
    public DeviceAuthorizationEndpoint(IClientSecretValidator clientValidator, IDeviceAuthorizationRequestValidator requestValidator, IDeviceAuthorizationResponseGenerator responseGenerator, IEventService events, IServerUrls urls, ILogger`1<DeviceAuthorizationEndpoint> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.DeviceAuthorizationEndpoint/<ProcessAsync>d__7")]
public sealed virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.DeviceAuthorizationEndpoint/<ProcessDeviceAuthorizationRequestAsync>d__8")]
private Task`1<IEndpointResult> ProcessDeviceAuthorizationRequestAsync(HttpContext context);
    private TokenErrorResult Error(string error, string errorDescription, Dictionary`2<string, object> custom);
    private void LogResponse(DeviceAuthorizationResponse response, DeviceAuthorizationRequestValidationResult requestResult);
}
internal class Duende.IdentityServer.Endpoints.DiscoveryEndpoint : object {
    private ILogger _logger;
    private IdentityServerOptions _options;
    private IIssuerNameService _issuerNameService;
    private IServerUrls _urls;
    private IDiscoveryResponseGenerator _responseGenerator;
    public DiscoveryEndpoint(IdentityServerOptions options, IIssuerNameService issuerNameService, IDiscoveryResponseGenerator responseGenerator, IServerUrls urls, ILogger`1<DiscoveryEndpoint> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.DiscoveryEndpoint/<ProcessAsync>d__6")]
public sealed virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
}
internal class Duende.IdentityServer.Endpoints.DiscoveryKeyEndpoint : object {
    private ILogger _logger;
    private IdentityServerOptions _options;
    private IDiscoveryResponseGenerator _responseGenerator;
    public DiscoveryKeyEndpoint(IdentityServerOptions options, IDiscoveryResponseGenerator responseGenerator, ILogger`1<DiscoveryKeyEndpoint> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.DiscoveryKeyEndpoint/<ProcessAsync>d__4")]
public sealed virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
}
internal class Duende.IdentityServer.Endpoints.EndSessionCallbackEndpoint : object {
    private IEndSessionRequestValidator _endSessionRequestValidator;
    private ILogger _logger;
    public EndSessionCallbackEndpoint(IEndSessionRequestValidator endSessionRequestValidator, ILogger`1<EndSessionCallbackEndpoint> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.EndSessionCallbackEndpoint/<ProcessAsync>d__3")]
public sealed virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
}
internal class Duende.IdentityServer.Endpoints.EndSessionEndpoint : object {
    private IEndSessionRequestValidator _endSessionRequestValidator;
    private ILogger _logger;
    private IUserSession _userSession;
    public EndSessionEndpoint(IEndSessionRequestValidator endSessionRequestValidator, IUserSession userSession, ILogger`1<EndSessionEndpoint> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.EndSessionEndpoint/<ProcessAsync>d__4")]
public sealed virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.EndSessionEndpoint/<ProcessEndSessionAsync>d__5")]
private Task`1<IEndpointResult> ProcessEndSessionAsync(HttpContext context);
}
internal class Duende.IdentityServer.Endpoints.IntrospectionEndpoint : object {
    private IIntrospectionResponseGenerator _responseGenerator;
    private IEventService _events;
    private ILogger _logger;
    private IIntrospectionRequestValidator _requestValidator;
    private IApiSecretValidator _apiSecretValidator;
    private IClientSecretValidator _clientValidator;
    public IntrospectionEndpoint(IApiSecretValidator apiSecretValidator, IClientSecretValidator clientValidator, IIntrospectionRequestValidator requestValidator, IIntrospectionResponseGenerator responseGenerator, IEventService events, ILogger`1<IntrospectionEndpoint> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.IntrospectionEndpoint/<ProcessAsync>d__7")]
public sealed virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.IntrospectionEndpoint/<ProcessIntrospectionRequestAsync>d__8")]
private Task`1<IEndpointResult> ProcessIntrospectionRequestAsync(HttpContext context);
    private void LogSuccess(bool tokenActive, string callerName);
    private void LogFailure(string error, string callerName);
}
internal class Duende.IdentityServer.Endpoints.PushedAuthorizationEndpoint : object {
    private IClientSecretValidator _clientValidator;
    private IPushedAuthorizationRequestValidator _parValidator;
    private IPushedAuthorizationResponseGenerator _responseGenerator;
    private IdentityServerOptions _options;
    private ILogger`1<PushedAuthorizationEndpoint> _logger;
    public PushedAuthorizationEndpoint(IClientSecretValidator clientValidator, IPushedAuthorizationRequestValidator parValidator, IAuthorizeRequestValidator authorizeRequestValidator, IPushedAuthorizationResponseGenerator responseGenerator, IdentityServerOptions options, ILogger`1<PushedAuthorizationEndpoint> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.PushedAuthorizationEndpoint/<ProcessAsync>d__6")]
public sealed virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
    private PushedAuthorizationErrorResult CreateErrorResult(string logMessage, ValidatedPushedAuthorizationRequest request, string error, string errorDescription, bool logError);
}
public class Duende.IdentityServer.Endpoints.Results.AuthorizeHttpWriter : object {
    private IdentityServerOptions _options;
    private IUserSession _userSession;
    private IPushedAuthorizationService _pushedAuthorizationService;
    private IMessageStore`1<ErrorMessage> _errorMessageStore;
    private IServerUrls _urls;
    private IClock _clock;
    private static string DefaultFormPostHeadTags;
    private static string DefaultFormPostBodyTags;
    protected string FormPostHeader { get; }
    protected string FormPostBody { get; }
    public AuthorizeHttpWriter(IdentityServerOptions options, IUserSession userSession, IPushedAuthorizationService pushedAuthorizationService, IMessageStore`1<ErrorMessage> errorMessageStore, IServerUrls urls, IClock clock);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.Results.AuthorizeHttpWriter/<WriteHttpResponse>d__7")]
public sealed virtual Task WriteHttpResponse(AuthorizeResult result, HttpContext context);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.Results.AuthorizeHttpWriter/<ConsumePushedAuthorizationRequest>d__8")]
private Task ConsumePushedAuthorizationRequest(AuthorizeResult result);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.Results.AuthorizeHttpWriter/<ProcessErrorAsync>d__9")]
private Task ProcessErrorAsync(AuthorizeResponse response, HttpContext context);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.Results.AuthorizeHttpWriter/<ProcessResponseAsync>d__10")]
private Task ProcessResponseAsync(AuthorizeResponse response, HttpContext context);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.Results.AuthorizeHttpWriter/<RenderAuthorizeResponseAsync>d__11")]
private Task RenderAuthorizeResponseAsync(AuthorizeResponse response, HttpContext context);
    private void AddSecurityHeaders(HttpContext context);
    private string BuildRedirectUri(AuthorizeResponse response);
    protected virtual string get_FormPostHeader();
    protected virtual string get_FormPostBody();
    protected virtual string GetFormPostHtml(AuthorizeResponse response);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.Results.AuthorizeHttpWriter/<RedirectToErrorPageAsync>d__21")]
private Task RedirectToErrorPageAsync(AuthorizeResponse response, HttpContext context);
}
internal class Duende.IdentityServer.Endpoints.Results.AuthorizeInteractionPageHttpWriter : object {
    private IServerUrls _urls;
    private IAuthorizationParametersMessageStore _authorizationParametersMessageStore;
    public AuthorizeInteractionPageHttpWriter(IServerUrls urls, IAuthorizationParametersMessageStore authorizationParametersMessageStore);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.Results.AuthorizeInteractionPageHttpWriter/<WriteHttpResponse>d__3")]
public sealed virtual Task WriteHttpResponse(AuthorizeInteractionPageResult result, HttpContext context);
}
public abstract class Duende.IdentityServer.Endpoints.Results.AuthorizeInteractionPageResult : EndpointResult`1<AuthorizeInteractionPageResult> {
    [CompilerGeneratedAttribute]
private ValidatedAuthorizeRequest <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RedirectUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReturnUrlParameterName>k__BackingField;
    public ValidatedAuthorizeRequest Request { get; }
    public string RedirectUrl { get; }
    public string ReturnUrlParameterName { get; }
    public AuthorizeInteractionPageResult(ValidatedAuthorizeRequest request, string redirectUrl, string returnUrlParameterName);
    [CompilerGeneratedAttribute]
public ValidatedAuthorizeRequest get_Request();
    [CompilerGeneratedAttribute]
public string get_RedirectUrl();
    [CompilerGeneratedAttribute]
public string get_ReturnUrlParameterName();
}
public class Duende.IdentityServer.Endpoints.Results.AuthorizeResult : EndpointResult`1<AuthorizeResult> {
    [CompilerGeneratedAttribute]
private AuthorizeResponse <Response>k__BackingField;
    public AuthorizeResponse Response { get; }
    public AuthorizeResult(AuthorizeResponse response);
    [CompilerGeneratedAttribute]
public AuthorizeResponse get_Response();
}
internal class Duende.IdentityServer.Endpoints.Results.BackchannelAuthenticationHttpWriter : object {
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.Results.BackchannelAuthenticationHttpWriter/<WriteHttpResponse>d__0")]
public sealed virtual Task WriteHttpResponse(BackchannelAuthenticationResult result, HttpContext context);
}
public class Duende.IdentityServer.Endpoints.Results.BackchannelAuthenticationResult : EndpointResult`1<BackchannelAuthenticationResult> {
    [CompilerGeneratedAttribute]
private BackchannelAuthenticationResponse <Response>k__BackingField;
    public BackchannelAuthenticationResponse Response { get; }
    public BackchannelAuthenticationResult(BackchannelAuthenticationResponse response);
    [CompilerGeneratedAttribute]
public BackchannelAuthenticationResponse get_Response();
}
internal class Duende.IdentityServer.Endpoints.Results.BadRequestHttpWriter : object {
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.Results.BadRequestHttpWriter/<WriteHttpResponse>d__0")]
public sealed virtual Task WriteHttpResponse(BadRequestResult result, HttpContext context);
}
public class Duende.IdentityServer.Endpoints.Results.BadRequestResult : EndpointResult`1<BadRequestResult> {
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    public string Error { get; }
    public string ErrorDescription { get; }
    public BadRequestResult(string error, string errorDescription);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
}
internal class Duende.IdentityServer.Endpoints.Results.CheckSessionHttpWriter : object {
    private IdentityServerOptions _options;
    private static String modreq(System.Runtime.CompilerServices.IsVolatile) FormattedHtml;
    private static object Lock;
    private static String modreq(System.Runtime.CompilerServices.IsVolatile) LastCheckSessionCookieName;
    private static string Html;
    public CheckSessionHttpWriter(IdentityServerOptions options);
    private static CheckSessionHttpWriter();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.Results.CheckSessionHttpWriter/<WriteHttpResponse>d__5")]
public sealed virtual Task WriteHttpResponse(CheckSessionResult result, HttpContext context);
    private void AddCspHeaders(HttpContext context);
    private string GetHtml(string cookieName);
}
public class Duende.IdentityServer.Endpoints.Results.CheckSessionResult : EndpointResult`1<CheckSessionResult> {
}
public class Duende.IdentityServer.Endpoints.Results.ConsentPageResult : AuthorizeInteractionPageResult {
    public ConsentPageResult(ValidatedAuthorizeRequest request, IdentityServerOptions options);
}
public class Duende.IdentityServer.Endpoints.Results.CreateAccountPageResult : AuthorizeInteractionPageResult {
    public CreateAccountPageResult(ValidatedAuthorizeRequest request, IdentityServerOptions options);
}
public class Duende.IdentityServer.Endpoints.Results.CustomRedirectResult : AuthorizeInteractionPageResult {
    public CustomRedirectResult(ValidatedAuthorizeRequest request, string url, IdentityServerOptions options);
}
internal class Duende.IdentityServer.Endpoints.Results.DeviceAuthorizationHttpWriter : object {
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.Results.DeviceAuthorizationHttpWriter/<WriteHttpResponse>d__0")]
public sealed virtual Task WriteHttpResponse(DeviceAuthorizationResult result, HttpContext context);
}
public class Duende.IdentityServer.Endpoints.Results.DeviceAuthorizationResult : EndpointResult`1<DeviceAuthorizationResult> {
    [CompilerGeneratedAttribute]
private DeviceAuthorizationResponse <Response>k__BackingField;
    public DeviceAuthorizationResponse Response { get; }
    public DeviceAuthorizationResult(DeviceAuthorizationResponse response);
    [CompilerGeneratedAttribute]
public DeviceAuthorizationResponse get_Response();
}
internal class Duende.IdentityServer.Endpoints.Results.DiscoveryDocumentHttpWriter : object {
    public sealed virtual Task WriteHttpResponse(DiscoveryDocumentResult result, HttpContext context);
}
public class Duende.IdentityServer.Endpoints.Results.DiscoveryDocumentResult : EndpointResult`1<DiscoveryDocumentResult> {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Entries>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxAge>k__BackingField;
    public Dictionary`2<string, object> Entries { get; }
    public Nullable`1<int> MaxAge { get; }
    public DiscoveryDocumentResult(Dictionary`2<string, object> entries, Nullable`1<int> maxAge);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Entries();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxAge();
}
public abstract class Duende.IdentityServer.Endpoints.Results.EndpointResult`1 : object {
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.Results.EndpointResult`1/<ExecuteAsync>d__0")]
public sealed virtual Task ExecuteAsync(HttpContext context);
}
internal class Duende.IdentityServer.Endpoints.Results.EndSessionCallbackHttpWriter : object {
    private IdentityServerOptions _options;
    public EndSessionCallbackHttpWriter(IdentityServerOptions options);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.Results.EndSessionCallbackHttpWriter/<WriteHttpResponse>d__2")]
public sealed virtual Task WriteHttpResponse(EndSessionCallbackResult result, HttpContext context);
    private void AddCspHeaders(EndSessionCallbackResult result, HttpContext context);
    private string GetHtml(EndSessionCallbackResult result);
}
public class Duende.IdentityServer.Endpoints.Results.EndSessionCallbackResult : EndpointResult`1<EndSessionCallbackResult> {
    [CompilerGeneratedAttribute]
private EndSessionCallbackValidationResult <Result>k__BackingField;
    public EndSessionCallbackValidationResult Result { get; }
    public EndSessionCallbackResult(EndSessionCallbackValidationResult result);
    [CompilerGeneratedAttribute]
public EndSessionCallbackValidationResult get_Result();
}
internal class Duende.IdentityServer.Endpoints.Results.EndSessionHttpWriter : object {
    private IdentityServerOptions _options;
    private IClock _clock;
    private IServerUrls _urls;
    private IMessageStore`1<LogoutMessage> _logoutMessageStore;
    public EndSessionHttpWriter(IdentityServerOptions options, IClock clock, IServerUrls urls, IMessageStore`1<LogoutMessage> logoutMessageStore);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.Results.EndSessionHttpWriter/<WriteHttpResponse>d__5")]
public sealed virtual Task WriteHttpResponse(EndSessionResult result, HttpContext context);
}
public class Duende.IdentityServer.Endpoints.Results.EndSessionResult : EndpointResult`1<EndSessionResult> {
    [CompilerGeneratedAttribute]
private EndSessionValidationResult <Result>k__BackingField;
    public EndSessionValidationResult Result { get; }
    public EndSessionResult(EndSessionValidationResult result);
    [CompilerGeneratedAttribute]
public EndSessionValidationResult get_Result();
}
internal class Duende.IdentityServer.Endpoints.Results.IntrospectionHttpWriter : object {
    public sealed virtual Task WriteHttpResponse(IntrospectionResult result, HttpContext context);
}
public class Duende.IdentityServer.Endpoints.Results.IntrospectionResult : EndpointResult`1<IntrospectionResult> {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Entries>k__BackingField;
    public Dictionary`2<string, object> Entries { get; }
    public IntrospectionResult(Dictionary`2<string, object> entries);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Entries();
}
internal class Duende.IdentityServer.Endpoints.Results.JsonWebKeysHttpWriter : object {
    public sealed virtual Task WriteHttpResponse(JsonWebKeysResult result, HttpContext context);
}
public class Duende.IdentityServer.Endpoints.Results.JsonWebKeysResult : EndpointResult`1<JsonWebKeysResult> {
    [CompilerGeneratedAttribute]
private IEnumerable`1<JsonWebKey> <WebKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxAge>k__BackingField;
    public IEnumerable`1<JsonWebKey> WebKeys { get; }
    public Nullable`1<int> MaxAge { get; }
    public JsonWebKeysResult(IEnumerable`1<JsonWebKey> webKeys, Nullable`1<int> maxAge);
    [CompilerGeneratedAttribute]
public IEnumerable`1<JsonWebKey> get_WebKeys();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxAge();
}
public class Duende.IdentityServer.Endpoints.Results.LoginPageResult : AuthorizeInteractionPageResult {
    public LoginPageResult(ValidatedAuthorizeRequest request, IdentityServerOptions options);
}
internal class Duende.IdentityServer.Endpoints.Results.ProtectedResourceErrorHttpWriter : object {
    public sealed virtual Task WriteHttpResponse(ProtectedResourceErrorResult result, HttpContext context);
}
public class Duende.IdentityServer.Endpoints.Results.ProtectedResourceErrorResult : EndpointResult`1<ProtectedResourceErrorResult> {
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    public string Error { get; }
    public string ErrorDescription { get; }
    public ProtectedResourceErrorResult(string error, string errorDescription);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
}
internal class Duende.IdentityServer.Endpoints.Results.PushedAuthorizationErrorHttpWriter : object {
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.Results.PushedAuthorizationErrorHttpWriter/<WriteHttpResponse>d__0")]
public sealed virtual Task WriteHttpResponse(PushedAuthorizationErrorResult result, HttpContext context);
}
public class Duende.IdentityServer.Endpoints.Results.PushedAuthorizationErrorResult : EndpointResult`1<PushedAuthorizationErrorResult> {
    [CompilerGeneratedAttribute]
private PushedAuthorizationFailure <Response>k__BackingField;
    public PushedAuthorizationFailure Response { get; }
    public PushedAuthorizationErrorResult(PushedAuthorizationFailure response);
    [CompilerGeneratedAttribute]
public PushedAuthorizationFailure get_Response();
}
internal class Duende.IdentityServer.Endpoints.Results.PushedAuthorizationHttpWriter : object {
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.Results.PushedAuthorizationHttpWriter/<WriteHttpResponse>d__0")]
public sealed virtual Task WriteHttpResponse(PushedAuthorizationResult result, HttpContext context);
}
public class Duende.IdentityServer.Endpoints.Results.PushedAuthorizationResult : EndpointResult`1<PushedAuthorizationResult> {
    [CompilerGeneratedAttribute]
private PushedAuthorizationSuccess <Response>k__BackingField;
    public PushedAuthorizationSuccess Response { get; }
    public PushedAuthorizationResult(PushedAuthorizationSuccess response);
    [CompilerGeneratedAttribute]
public PushedAuthorizationSuccess get_Response();
}
internal class Duende.IdentityServer.Endpoints.Results.StatusCodeHttpWriter : object {
    public sealed virtual Task WriteHttpResponse(StatusCodeResult result, HttpContext context);
}
public class Duende.IdentityServer.Endpoints.Results.StatusCodeResult : EndpointResult`1<StatusCodeResult> {
    [CompilerGeneratedAttribute]
private int <StatusCode>k__BackingField;
    public int StatusCode { get; }
    public StatusCodeResult(HttpStatusCode statusCode);
    public StatusCodeResult(int statusCode);
    [CompilerGeneratedAttribute]
public int get_StatusCode();
}
internal class Duende.IdentityServer.Endpoints.Results.TokenErrorHttpWriter : object {
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.Results.TokenErrorHttpWriter/<WriteHttpResponse>d__0")]
public sealed virtual Task WriteHttpResponse(TokenErrorResult result, HttpContext context);
}
public class Duende.IdentityServer.Endpoints.Results.TokenErrorResult : EndpointResult`1<TokenErrorResult> {
    [CompilerGeneratedAttribute]
private TokenErrorResponse <Response>k__BackingField;
    public TokenErrorResponse Response { get; }
    public TokenErrorResult(TokenErrorResponse error);
    [CompilerGeneratedAttribute]
public TokenErrorResponse get_Response();
}
internal class Duende.IdentityServer.Endpoints.Results.TokenHttpWriter : object {
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.Results.TokenHttpWriter/<WriteHttpResponse>d__0")]
public sealed virtual Task WriteHttpResponse(TokenResult result, HttpContext context);
}
public class Duende.IdentityServer.Endpoints.Results.TokenResult : EndpointResult`1<TokenResult> {
    [CompilerGeneratedAttribute]
private TokenResponse <Response>k__BackingField;
    public TokenResponse Response { get; }
    public TokenResult(TokenResponse response);
    [CompilerGeneratedAttribute]
public TokenResponse get_Response();
}
internal class Duende.IdentityServer.Endpoints.Results.TokenRevocationErrorHttpWriter : object {
    public sealed virtual Task WriteHttpResponse(TokenRevocationErrorResult result, HttpContext context);
}
public class Duende.IdentityServer.Endpoints.Results.TokenRevocationErrorResult : EndpointResult`1<TokenRevocationErrorResult> {
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    public string Error { get; }
    public TokenRevocationErrorResult(string error);
    [CompilerGeneratedAttribute]
public string get_Error();
}
internal class Duende.IdentityServer.Endpoints.Results.UserInfoHttpWriter : object {
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.Results.UserInfoHttpWriter/<WriteHttpResponse>d__0")]
public sealed virtual Task WriteHttpResponse(UserInfoResult result, HttpContext context);
}
public class Duende.IdentityServer.Endpoints.Results.UserInfoResult : EndpointResult`1<UserInfoResult> {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Claims>k__BackingField;
    public Dictionary`2<string, object> Claims { get; }
    public UserInfoResult(Dictionary`2<string, object> claims);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Claims();
}
internal class Duende.IdentityServer.Endpoints.TokenEndpoint : object {
    private IdentityServerOptions _identityServerOptions;
    private IClientSecretValidator _clientValidator;
    private ITokenRequestValidator _requestValidator;
    private ITokenResponseGenerator _responseGenerator;
    private IEventService _events;
    private ILogger _logger;
    public TokenEndpoint(IdentityServerOptions identityServerOptions, IClientSecretValidator clientValidator, ITokenRequestValidator requestValidator, ITokenResponseGenerator responseGenerator, IEventService events, ILogger`1<TokenEndpoint> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.TokenEndpoint/<ProcessAsync>d__7")]
public sealed virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.TokenEndpoint/<ProcessTokenRequestAsync>d__8")]
private Task`1<IEndpointResult> ProcessTokenRequestAsync(HttpContext context);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.TokenEndpoint/<TryReadProofTokens>d__9")]
private Task`1<TokenErrorResult> TryReadProofTokens(HttpContext context, TokenRequestValidationContext tokenRequest);
    private TokenErrorResult Error(string error, string errorDescription, Dictionary`2<string, object> custom);
    private void LogTokens(TokenResponse response, TokenRequestValidationResult requestResult);
}
internal class Duende.IdentityServer.Endpoints.TokenRevocationEndpoint : object {
    private ILogger _logger;
    private IClientSecretValidator _clientValidator;
    private ITokenRevocationRequestValidator _requestValidator;
    private ITokenRevocationResponseGenerator _responseGenerator;
    private IEventService _events;
    public TokenRevocationEndpoint(ILogger`1<TokenRevocationEndpoint> logger, IClientSecretValidator clientValidator, ITokenRevocationRequestValidator requestValidator, ITokenRevocationResponseGenerator responseGenerator, IEventService events);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.TokenRevocationEndpoint/<ProcessAsync>d__6")]
public sealed virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.TokenRevocationEndpoint/<ProcessRevocationRequestAsync>d__7")]
private Task`1<IEndpointResult> ProcessRevocationRequestAsync(HttpContext context);
}
internal class Duende.IdentityServer.Endpoints.UserInfoEndpoint : object {
    private BearerTokenUsageValidator _tokenUsageValidator;
    private IUserInfoRequestValidator _requestValidator;
    private IUserInfoResponseGenerator _responseGenerator;
    private ILogger _logger;
    public UserInfoEndpoint(BearerTokenUsageValidator tokenUsageValidator, IUserInfoRequestValidator requestValidator, IUserInfoResponseGenerator responseGenerator, ILogger`1<UserInfoEndpoint> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.UserInfoEndpoint/<ProcessAsync>d__5")]
public sealed virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Endpoints.UserInfoEndpoint/<ProcessUserInfoRequestAsync>d__6")]
private Task`1<IEndpointResult> ProcessUserInfoRequestAsync(HttpContext context);
    private IEndpointResult Error(string error, string description);
}
public class Duende.IdentityServer.Events.ApiAuthenticationFailureEvent : Event {
    [CompilerGeneratedAttribute]
private string <ApiName>k__BackingField;
    public string ApiName { get; public set; }
    public ApiAuthenticationFailureEvent(string apiName, string message);
    [CompilerGeneratedAttribute]
public string get_ApiName();
    [CompilerGeneratedAttribute]
public void set_ApiName(string value);
}
public class Duende.IdentityServer.Events.ApiAuthenticationSuccessEvent : Event {
    [CompilerGeneratedAttribute]
private string <ApiName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthenticationMethod>k__BackingField;
    public string ApiName { get; public set; }
    public string AuthenticationMethod { get; public set; }
    public ApiAuthenticationSuccessEvent(string apiName, string authenticationMethod);
    [CompilerGeneratedAttribute]
public string get_ApiName();
    [CompilerGeneratedAttribute]
public void set_ApiName(string value);
    [CompilerGeneratedAttribute]
public string get_AuthenticationMethod();
    [CompilerGeneratedAttribute]
public void set_AuthenticationMethod(string value);
}
public class Duende.IdentityServer.Events.BackchannelAuthenticationFailureEvent : Event {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string Endpoint { get; public set; }
    public string SubjectId { get; public set; }
    public string Scopes { get; public set; }
    public string Error { get; public set; }
    public string ErrorDescription { get; public set; }
    public BackchannelAuthenticationFailureEvent(ValidatedBackchannelAuthenticationRequest request, string error, string description);
    public BackchannelAuthenticationFailureEvent(BackchannelAuthenticationRequestValidationResult result);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
}
public class Duende.IdentityServer.Events.BackchannelAuthenticationSuccessEvent : Event {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string Endpoint { get; public set; }
    public string SubjectId { get; public set; }
    public string Scopes { get; public set; }
    public BackchannelAuthenticationSuccessEvent(BackchannelAuthenticationRequestValidationResult request);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
}
public class Duende.IdentityServer.Events.ClientAuthenticationFailureEvent : Event {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    public string ClientId { get; public set; }
    public ClientAuthenticationFailureEvent(string clientId, string message);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
}
public class Duende.IdentityServer.Events.ClientAuthenticationSuccessEvent : Event {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthenticationMethod>k__BackingField;
    public string ClientId { get; public set; }
    public string AuthenticationMethod { get; public set; }
    public ClientAuthenticationSuccessEvent(string clientId, string authenticationMethod);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_AuthenticationMethod();
    [CompilerGeneratedAttribute]
public void set_AuthenticationMethod(string value);
}
public class Duende.IdentityServer.Events.ConsentDeniedEvent : Event {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <RequestedScopes>k__BackingField;
    public string SubjectId { get; public set; }
    public string ClientId { get; public set; }
    public IEnumerable`1<string> RequestedScopes { get; public set; }
    public ConsentDeniedEvent(string subjectId, string clientId, IEnumerable`1<string> requestedScopes);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_RequestedScopes();
    [CompilerGeneratedAttribute]
public void set_RequestedScopes(IEnumerable`1<string> value);
}
public class Duende.IdentityServer.Events.ConsentGrantedEvent : Event {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <RequestedScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <GrantedScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ConsentRemembered>k__BackingField;
    public string SubjectId { get; public set; }
    public string ClientId { get; public set; }
    public IEnumerable`1<string> RequestedScopes { get; public set; }
    public IEnumerable`1<string> GrantedScopes { get; public set; }
    public bool ConsentRemembered { get; public set; }
    public ConsentGrantedEvent(string subjectId, string clientId, IEnumerable`1<string> requestedScopes, IEnumerable`1<string> grantedScopes, bool consentRemembered);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_RequestedScopes();
    [CompilerGeneratedAttribute]
public void set_RequestedScopes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_GrantedScopes();
    [CompilerGeneratedAttribute]
public void set_GrantedScopes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_ConsentRemembered();
    [CompilerGeneratedAttribute]
public void set_ConsentRemembered(bool value);
}
public class Duende.IdentityServer.Events.DefaultEventService : object {
    protected IdentityServerOptions Options;
    protected IHttpContextAccessor Context;
    protected IEventSink Sink;
    protected IClock Clock;
    public DefaultEventService(IdentityServerOptions options, IHttpContextAccessor context, IEventSink sink, IClock clock);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Events.DefaultEventService/<RaiseAsync>d__5")]
public sealed virtual Task RaiseAsync(Event evt);
    public sealed virtual bool CanRaiseEventType(EventTypes evtType);
    protected virtual bool CanRaiseEvent(Event evt);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Events.DefaultEventService/<PrepareEventAsync>d__8")]
protected virtual Task PrepareEventAsync(Event evt);
}
public class Duende.IdentityServer.Events.DeviceAuthorizationFailureEvent : Event {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string Endpoint { get; public set; }
    public string Scopes { get; public set; }
    public string Error { get; public set; }
    public string ErrorDescription { get; public set; }
    public DeviceAuthorizationFailureEvent(DeviceAuthorizationRequestValidationResult result);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
}
public class Duende.IdentityServer.Events.DeviceAuthorizationSuccessEvent : Event {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string Endpoint { get; public set; }
    public string Scopes { get; public set; }
    public DeviceAuthorizationSuccessEvent(DeviceAuthorizationResponse response, DeviceAuthorizationRequestValidationResult request);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class Duende.IdentityServer.Events.Event : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private EventTypes <EventType>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActivityId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <TimeStamp>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LocalIpAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RemoteIpAddress>k__BackingField;
    [NullableAttribute("1")]
public string Category { get; public set; }
    [NullableAttribute("1")]
public string Name { get; public set; }
    public EventTypes EventType { get; public set; }
    public int Id { get; public set; }
    public string Message { get; public set; }
    public string ActivityId { get; public set; }
    public DateTime TimeStamp { get; public set; }
    public int ProcessId { get; public set; }
    public string LocalIpAddress { get; public set; }
    public string RemoteIpAddress { get; public set; }
    [NullableContextAttribute("1")]
protected Event(string category, string name, EventTypes type, int id, string message);
    [NullableContextAttribute("1")]
protected internal virtual Task PrepareAsync();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Category();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Category(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Name();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public EventTypes get_EventType();
    [CompilerGeneratedAttribute]
public void set_EventType(EventTypes value);
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_ActivityId();
    [CompilerGeneratedAttribute]
public void set_ActivityId(string value);
    [CompilerGeneratedAttribute]
public DateTime get_TimeStamp();
    [CompilerGeneratedAttribute]
public void set_TimeStamp(DateTime value);
    [CompilerGeneratedAttribute]
public int get_ProcessId();
    [CompilerGeneratedAttribute]
public void set_ProcessId(int value);
    [CompilerGeneratedAttribute]
public string get_LocalIpAddress();
    [CompilerGeneratedAttribute]
public void set_LocalIpAddress(string value);
    [CompilerGeneratedAttribute]
public string get_RemoteIpAddress();
    [CompilerGeneratedAttribute]
public void set_RemoteIpAddress(string value);
    [NullableContextAttribute("1")]
protected static string Obfuscate(string value);
    [NullableContextAttribute("1")]
public virtual string ToString();
}
public static class Duende.IdentityServer.Events.EventCategories : object {
    public static string Authentication;
    public static string BackchannelAuthentication;
    public static string Token;
    public static string Grants;
    public static string Error;
    public static string DeviceFlow;
}
public static class Duende.IdentityServer.Events.EventIds : object {
    private static int AuthenticationEventsStart;
    public static int UserLoginSuccess;
    public static int UserLoginFailure;
    public static int UserLogoutSuccess;
    public static int ClientAuthenticationSuccess;
    public static int ClientAuthenticationFailure;
    public static int ApiAuthenticationSuccess;
    public static int ApiAuthenticationFailure;
    private static int TokenEventsStart;
    public static int TokenIssuedSuccess;
    public static int TokenIssuedFailure;
    public static int TokenRevokedSuccess;
    public static int TokenIntrospectionSuccess;
    public static int TokenIntrospectionFailure;
    private static int ErrorEventsStart;
    public static int UnhandledException;
    public static int InvalidClientConfiguration;
    public static int InvalidIdentityProviderConfiguration;
    private static int GrantsEventsStart;
    public static int ConsentGranted;
    public static int ConsentDenied;
    public static int GrantsRevoked;
    private static int DeviceFlowEventsStart;
    public static int DeviceAuthorizationSuccess;
    public static int DeviceAuthorizationFailure;
    private static int BackchannelAuthenticationEventsStart;
    public static int BackchannelAuthenticationSuccess;
    public static int BackchannelAuthenticationFailure;
}
public enum Duende.IdentityServer.Events.EventTypes : Enum {
    public int value__;
    public static EventTypes Success;
    public static EventTypes Failure;
    public static EventTypes Information;
    public static EventTypes Error;
}
public class Duende.IdentityServer.Events.GrantsRevokedEvent : Event {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    public string SubjectId { get; public set; }
    public string ClientId { get; public set; }
    public GrantsRevokedEvent(string subjectId, string clientId);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
}
public class Duende.IdentityServer.Events.InvalidClientConfigurationEvent : Event {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public InvalidClientConfigurationEvent(Client client, string errorMessage);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
}
public class Duende.IdentityServer.Events.InvalidIdentityProviderConfiguration : Event {
    [CompilerGeneratedAttribute]
private string <Scheme>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public string Scheme { get; public set; }
    public string DisplayName { get; public set; }
    public string Type { get; public set; }
    public InvalidIdentityProviderConfiguration(IdentityProvider idp, string errorMessage);
    [CompilerGeneratedAttribute]
public string get_Scheme();
    [CompilerGeneratedAttribute]
public void set_Scheme(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
public class Duende.IdentityServer.Events.TokenIntrospectionFailureEvent : Event {
    [CompilerGeneratedAttribute]
private string <ApiName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ApiScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <TokenScopes>k__BackingField;
    public string ApiName { get; public set; }
    public string Token { get; public set; }
    public IEnumerable`1<string> ApiScopes { get; public set; }
    public IEnumerable`1<string> TokenScopes { get; public set; }
    public TokenIntrospectionFailureEvent(string apiName, string errorMessage, string token, IEnumerable`1<string> apiScopes, IEnumerable`1<string> tokenScopes);
    [CompilerGeneratedAttribute]
public string get_ApiName();
    [CompilerGeneratedAttribute]
public void set_ApiName(string value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ApiScopes();
    [CompilerGeneratedAttribute]
public void set_ApiScopes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_TokenScopes();
    [CompilerGeneratedAttribute]
public void set_TokenScopes(IEnumerable`1<string> value);
}
public class Duende.IdentityServer.Events.TokenIntrospectionSuccessEvent : Event {
    [CompilerGeneratedAttribute]
private string <ApiName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsActive>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ClaimTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <TokenScopes>k__BackingField;
    public string ApiName { get; public set; }
    public string ClientName { get; public set; }
    public bool IsActive { get; public set; }
    public string Token { get; public set; }
    public IEnumerable`1<string> ClaimTypes { get; public set; }
    public IEnumerable`1<string> TokenScopes { get; public set; }
    public TokenIntrospectionSuccessEvent(IntrospectionRequestValidationResult result);
    [CompilerGeneratedAttribute]
public string get_ApiName();
    [CompilerGeneratedAttribute]
public void set_ApiName(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public bool get_IsActive();
    [CompilerGeneratedAttribute]
public void set_IsActive(bool value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ClaimTypes();
    [CompilerGeneratedAttribute]
public void set_ClaimTypes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_TokenScopes();
    [CompilerGeneratedAttribute]
public void set_TokenScopes(IEnumerable`1<string> value);
}
public class Duende.IdentityServer.Events.TokenIssuedFailureEvent : Event {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RedirectUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GrantType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string RedirectUri { get; public set; }
    public string Endpoint { get; public set; }
    public string SubjectId { get; public set; }
    public string Scopes { get; public set; }
    public string GrantType { get; public set; }
    public string Error { get; public set; }
    public string ErrorDescription { get; public set; }
    public TokenIssuedFailureEvent(ValidatedAuthorizeRequest request, string error, string description);
    public TokenIssuedFailureEvent(TokenRequestValidationResult result);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_RedirectUri();
    [CompilerGeneratedAttribute]
public void set_RedirectUri(string value);
    [CompilerGeneratedAttribute]
public string get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
    [CompilerGeneratedAttribute]
public string get_GrantType();
    [CompilerGeneratedAttribute]
public void set_GrantType(string value);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
}
public class Duende.IdentityServer.Events.TokenIssuedSuccessEvent : Event {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RedirectUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GrantType>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Token> <Tokens>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string RedirectUri { get; public set; }
    public string Endpoint { get; public set; }
    public string SubjectId { get; public set; }
    public string Scopes { get; public set; }
    public string GrantType { get; public set; }
    public IEnumerable`1<Token> Tokens { get; public set; }
    public TokenIssuedSuccessEvent(AuthorizeResponse response);
    public TokenIssuedSuccessEvent(TokenResponse response, TokenRequestValidationResult request);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_RedirectUri();
    [CompilerGeneratedAttribute]
public void set_RedirectUri(string value);
    [CompilerGeneratedAttribute]
public string get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
    [CompilerGeneratedAttribute]
public string get_GrantType();
    [CompilerGeneratedAttribute]
public void set_GrantType(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<Token> get_Tokens();
    [CompilerGeneratedAttribute]
public void set_Tokens(IEnumerable`1<Token> value);
}
public class Duende.IdentityServer.Events.TokenRevokedSuccessEvent : Event {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string TokenType { get; public set; }
    public string Token { get; public set; }
    public TokenRevokedSuccessEvent(TokenRevocationRequestValidationResult requestResult, Client client);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_TokenType();
    [CompilerGeneratedAttribute]
public void set_TokenType(string value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
}
public class Duende.IdentityServer.Events.UnhandledExceptionEvent : Event {
    [CompilerGeneratedAttribute]
private string <Details>k__BackingField;
    public string Details { get; public set; }
    public UnhandledExceptionEvent(Exception ex);
    [CompilerGeneratedAttribute]
public string get_Details();
    [CompilerGeneratedAttribute]
public void set_Details(string value);
}
public class Duende.IdentityServer.Events.UserLoginFailureEvent : Event {
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    public string Username { get; public set; }
    public string Endpoint { get; public set; }
    public string ClientId { get; public set; }
    public UserLoginFailureEvent(string username, string error, bool interactive, string clientId);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public string get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
}
public class Duende.IdentityServer.Events.UserLoginSuccessEvent : Event {
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Provider>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProviderUserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    public string Username { get; public set; }
    public string Provider { get; public set; }
    public string ProviderUserId { get; public set; }
    public string SubjectId { get; public set; }
    public string DisplayName { get; public set; }
    public string Endpoint { get; public set; }
    public string ClientId { get; public set; }
    public UserLoginSuccessEvent(string provider, string providerUserId, string subjectId, string name, bool interactive, string clientId);
    public UserLoginSuccessEvent(string username, string subjectId, string name, bool interactive, string clientId);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public string get_Provider();
    [CompilerGeneratedAttribute]
public void set_Provider(string value);
    [CompilerGeneratedAttribute]
public string get_ProviderUserId();
    [CompilerGeneratedAttribute]
public void set_ProviderUserId(string value);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
}
public class Duende.IdentityServer.Events.UserLogoutSuccessEvent : Event {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    public string SubjectId { get; public set; }
    public string DisplayName { get; public set; }
    public UserLogoutSuccessEvent(string subjectId, string name);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
}
[ExtensionAttribute]
public static class Duende.IdentityServer.Extensions.AuthenticationPropertiesExtensions : object {
    internal static string SessionIdKey;
    internal static string ClientListKey;
    [ExtensionAttribute]
public static string GetSessionId(AuthenticationProperties properties);
    [ExtensionAttribute]
public static void SetSessionId(AuthenticationProperties properties, string sid);
    [ExtensionAttribute]
public static IEnumerable`1<string> GetClientList(AuthenticationProperties properties);
    [ExtensionAttribute]
public static void RemoveClientList(AuthenticationProperties properties);
    [ExtensionAttribute]
public static void SetClientList(AuthenticationProperties properties, IEnumerable`1<string> clientIds);
    [ExtensionAttribute]
public static void AddClientId(AuthenticationProperties properties, string clientId);
    private static IEnumerable`1<string> DecodeList(string value);
    private static string EncodeList(IEnumerable`1<string> list);
}
[ExtensionAttribute]
public static class Duende.IdentityServer.Extensions.AuthenticationTicketExtensions : object {
    private static JsonSerializerOptions JsonOptions;
    private static AuthenticationTicketExtensions();
    [ExtensionAttribute]
public static string GetSubjectId(AuthenticationTicket ticket);
    [ExtensionAttribute]
public static string GetSessionId(AuthenticationTicket ticket);
    [ExtensionAttribute]
public static string GetDisplayName(AuthenticationTicket ticket, string displayNameClaimType);
    [ExtensionAttribute]
public static string GetIssuer(AuthenticationTicket ticket);
    [ExtensionAttribute]
public static void SetIssuer(AuthenticationTicket ticket, string issuer);
    [ExtensionAttribute]
public static DateTime GetIssued(AuthenticationTicket ticket);
    [ExtensionAttribute]
public static Nullable`1<DateTime> GetExpiration(AuthenticationTicket ticket);
    [ExtensionAttribute]
public static string Serialize(AuthenticationTicket ticket, IDataProtector protector);
    [ExtensionAttribute]
public static AuthenticationTicket Deserialize(ServerSideSession session, IDataProtector protector, ILogger logger);
}
[ExtensionAttribute]
internal static class Duende.IdentityServer.Extensions.ClaimsExtensions : object {
    [ExtensionAttribute]
public static Dictionary`2<string, object> ToClaimsDictionary(IEnumerable`1<Claim> claims);
    private static object GetValue(Claim claim);
}
[ExtensionAttribute]
internal static class Duende.IdentityServer.Extensions.DateTimeExtensions : object {
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool HasExceeded(DateTime creationTime, int seconds, DateTime now);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static int GetLifetimeInSeconds(DateTime creationTime, DateTime now);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool HasExpired(Nullable`1<DateTime> expirationTime, DateTime now);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool HasExpired(DateTime expirationTime, DateTime now);
}
[ExtensionAttribute]
internal static class Duende.IdentityServer.Extensions.EndpointOptionsExtensions : object {
    [ExtensionAttribute]
public static bool IsEndpointEnabled(EndpointsOptions options, Endpoint endpoint);
}
[ExtensionAttribute]
public static class Duende.IdentityServer.Extensions.HttpContextExtensions : object {
    [ExtensionAttribute]
internal static void SetSignOutCalled(HttpContext context);
    [ExtensionAttribute]
internal static bool GetSignOutCalled(HttpContext context);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Extensions.HttpContextExtensions/<GetIdentityServerSignoutFrameCallbackUrlAsync>d__2")]
[ExtensionAttribute]
internal static Task`1<string> GetIdentityServerSignoutFrameCallbackUrlAsync(HttpContext context, LogoutMessage logoutMessage);
}
[ExtensionAttribute]
public static class Duende.IdentityServer.Extensions.HttpRequestExtensions : object {
    [ExtensionAttribute]
public static string GetCorsOrigin(HttpRequest request);
    [ExtensionAttribute]
internal static bool HasApplicationFormContentType(HttpRequest request);
}
[ExtensionAttribute]
public static class Duende.IdentityServer.Extensions.HttpResponseExtensions : object {
    [AsyncStateMachineAttribute("Duende.IdentityServer.Extensions.HttpResponseExtensions/<WriteJsonAsync>d__0")]
[ExtensionAttribute]
public static Task WriteJsonAsync(HttpResponse response, object o, string contentType);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Extensions.HttpResponseExtensions/<WriteJsonAsync>d__1")]
[ExtensionAttribute]
public static Task WriteJsonAsync(HttpResponse response, string json, string contentType);
    [ExtensionAttribute]
public static void SetCache(HttpResponse response, int maxAge, String[] varyBy);
    [ExtensionAttribute]
public static void SetNoCache(HttpResponse response);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Extensions.HttpResponseExtensions/<WriteHtmlAsync>d__4")]
[ExtensionAttribute]
public static Task WriteHtmlAsync(HttpResponse response, string html);
    [ExtensionAttribute]
public static void AddScriptCspHeaders(HttpResponse response, CspOptions options, string hash);
    [ExtensionAttribute]
public static void AddStyleCspHeaders(HttpResponse response, CspOptions options, string hash, string frameSources);
    public static void AddCspHeaders(IHeaderDictionary headers, CspOptions options, string cspHeader);
}
[ExtensionAttribute]
public static class Duende.IdentityServer.Extensions.IEnumerableExtensions : object {
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool IsNullOrEmpty(IEnumerable`1<T> list);
    [ExtensionAttribute]
public static bool HasDuplicates(IEnumerable`1<T> list, Func`2<T, TProp> selector);
}
[ExtensionAttribute]
public static class Duende.IdentityServer.Extensions.IReadableStringCollectionExtensions : object {
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static NameValueCollection AsNameValueCollection(IEnumerable`1<KeyValuePair`2<string, StringValues>> collection);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static NameValueCollection AsNameValueCollection(IDictionary`2<string, StringValues> collection);
}
[ExtensionAttribute]
internal static class Duende.IdentityServer.Extensions.JsonWebKeyExtensions : object {
    [ExtensionAttribute]
public static string CreateThumbprintCnf(JsonWebKey jwk);
    [ExtensionAttribute]
public static string CreateThumbprint(JsonWebKey jwk);
}
[ExtensionAttribute]
public static class Duende.IdentityServer.Extensions.KeyManagementExtensions : object {
    [ExtensionAttribute]
internal static RsaSecurityKey CreateRsaSecurityKey(KeyManagementOptions options);
    [ExtensionAttribute]
internal static bool IsRetired(KeyManagementOptions options, TimeSpan age);
    [ExtensionAttribute]
internal static bool IsExpired(KeyManagementOptions options, TimeSpan age);
    [ExtensionAttribute]
internal static bool IsWithinInitializationDuration(KeyManagementOptions options, TimeSpan age);
    [ExtensionAttribute]
internal static TimeSpan GetAge(IClock clock, DateTime date);
}
[ExtensionAttribute]
internal static class Duende.IdentityServer.Extensions.NameValueCollectionExtensions : object {
    [ExtensionAttribute]
public static IDictionary`2<string, String[]> ToFullDictionary(NameValueCollection source);
    [ExtensionAttribute]
public static NameValueCollection FromFullDictionary(IDictionary`2<string, String[]> source);
    [ExtensionAttribute]
public static string ToQueryString(NameValueCollection collection);
    [ExtensionAttribute]
public static string ToFormPost(NameValueCollection collection);
    [ExtensionAttribute]
public static NameValueCollection ToNameValueCollection(Dictionary`2<string, string> data);
    [ExtensionAttribute]
public static Dictionary`2<string, string> ToDictionary(NameValueCollection collection);
    [ExtensionAttribute]
public static Dictionary`2<string, string> ToScrubbedDictionary(NameValueCollection collection, String[] nameFilter);
    internal static string ConvertFormUrlEncodedSpacesToUrlEncodedSpaces(string str);
    private static bool AppendNameValuePair(StringBuilder builder, bool first, bool urlEncode, string name, string value);
}
[ExtensionAttribute]
public static class Duende.IdentityServer.Extensions.PrincipalExtensions : object {
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static DateTime GetAuthenticationTime(IPrincipal principal);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static long GetAuthenticationTimeEpoch(IPrincipal principal);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static long GetAuthenticationTimeEpoch(IIdentity identity);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string GetSubjectId(IPrincipal principal);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string GetSubjectId(IIdentity identity);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string GetDisplayName(ClaimsPrincipal principal);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string GetAuthenticationMethod(IPrincipal principal);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static IEnumerable`1<Claim> GetAuthenticationMethods(IPrincipal principal);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string GetAuthenticationMethod(IIdentity identity);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static IEnumerable`1<Claim> GetAuthenticationMethods(IIdentity identity);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string GetIdentityProvider(IPrincipal principal);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string GetIdentityProvider(IIdentity identity);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string GetTenant(ClaimsPrincipal principal);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool IsAuthenticated(IPrincipal principal);
}
[ExtensionAttribute]
internal static class Duende.IdentityServer.Extensions.ServerSideSessionExtensions : object {
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
internal static ServerSideSession Clone(ServerSideSession other);
}
[ExtensionAttribute]
public static class Duende.IdentityServer.Extensions.ServerUrlExtensions : object {
    [ExtensionAttribute]
public static string GetUnicodeOrigin(IServerUrls urls);
    [ExtensionAttribute]
public static string GetAbsoluteUrl(IServerUrls urls, string urlOrPath);
    [ExtensionAttribute]
public static string GetIdentityServerRelativeUrl(IServerUrls urls, string path);
}
[ExtensionAttribute]
internal static class Duende.IdentityServer.Extensions.StringExtensions : object {
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string ToSpaceSeparatedString(IEnumerable`1<string> list);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static IEnumerable`1<string> FromSpaceSeparatedString(string input);
    [ExtensionAttribute]
public static List`1<string> ParseScopesString(string scopes);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool IsMissing(string value);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool IsMissingOrTooLong(string value, int maxLength);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool IsPresent(string value);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string EnsureLeadingSlash(string url);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string EnsureTrailingSlash(string url);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string RemoveLeadingSlash(string url);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string RemoveTrailingSlash(string url);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string CleanUrlPath(string url);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool IsLocalUrl(string url);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool IsUri(string input);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string AddQueryString(string url, string query);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string AddQueryString(string url, string name, string value);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string AddHashFragment(string url, string query);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static NameValueCollection ReadQueryStringAsNameValueCollection(string url);
    [ExtensionAttribute]
public static string GetOrigin(string url);
    [ExtensionAttribute]
public static string Obfuscate(string value);
    [CompilerGeneratedAttribute]
internal static bool <IsLocalUrl>g__HasControlCharacter|11_0(ReadOnlySpan`1<char> readOnlySpan);
}
[ExtensionAttribute]
public static class Duende.IdentityServer.Extensions.TokenExtensions : object {
    [ExtensionAttribute]
public static Dictionary`2<string, object> CreateJwtPayloadDictionary(Token token, IdentityServerOptions options, IClock clock, ILogger logger);
    [IteratorStateMachineAttribute("Duende.IdentityServer.Extensions.TokenExtensions/<AddObjects>d__1")]
private static IEnumerable`1<object> AddObjects(IEnumerable`1<Claim> claims);
    private static object AddObject(Claim claim);
    [ExtensionAttribute]
internal static bool ContainsCnfValues(RefreshToken refresh);
    [ExtensionAttribute]
internal static ProofKeyThumbprint[] GetProofKeyThumbprints(RefreshToken refresh);
    private static ProofKeyThumbprint GetProofKeyThumbprint(string cnf);
}
[ExtensionAttribute]
public static class Duende.IdentityServer.Extensions.X509CertificateExtensions : object {
    [ExtensionAttribute]
public static string CreateThumbprintCnf(X509Certificate2 certificate);
    [ExtensionAttribute]
public static string GetSha256Thumbprint(X509Certificate2 certificate);
}
public class Duende.IdentityServer.Hosting.BaseUrlMiddleware : object {
    private RequestDelegate _next;
    public BaseUrlMiddleware(RequestDelegate next);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Hosting.BaseUrlMiddleware/<Invoke>d__2")]
public Task Invoke(HttpContext context);
}
[ExtensionAttribute]
public static class Duende.IdentityServer.Hosting.CorsMiddlewareExtensions : object {
    [ExtensionAttribute]
public static void ConfigureCors(IApplicationBuilder app);
}
internal class Duende.IdentityServer.Hosting.CorsPolicyProvider : object {
    private ILogger _logger;
    private ICorsPolicyProvider _inner;
    private IServiceProvider _provider;
    private IdentityServerOptions _options;
    public CorsPolicyProvider(ILogger`1<CorsPolicyProvider> logger, Decorator`1<ICorsPolicyProvider> inner, IdentityServerOptions options, IServiceProvider provider);
    public sealed virtual Task`1<CorsPolicy> GetPolicyAsync(HttpContext context, string policyName);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Hosting.CorsPolicyProvider/<ProcessAsync>d__6")]
private Task`1<CorsPolicy> ProcessAsync(HttpContext context);
    private CorsPolicy Allow(string origin);
    private bool IsPathAllowed(PathString path);
}
public class Duende.IdentityServer.Hosting.DynamicProviders.CachingIdentityProviderStore`1 : object {
    private IIdentityProviderStore _inner;
    private ICache`1<IdentityProvider> _cache;
    private ICache`1<IEnumerable`1<IdentityProviderName>> _allCache;
    private IdentityServerOptions _options;
    private IHttpContextAccessor _httpContextAccessor;
    private ILogger`1<CachingIdentityProviderStore`1<T>> _logger;
    public CachingIdentityProviderStore`1(T inner, ICache`1<IdentityProvider> cache, ICache`1<IEnumerable`1<IdentityProviderName>> allCache, IdentityServerOptions options, IHttpContextAccessor httpContextAccessor, ILogger`1<CachingIdentityProviderStore`1<T>> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Hosting.DynamicProviders.CachingIdentityProviderStore`1/<GetAllSchemeNamesAsync>d__7")]
public sealed virtual Task`1<IEnumerable`1<IdentityProviderName>> GetAllSchemeNamesAsync();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Hosting.DynamicProviders.CachingIdentityProviderStore`1/<GetBySchemeAsync>d__8")]
public sealed virtual Task`1<IdentityProvider> GetBySchemeAsync(string scheme);
    private void RemoveCacheEntry(IdentityProvider idp);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Hosting.DynamicProviders.CachingIdentityProviderStore`1/<<GetAllSchemeNamesAsync>b__7_0>d")]
[CompilerGeneratedAttribute]
private Task`1<IEnumerable`1<IdentityProviderName>> <GetAllSchemeNamesAsync>b__7_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Hosting.DynamicProviders.ConfigureAuthenticationContext`2 : object {
    [CompilerGeneratedAttribute]
private TAuthenticationOptions <AuthenticationOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private TIdentityProvider <IdentityProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicProviderOptions <DynamicProviderOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private PathString <PathPrefix>k__BackingField;
    public TAuthenticationOptions AuthenticationOptions { get; public set; }
    public TIdentityProvider IdentityProvider { get; public set; }
    public DynamicProviderOptions DynamicProviderOptions { get; public set; }
    public PathString PathPrefix { get; public set; }
    [CompilerGeneratedAttribute]
public TAuthenticationOptions get_AuthenticationOptions();
    [CompilerGeneratedAttribute]
public void set_AuthenticationOptions(TAuthenticationOptions value);
    [CompilerGeneratedAttribute]
public TIdentityProvider get_IdentityProvider();
    [CompilerGeneratedAttribute]
public void set_IdentityProvider(TIdentityProvider value);
    [CompilerGeneratedAttribute]
public DynamicProviderOptions get_DynamicProviderOptions();
    [CompilerGeneratedAttribute]
public void set_DynamicProviderOptions(DynamicProviderOptions value);
    [CompilerGeneratedAttribute]
public PathString get_PathPrefix();
    [CompilerGeneratedAttribute]
public void set_PathPrefix(PathString value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Duende.IdentityServer.Hosting.DynamicProviders.ConfigureAuthenticationOptions`2 : object {
    private IHttpContextAccessor _httpContextAccessor;
    private ILogger`1<ConfigureAuthenticationOptions`2<TAuthenticationOptions, TIdentityProvider>> _logger;
    public ConfigureAuthenticationOptions`2(IHttpContextAccessor httpContextAccessor, ILogger`1<ConfigureAuthenticationOptions`2<TAuthenticationOptions, TIdentityProvider>> logger);
    public sealed virtual void Configure(string name, TAuthenticationOptions options);
    protected abstract virtual void Configure(ConfigureAuthenticationContext`2<TAuthenticationOptions, TIdentityProvider> context);
    public sealed virtual void Configure(TAuthenticationOptions options);
}
public class Duende.IdentityServer.Hosting.DynamicProviders.DynamicAuthenticationScheme : AuthenticationScheme {
    [CompilerGeneratedAttribute]
private IdentityProvider <IdentityProvider>k__BackingField;
    public IdentityProvider IdentityProvider { get; public set; }
    public DynamicAuthenticationScheme(IdentityProvider idp, Type handlerType);
    [CompilerGeneratedAttribute]
public IdentityProvider get_IdentityProvider();
    [CompilerGeneratedAttribute]
public void set_IdentityProvider(IdentityProvider value);
}
public class Duende.IdentityServer.Hosting.DynamicProviders.DynamicAuthenticationSchemeCache : object {
    private ConcurrentDictionary`2<string, DynamicAuthenticationScheme> _cache;
    public void Add(string name, DynamicAuthenticationScheme item);
    public DynamicAuthenticationScheme Get(string name);
    public T GetIdentityProvider(string name);
}
internal class Duende.IdentityServer.Hosting.DynamicProviders.DynamicAuthenticationSchemeProvider : object {
    private IAuthenticationSchemeProvider _inner;
    private DynamicProviderOptions _options;
    private IHttpContextAccessor _httpContextAccessor;
    private ILogger`1<DynamicAuthenticationSchemeProvider> _logger;
    public DynamicAuthenticationSchemeProvider(Decorator`1<IAuthenticationSchemeProvider> inner, DynamicProviderOptions options, IHttpContextAccessor httpContextAccessor, ILogger`1<DynamicAuthenticationSchemeProvider> logger);
    public sealed virtual void AddScheme(AuthenticationScheme scheme);
    public sealed virtual Task`1<AuthenticationScheme> GetDefaultAuthenticateSchemeAsync();
    public sealed virtual Task`1<AuthenticationScheme> GetDefaultChallengeSchemeAsync();
    public sealed virtual Task`1<AuthenticationScheme> GetDefaultForbidSchemeAsync();
    public sealed virtual Task`1<AuthenticationScheme> GetDefaultSignInSchemeAsync();
    public sealed virtual Task`1<AuthenticationScheme> GetDefaultSignOutSchemeAsync();
    public sealed virtual Task`1<IEnumerable`1<AuthenticationScheme>> GetAllSchemesAsync();
    public sealed virtual Task`1<IEnumerable`1<AuthenticationScheme>> GetRequestHandlerSchemesAsync();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Hosting.DynamicProviders.DynamicAuthenticationSchemeProvider/<GetSchemeAsync>d__13")]
public sealed virtual Task`1<AuthenticationScheme> GetSchemeAsync(string name);
    public sealed virtual void RemoveScheme(string name);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Hosting.DynamicProviders.DynamicAuthenticationSchemeProvider/<GetDynamicSchemeAsync>d__15")]
private Task`1<AuthenticationScheme> GetDynamicSchemeAsync(string name);
}
internal class Duende.IdentityServer.Hosting.DynamicProviders.DynamicSchemeAuthenticationMiddleware : object {
    private RequestDelegate _next;
    private DynamicProviderOptions _options;
    public DynamicSchemeAuthenticationMiddleware(RequestDelegate next, DynamicProviderOptions options);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Hosting.DynamicProviders.DynamicSchemeAuthenticationMiddleware/<Invoke>d__3")]
public Task Invoke(HttpContext context);
}
internal class Duende.IdentityServer.Hosting.DynamicProviders.InMemoryIdentityProviderStore : object {
    private IEnumerable`1<IdentityProvider> _providers;
    public InMemoryIdentityProviderStore(IEnumerable`1<IdentityProvider> providers);
    public sealed virtual Task`1<IEnumerable`1<IdentityProviderName>> GetAllSchemeNamesAsync();
    public sealed virtual Task`1<IdentityProvider> GetBySchemeAsync(string scheme);
}
public class Duende.IdentityServer.Hosting.DynamicProviders.NonCachingIdentityProviderStore`1 : object {
    private IIdentityProviderStore _inner;
    private IdentityServerOptions _options;
    private IHttpContextAccessor _httpContextAccessor;
    private ILogger`1<NonCachingIdentityProviderStore`1<T>> _logger;
    public NonCachingIdentityProviderStore`1(T inner, IdentityServerOptions options, IHttpContextAccessor httpContextAccessor, ILogger`1<NonCachingIdentityProviderStore`1<T>> logger);
    public sealed virtual Task`1<IEnumerable`1<IdentityProviderName>> GetAllSchemeNamesAsync();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Hosting.DynamicProviders.NonCachingIdentityProviderStore`1/<GetBySchemeAsync>d__6")]
public sealed virtual Task`1<IdentityProvider> GetBySchemeAsync(string scheme);
    private void RemoveCacheEntry(IdentityProvider idp);
}
internal class Duende.IdentityServer.Hosting.DynamicProviders.NopIdentityProviderStore : object {
    public sealed virtual Task`1<IEnumerable`1<IdentityProviderName>> GetAllSchemeNamesAsync();
    public sealed virtual Task`1<IdentityProvider> GetBySchemeAsync(string scheme);
}
internal class Duende.IdentityServer.Hosting.DynamicProviders.OidcConfigureOptions : ConfigureAuthenticationOptions`2<OpenIdConnectOptions, OidcProvider> {
    public OidcConfigureOptions(IHttpContextAccessor httpContextAccessor, ILogger`1<OidcConfigureOptions> logger);
    protected virtual void Configure(ConfigureAuthenticationContext`2<OpenIdConnectOptions, OidcProvider> context);
}
public class Duende.IdentityServer.Hosting.DynamicProviders.ValidatingIdentityProviderStore`1 : object {
    private IIdentityProviderStore _inner;
    private IIdentityProviderConfigurationValidator _validator;
    private IEventService _events;
    private ILogger`1<ValidatingIdentityProviderStore`1<T>> _logger;
    private string _validatorType;
    public ValidatingIdentityProviderStore`1(T inner, IIdentityProviderConfigurationValidator validator, IEventService events, ILogger`1<ValidatingIdentityProviderStore`1<T>> logger);
    public sealed virtual Task`1<IEnumerable`1<IdentityProviderName>> GetAllSchemeNamesAsync();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Hosting.DynamicProviders.ValidatingIdentityProviderStore`1/<GetBySchemeAsync>d__7")]
public sealed virtual Task`1<IdentityProvider> GetBySchemeAsync(string scheme);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Hosting.Endpoint : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private PathString <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Handler>k__BackingField;
    public string Name { get; public set; }
    public PathString Path { get; public set; }
    public Type Handler { get; public set; }
    public Endpoint(string name, string path, Type handlerType);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public PathString get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(PathString value);
    [CompilerGeneratedAttribute]
public Type get_Handler();
    [CompilerGeneratedAttribute]
public void set_Handler(Type value);
}
internal class Duende.IdentityServer.Hosting.EndpointRouter : object {
    private IEnumerable`1<Endpoint> _endpoints;
    private IdentityServerOptions _options;
    private ILogger _logger;
    public EndpointRouter(IEnumerable`1<Endpoint> endpoints, IdentityServerOptions options, ILogger`1<EndpointRouter> logger);
    public sealed virtual IEndpointHandler Find(HttpContext context);
    private IEndpointHandler GetEndpointHandler(Endpoint endpoint, HttpContext context);
}
internal class Duende.IdentityServer.Hosting.FederatedSignOut.AuthenticationRequestHandlerWrapper : object {
    private static string IframeHtml;
    private IAuthenticationRequestHandler _inner;
    private HttpContext _context;
    private ILogger _logger;
    public AuthenticationRequestHandlerWrapper(IAuthenticationRequestHandler inner, IHttpContextAccessor httpContextAccessor);
    public sealed virtual Task InitializeAsync(AuthenticationScheme scheme, HttpContext context);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Hosting.FederatedSignOut.AuthenticationRequestHandlerWrapper/<HandleRequestAsync>d__6")]
public sealed virtual Task`1<bool> HandleRequestAsync();
    public sealed virtual Task`1<AuthenticateResult> AuthenticateAsync();
    public sealed virtual Task ChallengeAsync(AuthenticationProperties properties);
    public sealed virtual Task ForbidAsync(AuthenticationProperties properties);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Hosting.FederatedSignOut.AuthenticationRequestHandlerWrapper/<ProcessFederatedSignOutRequestAsync>d__10")]
private Task ProcessFederatedSignOutRequestAsync();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Hosting.FederatedSignOut.AuthenticationRequestHandlerWrapper/<RenderResponseAsync>d__11")]
private Task RenderResponseAsync(string iframeUrl);
}
internal class Duende.IdentityServer.Hosting.FederatedSignOut.AuthenticationRequestSignInHandlerWrapper : AuthenticationRequestSignOutHandlerWrapper {
    private IAuthenticationSignInHandler _inner;
    public AuthenticationRequestSignInHandlerWrapper(IAuthenticationSignInHandler inner, IHttpContextAccessor httpContextAccessor);
    public sealed virtual Task SignInAsync(ClaimsPrincipal user, AuthenticationProperties properties);
}
internal class Duende.IdentityServer.Hosting.FederatedSignOut.AuthenticationRequestSignOutHandlerWrapper : AuthenticationRequestHandlerWrapper {
    private IAuthenticationSignOutHandler _inner;
    public AuthenticationRequestSignOutHandlerWrapper(IAuthenticationSignOutHandler inner, IHttpContextAccessor httpContextAccessor);
    public sealed virtual Task SignOutAsync(AuthenticationProperties properties);
}
internal class Duende.IdentityServer.Hosting.FederatedSignOut.FederatedSignoutAuthenticationHandlerProvider : object {
    private IAuthenticationHandlerProvider _provider;
    private IHttpContextAccessor _httpContextAccessor;
    public FederatedSignoutAuthenticationHandlerProvider(Decorator`1<IAuthenticationHandlerProvider> decorator, IHttpContextAccessor httpContextAccessor);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Hosting.FederatedSignOut.FederatedSignoutAuthenticationHandlerProvider/<GetHandlerAsync>d__3")]
public sealed virtual Task`1<IAuthenticationHandler> GetHandlerAsync(HttpContext context, string authenticationScheme);
}
internal class Duende.IdentityServer.Hosting.IdentityServerAuthenticationService : object {
    private IAuthenticationService _inner;
    private IAuthenticationSchemeProvider _schemes;
    private IClock _clock;
    private IUserSession _session;
    private ILogger`1<IdentityServerAuthenticationService> _logger;
    public IdentityServerAuthenticationService(Decorator`1<IAuthenticationService> decorator, IAuthenticationSchemeProvider schemes, IClock clock, IUserSession session, ILogger`1<IdentityServerAuthenticationService> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Hosting.IdentityServerAuthenticationService/<SignInAsync>d__6")]
public sealed virtual Task SignInAsync(HttpContext context, string scheme, ClaimsPrincipal principal, AuthenticationProperties properties);
    private void AugmentPrincipal(ClaimsPrincipal principal);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Hosting.IdentityServerAuthenticationService/<SignOutAsync>d__8")]
public sealed virtual Task SignOutAsync(HttpContext context, string scheme, AuthenticationProperties properties);
    public sealed virtual Task`1<AuthenticateResult> AuthenticateAsync(HttpContext context, string scheme);
    public sealed virtual Task ChallengeAsync(HttpContext context, string scheme, AuthenticationProperties properties);
    public sealed virtual Task ForbidAsync(HttpContext context, string scheme, AuthenticationProperties properties);
    private void AssertRequiredClaims(ClaimsPrincipal principal);
    private void AugmentMissingClaims(ClaimsPrincipal principal, DateTime authTime);
}
public class Duende.IdentityServer.Hosting.IdentityServerMiddleware : object {
    private RequestDelegate _next;
    private ILogger _logger;
    public IdentityServerMiddleware(RequestDelegate next, ILogger`1<IdentityServerMiddleware> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Hosting.IdentityServerMiddleware/<Invoke>d__3")]
public Task Invoke(HttpContext context, IdentityServerOptions options, IEndpointRouter router, IUserSession userSession, IEventService events, IIssuerNameService issuerNameService, ISessionCoordinationService sessionCoordinationService);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Hosting.IEndpointHandler {
    public abstract virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
}
public interface Duende.IdentityServer.Hosting.IEndpointResult {
    public abstract virtual Task ExecuteAsync(HttpContext context);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Hosting.IEndpointRouter {
    public abstract virtual IEndpointHandler Find(HttpContext context);
}
public interface Duende.IdentityServer.Hosting.IHttpResponseWriter`1 {
    public abstract virtual Task WriteHttpResponse(T result, HttpContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Hosting.LocalApiAuthentication.ClaimsTransformationContext : object {
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Principal>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    public ClaimsPrincipal Principal { get; public set; }
    public HttpContext HttpContext { get; internal set; }
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Principal();
    [CompilerGeneratedAttribute]
public void set_Principal(ClaimsPrincipal value);
    [CompilerGeneratedAttribute]
public HttpContext get_HttpContext();
    [CompilerGeneratedAttribute]
internal void set_HttpContext(HttpContext value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Hosting.LocalApiAuthentication.LocalApiAuthenticationEvents : object {
    [CompilerGeneratedAttribute]
private Func`2<ClaimsTransformationContext, Task> <OnClaimsTransformation>k__BackingField;
    public Func`2<ClaimsTransformationContext, Task> OnClaimsTransformation { get; public set; }
    [CompilerGeneratedAttribute]
public Func`2<ClaimsTransformationContext, Task> get_OnClaimsTransformation();
    [CompilerGeneratedAttribute]
public void set_OnClaimsTransformation(Func`2<ClaimsTransformationContext, Task> value);
    public virtual Task ClaimsTransformation(ClaimsTransformationContext context);
}
public class Duende.IdentityServer.Hosting.LocalApiAuthentication.LocalApiAuthenticationHandler : AuthenticationHandler`1<LocalApiAuthenticationOptions> {
    private ITokenValidator _tokenValidator;
    private IDPoPProofValidator _dpopValidator;
    private IClientStore _clientStore;
    private ILogger _logger;
    protected LocalApiAuthenticationEvents Events { get; protected set; }
    public LocalApiAuthenticationHandler(IOptionsMonitor`1<LocalApiAuthenticationOptions> options, ILoggerFactory logger, UrlEncoder encoder, ITokenValidator tokenValidator, IDPoPProofValidator dpopValidator, IClientStore clientStore);
    protected LocalApiAuthenticationEvents get_Events();
    protected void set_Events(LocalApiAuthenticationEvents value);
    protected virtual Task`1<object> CreateEventsAsync();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Hosting.LocalApiAuthentication.LocalApiAuthenticationHandler/<HandleAuthenticateAsync>d__9")]
protected virtual Task`1<AuthenticateResult> HandleAuthenticateAsync();
    protected virtual Task HandleChallengeAsync(AuthenticationProperties properties);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Hosting.LocalApiAuthentication.LocalApiAuthenticationOptions : AuthenticationSchemeOptions {
    [CompilerGeneratedAttribute]
private LocalApiTokenMode <TokenMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExpectedScope>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SaveToken>k__BackingField;
    public LocalApiTokenMode TokenMode { get; public set; }
    public string ExpectedScope { get; public set; }
    public bool SaveToken { get; public set; }
    [NullableAttribute("1")]
public LocalApiAuthenticationEvents Events { get; public set; }
    [CompilerGeneratedAttribute]
public LocalApiTokenMode get_TokenMode();
    [CompilerGeneratedAttribute]
public void set_TokenMode(LocalApiTokenMode value);
    [CompilerGeneratedAttribute]
public string get_ExpectedScope();
    [CompilerGeneratedAttribute]
public void set_ExpectedScope(string value);
    [CompilerGeneratedAttribute]
public bool get_SaveToken();
    [CompilerGeneratedAttribute]
public void set_SaveToken(bool value);
    [NullableContextAttribute("1")]
public LocalApiAuthenticationEvents get_Events();
    [NullableContextAttribute("1")]
public void set_Events(LocalApiAuthenticationEvents value);
}
public enum Duende.IdentityServer.Hosting.LocalApiAuthentication.LocalApiTokenMode : Enum {
    public int value__;
    public static LocalApiTokenMode BearerOnly;
    public static LocalApiTokenMode DPoPOnly;
    public static LocalApiTokenMode DPoPAndBearer;
}
public class Duende.IdentityServer.Hosting.MutualTlsEndpointMiddleware : object {
    private ILogger`1<MutualTlsEndpointMiddleware> _logger;
    private RequestDelegate _next;
    private IdentityServerOptions _options;
    public MutualTlsEndpointMiddleware(RequestDelegate next, IdentityServerOptions options, ILogger`1<MutualTlsEndpointMiddleware> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Hosting.MutualTlsEndpointMiddleware/<Invoke>d__4")]
public Task Invoke(HttpContext context, IAuthenticationSchemeProvider schemes);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Hosting.MutualTlsEndpointMiddleware/<TriggerCertificateAuthentication>d__5")]
private Task`1<AuthenticateResult> TriggerCertificateAuthentication(HttpContext context);
}
public interface Duende.IdentityServer.IClock {
    public DateTimeOffset UtcNow { get; }
    public abstract virtual DateTimeOffset get_UtcNow();
}
public static class Duende.IdentityServer.IdentityServerConstants : object {
    public static string LocalIdentityProvider;
    public static string DefaultCookieAuthenticationScheme;
    public static string SignoutScheme;
    public static string ExternalCookieAuthenticationScheme;
    public static string DefaultCheckSessionCookieName;
    public static string AccessTokenAudience;
    public static string JwtRequestClientKey;
    public static string PushedAuthorizationRequestUri;
    public static IEnumerable`1<string> SupportedSigningAlgorithms;
    public static IEnumerable`1<string> SupportedDPoPSigningAlgorithms;
    private static IdentityServerConstants();
}
public class Duende.IdentityServer.IdentityServerLicense : License {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ClientLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <IssuerLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <KeyManagementFeature>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ParFeature>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ResourceIsolationFeature>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DynamicProvidersFeature>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RedistributionFeature>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CibaFeature>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ServerSideSessionsFeature>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DPoPFeature>k__BackingField;
    public Nullable`1<int> ClientLimit { get; public set; }
    public Nullable`1<int> IssuerLimit { get; public set; }
    public bool KeyManagementFeature { get; public set; }
    public bool ParFeature { get; public set; }
    public bool ResourceIsolationFeature { get; public set; }
    public bool DynamicProvidersFeature { get; public set; }
    public bool RedistributionFeature { get; public set; }
    public bool CibaFeature { get; public set; }
    public bool ServerSideSessionsFeature { get; public set; }
    public bool DPoPFeature { get; public set; }
    internal IdentityServerLicense(Claim[] claims);
    internal virtual void Initialize(ClaimsPrincipal claims);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ClientLimit();
    [CompilerGeneratedAttribute]
public void set_ClientLimit(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_IssuerLimit();
    [CompilerGeneratedAttribute]
public void set_IssuerLimit(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public bool get_KeyManagementFeature();
    [CompilerGeneratedAttribute]
public void set_KeyManagementFeature(bool value);
    [CompilerGeneratedAttribute]
public bool get_ParFeature();
    [CompilerGeneratedAttribute]
public void set_ParFeature(bool value);
    [CompilerGeneratedAttribute]
public bool get_ResourceIsolationFeature();
    [CompilerGeneratedAttribute]
public void set_ResourceIsolationFeature(bool value);
    [CompilerGeneratedAttribute]
public bool get_DynamicProvidersFeature();
    [CompilerGeneratedAttribute]
public void set_DynamicProvidersFeature(bool value);
    [CompilerGeneratedAttribute]
public bool get_RedistributionFeature();
    [CompilerGeneratedAttribute]
public void set_RedistributionFeature(bool value);
    [CompilerGeneratedAttribute]
public bool get_CibaFeature();
    [CompilerGeneratedAttribute]
public void set_CibaFeature(bool value);
    [CompilerGeneratedAttribute]
public bool get_ServerSideSessionsFeature();
    [CompilerGeneratedAttribute]
public void set_ServerSideSessionsFeature(bool value);
    [CompilerGeneratedAttribute]
public bool get_DPoPFeature();
    [CompilerGeneratedAttribute]
public void set_DPoPFeature(bool value);
}
internal class Duende.IdentityServer.IdentityServerLicenseValidator : LicenseValidator`1<IdentityServerLicense> {
    internal static IdentityServerLicenseValidator Instance;
    private IdentityServerOptions _options;
    private HashSet`1<string> _clientIds;
    private object _clientIdLock;
    private bool _validateClientWarned;
    private HashSet`1<string> _issuers;
    private object _issuerLock;
    private bool _validateIssuerWarned;
    private bool ValidateServerSideSessionsWarned;
    private bool CanUseDPoPWarned;
    private bool ValidateResourceIndicatorsWarned;
    private bool ValidateParWarned;
    private bool ValidateDynamicProvidersWarned;
    private bool ValidateCibaWarned;
    private static IdentityServerLicenseValidator();
    public void Initialize(ILoggerFactory loggerFactory, IdentityServerOptions options, bool isDevelopment);
    protected virtual void ValidateExpiration(List`1<string> errors);
    protected virtual void ValidateProductFeatures(List`1<string> errors);
    protected virtual void WarnForProductFeaturesWhenMissingLicense();
    private void EnsureAdded(HashSet`1& hashSet, object lockObject, string key);
    public void ValidateClient(string clientId);
    internal void ValidateClient(string clientId, IdentityServerLicense license);
    public void ValidateIssuer(string iss);
    public void ValidateServerSideSessions();
    public void ValidateDPoP();
    public void ValidateResourceIndicators(string resourceIndicator);
    public void ValidatePar();
    public void ValidateResourceIndicators(IEnumerable`1<string> resourceIndicators);
    public void ValidateDynamicProviders();
    public void ValidateCiba();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.IdentityServerTools : object {
    private IIssuerNameService _issuerNameService;
    private ITokenCreationService _tokenCreation;
    private IClock _clock;
    private IdentityServerOptions _options;
    public IdentityServerTools(IIssuerNameService issuerNameService, ITokenCreationService tokenCreation, IClock clock, IdentityServerOptions options);
    [AsyncStateMachineAttribute("Duende.IdentityServer.IdentityServerTools/<IssueJwtAsync>d__5")]
public virtual Task`1<string> IssueJwtAsync(int lifetime, IEnumerable`1<Claim> claims);
    public virtual Task`1<string> IssueJwtAsync(int lifetime, string issuer, IEnumerable`1<Claim> claims);
    [AsyncStateMachineAttribute("Duende.IdentityServer.IdentityServerTools/<IssueJwtAsync>d__7")]
public virtual Task`1<string> IssueJwtAsync(int lifetime, string issuer, string tokenType, IEnumerable`1<Claim> claims);
    [AsyncStateMachineAttribute("Duende.IdentityServer.IdentityServerTools/<IssueClientJwtAsync>d__8")]
public virtual Task`1<string> IssueClientJwtAsync(string clientId, int lifetime, IEnumerable`1<string> scopes, IEnumerable`1<string> audiences, IEnumerable`1<Claim> additionalClaims);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.IdentityServerUser : object {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <IdentityProvider>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Tenant>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <AuthenticationMethods>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <AuthenticationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<Claim> <AdditionalClaims>k__BackingField;
    public string SubjectId { get; }
    [NullableAttribute("2")]
public string DisplayName { get; public set; }
    [NullableAttribute("2")]
public string IdentityProvider { get; public set; }
    [NullableAttribute("2")]
public string Tenant { get; public set; }
    public ICollection`1<string> AuthenticationMethods { get; public set; }
    public Nullable`1<DateTime> AuthenticationTime { get; public set; }
    public ICollection`1<Claim> AdditionalClaims { get; public set; }
    public IdentityServerUser(string subjectId);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_DisplayName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_IdentityProvider();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_IdentityProvider(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Tenant();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Tenant(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_AuthenticationMethods();
    [CompilerGeneratedAttribute]
public void set_AuthenticationMethods(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_AuthenticationTime();
    [CompilerGeneratedAttribute]
public void set_AuthenticationTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public ICollection`1<Claim> get_AdditionalClaims();
    [CompilerGeneratedAttribute]
public void set_AdditionalClaims(ICollection`1<Claim> value);
    public ClaimsPrincipal CreatePrincipal();
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.IIdentityServerTools {
    public abstract virtual Task`1<string> IssueJwtAsync(int lifetime, IEnumerable`1<Claim> claims);
    public abstract virtual Task`1<string> IssueJwtAsync(int lifetime, string issuer, IEnumerable`1<Claim> claims);
    public abstract virtual Task`1<string> IssueJwtAsync(int lifetime, string issuer, string tokenType, IEnumerable`1<Claim> claims);
    public abstract virtual Task`1<string> IssueClientJwtAsync(string clientId, int lifetime, IEnumerable`1<string> scopes, IEnumerable`1<string> audiences, IEnumerable`1<Claim> additionalClaims);
}
[ExtensionAttribute]
internal static class Duende.IdentityServer.ILoggerDevExtensions : object {
    [ExtensionAttribute]
public static void LogTrace(ILogger logger, string message);
    [ExtensionAttribute]
public static void LogTrace(ILogger logger, string message, T0 arg0);
    [ExtensionAttribute]
public static void LogTrace(ILogger logger, string message, T0 arg0, T1 arg1);
    [ExtensionAttribute]
public static void LogTrace(ILogger logger, string message, T0 arg0, T1 arg1, T2 arg2);
    [ExtensionAttribute]
public static void LogTrace(ILogger logger, string message, T0 arg0, T1 arg1, T2 arg2, T3 arg3);
    [ExtensionAttribute]
public static void LogDebug(ILogger logger, string message);
    [ExtensionAttribute]
public static void LogDebug(ILogger logger, string message, T0 arg0);
    [ExtensionAttribute]
public static void LogDebug(ILogger logger, string message, T0 arg0, T1 arg1);
    [ExtensionAttribute]
public static void LogDebug(ILogger logger, string message, T0 arg0, T1 arg1, T2 arg2);
    [ExtensionAttribute]
public static void LogDebug(ILogger logger, string message, T0 arg0, T1 arg1, T2 arg2, T3 arg3);
}
public class Duende.IdentityServer.Infrastructure.DistributedCacheStateDataFormatter : object {
    private string _name;
    private IServiceProvider _provider;
    private string CacheKeyPrefix { get; }
    private IDistributedCache Cache { get; }
    private IDataProtector Protector { get; }
    public DistributedCacheStateDataFormatter(IServiceProvider provider, string name);
    private string get_CacheKeyPrefix();
    private IDistributedCache get_Cache();
    private IDataProtector get_Protector();
    public sealed virtual string Protect(AuthenticationProperties data);
    public sealed virtual string Protect(AuthenticationProperties data, string purpose);
    public sealed virtual AuthenticationProperties Unprotect(string protectedText);
    public sealed virtual AuthenticationProperties Unprotect(string protectedText, string purpose);
}
public class Duende.IdentityServer.Internal.DefaultConcurrencyLock`1 : object {
    private static SemaphoreSlim Lock;
    private static DefaultConcurrencyLock`1();
    public sealed virtual Task`1<bool> LockAsync(int millisecondsTimeout);
    public sealed virtual void Unlock();
}
public interface Duende.IdentityServer.Internal.IConcurrencyLock`1 {
    public abstract virtual Task`1<bool> LockAsync(int millisecondsTimeout);
    public abstract virtual void Unlock();
}
public class Duende.IdentityServer.Internal.NopConcurrencyLock`1 : object {
    public sealed virtual Task`1<bool> LockAsync(int millisecondsTimeout);
    public sealed virtual void Unlock();
}
internal class Duende.IdentityServer.LegacyClock : object {
    private ISystemClock _clock;
    public DateTimeOffset UtcNow { get; }
    public LegacyClock(ISystemClock clock);
    public sealed virtual DateTimeOffset get_UtcNow();
}
internal class Duende.IdentityServer.Logging.DeviceAuthorizationRequestValidationLog : object {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Raw>k__BackingField;
    private static String[] SensitiveValuesFilter;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string Scopes { get; public set; }
    public Dictionary`2<string, string> Raw { get; public set; }
    public DeviceAuthorizationRequestValidationLog(ValidatedDeviceAuthorizationRequest request);
    private static DeviceAuthorizationRequestValidationLog();
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Raw();
    [CompilerGeneratedAttribute]
public void set_Raw(Dictionary`2<string, string> value);
    public virtual string ToString();
}
internal static class Duende.IdentityServer.Logging.LogSerializer : object {
    private static JsonSerializerOptions Options;
    private static LogSerializer();
    public static string Serialize(object logObject);
}
internal class Duende.IdentityServer.Logging.Models.AuthorizeRequestValidationLog : object {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RedirectUri>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <AllowedRedirectUris>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResponseType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResponseMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GrantType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestedScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <State>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UiLocales>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Nonce>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <AuthenticationContextReferenceClasses>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PromptMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxAge>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LoginHint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionId>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Raw>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string RedirectUri { get; public set; }
    public IEnumerable`1<string> AllowedRedirectUris { get; public set; }
    public string SubjectId { get; public set; }
    public string ResponseType { get; public set; }
    public string ResponseMode { get; public set; }
    public string GrantType { get; public set; }
    public string RequestedScopes { get; public set; }
    public string State { get; public set; }
    public string UiLocales { get; public set; }
    public string Nonce { get; public set; }
    public IEnumerable`1<string> AuthenticationContextReferenceClasses { get; public set; }
    public string DisplayMode { get; public set; }
    public string PromptMode { get; public set; }
    public Nullable`1<int> MaxAge { get; public set; }
    public string LoginHint { get; public set; }
    public string SessionId { get; public set; }
    public Dictionary`2<string, string> Raw { get; public set; }
    public AuthorizeRequestValidationLog(ValidatedAuthorizeRequest request, IEnumerable`1<string> sensitiveValuesFilter);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_RedirectUri();
    [CompilerGeneratedAttribute]
public void set_RedirectUri(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_AllowedRedirectUris();
    [CompilerGeneratedAttribute]
public void set_AllowedRedirectUris(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_ResponseType();
    [CompilerGeneratedAttribute]
public void set_ResponseType(string value);
    [CompilerGeneratedAttribute]
public string get_ResponseMode();
    [CompilerGeneratedAttribute]
public void set_ResponseMode(string value);
    [CompilerGeneratedAttribute]
public string get_GrantType();
    [CompilerGeneratedAttribute]
public void set_GrantType(string value);
    [CompilerGeneratedAttribute]
public string get_RequestedScopes();
    [CompilerGeneratedAttribute]
public void set_RequestedScopes(string value);
    [CompilerGeneratedAttribute]
public string get_State();
    [CompilerGeneratedAttribute]
public void set_State(string value);
    [CompilerGeneratedAttribute]
public string get_UiLocales();
    [CompilerGeneratedAttribute]
public void set_UiLocales(string value);
    [CompilerGeneratedAttribute]
public string get_Nonce();
    [CompilerGeneratedAttribute]
public void set_Nonce(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_AuthenticationContextReferenceClasses();
    [CompilerGeneratedAttribute]
public void set_AuthenticationContextReferenceClasses(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_DisplayMode();
    [CompilerGeneratedAttribute]
public void set_DisplayMode(string value);
    [CompilerGeneratedAttribute]
public string get_PromptMode();
    [CompilerGeneratedAttribute]
public void set_PromptMode(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxAge();
    [CompilerGeneratedAttribute]
public void set_MaxAge(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_LoginHint();
    [CompilerGeneratedAttribute]
public void set_LoginHint(string value);
    [CompilerGeneratedAttribute]
public string get_SessionId();
    [CompilerGeneratedAttribute]
public void set_SessionId(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Raw();
    [CompilerGeneratedAttribute]
public void set_Raw(Dictionary`2<string, string> value);
    public virtual string ToString();
}
internal class Duende.IdentityServer.Logging.Models.AuthorizeResponseLog : object {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RedirectUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <State>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    public string SubjectId { get; public set; }
    public string ClientId { get; public set; }
    public string RedirectUri { get; public set; }
    public string State { get; public set; }
    public string Scope { get; public set; }
    public string Error { get; public set; }
    public string ErrorDescription { get; public set; }
    public AuthorizeResponseLog(AuthorizeResponse response);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_RedirectUri();
    [CompilerGeneratedAttribute]
public void set_RedirectUri(string value);
    [CompilerGeneratedAttribute]
public string get_State();
    [CompilerGeneratedAttribute]
public void set_State(string value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
    public virtual string ToString();
}
internal class Duende.IdentityServer.Logging.Models.BackchannelAuthenticationRequestValidationLog : object {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <AuthenticationContextReferenceClasses>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tenant>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdP>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Raw>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string Scopes { get; public set; }
    public IEnumerable`1<string> AuthenticationContextReferenceClasses { get; public set; }
    public string Tenant { get; public set; }
    public string IdP { get; public set; }
    public Dictionary`2<string, string> Raw { get; public set; }
    public BackchannelAuthenticationRequestValidationLog(ValidatedBackchannelAuthenticationRequest request, IEnumerable`1<string> sensitiveValuesFilter);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_AuthenticationContextReferenceClasses();
    [CompilerGeneratedAttribute]
public void set_AuthenticationContextReferenceClasses(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Tenant();
    [CompilerGeneratedAttribute]
public void set_Tenant(string value);
    [CompilerGeneratedAttribute]
public string get_IdP();
    [CompilerGeneratedAttribute]
public void set_IdP(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Raw();
    [CompilerGeneratedAttribute]
public void set_Raw(Dictionary`2<string, string> value);
    public virtual string ToString();
}
internal class Duende.IdentityServer.Logging.Models.EndSessionRequestValidationLog : object {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PostLogOutUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <State>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Raw>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string SubjectId { get; public set; }
    public string PostLogOutUri { get; public set; }
    public string State { get; public set; }
    public Dictionary`2<string, string> Raw { get; public set; }
    public EndSessionRequestValidationLog(ValidatedEndSessionRequest request);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_PostLogOutUri();
    [CompilerGeneratedAttribute]
public void set_PostLogOutUri(string value);
    [CompilerGeneratedAttribute]
public string get_State();
    [CompilerGeneratedAttribute]
public void set_State(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Raw();
    [CompilerGeneratedAttribute]
public void set_Raw(Dictionary`2<string, string> value);
    public virtual string ToString();
}
internal class Duende.IdentityServer.Logging.Models.TokenRequestValidationLog : object {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GrantType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthorizationCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RefreshToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserName>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <AuthenticationContextReferenceClasses>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tenant>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdP>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Raw>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string GrantType { get; public set; }
    public string Scopes { get; public set; }
    public string AuthorizationCode { get; public set; }
    public string RefreshToken { get; public set; }
    public string UserName { get; public set; }
    public IEnumerable`1<string> AuthenticationContextReferenceClasses { get; public set; }
    public string Tenant { get; public set; }
    public string IdP { get; public set; }
    public Dictionary`2<string, string> Raw { get; public set; }
    public TokenRequestValidationLog(ValidatedTokenRequest request, IEnumerable`1<string> sensitiveValuesFilter);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_GrantType();
    [CompilerGeneratedAttribute]
public void set_GrantType(string value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
    [CompilerGeneratedAttribute]
public string get_AuthorizationCode();
    [CompilerGeneratedAttribute]
public void set_AuthorizationCode(string value);
    [CompilerGeneratedAttribute]
public string get_RefreshToken();
    [CompilerGeneratedAttribute]
public void set_RefreshToken(string value);
    [CompilerGeneratedAttribute]
public string get_UserName();
    [CompilerGeneratedAttribute]
public void set_UserName(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_AuthenticationContextReferenceClasses();
    [CompilerGeneratedAttribute]
public void set_AuthenticationContextReferenceClasses(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Tenant();
    [CompilerGeneratedAttribute]
public void set_Tenant(string value);
    [CompilerGeneratedAttribute]
public string get_IdP();
    [CompilerGeneratedAttribute]
public void set_IdP(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Raw();
    [CompilerGeneratedAttribute]
public void set_Raw(Dictionary`2<string, string> value);
    public virtual string ToString();
}
internal class Duende.IdentityServer.Logging.Models.TokenValidationLog : object {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ValidateLifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessTokenType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExpectedScope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenHandle>k__BackingField;
    [CompilerGeneratedAttribute]
private string <JwtId>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Claims>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public bool ValidateLifetime { get; public set; }
    public string AccessTokenType { get; public set; }
    public string ExpectedScope { get; public set; }
    public string TokenHandle { get; public set; }
    public string JwtId { get; public set; }
    public Dictionary`2<string, object> Claims { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public bool get_ValidateLifetime();
    [CompilerGeneratedAttribute]
public void set_ValidateLifetime(bool value);
    [CompilerGeneratedAttribute]
public string get_AccessTokenType();
    [CompilerGeneratedAttribute]
public void set_AccessTokenType(string value);
    [CompilerGeneratedAttribute]
public string get_ExpectedScope();
    [CompilerGeneratedAttribute]
public void set_ExpectedScope(string value);
    [CompilerGeneratedAttribute]
public string get_TokenHandle();
    [CompilerGeneratedAttribute]
public void set_TokenHandle(string value);
    [CompilerGeneratedAttribute]
public string get_JwtId();
    [CompilerGeneratedAttribute]
public void set_JwtId(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Claims();
    [CompilerGeneratedAttribute]
public void set_Claims(Dictionary`2<string, object> value);
    public virtual string ToString();
}
internal class Duende.IdentityServer.MessageCookie`1 : object {
    private ILogger _logger;
    private IdentityServerOptions _options;
    private IHttpContextAccessor _context;
    private IServerUrls _urls;
    private IDataProtector _protector;
    private string MessageType { get; }
    private string CookiePrefix { get; }
    private string CookiePath { get; }
    private bool Secure { get; }
    public MessageCookie`1(ILogger`1<MessageCookie`1<TModel>> logger, IdentityServerOptions options, IHttpContextAccessor context, IServerUrls urls, IDataProtectionProvider provider);
    private string get_MessageType();
    private string Protect(Message`1<TModel> message);
    private Message`1<TModel> Unprotect(string data);
    private string get_CookiePrefix();
    private string GetCookieFullName(string id);
    private string get_CookiePath();
    [IteratorStateMachineAttribute("Duende.IdentityServer.MessageCookie`1/<GetCookieNames>d__15")]
private IEnumerable`1<string> GetCookieNames();
    private bool get_Secure();
    public void Write(string id, Message`1<TModel> message);
    public Message`1<TModel> Read(string id);
    private Message`1<TModel> ReadByCookieName(string name);
    protected internal void Clear(string id);
    private void ClearByCookieName(string name);
    private long GetCookieRank(string name);
    private void ClearOverflow();
    [CompilerGeneratedAttribute]
private <>f__AnonymousType2`2<string, long> <ClearOverflow>b__24_0(string name);
}
public enum Duende.IdentityServer.Models.AuthorizationError : Enum {
    public int value__;
    public static AuthorizationError AccessDenied;
    public static AuthorizationError InteractionRequired;
    public static AuthorizationError LoginRequired;
    public static AuthorizationError AccountSelectionRequired;
    public static AuthorizationError ConsentRequired;
    public static AuthorizationError TemporarilyUnavailable;
    public static AuthorizationError UnmetAuthenticationRequirements;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Models.AuthorizationRequest : object {
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <DisplayMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RedirectUri>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <UiLocales>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <IdP>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Tenant>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <LoginHint>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <PromptModes>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <AcrValues>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceValidationResult <ValidatedResources>k__BackingField;
    [CompilerGeneratedAttribute]
private NameValueCollection <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Claim> <RequestObjectValues>k__BackingField;
    public Client Client { get; public set; }
    [NullableAttribute("2")]
public string DisplayMode { get; public set; }
    public string RedirectUri { get; public set; }
    [NullableAttribute("2")]
public string UiLocales { get; public set; }
    [NullableAttribute("2")]
public string IdP { get; public set; }
    [NullableAttribute("2")]
public string Tenant { get; public set; }
    [NullableAttribute("2")]
public string LoginHint { get; public set; }
    public IEnumerable`1<string> PromptModes { get; public set; }
    public IEnumerable`1<string> AcrValues { get; public set; }
    public ResourceValidationResult ValidatedResources { get; public set; }
    public NameValueCollection Parameters { get; }
    public IEnumerable`1<Claim> RequestObjectValues { get; }
    public AuthorizationRequest(ValidatedAuthorizeRequest request);
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_DisplayMode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_DisplayMode(string value);
    [CompilerGeneratedAttribute]
public string get_RedirectUri();
    [CompilerGeneratedAttribute]
public void set_RedirectUri(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_UiLocales();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_UiLocales(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_IdP();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_IdP(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Tenant();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Tenant(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_LoginHint();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_LoginHint(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_PromptModes();
    [CompilerGeneratedAttribute]
public void set_PromptModes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_AcrValues();
    [CompilerGeneratedAttribute]
public void set_AcrValues(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public ResourceValidationResult get_ValidatedResources();
    [CompilerGeneratedAttribute]
public void set_ValidatedResources(ResourceValidationResult value);
    [CompilerGeneratedAttribute]
public NameValueCollection get_Parameters();
    [CompilerGeneratedAttribute]
public IEnumerable`1<Claim> get_RequestObjectValues();
}
[ExtensionAttribute]
internal static class Duende.IdentityServer.Models.AuthorizeResponseExtensions : object {
    [ExtensionAttribute]
public static NameValueCollection ToNameValueCollection(AuthorizeResponse response, IdentityServerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Models.BackchannelUserLoginRequest : object {
    [CompilerGeneratedAttribute]
private string <InternalId>k__BackingField;
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Subject>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <BindingMessage>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <AuthenticationContextReferenceClasses>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Tenant>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <IdP>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <RequestedResourceIndicators>k__BackingField;
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceValidationResult <ValidatedResources>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Properties>k__BackingField;
    public string InternalId { get; public set; }
    public ClaimsPrincipal Subject { get; public set; }
    [NullableAttribute("2")]
public string BindingMessage { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> AuthenticationContextReferenceClasses { get; public set; }
    [NullableAttribute("2")]
public string Tenant { get; public set; }
    [NullableAttribute("2")]
public string IdP { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> RequestedResourceIndicators { get; public set; }
    public Client Client { get; public set; }
    public ResourceValidationResult ValidatedResources { get; public set; }
    public Dictionary`2<string, object> Properties { get; public set; }
    [CompilerGeneratedAttribute]
public string get_InternalId();
    [CompilerGeneratedAttribute]
public void set_InternalId(string value);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(ClaimsPrincipal value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_BindingMessage();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_BindingMessage(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_AuthenticationContextReferenceClasses();
    [CompilerGeneratedAttribute]
public void set_AuthenticationContextReferenceClasses(IEnumerable`1<string> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Tenant();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Tenant(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_IdP();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_IdP(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_RequestedResourceIndicators();
    [CompilerGeneratedAttribute]
public void set_RequestedResourceIndicators(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
    [CompilerGeneratedAttribute]
public ResourceValidationResult get_ValidatedResources();
    [CompilerGeneratedAttribute]
public void set_ValidatedResources(ResourceValidationResult value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(Dictionary`2<string, object> value);
}
[ExtensionAttribute]
public static class Duende.IdentityServer.Models.ClientExtensions : object {
    [ExtensionAttribute]
public static bool IsImplicitOnly(Client client);
    [ExtensionAttribute]
public static Task`1<List`1<SecurityKey>> GetKeysAsync(IEnumerable`1<Secret> secrets);
    private static List`1<X509Certificate2> GetCertificates(IEnumerable`1<Secret> secrets);
}
public class Duende.IdentityServer.Models.ConsentRequest : object {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Nonce>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ScopesRequested>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Subject>k__BackingField;
    public string ClientId { get; public set; }
    public string Nonce { get; public set; }
    public IEnumerable`1<string> ScopesRequested { get; public set; }
    public string Subject { get; public set; }
    public string Id { get; }
    public ConsentRequest(AuthorizationRequest request, string subject);
    public ConsentRequest(NameValueCollection parameters, string subject);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_Nonce();
    [CompilerGeneratedAttribute]
public void set_Nonce(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ScopesRequested();
    [CompilerGeneratedAttribute]
public void set_ScopesRequested(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(string value);
    public string get_Id();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Models.ConsentResponse : object {
    [CompilerGeneratedAttribute]
private Nullable`1<AuthorizationError> <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <ScopesValuesConsented>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RememberConsent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    public Nullable`1<AuthorizationError> Error { get; public set; }
    public string ErrorDescription { get; public set; }
    public bool Granted { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> ScopesValuesConsented { get; public set; }
    public bool RememberConsent { get; public set; }
    public string Description { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<AuthorizationError> get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(Nullable`1<AuthorizationError> value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
    public bool get_Granted();
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ScopesValuesConsented();
    [CompilerGeneratedAttribute]
public void set_ScopesValuesConsented(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_RememberConsent();
    [CompilerGeneratedAttribute]
public void set_RememberConsent(bool value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Models.DeviceFlowAuthorizationRequest : object {
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceValidationResult <ValidatedResources>k__BackingField;
    public Client Client { get; public set; }
    public ResourceValidationResult ValidatedResources { get; public set; }
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
    [CompilerGeneratedAttribute]
public ResourceValidationResult get_ValidatedResources();
    [CompilerGeneratedAttribute]
public void set_ValidatedResources(ResourceValidationResult value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Models.DeviceFlowInteractionResult : object {
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsError>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAccessDenied>k__BackingField;
    public string ErrorDescription { get; private set; }
    public bool IsError { get; private set; }
    public bool IsAccessDenied { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
private void set_ErrorDescription(string value);
    [CompilerGeneratedAttribute]
public bool get_IsError();
    [CompilerGeneratedAttribute]
private void set_IsError(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsAccessDenied();
    [CompilerGeneratedAttribute]
public void set_IsAccessDenied(bool value);
    [NullableContextAttribute("1")]
public static DeviceFlowInteractionResult Failure(string errorDescription);
}
public class Duende.IdentityServer.Models.DiscoveryDocument : object {
    [CompilerGeneratedAttribute]
private string <issuer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <jwks_uri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <authorization_endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <token_endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <userinfo_endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <end_session_endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <check_session_iframe>k__BackingField;
    [CompilerGeneratedAttribute]
private string <revocation_endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <introspection_endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <frontchannel_logout_supported>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <frontchannel_logout_session_supported>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <scopes_supported>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <claims_supported>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <response_types_supported>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <response_modes_supported>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <grant_types_supported>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <subject_types_supported>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <id_token_signing_alg_values_supported>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <token_endpoint_auth_methods_supported>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <code_challenge_methods_supported>k__BackingField;
    public string issuer { get; public set; }
    public string jwks_uri { get; public set; }
    public string authorization_endpoint { get; public set; }
    public string token_endpoint { get; public set; }
    public string userinfo_endpoint { get; public set; }
    public string end_session_endpoint { get; public set; }
    public string check_session_iframe { get; public set; }
    public string revocation_endpoint { get; public set; }
    public string introspection_endpoint { get; public set; }
    public Nullable`1<bool> frontchannel_logout_supported { get; public set; }
    public Nullable`1<bool> frontchannel_logout_session_supported { get; public set; }
    public String[] scopes_supported { get; public set; }
    public String[] claims_supported { get; public set; }
    public String[] response_types_supported { get; public set; }
    public String[] response_modes_supported { get; public set; }
    public String[] grant_types_supported { get; public set; }
    public String[] subject_types_supported { get; public set; }
    public String[] id_token_signing_alg_values_supported { get; public set; }
    public String[] token_endpoint_auth_methods_supported { get; public set; }
    public String[] code_challenge_methods_supported { get; public set; }
    [CompilerGeneratedAttribute]
public string get_issuer();
    [CompilerGeneratedAttribute]
public void set_issuer(string value);
    [CompilerGeneratedAttribute]
public string get_jwks_uri();
    [CompilerGeneratedAttribute]
public void set_jwks_uri(string value);
    [CompilerGeneratedAttribute]
public string get_authorization_endpoint();
    [CompilerGeneratedAttribute]
public void set_authorization_endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_token_endpoint();
    [CompilerGeneratedAttribute]
public void set_token_endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_userinfo_endpoint();
    [CompilerGeneratedAttribute]
public void set_userinfo_endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_end_session_endpoint();
    [CompilerGeneratedAttribute]
public void set_end_session_endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_check_session_iframe();
    [CompilerGeneratedAttribute]
public void set_check_session_iframe(string value);
    [CompilerGeneratedAttribute]
public string get_revocation_endpoint();
    [CompilerGeneratedAttribute]
public void set_revocation_endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_introspection_endpoint();
    [CompilerGeneratedAttribute]
public void set_introspection_endpoint(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_frontchannel_logout_supported();
    [CompilerGeneratedAttribute]
public void set_frontchannel_logout_supported(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_frontchannel_logout_session_supported();
    [CompilerGeneratedAttribute]
public void set_frontchannel_logout_session_supported(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public String[] get_scopes_supported();
    [CompilerGeneratedAttribute]
public void set_scopes_supported(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_claims_supported();
    [CompilerGeneratedAttribute]
public void set_claims_supported(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_response_types_supported();
    [CompilerGeneratedAttribute]
public void set_response_types_supported(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_response_modes_supported();
    [CompilerGeneratedAttribute]
public void set_response_modes_supported(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_grant_types_supported();
    [CompilerGeneratedAttribute]
public void set_grant_types_supported(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_subject_types_supported();
    [CompilerGeneratedAttribute]
public void set_subject_types_supported(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_id_token_signing_alg_values_supported();
    [CompilerGeneratedAttribute]
public void set_id_token_signing_alg_values_supported(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_token_endpoint_auth_methods_supported();
    [CompilerGeneratedAttribute]
public void set_token_endpoint_auth_methods_supported(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_code_challenge_methods_supported();
    [CompilerGeneratedAttribute]
public void set_code_challenge_methods_supported(String[] value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Models.ErrorMessage : object {
    [CompilerGeneratedAttribute]
private string <DisplayMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UiLocales>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActivityId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RedirectUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResponseMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    public string DisplayMode { get; public set; }
    public string UiLocales { get; public set; }
    [NullableAttribute("1")]
public string Error { get; public set; }
    public string ErrorDescription { get; public set; }
    public string RequestId { get; public set; }
    public string ActivityId { get; public set; }
    public string RedirectUri { get; public set; }
    public string ResponseMode { get; public set; }
    public string ClientId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DisplayMode();
    [CompilerGeneratedAttribute]
public void set_DisplayMode(string value);
    [CompilerGeneratedAttribute]
public string get_UiLocales();
    [CompilerGeneratedAttribute]
public void set_UiLocales(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Error();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
    [CompilerGeneratedAttribute]
public string get_RequestId();
    [CompilerGeneratedAttribute]
public void set_RequestId(string value);
    [CompilerGeneratedAttribute]
public string get_ActivityId();
    [CompilerGeneratedAttribute]
public void set_ActivityId(string value);
    [CompilerGeneratedAttribute]
public string get_RedirectUri();
    [CompilerGeneratedAttribute]
public void set_RedirectUri(string value);
    [CompilerGeneratedAttribute]
public string get_ResponseMode();
    [CompilerGeneratedAttribute]
public void set_ResponseMode(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Models.Grant : object {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <Expiration>k__BackingField;
    public string SubjectId { get; public set; }
    public string ClientId { get; public set; }
    [NullableAttribute("2")]
public string Description { get; public set; }
    public IEnumerable`1<string> Scopes { get; public set; }
    public DateTime CreationTime { get; public set; }
    public Nullable`1<DateTime> Expiration { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Description();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public DateTime get_CreationTime();
    [CompilerGeneratedAttribute]
public void set_CreationTime(DateTime value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_Expiration();
    [CompilerGeneratedAttribute]
public void set_Expiration(Nullable`1<DateTime> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Models.GrantTypes : object {
    public static ICollection`1<string> Implicit { get; }
    public static ICollection`1<string> ImplicitAndClientCredentials { get; }
    public static ICollection`1<string> Code { get; }
    public static ICollection`1<string> CodeAndClientCredentials { get; }
    public static ICollection`1<string> Hybrid { get; }
    public static ICollection`1<string> HybridAndClientCredentials { get; }
    public static ICollection`1<string> ClientCredentials { get; }
    public static ICollection`1<string> ResourceOwnerPassword { get; }
    public static ICollection`1<string> ResourceOwnerPasswordAndClientCredentials { get; }
    public static ICollection`1<string> DeviceFlow { get; }
    public static ICollection`1<string> Ciba { get; }
    public static ICollection`1<string> get_Implicit();
    public static ICollection`1<string> get_ImplicitAndClientCredentials();
    public static ICollection`1<string> get_Code();
    public static ICollection`1<string> get_CodeAndClientCredentials();
    public static ICollection`1<string> get_Hybrid();
    public static ICollection`1<string> get_HybridAndClientCredentials();
    public static ICollection`1<string> get_ClientCredentials();
    public static ICollection`1<string> get_ResourceOwnerPassword();
    public static ICollection`1<string> get_ResourceOwnerPasswordAndClientCredentials();
    public static ICollection`1<string> get_DeviceFlow();
    public static ICollection`1<string> get_Ciba();
}
[ExtensionAttribute]
public static class Duende.IdentityServer.Models.HashExtensions : object {
    [ExtensionAttribute]
public static string Sha256(string input);
    [ExtensionAttribute]
public static Byte[] Sha256(Byte[] input);
    [ExtensionAttribute]
public static string Sha512(string input);
}
public static class Duende.IdentityServer.Models.IdentityResources : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Models.IsActiveContext : object {
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Caller>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsActive>k__BackingField;
    public ClaimsPrincipal Subject { get; public set; }
    public Client Client { get; public set; }
    public string Caller { get; public set; }
    public bool IsActive { get; public set; }
    public IsActiveContext(ClaimsPrincipal subject, Client client, string caller);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(ClaimsPrincipal value);
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
    [CompilerGeneratedAttribute]
public string get_Caller();
    [CompilerGeneratedAttribute]
public void set_Caller(string value);
    [CompilerGeneratedAttribute]
public bool get_IsActive();
    [CompilerGeneratedAttribute]
public void set_IsActive(bool value);
}
public class Duende.IdentityServer.Models.JsonWebKey : object {
    [CompilerGeneratedAttribute]
private string <kty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <use>k__BackingField;
    [CompilerGeneratedAttribute]
private string <kid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <x5t>k__BackingField;
    [CompilerGeneratedAttribute]
private string <e>k__BackingField;
    [CompilerGeneratedAttribute]
private string <n>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <x5c>k__BackingField;
    [CompilerGeneratedAttribute]
private string <alg>k__BackingField;
    [CompilerGeneratedAttribute]
private string <x>k__BackingField;
    [CompilerGeneratedAttribute]
private string <y>k__BackingField;
    [CompilerGeneratedAttribute]
private string <crv>k__BackingField;
    public string kty { get; public set; }
    public string use { get; public set; }
    public string kid { get; public set; }
    public string x5t { get; public set; }
    public string e { get; public set; }
    public string n { get; public set; }
    public String[] x5c { get; public set; }
    public string alg { get; public set; }
    public string x { get; public set; }
    public string y { get; public set; }
    public string crv { get; public set; }
    [CompilerGeneratedAttribute]
public string get_kty();
    [CompilerGeneratedAttribute]
public void set_kty(string value);
    [CompilerGeneratedAttribute]
public string get_use();
    [CompilerGeneratedAttribute]
public void set_use(string value);
    [CompilerGeneratedAttribute]
public string get_kid();
    [CompilerGeneratedAttribute]
public void set_kid(string value);
    [CompilerGeneratedAttribute]
public string get_x5t();
    [CompilerGeneratedAttribute]
public void set_x5t(string value);
    [CompilerGeneratedAttribute]
public string get_e();
    [CompilerGeneratedAttribute]
public void set_e(string value);
    [CompilerGeneratedAttribute]
public string get_n();
    [CompilerGeneratedAttribute]
public void set_n(string value);
    [CompilerGeneratedAttribute]
public String[] get_x5c();
    [CompilerGeneratedAttribute]
public void set_x5c(String[] value);
    [CompilerGeneratedAttribute]
public string get_alg();
    [CompilerGeneratedAttribute]
public void set_alg(string value);
    [CompilerGeneratedAttribute]
public string get_x();
    [CompilerGeneratedAttribute]
public void set_x(string value);
    [CompilerGeneratedAttribute]
public string get_y();
    [CompilerGeneratedAttribute]
public void set_y(string value);
    [CompilerGeneratedAttribute]
public string get_crv();
    [CompilerGeneratedAttribute]
public void set_crv(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Models.LogoutMessage : object {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PostLogoutRedirectUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionId>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <ClientIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UiLocales>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, String[]> <Parameters>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string PostLogoutRedirectUri { get; public set; }
    public string SubjectId { get; public set; }
    public string SessionId { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> ClientIds { get; public set; }
    public string UiLocales { get; public set; }
    [NullableAttribute("1")]
public IDictionary`2<string, String[]> Parameters { get; public set; }
    internal bool ContainsPayload { get; }
    [NullableContextAttribute("1")]
public LogoutMessage(ValidatedEndSessionRequest request);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_PostLogoutRedirectUri();
    [CompilerGeneratedAttribute]
public void set_PostLogoutRedirectUri(string value);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_SessionId();
    [CompilerGeneratedAttribute]
public void set_SessionId(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ClientIds();
    [CompilerGeneratedAttribute]
public void set_ClientIds(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_UiLocales();
    [CompilerGeneratedAttribute]
public void set_UiLocales(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IDictionary`2<string, String[]> get_Parameters();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Parameters(IDictionary`2<string, String[]> value);
    internal bool get_ContainsPayload();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Models.LogoutNotificationContext : object {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionId>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Issuer>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ClientIds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<LogoutNotificationReason> <LogoutReason>k__BackingField;
    public string SubjectId { get; public set; }
    public string SessionId { get; public set; }
    [NullableAttribute("2")]
public string Issuer { get; public set; }
    public IEnumerable`1<string> ClientIds { get; public set; }
    public Nullable`1<LogoutNotificationReason> LogoutReason { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_SessionId();
    [CompilerGeneratedAttribute]
public void set_SessionId(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Issuer();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Issuer(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ClientIds();
    [CompilerGeneratedAttribute]
public void set_ClientIds(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<LogoutNotificationReason> get_LogoutReason();
    [CompilerGeneratedAttribute]
public void set_LogoutReason(Nullable`1<LogoutNotificationReason> value);
}
public enum Duende.IdentityServer.Models.LogoutNotificationReason : Enum {
    public int value__;
    public static LogoutNotificationReason UserLogout;
    public static LogoutNotificationReason SessionExpiration;
    public static LogoutNotificationReason Terminated;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Models.LogoutRequest : object {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PostLogoutRedirectUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionId>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <ClientIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UiLocales>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private NameValueCollection <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SignOutIFrameUrl>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string PostLogoutRedirectUri { get; public set; }
    public string SubjectId { get; public set; }
    public string SessionId { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> ClientIds { get; public set; }
    public string UiLocales { get; public set; }
    [NullableAttribute("1")]
public NameValueCollection Parameters { get; }
    public string SignOutIFrameUrl { get; public set; }
    public bool ShowSignoutPrompt { get; }
    [NullableContextAttribute("1")]
public LogoutRequest(string iframeUrl, LogoutMessage message);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_PostLogoutRedirectUri();
    [CompilerGeneratedAttribute]
public void set_PostLogoutRedirectUri(string value);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_SessionId();
    [CompilerGeneratedAttribute]
public void set_SessionId(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ClientIds();
    [CompilerGeneratedAttribute]
public void set_ClientIds(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_UiLocales();
    [CompilerGeneratedAttribute]
public void set_UiLocales(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public NameValueCollection get_Parameters();
    [CompilerGeneratedAttribute]
public string get_SignOutIFrameUrl();
    [CompilerGeneratedAttribute]
public void set_SignOutIFrameUrl(string value);
    public bool get_ShowSignoutPrompt();
}
public class Duende.IdentityServer.Models.Message`1 : object {
    [CompilerGeneratedAttribute]
private long <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private TModel <Data>k__BackingField;
    public long Created { get; public set; }
    public TModel Data { get; public set; }
    internal Message`1(TModel data);
    public Message`1(TModel data, DateTime now);
    [CompilerGeneratedAttribute]
public long get_Created();
    [CompilerGeneratedAttribute]
public void set_Created(long value);
    [CompilerGeneratedAttribute]
public TModel get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(TModel value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Models.ParsedSecret : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private object <Credential>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Properties>k__BackingField;
    public string Id { get; public set; }
    [NullableAttribute("2")]
public object Credential { get; public set; }
    public string Type { get; public set; }
    public Dictionary`2<string, string> Properties { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_Credential();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Credential(object value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(Dictionary`2<string, string> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Models.ProfileDataRequestContext : object {
    [CompilerGeneratedAttribute]
private ValidatedRequest <ValidatedRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <RequestedClaimTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Caller>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceValidationResult <RequestedResources>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Claim> <IssuedClaims>k__BackingField;
    public ValidatedRequest ValidatedRequest { get; public set; }
    public ClaimsPrincipal Subject { get; public set; }
    public IEnumerable`1<string> RequestedClaimTypes { get; public set; }
    public Client Client { get; public set; }
    public string Caller { get; public set; }
    public ResourceValidationResult RequestedResources { get; public set; }
    public List`1<Claim> IssuedClaims { get; public set; }
    public ProfileDataRequestContext(ClaimsPrincipal subject, Client client, string caller, IEnumerable`1<string> requestedClaimTypes);
    [CompilerGeneratedAttribute]
public ValidatedRequest get_ValidatedRequest();
    [CompilerGeneratedAttribute]
public void set_ValidatedRequest(ValidatedRequest value);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(ClaimsPrincipal value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_RequestedClaimTypes();
    [CompilerGeneratedAttribute]
public void set_RequestedClaimTypes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
    [CompilerGeneratedAttribute]
public string get_Caller();
    [CompilerGeneratedAttribute]
public void set_Caller(string value);
    [CompilerGeneratedAttribute]
public ResourceValidationResult get_RequestedResources();
    [CompilerGeneratedAttribute]
public void set_RequestedResources(ResourceValidationResult value);
    [CompilerGeneratedAttribute]
public List`1<Claim> get_IssuedClaims();
    [CompilerGeneratedAttribute]
public void set_IssuedClaims(List`1<Claim> value);
}
[ExtensionAttribute]
public static class Duende.IdentityServer.Models.ProfileDataRequestContextExtensions : object {
    [ExtensionAttribute]
public static List`1<Claim> FilterClaims(ProfileDataRequestContext context, IEnumerable`1<Claim> claims);
    [ExtensionAttribute]
public static void AddRequestedClaims(ProfileDataRequestContext context, IEnumerable`1<Claim> claims);
    [ExtensionAttribute]
public static void LogProfileRequest(ProfileDataRequestContext context, ILogger logger);
    [ExtensionAttribute]
public static void LogIssuedClaims(ProfileDataRequestContext context, ILogger logger);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Models.RefreshTokenCreationRequest : object {
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Subject>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <AuthorizedScopes>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <AuthorizedResourceIndicators>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <RequestedResourceIndicator>k__BackingField;
    [CompilerGeneratedAttribute]
private Token <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private ProofType <ProofType>k__BackingField;
    public Client Client { get; public set; }
    public ClaimsPrincipal Subject { get; public set; }
    [NullableAttribute("2")]
public string Description { get; public set; }
    public IEnumerable`1<string> AuthorizedScopes { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> AuthorizedResourceIndicators { get; public set; }
    [NullableAttribute("2")]
public string RequestedResourceIndicator { get; public set; }
    public Token AccessToken { get; public set; }
    public ProofType ProofType { get; public set; }
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(ClaimsPrincipal value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Description();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_AuthorizedScopes();
    [CompilerGeneratedAttribute]
public void set_AuthorizedScopes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_AuthorizedResourceIndicators();
    [CompilerGeneratedAttribute]
public void set_AuthorizedResourceIndicators(IEnumerable`1<string> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_RequestedResourceIndicator();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_RequestedResourceIndicator(string value);
    [CompilerGeneratedAttribute]
public Token get_AccessToken();
    [CompilerGeneratedAttribute]
public void set_AccessToken(Token value);
    [CompilerGeneratedAttribute]
public ProofType get_ProofType();
    [CompilerGeneratedAttribute]
public void set_ProofType(ProofType value);
    public void Validate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Models.RefreshTokenUpdateRequest : object {
    [CompilerGeneratedAttribute]
private string <Handle>k__BackingField;
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private RefreshToken <RefreshToken>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MustUpdate>k__BackingField;
    public string Handle { get; public set; }
    public Client Client { get; public set; }
    public RefreshToken RefreshToken { get; public set; }
    public bool MustUpdate { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Handle();
    [CompilerGeneratedAttribute]
public void set_Handle(string value);
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
    [CompilerGeneratedAttribute]
public RefreshToken get_RefreshToken();
    [CompilerGeneratedAttribute]
public void set_RefreshToken(RefreshToken value);
    [CompilerGeneratedAttribute]
public bool get_MustUpdate();
    [CompilerGeneratedAttribute]
public void set_MustUpdate(bool value);
}
[ExtensionAttribute]
public static class Duende.IdentityServer.Models.ResourceExtensions : object {
    [ExtensionAttribute]
public static IEnumerable`1<string> GetRequiredScopeValues(ResourceValidationResult resourceValidationResult);
    [ExtensionAttribute]
public static IEnumerable`1<string> ToScopeNames(Resources resources);
    [ExtensionAttribute]
public static IdentityResource FindIdentityResourcesByScope(Resources resources, string name);
    [ExtensionAttribute]
public static IEnumerable`1<ApiResource> FindApiResourcesByScope(Resources resources, string name);
    [ExtensionAttribute]
public static ApiScope FindApiScope(Resources resources, string name);
    [ExtensionAttribute]
internal static Resources FilterEnabled(Resources resources);
    [ExtensionAttribute]
internal static ICollection`1<string> FindMatchingSigningAlgorithms(IEnumerable`1<ApiResource> apiResources);
    private static IEnumerable`1<T> IntersectLists(IEnumerable`1<IEnumerable`1<T>> lists);
    [ExtensionAttribute]
internal static bool AreValidResourceIndicatorFormat(IEnumerable`1<string> list, ILogger logger);
}
[ExtensionAttribute]
internal static class Duende.IdentityServer.Models.ScopeExtensions : object {
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string ToSpaceSeparatedString(IEnumerable`1<ApiScope> apiScopes);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static IEnumerable`1<string> ToStringList(IEnumerable`1<ApiScope> apiScopes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Models.SecurityKeyInfo : object {
    [CompilerGeneratedAttribute]
private SecurityKey <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SigningAlgorithm>k__BackingField;
    public SecurityKey Key { get; public set; }
    public string SigningAlgorithm { get; public set; }
    [CompilerGeneratedAttribute]
public SecurityKey get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(SecurityKey value);
    [CompilerGeneratedAttribute]
public string get_SigningAlgorithm();
    [CompilerGeneratedAttribute]
public void set_SigningAlgorithm(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Models.TokenCreationRequest : object {
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Subject>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ResourceValidationResult <ValidatedResources>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ValidatedRequest <ValidatedRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeAllIdentityClaims>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessTokenToHash>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthorizationCodeToHash>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StateHash>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Nonce>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    public ClaimsPrincipal Subject { get; public set; }
    [NullableAttribute("1")]
public ResourceValidationResult ValidatedResources { get; public set; }
    [NullableAttribute("1")]
public ValidatedRequest ValidatedRequest { get; public set; }
    public bool IncludeAllIdentityClaims { get; public set; }
    public string AccessTokenToHash { get; public set; }
    public string AuthorizationCodeToHash { get; public set; }
    public string StateHash { get; public set; }
    public string Nonce { get; public set; }
    public string Description { get; public set; }
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(ClaimsPrincipal value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ResourceValidationResult get_ValidatedResources();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_ValidatedResources(ResourceValidationResult value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ValidatedRequest get_ValidatedRequest();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_ValidatedRequest(ValidatedRequest value);
    [CompilerGeneratedAttribute]
public bool get_IncludeAllIdentityClaims();
    [CompilerGeneratedAttribute]
public void set_IncludeAllIdentityClaims(bool value);
    [CompilerGeneratedAttribute]
public string get_AccessTokenToHash();
    [CompilerGeneratedAttribute]
public void set_AccessTokenToHash(string value);
    [CompilerGeneratedAttribute]
public string get_AuthorizationCodeToHash();
    [CompilerGeneratedAttribute]
public void set_AuthorizationCodeToHash(string value);
    [CompilerGeneratedAttribute]
public string get_StateHash();
    [CompilerGeneratedAttribute]
public void set_StateHash(string value);
    [CompilerGeneratedAttribute]
public string get_Nonce();
    [CompilerGeneratedAttribute]
public void set_Nonce(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    public void Validate();
}
public enum Duende.IdentityServer.Models.TokenRequestErrors : Enum {
    public int value__;
    public static TokenRequestErrors InvalidRequest;
    public static TokenRequestErrors InvalidClient;
    public static TokenRequestErrors InvalidGrant;
    public static TokenRequestErrors UnauthorizedClient;
    public static TokenRequestErrors UnsupportedGrantType;
    public static TokenRequestErrors InvalidScope;
    public static TokenRequestErrors InvalidTarget;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Models.UserSession : object {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionId>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Renewed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <Expires>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Issuer>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <ClientIds>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthenticationTicket <AuthenticationTicket>k__BackingField;
    public string SubjectId { get; public set; }
    public string SessionId { get; public set; }
    [NullableAttribute("2")]
public string DisplayName { get; public set; }
    public DateTime Created { get; public set; }
    public DateTime Renewed { get; public set; }
    public Nullable`1<DateTime> Expires { get; public set; }
    [NullableAttribute("2")]
public string Issuer { get; public set; }
    public IReadOnlyCollection`1<string> ClientIds { get; public set; }
    public AuthenticationTicket AuthenticationTicket { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_SessionId();
    [CompilerGeneratedAttribute]
public void set_SessionId(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_DisplayName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public DateTime get_Created();
    [CompilerGeneratedAttribute]
public void set_Created(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_Renewed();
    [CompilerGeneratedAttribute]
public void set_Renewed(DateTime value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_Expires();
    [CompilerGeneratedAttribute]
public void set_Expires(Nullable`1<DateTime> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Issuer();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Issuer(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<string> get_ClientIds();
    [CompilerGeneratedAttribute]
public void set_ClientIds(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public AuthenticationTicket get_AuthenticationTicket();
    [CompilerGeneratedAttribute]
public void set_AuthenticationTicket(AuthenticationTicket value);
}
internal static class Duende.IdentityServer.ObjectSerializer : object {
    private static JsonSerializerOptions Options;
    private static ObjectSerializer();
    public static string ToString(object o);
    public static T FromString(string value);
}
public class Duende.IdentityServer.ResponseHandling.AuthorizeInteractionResponseGenerator : object {
    protected ILogger Logger;
    protected IConsentService Consent;
    protected IProfileService Profile;
    protected IClock Clock;
    protected IdentityServerOptions Options;
    public AuthorizeInteractionResponseGenerator(IdentityServerOptions options, IClock clock, ILogger`1<AuthorizeInteractionResponseGenerator> logger, IConsentService consent, IProfileService profile);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.AuthorizeInteractionResponseGenerator/<ProcessInteractionAsync>d__6")]
public virtual Task`1<InteractionResponse> ProcessInteractionAsync(ValidatedAuthorizeRequest request, ConsentResponse consent);
    protected internal virtual Task`1<InteractionResponse> ProcessCreateAccountAsync(ValidatedAuthorizeRequest request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.AuthorizeInteractionResponseGenerator/<ProcessLoginAsync>d__8")]
protected internal virtual Task`1<InteractionResponse> ProcessLoginAsync(ValidatedAuthorizeRequest request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.AuthorizeInteractionResponseGenerator/<ProcessConsentAsync>d__9")]
protected internal virtual Task`1<InteractionResponse> ProcessConsentAsync(ValidatedAuthorizeRequest request, ConsentResponse consent);
}
public class Duende.IdentityServer.ResponseHandling.AuthorizeResponse : object {
    [CompilerGeneratedAttribute]
private ValidatedAuthorizeRequest <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdentityToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AccessTokenLifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionState>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Issuer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    public ValidatedAuthorizeRequest Request { get; public set; }
    public string RedirectUri { get; }
    public string State { get; }
    public string Scope { get; }
    public string IdentityToken { get; public set; }
    public string AccessToken { get; public set; }
    public int AccessTokenLifetime { get; public set; }
    public string Code { get; public set; }
    public string SessionState { get; public set; }
    public string Issuer { get; public set; }
    public string Error { get; public set; }
    public string ErrorDescription { get; public set; }
    public bool IsError { get; }
    [CompilerGeneratedAttribute]
public ValidatedAuthorizeRequest get_Request();
    [CompilerGeneratedAttribute]
public void set_Request(ValidatedAuthorizeRequest value);
    public string get_RedirectUri();
    public string get_State();
    public string get_Scope();
    [CompilerGeneratedAttribute]
public string get_IdentityToken();
    [CompilerGeneratedAttribute]
public void set_IdentityToken(string value);
    [CompilerGeneratedAttribute]
public string get_AccessToken();
    [CompilerGeneratedAttribute]
public void set_AccessToken(string value);
    [CompilerGeneratedAttribute]
public int get_AccessTokenLifetime();
    [CompilerGeneratedAttribute]
public void set_AccessTokenLifetime(int value);
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(string value);
    [CompilerGeneratedAttribute]
public string get_SessionState();
    [CompilerGeneratedAttribute]
public void set_SessionState(string value);
    [CompilerGeneratedAttribute]
public string get_Issuer();
    [CompilerGeneratedAttribute]
public void set_Issuer(string value);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
    public bool get_IsError();
}
public class Duende.IdentityServer.ResponseHandling.AuthorizeResponseGenerator : object {
    protected IdentityServerOptions Options;
    protected ITokenService TokenService;
    protected IAuthorizationCodeStore AuthorizationCodeStore;
    protected IEventService Events;
    protected ILogger Logger;
    protected IClock Clock;
    protected IKeyMaterialService KeyMaterialService;
    public AuthorizeResponseGenerator(IdentityServerOptions options, IClock clock, ITokenService tokenService, IKeyMaterialService keyMaterialService, IAuthorizationCodeStore authorizationCodeStore, ILogger`1<AuthorizeResponseGenerator> logger, IEventService events);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.AuthorizeResponseGenerator/<CreateResponseAsync>d__8")]
public virtual Task`1<AuthorizeResponse> CreateResponseAsync(ValidatedAuthorizeRequest request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.AuthorizeResponseGenerator/<CreateHybridFlowResponseAsync>d__9")]
protected virtual Task`1<AuthorizeResponse> CreateHybridFlowResponseAsync(ValidatedAuthorizeRequest request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.AuthorizeResponseGenerator/<CreateCodeFlowResponseAsync>d__10")]
protected virtual Task`1<AuthorizeResponse> CreateCodeFlowResponseAsync(ValidatedAuthorizeRequest request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.AuthorizeResponseGenerator/<CreateImplicitFlowResponseAsync>d__11")]
protected virtual Task`1<AuthorizeResponse> CreateImplicitFlowResponseAsync(ValidatedAuthorizeRequest request, string authorizationCode);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.AuthorizeResponseGenerator/<CreateCodeAsync>d__12")]
protected virtual Task`1<AuthorizationCode> CreateCodeAsync(ValidatedAuthorizeRequest request);
}
public class Duende.IdentityServer.ResponseHandling.BackchannelAuthenticationResponse : object {
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthenticationRequestId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ExpiresIn>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Interval>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Custom>k__BackingField;
    public bool IsError { get; }
    public string Error { get; public set; }
    public string ErrorDescription { get; public set; }
    public string AuthenticationRequestId { get; public set; }
    public int ExpiresIn { get; public set; }
    public int Interval { get; public set; }
    public Dictionary`2<string, object> Custom { get; public set; }
    public BackchannelAuthenticationResponse(string error, string errorDescription);
    public bool get_IsError();
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
    [CompilerGeneratedAttribute]
public string get_AuthenticationRequestId();
    [CompilerGeneratedAttribute]
public void set_AuthenticationRequestId(string value);
    [CompilerGeneratedAttribute]
public int get_ExpiresIn();
    [CompilerGeneratedAttribute]
public void set_ExpiresIn(int value);
    [CompilerGeneratedAttribute]
public int get_Interval();
    [CompilerGeneratedAttribute]
public void set_Interval(int value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Custom();
    [CompilerGeneratedAttribute]
public void set_Custom(Dictionary`2<string, object> value);
}
public class Duende.IdentityServer.ResponseHandling.BackchannelAuthenticationResponseGenerator : object {
    protected IdentityServerOptions Options;
    protected IBackChannelAuthenticationRequestStore BackChannelAuthenticationRequestStore;
    protected IBackchannelAuthenticationUserNotificationService UserLoginService;
    protected IClock Clock;
    protected ILogger Logger;
    public BackchannelAuthenticationResponseGenerator(IdentityServerOptions options, IBackChannelAuthenticationRequestStore backChannelAuthenticationRequestStore, IBackchannelAuthenticationUserNotificationService userLoginService, IClock clock, ILogger`1<BackchannelAuthenticationResponseGenerator> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.BackchannelAuthenticationResponseGenerator/<ProcessAsync>d__6")]
public virtual Task`1<BackchannelAuthenticationResponse> ProcessAsync(BackchannelAuthenticationRequestValidationResult validationResult);
}
public class Duende.IdentityServer.ResponseHandling.DeviceAuthorizationResponse : object {
    [CompilerGeneratedAttribute]
private string <DeviceCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VerificationUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VerificationUriComplete>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DeviceCodeLifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Interval>k__BackingField;
    public string DeviceCode { get; public set; }
    public string UserCode { get; public set; }
    public string VerificationUri { get; public set; }
    public string VerificationUriComplete { get; public set; }
    public int DeviceCodeLifetime { get; public set; }
    public int Interval { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DeviceCode();
    [CompilerGeneratedAttribute]
public void set_DeviceCode(string value);
    [CompilerGeneratedAttribute]
public string get_UserCode();
    [CompilerGeneratedAttribute]
public void set_UserCode(string value);
    [CompilerGeneratedAttribute]
public string get_VerificationUri();
    [CompilerGeneratedAttribute]
public void set_VerificationUri(string value);
    [CompilerGeneratedAttribute]
public string get_VerificationUriComplete();
    [CompilerGeneratedAttribute]
public void set_VerificationUriComplete(string value);
    [CompilerGeneratedAttribute]
public int get_DeviceCodeLifetime();
    [CompilerGeneratedAttribute]
public void set_DeviceCodeLifetime(int value);
    [CompilerGeneratedAttribute]
public int get_Interval();
    [CompilerGeneratedAttribute]
public void set_Interval(int value);
}
public class Duende.IdentityServer.ResponseHandling.DeviceAuthorizationResponseGenerator : object {
    protected IdentityServerOptions Options;
    protected IUserCodeService UserCodeService;
    protected IDeviceFlowCodeService DeviceFlowCodeService;
    protected IClock Clock;
    protected ILogger Logger;
    public DeviceAuthorizationResponseGenerator(IdentityServerOptions options, IUserCodeService userCodeService, IDeviceFlowCodeService deviceFlowCodeService, IClock clock, ILogger`1<DeviceAuthorizationResponseGenerator> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.DeviceAuthorizationResponseGenerator/<ProcessAsync>d__6")]
public virtual Task`1<DeviceAuthorizationResponse> ProcessAsync(DeviceAuthorizationRequestValidationResult validationResult, string baseUrl);
}
public class Duende.IdentityServer.ResponseHandling.DiscoveryResponseGenerator : object {
    protected IdentityServerOptions Options;
    protected ExtensionGrantValidator ExtensionGrants;
    protected IKeyMaterialService Keys;
    protected IResourceOwnerPasswordValidator ResourceOwnerValidator;
    protected IResourceStore ResourceStore;
    protected ISecretsListParser SecretParsers;
    protected ILogger Logger;
    public DiscoveryResponseGenerator(IdentityServerOptions options, IResourceStore resourceStore, IKeyMaterialService keys, ExtensionGrantValidator extensionGrants, ISecretsListParser secretParsers, IResourceOwnerPasswordValidator resourceOwnerValidator, ILogger`1<DiscoveryResponseGenerator> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.DiscoveryResponseGenerator/<CreateDiscoveryDocumentAsync>d__8")]
public virtual Task`1<Dictionary`2<string, object>> CreateDiscoveryDocumentAsync(string baseUrl, string issuerUri);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.DiscoveryResponseGenerator/<CreateJwkDocumentAsync>d__9")]
public virtual Task`1<IEnumerable`1<JsonWebKey>> CreateJwkDocumentAsync();
    [CompilerGeneratedAttribute]
private string <CreateDiscoveryDocumentAsync>g__ConstructMtlsEndpoint|8_0(string endpoint, <>c__DisplayClass8_0& );
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.ResponseHandling.IAuthorizeInteractionResponseGenerator {
    public abstract virtual Task`1<InteractionResponse> ProcessInteractionAsync(ValidatedAuthorizeRequest request, ConsentResponse consent);
}
public interface Duende.IdentityServer.ResponseHandling.IAuthorizeResponseGenerator {
    public abstract virtual Task`1<AuthorizeResponse> CreateResponseAsync(ValidatedAuthorizeRequest request);
}
public interface Duende.IdentityServer.ResponseHandling.IBackchannelAuthenticationResponseGenerator {
    public abstract virtual Task`1<BackchannelAuthenticationResponse> ProcessAsync(BackchannelAuthenticationRequestValidationResult validationResult);
}
public interface Duende.IdentityServer.ResponseHandling.IDeviceAuthorizationResponseGenerator {
    public abstract virtual Task`1<DeviceAuthorizationResponse> ProcessAsync(DeviceAuthorizationRequestValidationResult validationResult, string baseUrl);
}
public interface Duende.IdentityServer.ResponseHandling.IDiscoveryResponseGenerator {
    public abstract virtual Task`1<Dictionary`2<string, object>> CreateDiscoveryDocumentAsync(string baseUrl, string issuerUri);
    public abstract virtual Task`1<IEnumerable`1<JsonWebKey>> CreateJwkDocumentAsync();
}
public interface Duende.IdentityServer.ResponseHandling.IIntrospectionResponseGenerator {
    public abstract virtual Task`1<Dictionary`2<string, object>> ProcessAsync(IntrospectionRequestValidationResult validationResult);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.ResponseHandling.InteractionResponse : object {
    [CompilerGeneratedAttribute]
private bool <IsLogin>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsConsent>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCreateAccount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RedirectUrl>k__BackingField;
    public InteractionResponseType ResponseType { get; }
    public bool IsLogin { get; public set; }
    public bool IsConsent { get; public set; }
    public bool IsCreateAccount { get; public set; }
    public bool IsError { get; }
    public string Error { get; public set; }
    public string ErrorDescription { get; public set; }
    public bool IsRedirect { get; }
    public string RedirectUrl { get; public set; }
    public InteractionResponseType get_ResponseType();
    [CompilerGeneratedAttribute]
public bool get_IsLogin();
    [CompilerGeneratedAttribute]
public void set_IsLogin(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsConsent();
    [CompilerGeneratedAttribute]
public void set_IsConsent(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsCreateAccount();
    [CompilerGeneratedAttribute]
public void set_IsCreateAccount(bool value);
    public bool get_IsError();
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
    public bool get_IsRedirect();
    [CompilerGeneratedAttribute]
public string get_RedirectUrl();
    [CompilerGeneratedAttribute]
public void set_RedirectUrl(string value);
}
public enum Duende.IdentityServer.ResponseHandling.InteractionResponseType : Enum {
    public int value__;
    public static InteractionResponseType None;
    public static InteractionResponseType Error;
    public static InteractionResponseType UserInteraction;
}
public class Duende.IdentityServer.ResponseHandling.IntrospectionResponseGenerator : object {
    protected IEventService Events;
    protected ILogger Logger;
    public IntrospectionResponseGenerator(IEventService events, ILogger`1<IntrospectionResponseGenerator> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.IntrospectionResponseGenerator/<ProcessAsync>d__3")]
public virtual Task`1<Dictionary`2<string, object>> ProcessAsync(IntrospectionRequestValidationResult validationResult);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.IntrospectionResponseGenerator/<AreExpectedScopesPresentAsync>d__4")]
protected virtual Task`1<bool> AreExpectedScopesPresentAsync(IntrospectionRequestValidationResult validationResult);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.ResponseHandling.IPushedAuthorizationResponseGenerator {
    public abstract virtual Task`1<PushedAuthorizationResponse> CreateResponseAsync(ValidatedPushedAuthorizationRequest request);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.ResponseHandling.ITokenResponseGenerator {
    public abstract virtual Task`1<TokenResponse> ProcessAsync(TokenRequestValidationResult validationResult);
}
public interface Duende.IdentityServer.ResponseHandling.ITokenRevocationResponseGenerator {
    public abstract virtual Task`1<TokenRevocationResponse> ProcessAsync(TokenRevocationRequestValidationResult validationResult);
}
public interface Duende.IdentityServer.ResponseHandling.IUserInfoResponseGenerator {
    public abstract virtual Task`1<Dictionary`2<string, object>> ProcessAsync(UserInfoRequestValidationResult validationResult);
}
[RequiredMemberAttribute]
public class Duende.IdentityServer.ResponseHandling.PushedAuthorizationFailure : PushedAuthorizationResponse {
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    [RequiredMemberAttribute]
public string Error { get; public set; }
    [RequiredMemberAttribute]
public string ErrorDescription { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
}
public abstract class Duende.IdentityServer.ResponseHandling.PushedAuthorizationResponse : object {
}
public class Duende.IdentityServer.ResponseHandling.PushedAuthorizationResponseGenerator : object {
    private IHandleGenerationService _handleGeneration;
    private IdentityServerOptions _options;
    private IPushedAuthorizationService _pushedAuthorizationService;
    private ILogger`1<PushedAuthorizationResponseGenerator> _logger;
    public PushedAuthorizationResponseGenerator(IHandleGenerationService handleGeneration, IdentityServerOptions options, IPushedAuthorizationService pushedAuthorizationService, ILogger`1<PushedAuthorizationResponseGenerator> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.PushedAuthorizationResponseGenerator/<CreateResponseAsync>d__5")]
public sealed virtual Task`1<PushedAuthorizationResponse> CreateResponseAsync(ValidatedPushedAuthorizationRequest request);
}
[RequiredMemberAttribute]
public class Duende.IdentityServer.ResponseHandling.PushedAuthorizationSuccess : PushedAuthorizationResponse {
    [CompilerGeneratedAttribute]
private string <RequestUri>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ExpiresIn>k__BackingField;
    [RequiredMemberAttribute]
public string RequestUri { get; public set; }
    [RequiredMemberAttribute]
public int ExpiresIn { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RequestUri();
    [CompilerGeneratedAttribute]
public void set_RequestUri(string value);
    [CompilerGeneratedAttribute]
public int get_ExpiresIn();
    [CompilerGeneratedAttribute]
public void set_ExpiresIn(int value);
}
public class Duende.IdentityServer.ResponseHandling.TokenErrorResponse : object {
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DPoPNonce>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Custom>k__BackingField;
    public string Error { get; public set; }
    public string ErrorDescription { get; public set; }
    public string DPoPNonce { get; public set; }
    public Dictionary`2<string, object> Custom { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
    [CompilerGeneratedAttribute]
public string get_DPoPNonce();
    [CompilerGeneratedAttribute]
public void set_DPoPNonce(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Custom();
    [CompilerGeneratedAttribute]
public void set_Custom(Dictionary`2<string, object> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.ResponseHandling.TokenResponse : object {
    [CompilerGeneratedAttribute]
private string <AccessTokenType>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <IdentityToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AccessTokenLifetime>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <RefreshToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <DPoPNonce>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Custom>k__BackingField;
    public string AccessTokenType { get; public set; }
    [NullableAttribute("2")]
public string IdentityToken { get; public set; }
    public string AccessToken { get; public set; }
    public int AccessTokenLifetime { get; public set; }
    [NullableAttribute("2")]
public string RefreshToken { get; public set; }
    public string Scope { get; public set; }
    [NullableAttribute("2")]
public string DPoPNonce { get; public set; }
    public Dictionary`2<string, object> Custom { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AccessTokenType();
    [CompilerGeneratedAttribute]
public void set_AccessTokenType(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_IdentityToken();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_IdentityToken(string value);
    [CompilerGeneratedAttribute]
public string get_AccessToken();
    [CompilerGeneratedAttribute]
public void set_AccessToken(string value);
    [CompilerGeneratedAttribute]
public int get_AccessTokenLifetime();
    [CompilerGeneratedAttribute]
public void set_AccessTokenLifetime(int value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_RefreshToken();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_RefreshToken(string value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_DPoPNonce();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_DPoPNonce(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Custom();
    [CompilerGeneratedAttribute]
public void set_Custom(Dictionary`2<string, object> value);
}
public class Duende.IdentityServer.ResponseHandling.TokenResponseGenerator : object {
    protected ILogger Logger;
    protected ITokenService TokenService;
    protected IRefreshTokenService RefreshTokenService;
    [CompilerGeneratedAttribute]
private IScopeParser <ScopeParser>k__BackingField;
    protected IResourceStore Resources;
    protected IClientStore Clients;
    protected IClock Clock;
    public IScopeParser ScopeParser { get; }
    public TokenResponseGenerator(IClock clock, ITokenService tokenService, IRefreshTokenService refreshTokenService, IScopeParser scopeParser, IResourceStore resources, IClientStore clients, ILogger`1<TokenResponseGenerator> logger);
    [CompilerGeneratedAttribute]
public IScopeParser get_ScopeParser();
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.TokenResponseGenerator/<ProcessAsync>d__10")]
public virtual Task`1<TokenResponse> ProcessAsync(TokenRequestValidationResult request);
    protected virtual Task`1<TokenResponse> ProcessClientCredentialsRequestAsync(TokenRequestValidationResult request);
    protected virtual Task`1<TokenResponse> ProcessPasswordRequestAsync(TokenRequestValidationResult request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.TokenResponseGenerator/<ProcessAuthorizationCodeRequestAsync>d__13")]
protected virtual Task`1<TokenResponse> ProcessAuthorizationCodeRequestAsync(TokenRequestValidationResult request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.TokenResponseGenerator/<ProcessRefreshTokenRequestAsync>d__14")]
protected virtual Task`1<TokenResponse> ProcessRefreshTokenRequestAsync(TokenRequestValidationResult request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.TokenResponseGenerator/<ProcessDeviceCodeRequestAsync>d__15")]
protected virtual Task`1<TokenResponse> ProcessDeviceCodeRequestAsync(TokenRequestValidationResult request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.TokenResponseGenerator/<ProcessCibaRequestAsync>d__16")]
protected virtual Task`1<TokenResponse> ProcessCibaRequestAsync(TokenRequestValidationResult request);
    protected virtual Task`1<TokenResponse> ProcessExtensionGrantRequestAsync(TokenRequestValidationResult request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.TokenResponseGenerator/<ProcessTokenRequestAsync>d__18")]
protected virtual Task`1<TokenResponse> ProcessTokenRequestAsync(TokenRequestValidationResult validationResult);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.TokenResponseGenerator/<CreateAccessTokenAsync>d__19")]
protected virtual Task`1<ValueTuple`2<string, string>> CreateAccessTokenAsync(ValidatedTokenRequest request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.TokenResponseGenerator/<CreateIdTokenFromRefreshTokenRequestAsync>d__20")]
protected virtual Task`1<string> CreateIdTokenFromRefreshTokenRequestAsync(ValidatedTokenRequest request, string newAccessToken);
}
public class Duende.IdentityServer.ResponseHandling.TokenRevocationResponse : object {
    [CompilerGeneratedAttribute]
private bool <Success>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    public bool Success { get; public set; }
    public string TokenType { get; public set; }
    public string Error { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Success();
    [CompilerGeneratedAttribute]
public void set_Success(bool value);
    [CompilerGeneratedAttribute]
public string get_TokenType();
    [CompilerGeneratedAttribute]
public void set_TokenType(string value);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
}
public class Duende.IdentityServer.ResponseHandling.TokenRevocationResponseGenerator : object {
    protected IReferenceTokenStore ReferenceTokenStore;
    protected IRefreshTokenStore RefreshTokenStore;
    protected ILogger Logger;
    public TokenRevocationResponseGenerator(IReferenceTokenStore referenceTokenStore, IRefreshTokenStore refreshTokenStore, ILogger`1<TokenRevocationResponseGenerator> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.TokenRevocationResponseGenerator/<ProcessAsync>d__4")]
public virtual Task`1<TokenRevocationResponse> ProcessAsync(TokenRevocationRequestValidationResult validationResult);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.TokenRevocationResponseGenerator/<RevokeAccessTokenAsync>d__5")]
protected virtual Task`1<bool> RevokeAccessTokenAsync(TokenRevocationRequestValidationResult validationResult);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.TokenRevocationResponseGenerator/<RevokeRefreshTokenAsync>d__6")]
protected virtual Task`1<bool> RevokeRefreshTokenAsync(TokenRevocationRequestValidationResult validationResult);
}
public class Duende.IdentityServer.ResponseHandling.UserInfoResponseGenerator : object {
    protected ILogger Logger;
    protected IProfileService Profile;
    protected IResourceStore Resources;
    public UserInfoResponseGenerator(IProfileService profile, IResourceStore resourceStore, ILogger`1<UserInfoResponseGenerator> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.UserInfoResponseGenerator/<ProcessAsync>d__4")]
public virtual Task`1<Dictionary`2<string, object>> ProcessAsync(UserInfoRequestValidationResult validationResult);
    [AsyncStateMachineAttribute("Duende.IdentityServer.ResponseHandling.UserInfoResponseGenerator/<GetRequestedResourcesAsync>d__5")]
protected internal virtual Task`1<ResourceValidationResult> GetRequestedResourcesAsync(IEnumerable`1<string> scopes);
    protected internal virtual Task`1<IEnumerable`1<string>> GetRequestedClaimTypesAsync(ResourceValidationResult resourceValidationResult);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Services.BackChannelLogoutRequest : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionId>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <LogoutUri>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SessionIdRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Issuer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<LogoutNotificationReason> <LogoutReason>k__BackingField;
    [NullableAttribute("1")]
public string ClientId { get; public set; }
    public string SubjectId { get; public set; }
    public string SessionId { get; public set; }
    [NullableAttribute("1")]
public string LogoutUri { get; public set; }
    public bool SessionIdRequired { get; public set; }
    public string Issuer { get; public set; }
    public Nullable`1<LogoutNotificationReason> LogoutReason { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_ClientId();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_SessionId();
    [CompilerGeneratedAttribute]
public void set_SessionId(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_LogoutUri();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_LogoutUri(string value);
    [CompilerGeneratedAttribute]
public bool get_SessionIdRequired();
    [CompilerGeneratedAttribute]
public void set_SessionIdRequired(bool value);
    [CompilerGeneratedAttribute]
public string get_Issuer();
    [CompilerGeneratedAttribute]
public void set_Issuer(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<LogoutNotificationReason> get_LogoutReason();
    [CompilerGeneratedAttribute]
public void set_LogoutReason(Nullable`1<LogoutNotificationReason> value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Services.CompleteBackchannelLoginRequest : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <InternalId>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <ScopesValuesConsented>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionId>k__BackingField;
    [NullableAttribute("1")]
public string InternalId { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> ScopesValuesConsented { get; public set; }
    public string Description { get; public set; }
    public ClaimsPrincipal Subject { get; public set; }
    public string SessionId { get; public set; }
    [NullableContextAttribute("1")]
public CompleteBackchannelLoginRequest(string internalId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_InternalId();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_InternalId(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ScopesValuesConsented();
    [CompilerGeneratedAttribute]
public void set_ScopesValuesConsented(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(ClaimsPrincipal value);
    [CompilerGeneratedAttribute]
public string get_SessionId();
    [CompilerGeneratedAttribute]
public void set_SessionId(string value);
}
internal class Duende.IdentityServer.Services.Default.DefaultCancellationTokenProvider : object {
    private IHttpContextAccessor _httpContextAccessor;
    public CancellationToken CancellationToken { get; }
    public DefaultCancellationTokenProvider(IHttpContextAccessor httpContextAccessor);
    public sealed virtual CancellationToken get_CancellationToken();
}
public class Duende.IdentityServer.Services.Default.DefaultDeviceFlowCodeService : object {
    private IDeviceFlowStore _store;
    private IHandleGenerationService _handleGenerationService;
    public DefaultDeviceFlowCodeService(IDeviceFlowStore store, IHandleGenerationService handleGenerationService);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.Default.DefaultDeviceFlowCodeService/<StoreDeviceAuthorizationAsync>d__3")]
public sealed virtual Task`1<string> StoreDeviceAuthorizationAsync(string userCode, DeviceCode data);
    public sealed virtual Task`1<DeviceCode> FindByUserCodeAsync(string userCode);
    public sealed virtual Task`1<DeviceCode> FindByDeviceCodeAsync(string deviceCode);
    public sealed virtual Task UpdateByUserCodeAsync(string userCode, DeviceCode data);
    public sealed virtual Task RemoveByDeviceCodeAsync(string deviceCode);
}
public class Duende.IdentityServer.Services.DefaultBackchannelAuthenticationInteractionService : object {
    private IBackChannelAuthenticationRequestStore _requestStore;
    private IClientStore _clientStore;
    private IUserSession _session;
    private IResourceValidator _resourceValidator;
    private IClock _systemClock;
    private ILogger`1<DefaultBackchannelAuthenticationInteractionService> _logger;
    public DefaultBackchannelAuthenticationInteractionService(IBackChannelAuthenticationRequestStore requestStore, IClientStore clients, IUserSession session, IResourceValidator resourceValidator, IClock systemClock, ILogger`1<DefaultBackchannelAuthenticationInteractionService> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultBackchannelAuthenticationInteractionService/<CreateAsync>d__7")]
private Task`1<BackchannelUserLoginRequest> CreateAsync(BackChannelAuthenticationRequest request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultBackchannelAuthenticationInteractionService/<GetLoginRequestByInternalIdAsync>d__8")]
public sealed virtual Task`1<BackchannelUserLoginRequest> GetLoginRequestByInternalIdAsync(string id);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultBackchannelAuthenticationInteractionService/<GetPendingLoginRequestsForCurrentUserAsync>d__9")]
public sealed virtual Task`1<IEnumerable`1<BackchannelUserLoginRequest>> GetPendingLoginRequestsForCurrentUserAsync();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultBackchannelAuthenticationInteractionService/<CompleteLoginRequestAsync>d__10")]
public sealed virtual Task CompleteLoginRequestAsync(CompleteBackchannelLoginRequest completionRequest);
}
public class Duende.IdentityServer.Services.DefaultBackChannelLogoutHttpClient : object {
    private HttpClient _client;
    private ILogger`1<DefaultBackChannelLogoutHttpClient> _logger;
    private ICancellationTokenProvider _cancellationTokenProvider;
    public DefaultBackChannelLogoutHttpClient(HttpClient client, ILoggerFactory loggerFactory, ICancellationTokenProvider cancellationTokenProvider);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultBackChannelLogoutHttpClient/<PostAsync>d__4")]
public sealed virtual Task PostAsync(string url, Dictionary`2<string, string> payload);
}
public class Duende.IdentityServer.Services.DefaultBackChannelLogoutService : object {
    protected static int DefaultLogoutTokenLifetime;
    [CompilerGeneratedAttribute]
private IClock <Clock>k__BackingField;
    [CompilerGeneratedAttribute]
private IIdentityServerTools <Tools>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogoutNotificationService <LogoutNotificationService>k__BackingField;
    [CompilerGeneratedAttribute]
private IBackChannelLogoutHttpClient <HttpClient>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger`1<IBackChannelLogoutService> <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private IIssuerNameService <IssuerNameService>k__BackingField;
    protected IClock Clock { get; }
    protected IIdentityServerTools Tools { get; }
    public ILogoutNotificationService LogoutNotificationService { get; }
    protected IBackChannelLogoutHttpClient HttpClient { get; }
    protected ILogger`1<IBackChannelLogoutService> Logger { get; }
    protected IIssuerNameService IssuerNameService { get; }
    public DefaultBackChannelLogoutService(IClock clock, IIdentityServerTools tools, ILogoutNotificationService logoutNotificationService, IBackChannelLogoutHttpClient backChannelLogoutHttpClient, IIssuerNameService issuerNameService, ILogger`1<IBackChannelLogoutService> logger);
    [CompilerGeneratedAttribute]
protected IClock get_Clock();
    [CompilerGeneratedAttribute]
protected IIdentityServerTools get_Tools();
    [CompilerGeneratedAttribute]
public ILogoutNotificationService get_LogoutNotificationService();
    [CompilerGeneratedAttribute]
protected IBackChannelLogoutHttpClient get_HttpClient();
    [CompilerGeneratedAttribute]
protected ILogger`1<IBackChannelLogoutService> get_Logger();
    [CompilerGeneratedAttribute]
protected IIssuerNameService get_IssuerNameService();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultBackChannelLogoutService/<SendLogoutNotificationsAsync>d__20")]
public virtual Task SendLogoutNotificationsAsync(LogoutNotificationContext context);
    protected virtual Task SendLogoutNotificationsAsync(IEnumerable`1<BackChannelLogoutRequest> requests);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultBackChannelLogoutService/<SendLogoutNotificationAsync>d__22")]
protected virtual Task SendLogoutNotificationAsync(BackChannelLogoutRequest request);
    protected virtual Task PostLogoutJwt(BackChannelLogoutRequest client, Dictionary`2<string, string> data);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultBackChannelLogoutService/<CreateFormPostPayloadAsync>d__24")]
protected Task`1<Dictionary`2<string, string>> CreateFormPostPayloadAsync(BackChannelLogoutRequest request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultBackChannelLogoutService/<CreateTokenAsync>d__25")]
protected virtual Task`1<string> CreateTokenAsync(BackChannelLogoutRequest request);
    protected Task`1<IEnumerable`1<Claim>> CreateClaimsForTokenAsync(BackChannelLogoutRequest request);
}
public class Duende.IdentityServer.Services.DefaultCache`1 : object {
    private static string KeySeparator;
    [CompilerGeneratedAttribute]
private IdentityServerOptions <IdentityServerOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private IMemoryCache <Cache>k__BackingField;
    [CompilerGeneratedAttribute]
private IConcurrencyLock`1<DefaultCache`1<T>> <ConcurrencyLock>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger`1<DefaultCache`1<T>> <Logger>k__BackingField;
    public IdentityServerOptions IdentityServerOptions { get; }
    protected IMemoryCache Cache { get; }
    protected IConcurrencyLock`1<DefaultCache`1<T>> ConcurrencyLock { get; }
    protected ILogger`1<DefaultCache`1<T>> Logger { get; }
    public DefaultCache`1(IdentityServerOptions identityServerOptions, IMemoryCache cache, IConcurrencyLock`1<DefaultCache`1<T>> concurrencyLock, ILogger`1<DefaultCache`1<T>> logger);
    [CompilerGeneratedAttribute]
public IdentityServerOptions get_IdentityServerOptions();
    [CompilerGeneratedAttribute]
protected IMemoryCache get_Cache();
    [CompilerGeneratedAttribute]
protected IConcurrencyLock`1<DefaultCache`1<T>> get_ConcurrencyLock();
    [CompilerGeneratedAttribute]
protected ILogger`1<DefaultCache`1<T>> get_Logger();
    protected string GetKey(string key);
    public sealed virtual Task`1<T> GetAsync(string key);
    public sealed virtual Task SetAsync(string key, T item, TimeSpan expiration);
    public sealed virtual Task RemoveAsync(string key);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultCache`1/<GetOrAddAsync>d__18")]
public sealed virtual Task`1<T> GetOrAddAsync(string key, TimeSpan duration, Func`1<Task`1<T>> get);
}
public class Duende.IdentityServer.Services.DefaultClaimsService : object {
    protected ILogger Logger;
    protected IProfileService Profile;
    public DefaultClaimsService(IProfileService profile, ILogger`1<DefaultClaimsService> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultClaimsService/<GetIdentityTokenClaimsAsync>d__3")]
public virtual Task`1<IEnumerable`1<Claim>> GetIdentityTokenClaimsAsync(ClaimsPrincipal subject, ResourceValidationResult resources, bool includeAllIdentityClaims, ValidatedRequest request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultClaimsService/<GetAccessTokenClaimsAsync>d__4")]
public virtual Task`1<IEnumerable`1<Claim>> GetAccessTokenClaimsAsync(ClaimsPrincipal subject, ResourceValidationResult resourceResult, ValidatedRequest request);
    protected virtual IEnumerable`1<Claim> GetStandardSubjectClaims(ClaimsPrincipal subject);
    protected virtual IEnumerable`1<Claim> GetOptionalClaims(ClaimsPrincipal subject);
    protected virtual IEnumerable`1<Claim> FilterProtocolClaims(IEnumerable`1<Claim> claims);
    protected virtual IEnumerable`1<string> FilterRequestedClaimTypes(IEnumerable`1<string> claimTypes);
}
public class Duende.IdentityServer.Services.DefaultConsentService : object {
    protected IUserConsentStore UserConsentStore;
    protected IClock Clock;
    protected ILogger`1<DefaultConsentService> Logger;
    public DefaultConsentService(IClock clock, IUserConsentStore userConsentStore, ILogger`1<DefaultConsentService> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultConsentService/<RequiresConsentAsync>d__4")]
public virtual Task`1<bool> RequiresConsentAsync(ClaimsPrincipal subject, Client client, IEnumerable`1<ParsedScopeValue> parsedScopes);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultConsentService/<UpdateConsentAsync>d__5")]
public virtual Task UpdateConsentAsync(ClaimsPrincipal subject, Client client, IEnumerable`1<ParsedScopeValue> parsedScopes);
}
public class Duende.IdentityServer.Services.DefaultCorsPolicyService : object {
    protected ILogger Logger;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <AllowedOrigins>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowAll>k__BackingField;
    public ICollection`1<string> AllowedOrigins { get; public set; }
    public bool AllowAll { get; public set; }
    public DefaultCorsPolicyService(ILogger`1<DefaultCorsPolicyService> logger);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_AllowedOrigins();
    [CompilerGeneratedAttribute]
public void set_AllowedOrigins(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_AllowAll();
    [CompilerGeneratedAttribute]
public void set_AllowAll(bool value);
    public virtual Task`1<bool> IsOriginAllowedAsync(string origin);
}
internal class Duende.IdentityServer.Services.DefaultDeviceFlowInteractionService : object {
    private IClientStore _clients;
    private IUserSession _session;
    private IDeviceFlowCodeService _devices;
    private IResourceValidator _resourceValidator;
    private ILogger`1<DefaultDeviceFlowInteractionService> _logger;
    public DefaultDeviceFlowInteractionService(IClientStore clients, IUserSession session, IDeviceFlowCodeService devices, IResourceValidator resourceValidator, ILogger`1<DefaultDeviceFlowInteractionService> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultDeviceFlowInteractionService/<GetAuthorizationContextAsync>d__6")]
public sealed virtual Task`1<DeviceFlowAuthorizationRequest> GetAuthorizationContextAsync(string userCode);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultDeviceFlowInteractionService/<HandleRequestAsync>d__7")]
public sealed virtual Task`1<DeviceFlowInteractionResult> HandleRequestAsync(string userCode, ConsentResponse consent);
    private DeviceFlowInteractionResult LogAndReturnError(string error, string errorDescription);
}
public class Duende.IdentityServer.Services.DefaultEventSink : object {
    private ILogger _logger;
    public DefaultEventSink(ILogger`1<DefaultEventService> logger);
    public virtual Task PersistAsync(Event evt);
}
public class Duende.IdentityServer.Services.DefaultHandleGenerationService : object {
    public sealed virtual Task`1<string> GenerateAsync(int length);
}
internal class Duende.IdentityServer.Services.DefaultIdentityServerInteractionService : object {
    private IClock _clock;
    private IHttpContextAccessor _context;
    private IMessageStore`1<LogoutMessage> _logoutMessageStore;
    private IMessageStore`1<ErrorMessage> _errorMessageStore;
    private IConsentMessageStore _consentMessageStore;
    private IPersistedGrantService _grants;
    private IUserSession _userSession;
    private ILogger _logger;
    private ReturnUrlParser _returnUrlParser;
    public DefaultIdentityServerInteractionService(IClock clock, IHttpContextAccessor context, IMessageStore`1<LogoutMessage> logoutMessageStore, IMessageStore`1<ErrorMessage> errorMessageStore, IConsentMessageStore consentMessageStore, IPersistedGrantService grants, IUserSession userSession, ReturnUrlParser returnUrlParser, ILogger`1<DefaultIdentityServerInteractionService> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultIdentityServerInteractionService/<GetAuthorizationContextAsync>d__10")]
public sealed virtual Task`1<AuthorizationRequest> GetAuthorizationContextAsync(string returnUrl);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultIdentityServerInteractionService/<GetLogoutContextAsync>d__11")]
public sealed virtual Task`1<LogoutRequest> GetLogoutContextAsync(string logoutId);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultIdentityServerInteractionService/<CreateLogoutContextAsync>d__12")]
public sealed virtual Task`1<string> CreateLogoutContextAsync();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultIdentityServerInteractionService/<GetErrorContextAsync>d__13")]
public sealed virtual Task`1<ErrorMessage> GetErrorContextAsync(string errorId);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultIdentityServerInteractionService/<GrantConsentAsync>d__14")]
public sealed virtual Task GrantConsentAsync(AuthorizationRequest request, ConsentResponse consent, string subject);
    public sealed virtual Task DenyAuthorizationAsync(AuthorizationRequest request, AuthorizationError error, string errorDescription);
    public sealed virtual bool IsValidReturnUrl(string returnUrl);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultIdentityServerInteractionService/<GetAllUserGrantsAsync>d__17")]
public sealed virtual Task`1<IEnumerable`1<Grant>> GetAllUserGrantsAsync();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultIdentityServerInteractionService/<RevokeUserConsentAsync>d__18")]
public sealed virtual Task RevokeUserConsentAsync(string clientId);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultIdentityServerInteractionService/<RevokeTokensForCurrentSessionAsync>d__19")]
public sealed virtual Task RevokeTokensForCurrentSessionAsync();
}
public class Duende.IdentityServer.Services.DefaultIssuerNameService : object {
    private IdentityServerOptions _options;
    private IServerUrls _urls;
    private IHttpContextAccessor _httpContextAccessor;
    public DefaultIssuerNameService(IdentityServerOptions options, IServerUrls urls, IHttpContextAccessor httpContextAccessor);
    public sealed virtual Task`1<string> GetCurrentAsync();
}
public class Duende.IdentityServer.Services.DefaultJwtRequestUriHttpClient : object {
    private HttpClient _client;
    private IdentityServerOptions _options;
    private ILogger`1<DefaultJwtRequestUriHttpClient> _logger;
    private ICancellationTokenProvider _cancellationTokenProvider;
    public DefaultJwtRequestUriHttpClient(HttpClient client, IdentityServerOptions options, ILoggerFactory loggerFactory, ICancellationTokenProvider cancellationTokenProvider);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultJwtRequestUriHttpClient/<GetJwtAsync>d__5")]
public sealed virtual Task`1<string> GetJwtAsync(string url, Client client);
}
public class Duende.IdentityServer.Services.DefaultKeyMaterialService : object {
    private IEnumerable`1<IValidationKeysStore> _validationKeysStores;
    private IEnumerable`1<ISigningCredentialStore> _signingCredentialStores;
    private IAutomaticKeyManagerKeyStore _keyManagerKeyStore;
    public DefaultKeyMaterialService(IEnumerable`1<IValidationKeysStore> validationKeysStores, IEnumerable`1<ISigningCredentialStore> signingCredentialStores, IAutomaticKeyManagerKeyStore keyManagerKeyStore);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultKeyMaterialService/<GetSigningCredentialsAsync>d__4")]
public sealed virtual Task`1<SigningCredentials> GetSigningCredentialsAsync(IEnumerable`1<string> allowedAlgorithms);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultKeyMaterialService/<GetAllSigningCredentialsAsync>d__5")]
public sealed virtual Task`1<IEnumerable`1<SigningCredentials>> GetAllSigningCredentialsAsync();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultKeyMaterialService/<GetValidationKeysAsync>d__6")]
public sealed virtual Task`1<IEnumerable`1<SecurityKeyInfo>> GetValidationKeysAsync();
}
public class Duende.IdentityServer.Services.DefaultPersistedGrantService : object {
    private ILogger _logger;
    private IPersistedGrantStore _store;
    private IPersistentGrantSerializer _serializer;
    public DefaultPersistedGrantService(IPersistedGrantStore store, IPersistentGrantSerializer serializer, ILogger`1<DefaultPersistedGrantService> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultPersistedGrantService/<GetAllGrantsAsync>d__4")]
public sealed virtual Task`1<IEnumerable`1<Grant>> GetAllGrantsAsync(string subjectId);
    private IEnumerable`1<Grant> Join(IEnumerable`1<Grant> first, IEnumerable`1<Grant> second);
    public sealed virtual Task RemoveAllGrantsAsync(string subjectId, string clientId, string sessionId);
}
public class Duende.IdentityServer.Services.DefaultProfileService : object {
    protected ILogger Logger;
    public DefaultProfileService(ILogger`1<DefaultProfileService> logger);
    public virtual Task GetProfileDataAsync(ProfileDataRequestContext context);
    public virtual Task IsActiveAsync(IsActiveContext context);
}
public class Duende.IdentityServer.Services.DefaultRefreshTokenService : object {
    protected ILogger Logger;
    [CompilerGeneratedAttribute]
private IRefreshTokenStore <RefreshTokenStore>k__BackingField;
    [CompilerGeneratedAttribute]
private IProfileService <Profile>k__BackingField;
    [CompilerGeneratedAttribute]
private IClock <Clock>k__BackingField;
    [CompilerGeneratedAttribute]
private PersistentGrantOptions <Options>k__BackingField;
    protected IRefreshTokenStore RefreshTokenStore { get; }
    protected IProfileService Profile { get; }
    protected IClock Clock { get; }
    protected PersistentGrantOptions Options { get; }
    public DefaultRefreshTokenService(IRefreshTokenStore refreshTokenStore, IProfileService profile, IClock clock, PersistentGrantOptions options, ILogger`1<DefaultRefreshTokenService> logger);
    [CompilerGeneratedAttribute]
protected IRefreshTokenStore get_RefreshTokenStore();
    [CompilerGeneratedAttribute]
protected IProfileService get_Profile();
    [CompilerGeneratedAttribute]
protected IClock get_Clock();
    [CompilerGeneratedAttribute]
protected PersistentGrantOptions get_Options();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultRefreshTokenService/<ValidateRefreshTokenAsync>d__14")]
public virtual Task`1<TokenValidationResult> ValidateRefreshTokenAsync(string tokenHandle, Client client);
    protected virtual Task`1<bool> AcceptConsumedTokenAsync(RefreshToken refreshToken);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultRefreshTokenService/<CreateRefreshTokenAsync>d__16")]
public virtual Task`1<string> CreateRefreshTokenAsync(RefreshTokenCreationRequest request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultRefreshTokenService/<UpdateRefreshTokenAsync>d__17")]
public virtual Task`1<string> UpdateRefreshTokenAsync(RefreshTokenUpdateRequest request);
}
public class Duende.IdentityServer.Services.DefaultReplayCache : object {
    private static string Prefix;
    private IDistributedCache _cache;
    public DefaultReplayCache(IDistributedCache cache);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultReplayCache/<AddAsync>d__3")]
public sealed virtual Task AddAsync(string purpose, string handle, DateTimeOffset expiration);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultReplayCache/<ExistsAsync>d__4")]
public sealed virtual Task`1<bool> ExistsAsync(string purpose, string handle);
}
public class Duende.IdentityServer.Services.DefaultServerUrls : object {
    private IHttpContextAccessor _httpContextAccessor;
    public string Origin { get; public set; }
    public string BasePath { get; public set; }
    public DefaultServerUrls(IHttpContextAccessor httpContextAccessor);
    public sealed virtual string get_Origin();
    public sealed virtual void set_Origin(string value);
    public sealed virtual string get_BasePath();
    public sealed virtual void set_BasePath(string value);
}
public class Duende.IdentityServer.Services.DefaultSessionCoordinationService : object {
    protected IdentityServerOptions Options;
    protected IPersistedGrantStore PersistedGrantStore;
    protected IClientStore ClientStore;
    protected IBackChannelLogoutService BackChannelLogoutService;
    protected ILogger Logger;
    protected IServerSideSessionStore ServerSideSessionStore;
    protected static String[] PersistedGrantTokenTypes;
    public DefaultSessionCoordinationService(IdentityServerOptions options, IPersistedGrantStore persistedGrantStore, IClientStore clientStore, IBackChannelLogoutService backChannelLogoutService, ILogger`1<DefaultSessionCoordinationService> logger, IServerSideSessionStore serverSideSessionStore);
    private static DefaultSessionCoordinationService();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultSessionCoordinationService/<ProcessLogoutAsync>d__8")]
public virtual Task ProcessLogoutAsync(UserSession session);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultSessionCoordinationService/<ProcessExpirationAsync>d__9")]
public virtual Task ProcessExpirationAsync(UserSession session);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultSessionCoordinationService/<ValidateSessionAsync>d__10")]
public virtual Task`1<bool> ValidateSessionAsync(SessionValidationRequest request);
}
public class Duende.IdentityServer.Services.DefaultSessionManagementService : object {
    private IServerSideTicketStore _serverSideTicketStore;
    private IServerSideSessionStore _serverSideSessionStore;
    private IPersistedGrantStore _persistedGrantStore;
    private IBackChannelLogoutService _backChannelLogoutService;
    private static String[] OnlyTokenTypes;
    public DefaultSessionManagementService(IServerSideTicketStore serverSideTicketStore, IServerSideSessionStore serverSideSessionStore, IPersistedGrantStore persistedGrantStore, IBackChannelLogoutService backChannelLogoutService);
    private static DefaultSessionManagementService();
    public sealed virtual Task`1<QueryResult`1<UserSession>> QuerySessionsAsync(SessionQuery filter, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultSessionManagementService/<RemoveSessionsAsync>d__7")]
public sealed virtual Task RemoveSessionsAsync(RemoveSessionsContext context, CancellationToken cancellationToken);
}
public class Duende.IdentityServer.Services.DefaultTokenCreationService : object {
    protected IKeyMaterialService Keys;
    protected ILogger Logger;
    protected IClock Clock;
    protected IdentityServerOptions Options;
    public DefaultTokenCreationService(IClock clock, IKeyMaterialService keys, IdentityServerOptions options, ILogger`1<DefaultTokenCreationService> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultTokenCreationService/<CreateTokenAsync>d__5")]
public virtual Task`1<string> CreateTokenAsync(Token token);
    protected virtual Task`1<string> CreatePayloadAsync(Token token);
    protected virtual Task`1<Dictionary`2<string, object>> CreateHeaderElementsAsync(Token token);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultTokenCreationService/<CreateJwtAsync>d__8")]
protected virtual Task`1<string> CreateJwtAsync(Token token, string payload, Dictionary`2<string, object> headerElements);
}
public class Duende.IdentityServer.Services.DefaultTokenService : object {
    protected ILogger Logger;
    protected IClaimsService ClaimsProvider;
    protected IReferenceTokenStore ReferenceTokenStore;
    protected ITokenCreationService CreationService;
    protected IClock Clock;
    protected IKeyMaterialService KeyMaterialService;
    protected IdentityServerOptions Options;
    public DefaultTokenService(IClaimsService claimsProvider, IReferenceTokenStore referenceTokenStore, ITokenCreationService creationService, IClock clock, IKeyMaterialService keyMaterialService, IdentityServerOptions options, ILogger`1<DefaultTokenService> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultTokenService/<CreateIdentityTokenAsync>d__8")]
public virtual Task`1<Token> CreateIdentityTokenAsync(TokenCreationRequest request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultTokenService/<CreateAccessTokenAsync>d__9")]
public virtual Task`1<Token> CreateAccessTokenAsync(TokenCreationRequest request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultTokenService/<CreateSecurityTokenAsync>d__10")]
public virtual Task`1<string> CreateSecurityTokenAsync(Token token);
}
public class Duende.IdentityServer.Services.DefaultUserCodeService : object {
    private IEnumerable`1<IUserCodeGenerator> _generators;
    public DefaultUserCodeService(IEnumerable`1<IUserCodeGenerator> generators);
    public sealed virtual Task`1<IUserCodeGenerator> GetGenerator(string userCodeType);
}
public class Duende.IdentityServer.Services.DefaultUserSession : object {
    protected IHttpContextAccessor HttpContextAccessor;
    protected IAuthenticationHandlerProvider Handlers;
    protected IdentityServerOptions Options;
    protected IClock Clock;
    protected IServerUrls Urls;
    protected ILogger Logger;
    protected ClaimsPrincipal Principal;
    protected AuthenticationProperties Properties;
    protected HttpContext HttpContext { get; }
    protected string CheckSessionCookieName { get; }
    protected string CheckSessionCookieDomain { get; }
    protected SameSiteMode CheckSessionCookieSameSiteMode { get; }
    public DefaultUserSession(IHttpContextAccessor httpContextAccessor, IAuthenticationHandlerProvider handlers, IdentityServerOptions options, IClock clock, IServerUrls urls, ILogger`1<IUserSession> logger);
    protected HttpContext get_HttpContext();
    protected string get_CheckSessionCookieName();
    protected string get_CheckSessionCookieDomain();
    protected SameSiteMode get_CheckSessionCookieSameSiteMode();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultUserSession/<AuthenticateAsync>d__17")]
protected virtual Task AuthenticateAsync();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultUserSession/<CreateSessionIdAsync>d__18")]
public virtual Task`1<string> CreateSessionIdAsync(ClaimsPrincipal principal, AuthenticationProperties properties);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultUserSession/<GetUserAsync>d__19")]
public virtual Task`1<ClaimsPrincipal> GetUserAsync();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultUserSession/<GetSessionIdAsync>d__20")]
public virtual Task`1<string> GetSessionIdAsync();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultUserSession/<EnsureSessionIdCookieAsync>d__21")]
public virtual Task EnsureSessionIdCookieAsync();
    public virtual Task RemoveSessionIdCookieAsync();
    public virtual CookieOptions CreateSessionIdCookieOptions();
    public virtual void IssueSessionIdCookie(string sid);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultUserSession/<AddClientIdAsync>d__25")]
public virtual Task AddClientIdAsync(string clientId);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultUserSession/<GetClientListAsync>d__26")]
public virtual Task`1<IEnumerable`1<string>> GetClientListAsync();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DefaultUserSession/<UpdateSessionCookie>d__27")]
private Task UpdateSessionCookie();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class Duende.IdentityServer.Services.DeserializedPushedAuthorizationRequest : object {
    [CompilerGeneratedAttribute]
private string <ReferenceValue>k__BackingField;
    [CompilerGeneratedAttribute]
private NameValueCollection <PushedParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ExpiresAtUtc>k__BackingField;
    [RequiredMemberAttribute]
public string ReferenceValue { get; public set; }
    [RequiredMemberAttribute]
public NameValueCollection PushedParameters { get; public set; }
    [RequiredMemberAttribute]
public DateTime ExpiresAtUtc { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ReferenceValue();
    [CompilerGeneratedAttribute]
public void set_ReferenceValue(string value);
    [CompilerGeneratedAttribute]
public NameValueCollection get_PushedParameters();
    [CompilerGeneratedAttribute]
public void set_PushedParameters(NameValueCollection value);
    [CompilerGeneratedAttribute]
public DateTime get_ExpiresAtUtc();
    [CompilerGeneratedAttribute]
public void set_ExpiresAtUtc(DateTime value);
}
public class Duende.IdentityServer.Services.DistributedBackchannelAuthenticationThrottlingService : object {
    private IDistributedCache _cache;
    private IClientStore _clientStore;
    private IClock _clock;
    private IdentityServerOptions _options;
    private static string KeyPrefix;
    public DistributedBackchannelAuthenticationThrottlingService(IDistributedCache cache, IClientStore clientStore, IClock clock, IdentityServerOptions options);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DistributedBackchannelAuthenticationThrottlingService/<ShouldSlowDown>d__6")]
public sealed virtual Task`1<bool> ShouldSlowDown(string requestId, BackChannelAuthenticationRequest details);
}
public class Duende.IdentityServer.Services.DistributedDeviceFlowThrottlingService : object {
    private IDistributedCache _cache;
    private IClientStore _clientStore;
    private IClock _clock;
    private IdentityServerOptions _options;
    private static string KeyPrefix;
    public DistributedDeviceFlowThrottlingService(IDistributedCache cache, IClientStore clientStore, IClock clock, IdentityServerOptions options);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.DistributedDeviceFlowThrottlingService/<ShouldSlowDown>d__6")]
public sealed virtual Task`1<bool> ShouldSlowDown(string deviceCode, DeviceCode details);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IBackchannelAuthenticationInteractionService {
    public abstract virtual Task`1<IEnumerable`1<BackchannelUserLoginRequest>> GetPendingLoginRequestsForCurrentUserAsync();
    public abstract virtual Task`1<BackchannelUserLoginRequest> GetLoginRequestByInternalIdAsync(string id);
    public abstract virtual Task CompleteLoginRequestAsync(CompleteBackchannelLoginRequest completionRequest);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IBackchannelAuthenticationThrottlingService {
    public abstract virtual Task`1<bool> ShouldSlowDown(string requestId, BackChannelAuthenticationRequest details);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IBackchannelAuthenticationUserNotificationService {
    public abstract virtual Task SendLoginRequestAsync(BackchannelUserLoginRequest request);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IBackChannelLogoutHttpClient {
    public abstract virtual Task PostAsync(string url, Dictionary`2<string, string> payload);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IBackChannelLogoutService {
    public abstract virtual Task SendLogoutNotificationsAsync(LogoutNotificationContext context);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.ICache`1 {
    public abstract virtual Task`1<T> GetAsync(string key);
    public abstract virtual Task`1<T> GetOrAddAsync(string key, TimeSpan duration, Func`1<Task`1<T>> get);
    public abstract virtual Task SetAsync(string key, T item, TimeSpan expiration);
    public abstract virtual Task RemoveAsync(string key);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IClaimsService {
    public abstract virtual Task`1<IEnumerable`1<Claim>> GetIdentityTokenClaimsAsync(ClaimsPrincipal subject, ResourceValidationResult resources, bool includeAllIdentityClaims, ValidatedRequest request);
    public abstract virtual Task`1<IEnumerable`1<Claim>> GetAccessTokenClaimsAsync(ClaimsPrincipal subject, ResourceValidationResult resources, ValidatedRequest request);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IConsentService {
    public abstract virtual Task`1<bool> RequiresConsentAsync(ClaimsPrincipal subject, Client client, IEnumerable`1<ParsedScopeValue> parsedScopes);
    public abstract virtual Task UpdateConsentAsync(ClaimsPrincipal subject, Client client, IEnumerable`1<ParsedScopeValue> parsedScopes);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IDeviceFlowCodeService {
    public abstract virtual Task`1<string> StoreDeviceAuthorizationAsync(string userCode, DeviceCode data);
    public abstract virtual Task`1<DeviceCode> FindByUserCodeAsync(string userCode);
    public abstract virtual Task`1<DeviceCode> FindByDeviceCodeAsync(string deviceCode);
    public abstract virtual Task UpdateByUserCodeAsync(string userCode, DeviceCode data);
    public abstract virtual Task RemoveByDeviceCodeAsync(string deviceCode);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IDeviceFlowInteractionService {
    public abstract virtual Task`1<DeviceFlowAuthorizationRequest> GetAuthorizationContextAsync(string userCode);
    public abstract virtual Task`1<DeviceFlowInteractionResult> HandleRequestAsync(string userCode, ConsentResponse consent);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IDeviceFlowThrottlingService {
    public abstract virtual Task`1<bool> ShouldSlowDown(string deviceCode, DeviceCode details);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IEventService {
    public abstract virtual Task RaiseAsync(Event evt);
    public abstract virtual bool CanRaiseEventType(EventTypes evtType);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IEventSink {
    public abstract virtual Task PersistAsync(Event evt);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IHandleGenerationService {
    public abstract virtual Task`1<string> GenerateAsync(int length);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IIdentityServerInteractionService {
    [NullableContextAttribute("2")]
public abstract virtual Task`1<AuthorizationRequest> GetAuthorizationContextAsync(string returnUrl);
    [NullableContextAttribute("2")]
public abstract virtual bool IsValidReturnUrl(string returnUrl);
    [NullableContextAttribute("2")]
public abstract virtual Task`1<ErrorMessage> GetErrorContextAsync(string errorId);
    public abstract virtual Task`1<LogoutRequest> GetLogoutContextAsync(string logoutId);
    public abstract virtual Task`1<string> CreateLogoutContextAsync();
    public abstract virtual Task GrantConsentAsync(AuthorizationRequest request, ConsentResponse consent, string subject);
    public abstract virtual Task DenyAuthorizationAsync(AuthorizationRequest request, AuthorizationError error, string errorDescription);
    public abstract virtual Task`1<IEnumerable`1<Grant>> GetAllUserGrantsAsync();
    public abstract virtual Task RevokeUserConsentAsync(string clientId);
    public abstract virtual Task RevokeTokensForCurrentSessionAsync();
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IIssuerNameService {
    public abstract virtual Task`1<string> GetCurrentAsync();
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IJwtRequestUriHttpClient {
    public abstract virtual Task`1<string> GetJwtAsync(string url, Client client);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IKeyMaterialService {
    public abstract virtual Task`1<IEnumerable`1<SecurityKeyInfo>> GetValidationKeysAsync();
    public abstract virtual Task`1<SigningCredentials> GetSigningCredentialsAsync(IEnumerable`1<string> allowedAlgorithms);
    public abstract virtual Task`1<IEnumerable`1<SigningCredentials>> GetAllSigningCredentialsAsync();
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.ILogoutNotificationService {
    public abstract virtual Task`1<IEnumerable`1<string>> GetFrontChannelLogoutNotificationsUrlsAsync(LogoutNotificationContext context);
    public abstract virtual Task`1<IEnumerable`1<BackChannelLogoutRequest>> GetBackChannelLogoutNotificationsAsync(LogoutNotificationContext context);
}
public class Duende.IdentityServer.Services.InMemoryCorsPolicyService : object {
    protected ILogger Logger;
    protected IEnumerable`1<Client> Clients;
    public InMemoryCorsPolicyService(ILogger`1<InMemoryCorsPolicyService> logger, IEnumerable`1<Client> clients);
    public virtual Task`1<bool> IsOriginAllowedAsync(string origin);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IPersistedGrantService {
    public abstract virtual Task`1<IEnumerable`1<Grant>> GetAllGrantsAsync(string subjectId);
    public abstract virtual Task RemoveAllGrantsAsync(string subjectId, string clientId, string sessionId);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IProfileService {
    public abstract virtual Task GetProfileDataAsync(ProfileDataRequestContext context);
    public abstract virtual Task IsActiveAsync(IsActiveContext context);
}
public interface Duende.IdentityServer.Services.IPushedAuthorizationSerializer {
    public abstract virtual NameValueCollection Deserialize(string parameters);
    public abstract virtual string Serialize(NameValueCollection raw);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IPushedAuthorizationService {
    public abstract virtual Task StoreAsync(DeserializedPushedAuthorizationRequest pushedAuthorizationRequest);
    public abstract virtual Task ConsumeAsync(string referenceValue);
    public abstract virtual Task`1<DeserializedPushedAuthorizationRequest> GetPushedAuthorizationRequestAsync(string referenceValue);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IRefreshTokenService {
    public abstract virtual Task`1<TokenValidationResult> ValidateRefreshTokenAsync(string token, Client client);
    public abstract virtual Task`1<string> CreateRefreshTokenAsync(RefreshTokenCreationRequest request);
    public abstract virtual Task`1<string> UpdateRefreshTokenAsync(RefreshTokenUpdateRequest request);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IReplayCache {
    public abstract virtual Task AddAsync(string purpose, string handle, DateTimeOffset expiration);
    public abstract virtual Task`1<bool> ExistsAsync(string purpose, string handle);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IReturnUrlParser {
    public abstract virtual Task`1<AuthorizationRequest> ParseAsync(string returnUrl);
    public abstract virtual bool IsValidReturnUrl(string returnUrl);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IServerUrls {
    public string Origin { get; public set; }
    [NullableAttribute("2")]
public string BasePath { get; public set; }
    public string BaseUrl { get; }
    public abstract virtual string get_Origin();
    public abstract virtual void set_Origin(string value);
    [NullableContextAttribute("2")]
public abstract virtual string get_BasePath();
    [NullableContextAttribute("2")]
public abstract virtual void set_BasePath(string value);
    public virtual string get_BaseUrl();
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.ISessionCoordinationService {
    public abstract virtual Task ProcessLogoutAsync(UserSession session);
    public abstract virtual Task ProcessExpirationAsync(UserSession session);
    public abstract virtual Task`1<bool> ValidateSessionAsync(SessionValidationRequest request);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.ISessionManagementService {
    public abstract virtual Task`1<QueryResult`1<UserSession>> QuerySessionsAsync(SessionQuery filter, CancellationToken cancellationToken);
    public abstract virtual Task RemoveSessionsAsync(RemoveSessionsContext context, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.ITokenCreationService {
    public abstract virtual Task`1<string> CreateTokenAsync(Token token);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.ITokenService {
    public abstract virtual Task`1<Token> CreateIdentityTokenAsync(TokenCreationRequest request);
    public abstract virtual Task`1<Token> CreateAccessTokenAsync(TokenCreationRequest request);
    public abstract virtual Task`1<string> CreateSecurityTokenAsync(Token token);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IUserCodeGenerator {
    public string UserCodeType { get; }
    public int RetryLimit { get; }
    public abstract virtual string get_UserCodeType();
    public abstract virtual int get_RetryLimit();
    public abstract virtual Task`1<string> GenerateAsync();
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IUserCodeService {
    public abstract virtual Task`1<IUserCodeGenerator> GetGenerator(string userCodeType);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Services.IUserSession {
    public abstract virtual Task`1<string> CreateSessionIdAsync(ClaimsPrincipal principal, AuthenticationProperties properties);
    public abstract virtual Task`1<ClaimsPrincipal> GetUserAsync();
    public abstract virtual Task`1<string> GetSessionIdAsync();
    public abstract virtual Task EnsureSessionIdCookieAsync();
    public abstract virtual Task RemoveSessionIdCookieAsync();
    public abstract virtual Task AddClientIdAsync(string clientId);
    public abstract virtual Task`1<IEnumerable`1<string>> GetClientListAsync();
}
public class Duende.IdentityServer.Services.KeyManagement.AutomaticKeyManagerKeyStore : object {
    private IKeyManager _keyManager;
    private KeyManagementOptions _options;
    public AutomaticKeyManagerKeyStore(IKeyManager keyManager, KeyManagementOptions options);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.KeyManagement.AutomaticKeyManagerKeyStore/<GetSigningCredentialsAsync>d__3")]
public sealed virtual Task`1<SigningCredentials> GetSigningCredentialsAsync();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.KeyManagement.AutomaticKeyManagerKeyStore/<GetAllSigningCredentialsAsync>d__4")]
public sealed virtual Task`1<IEnumerable`1<SigningCredentials>> GetAllSigningCredentialsAsync();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.KeyManagement.AutomaticKeyManagerKeyStore/<GetValidationKeysAsync>d__5")]
public sealed virtual Task`1<IEnumerable`1<SecurityKeyInfo>> GetValidationKeysAsync();
}
public class Duende.IdentityServer.Services.KeyManagement.ClientConfigurationValidator : DefaultClientConfigurationValidator {
    private KeyManagementOptions _keyManagerOptions;
    public ClientConfigurationValidator(IdentityServerOptions isOptions, KeyManagementOptions keyManagerOptions);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.KeyManagement.ClientConfigurationValidator/<ValidateLifetimesAsync>d__2")]
protected virtual Task ValidateLifetimesAsync(ClientConfigurationValidationContext context);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__0(ClientConfigurationValidationContext context);
}
public class Duende.IdentityServer.Services.KeyManagement.DataProtectionKeyProtector : object {
    private KeyManagementOptions _options;
    private IDataProtector _dataProtectionProvider;
    public DataProtectionKeyProtector(KeyManagementOptions options, IDataProtectionProvider dataProtectionProvider);
    public sealed virtual SerializedKey Protect(KeyContainer key);
    public sealed virtual KeyContainer Unprotect(SerializedKey key);
}
public class Duende.IdentityServer.Services.KeyManagement.EcKeyContainer : KeyContainer {
    [CompilerGeneratedAttribute]
private Byte[] <D>k__BackingField;
    [CompilerGeneratedAttribute]
private ECPoint <Q>k__BackingField;
    public Byte[] D { get; public set; }
    public ECPoint Q { get; public set; }
    public EcKeyContainer(ECDsaSecurityKey key, string algorithm, DateTime created);
    [CompilerGeneratedAttribute]
public Byte[] get_D();
    [CompilerGeneratedAttribute]
public void set_D(Byte[] value);
    [CompilerGeneratedAttribute]
public ECPoint get_Q();
    [CompilerGeneratedAttribute]
public void set_Q(ECPoint value);
    public virtual AsymmetricSecurityKey ToSecurityKey();
}
public class Duende.IdentityServer.Services.KeyManagement.FileSystemKeyStore : object {
    private static string KeyFilePrefix;
    private static string KeyFileExtension;
    private DirectoryInfo _directory;
    private ILogger`1<FileSystemKeyStore> _logger;
    public FileSystemKeyStore(string path, ILogger`1<FileSystemKeyStore> logger);
    public FileSystemKeyStore(DirectoryInfo directory, ILogger`1<FileSystemKeyStore> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.KeyManagement.FileSystemKeyStore/<LoadKeysAsync>d__6")]
public sealed virtual Task`1<IEnumerable`1<SerializedKey>> LoadKeysAsync();
    public sealed virtual Task StoreKeyAsync(SerializedKey key);
    public sealed virtual Task DeleteKeyAsync(string id);
}
public interface Duende.IdentityServer.Services.KeyManagement.IAutomaticKeyManagerKeyStore {
    public abstract virtual Task`1<IEnumerable`1<SigningCredentials>> GetAllSigningCredentialsAsync();
}
public interface Duende.IdentityServer.Services.KeyManagement.IKeyManager {
    public abstract virtual Task`1<IEnumerable`1<KeyContainer>> GetCurrentKeysAsync();
    public abstract virtual Task`1<IEnumerable`1<KeyContainer>> GetAllKeysAsync();
}
internal class Duende.IdentityServer.Services.KeyManagement.InMemoryKeyStoreCache : object {
    private IClock _clock;
    private object _lock;
    private DateTime _expires;
    private IEnumerable`1<KeyContainer> _cache;
    public InMemoryKeyStoreCache(IClock clock);
    public sealed virtual Task`1<IEnumerable`1<KeyContainer>> GetKeysAsync();
    public sealed virtual Task StoreKeysAsync(IEnumerable`1<KeyContainer> keys, TimeSpan duration);
}
public interface Duende.IdentityServer.Services.KeyManagement.ISigningKeyProtector {
    public abstract virtual SerializedKey Protect(KeyContainer key);
    public abstract virtual KeyContainer Unprotect(SerializedKey key);
}
public interface Duende.IdentityServer.Services.KeyManagement.ISigningKeyStoreCache {
    public abstract virtual Task`1<IEnumerable`1<KeyContainer>> GetKeysAsync();
    public abstract virtual Task StoreKeysAsync(IEnumerable`1<KeyContainer> keys, TimeSpan duration);
}
public abstract class Duende.IdentityServer.Services.KeyManagement.KeyContainer : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Algorithm>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasX509Certificate>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Created>k__BackingField;
    public string Id { get; public set; }
    public string Algorithm { get; public set; }
    public bool HasX509Certificate { get; public set; }
    public DateTime Created { get; public set; }
    public KeyContainer(string id, string algorithm, DateTime created);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Algorithm();
    [CompilerGeneratedAttribute]
public void set_Algorithm(string value);
    [CompilerGeneratedAttribute]
public bool get_HasX509Certificate();
    [CompilerGeneratedAttribute]
public void set_HasX509Certificate(bool value);
    [CompilerGeneratedAttribute]
public DateTime get_Created();
    [CompilerGeneratedAttribute]
public void set_Created(DateTime value);
    public abstract virtual AsymmetricSecurityKey ToSecurityKey();
}
public class Duende.IdentityServer.Services.KeyManagement.KeyManager : object {
    private IdentityServerOptions _options;
    private ISigningKeyStore _store;
    private ISigningKeyStoreCache _cache;
    private ISigningKeyProtector _protector;
    private IClock _clock;
    private IConcurrencyLock`1<KeyManager> _newKeyLock;
    private ILogger`1<KeyManager> _logger;
    private IIssuerNameService _issuerNameService;
    public KeyManager(IdentityServerOptions options, ISigningKeyStore store, ISigningKeyStoreCache cache, ISigningKeyProtector protector, IClock clock, IConcurrencyLock`1<KeyManager> newKeyLock, ILogger`1<KeyManager> logger, IIssuerNameService issuerNameService);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.KeyManagement.KeyManager/<GetCurrentKeysAsync>d__9")]
public sealed virtual Task`1<IEnumerable`1<KeyContainer>> GetCurrentKeysAsync();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.KeyManagement.KeyManager/<GetAllKeysAsync>d__10")]
public sealed virtual Task`1<IEnumerable`1<KeyContainer>> GetAllKeysAsync();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.KeyManagement.KeyManager/<GetAllKeysInternalAsync>d__11")]
internal Task`1<ValueTuple`2<IEnumerable`1<KeyContainer>, IEnumerable`1<KeyContainer>>> GetAllKeysInternalAsync();
    internal bool IsKeyRotationRequired(IEnumerable`1<KeyContainer> allKeys);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.KeyManagement.KeyManager/<CreateAndStoreNewKeyAsync>d__13")]
internal Task`1<KeyContainer> CreateAndStoreNewKeyAsync(SigningAlgorithmOptions alg);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.KeyManagement.KeyManager/<GetAllKeysFromCacheAsync>d__14")]
internal Task`1<IEnumerable`1<KeyContainer>> GetAllKeysFromCacheAsync();
    internal bool AreAllKeysWithinInitializationDuration(IEnumerable`1<KeyContainer> keys);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.KeyManagement.KeyManager/<FilterAndDeleteRetiredKeysAsync>d__16")]
internal Task`1<IEnumerable`1<KeyContainer>> FilterAndDeleteRetiredKeysAsync(IEnumerable`1<KeyContainer> keys);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.KeyManagement.KeyManager/<DeleteKeysAsync>d__17")]
internal Task DeleteKeysAsync(IEnumerable`1<string> keys);
    internal IEnumerable`1<KeyContainer> FilterExpiredKeys(IEnumerable`1<KeyContainer> keys);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.KeyManagement.KeyManager/<CacheKeysAsync>d__19")]
internal Task CacheKeysAsync(IEnumerable`1<KeyContainer> keys);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.KeyManagement.KeyManager/<GetAllKeysFromStoreAsync>d__20")]
internal Task`1<IEnumerable`1<KeyContainer>> GetAllKeysFromStoreAsync(bool cache);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.KeyManagement.KeyManager/<CreateNewKeysAndAddToCacheAsync>d__21")]
internal Task`1<ValueTuple`2<IEnumerable`1<KeyContainer>, IEnumerable`1<KeyContainer>>> CreateNewKeysAndAddToCacheAsync();
    internal bool TryGetAllCurrentSigningKeys(IEnumerable`1<KeyContainer> keys, IEnumerable`1& signingKeys);
    internal IEnumerable`1<KeyContainer> GetAllCurrentSigningKeys(IEnumerable`1<KeyContainer> allKeys);
    internal KeyContainer GetCurrentSigningKey(IEnumerable`1<KeyContainer> keys);
    internal KeyContainer GetCurrentSigningKeyInternal(IEnumerable`1<KeyContainer> keys, bool ignoreActivationDelay);
    internal bool CanBeUsedAsCurrentSigningKey(KeyContainer key, bool ignoreActiveDelay);
    [CompilerGeneratedAttribute]
private bool <IsKeyRotationRequired>b__12_1(IGrouping`2<string, KeyContainer> x);
    [CompilerGeneratedAttribute]
private bool <AreAllKeysWithinInitializationDuration>b__15_0(KeyContainer x);
    [CompilerGeneratedAttribute]
private bool <FilterAndDeleteRetiredKeysAsync>b__16_0(KeyContainer x);
    [CompilerGeneratedAttribute]
private bool <FilterExpiredKeys>b__18_0(KeyContainer x);
    [CompilerGeneratedAttribute]
private KeyContainer <GetAllKeysFromStoreAsync>b__20_0(SerializedKey x);
    [CompilerGeneratedAttribute]
private bool <GetAllKeysFromStoreAsync>b__20_2(KeyContainer x);
    [CompilerGeneratedAttribute]
private bool <TryGetAllCurrentSigningKeys>b__22_0(KeyContainer x);
}
internal static class Duende.IdentityServer.Services.KeyManagement.KeySerializer : object {
    private static JsonSerializerOptions _settings;
    private static KeySerializer();
    public static string Serialize(T item);
    public static T Deserialize(string json);
}
internal class Duende.IdentityServer.Services.KeyManagement.NopAutomaticKeyManagerKeyStore : object {
    public sealed virtual Task`1<SigningCredentials> GetSigningCredentialsAsync();
    public sealed virtual Task`1<IEnumerable`1<SigningCredentials>> GetAllSigningCredentialsAsync();
    public sealed virtual Task`1<IEnumerable`1<SecurityKeyInfo>> GetValidationKeysAsync();
}
internal class Duende.IdentityServer.Services.KeyManagement.NopKeyStoreCache : object {
    public sealed virtual Task`1<IEnumerable`1<KeyContainer>> GetKeysAsync();
    public sealed virtual Task StoreKeysAsync(IEnumerable`1<KeyContainer> keys, TimeSpan duration);
}
public class Duende.IdentityServer.Services.KeyManagement.RsaKeyContainer : KeyContainer {
    [CompilerGeneratedAttribute]
private RSAParameters <Parameters>k__BackingField;
    public RSAParameters Parameters { get; public set; }
    public RsaKeyContainer(RsaSecurityKey key, string algorithm, DateTime created);
    [CompilerGeneratedAttribute]
public RSAParameters get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(RSAParameters value);
    public virtual AsymmetricSecurityKey ToSecurityKey();
}
public class Duende.IdentityServer.Services.KeyManagement.X509KeyContainer : KeyContainer {
    private static string ServerAuthenticationOid;
    private X509Certificate2 _cert;
    [CompilerGeneratedAttribute]
private string <CertificateRawData>k__BackingField;
    public string CertificateRawData { get; public set; }
    public X509KeyContainer(RsaSecurityKey key, string algorithm, DateTime created, TimeSpan certAge, string issuer);
    public X509KeyContainer(ECDsaSecurityKey key, string algorithm, DateTime created, TimeSpan certAge, string issuer);
    [CompilerGeneratedAttribute]
public string get_CertificateRawData();
    [CompilerGeneratedAttribute]
public void set_CertificateRawData(string value);
    public virtual AsymmetricSecurityKey ToSecurityKey();
}
public class Duende.IdentityServer.Services.LogoutNotificationService : object {
    private IClientStore _clientStore;
    private IIssuerNameService _issuerNameService;
    private ILogger`1<LogoutNotificationService> _logger;
    public LogoutNotificationService(IClientStore clientStore, IIssuerNameService issuerNameService, ILogger`1<LogoutNotificationService> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.LogoutNotificationService/<GetFrontChannelLogoutNotificationsUrlsAsync>d__4")]
public sealed virtual Task`1<IEnumerable`1<string>> GetFrontChannelLogoutNotificationsUrlsAsync(LogoutNotificationContext context);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.LogoutNotificationService/<GetBackChannelLogoutNotificationsAsync>d__5")]
public sealed virtual Task`1<IEnumerable`1<BackChannelLogoutRequest>> GetBackChannelLogoutNotificationsAsync(LogoutNotificationContext context);
}
public class Duende.IdentityServer.Services.NopBackchannelAuthenticationUserNotificationService : object {
    private IIssuerNameService _issuerNameService;
    private ILogger`1<NopBackchannelAuthenticationUserNotificationService> _logger;
    public NopBackchannelAuthenticationUserNotificationService(IIssuerNameService issuerNameService, ILogger`1<NopBackchannelAuthenticationUserNotificationService> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.NopBackchannelAuthenticationUserNotificationService/<SendLoginRequestAsync>d__3")]
public sealed virtual Task SendLoginRequestAsync(BackchannelUserLoginRequest request);
}
public class Duende.IdentityServer.Services.NumericUserCodeGenerator : object {
    public string UserCodeType { get; }
    public int RetryLimit { get; }
    public sealed virtual string get_UserCodeType();
    public sealed virtual int get_RetryLimit();
    public sealed virtual Task`1<string> GenerateAsync();
}
internal class Duende.IdentityServer.Services.OidcReturnUrlParser : object {
    private IdentityServerOptions _options;
    private IAuthorizeRequestValidator _validator;
    private IUserSession _userSession;
    private IServerUrls _urls;
    private ILogger _logger;
    private IAuthorizationParametersMessageStore _authorizationParametersMessageStore;
    public OidcReturnUrlParser(IdentityServerOptions options, IAuthorizeRequestValidator validator, IUserSession userSession, IServerUrls urls, ILogger`1<OidcReturnUrlParser> logger, IAuthorizationParametersMessageStore authorizationParametersMessageStore);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.OidcReturnUrlParser/<ParseAsync>d__7")]
public sealed virtual Task`1<AuthorizationRequest> ParseAsync(string returnUrl);
    public sealed virtual bool IsValidReturnUrl(string returnUrl);
}
public class Duende.IdentityServer.Services.PushedAuthorizationSerializer : object {
    private IDataProtector _dataProtector;
    public PushedAuthorizationSerializer(IDataProtectionProvider dataProtectionProvider);
    public sealed virtual NameValueCollection Deserialize(string raw);
    public sealed virtual string Serialize(NameValueCollection raw);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Services.PushedAuthorizationService : object {
    private IPushedAuthorizationSerializer _serializer;
    private IPushedAuthorizationRequestStore _store;
    public PushedAuthorizationService(IPushedAuthorizationSerializer serializer, IPushedAuthorizationRequestStore store);
    public sealed virtual Task ConsumeAsync(string referenceValue);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.PushedAuthorizationService/<GetPushedAuthorizationRequestAsync>d__4")]
public sealed virtual Task`1<DeserializedPushedAuthorizationRequest> GetPushedAuthorizationRequestAsync(string referenceValue);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.PushedAuthorizationService/<StoreAsync>d__5")]
public sealed virtual Task StoreAsync(DeserializedPushedAuthorizationRequest request);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Services.RemoveSessionsContext : object {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionId>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <ClientIds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RemoveServerSideSession>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SendBackchannelLogoutNotification>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RevokeTokens>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RevokeConsents>k__BackingField;
    public string SubjectId { get; public set; }
    public string SessionId { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> ClientIds { get; public set; }
    public bool RemoveServerSideSession { get; public set; }
    public bool SendBackchannelLogoutNotification { get; public set; }
    public bool RevokeTokens { get; public set; }
    public bool RevokeConsents { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_SessionId();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SessionId(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ClientIds();
    [CompilerGeneratedAttribute]
public void set_ClientIds(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_RemoveServerSideSession();
    [CompilerGeneratedAttribute]
public void set_RemoveServerSideSession(bool value);
    [CompilerGeneratedAttribute]
public bool get_SendBackchannelLogoutNotification();
    [CompilerGeneratedAttribute]
public void set_SendBackchannelLogoutNotification(bool value);
    [CompilerGeneratedAttribute]
public bool get_RevokeTokens();
    [CompilerGeneratedAttribute]
public void set_RevokeTokens(bool value);
    [CompilerGeneratedAttribute]
public bool get_RevokeConsents();
    [CompilerGeneratedAttribute]
public void set_RevokeConsents(bool value);
}
public class Duende.IdentityServer.Services.ReturnUrlParser : object {
    private IEnumerable`1<IReturnUrlParser> _parsers;
    public ReturnUrlParser(IEnumerable`1<IReturnUrlParser> parsers);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.ReturnUrlParser/<ParseAsync>d__2")]
public virtual Task`1<AuthorizationRequest> ParseAsync(string returnUrl);
    public virtual bool IsValidReturnUrl(string returnUrl);
}
internal class Duende.IdentityServer.Services.ServerSideSessionRefreshTokenService : object {
    protected IRefreshTokenService Inner;
    protected ISessionCoordinationService SessionCoordinationService;
    private static TokenValidationResult TokenValidationError;
    public ServerSideSessionRefreshTokenService(Decorator`1<IRefreshTokenService> inner, ISessionCoordinationService sessionCoordinationService);
    private static ServerSideSessionRefreshTokenService();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Services.ServerSideSessionRefreshTokenService/<ValidateRefreshTokenAsync>d__4")]
public virtual Task`1<TokenValidationResult> ValidateRefreshTokenAsync(string tokenHandle, Client client);
    public sealed virtual Task`1<string> CreateRefreshTokenAsync(RefreshTokenCreationRequest request);
    public sealed virtual Task`1<string> UpdateRefreshTokenAsync(RefreshTokenUpdateRequest request);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Services.SessionValidationRequest : object {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionId>k__BackingField;
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private SessionValidationType <Type>k__BackingField;
    public string SubjectId { get; public set; }
    public string SessionId { get; public set; }
    public Client Client { get; public set; }
    public SessionValidationType Type { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_SessionId();
    [CompilerGeneratedAttribute]
public void set_SessionId(string value);
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
    [CompilerGeneratedAttribute]
public SessionValidationType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(SessionValidationType value);
}
public enum Duende.IdentityServer.Services.SessionValidationType : Enum {
    public int value__;
    public static SessionValidationType RefreshToken;
    public static SessionValidationType AccessToken;
}
public class Duende.IdentityServer.Stores.CachingClientStore`1 : object {
    private IdentityServerOptions _options;
    private ICache`1<Client> _cache;
    private IClientStore _inner;
    public CachingClientStore`1(IdentityServerOptions options, T inner, ICache`1<Client> cache);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.CachingClientStore`1/<FindClientByIdAsync>d__4")]
public sealed virtual Task`1<Client> FindClientByIdAsync(string clientId);
}
public class Duende.IdentityServer.Stores.CachingCorsPolicyService`1 : object {
    private IdentityServerOptions Options;
    private ICache`1<CorsCacheEntry<T>> CorsCache;
    private ICorsPolicyService Inner;
    public CachingCorsPolicyService`1(IdentityServerOptions options, T inner, ICache`1<CorsCacheEntry<T>> corsCache);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.CachingCorsPolicyService`1/<IsOriginAllowedAsync>d__5")]
public virtual Task`1<bool> IsOriginAllowedAsync(string origin);
}
public class Duende.IdentityServer.Stores.CachingResourceStore`1 : object {
    private static string AllKey;
    private IdentityServerOptions _options;
    private ICache`1<IdentityResource> _identityCache;
    private ICache`1<ApiScope> _apiScopeCache;
    private ICache`1<ApiResource> _apiResourceCache;
    private ICache`1<Resources> _allCache;
    private ICache`1<ApiResourceNames<T>> _apiResourceNames;
    private IResourceStore _inner;
    public CachingResourceStore`1(IdentityServerOptions options, T inner, ICache`1<IdentityResource> identityCache, ICache`1<ApiResource> apisCache, ICache`1<ApiScope> scopeCache, ICache`1<Resources> allCache, ICache`1<ApiResourceNames<T>> apiResourceNames);
    private string GetKey(IEnumerable`1<string> names);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.CachingResourceStore`1/<GetAllResourcesAsync>d__11")]
public sealed virtual Task`1<Resources> GetAllResourcesAsync();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.CachingResourceStore`1/<FindApiResourcesByScopeNameAsync>d__12")]
public sealed virtual Task`1<IEnumerable`1<ApiResource>> FindApiResourcesByScopeNameAsync(IEnumerable`1<string> scopeNames);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.CachingResourceStore`1/<FindApiResourcesByNameAsync>d__13")]
public sealed virtual Task`1<IEnumerable`1<ApiResource>> FindApiResourcesByNameAsync(IEnumerable`1<string> apiResourceNames);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.CachingResourceStore`1/<FindIdentityResourcesByScopeNameAsync>d__14")]
public sealed virtual Task`1<IEnumerable`1<IdentityResource>> FindIdentityResourcesByScopeNameAsync(IEnumerable`1<string> scopeNames);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.CachingResourceStore`1/<FindApiScopesByNameAsync>d__15")]
public sealed virtual Task`1<IEnumerable`1<ApiScope>> FindApiScopesByNameAsync(IEnumerable`1<string> scopeNames);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.CachingResourceStore`1/<FindItemsAsync>d__16`1")]
private Task`1<IEnumerable`1<TItem>> FindItemsAsync(IEnumerable`1<string> names, ICache`1<TItem> cache, Func`2<IEnumerable`1<string>, Task`1<Resources>> getResourcesFunc, Func`2<Resources, IEnumerable`1<TItem>> getFromResourcesFunc, Func`2<TItem, string> getNameFunc, string allCachePrefix);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Duende.IdentityServer.Stores.CachingResourceStore`1/<<GetAllResourcesAsync>b__11_0>d")]
[CompilerGeneratedAttribute]
private Task`1<Resources> <GetAllResourcesAsync>b__11_0();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.CachingResourceStore`1/<<FindApiResourcesByNameAsync>b__13_0>d")]
[CompilerGeneratedAttribute]
private Task`1<Resources> <FindApiResourcesByNameAsync>b__13_0(IEnumerable`1<string> names);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.CachingResourceStore`1/<<FindIdentityResourcesByScopeNameAsync>b__14_0>d")]
[CompilerGeneratedAttribute]
private Task`1<Resources> <FindIdentityResourcesByScopeNameAsync>b__14_0(IEnumerable`1<string> names);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.CachingResourceStore`1/<<FindApiScopesByNameAsync>b__15_0>d")]
[CompilerGeneratedAttribute]
private Task`1<Resources> <FindApiScopesByNameAsync>b__15_0(IEnumerable`1<string> names);
}
internal class Duende.IdentityServer.Stores.ConsentMessageStore : object {
    protected MessageCookie`1<ConsentResponse> Cookie;
    public ConsentMessageStore(MessageCookie`1<ConsentResponse> cookie);
    public virtual Task DeleteAsync(string id);
    public virtual Task`1<Message`1<ConsentResponse>> ReadAsync(string id);
    public virtual Task WriteAsync(string id, Message`1<ConsentResponse> message);
}
public class Duende.IdentityServer.Stores.Default.DistributedCacheAuthorizationParametersMessageStore : object {
    private IDistributedCache _distributedCache;
    private IHandleGenerationService _handleGenerationService;
    private string CacheKeyPrefix { get; }
    public DistributedCacheAuthorizationParametersMessageStore(IDistributedCache distributedCache, IHandleGenerationService handleGenerationService);
    private string get_CacheKeyPrefix();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.Default.DistributedCacheAuthorizationParametersMessageStore/<WriteAsync>d__5")]
public virtual Task`1<string> WriteAsync(Message`1<IDictionary`2<string, String[]>> message);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.Default.DistributedCacheAuthorizationParametersMessageStore/<ReadAsync>d__6")]
public virtual Task`1<Message`1<IDictionary`2<string, String[]>>> ReadAsync(string id);
    public virtual Task DeleteAsync(string id);
}
public class Duende.IdentityServer.Stores.DefaultAuthorizationCodeStore : DefaultGrantStore`1<AuthorizationCode> {
    public DefaultAuthorizationCodeStore(IPersistedGrantStore store, IPersistentGrantSerializer serializer, IHandleGenerationService handleGenerationService, ILogger`1<DefaultAuthorizationCodeStore> logger);
    public sealed virtual Task`1<string> StoreAuthorizationCodeAsync(AuthorizationCode code);
    public sealed virtual Task`1<AuthorizationCode> GetAuthorizationCodeAsync(string code);
    public sealed virtual Task RemoveAuthorizationCodeAsync(string code);
}
public class Duende.IdentityServer.Stores.DefaultBackChannelAuthenticationRequestStore : DefaultGrantStore`1<BackChannelAuthenticationRequest> {
    public DefaultBackChannelAuthenticationRequestStore(IPersistedGrantStore store, IPersistentGrantSerializer serializer, IHandleGenerationService handleGenerationService, ILogger`1<DefaultBackChannelAuthenticationRequestStore> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.DefaultBackChannelAuthenticationRequestStore/<CreateRequestAsync>d__1")]
public sealed virtual Task`1<string> CreateRequestAsync(BackChannelAuthenticationRequest request);
    public sealed virtual Task`1<BackChannelAuthenticationRequest> GetByInternalIdAsync(string id);
    public sealed virtual Task`1<BackChannelAuthenticationRequest> GetByAuthenticationRequestIdAsync(string requestId);
    public sealed virtual Task RemoveByInternalIdAsync(string requestId);
    public sealed virtual Task`1<IEnumerable`1<BackChannelAuthenticationRequest>> GetLoginsForUserAsync(string subjectId, string clientId);
    public sealed virtual Task UpdateByInternalIdAsync(string id, BackChannelAuthenticationRequest request);
}
public class Duende.IdentityServer.Stores.DefaultGrantStore`1 : object {
    [CompilerGeneratedAttribute]
private string <GrantType>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private IPersistedGrantStore <Store>k__BackingField;
    [CompilerGeneratedAttribute]
private IPersistentGrantSerializer <Serializer>k__BackingField;
    [CompilerGeneratedAttribute]
private IHandleGenerationService <HandleGenerationService>k__BackingField;
    private static string KeySeparator;
    protected static string HexEncodingFormatSuffix;
    protected string GrantType { get; }
    protected ILogger Logger { get; }
    protected IPersistedGrantStore Store { get; }
    protected IPersistentGrantSerializer Serializer { get; }
    protected IHandleGenerationService HandleGenerationService { get; }
    protected DefaultGrantStore`1(string grantType, IPersistedGrantStore store, IPersistentGrantSerializer serializer, IHandleGenerationService handleGenerationService, ILogger logger);
    [CompilerGeneratedAttribute]
protected string get_GrantType();
    [CompilerGeneratedAttribute]
protected ILogger get_Logger();
    [CompilerGeneratedAttribute]
protected IPersistedGrantStore get_Store();
    [CompilerGeneratedAttribute]
protected IPersistentGrantSerializer get_Serializer();
    [CompilerGeneratedAttribute]
protected IHandleGenerationService get_HandleGenerationService();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.DefaultGrantStore`1/<CreateHandleAsync>d__18")]
protected Task`1<string> CreateHandleAsync();
    protected virtual string GetHashedKey(string value);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.DefaultGrantStore`1/<GetItemAsync>d__20")]
protected virtual Task`1<T> GetItemAsync(string key);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.DefaultGrantStore`1/<GetItemByHashedKeyAsync>d__21")]
protected virtual Task`1<T> GetItemByHashedKeyAsync(string hashedKey);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.DefaultGrantStore`1/<GetAllAsync>d__22")]
protected virtual Task`1<IEnumerable`1<T>> GetAllAsync(PersistedGrantFilter filter);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.DefaultGrantStore`1/<CreateItemAsync>d__23")]
protected virtual Task`1<string> CreateItemAsync(T item, string clientId, string subjectId, string sessionId, string description, DateTime created, int lifetime);
    protected virtual Task StoreItemAsync(string key, T item, string clientId, string subjectId, string sessionId, string description, DateTime created, Nullable`1<DateTime> expiration, Nullable`1<DateTime> consumedTime);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.DefaultGrantStore`1/<StoreItemByHashedKeyAsync>d__25")]
protected virtual Task StoreItemByHashedKeyAsync(string hashedKey, T item, string clientId, string subjectId, string sessionId, string description, DateTime created, Nullable`1<DateTime> expiration, Nullable`1<DateTime> consumedTime);
    protected virtual Task RemoveItemAsync(string key);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.DefaultGrantStore`1/<RemoveItemByHashedKeyAsync>d__27")]
protected virtual Task RemoveItemByHashedKeyAsync(string key);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.DefaultGrantStore`1/<RemoveAllAsync>d__28")]
protected virtual Task RemoveAllAsync(string subjectId, string clientId, string sessionId);
    [CompilerGeneratedAttribute]
private T <GetAllAsync>b__22_0(PersistedGrant x);
}
public class Duende.IdentityServer.Stores.DefaultReferenceTokenStore : DefaultGrantStore`1<Token> {
    public DefaultReferenceTokenStore(IPersistedGrantStore store, IPersistentGrantSerializer serializer, IHandleGenerationService handleGenerationService, ILogger`1<DefaultReferenceTokenStore> logger);
    public sealed virtual Task`1<string> StoreReferenceTokenAsync(Token token);
    public sealed virtual Task`1<Token> GetReferenceTokenAsync(string handle);
    public sealed virtual Task RemoveReferenceTokenAsync(string handle);
    public sealed virtual Task RemoveReferenceTokensAsync(string subjectId, string clientId, string sessionId);
}
public class Duende.IdentityServer.Stores.DefaultRefreshTokenStore : DefaultGrantStore`1<RefreshToken> {
    public DefaultRefreshTokenStore(IPersistedGrantStore store, IPersistentGrantSerializer serializer, IHandleGenerationService handleGenerationService, ILogger`1<DefaultRefreshTokenStore> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.DefaultRefreshTokenStore/<StoreRefreshTokenAsync>d__1")]
public sealed virtual Task`1<string> StoreRefreshTokenAsync(RefreshToken refreshToken);
    public sealed virtual Task UpdateRefreshTokenAsync(string handle, RefreshToken refreshToken);
    public sealed virtual Task`1<RefreshToken> GetRefreshTokenAsync(string refreshTokenHandle);
    public sealed virtual Task RemoveRefreshTokenAsync(string refreshTokenHandle);
    public sealed virtual Task RemoveRefreshTokensAsync(string subjectId, string clientId);
}
public class Duende.IdentityServer.Stores.DefaultUserConsentStore : DefaultGrantStore`1<Consent> {
    public DefaultUserConsentStore(IPersistedGrantStore store, IPersistentGrantSerializer serializer, IHandleGenerationService handleGenerationService, ILogger`1<DefaultUserConsentStore> logger);
    private string GetConsentKey(string subjectId, string clientId, bool useHexEncoding);
    public sealed virtual Task StoreUserConsentAsync(Consent consent);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.DefaultUserConsentStore/<GetUserConsentAsync>d__3")]
public sealed virtual Task`1<Consent> GetUserConsentAsync(string subjectId, string clientId);
    public sealed virtual Task RemoveUserConsentAsync(string subjectId, string clientId);
}
internal class Duende.IdentityServer.Stores.Empty.EmptyClientStore : object {
    public sealed virtual Task`1<Client> FindClientByIdAsync(string clientId);
}
internal class Duende.IdentityServer.Stores.Empty.EmptyResourceStore : object {
    public sealed virtual Task`1<IEnumerable`1<ApiResource>> FindApiResourcesByNameAsync(IEnumerable`1<string> apiResourceNames);
    public sealed virtual Task`1<IEnumerable`1<ApiResource>> FindApiResourcesByScopeNameAsync(IEnumerable`1<string> scopeNames);
    public sealed virtual Task`1<IEnumerable`1<ApiScope>> FindApiScopesByNameAsync(IEnumerable`1<string> scopeNames);
    public sealed virtual Task`1<IEnumerable`1<IdentityResource>> FindIdentityResourcesByScopeNameAsync(IEnumerable`1<string> scopeNames);
    public sealed virtual Task`1<Resources> GetAllResourcesAsync();
}
public interface Duende.IdentityServer.Stores.IAuthorizationParametersMessageStore {
    public abstract virtual Task`1<string> WriteAsync(Message`1<IDictionary`2<string, String[]>> message);
    public abstract virtual Task`1<Message`1<IDictionary`2<string, String[]>>> ReadAsync(string id);
    public abstract virtual Task DeleteAsync(string id);
}
[ExtensionAttribute]
public static class Duende.IdentityServer.Stores.IClientStoreExtensions : object {
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.IClientStoreExtensions/<FindEnabledClientByIdAsync>d__0")]
[ExtensionAttribute]
public static Task`1<Client> FindEnabledClientByIdAsync(IClientStore store, string clientId);
}
public interface Duende.IdentityServer.Stores.IConsentMessageStore {
    public abstract virtual Task WriteAsync(string id, Message`1<ConsentResponse> message);
    public abstract virtual Task`1<Message`1<ConsentResponse>> ReadAsync(string id);
    public abstract virtual Task DeleteAsync(string id);
}
public interface Duende.IdentityServer.Stores.IMessageStore`1 {
    public abstract virtual Task`1<string> WriteAsync(Message`1<TModel> message);
    public abstract virtual Task`1<Message`1<TModel>> ReadAsync(string id);
}
public class Duende.IdentityServer.Stores.InMemoryClientStore : object {
    private IEnumerable`1<Client> _clients;
    public InMemoryClientStore(IEnumerable`1<Client> clients);
    public sealed virtual Task`1<Client> FindClientByIdAsync(string clientId);
}
public class Duende.IdentityServer.Stores.InMemoryDeviceFlowStore : object {
    private List`1<InMemoryDeviceAuthorization> _repository;
    public sealed virtual Task StoreDeviceAuthorizationAsync(string deviceCode, string userCode, DeviceCode data);
    public sealed virtual Task`1<DeviceCode> FindByUserCodeAsync(string userCode);
    public sealed virtual Task`1<DeviceCode> FindByDeviceCodeAsync(string deviceCode);
    public sealed virtual Task UpdateByUserCodeAsync(string userCode, DeviceCode data);
    public sealed virtual Task RemoveByDeviceCodeAsync(string deviceCode);
}
public class Duende.IdentityServer.Stores.InMemoryPersistedGrantStore : object {
    private ConcurrentDictionary`2<string, PersistedGrant> _repository;
    public sealed virtual Task StoreAsync(PersistedGrant grant);
    public sealed virtual Task`1<PersistedGrant> GetAsync(string key);
    public sealed virtual Task`1<IEnumerable`1<PersistedGrant>> GetAllAsync(PersistedGrantFilter filter);
    public sealed virtual Task RemoveAsync(string key);
    public sealed virtual Task RemoveAllAsync(PersistedGrantFilter filter);
    private IEnumerable`1<PersistedGrant> Filter(PersistedGrantFilter filter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Stores.InMemoryPushedAuthorizationRequestStore : object {
    private ConcurrentDictionary`2<string, PushedAuthorizationRequest> _repository;
    public sealed virtual Task StoreAsync(PushedAuthorizationRequest pushedAuthorizationRequest);
    public sealed virtual Task`1<PushedAuthorizationRequest> GetByHashAsync(string referenceValueHash);
    public sealed virtual Task ConsumeByHashAsync(string referenceValueHash);
}
public class Duende.IdentityServer.Stores.InMemoryResourcesStore : object {
    private IEnumerable`1<IdentityResource> _identityResources;
    private IEnumerable`1<ApiResource> _apiResources;
    private IEnumerable`1<ApiScope> _apiScopes;
    public InMemoryResourcesStore(IEnumerable`1<IdentityResource> identityResources, IEnumerable`1<ApiResource> apiResources, IEnumerable`1<ApiScope> apiScopes);
    public sealed virtual Task`1<Resources> GetAllResourcesAsync();
    public sealed virtual Task`1<IEnumerable`1<ApiResource>> FindApiResourcesByNameAsync(IEnumerable`1<string> apiResourceNames);
    public sealed virtual Task`1<IEnumerable`1<IdentityResource>> FindIdentityResourcesByScopeNameAsync(IEnumerable`1<string> scopeNames);
    public sealed virtual Task`1<IEnumerable`1<ApiResource>> FindApiResourcesByScopeNameAsync(IEnumerable`1<string> scopeNames);
    public sealed virtual Task`1<IEnumerable`1<ApiScope>> FindApiScopesByNameAsync(IEnumerable`1<string> scopeNames);
}
public class Duende.IdentityServer.Stores.InMemoryServerSideSessionStore : object {
    private ConcurrentDictionary`2<string, ServerSideSession> _store;
    public sealed virtual Task CreateSessionAsync(ServerSideSession session, CancellationToken cancellationToken);
    public sealed virtual Task`1<ServerSideSession> GetSessionAsync(string key, CancellationToken cancellationToken);
    public sealed virtual Task UpdateSessionAsync(ServerSideSession session, CancellationToken cancellationToken);
    public sealed virtual Task DeleteSessionAsync(string key, CancellationToken cancellationToken);
    public sealed virtual Task`1<IReadOnlyCollection`1<ServerSideSession>> GetSessionsAsync(SessionFilter filter, CancellationToken cancellationToken);
    public sealed virtual Task DeleteSessionsAsync(SessionFilter filter, CancellationToken cancellationToken);
    public sealed virtual Task`1<IReadOnlyCollection`1<ServerSideSession>> GetAndRemoveExpiredSessionsAsync(int count, CancellationToken cancellationToken);
    public sealed virtual Task`1<QueryResult`1<ServerSideSession>> QuerySessionsAsync(SessionQuery filter, CancellationToken cancellationToken);
}
public class Duende.IdentityServer.Stores.InMemorySigningCredentialsStore : object {
    private SigningCredentials _credential;
    public InMemorySigningCredentialsStore(SigningCredentials credential);
    public sealed virtual Task`1<SigningCredentials> GetSigningCredentialsAsync();
}
public class Duende.IdentityServer.Stores.InMemoryValidationKeysStore : object {
    private IEnumerable`1<SecurityKeyInfo> _keys;
    public InMemoryValidationKeysStore(IEnumerable`1<SecurityKeyInfo> keys);
    public sealed virtual Task`1<IEnumerable`1<SecurityKeyInfo>> GetValidationKeysAsync();
}
[ExtensionAttribute]
public static class Duende.IdentityServer.Stores.IResourceStoreExtensions : object {
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.IResourceStoreExtensions/<FindResourcesByScopeAsync>d__0")]
[ExtensionAttribute]
public static Task`1<Resources> FindResourcesByScopeAsync(IResourceStore store, IEnumerable`1<string> scopeNames);
    private static void ValidateNameUniqueness(IEnumerable`1<IdentityResource> identity, IEnumerable`1<ApiResource> apiResources, IEnumerable`1<ApiScope> apiScopes);
    private static IEnumerable`1<string> GetDuplicates(IEnumerable`1<string> names);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.IResourceStoreExtensions/<FindEnabledResourcesByScopeAsync>d__3")]
[ExtensionAttribute]
public static Task`1<Resources> FindEnabledResourcesByScopeAsync(IResourceStore store, IEnumerable`1<string> scopeNames);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.IResourceStoreExtensions/<GetAllEnabledResourcesAsync>d__4")]
[ExtensionAttribute]
public static Task`1<Resources> GetAllEnabledResourcesAsync(IResourceStore store);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.IResourceStoreExtensions/<FindEnabledIdentityResourcesByScopeAsync>d__5")]
[ExtensionAttribute]
public static Task`1<IEnumerable`1<IdentityResource>> FindEnabledIdentityResourcesByScopeAsync(IResourceStore store, IEnumerable`1<string> scopeNames);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.IResourceStoreExtensions/<FindEnabledApiResourcesByNameAsync>d__6")]
[ExtensionAttribute]
public static Task`1<IEnumerable`1<ApiResource>> FindEnabledApiResourcesByNameAsync(IResourceStore store, IEnumerable`1<string> resourceNames);
}
public interface Duende.IdentityServer.Stores.IServerSideTicketStore {
    public abstract virtual Task`1<IReadOnlyCollection`1<UserSession>> GetSessionsAsync(SessionFilter filter, CancellationToken cancellationToken);
    public abstract virtual Task`1<QueryResult`1<UserSession>> QuerySessionsAsync(SessionQuery filter, CancellationToken cancellationToken);
    public abstract virtual Task`1<IReadOnlyCollection`1<UserSession>> GetAndRemoveExpiredSessionsAsync(int count, CancellationToken cancellationToken);
}
public interface Duende.IdentityServer.Stores.ISigningCredentialStore {
    public abstract virtual Task`1<SigningCredentials> GetSigningCredentialsAsync();
}
public interface Duende.IdentityServer.Stores.IValidationKeysStore {
    public abstract virtual Task`1<IEnumerable`1<SecurityKeyInfo>> GetValidationKeysAsync();
}
public class Duende.IdentityServer.Stores.ProtectedDataMessageStore`1 : object {
    private static string Purpose;
    protected IDataProtector Protector;
    protected ILogger Logger;
    public ProtectedDataMessageStore`1(IDataProtectionProvider provider, ILogger`1<ProtectedDataMessageStore`1<TModel>> logger);
    public virtual Task`1<Message`1<TModel>> ReadAsync(string value);
    public virtual Task`1<string> WriteAsync(Message`1<TModel> message);
}
internal class Duende.IdentityServer.Stores.QueryStringAuthorizationParametersMessageStore : object {
    public sealed virtual Task`1<string> WriteAsync(Message`1<IDictionary`2<string, String[]>> message);
    public sealed virtual Task`1<Message`1<IDictionary`2<string, String[]>>> ReadAsync(string id);
    public sealed virtual Task DeleteAsync(string id);
}
public class Duende.IdentityServer.Stores.ServerSideTicketStore : object {
    private IdentityServerOptions _options;
    private IIssuerNameService _issuerNameService;
    private IServerSideSessionStore _store;
    private IDataProtector _protector;
    private ILogger`1<ServerSideTicketStore> _logger;
    public ServerSideTicketStore(IdentityServerOptions options, IIssuerNameService issuerNameService, IServerSideSessionStore store, IDataProtectionProvider dataProtectionProvider, ILogger`1<ServerSideTicketStore> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.ServerSideTicketStore/<StoreAsync>d__6")]
public sealed virtual Task`1<string> StoreAsync(AuthenticationTicket ticket);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.ServerSideTicketStore/<CreateNewSessionAsync>d__7")]
private Task CreateNewSessionAsync(string key, AuthenticationTicket ticket);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.ServerSideTicketStore/<RetrieveAsync>d__8")]
public sealed virtual Task`1<AuthenticationTicket> RetrieveAsync(string key);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.ServerSideTicketStore/<RenewAsync>d__9")]
public sealed virtual Task RenewAsync(string key, AuthenticationTicket ticket);
    public sealed virtual Task RemoveAsync(string key);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.ServerSideTicketStore/<GetSessionsAsync>d__11")]
public sealed virtual Task`1<IReadOnlyCollection`1<UserSession>> GetSessionsAsync(SessionFilter filter, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.ServerSideTicketStore/<QuerySessionsAsync>d__12")]
public sealed virtual Task`1<QueryResult`1<UserSession>> QuerySessionsAsync(SessionQuery filter, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.ServerSideTicketStore/<GetAndRemoveExpiredSessionsAsync>d__13")]
public sealed virtual Task`1<IReadOnlyCollection`1<UserSession>> GetAndRemoveExpiredSessionsAsync(int count, CancellationToken cancellationToken);
    private UserSession[] AsUserSessions(IEnumerable`1<ServerSideSession> sessions);
    [CompilerGeneratedAttribute]
private <>f__AnonymousType3`2<DateTime, AuthenticationTicket> <AsUserSessions>b__14_0(ServerSideSession x);
    [CompilerGeneratedAttribute]
private UserSession <AsUserSessions>b__14_2(<>f__AnonymousType3`2<DateTime, AuthenticationTicket> item);
}
public class Duende.IdentityServer.Stores.ValidatingClientStore`1 : object {
    private IClientStore _inner;
    private IClientConfigurationValidator _validator;
    private IEventService _events;
    private ILogger`1<ValidatingClientStore`1<T>> _logger;
    private string _validatorType;
    public ValidatingClientStore`1(T inner, IClientConfigurationValidator validator, IEventService events, ILogger`1<ValidatingClientStore`1<T>> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Stores.ValidatingClientStore`1/<FindClientByIdAsync>d__6")]
public sealed virtual Task`1<Client> FindClientByIdAsync(string clientId);
}
public static class Duende.IdentityServer.Telemetry : object {
    private static string ServiceVersion;
    public static string ServiceName;
    public static string ServiceNameExperimental;
    private static Telemetry();
}
public class Duende.IdentityServer.Test.TestUser : object {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProviderName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProviderSubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsActive>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<Claim> <Claims>k__BackingField;
    public string SubjectId { get; public set; }
    public string Username { get; public set; }
    public string Password { get; public set; }
    public string ProviderName { get; public set; }
    public string ProviderSubjectId { get; public set; }
    public bool IsActive { get; public set; }
    public ICollection`1<Claim> Claims { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public string get_ProviderName();
    [CompilerGeneratedAttribute]
public void set_ProviderName(string value);
    [CompilerGeneratedAttribute]
public string get_ProviderSubjectId();
    [CompilerGeneratedAttribute]
public void set_ProviderSubjectId(string value);
    [CompilerGeneratedAttribute]
public bool get_IsActive();
    [CompilerGeneratedAttribute]
public void set_IsActive(bool value);
    [CompilerGeneratedAttribute]
public ICollection`1<Claim> get_Claims();
    [CompilerGeneratedAttribute]
public void set_Claims(ICollection`1<Claim> value);
}
public class Duende.IdentityServer.Test.TestUserProfileService : object {
    protected ILogger Logger;
    protected TestUserStore Users;
    public TestUserProfileService(TestUserStore users, ILogger`1<TestUserProfileService> logger);
    public virtual Task GetProfileDataAsync(ProfileDataRequestContext context);
    public virtual Task IsActiveAsync(IsActiveContext context);
}
public class Duende.IdentityServer.Test.TestUserResourceOwnerPasswordValidator : object {
    private TestUserStore _users;
    private IClock _clock;
    public TestUserResourceOwnerPasswordValidator(TestUserStore users, IClock clock);
    public sealed virtual Task ValidateAsync(ResourceOwnerPasswordValidationContext context);
}
public class Duende.IdentityServer.Test.TestUserStore : object {
    private List`1<TestUser> _users;
    public TestUserStore(List`1<TestUser> users);
    public bool ValidateCredentials(string username, string password);
    public TestUser FindBySubjectId(string subjectId);
    public TestUser FindByUsername(string username);
    public TestUser FindByExternalProvider(string provider, string userId);
    public TestUser AutoProvisionUser(string provider, string userId, List`1<Claim> claims);
    public TestUser CreateUser(string username, string password, string name, string email);
}
internal static class Duende.IdentityServer.Tracing : object {
    private static Version AssemblyVersion;
    [CompilerGeneratedAttribute]
private static ActivitySource <BasicActivitySource>k__BackingField;
    [CompilerGeneratedAttribute]
private static ActivitySource <StoreActivitySource>k__BackingField;
    [CompilerGeneratedAttribute]
private static ActivitySource <CacheActivitySource>k__BackingField;
    [CompilerGeneratedAttribute]
private static ActivitySource <ServiceActivitySource>k__BackingField;
    [CompilerGeneratedAttribute]
private static ActivitySource <ValidationActivitySource>k__BackingField;
    public static ActivitySource BasicActivitySource { get; }
    public static ActivitySource StoreActivitySource { get; }
    public static ActivitySource CacheActivitySource { get; }
    public static ActivitySource ServiceActivitySource { get; }
    public static ActivitySource ValidationActivitySource { get; }
    public static string ServiceVersion { get; }
    private static Tracing();
    [CompilerGeneratedAttribute]
public static ActivitySource get_BasicActivitySource();
    [CompilerGeneratedAttribute]
public static ActivitySource get_StoreActivitySource();
    [CompilerGeneratedAttribute]
public static ActivitySource get_CacheActivitySource();
    [CompilerGeneratedAttribute]
public static ActivitySource get_ServiceActivitySource();
    [CompilerGeneratedAttribute]
public static ActivitySource get_ValidationActivitySource();
    public static string get_ServiceVersion();
}
public class Duende.IdentityServer.Validation.ApiSecretValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private ApiResource <Resource>k__BackingField;
    public ApiResource Resource { get; public set; }
    [CompilerGeneratedAttribute]
public ApiResource get_Resource();
    [CompilerGeneratedAttribute]
public void set_Resource(ApiResource value);
}
public class Duende.IdentityServer.Validation.ApiSecretValidator : object {
    private ILogger _logger;
    private IResourceStore _resources;
    private IEventService _events;
    private ISecretsListParser _parser;
    private ISecretsListValidator _validator;
    public ApiSecretValidator(IResourceStore resources, ISecretsListParser parsers, ISecretsListValidator validator, IEventService events, ILogger`1<ApiSecretValidator> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.ApiSecretValidator/<ValidateAsync>d__6")]
public sealed virtual Task`1<ApiSecretValidationResult> ValidateAsync(HttpContext context);
    private Task RaiseSuccessEventAsync(string clientId, string authMethod);
    private Task RaiseFailureEventAsync(string clientId, string message);
}
public enum Duende.IdentityServer.Validation.AuthorizeRequestType : Enum {
    public int value__;
    public static AuthorizeRequestType Authorize;
    public static AuthorizeRequestType PushedAuthorization;
    public static AuthorizeRequestType AuthorizeWithPushedParameters;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.AuthorizeRequestValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private ValidatedAuthorizeRequest <ValidatedRequest>k__BackingField;
    public ValidatedAuthorizeRequest ValidatedRequest { get; }
    public AuthorizeRequestValidationResult(ValidatedAuthorizeRequest request);
    public AuthorizeRequestValidationResult(ValidatedAuthorizeRequest request, string error, string errorDescription);
    [CompilerGeneratedAttribute]
public ValidatedAuthorizeRequest get_ValidatedRequest();
}
internal class Duende.IdentityServer.Validation.AuthorizeRequestValidator : object {
    private IdentityServerOptions _options;
    private IIssuerNameService _issuerNameService;
    private IClientStore _clients;
    private ICustomAuthorizeRequestValidator _customValidator;
    private IRedirectUriValidator _uriValidator;
    private IResourceValidator _resourceValidator;
    private IUserSession _userSession;
    private IRequestObjectValidator _requestObjectValidator;
    private ILogger _logger;
    private ResponseTypeEqualityComparer _responseTypeEqualityComparer;
    public AuthorizeRequestValidator(IdentityServerOptions options, IIssuerNameService issuerNameService, IClientStore clients, ICustomAuthorizeRequestValidator customValidator, IRedirectUriValidator uriValidator, IResourceValidator resourceValidator, IUserSession userSession, IRequestObjectValidator requestObjectValidator, ILogger`1<AuthorizeRequestValidator> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.AuthorizeRequestValidator/<ValidateAsync>d__11")]
public sealed virtual Task`1<AuthorizeRequestValidationResult> ValidateAsync(NameValueCollection parameters, ClaimsPrincipal subject, AuthorizeRequestType authorizeRequestType);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.AuthorizeRequestValidator/<LoadClientAsync>d__12")]
private Task`1<AuthorizeRequestValidationResult> LoadClientAsync(ValidatedAuthorizeRequest request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.AuthorizeRequestValidator/<ValidateClientAsync>d__13")]
private Task`1<AuthorizeRequestValidationResult> ValidateClientAsync(ValidatedAuthorizeRequest request);
    private AuthorizeRequestValidationResult ValidateCoreParameters(ValidatedAuthorizeRequest request);
    private AuthorizeRequestValidationResult ValidatePkceParameters(ValidatedAuthorizeRequest request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.AuthorizeRequestValidator/<ValidateScopeAndResourceAsync>d__16")]
private Task`1<AuthorizeRequestValidationResult> ValidateScopeAndResourceAsync(ValidatedAuthorizeRequest request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.AuthorizeRequestValidator/<ValidateOptionalParametersAsync>d__17")]
private Task`1<AuthorizeRequestValidationResult> ValidateOptionalParametersAsync(ValidatedAuthorizeRequest request);
    private AuthorizeRequestValidationResult Invalid(ValidatedAuthorizeRequest request, string error, string description);
    private AuthorizeRequestValidationResult Valid(ValidatedAuthorizeRequest request);
    private void LogError(string message, ValidatedAuthorizeRequest request);
    private void LogError(string message, string detail, ValidatedAuthorizeRequest request);
    [CompilerGeneratedAttribute]
private bool <ValidateScopeAndResourceAsync>b__16_0(string x);
    [CompilerGeneratedAttribute]
private bool <ValidateOptionalParametersAsync>b__17_0(string p);
    [CompilerGeneratedAttribute]
private bool <ValidateOptionalParametersAsync>b__17_1(string p);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.BackchannelAuthenticationRequestIdValidationContext : object {
    [CompilerGeneratedAttribute]
private string <AuthenticationRequestId>k__BackingField;
    [CompilerGeneratedAttribute]
private ValidatedTokenRequest <Request>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private TokenRequestValidationResult <Result>k__BackingField;
    public string AuthenticationRequestId { get; public set; }
    public ValidatedTokenRequest Request { get; public set; }
    [NullableAttribute("2")]
public TokenRequestValidationResult Result { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AuthenticationRequestId();
    [CompilerGeneratedAttribute]
public void set_AuthenticationRequestId(string value);
    [CompilerGeneratedAttribute]
public ValidatedTokenRequest get_Request();
    [CompilerGeneratedAttribute]
public void set_Request(ValidatedTokenRequest value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public TokenRequestValidationResult get_Result();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Result(TokenRequestValidationResult value);
}
internal class Duende.IdentityServer.Validation.BackchannelAuthenticationRequestIdValidator : object {
    private IBackChannelAuthenticationRequestStore _backchannelAuthenticationStore;
    private IProfileService _profile;
    private IBackchannelAuthenticationThrottlingService _throttlingService;
    private IClock _systemClock;
    private ILogger`1<BackchannelAuthenticationRequestIdValidator> _logger;
    public BackchannelAuthenticationRequestIdValidator(IBackChannelAuthenticationRequestStore backchannelAuthenticationStore, IProfileService profile, IBackchannelAuthenticationThrottlingService throttlingService, IClock systemClock, ILogger`1<BackchannelAuthenticationRequestIdValidator> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.BackchannelAuthenticationRequestIdValidator/<ValidateAsync>d__6")]
public sealed virtual Task ValidateAsync(BackchannelAuthenticationRequestIdValidationContext context);
}
public class Duende.IdentityServer.Validation.BackchannelAuthenticationRequestValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private ValidatedBackchannelAuthenticationRequest <ValidatedRequest>k__BackingField;
    public ValidatedBackchannelAuthenticationRequest ValidatedRequest { get; }
    public BackchannelAuthenticationRequestValidationResult(ValidatedBackchannelAuthenticationRequest validatedRequest);
    public BackchannelAuthenticationRequestValidationResult(ValidatedBackchannelAuthenticationRequest validatedRequest, string error, string errorDescription);
    [CompilerGeneratedAttribute]
public ValidatedBackchannelAuthenticationRequest get_ValidatedRequest();
}
internal class Duende.IdentityServer.Validation.BackchannelAuthenticationRequestValidator : object {
    private IdentityServerOptions _options;
    private IResourceValidator _resourceValidator;
    private ITokenValidator _tokenValidator;
    private IBackchannelAuthenticationUserValidator _backchannelAuthenticationUserValidator;
    private IJwtRequestValidator _jwtRequestValidator;
    private ICustomBackchannelAuthenticationValidator _customValidator;
    private ILogger`1<BackchannelAuthenticationRequestValidator> _logger;
    private ValidatedBackchannelAuthenticationRequest _validatedRequest;
    public BackchannelAuthenticationRequestValidator(IdentityServerOptions options, IResourceValidator resourceValidator, ITokenValidator tokenValidator, IBackchannelAuthenticationUserValidator backchannelAuthenticationUserValidator, IJwtRequestValidator jwtRequestValidator, ICustomBackchannelAuthenticationValidator customValidator, ILogger`1<BackchannelAuthenticationRequestValidator> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.BackchannelAuthenticationRequestValidator/<ValidateRequestAsync>d__9")]
public sealed virtual Task`1<BackchannelAuthenticationRequestValidationResult> ValidateRequestAsync(NameValueCollection parameters, ClientSecretValidationResult clientValidationResult);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.BackchannelAuthenticationRequestValidator/<TryValidateRequestObjectAsync>d__10")]
private Task`1<ValueTuple`2<bool, BackchannelAuthenticationRequestValidationResult>> TryValidateRequestObjectAsync();
    private BackchannelAuthenticationRequestValidationResult Invalid(string error, string errorDescription);
    private void LogError(string message, object values);
    private void LogWithRequestDetails(LogLevel logLevel, string message, object values);
    private void LogSuccess();
    [CompilerGeneratedAttribute]
private bool <ValidateRequestAsync>b__9_0(string x);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.BackchannelAuthenticationUserValidationResult : object {
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Subject>k__BackingField;
    public bool IsError { get; }
    public string Error { get; public set; }
    public string ErrorDescription { get; public set; }
    public ClaimsPrincipal Subject { get; public set; }
    public bool get_IsError();
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(ClaimsPrincipal value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.BackchannelAuthenticationUserValidatorContext : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LoginHintToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdTokenHint>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<Claim> <IdTokenHintClaims>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LoginHint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BindingMessage>k__BackingField;
    [NullableAttribute("1")]
public Client Client { get; public set; }
    public string LoginHintToken { get; public set; }
    public string IdTokenHint { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<Claim> IdTokenHintClaims { get; public set; }
    public string LoginHint { get; public set; }
    public string UserCode { get; public set; }
    public string BindingMessage { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Client get_Client();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Client(Client value);
    [CompilerGeneratedAttribute]
public string get_LoginHintToken();
    [CompilerGeneratedAttribute]
public void set_LoginHintToken(string value);
    [CompilerGeneratedAttribute]
public string get_IdTokenHint();
    [CompilerGeneratedAttribute]
public void set_IdTokenHint(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<Claim> get_IdTokenHintClaims();
    [CompilerGeneratedAttribute]
public void set_IdTokenHintClaims(IEnumerable`1<Claim> value);
    [CompilerGeneratedAttribute]
public string get_LoginHint();
    [CompilerGeneratedAttribute]
public void set_LoginHint(string value);
    [CompilerGeneratedAttribute]
public string get_UserCode();
    [CompilerGeneratedAttribute]
public void set_UserCode(string value);
    [CompilerGeneratedAttribute]
public string get_BindingMessage();
    [CompilerGeneratedAttribute]
public void set_BindingMessage(string value);
}
public class Duende.IdentityServer.Validation.BasicAuthenticationSecretParser : object {
    private ILogger _logger;
    private IdentityServerOptions _options;
    public string AuthenticationMethod { get; }
    public BasicAuthenticationSecretParser(IdentityServerOptions options, ILogger`1<BasicAuthenticationSecretParser> logger);
    public sealed virtual string get_AuthenticationMethod();
    public sealed virtual Task`1<ParsedSecret> ParseAsync(HttpContext context);
    private string UrlDecode(string value);
}
public enum Duende.IdentityServer.Validation.BearerTokenUsageType : Enum {
    public int value__;
    public static BearerTokenUsageType AuthorizationHeader;
    public static BearerTokenUsageType PostBody;
    public static BearerTokenUsageType QueryString;
}
public class Duende.IdentityServer.Validation.BearerTokenUsageValidationResult : object {
    [CompilerGeneratedAttribute]
private bool <TokenFound>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private BearerTokenUsageType <UsageType>k__BackingField;
    public bool TokenFound { get; public set; }
    public string Token { get; public set; }
    public BearerTokenUsageType UsageType { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_TokenFound();
    [CompilerGeneratedAttribute]
public void set_TokenFound(bool value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    [CompilerGeneratedAttribute]
public BearerTokenUsageType get_UsageType();
    [CompilerGeneratedAttribute]
public void set_UsageType(BearerTokenUsageType value);
}
internal class Duende.IdentityServer.Validation.BearerTokenUsageValidator : object {
    private ILogger _logger;
    public BearerTokenUsageValidator(ILogger`1<BearerTokenUsageValidator> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.BearerTokenUsageValidator/<ValidateAsync>d__2")]
public Task`1<BearerTokenUsageValidationResult> ValidateAsync(HttpContext context);
    public BearerTokenUsageValidationResult ValidateAuthorizationHeader(HttpContext context);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.BearerTokenUsageValidator/<ValidatePostBodyAsync>d__4")]
public Task`1<BearerTokenUsageValidationResult> ValidatePostBodyAsync(HttpContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.ClientConfigurationValidationContext : object {
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsValid>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    public Client Client { get; }
    public bool IsValid { get; public set; }
    [NullableAttribute("2")]
public string ErrorMessage { get; public set; }
    public ClientConfigurationValidationContext(Client client);
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public bool get_IsValid();
    [CompilerGeneratedAttribute]
public void set_IsValid(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_ErrorMessage(string value);
    public void SetError(string message);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.ClientSecretValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private ParsedSecret <Secret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Confirmation>k__BackingField;
    public Client Client { get; public set; }
    public ParsedSecret Secret { get; public set; }
    public string Confirmation { get; public set; }
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
    [CompilerGeneratedAttribute]
public ParsedSecret get_Secret();
    [CompilerGeneratedAttribute]
public void set_Secret(ParsedSecret value);
    [CompilerGeneratedAttribute]
public string get_Confirmation();
    [CompilerGeneratedAttribute]
public void set_Confirmation(string value);
}
public class Duende.IdentityServer.Validation.ClientSecretValidator : object {
    private ILogger _logger;
    private IClientStore _clients;
    private IEventService _events;
    private ISecretsListValidator _validator;
    private ISecretsListParser _parser;
    public ClientSecretValidator(IClientStore clients, ISecretsListParser parser, ISecretsListValidator validator, IEventService events, ILogger`1<ClientSecretValidator> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.ClientSecretValidator/<ValidateAsync>d__6")]
public sealed virtual Task`1<ClientSecretValidationResult> ValidateAsync(HttpContext context);
    private Task RaiseSuccessEventAsync(string clientId, string authMethod);
    private Task RaiseFailureEventAsync(string clientId, string message);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.CustomAuthorizeRequestValidationContext : object {
    [CompilerGeneratedAttribute]
private AuthorizeRequestValidationResult <Result>k__BackingField;
    public AuthorizeRequestValidationResult Result { get; public set; }
    [CompilerGeneratedAttribute]
public AuthorizeRequestValidationResult get_Result();
    [CompilerGeneratedAttribute]
public void set_Result(AuthorizeRequestValidationResult value);
}
public class Duende.IdentityServer.Validation.CustomBackchannelAuthenticationRequestValidationContext : object {
    [CompilerGeneratedAttribute]
private BackchannelAuthenticationRequestValidationResult <ValidationResult>k__BackingField;
    public BackchannelAuthenticationRequestValidationResult ValidationResult { get; public set; }
    public CustomBackchannelAuthenticationRequestValidationContext(BackchannelAuthenticationRequestValidationResult validatedRequest);
    [CompilerGeneratedAttribute]
public BackchannelAuthenticationRequestValidationResult get_ValidationResult();
    [CompilerGeneratedAttribute]
public void set_ValidationResult(BackchannelAuthenticationRequestValidationResult value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.CustomTokenRequestValidationContext : object {
    [CompilerGeneratedAttribute]
private TokenRequestValidationResult <Result>k__BackingField;
    public TokenRequestValidationResult Result { get; public set; }
    [CompilerGeneratedAttribute]
public TokenRequestValidationResult get_Result();
    [CompilerGeneratedAttribute]
public void set_Result(TokenRequestValidationResult value);
}
public class Duende.IdentityServer.Validation.DefaultClientConfigurationValidator : object {
    private IdentityServerOptions _options;
    public DefaultClientConfigurationValidator(IdentityServerOptions options);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.DefaultClientConfigurationValidator/<ValidateAsync>d__2")]
public sealed virtual Task ValidateAsync(ClientConfigurationValidationContext context);
    protected virtual Task ValidateGrantTypesAsync(ClientConfigurationValidationContext context);
    protected virtual Task ValidateLifetimesAsync(ClientConfigurationValidationContext context);
    protected virtual Task ValidateRedirectUriAsync(ClientConfigurationValidationContext context);
    protected virtual Task ValidateAllowedCorsOriginsAsync(ClientConfigurationValidationContext context);
    protected virtual Task ValidateUriSchemesAsync(ClientConfigurationValidationContext context);
    protected virtual Task ValidateSecretsAsync(ClientConfigurationValidationContext context);
    protected virtual Task ValidatePropertiesAsync(ClientConfigurationValidationContext context);
}
internal class Duende.IdentityServer.Validation.DefaultCustomAuthorizeRequestValidator : object {
    public sealed virtual Task ValidateAsync(CustomAuthorizeRequestValidationContext context);
}
public class Duende.IdentityServer.Validation.DefaultCustomBackchannelAuthenticationValidator : object {
    public sealed virtual Task ValidateAsync(CustomBackchannelAuthenticationRequestValidationContext customValidationContext);
}
internal class Duende.IdentityServer.Validation.DefaultCustomTokenRequestValidator : object {
    public sealed virtual Task ValidateAsync(CustomTokenRequestValidationContext context);
}
public class Duende.IdentityServer.Validation.DefaultCustomTokenValidator : object {
    protected ILogger Logger;
    protected IProfileService Profile;
    protected IClientStore Clients;
    public virtual Task`1<TokenValidationResult> ValidateAccessTokenAsync(TokenValidationResult result);
    public virtual Task`1<TokenValidationResult> ValidateIdentityTokenAsync(TokenValidationResult result);
}
public class Duende.IdentityServer.Validation.DefaultDPoPProofValidator : object {
    private static string ReplayCachePurpose;
    private static string DataProtectorPurpose;
    protected IdentityServerOptions Options;
    protected IClock Clock;
    protected IReplayCache ReplayCache;
    [CompilerGeneratedAttribute]
private IDataProtector <DataProtector>k__BackingField;
    protected ILogger Logger;
    protected IDataProtector DataProtector { get; }
    public DefaultDPoPProofValidator(IdentityServerOptions options, IReplayCache replayCache, IClock clock, IDataProtectionProvider dataProtectionProvider, ILogger`1<DefaultDPoPProofValidator> logger);
    [CompilerGeneratedAttribute]
protected IDataProtector get_DataProtector();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.DefaultDPoPProofValidator/<ValidateAsync>d__10")]
public sealed virtual Task`1<DPoPProofValidatonResult> ValidateAsync(DPoPProofValidatonContext context);
    protected virtual Task ValidateHeaderAsync(DPoPProofValidatonContext context, DPoPProofValidatonResult result);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.DefaultDPoPProofValidator/<ValidateSignatureAsync>d__12")]
protected virtual Task ValidateSignatureAsync(DPoPProofValidatonContext context, DPoPProofValidatonResult result);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.DefaultDPoPProofValidator/<ValidatePayloadAsync>d__13")]
protected virtual Task ValidatePayloadAsync(DPoPProofValidatonContext context, DPoPProofValidatonResult result);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.DefaultDPoPProofValidator/<ValidateReplayAsync>d__14")]
protected virtual Task ValidateReplayAsync(DPoPProofValidatonContext context, DPoPProofValidatonResult result);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.DefaultDPoPProofValidator/<ValidateFreshnessAsync>d__15")]
protected virtual Task ValidateFreshnessAsync(DPoPProofValidatonContext context, DPoPProofValidatonResult result);
    protected virtual Task ValidateIatAsync(DPoPProofValidatonContext context, DPoPProofValidatonResult result);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.DefaultDPoPProofValidator/<ValidateNonceAsync>d__17")]
protected virtual Task ValidateNonceAsync(DPoPProofValidatonContext context, DPoPProofValidatonResult result);
    protected virtual string CreateNonce(DPoPProofValidatonContext context, DPoPProofValidatonResult result);
    protected virtual ValueTask`1<long> GetUnixTimeFromNonceAsync(DPoPProofValidatonContext context, DPoPProofValidatonResult result);
    protected virtual bool IsExpired(DPoPProofValidatonContext context, DPoPProofValidatonResult result, TimeSpan clockSkew, long issuedAtTime);
}
public class Duende.IdentityServer.Validation.DefaultIdentityProviderConfigurationValidator : object {
    private IdentityServerOptions _options;
    public DefaultIdentityProviderConfigurationValidator(IdentityServerOptions options);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.DefaultIdentityProviderConfigurationValidator/<ValidateAsync>d__2")]
public virtual Task ValidateAsync(IdentityProviderConfigurationValidationContext context);
    protected virtual Task ValidateOidcProviderAsync(IdentityProviderConfigurationValidationContext`1<OidcProvider> context);
}
public class Duende.IdentityServer.Validation.DefaultResourceValidator : object {
    private ILogger _logger;
    private IScopeParser _scopeParser;
    private IResourceStore _store;
    public DefaultResourceValidator(IResourceStore store, IScopeParser scopeParser, ILogger`1<DefaultResourceValidator> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.DefaultResourceValidator/<ValidateRequestedResourcesAsync>d__4")]
public virtual Task`1<ResourceValidationResult> ValidateRequestedResourcesAsync(ResourceValidationRequest request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.DefaultResourceValidator/<ValidateScopeAsync>d__5")]
protected virtual Task ValidateScopeAsync(Client client, Resources resourcesFromStore, ParsedScopeValue requestedScope, ResourceValidationResult result);
    protected virtual Task`1<bool> IsClientAllowedIdentityResourceAsync(Client client, IdentityResource identity);
    protected virtual Task`1<bool> IsClientAllowedApiScopeAsync(Client client, ApiScope apiScope);
    protected virtual Task`1<bool> IsClientAllowedOfflineAccessAsync(Client client);
}
public class Duende.IdentityServer.Validation.DefaultScopeParser : object {
    private ILogger`1<DefaultScopeParser> _logger;
    public DefaultScopeParser(ILogger`1<DefaultScopeParser> logger);
    public sealed virtual ParsedScopesResult ParseScopeValues(IEnumerable`1<string> scopeValues);
    public virtual void ParseScopeValue(ParseScopeContext scopeContext);
}
public class Duende.IdentityServer.Validation.DeviceAuthorizationRequestValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private ValidatedDeviceAuthorizationRequest <ValidatedRequest>k__BackingField;
    public ValidatedDeviceAuthorizationRequest ValidatedRequest { get; }
    public DeviceAuthorizationRequestValidationResult(ValidatedDeviceAuthorizationRequest request);
    public DeviceAuthorizationRequestValidationResult(ValidatedDeviceAuthorizationRequest request, string error, string errorDescription);
    [CompilerGeneratedAttribute]
public ValidatedDeviceAuthorizationRequest get_ValidatedRequest();
}
internal class Duende.IdentityServer.Validation.DeviceAuthorizationRequestValidator : object {
    private IdentityServerOptions _options;
    private IResourceValidator _resourceValidator;
    private ILogger`1<DeviceAuthorizationRequestValidator> _logger;
    public DeviceAuthorizationRequestValidator(IdentityServerOptions options, IResourceValidator resourceValidator, ILogger`1<DeviceAuthorizationRequestValidator> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.DeviceAuthorizationRequestValidator/<ValidateAsync>d__4")]
public sealed virtual Task`1<DeviceAuthorizationRequestValidationResult> ValidateAsync(NameValueCollection parameters, ClientSecretValidationResult clientValidationResult);
    private DeviceAuthorizationRequestValidationResult Valid(ValidatedDeviceAuthorizationRequest request);
    private DeviceAuthorizationRequestValidationResult Invalid(ValidatedDeviceAuthorizationRequest request, string error, string description);
    private void LogError(string message, ValidatedDeviceAuthorizationRequest request);
    private void LogError(string message, string detail, ValidatedDeviceAuthorizationRequest request);
    private DeviceAuthorizationRequestValidationResult ValidateClient(ValidatedDeviceAuthorizationRequest request, ClientSecretValidationResult clientValidationResult);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.DeviceAuthorizationRequestValidator/<ValidateScopeAsync>d__10")]
private Task`1<DeviceAuthorizationRequestValidationResult> ValidateScopeAsync(ValidatedDeviceAuthorizationRequest request);
}
public class Duende.IdentityServer.Validation.DeviceCodeValidationContext : object {
    [CompilerGeneratedAttribute]
private string <DeviceCode>k__BackingField;
    [CompilerGeneratedAttribute]
private ValidatedTokenRequest <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private TokenRequestValidationResult <Result>k__BackingField;
    public string DeviceCode { get; public set; }
    public ValidatedTokenRequest Request { get; public set; }
    public TokenRequestValidationResult Result { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DeviceCode();
    [CompilerGeneratedAttribute]
public void set_DeviceCode(string value);
    [CompilerGeneratedAttribute]
public ValidatedTokenRequest get_Request();
    [CompilerGeneratedAttribute]
public void set_Request(ValidatedTokenRequest value);
    [CompilerGeneratedAttribute]
public TokenRequestValidationResult get_Result();
    [CompilerGeneratedAttribute]
public void set_Result(TokenRequestValidationResult value);
}
internal class Duende.IdentityServer.Validation.DeviceCodeValidator : object {
    private IDeviceFlowCodeService _devices;
    private IProfileService _profile;
    private IDeviceFlowThrottlingService _throttlingService;
    private IClock _systemClock;
    private ILogger`1<DeviceCodeValidator> _logger;
    public DeviceCodeValidator(IDeviceFlowCodeService devices, IProfileService profile, IDeviceFlowThrottlingService throttlingService, IClock systemClock, ILogger`1<DeviceCodeValidator> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.DeviceCodeValidator/<ValidateAsync>d__6")]
public sealed virtual Task ValidateAsync(DeviceCodeValidationContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.DPoPProofValidatonContext : object {
    [CompilerGeneratedAttribute]
private DPoPTokenExpirationValidationMode <ExpirationValidationMode>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ClientClockSkew>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProofToken>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ValidateAccessToken>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    public DPoPTokenExpirationValidationMode ExpirationValidationMode { get; public set; }
    public TimeSpan ClientClockSkew { get; public set; }
    public string Url { get; public set; }
    public string Method { get; public set; }
    public string ProofToken { get; public set; }
    public bool ValidateAccessToken { get; public set; }
    [NullableAttribute("2")]
public string AccessToken { get; public set; }
    [CompilerGeneratedAttribute]
public DPoPTokenExpirationValidationMode get_ExpirationValidationMode();
    [CompilerGeneratedAttribute]
public void set_ExpirationValidationMode(DPoPTokenExpirationValidationMode value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ClientClockSkew();
    [CompilerGeneratedAttribute]
public void set_ClientClockSkew(TimeSpan value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_Method();
    [CompilerGeneratedAttribute]
public void set_Method(string value);
    [CompilerGeneratedAttribute]
public string get_ProofToken();
    [CompilerGeneratedAttribute]
public void set_ProofToken(string value);
    [CompilerGeneratedAttribute]
public bool get_ValidateAccessToken();
    [CompilerGeneratedAttribute]
public void set_ValidateAccessToken(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_AccessToken();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_AccessToken(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.DPoPProofValidatonResult : ValidationResult {
    [CompilerGeneratedAttribute]
private string <JsonWebKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <JsonWebKeyThumbprint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Confirmation>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Payload>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessTokenHash>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Nonce>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IssuedAt>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServerIssuedNonce>k__BackingField;
    public string JsonWebKey { get; public set; }
    public string JsonWebKeyThumbprint { get; public set; }
    public string Confirmation { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, object> Payload { get; internal set; }
    public string AccessTokenHash { get; public set; }
    public string TokenId { get; public set; }
    public string Nonce { get; public set; }
    public Nullable`1<long> IssuedAt { get; public set; }
    public string ServerIssuedNonce { get; public set; }
    [CompilerGeneratedAttribute]
public string get_JsonWebKey();
    [CompilerGeneratedAttribute]
public void set_JsonWebKey(string value);
    [CompilerGeneratedAttribute]
public string get_JsonWebKeyThumbprint();
    [CompilerGeneratedAttribute]
public void set_JsonWebKeyThumbprint(string value);
    [CompilerGeneratedAttribute]
public string get_Confirmation();
    [CompilerGeneratedAttribute]
public void set_Confirmation(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Payload();
    [CompilerGeneratedAttribute]
internal void set_Payload(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public string get_AccessTokenHash();
    [CompilerGeneratedAttribute]
public void set_AccessTokenHash(string value);
    [CompilerGeneratedAttribute]
public string get_TokenId();
    [CompilerGeneratedAttribute]
public void set_TokenId(string value);
    [CompilerGeneratedAttribute]
public string get_Nonce();
    [CompilerGeneratedAttribute]
public void set_Nonce(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IssuedAt();
    [CompilerGeneratedAttribute]
public void set_IssuedAt(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_ServerIssuedNonce();
    [CompilerGeneratedAttribute]
public void set_ServerIssuedNonce(string value);
}
public class Duende.IdentityServer.Validation.EndSessionCallbackValidationResult : ValidationResult {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <FrontChannelLogoutUrls>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> FrontChannelLogoutUrls { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_FrontChannelLogoutUrls();
    [CompilerGeneratedAttribute]
public void set_FrontChannelLogoutUrls(IEnumerable`1<string> value);
}
public class Duende.IdentityServer.Validation.EndSessionRequestValidator : object {
    protected ILogger Logger;
    protected IdentityServerOptions Options;
    protected ITokenValidator TokenValidator;
    protected IRedirectUriValidator UriValidator;
    protected IUserSession UserSession;
    [CompilerGeneratedAttribute]
private ILogoutNotificationService <LogoutNotificationService>k__BackingField;
    protected IMessageStore`1<LogoutNotificationContext> EndSessionMessageStore;
    public ILogoutNotificationService LogoutNotificationService { get; }
    public EndSessionRequestValidator(IdentityServerOptions options, ITokenValidator tokenValidator, IRedirectUriValidator uriValidator, IUserSession userSession, ILogoutNotificationService logoutNotificationService, IMessageStore`1<LogoutNotificationContext> endSessionMessageStore, ILogger`1<EndSessionRequestValidator> logger);
    [CompilerGeneratedAttribute]
public ILogoutNotificationService get_LogoutNotificationService();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.EndSessionRequestValidator/<ValidateAsync>d__10")]
public sealed virtual Task`1<EndSessionValidationResult> ValidateAsync(NameValueCollection parameters, ClaimsPrincipal subject);
    protected virtual EndSessionValidationResult Invalid(string message, ValidatedEndSessionRequest request);
    protected virtual void LogSuccess(ValidatedEndSessionRequest request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.EndSessionRequestValidator/<ValidateCallbackAsync>d__13")]
public sealed virtual Task`1<EndSessionCallbackValidationResult> ValidateCallbackAsync(NameValueCollection parameters);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.EndSessionValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private ValidatedEndSessionRequest <ValidatedRequest>k__BackingField;
    public ValidatedEndSessionRequest ValidatedRequest { get; public set; }
    [CompilerGeneratedAttribute]
public ValidatedEndSessionRequest get_ValidatedRequest();
    [CompilerGeneratedAttribute]
public void set_ValidatedRequest(ValidatedEndSessionRequest value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.ExtensionGrantValidationContext : object {
    [CompilerGeneratedAttribute]
private ValidatedTokenRequest <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private GrantValidationResult <Result>k__BackingField;
    public ValidatedTokenRequest Request { get; public set; }
    public GrantValidationResult Result { get; public set; }
    [CompilerGeneratedAttribute]
public ValidatedTokenRequest get_Request();
    [CompilerGeneratedAttribute]
public void set_Request(ValidatedTokenRequest value);
    [CompilerGeneratedAttribute]
public GrantValidationResult get_Result();
    [CompilerGeneratedAttribute]
public void set_Result(GrantValidationResult value);
}
public class Duende.IdentityServer.Validation.ExtensionGrantValidator : object {
    private ILogger _logger;
    private IEnumerable`1<IExtensionGrantValidator> _validators;
    public ExtensionGrantValidator(IEnumerable`1<IExtensionGrantValidator> validators, ILogger`1<ExtensionGrantValidator> logger);
    public IEnumerable`1<string> GetAvailableGrantTypes();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.ExtensionGrantValidator/<ValidateAsync>d__4")]
public Task`1<GrantValidationResult> ValidateAsync(ValidatedTokenRequest request);
}
public class Duende.IdentityServer.Validation.GrantValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <CustomResponse>k__BackingField;
    public ClaimsPrincipal Subject { get; public set; }
    public Dictionary`2<string, object> CustomResponse { get; public set; }
    public GrantValidationResult(Dictionary`2<string, object> customResponse);
    public GrantValidationResult(ClaimsPrincipal principal, Dictionary`2<string, object> customResponse);
    public GrantValidationResult(TokenRequestErrors error, string errorDescription, Dictionary`2<string, object> customResponse);
    public GrantValidationResult(string subject, string authenticationMethod, IEnumerable`1<Claim> claims, string identityProvider, Dictionary`2<string, object> customResponse);
    public GrantValidationResult(string subject, string authenticationMethod, DateTime authTime, IEnumerable`1<Claim> claims, string identityProvider, Dictionary`2<string, object> customResponse);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(ClaimsPrincipal value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_CustomResponse();
    [CompilerGeneratedAttribute]
public void set_CustomResponse(Dictionary`2<string, object> value);
    private string ConvertTokenErrorEnumToString(TokenRequestErrors error);
}
public class Duende.IdentityServer.Validation.HashedSharedSecretValidator : object {
    private ILogger _logger;
    public HashedSharedSecretValidator(ILogger`1<HashedSharedSecretValidator> logger);
    public sealed virtual Task`1<SecretValidationResult> ValidateAsync(IEnumerable`1<Secret> secrets, ParsedSecret parsedSecret);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Validation.IApiSecretValidator {
    public abstract virtual Task`1<ApiSecretValidationResult> ValidateAsync(HttpContext context);
}
public interface Duende.IdentityServer.Validation.IAuthorizeRequestValidator {
    public abstract virtual Task`1<AuthorizeRequestValidationResult> ValidateAsync(NameValueCollection parameters, ClaimsPrincipal subject, AuthorizeRequestType authorizeRequestType);
}
public interface Duende.IdentityServer.Validation.IBackchannelAuthenticationRequestIdValidator {
    public abstract virtual Task ValidateAsync(BackchannelAuthenticationRequestIdValidationContext context);
}
public interface Duende.IdentityServer.Validation.IBackchannelAuthenticationRequestValidator {
    public abstract virtual Task`1<BackchannelAuthenticationRequestValidationResult> ValidateRequestAsync(NameValueCollection parameters, ClientSecretValidationResult clientValidationResult);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Validation.IBackchannelAuthenticationUserValidator {
    public abstract virtual Task`1<BackchannelAuthenticationUserValidationResult> ValidateRequestAsync(BackchannelAuthenticationUserValidatorContext userValidatorContext);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Validation.IClientConfigurationValidator {
    public abstract virtual Task ValidateAsync(ClientConfigurationValidationContext context);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Validation.IClientSecretValidator {
    public abstract virtual Task`1<ClientSecretValidationResult> ValidateAsync(HttpContext context);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Validation.ICustomAuthorizeRequestValidator {
    public abstract virtual Task ValidateAsync(CustomAuthorizeRequestValidationContext context);
}
public interface Duende.IdentityServer.Validation.ICustomBackchannelAuthenticationValidator {
    public abstract virtual Task ValidateAsync(CustomBackchannelAuthenticationRequestValidationContext customValidationContext);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Validation.ICustomTokenRequestValidator {
    public abstract virtual Task ValidateAsync(CustomTokenRequestValidationContext context);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Validation.ICustomTokenValidator {
    public abstract virtual Task`1<TokenValidationResult> ValidateAccessTokenAsync(TokenValidationResult result);
    public abstract virtual Task`1<TokenValidationResult> ValidateIdentityTokenAsync(TokenValidationResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Duende.IdentityServer.Validation.IdentityProviderConfigurationValidationContext : IdentityProviderConfigurationValidationContext`1<IdentityProvider> {
    public IdentityProviderConfigurationValidationContext(IdentityProvider idp);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.IdentityProviderConfigurationValidationContext`1 : object {
    [CompilerGeneratedAttribute]
private T <IdentityProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsValid>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    public T IdentityProvider { get; }
    public bool IsValid { get; public set; }
    [NullableAttribute("2")]
public string ErrorMessage { get; public set; }
    public IdentityProviderConfigurationValidationContext`1(T idp);
    [CompilerGeneratedAttribute]
public T get_IdentityProvider();
    [CompilerGeneratedAttribute]
public bool get_IsValid();
    [CompilerGeneratedAttribute]
public void set_IsValid(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_ErrorMessage(string value);
    public void SetError(string message);
}
public interface Duende.IdentityServer.Validation.IDeviceAuthorizationRequestValidator {
    public abstract virtual Task`1<DeviceAuthorizationRequestValidationResult> ValidateAsync(NameValueCollection parameters, ClientSecretValidationResult clientValidationResult);
}
public interface Duende.IdentityServer.Validation.IDeviceCodeValidator {
    public abstract virtual Task ValidateAsync(DeviceCodeValidationContext context);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Validation.IDPoPProofValidator {
    public abstract virtual Task`1<DPoPProofValidatonResult> ValidateAsync(DPoPProofValidatonContext context);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Validation.IEndSessionRequestValidator {
    public abstract virtual Task`1<EndSessionValidationResult> ValidateAsync(NameValueCollection parameters, ClaimsPrincipal subject);
    public abstract virtual Task`1<EndSessionCallbackValidationResult> ValidateCallbackAsync(NameValueCollection parameters);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Validation.IExtensionGrantValidator {
    public string GrantType { get; }
    public abstract virtual Task ValidateAsync(ExtensionGrantValidationContext context);
    public abstract virtual string get_GrantType();
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Validation.IIdentityProviderConfigurationValidator {
    public abstract virtual Task ValidateAsync(IdentityProviderConfigurationValidationContext context);
}
public interface Duende.IdentityServer.Validation.IIntrospectionRequestValidator {
    public abstract virtual Task`1<IntrospectionRequestValidationResult> ValidateAsync(IntrospectionRequestValidationContext context);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Validation.IJwtRequestValidator {
    public abstract virtual Task`1<JwtRequestValidationResult> ValidateAsync(JwtRequestValidationContext context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.IntrospectionRequestValidationContext : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private NameValueCollection <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private ApiResource <Api>k__BackingField;
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [NullableAttribute("1")]
public NameValueCollection Parameters { get; public set; }
    public ApiResource Api { get; public set; }
    public Client Client { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public NameValueCollection get_Parameters();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Parameters(NameValueCollection value);
    [CompilerGeneratedAttribute]
public ApiResource get_Api();
    [CompilerGeneratedAttribute]
public void set_Api(ApiResource value);
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
}
public enum Duende.IdentityServer.Validation.IntrospectionRequestValidationFailureReason : Enum {
    public int value__;
    public static IntrospectionRequestValidationFailureReason None;
    public static IntrospectionRequestValidationFailureReason MissingToken;
    public static IntrospectionRequestValidationFailureReason InvalidToken;
    public static IntrospectionRequestValidationFailureReason InvalidScope;
}
public class Duende.IdentityServer.Validation.IntrospectionRequestValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private NameValueCollection <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private ApiResource <Api>k__BackingField;
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsActive>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Claim> <Claims>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    public NameValueCollection Parameters { get; public set; }
    public ApiResource Api { get; public set; }
    public Client Client { get; public set; }
    public bool IsActive { get; public set; }
    public IEnumerable`1<Claim> Claims { get; public set; }
    public string Token { get; public set; }
    [CompilerGeneratedAttribute]
public NameValueCollection get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(NameValueCollection value);
    [CompilerGeneratedAttribute]
public ApiResource get_Api();
    [CompilerGeneratedAttribute]
public void set_Api(ApiResource value);
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
    [CompilerGeneratedAttribute]
public bool get_IsActive();
    [CompilerGeneratedAttribute]
public void set_IsActive(bool value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<Claim> get_Claims();
    [CompilerGeneratedAttribute]
public void set_Claims(IEnumerable`1<Claim> value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
}
internal class Duende.IdentityServer.Validation.IntrospectionRequestValidator : object {
    private ILogger _logger;
    private ITokenValidator _tokenValidator;
    private IRefreshTokenService _refreshTokenService;
    public IntrospectionRequestValidator(ITokenValidator tokenValidator, IRefreshTokenService refreshTokenService, ILogger`1<IntrospectionRequestValidator> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.IntrospectionRequestValidator/<ValidateAsync>d__4")]
public sealed virtual Task`1<IntrospectionRequestValidationResult> ValidateAsync(IntrospectionRequestValidationContext context);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Validation.IPushedAuthorizationRequestValidator {
    public abstract virtual Task`1<PushedAuthorizationValidationResult> ValidateAsync(PushedAuthorizationRequestValidationContext context);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Validation.IRedirectUriValidator {
    [ObsoleteAttribute("This overload is deprecated and will be removed in a future version. Use the overload that takes a RedirectUriValidationContext parameter instead.")]
public abstract virtual Task`1<bool> IsRedirectUriValidAsync(string requestedUri, Client client);
    public virtual Task`1<bool> IsRedirectUriValidAsync(RedirectUriValidationContext context);
    public abstract virtual Task`1<bool> IsPostLogoutRedirectUriValidAsync(string requestedUri, Client client);
}
internal interface Duende.IdentityServer.Validation.IRequestObjectValidator {
    public abstract virtual Task`1<AuthorizeRequestValidationResult> LoadRequestObjectAsync(ValidatedAuthorizeRequest request);
    public abstract virtual Task`1<AuthorizeRequestValidationResult> ValidatePushedAuthorizationRequest(ValidatedAuthorizeRequest request);
    public abstract virtual Task`1<AuthorizeRequestValidationResult> ValidateRequestObjectAsync(ValidatedAuthorizeRequest request);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Validation.IResourceOwnerPasswordValidator {
    public abstract virtual Task ValidateAsync(ResourceOwnerPasswordValidationContext context);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Validation.IResourceValidator {
    public abstract virtual Task`1<ResourceValidationResult> ValidateRequestedResourcesAsync(ResourceValidationRequest request);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Validation.IScopeParser {
    public abstract virtual ParsedScopesResult ParseScopeValues(IEnumerable`1<string> scopeValues);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Validation.ISecretParser {
    public string AuthenticationMethod { get; }
    public abstract virtual Task`1<ParsedSecret> ParseAsync(HttpContext context);
    public abstract virtual string get_AuthenticationMethod();
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Validation.ISecretsListParser {
    public abstract virtual Task`1<ParsedSecret> ParseAsync(HttpContext context);
    public abstract virtual IEnumerable`1<string> GetAvailableAuthenticationMethods();
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Validation.ISecretsListValidator {
    public abstract virtual Task`1<SecretValidationResult> ValidateAsync(IEnumerable`1<Secret> secrets, ParsedSecret parsedSecret);
}
[NullableContextAttribute("1")]
public interface Duende.IdentityServer.Validation.ISecretValidator {
    public abstract virtual Task`1<SecretValidationResult> ValidateAsync(IEnumerable`1<Secret> secrets, ParsedSecret parsedSecret);
}
public interface Duende.IdentityServer.Validation.ITokenRequestValidator {
    public abstract virtual Task`1<TokenRequestValidationResult> ValidateRequestAsync(TokenRequestValidationContext context);
}
public interface Duende.IdentityServer.Validation.ITokenRevocationRequestValidator {
    public abstract virtual Task`1<TokenRevocationRequestValidationResult> ValidateRequestAsync(NameValueCollection parameters, Client client);
}
public interface Duende.IdentityServer.Validation.ITokenValidator {
    public abstract virtual Task`1<TokenValidationResult> ValidateAccessTokenAsync(string token, string expectedScope);
    public abstract virtual Task`1<TokenValidationResult> ValidateIdentityTokenAsync(string token, string clientId, bool validateLifetime);
}
public interface Duende.IdentityServer.Validation.IUserInfoRequestValidator {
    public abstract virtual Task`1<UserInfoRequestValidationResult> ValidateRequestAsync(string accessToken);
}
public class Duende.IdentityServer.Validation.JwtBearerClientAssertionSecretParser : object {
    private IdentityServerOptions _options;
    private ILogger _logger;
    public string AuthenticationMethod { get; }
    public JwtBearerClientAssertionSecretParser(IdentityServerOptions options, ILogger`1<JwtBearerClientAssertionSecretParser> logger);
    public sealed virtual string get_AuthenticationMethod();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.JwtBearerClientAssertionSecretParser/<ParseAsync>d__5")]
public sealed virtual Task`1<ParsedSecret> ParseAsync(HttpContext context);
    private string GetClientIdFromToken(string token);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.JwtRequestValidationContext : object {
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private string <JwtTokenString>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <StrictJarValidation>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeJti>k__BackingField;
    public Client Client { get; public set; }
    public string JwtTokenString { get; public set; }
    public Nullable`1<bool> StrictJarValidation { get; public set; }
    public bool IncludeJti { get; internal set; }
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
    [CompilerGeneratedAttribute]
public string get_JwtTokenString();
    [CompilerGeneratedAttribute]
public void set_JwtTokenString(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_StrictJarValidation();
    [CompilerGeneratedAttribute]
public void set_StrictJarValidation(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public bool get_IncludeJti();
    [CompilerGeneratedAttribute]
internal void set_IncludeJti(bool value);
}
public class Duende.IdentityServer.Validation.JwtRequestValidationResult : ValidationResult {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<Claim> <Payload>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<Claim> Payload { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<Claim> get_Payload();
    [CompilerGeneratedAttribute]
public void set_Payload(IEnumerable`1<Claim> value);
}
public class Duende.IdentityServer.Validation.JwtRequestValidator : object {
    private string _audienceUri;
    protected JsonWebTokenHandler Handler;
    protected ILogger Logger;
    protected IdentityServerOptions Options;
    protected IIssuerNameService IssuerNameService;
    public JwtRequestValidator(IdentityServerOptions options, IIssuerNameService issuerNameService, ILogger`1<JwtRequestValidator> logger);
    internal JwtRequestValidator(string audience, ILogger`1<JwtRequestValidator> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.JwtRequestValidator/<GetAudienceUri>d__2")]
protected Task`1<string> GetAudienceUri();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.JwtRequestValidator/<ValidateAsync>d__8")]
public virtual Task`1<JwtRequestValidationResult> ValidateAsync(JwtRequestValidationContext context);
    protected virtual Task`1<List`1<SecurityKey>> GetKeysAsync(Client client);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.JwtRequestValidator/<ValidateJwtAsync>d__10")]
protected virtual Task`1<JsonWebToken> ValidateJwtAsync(JwtRequestValidationContext context, IEnumerable`1<SecurityKey> keys);
    protected virtual Task`1<List`1<Claim>> ProcessPayloadAsync(JwtRequestValidationContext context, JsonWebToken token);
}
public class Duende.IdentityServer.Validation.MutualTlsSecretParser : object {
    private IdentityServerOptions _options;
    private ILogger`1<MutualTlsSecretParser> _logger;
    public string AuthenticationMethod { get; }
    public MutualTlsSecretParser(IdentityServerOptions options, ILogger`1<MutualTlsSecretParser> logger);
    public sealed virtual string get_AuthenticationMethod();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.MutualTlsSecretParser/<ParseAsync>d__5")]
public sealed virtual Task`1<ParsedSecret> ParseAsync(HttpContext context);
}
public class Duende.IdentityServer.Validation.NopBackchannelAuthenticationUserValidator : object {
    public sealed virtual Task`1<BackchannelAuthenticationUserValidationResult> ValidateRequestAsync(BackchannelAuthenticationUserValidatorContext userValidatorContext);
}
public class Duende.IdentityServer.Validation.NopClientConfigurationValidator : object {
    public sealed virtual Task ValidateAsync(ClientConfigurationValidationContext context);
}
public class Duende.IdentityServer.Validation.NotSupportedResourceOwnerPasswordValidator : object {
    private ILogger _logger;
    public NotSupportedResourceOwnerPasswordValidator(ILogger`1<NotSupportedResourceOwnerPasswordValidator> logger);
    public sealed virtual Task ValidateAsync(ResourceOwnerPasswordValidationContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.ParsedScopesResult : object {
    [CompilerGeneratedAttribute]
private ICollection`1<ParsedScopeValue> <ParsedScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ParsedScopeValidationError> <Errors>k__BackingField;
    public ICollection`1<ParsedScopeValue> ParsedScopes { get; public set; }
    public ICollection`1<ParsedScopeValidationError> Errors { get; public set; }
    public bool Succeeded { get; }
    [CompilerGeneratedAttribute]
public ICollection`1<ParsedScopeValue> get_ParsedScopes();
    [CompilerGeneratedAttribute]
public void set_ParsedScopes(ICollection`1<ParsedScopeValue> value);
    [CompilerGeneratedAttribute]
public ICollection`1<ParsedScopeValidationError> get_Errors();
    [CompilerGeneratedAttribute]
public void set_Errors(ICollection`1<ParsedScopeValidationError> value);
    public bool get_Succeeded();
}
public class Duende.IdentityServer.Validation.ParsedScopeValidationError : object {
    [CompilerGeneratedAttribute]
private string <RawValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    public string RawValue { get; public set; }
    public string Error { get; public set; }
    public ParsedScopeValidationError(string rawValue, string error);
    [CompilerGeneratedAttribute]
public string get_RawValue();
    [CompilerGeneratedAttribute]
public void set_RawValue(string value);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.ParsedScopeValue : object {
    [CompilerGeneratedAttribute]
private string <RawValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParsedName>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ParsedParameter>k__BackingField;
    public string RawValue { get; public set; }
    public string ParsedName { get; public set; }
    [NullableAttribute("2")]
public string ParsedParameter { get; public set; }
    public ParsedScopeValue(string rawValue);
    public ParsedScopeValue(string rawValue, string parsedName, string parsedParameter);
    [CompilerGeneratedAttribute]
public string get_RawValue();
    [CompilerGeneratedAttribute]
public void set_RawValue(string value);
    [CompilerGeneratedAttribute]
public string get_ParsedName();
    [CompilerGeneratedAttribute]
public void set_ParsedName(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ParsedParameter();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_ParsedParameter(string value);
}
public class Duende.IdentityServer.Validation.PlainTextSharedSecretValidator : object {
    private ILogger _logger;
    public PlainTextSharedSecretValidator(ILogger`1<PlainTextSharedSecretValidator> logger);
    public sealed virtual Task`1<SecretValidationResult> ValidateAsync(IEnumerable`1<Secret> secrets, ParsedSecret parsedSecret);
}
public class Duende.IdentityServer.Validation.PostBodySecretParser : object {
    private ILogger _logger;
    private IdentityServerOptions _options;
    public string AuthenticationMethod { get; }
    public PostBodySecretParser(IdentityServerOptions options, ILogger`1<PostBodySecretParser> logger);
    public sealed virtual string get_AuthenticationMethod();
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.PostBodySecretParser/<ParseAsync>d__5")]
public sealed virtual Task`1<ParsedSecret> ParseAsync(HttpContext context);
}
public class Duende.IdentityServer.Validation.PrivateKeyJwtSecretValidator : object {
    private IIssuerNameService _issuerNameService;
    private IReplayCache _replayCache;
    private IServerUrls _urls;
    private IdentityServerOptions _options;
    private ILogger _logger;
    private static string Purpose;
    public PrivateKeyJwtSecretValidator(IIssuerNameService issuerNameService, IReplayCache replayCache, IServerUrls urls, IdentityServerOptions options, ILogger`1<PrivateKeyJwtSecretValidator> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.PrivateKeyJwtSecretValidator/<ValidateAsync>d__7")]
public sealed virtual Task`1<SecretValidationResult> ValidateAsync(IEnumerable`1<Secret> secrets, ParsedSecret parsedSecret);
}
public class Duende.IdentityServer.Validation.ProofKeyThumbprint : object {
    [CompilerGeneratedAttribute]
private ProofType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Thumbprint>k__BackingField;
    public ProofType Type { get; public set; }
    public string Thumbprint { get; public set; }
    [CompilerGeneratedAttribute]
public ProofType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(ProofType value);
    [CompilerGeneratedAttribute]
public string get_Thumbprint();
    [CompilerGeneratedAttribute]
public void set_Thumbprint(string value);
}
public class Duende.IdentityServer.Validation.PushedAuthorizationRequestValidationContext : object {
    [CompilerGeneratedAttribute]
private NameValueCollection <RequestParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    public NameValueCollection RequestParameters { get; public set; }
    public Client Client { get; public set; }
    public PushedAuthorizationRequestValidationContext(NameValueCollection requestParameters, Client client);
    [CompilerGeneratedAttribute]
public NameValueCollection get_RequestParameters();
    [CompilerGeneratedAttribute]
public void set_RequestParameters(NameValueCollection value);
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Duende.IdentityServer.Validation.PushedAuthorizationRequestValidator : object {
    private IAuthorizeRequestValidator _authorizeRequestValidator;
    public PushedAuthorizationRequestValidator(IAuthorizeRequestValidator authorizeRequestValidator);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.PushedAuthorizationRequestValidator/<ValidateAsync>d__2")]
public sealed virtual Task`1<PushedAuthorizationValidationResult> ValidateAsync(PushedAuthorizationRequestValidationContext context);
    private Task`1<PushedAuthorizationValidationResult> ValidateRequestUriAsync(PushedAuthorizationRequestValidationContext context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.PushedAuthorizationValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private ValidatedPushedAuthorizationRequest <ValidatedRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private ValidatedAuthorizeRequest <PartiallyValidatedAuthorizeRequest>k__BackingField;
    public ValidatedPushedAuthorizationRequest ValidatedRequest { get; public set; }
    public ValidatedAuthorizeRequest PartiallyValidatedAuthorizeRequest { get; public set; }
    [NullableContextAttribute("1")]
public PushedAuthorizationValidationResult(ValidatedPushedAuthorizationRequest validatedParRequest);
    [NullableContextAttribute("1")]
public PushedAuthorizationValidationResult(string error, string errorDescription);
    public PushedAuthorizationValidationResult(string error, string errorDescription, ValidatedAuthorizeRequest authorizeRequest);
    [CompilerGeneratedAttribute]
public ValidatedPushedAuthorizationRequest get_ValidatedRequest();
    [CompilerGeneratedAttribute]
public void set_ValidatedRequest(ValidatedPushedAuthorizationRequest value);
    [CompilerGeneratedAttribute]
public ValidatedAuthorizeRequest get_PartiallyValidatedAuthorizeRequest();
    [CompilerGeneratedAttribute]
public void set_PartiallyValidatedAuthorizeRequest(ValidatedAuthorizeRequest value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.RedirectUriValidationContext : object {
    [CompilerGeneratedAttribute]
private string <RequestedUri>k__BackingField;
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private NameValueCollection <RequestParameters>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<Claim> <RequestObjectValues>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthorizeRequestType <AuthorizeRequestType>k__BackingField;
    public string RequestedUri { get; public set; }
    public Client Client { get; public set; }
    public NameValueCollection RequestParameters { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<Claim> RequestObjectValues { get; public set; }
    public AuthorizeRequestType AuthorizeRequestType { get; public set; }
    public RedirectUriValidationContext(string redirectUri, ValidatedAuthorizeRequest request);
    [CompilerGeneratedAttribute]
public string get_RequestedUri();
    [CompilerGeneratedAttribute]
public void set_RequestedUri(string value);
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
    [CompilerGeneratedAttribute]
public NameValueCollection get_RequestParameters();
    [CompilerGeneratedAttribute]
public void set_RequestParameters(NameValueCollection value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<Claim> get_RequestObjectValues();
    [CompilerGeneratedAttribute]
public void set_RequestObjectValues(IEnumerable`1<Claim> value);
    [CompilerGeneratedAttribute]
public AuthorizeRequestType get_AuthorizeRequestType();
    [CompilerGeneratedAttribute]
public void set_AuthorizeRequestType(AuthorizeRequestType value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Duende.IdentityServer.Validation.RequestObjectValidator : object {
    private IJwtRequestValidator _jwtRequestValidator;
    private IJwtRequestUriHttpClient _jwtRequestUriHttpClient;
    private IPushedAuthorizationService _pushedAuthorizationService;
    private IdentityServerOptions _options;
    private ILogger`1<RequestObjectValidator> _logger;
    public RequestObjectValidator(IJwtRequestValidator jwtRequestValidator, IJwtRequestUriHttpClient jwtRequestUriHttpClient, IPushedAuthorizationService pushedAuthorizationService, IdentityServerOptions options, ILogger`1<RequestObjectValidator> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.RequestObjectValidator/<LoadRequestObjectAsync>d__6")]
public sealed virtual Task`1<AuthorizeRequestValidationResult> LoadRequestObjectAsync(ValidatedAuthorizeRequest request);
    private static bool IsParRequestUri(string requestUri);
    private string LoadRequestObjectFromPushedAuthorizationRequest(ValidatedAuthorizeRequest request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.RequestObjectValidator/<ValidatePushedAuthorizationRequest>d__9")]
public sealed virtual Task`1<AuthorizeRequestValidationResult> ValidatePushedAuthorizationRequest(ValidatedAuthorizeRequest request);
    public AuthorizeRequestValidationResult ValidatePushedAuthorizationBindingToClient(DeserializedPushedAuthorizationRequest pushedAuthorizationRequest, ValidatedAuthorizeRequest authorizeRequest);
    public AuthorizeRequestValidationResult ValidatePushedAuthorizationExpiration(DeserializedPushedAuthorizationRequest pushedAuthorizationRequest, ValidatedAuthorizeRequest authorizeRequest);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.RequestObjectValidator/<GetPushedAuthorizationRequestAsync>d__12")]
private Task`1<DeserializedPushedAuthorizationRequest> GetPushedAuthorizationRequestAsync(ValidatedAuthorizeRequest request);
    private string GetReferenceValue(ValidatedAuthorizeRequest request);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.RequestObjectValidator/<ValidateRequestObjectAsync>d__14")]
public sealed virtual Task`1<AuthorizeRequestValidationResult> ValidateRequestObjectAsync(ValidatedAuthorizeRequest request);
    private AuthorizeRequestValidationResult Invalid(ValidatedAuthorizeRequest request, string error, string description);
    private AuthorizeRequestValidationResult Valid(ValidatedAuthorizeRequest request);
    private void LogError(string message, ValidatedAuthorizeRequest request);
    private void LogError(string message, string detail, ValidatedAuthorizeRequest request);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.ResourceOwnerPasswordValidationContext : object {
    [CompilerGeneratedAttribute]
private string <UserName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private ValidatedTokenRequest <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private GrantValidationResult <Result>k__BackingField;
    public string UserName { get; public set; }
    public string Password { get; public set; }
    public ValidatedTokenRequest Request { get; public set; }
    public GrantValidationResult Result { get; public set; }
    [CompilerGeneratedAttribute]
public string get_UserName();
    [CompilerGeneratedAttribute]
public void set_UserName(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public ValidatedTokenRequest get_Request();
    [CompilerGeneratedAttribute]
public void set_Request(ValidatedTokenRequest value);
    [CompilerGeneratedAttribute]
public GrantValidationResult get_Result();
    [CompilerGeneratedAttribute]
public void set_Result(GrantValidationResult value);
}
public class Duende.IdentityServer.Validation.ResourceValidationContext : object {
    [CompilerGeneratedAttribute]
private GrantValidationResult <Result>k__BackingField;
    public GrantValidationResult Result { get; public set; }
    [CompilerGeneratedAttribute]
public GrantValidationResult get_Result();
    [CompilerGeneratedAttribute]
public void set_Result(GrantValidationResult value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.ResourceValidationRequest : object {
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Scopes>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <ResourceIndicators>k__BackingField;
    public Client Client { get; public set; }
    public IEnumerable`1<string> Scopes { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> ResourceIndicators { get; public set; }
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ResourceIndicators();
    [CompilerGeneratedAttribute]
public void set_ResourceIndicators(IEnumerable`1<string> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.ResourceValidationResult : object {
    [CompilerGeneratedAttribute]
private Resources <Resources>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ParsedScopeValue> <ParsedScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <InvalidResourceIndicators>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <InvalidScopes>k__BackingField;
    public bool Succeeded { get; }
    public Resources Resources { get; public set; }
    public ICollection`1<ParsedScopeValue> ParsedScopes { get; public set; }
    public IEnumerable`1<string> RawScopeValues { get; }
    public ICollection`1<string> InvalidResourceIndicators { get; public set; }
    public ICollection`1<string> InvalidScopes { get; public set; }
    public ResourceValidationResult(Resources resources);
    public ResourceValidationResult(Resources resources, IEnumerable`1<ParsedScopeValue> parsedScopeValues);
    public bool get_Succeeded();
    [CompilerGeneratedAttribute]
public Resources get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(Resources value);
    [CompilerGeneratedAttribute]
public ICollection`1<ParsedScopeValue> get_ParsedScopes();
    [CompilerGeneratedAttribute]
public void set_ParsedScopes(ICollection`1<ParsedScopeValue> value);
    public IEnumerable`1<string> get_RawScopeValues();
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_InvalidResourceIndicators();
    [CompilerGeneratedAttribute]
public void set_InvalidResourceIndicators(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_InvalidScopes();
    [CompilerGeneratedAttribute]
public void set_InvalidScopes(ICollection`1<string> value);
    public ResourceValidationResult Filter(IEnumerable`1<string> scopeValues);
    public ResourceValidationResult FilterByResourceIndicator(string resourceIndicator);
}
public class Duende.IdentityServer.Validation.ResponseTypeEqualityComparer : object {
    public sealed virtual bool Equals(string x, string y);
    public sealed virtual int GetHashCode(string value);
}
public class Duende.IdentityServer.Validation.SecretParser : object {
    private ILogger _logger;
    private IEnumerable`1<ISecretParser> _parsers;
    public SecretParser(IEnumerable`1<ISecretParser> parsers, ILogger`1<ISecretsListParser> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.SecretParser/<ParseAsync>d__3")]
public sealed virtual Task`1<ParsedSecret> ParseAsync(HttpContext context);
    public sealed virtual IEnumerable`1<string> GetAvailableAuthenticationMethods();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.SecretValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private bool <Success>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Confirmation>k__BackingField;
    public bool Success { get; public set; }
    public string Confirmation { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Success();
    [CompilerGeneratedAttribute]
public void set_Success(bool value);
    [CompilerGeneratedAttribute]
public string get_Confirmation();
    [CompilerGeneratedAttribute]
public void set_Confirmation(string value);
}
public class Duende.IdentityServer.Validation.SecretValidator : object {
    private ILogger _logger;
    private IEnumerable`1<ISecretValidator> _validators;
    private IClock _clock;
    public SecretValidator(IClock clock, IEnumerable`1<ISecretValidator> validators, ILogger`1<ISecretsListValidator> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.SecretValidator/<ValidateAsync>d__4")]
public sealed virtual Task`1<SecretValidationResult> ValidateAsync(IEnumerable`1<Secret> secrets, ParsedSecret parsedSecret);
    [CompilerGeneratedAttribute]
private bool <ValidateAsync>b__4_0(Secret s);
    [CompilerGeneratedAttribute]
private void <ValidateAsync>b__4_1(Secret ex);
    [CompilerGeneratedAttribute]
private bool <ValidateAsync>b__4_2(Secret s);
}
public class Duende.IdentityServer.Validation.StrictRedirectUriValidator : object {
    private IdentityServerOptions _options;
    public StrictRedirectUriValidator(IdentityServerOptions options);
    protected bool StringCollectionContainsString(IEnumerable`1<string> uris, string requestedUri);
    public virtual Task`1<bool> IsRedirectUriValidAsync(string requestedUri, Client client);
    public virtual Task`1<bool> IsPostLogoutRedirectUriValidAsync(string requestedUri, Client client);
    public virtual Task`1<bool> IsRedirectUriValidAsync(RedirectUriValidationContext context);
}
public class Duende.IdentityServer.Validation.StrictRedirectUriValidatorAppAuth : StrictRedirectUriValidator {
    private ILogger _logger;
    public StrictRedirectUriValidatorAppAuth(ILogger`1<StrictRedirectUriValidatorAppAuth> logger, IdentityServerOptions options);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.StrictRedirectUriValidatorAppAuth/<IsRedirectUriValidAsync>d__2")]
public virtual Task`1<bool> IsRedirectUriValidAsync(RedirectUriValidationContext context);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.StrictRedirectUriValidatorAppAuth/<IsPostLogoutRedirectUriValidAsync>d__3")]
public virtual Task`1<bool> IsPostLogoutRedirectUriValidAsync(string requestedUri, Client client);
    internal bool IsLoopback(string requestedUri);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<bool> <>n__0(RedirectUriValidationContext context);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<bool> <>n__1(string requestedUri, Client client);
}
public class Duende.IdentityServer.Validation.TokenRequestValidationContext : object {
    [CompilerGeneratedAttribute]
private NameValueCollection <RequestParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private ClientSecretValidationResult <ClientValidationResult>k__BackingField;
    [CompilerGeneratedAttribute]
private X509Certificate2 <ClientCertificate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DPoPProofToken>k__BackingField;
    public NameValueCollection RequestParameters { get; public set; }
    public ClientSecretValidationResult ClientValidationResult { get; public set; }
    public X509Certificate2 ClientCertificate { get; public set; }
    public string DPoPProofToken { get; public set; }
    [CompilerGeneratedAttribute]
public NameValueCollection get_RequestParameters();
    [CompilerGeneratedAttribute]
public void set_RequestParameters(NameValueCollection value);
    [CompilerGeneratedAttribute]
public ClientSecretValidationResult get_ClientValidationResult();
    [CompilerGeneratedAttribute]
public void set_ClientValidationResult(ClientSecretValidationResult value);
    [CompilerGeneratedAttribute]
public X509Certificate2 get_ClientCertificate();
    [CompilerGeneratedAttribute]
public void set_ClientCertificate(X509Certificate2 value);
    [CompilerGeneratedAttribute]
public string get_DPoPProofToken();
    [CompilerGeneratedAttribute]
public void set_DPoPProofToken(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.TokenRequestValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private ValidatedTokenRequest <ValidatedRequest>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, object> <CustomResponse>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <DPoPNonce>k__BackingField;
    public ValidatedTokenRequest ValidatedRequest { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Dictionary`2<string, object> CustomResponse { get; public set; }
    [NullableAttribute("2")]
public string DPoPNonce { get; public set; }
    public TokenRequestValidationResult(ValidatedTokenRequest validatedRequest, Dictionary`2<string, object> customResponse);
    public TokenRequestValidationResult(ValidatedTokenRequest validatedRequest, string error, string errorDescription, Dictionary`2<string, object> customResponse);
    [CompilerGeneratedAttribute]
public ValidatedTokenRequest get_ValidatedRequest();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_CustomResponse();
    [CompilerGeneratedAttribute]
public void set_CustomResponse(Dictionary`2<string, object> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_DPoPNonce();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_DPoPNonce(string value);
}
internal class Duende.IdentityServer.Validation.TokenRequestValidator : object {
    private IdentityServerOptions _options;
    private IIssuerNameService _issuerNameService;
    private IServerUrls _serverUrls;
    private IAuthorizationCodeStore _authorizationCodeStore;
    private ExtensionGrantValidator _extensionGrantValidator;
    private ICustomTokenRequestValidator _customRequestValidator;
    private IResourceValidator _resourceValidator;
    private IResourceStore _resourceStore;
    private IRefreshTokenService _refreshTokenService;
    private IDPoPProofValidator _dPoPProofValidator;
    private IEventService _events;
    private IResourceOwnerPasswordValidator _resourceOwnerValidator;
    private IProfileService _profile;
    private IDeviceCodeValidator _deviceCodeValidator;
    private IBackchannelAuthenticationRequestIdValidator _backchannelAuthenticationRequestIdValidator;
    private IClock _clock;
    private ILogger _logger;
    private ValidatedTokenRequest _validatedRequest;
    public TokenRequestValidator(IdentityServerOptions options, IIssuerNameService issuerNameService, IServerUrls serverUrls, IAuthorizationCodeStore authorizationCodeStore, IResourceOwnerPasswordValidator resourceOwnerValidator, IProfileService profile, IDeviceCodeValidator deviceCodeValidator, IBackchannelAuthenticationRequestIdValidator backchannelAuthenticationRequestIdValidator, ExtensionGrantValidator extensionGrantValidator, ICustomTokenRequestValidator customRequestValidator, IResourceValidator resourceValidator, IResourceStore resourceStore, IRefreshTokenService refreshTokenService, IDPoPProofValidator dPoPProofValidator, IEventService events, IClock clock, ILogger`1<TokenRequestValidator> logger);
    internal Task`1<TokenRequestValidationResult> ValidateRequestAsync(NameValueCollection parameters, ClientSecretValidationResult clientValidationResult);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.TokenRequestValidator/<ValidateRequestAsync>d__20")]
public sealed virtual Task`1<TokenRequestValidationResult> ValidateRequestAsync(TokenRequestValidationContext context);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.TokenRequestValidator/<ValidateProofToken>d__21")]
private Task`1<TokenRequestValidationResult> ValidateProofToken(TokenRequestValidationContext context);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.TokenRequestValidator/<RunValidationAsync>d__22")]
private Task`1<TokenRequestValidationResult> RunValidationAsync(Func`2<NameValueCollection, Task`1<TokenRequestValidationResult>> validationFunc, NameValueCollection parameters);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.TokenRequestValidator/<ValidateAuthorizationCodeRequestAsync>d__23")]
private Task`1<TokenRequestValidationResult> ValidateAuthorizationCodeRequestAsync(NameValueCollection parameters);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.TokenRequestValidator/<ValidateClientCredentialsRequestAsync>d__24")]
private Task`1<TokenRequestValidationResult> ValidateClientCredentialsRequestAsync(NameValueCollection parameters);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.TokenRequestValidator/<ValidateResourceOwnerCredentialRequestAsync>d__25")]
private Task`1<TokenRequestValidationResult> ValidateResourceOwnerCredentialRequestAsync(NameValueCollection parameters);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.TokenRequestValidator/<ValidateRefreshTokenRequestAsync>d__26")]
private Task`1<TokenRequestValidationResult> ValidateRefreshTokenRequestAsync(NameValueCollection parameters);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.TokenRequestValidator/<ValidateDeviceCodeRequestAsync>d__27")]
private Task`1<TokenRequestValidationResult> ValidateDeviceCodeRequestAsync(NameValueCollection parameters);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.TokenRequestValidator/<ValidateCibaRequestRequestAsync>d__28")]
private Task`1<TokenRequestValidationResult> ValidateCibaRequestRequestAsync(NameValueCollection parameters);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.TokenRequestValidator/<ValidateExtensionGrantRequestAsync>d__29")]
private Task`1<TokenRequestValidationResult> ValidateExtensionGrantRequestAsync(NameValueCollection parameters);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.TokenRequestValidator/<ValidateRequestedScopesAndResourcesAsync>d__30")]
private Task`1<string> ValidateRequestedScopesAndResourcesAsync(NameValueCollection parameters, bool ignoreImplicitIdentityScopes, bool ignoreImplicitOfflineAccess);
    private TokenRequestValidationResult ValidateAuthorizationCodeWithProofKeyParameters(string codeVerifier, AuthorizationCode authZcode);
    private bool ValidateCodeVerifierAgainstCodeChallenge(string codeVerifier, string codeChallenge, string codeChallengeMethod);
    private TokenRequestValidationResult Valid(Dictionary`2<string, object> customResponse);
    private TokenRequestValidationResult Invalid(string error, string errorDescription, Dictionary`2<string, object> customResponse);
    private void LogError(string message, object values);
    private void LogWarning(string message, object values);
    private void LogInformation(string message, object values);
    private void LogWithRequestDetails(LogLevel logLevel, string message, object values);
    private void LogSuccess();
    private Task RaiseSuccessfulResourceOwnerAuthenticationEventAsync(string userName, string subjectId, string clientId);
    private Task RaiseFailedResourceOwnerAuthenticationEventAsync(string userName, string error, string clientId);
    [CompilerGeneratedAttribute]
private bool <ValidateRequestAsync>b__20_0(string x);
    [CompilerGeneratedAttribute]
private bool <ValidateRequestedScopesAndResourcesAsync>b__30_0(string x);
}
public class Duende.IdentityServer.Validation.TokenRevocationRequestValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private string <TokenTypeHint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    public string TokenTypeHint { get; public set; }
    public string Token { get; public set; }
    public Client Client { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TokenTypeHint();
    [CompilerGeneratedAttribute]
public void set_TokenTypeHint(string value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
}
internal class Duende.IdentityServer.Validation.TokenRevocationRequestValidator : object {
    private ILogger _logger;
    public TokenRevocationRequestValidator(ILogger`1<TokenRevocationRequestValidator> logger);
    public sealed virtual Task`1<TokenRevocationRequestValidationResult> ValidateRequestAsync(NameValueCollection parameters, Client client);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.TokenValidationResult : ValidationResult {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<Claim> <Claims>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Jwt>k__BackingField;
    [CompilerGeneratedAttribute]
private Token <ReferenceToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReferenceTokenId>k__BackingField;
    [CompilerGeneratedAttribute]
private RefreshToken <RefreshToken>k__BackingField;
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<Claim> Claims { get; public set; }
    public string Jwt { get; public set; }
    public Token ReferenceToken { get; public set; }
    public string ReferenceTokenId { get; public set; }
    public RefreshToken RefreshToken { get; public set; }
    public Client Client { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<Claim> get_Claims();
    [CompilerGeneratedAttribute]
public void set_Claims(IEnumerable`1<Claim> value);
    [CompilerGeneratedAttribute]
public string get_Jwt();
    [CompilerGeneratedAttribute]
public void set_Jwt(string value);
    [CompilerGeneratedAttribute]
public Token get_ReferenceToken();
    [CompilerGeneratedAttribute]
public void set_ReferenceToken(Token value);
    [CompilerGeneratedAttribute]
public string get_ReferenceTokenId();
    [CompilerGeneratedAttribute]
public void set_ReferenceTokenId(string value);
    [CompilerGeneratedAttribute]
public RefreshToken get_RefreshToken();
    [CompilerGeneratedAttribute]
public void set_RefreshToken(RefreshToken value);
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
}
internal class Duende.IdentityServer.Validation.TokenValidator : object {
    private ILogger _logger;
    private IdentityServerOptions _options;
    private IIssuerNameService _issuerNameService;
    private IReferenceTokenStore _referenceTokenStore;
    private ICustomTokenValidator _customValidator;
    private IClientStore _clients;
    private IProfileService _profile;
    private IKeyMaterialService _keys;
    private ISessionCoordinationService _sessionCoordinationService;
    private IClock _clock;
    private TokenValidationLog _log;
    public TokenValidator(IdentityServerOptions options, IIssuerNameService issuerNameService, IClientStore clients, IProfileService profile, IReferenceTokenStore referenceTokenStore, ICustomTokenValidator customValidator, IKeyMaterialService keys, ISessionCoordinationService sessionCoordinationService, IClock clock, ILogger`1<TokenValidator> logger);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.TokenValidator/<ValidateIdentityTokenAsync>d__12")]
public sealed virtual Task`1<TokenValidationResult> ValidateIdentityTokenAsync(string token, string clientId, bool validateLifetime);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.TokenValidator/<ValidateAccessTokenAsync>d__13")]
public sealed virtual Task`1<TokenValidationResult> ValidateAccessTokenAsync(string token, string expectedScope);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.TokenValidator/<ValidateJwtAsync>d__14")]
private Task`1<TokenValidationResult> ValidateJwtAsync(string jwtString, IEnumerable`1<SecurityKeyInfo> validationKeys, bool validateLifetime, string audience);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.TokenValidator/<ValidateReferenceAccessTokenAsync>d__15")]
private Task`1<TokenValidationResult> ValidateReferenceAccessTokenAsync(string tokenHandle);
    private IEnumerable`1<Claim> ReferenceTokenToClaims(Token token);
    private string GetClientIdFromJwt(string token);
    private TokenValidationResult Invalid(string error);
    private void LogError(string message);
    private void LogSuccess();
}
public class Duende.IdentityServer.Validation.UserInfoRequestValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private TokenValidationResult <TokenValidationResult>k__BackingField;
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Subject>k__BackingField;
    public TokenValidationResult TokenValidationResult { get; public set; }
    public ClaimsPrincipal Subject { get; public set; }
    [CompilerGeneratedAttribute]
public TokenValidationResult get_TokenValidationResult();
    [CompilerGeneratedAttribute]
public void set_TokenValidationResult(TokenValidationResult value);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(ClaimsPrincipal value);
}
internal class Duende.IdentityServer.Validation.UserInfoRequestValidator : object {
    private ITokenValidator _tokenValidator;
    private IProfileService _profile;
    private ILogger _logger;
    private IServerSideTicketStore _serverSideTicketStore;
    public UserInfoRequestValidator(ITokenValidator tokenValidator, IProfileService profile, ILogger`1<UserInfoRequestValidator> logger, IServerSideTicketStore serverSideTicketStore);
    [AsyncStateMachineAttribute("Duende.IdentityServer.Validation.UserInfoRequestValidator/<ValidateRequestAsync>d__5")]
public sealed virtual Task`1<UserInfoRequestValidationResult> ValidateRequestAsync(string accessToken);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.ValidatedAuthorizeRequest : ValidatedRequest {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <ResponseType>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <ResponseMode>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <GrantType>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <RedirectUri>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private List`1<string> <RequestedScopes>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <RequestedResourceIndicators>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WasConsentShown>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <State>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UiLocales>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOpenIdRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsApiResourceRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Nonce>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private List`1<string> <AuthenticationContextReferenceClasses>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayMode>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <PromptModes>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <OriginalPromptModes>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <ProcessedPromptModes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxAge>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LoginHint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CodeChallenge>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CodeChallengeMethod>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IEnumerable`1<Claim> <RequestObjectValues>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestObject>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DPoPKeyThumbprint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PushedAuthorizationReferenceValue>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthorizeRequestType <AuthorizeRequestType>k__BackingField;
    [NullableAttribute("1")]
public string ResponseType { get; public set; }
    [NullableAttribute("1")]
public string ResponseMode { get; public set; }
    [NullableAttribute("1")]
public string GrantType { get; public set; }
    [NullableAttribute("1")]
public string RedirectUri { get; public set; }
    [NullableAttribute("1")]
public List`1<string> RequestedScopes { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> RequestedResourceIndicators { get; public set; }
    public bool WasConsentShown { get; public set; }
    public string Description { get; public set; }
    public string State { get; public set; }
    public string UiLocales { get; public set; }
    public bool IsOpenIdRequest { get; public set; }
    public bool IsApiResourceRequest { get; public set; }
    public string Nonce { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public List`1<string> AuthenticationContextReferenceClasses { get; public set; }
    public string DisplayMode { get; public set; }
    [NullableAttribute("1")]
public IEnumerable`1<string> PromptModes { get; public set; }
    [NullableAttribute("1")]
public IEnumerable`1<string> OriginalPromptModes { get; public set; }
    [NullableAttribute("1")]
public IEnumerable`1<string> ProcessedPromptModes { get; public set; }
    public Nullable`1<int> MaxAge { get; public set; }
    public string LoginHint { get; public set; }
    public string CodeChallenge { get; public set; }
    public string CodeChallengeMethod { get; public set; }
    [NullableAttribute("1")]
public IEnumerable`1<Claim> RequestObjectValues { get; public set; }
    public string RequestObject { get; public set; }
    public string DPoPKeyThumbprint { get; public set; }
    public string PushedAuthorizationReferenceValue { get; public set; }
    public AuthorizeRequestType AuthorizeRequestType { get; public set; }
    public bool AccessTokenRequested { get; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_ResponseType();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_ResponseType(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_ResponseMode();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_ResponseMode(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_GrantType();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_GrantType(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_RedirectUri();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_RedirectUri(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public List`1<string> get_RequestedScopes();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_RequestedScopes(List`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_RequestedResourceIndicators();
    [CompilerGeneratedAttribute]
public void set_RequestedResourceIndicators(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_WasConsentShown();
    [CompilerGeneratedAttribute]
public void set_WasConsentShown(bool value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_State();
    [CompilerGeneratedAttribute]
public void set_State(string value);
    [CompilerGeneratedAttribute]
public string get_UiLocales();
    [CompilerGeneratedAttribute]
public void set_UiLocales(string value);
    [CompilerGeneratedAttribute]
public bool get_IsOpenIdRequest();
    [CompilerGeneratedAttribute]
public void set_IsOpenIdRequest(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsApiResourceRequest();
    [CompilerGeneratedAttribute]
public void set_IsApiResourceRequest(bool value);
    [CompilerGeneratedAttribute]
public string get_Nonce();
    [CompilerGeneratedAttribute]
public void set_Nonce(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_AuthenticationContextReferenceClasses();
    [CompilerGeneratedAttribute]
public void set_AuthenticationContextReferenceClasses(List`1<string> value);
    [CompilerGeneratedAttribute]
public string get_DisplayMode();
    [CompilerGeneratedAttribute]
public void set_DisplayMode(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IEnumerable`1<string> get_PromptModes();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_PromptModes(IEnumerable`1<string> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IEnumerable`1<string> get_OriginalPromptModes();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_OriginalPromptModes(IEnumerable`1<string> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ProcessedPromptModes();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_ProcessedPromptModes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxAge();
    [CompilerGeneratedAttribute]
public void set_MaxAge(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_LoginHint();
    [CompilerGeneratedAttribute]
public void set_LoginHint(string value);
    [CompilerGeneratedAttribute]
public string get_CodeChallenge();
    [CompilerGeneratedAttribute]
public void set_CodeChallenge(string value);
    [CompilerGeneratedAttribute]
public string get_CodeChallengeMethod();
    [CompilerGeneratedAttribute]
public void set_CodeChallengeMethod(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IEnumerable`1<Claim> get_RequestObjectValues();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_RequestObjectValues(IEnumerable`1<Claim> value);
    [CompilerGeneratedAttribute]
public string get_RequestObject();
    [CompilerGeneratedAttribute]
public void set_RequestObject(string value);
    [CompilerGeneratedAttribute]
public string get_DPoPKeyThumbprint();
    [CompilerGeneratedAttribute]
public void set_DPoPKeyThumbprint(string value);
    [CompilerGeneratedAttribute]
public string get_PushedAuthorizationReferenceValue();
    [CompilerGeneratedAttribute]
public void set_PushedAuthorizationReferenceValue(string value);
    [CompilerGeneratedAttribute]
public AuthorizeRequestType get_AuthorizeRequestType();
    [CompilerGeneratedAttribute]
public void set_AuthorizeRequestType(AuthorizeRequestType value);
    public bool get_AccessTokenRequested();
}
[ExtensionAttribute]
public static class Duende.IdentityServer.Validation.ValidatedAuthorizeRequestExtensions : object {
    [ExtensionAttribute]
public static void RemovePrompt(ValidatedAuthorizeRequest request);
    [ExtensionAttribute]
public static void RemoveMaxAge(ValidatedAuthorizeRequest request);
    [ExtensionAttribute]
public static string GetPrefixedAcrValue(ValidatedAuthorizeRequest request, string prefix);
    [ExtensionAttribute]
public static void RemovePrefixedAcrValue(ValidatedAuthorizeRequest request, string prefix);
    [ExtensionAttribute]
public static string GetIdP(ValidatedAuthorizeRequest request);
    [ExtensionAttribute]
public static void RemoveIdP(ValidatedAuthorizeRequest request);
    [ExtensionAttribute]
public static string GetTenant(ValidatedAuthorizeRequest request);
    [ExtensionAttribute]
public static IEnumerable`1<string> GetAcrValues(ValidatedAuthorizeRequest request);
    [ExtensionAttribute]
public static void RemoveAcrValue(ValidatedAuthorizeRequest request, string value);
    [ExtensionAttribute]
public static void AddAcrValue(ValidatedAuthorizeRequest request, string value);
    [ExtensionAttribute]
public static string GenerateSessionStateValue(ValidatedAuthorizeRequest request);
    [ExtensionAttribute]
private static NameValueCollection ToOptimizedRawValues(ValidatedAuthorizeRequest request);
    [ExtensionAttribute]
public static string ToOptimizedQueryString(ValidatedAuthorizeRequest request);
    [ExtensionAttribute]
[ObsoleteAttribute("This method is obsolete and will be removed in a future version.")]
public static IDictionary`2<string, String[]> ToOptimizedFullDictionary(ValidatedAuthorizeRequest request);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.ValidatedBackchannelAuthenticationRequest : ValidatedRequest {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ICollection`1<string> <RequestedScopes>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ICollection`1<string> <RequestedResourceIndicators>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ICollection`1<string> <AuthenticationContextReferenceClasses>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tenant>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdP>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LoginHintToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdTokenHint>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<Claim> <IdTokenHintClaims>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LoginHint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BindingMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserCode>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Expiry>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IEnumerable`1<Claim> <RequestObjectValues>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestObject>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Properties>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ICollection`1<string> RequestedScopes { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ICollection`1<string> RequestedResourceIndicators { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ICollection`1<string> AuthenticationContextReferenceClasses { get; public set; }
    public string Tenant { get; public set; }
    public string IdP { get; public set; }
    public string LoginHintToken { get; public set; }
    public string IdTokenHint { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<Claim> IdTokenHintClaims { get; public set; }
    public string LoginHint { get; public set; }
    public string BindingMessage { get; public set; }
    public string UserCode { get; public set; }
    public int Expiry { get; public set; }
    [NullableAttribute("1")]
public IEnumerable`1<Claim> RequestObjectValues { get; public set; }
    public string RequestObject { get; public set; }
    [NullableAttribute("1")]
public Dictionary`2<string, object> Properties { get; public set; }
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_RequestedScopes();
    [CompilerGeneratedAttribute]
public void set_RequestedScopes(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_RequestedResourceIndicators();
    [CompilerGeneratedAttribute]
public void set_RequestedResourceIndicators(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_AuthenticationContextReferenceClasses();
    [CompilerGeneratedAttribute]
public void set_AuthenticationContextReferenceClasses(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Tenant();
    [CompilerGeneratedAttribute]
public void set_Tenant(string value);
    [CompilerGeneratedAttribute]
public string get_IdP();
    [CompilerGeneratedAttribute]
public void set_IdP(string value);
    [CompilerGeneratedAttribute]
public string get_LoginHintToken();
    [CompilerGeneratedAttribute]
public void set_LoginHintToken(string value);
    [CompilerGeneratedAttribute]
public string get_IdTokenHint();
    [CompilerGeneratedAttribute]
public void set_IdTokenHint(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<Claim> get_IdTokenHintClaims();
    [CompilerGeneratedAttribute]
public void set_IdTokenHintClaims(IEnumerable`1<Claim> value);
    [CompilerGeneratedAttribute]
public string get_LoginHint();
    [CompilerGeneratedAttribute]
public void set_LoginHint(string value);
    [CompilerGeneratedAttribute]
public string get_BindingMessage();
    [CompilerGeneratedAttribute]
public void set_BindingMessage(string value);
    [CompilerGeneratedAttribute]
public string get_UserCode();
    [CompilerGeneratedAttribute]
public void set_UserCode(string value);
    [CompilerGeneratedAttribute]
public int get_Expiry();
    [CompilerGeneratedAttribute]
public void set_Expiry(int value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IEnumerable`1<Claim> get_RequestObjectValues();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_RequestObjectValues(IEnumerable`1<Claim> value);
    [CompilerGeneratedAttribute]
public string get_RequestObject();
    [CompilerGeneratedAttribute]
public void set_RequestObject(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Properties();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Properties(Dictionary`2<string, object> value);
}
public class Duende.IdentityServer.Validation.ValidatedDeviceAuthorizationRequest : ValidatedRequest {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <RequestedScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOpenIdRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    public IEnumerable`1<string> RequestedScopes { get; public set; }
    public bool IsOpenIdRequest { get; public set; }
    public string Description { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_RequestedScopes();
    [CompilerGeneratedAttribute]
public void set_RequestedScopes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_IsOpenIdRequest();
    [CompilerGeneratedAttribute]
public void set_IsOpenIdRequest(bool value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
}
public class Duende.IdentityServer.Validation.ValidatedEndSessionRequest : ValidatedRequest {
    [CompilerGeneratedAttribute]
private string <PostLogOutUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <State>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UiLocales>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ClientIds>k__BackingField;
    public bool IsAuthenticated { get; }
    public string PostLogOutUri { get; public set; }
    public string State { get; public set; }
    public string UiLocales { get; public set; }
    public IEnumerable`1<string> ClientIds { get; public set; }
    public bool get_IsAuthenticated();
    [CompilerGeneratedAttribute]
public string get_PostLogOutUri();
    [CompilerGeneratedAttribute]
public void set_PostLogOutUri(string value);
    [CompilerGeneratedAttribute]
public string get_State();
    [CompilerGeneratedAttribute]
public void set_State(string value);
    [CompilerGeneratedAttribute]
public string get_UiLocales();
    [CompilerGeneratedAttribute]
public void set_UiLocales(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ClientIds();
    [CompilerGeneratedAttribute]
public void set_ClientIds(IEnumerable`1<string> value);
}
public class Duende.IdentityServer.Validation.ValidatedPushedAuthorizationRequest : ValidatedAuthorizeRequest {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.ValidatedRequest : object {
    [CompilerGeneratedAttribute]
private NameValueCollection <Raw>k__BackingField;
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IssuerName>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ParsedSecret <Secret>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AccessTokenLifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<Claim> <ClientClaims>k__BackingField;
    [CompilerGeneratedAttribute]
private AccessTokenType <AccessTokenType>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ClaimsPrincipal <Subject>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <SessionId>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityServerOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceValidationResult <ValidatedResources>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Confirmation>k__BackingField;
    [CompilerGeneratedAttribute]
private ProofType <ProofType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    public NameValueCollection Raw { get; public set; }
    public Client Client { get; public set; }
    public string IssuerName { get; public set; }
    [NullableAttribute("2")]
public ParsedSecret Secret { get; public set; }
    public int AccessTokenLifetime { get; public set; }
    public ICollection`1<Claim> ClientClaims { get; public set; }
    public AccessTokenType AccessTokenType { get; public set; }
    [NullableAttribute("2")]
public ClaimsPrincipal Subject { get; public set; }
    [NullableAttribute("2")]
public string SessionId { get; public set; }
    public IdentityServerOptions Options { get; public set; }
    public ResourceValidationResult ValidatedResources { get; public set; }
    [NullableAttribute("2")]
public string Confirmation { get; public set; }
    public ProofType ProofType { get; public set; }
    public string ClientId { get; public set; }
    [CompilerGeneratedAttribute]
public NameValueCollection get_Raw();
    [CompilerGeneratedAttribute]
public void set_Raw(NameValueCollection value);
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
    [CompilerGeneratedAttribute]
public string get_IssuerName();
    [CompilerGeneratedAttribute]
public void set_IssuerName(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ParsedSecret get_Secret();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Secret(ParsedSecret value);
    [CompilerGeneratedAttribute]
public int get_AccessTokenLifetime();
    [CompilerGeneratedAttribute]
public void set_AccessTokenLifetime(int value);
    [CompilerGeneratedAttribute]
public ICollection`1<Claim> get_ClientClaims();
    [CompilerGeneratedAttribute]
public void set_ClientClaims(ICollection`1<Claim> value);
    [CompilerGeneratedAttribute]
public AccessTokenType get_AccessTokenType();
    [CompilerGeneratedAttribute]
public void set_AccessTokenType(AccessTokenType value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ClaimsPrincipal get_Subject();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Subject(ClaimsPrincipal value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_SessionId();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_SessionId(string value);
    [CompilerGeneratedAttribute]
public IdentityServerOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(IdentityServerOptions value);
    [CompilerGeneratedAttribute]
public ResourceValidationResult get_ValidatedResources();
    [CompilerGeneratedAttribute]
public void set_ValidatedResources(ResourceValidationResult value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Confirmation();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Confirmation(string value);
    [CompilerGeneratedAttribute]
public ProofType get_ProofType();
    [CompilerGeneratedAttribute]
public void set_ProofType(ProofType value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    public void SetClient(Client client, ParsedSecret secret, string confirmation);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.ValidatedTokenRequest : ValidatedRequest {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <GrantType>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <RequestedScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestedResourceIndicator>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserName>k__BackingField;
    [CompilerGeneratedAttribute]
private RefreshToken <RefreshToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RefreshTokenHandle>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthorizationCode <AuthorizationCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthorizationCodeHandle>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CodeVerifier>k__BackingField;
    [CompilerGeneratedAttribute]
private DeviceCode <DeviceCode>k__BackingField;
    [CompilerGeneratedAttribute]
private BackChannelAuthenticationRequest <BackChannelAuthenticationRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProofKeyThumbprint>k__BackingField;
    [NullableAttribute("1")]
public string GrantType { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> RequestedScopes { get; public set; }
    public string RequestedResourceIndicator { get; public set; }
    public string UserName { get; public set; }
    public RefreshToken RefreshToken { get; public set; }
    public string RefreshTokenHandle { get; public set; }
    public AuthorizationCode AuthorizationCode { get; public set; }
    public string AuthorizationCodeHandle { get; public set; }
    public string CodeVerifier { get; public set; }
    public DeviceCode DeviceCode { get; public set; }
    public BackChannelAuthenticationRequest BackChannelAuthenticationRequest { get; public set; }
    public string ProofKeyThumbprint { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_GrantType();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_GrantType(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_RequestedScopes();
    [CompilerGeneratedAttribute]
public void set_RequestedScopes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_RequestedResourceIndicator();
    [CompilerGeneratedAttribute]
public void set_RequestedResourceIndicator(string value);
    [CompilerGeneratedAttribute]
public string get_UserName();
    [CompilerGeneratedAttribute]
public void set_UserName(string value);
    [CompilerGeneratedAttribute]
public RefreshToken get_RefreshToken();
    [CompilerGeneratedAttribute]
public void set_RefreshToken(RefreshToken value);
    [CompilerGeneratedAttribute]
public string get_RefreshTokenHandle();
    [CompilerGeneratedAttribute]
public void set_RefreshTokenHandle(string value);
    [CompilerGeneratedAttribute]
public AuthorizationCode get_AuthorizationCode();
    [CompilerGeneratedAttribute]
public void set_AuthorizationCode(AuthorizationCode value);
    [CompilerGeneratedAttribute]
public string get_AuthorizationCodeHandle();
    [CompilerGeneratedAttribute]
public void set_AuthorizationCodeHandle(string value);
    [CompilerGeneratedAttribute]
public string get_CodeVerifier();
    [CompilerGeneratedAttribute]
public void set_CodeVerifier(string value);
    [CompilerGeneratedAttribute]
public DeviceCode get_DeviceCode();
    [CompilerGeneratedAttribute]
public void set_DeviceCode(DeviceCode value);
    [CompilerGeneratedAttribute]
public BackChannelAuthenticationRequest get_BackChannelAuthenticationRequest();
    [CompilerGeneratedAttribute]
public void set_BackChannelAuthenticationRequest(BackChannelAuthenticationRequest value);
    [CompilerGeneratedAttribute]
public string get_ProofKeyThumbprint();
    [CompilerGeneratedAttribute]
public void set_ProofKeyThumbprint(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Duende.IdentityServer.Validation.ValidationResult : object {
    [CompilerGeneratedAttribute]
private bool <IsError>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    public bool IsError { get; public set; }
    public string Error { get; public set; }
    public string ErrorDescription { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsError();
    [CompilerGeneratedAttribute]
public void set_IsError(bool value);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
}
public class Duende.IdentityServer.Validation.X509NameSecretValidator : object {
    private ILogger`1<X509NameSecretValidator> _logger;
    public X509NameSecretValidator(ILogger`1<X509NameSecretValidator> logger);
    public sealed virtual Task`1<SecretValidationResult> ValidateAsync(IEnumerable`1<Secret> secrets, ParsedSecret parsedSecret);
}
public class Duende.IdentityServer.Validation.X509ThumbprintSecretValidator : object {
    private ILogger`1<X509ThumbprintSecretValidator> _logger;
    public X509ThumbprintSecretValidator(ILogger`1<X509ThumbprintSecretValidator> logger);
    public sealed virtual Task`1<SecretValidationResult> ValidateAsync(IEnumerable`1<Secret> secrets, ParsedSecret parsedSecret);
}
public abstract class Duende.License : object {
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Claims>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SerialNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CompanyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContactInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <Expiration>k__BackingField;
    [CompilerGeneratedAttribute]
private LicenseEdition <Edition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Extras>k__BackingField;
    internal ClaimsPrincipal Claims { get; private set; }
    public int SerialNumber { get; public set; }
    public string CompanyName { get; public set; }
    public string ContactInfo { get; public set; }
    public Nullable`1<DateTime> Expiration { get; public set; }
    public LicenseEdition Edition { get; public set; }
    internal bool IsEnterpriseEdition { get; }
    internal bool IsBusinessEdition { get; }
    internal bool IsStarterEdition { get; }
    internal bool IsCommunityEdition { get; }
    internal bool IsBffEdition { get; }
    public string Extras { get; public set; }
    internal virtual void Initialize(ClaimsPrincipal claims);
    [CompilerGeneratedAttribute]
internal ClaimsPrincipal get_Claims();
    [CompilerGeneratedAttribute]
private void set_Claims(ClaimsPrincipal value);
    [CompilerGeneratedAttribute]
public int get_SerialNumber();
    [CompilerGeneratedAttribute]
public void set_SerialNumber(int value);
    [CompilerGeneratedAttribute]
public string get_CompanyName();
    [CompilerGeneratedAttribute]
public void set_CompanyName(string value);
    [CompilerGeneratedAttribute]
public string get_ContactInfo();
    [CompilerGeneratedAttribute]
public void set_ContactInfo(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_Expiration();
    [CompilerGeneratedAttribute]
public void set_Expiration(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public LicenseEdition get_Edition();
    [CompilerGeneratedAttribute]
public void set_Edition(LicenseEdition value);
    internal bool get_IsEnterpriseEdition();
    internal bool get_IsBusinessEdition();
    internal bool get_IsStarterEdition();
    internal bool get_IsCommunityEdition();
    internal bool get_IsBffEdition();
    [CompilerGeneratedAttribute]
public string get_Extras();
    [CompilerGeneratedAttribute]
public void set_Extras(string value);
    public virtual string ToString();
}
internal class Duende.LicenseValidator`1 : object {
    private static String[] LicenseFileNames;
    protected ILogger Logger;
    protected Action`2<string, Object[]> ErrorLog;
    protected Action`2<string, Object[]> InformationLog;
    protected Action`2<string, Object[]> WarningLog;
    protected Action`2<string, Object[]> DebugLog;
    [CompilerGeneratedAttribute]
private T <License>k__BackingField;
    private T _copy;
    protected T License { get; private set; }
    private static LicenseValidator`1();
    [CompilerGeneratedAttribute]
protected T get_License();
    [CompilerGeneratedAttribute]
private void set_License(T value);
    public T GetLicense();
    protected void Initialize(ILoggerFactory loggerFactory, string productName, string key);
    private static string LoadFromFile();
    protected void ValidateLicense();
    protected virtual void ValidateExpiration(List`1<string> errors);
    protected virtual void ValidateProductFeatures(List`1<string> errors);
    protected virtual void WarnForProductFeaturesWhenMissingLicense();
    internal T ValidateKey(string licenseKey);
    protected void LogToTrace(string message, Object[] args);
    protected void LogToDebug(string message, Object[] args);
    protected void LogToInformation(string message, Object[] args);
    protected void LogToWarning(string message, Object[] args);
    protected void LogToError(string message, Object[] args);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.IdentityServerApplicationBuilderExtensions : object {
    [ExtensionAttribute]
public static IApplicationBuilder UseIdentityServer(IApplicationBuilder app, IdentityServerMiddlewareOptions options);
    [ExtensionAttribute]
internal static void Validate(IApplicationBuilder app);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Builder.IdentityServerApplicationBuilderExtensions/<ValidateAsync>d__2")]
private static Task ValidateAsync(IServiceProvider services, ILogger logger);
    private static void ValidateOptions(IdentityServerOptions options, ILogger logger);
    internal static object TestService(IServiceProvider serviceProvider, Type service, ILogger logger, string message, bool doThrow);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Builder.IdentityServerMiddlewareOptions : object {
    [CompilerGeneratedAttribute]
private Action`1<IApplicationBuilder> <AuthenticationMiddleware>k__BackingField;
    public Action`1<IApplicationBuilder> AuthenticationMiddleware { get; public set; }
    [CompilerGeneratedAttribute]
public Action`1<IApplicationBuilder> get_AuthenticationMiddleware();
    [CompilerGeneratedAttribute]
public void set_AuthenticationMiddleware(Action`1<IApplicationBuilder> value);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Http.AuthenticationManagerExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Http.AuthenticationManagerExtensions/<SignInAsync>d__0")]
[ExtensionAttribute]
public static Task SignInAsync(HttpContext context, IdentityServerUser user);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Http.AuthenticationManagerExtensions/<SignInAsync>d__1")]
[ExtensionAttribute]
public static Task SignInAsync(HttpContext context, IdentityServerUser user, AuthenticationProperties properties);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Http.AuthenticationManagerExtensions/<GetCookieAuthenticationSchemeAsync>d__2")]
[ExtensionAttribute]
internal static Task`1<string> GetCookieAuthenticationSchemeAsync(HttpContext context);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.IdentityServerBuilderDynamicSchemesExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryIdentityProviders(IIdentityServerBuilder builder, IEnumerable`1<IdentityProvider> providers);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.IdentityServerBuilderExtensions : object {
    [ExtensionAttribute]
public static IIdentityServerBuilder AddTestUsers(IIdentityServerBuilder builder, List`1<TestUser> users);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.IdentityServerBuilderExtensionsAdditional : object {
    [ExtensionAttribute]
public static IIdentityServerBuilder AddExtensionGrantValidator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddRedirectUriValidator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddAppAuthRedirectUriValidator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddResourceOwnerValidator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddProfileService(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddResourceValidator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddScopeParser(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddClientStore(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddResourceStore(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddDeviceFlowStore(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddPersistedGrantStore(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddSigningKeyStore(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddPushedAuthorizationRequestStore(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddCorsPolicyService(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddCorsPolicyCache(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddSecretParser(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddSecretValidator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddClientStoreCache(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddResourceStoreCache(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddIdentityProviderStoreCache(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddAuthorizeInteractionResponseGenerator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddCustomAuthorizeRequestValidator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddCustomTokenRequestValidator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddCustomBackchannelAuthenticationRequestValidator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddJwtBearerClientAuthentication(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddClientConfigurationValidator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddIdentityProviderConfigurationValidator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddMutualTlsSecretValidators(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddBackChannelLogoutService(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IHttpClientBuilder AddBackChannelLogoutHttpClient(IIdentityServerBuilder builder, Action`1<HttpClient> configureClient);
    [ExtensionAttribute]
public static IHttpClientBuilder AddJwtRequestUriHttpClient(IIdentityServerBuilder builder, Action`1<HttpClient> configureClient);
    [ExtensionAttribute]
[ObsoleteAttribute("This feature is deprecated. Consider using Pushed Authorization Requests instead.")]
public static IIdentityServerBuilder AddAuthorizationParametersMessageStore(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddUserSession(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddIdentityProviderStore(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddBackchannelAuthenticationUserValidator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddBackchannelAuthenticationUserNotificationService(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddLegacyClock(IIdentityServerBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.IdentityServerBuilderExtensionsCore : object {
    [ExtensionAttribute]
public static IIdentityServerBuilder AddRequiredPlatformServices(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddCookieAuthentication(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddDefaultCookieHandlers(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddCookieAuthenticationExtensions(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddDefaultEndpoints(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddEndpoint(IIdentityServerBuilder builder, string name, PathString path);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddHttpWriter(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddCoreServices(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddPluggableServices(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddKeyManagement(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddDynamicProvidersCore(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddValidators(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddResponseGenerators(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddDefaultSecretParsers(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddDefaultSecretValidators(IIdentityServerBuilder builder);
    [ExtensionAttribute]
internal static void AddTransientDecorator(IServiceCollection services);
    [ExtensionAttribute]
internal static void AddDecorator(IServiceCollection services);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.IdentityServerBuilderExtensionsCrypto : object {
    [ExtensionAttribute]
public static IIdentityServerBuilder AddSigningCredential(IIdentityServerBuilder builder, SigningCredentials credential);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddSigningCredential(IIdentityServerBuilder builder, X509Certificate2 certificate, string signingAlgorithm);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddSigningCredential(IIdentityServerBuilder builder, string name, StoreLocation location, NameType nameType, string signingAlgorithm);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddSigningCredential(IIdentityServerBuilder builder, SecurityKey key, string signingAlgorithm);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddSigningCredential(IIdentityServerBuilder builder, RsaSecurityKey key, RsaSigningAlgorithm signingAlgorithm);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddSigningCredential(IIdentityServerBuilder builder, ECDsaSecurityKey key, ECDsaSigningAlgorithm signingAlgorithm);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddDeveloperSigningCredential(IIdentityServerBuilder builder, bool persistKey, string filename, RsaSigningAlgorithm signingAlgorithm);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddValidationKey(IIdentityServerBuilder builder, SecurityKeyInfo[] keys);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddValidationKey(IIdentityServerBuilder builder, RsaSecurityKey key, RsaSigningAlgorithm signingAlgorithm);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddValidationKey(IIdentityServerBuilder builder, ECDsaSecurityKey key, ECDsaSigningAlgorithm signingAlgorithm);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddValidationKey(IIdentityServerBuilder builder, X509Certificate2 certificate, string signingAlgorithm);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddValidationKey(IIdentityServerBuilder builder, string name, StoreLocation location, NameType nameType, string signingAlgorithm);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.IdentityServerBuilderExtensionsInMemory : object {
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryCaching(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryIdentityResources(IIdentityServerBuilder builder, IEnumerable`1<IdentityResource> identityResources);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryIdentityResources(IIdentityServerBuilder builder, IConfigurationSection section);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryApiResources(IIdentityServerBuilder builder, IEnumerable`1<ApiResource> apiResources);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryApiResources(IIdentityServerBuilder builder, IConfigurationSection section);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryApiScopes(IIdentityServerBuilder builder, IEnumerable`1<ApiScope> apiScopes);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryApiScopes(IIdentityServerBuilder builder, IConfigurationSection section);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryClients(IIdentityServerBuilder builder, ICollection`1<Client> clients);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryClients(IIdentityServerBuilder builder, IEnumerable`1<Client> clients);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryClients(IIdentityServerBuilder builder, IConfigurationSection section);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryPersistedGrants(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryPushedAuthorizationRequests(IIdentityServerBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.IdentityServerBuilderOidcExtensions : object {
    [ExtensionAttribute]
public static IIdentityServerBuilder AddOidcDynamicProvider(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryOidcProviders(IIdentityServerBuilder builder, IEnumerable`1<OidcProvider> providers);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.IdentityServerServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IIdentityServerBuilder AddIdentityServerBuilder(IServiceCollection services);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddIdentityServer(IServiceCollection services);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddIdentityServer(IServiceCollection services, Action`1<IdentityServerOptions> setupAction);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddIdentityServer(IServiceCollection services, IConfiguration configuration);
    [ExtensionAttribute]
public static IServiceCollection AddOidcStateDataFormatterCache(IServiceCollection services, String[] schemes);
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.DependencyInjection.IIdentityServerBuilder {
    public IServiceCollection Services { get; }
    public abstract virtual IServiceCollection get_Services();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.LocalApiAuthenticationExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddLocalApiAuthentication(IServiceCollection services, Func`2<ClaimsPrincipal, Task`1<ClaimsPrincipal>> transformationFunc);
    [ExtensionAttribute]
public static AuthenticationBuilder AddLocalApi(AuthenticationBuilder builder);
    [ExtensionAttribute]
public static AuthenticationBuilder AddLocalApi(AuthenticationBuilder builder, Action`1<LocalApiAuthenticationOptions> configureOptions);
    [ExtensionAttribute]
public static AuthenticationBuilder AddLocalApi(AuthenticationBuilder builder, string authenticationScheme, Action`1<LocalApiAuthenticationOptions> configureOptions);
    [ExtensionAttribute]
public static AuthenticationBuilder AddLocalApi(AuthenticationBuilder builder, string authenticationScheme, string displayName, Action`1<LocalApiAuthenticationOptions> configureOptions);
}
public class Microsoft.Extensions.DependencyInjection.ServerSideSessionCleanupHost : object {
    private IServiceProvider _serviceProvider;
    private IdentityServerOptions _options;
    private ILogger`1<ServerSideSessionCleanupHost> _logger;
    private CancellationTokenSource _source;
    public ServerSideSessionCleanupHost(IServiceProvider serviceProvider, IdentityServerOptions options, ILogger`1<ServerSideSessionCleanupHost> logger);
    public sealed virtual Task StartAsync(CancellationToken cancellationToken);
    public sealed virtual Task StopAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Extensions.DependencyInjection.ServerSideSessionCleanupHost/<StartInternalAsync>d__7")]
private Task StartInternalAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Extensions.DependencyInjection.ServerSideSessionCleanupHost/<RunAsync>d__8")]
private Task RunAsync(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private Task <StartAsync>b__5_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.SessionManagementServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IIdentityServerBuilder AddServerSideSessions(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddServerSideSessions(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddServerSideSessionStore(IIdentityServerBuilder builder);
}
public class Microsoft.Extensions.DependencyInjection.TestBackchannelLoginUserValidator : object {
    private TestUserStore _testUserStore;
    public TestBackchannelLoginUserValidator(TestUserStore testUserStore);
    public sealed virtual Task`1<BackchannelAuthenticationUserValidationResult> ValidateRequestAsync(BackchannelAuthenticationUserValidatorContext userValidatorContext);
}
