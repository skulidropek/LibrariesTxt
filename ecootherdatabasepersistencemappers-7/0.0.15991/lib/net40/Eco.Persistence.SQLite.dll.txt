public class Eco.Persistence.Connection.SQLiteIDatabaseImpl : Ado2IDatabaseImpl {
    public bool AlwaysReadInTransactions { get; }
    public SQLiteIDatabaseImpl(DbConnection connection, SqlDatabaseConfig config);
    public virtual DataTable GetIndexDefsForTable(string tableName);
    public virtual IList`1<string> AllTableNames(string pattern);
    public virtual bool get_AlwaysReadInTransactions();
    protected virtual string HandleCommandParameters(string commandText, IDataParameterCollection parameters);
}
[ToolboxItemAttribute("True")]
public class Eco.Persistence.PersistenceMapperSQLite : PersistenceMapperAdo2 {
    [LocalizableCategoryAttribute("Eco.Persistence.PersistenceStringRes", "sCategoryPersistence")]
[LocalizableDescriptionAttribute("Eco.Persistence.PersistenceStringRes", "sPropertyConnection")]
[DefaultValueAttribute("")]
public SQLiteConnection Connection { get; public set; }
    protected virtual Type ConnectionType();
    public SQLiteConnection get_Connection();
    public void set_Connection(SQLiteConnection value);
    protected virtual IDatabase InternalCreateIDatabase(DbConnection connection, SqlDatabaseConfig config);
    public void InitializeSqlDatabaseConfig();
    public static void InitializeSqlDatabaseConfig(SqlDatabaseConfig config);
}
public class Eco.Persistence.SQLite.BooleanAsInteger : AbstractSingleColumnAttribute {
    public string TrueString { get; }
    public sealed virtual Type ValueType();
    public sealed virtual string ColumnType(int length);
    public sealed virtual string DefaultDbValue(string modeledValue, SqlDatabaseConfig sqlDatabaseConfig);
    public sealed virtual void ValueToParameter(object value, IDataParameter parameter);
    public sealed virtual void StringToParameter(string value, IDataParameter parameter);
    public virtual object ColumnToValue(object columnValue);
    public sealed virtual string get_TrueString();
}
public class Eco.Persistence.SQLite.ByteArrayAsBLOB : AbstractSingleColumnAttribute {
    public sealed virtual Type ValueType();
    public sealed virtual string ColumnType(int length);
    public sealed virtual string DefaultDbValue(string modeledValue, SqlDatabaseConfig sqlDatabaseConfig);
    public sealed virtual void ValueToParameter(object value, IDataParameter parameter);
    public sealed virtual void StringToParameter(string value, IDataParameter parameter);
    public virtual object ColumnToValue(object columnValue);
    public virtual bool IsEqual(object value, object columnValue);
}
public class Eco.Persistence.SQLite.Int32AsAutoInc : AbstractNumericSingleColumnAttribute {
    public sealed virtual Type ValueType();
    public virtual string DefaultDbValue(string modeledValue, SqlDatabaseConfig sqlDatabaseConfig);
    public sealed virtual string ColumnType(int length);
    public sealed virtual void ValueToParameter(object value, IDataParameter parameter);
    public sealed virtual void StringToParameter(string value, IDataParameter parameter);
    public virtual object ColumnToValue(object columnValue);
    public sealed virtual void MakeColumnAutoInc(string tableName, string columnName, IDatabase database);
}
public class Eco.Persistence.SQLite.Int32AsInteger : AbstractNumericSingleColumnAttribute {
    public sealed virtual Type ValueType();
    public sealed virtual string ColumnType(int length);
    public sealed virtual void ValueToParameter(object value, IDataParameter parameter);
    public sealed virtual void StringToParameter(string value, IDataParameter parameter);
    public virtual object ColumnToValue(object columnValue);
}
public class Eco.Persistence.SQLite.Int64AsInteger : AbstractNumericSingleColumnAttribute {
    public sealed virtual Type ValueType();
    public sealed virtual string ColumnType(int length);
    public sealed virtual void ValueToParameter(object value, IDataParameter parameter);
    public sealed virtual void StringToParameter(string value, IDataParameter parameter);
    public virtual object ColumnToValue(object columnValue);
}
public class Eco.Persistence.SQLite.SingleAsFloat : AbstractNumericSingleColumnAttribute {
    public sealed virtual Type ValueType();
    public sealed virtual string ColumnType(int length);
    public sealed virtual void ValueToParameter(object value, IDataParameter parameter);
    public sealed virtual void StringToParameter(string value, IDataParameter parameter);
    public virtual object ColumnToValue(object columnValue);
}
public class Eco.Persistence.SQLite.StringAsText : AbstractSingleColumnAttribute {
    public sealed virtual Type ValueType();
    public sealed virtual string ColumnType(int length);
    public sealed virtual string DefaultDbValue(string modeledValue, SqlDatabaseConfig sqlDatabaseConfig);
    public sealed virtual void ValueToParameter(object value, IDataParameter parameter);
    public sealed virtual void StringToParameter(string value, IDataParameter parameter);
    public virtual object ColumnToValue(object columnValue);
}
