public abstract class MDriven.Persistence.WebApi.MDrivenPersistenceController`1 : ApiController {
    private ITypeSystemService tss { get; }
    protected abstract virtual string TypeNamePrefix();
    protected virtual void LoggOpportunity(Exception e, bool wasInWrite, string operation);
    public virtual void VerifyAuthentication();
    protected IPersistenceMapper GetPMapper();
    protected void ReturnPMapper(IPersistenceMapper pmapper);
    private ITypeSystemService get_tss();
    protected PersistenceMapperProvider GetPersistenceMapperProvider();
    protected TT GetArgsFromRequest();
    protected HttpResponseMessage ReturnAsStream(WebApiArgsAndResultBase resultobj);
    protected abstract virtual bool VerifyLogin(string user, string password);
    [HttpPostAttribute]
public virtual HttpResponseMessage Login();
    [HttpPostAttribute]
public HttpResponseMessage CurrentSyncVersion();
    [HttpPostAttribute]
public HttpResponseMessage Fetch();
    [HttpPostAttribute]
public HttpResponseMessage FetchIDListWithCondition();
    [HttpPostAttribute]
public HttpResponseMessage GetChangesSince();
    public HttpResponseException GetHttpException(Exception e);
    [HttpPostAttribute]
public HttpResponseMessage SupportsSync();
    [HttpPostAttribute]
public HttpResponseMessage TimeForVersion();
    protected virtual bool CheckUpdateOverride();
    protected virtual void UpdateOverride(IPersistenceMapper originalpmapper, Datablock datablock, UpdatePrecondition precondition, IdTranslationList& translationList, Int32& version, SyncVersion& syncVersion, UpdateResult& result);
    [HttpPostAttribute]
public HttpResponseMessage Update();
    [HttpPostAttribute]
public HttpResponseMessage VersionForTime();
    [HttpPostAttribute]
public HttpResponseMessage FetchDataBlockWithCondition();
}
