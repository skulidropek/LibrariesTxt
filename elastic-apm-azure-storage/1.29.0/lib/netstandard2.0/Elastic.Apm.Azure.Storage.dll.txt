internal static class Elastic.Apm.Azure.Storage.AzureBlobStorage : object {
    internal static string SpanName;
    internal static string SubType;
}
internal class Elastic.Apm.Azure.Storage.AzureBlobStorageDiagnosticListener : DiagnosticListenerBase {
    private ConcurrentDictionary`2<string, ISpan> _processingSegments;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    public AzureBlobStorageDiagnosticListener(IApmAgent agent);
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    protected virtual void HandleOnNext(KeyValuePair`2<string, object> kv);
    private void OnStart(KeyValuePair`2<string, object> kv, string action);
    private static void SetDestination(ISpan span, BlobUrl blobUrl);
    private void OnStop();
    private void OnException(KeyValuePair`2<string, object> kv);
}
public class Elastic.Apm.Azure.Storage.AzureBlobStorageDiagnosticsSubscriber : object {
    public sealed virtual IDisposable Subscribe(IApmAgent agent);
}
internal class Elastic.Apm.Azure.Storage.AzureCoreDiagnosticListener : object {
    private IApmAgent _agent;
    [CompilerGeneratedAttribute]
private bool <AllowDuplicates>k__BackingField;
    public string Name { get; }
    public bool AllowDuplicates { get; }
    public AzureCoreDiagnosticListener(IApmAgent agent);
    public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_AllowDuplicates();
    public sealed virtual void OnCompleted();
    public sealed virtual void OnError(Exception error);
    public sealed virtual void OnNext(KeyValuePair`2<string, object> value);
    private static Activity FindTargetActivity(Activity activity);
}
internal class Elastic.Apm.Azure.Storage.AzureFileShareStorageDiagnosticListener : DiagnosticListenerBase {
    private ConcurrentDictionary`2<string, ISpan> _processingSegments;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    public AzureFileShareStorageDiagnosticListener(IApmAgent agent);
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    protected virtual void HandleOnNext(KeyValuePair`2<string, object> kv);
    private void OnStart(KeyValuePair`2<string, object> kv, string action);
    private static void SetDestination(ISpan span, FileShareUrl fileShareUrl);
    private void OnStop();
    private void OnException(KeyValuePair`2<string, object> kv);
}
public class Elastic.Apm.Azure.Storage.AzureFileShareStorageDiagnosticsSubscriber : object {
    public sealed virtual IDisposable Subscribe(IApmAgent agent);
}
internal static class Elastic.Apm.Azure.Storage.AzureFileStorage : object {
    internal static string SpanName;
    internal static string SubType;
}
internal static class Elastic.Apm.Azure.Storage.AzureQueueStorage : object {
    internal static string SpanName;
    internal static string SubType;
}
internal class Elastic.Apm.Azure.Storage.AzureQueueStorageDiagnosticListener : DiagnosticListenerBase {
    private Framework _framework;
    private ConcurrentDictionary`2<string, IExecutionSegment> _processingSegments;
    private ApmAgent _realAgent;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    public AzureQueueStorageDiagnosticListener(IApmAgent agent);
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    protected virtual void HandleOnNext(KeyValuePair`2<string, object> kv);
    private void OnSendStart(KeyValuePair`2<string, object> kv);
    private static void SetDestination(ISpan span, string destinationAddress, string queueName);
    private void OnReceiveStart(KeyValuePair`2<string, object> kv);
    private bool MatchesIgnoreMessageQueues(string name);
    private void OnStop();
    private void OnException(KeyValuePair`2<string, object> kv);
}
public class Elastic.Apm.Azure.Storage.AzureQueueStorageDiagnosticsSubscriber : object {
    public sealed virtual IDisposable Subscribe(IApmAgent agent);
}
internal class Elastic.Apm.Azure.Storage.BlobUrl : StorageUrl {
    [CompilerGeneratedAttribute]
private string <ResourceName>k__BackingField;
    public string ResourceName { get; }
    public BlobUrl(Uri url);
    public static bool TryCreate(string url, BlobUrl& blobUrl);
    [CompilerGeneratedAttribute]
public string get_ResourceName();
}
internal class Elastic.Apm.Azure.Storage.FileShareUrl : StorageUrl {
    [CompilerGeneratedAttribute]
private string <ResourceName>k__BackingField;
    public string ResourceName { get; }
    public FileShareUrl(Uri url);
    public static bool TryCreate(string url, FileShareUrl& fileShareUrl);
    [CompilerGeneratedAttribute]
public string get_ResourceName();
}
internal class Elastic.Apm.Azure.Storage.MicrosoftAzureBlobStorageTracer : object {
    public sealed virtual bool IsMatch(string method, Uri requestUrl, Func`2<string, string> headerGetter);
    public sealed virtual ISpan StartSpan(IApmAgent agent, string method, Uri requestUrl, Func`2<string, string> headerGetter);
    public sealed virtual bool ShouldSuppressSpanCreation();
}
internal abstract class Elastic.Apm.Azure.Storage.StorageUrl : object {
    private static Char[] SplitDomain;
    [CompilerGeneratedAttribute]
private string <StorageAccountName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FullyQualifiedNamespace>k__BackingField;
    public string StorageAccountName { get; }
    public string FullyQualifiedNamespace { get; }
    protected StorageUrl(Uri url);
    private static StorageUrl();
    [CompilerGeneratedAttribute]
public string get_StorageAccountName();
    [CompilerGeneratedAttribute]
public string get_FullyQualifiedNamespace();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
