public static class Elastic.Apm.Agent : object {
    private static Lazy`1<ApmAgent> LazyApmAgent;
    private static object InitializationLock;
    private static List`1<Func`2<IError, IError>> ErrorFilters;
    private static List`1<Func`2<ISpan, ISpan>> SpanFilters;
    private static List`1<Func`2<ITransaction, ITransaction>> TransactionFilters;
    [CompilerGeneratedAttribute]
private static AgentComponents <Components>k__BackingField;
    internal static AgentComponents Components { get; private set; }
    public static IConfigurationReader Config { get; }
    internal static ApmAgent Instance { get; }
    public static bool IsConfigured { get; }
    public static ITracer Tracer { get; }
    private static Agent();
    [CompilerGeneratedAttribute]
internal static AgentComponents get_Components();
    [CompilerGeneratedAttribute]
private static void set_Components(AgentComponents value);
    public static IConfigurationReader get_Config();
    internal static ApmAgent get_Instance();
    public static bool get_IsConfigured();
    public static ITracer get_Tracer();
    public static bool AddFilter(Func`2<ITransaction, ITransaction> filter);
    public static bool AddFilter(Func`2<ISpan, ISpan> filter);
    public static bool AddFilter(Func`2<IError, IError> filter);
    private static bool CheckAndAddFilter(Func`2<IPayloadSenderWithFilters, bool> action);
    public static IDisposable Subscribe(IDiagnosticsSubscriber[] subscribers);
    public static void Setup(AgentComponents agentComponents);
    internal static void Setup(ApmAgent apmAgent);
}
public class Elastic.Apm.AgentComponents : object {
    [CompilerGeneratedAttribute]
private ICentralConfigurationFetcher <CentralConfigurationFetcher>k__BackingField;
    [CompilerGeneratedAttribute]
private IConfigurationStore <ConfigurationStore>k__BackingField;
    [CompilerGeneratedAttribute]
private IMetricsCollector <MetricsCollector>k__BackingField;
    [CompilerGeneratedAttribute]
private IApmServerInfo <ApmServerInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpTraceConfiguration <HttpTraceConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<Type> <Elastic.Apm.IApmAgentComponents.SubscribedListeners>k__BackingField;
    [CompilerGeneratedAttribute]
private Tracer <TracerInternal>k__BackingField;
    [CompilerGeneratedAttribute]
private IApmLogger <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private IPayloadSender <PayloadSender>k__BackingField;
    [CompilerGeneratedAttribute]
private Service <Service>k__BackingField;
    internal ICentralConfigurationFetcher CentralConfigurationFetcher { get; }
    internal IConfigurationStore ConfigurationStore { get; }
    internal IMetricsCollector MetricsCollector { get; }
    internal IApmServerInfo ApmServerInfo { get; }
    internal HttpTraceConfiguration HttpTraceConfiguration { get; }
    private HashSet`1<Type> Elastic.Apm.IApmAgentComponents.SubscribedListeners { get; }
    internal Tracer TracerInternal { get; }
    [ObsoleteAttribute("Please use Configuration property instead")]
public IConfigurationReader ConfigurationReader { get; }
    public IConfigurationReader Configuration { get; }
    public IApmLogger Logger { get; }
    public IPayloadSender PayloadSender { get; }
    public Service Service { get; }
    public ITracer Tracer { get; }
    public AgentComponents(IApmLogger logger, IConfigurationReader configurationReader, IPayloadSender payloadSender);
    internal AgentComponents(IApmLogger logger, IConfigurationReader configurationReader, IPayloadSender payloadSender, IMetricsCollector metricsCollector, ICurrentExecutionSegmentsContainer currentExecutionSegmentsContainer, ICentralConfigurationFetcher centralConfigurationFetcher, IApmServerInfo apmServerInfo, BreakdownMetricsProvider breakdownMetricsProvider, IHostNameDetector hostNameDetector);
    private void EnsureElasticActivityStarted();
    private void ServerInfoCallback(bool success, IApmServerInfo serverInfo);
    private static IApmLogger DefaultLogger(IApmLogger logger, IConfigurationReader configurationReader);
    private static IConfigurationReader CreateConfiguration(IApmLogger logger, IConfigurationReader configurationReader);
    internal static IApmLogger GetGlobalLogger(IApmLogger fallbackLogger, LogLevel agentLogLevel, IDictionary environmentVariables);
    [CompilerGeneratedAttribute]
internal ICentralConfigurationFetcher get_CentralConfigurationFetcher();
    [CompilerGeneratedAttribute]
internal IConfigurationStore get_ConfigurationStore();
    [CompilerGeneratedAttribute]
internal IMetricsCollector get_MetricsCollector();
    [CompilerGeneratedAttribute]
internal IApmServerInfo get_ApmServerInfo();
    [CompilerGeneratedAttribute]
internal HttpTraceConfiguration get_HttpTraceConfiguration();
    [CompilerGeneratedAttribute]
private sealed virtual override HashSet`1<Type> Elastic.Apm.IApmAgentComponents.get_SubscribedListeners();
    [CompilerGeneratedAttribute]
internal Tracer get_TracerInternal();
    public sealed virtual IConfigurationReader get_ConfigurationReader();
    public sealed virtual IConfigurationReader get_Configuration();
    [CompilerGeneratedAttribute]
public sealed virtual IApmLogger get_Logger();
    [CompilerGeneratedAttribute]
public sealed virtual IPayloadSender get_PayloadSender();
    [CompilerGeneratedAttribute]
public sealed virtual Service get_Service();
    public sealed virtual ITracer get_Tracer();
    public sealed virtual void Dispose();
}
public class Elastic.Apm.Api.Age : object {
    [CompilerGeneratedAttribute]
private long <Ms>k__BackingField;
    public long Ms { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Ms();
    [CompilerGeneratedAttribute]
public void set_Ms(long value);
}
public class Elastic.Apm.Api.ApiConstants : ValueType {
    public static string ActionExec;
    public static string ActionQuery;
    public static string ActionRequest;
    public static string SubtypeElasticsearch;
    public static string SubtypeHttp;
    public static string SubtypeMssql;
    public static string SubtypeSqLite;
    public static string SubtypeMySql;
    public static string SubtypeOracle;
    public static string SubtypePostgreSql;
    public static string SubTypeGrpc;
    public static string SubTypeRedis;
    public static string SubTypeMongoDb;
    public static string SubTypeCosmosDb;
    public static string SubTypeInternal;
    public static string TypeRequest;
    public static string TypeDb;
    public static string TypeExternal;
    public static string TypeMessaging;
    public static string TypeStorage;
    public static string TypeApp;
    public static string TypeUnknown;
}
public class Elastic.Apm.Api.CapturedException : object {
    [CompilerGeneratedAttribute]
private List`1<CapturedException> <Cause>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Handled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<CapturedStackFrame> <StackTrace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public List`1<CapturedException> Cause { get; public set; }
    [MaxLengthAttribute]
public string Code { get; public set; }
    public bool Handled { get; public set; }
    public string Message { get; public set; }
    [JsonPropertyAttribute("stacktrace")]
public List`1<CapturedStackFrame> StackTrace { get; public set; }
    [MaxLengthAttribute]
public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<CapturedException> get_Cause();
    [CompilerGeneratedAttribute]
public void set_Cause(List`1<CapturedException> value);
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(string value);
    [CompilerGeneratedAttribute]
public bool get_Handled();
    [CompilerGeneratedAttribute]
public void set_Handled(bool value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public List`1<CapturedStackFrame> get_StackTrace();
    [CompilerGeneratedAttribute]
public void set_StackTrace(List`1<CapturedStackFrame> value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual string ToString();
}
public class Elastic.Apm.Api.CapturedStackFrame : object {
    [CompilerGeneratedAttribute]
private string <AbsPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Function>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LineNo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Module>k__BackingField;
    [JsonPropertyAttribute("abs_path")]
public string AbsPath { get; public set; }
    [JsonPropertyAttribute("classname")]
public string ClassName { get; public set; }
    [JsonPropertyAttribute("filename")]
public string FileName { get; public set; }
    public string Function { get; public set; }
    [JsonPropertyAttribute("lineno")]
public int LineNo { get; public set; }
    public string Module { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AbsPath();
    [CompilerGeneratedAttribute]
public void set_AbsPath(string value);
    [CompilerGeneratedAttribute]
public string get_ClassName();
    [CompilerGeneratedAttribute]
public void set_ClassName(string value);
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public void set_FileName(string value);
    [CompilerGeneratedAttribute]
public string get_Function();
    [CompilerGeneratedAttribute]
public void set_Function(string value);
    [CompilerGeneratedAttribute]
public int get_LineNo();
    [CompilerGeneratedAttribute]
public void set_LineNo(int value);
    [CompilerGeneratedAttribute]
public string get_Module();
    [CompilerGeneratedAttribute]
public void set_Module(string value);
}
public class Elastic.Apm.Api.Cloud : object {
    [CompilerGeneratedAttribute]
private CloudAccount <Account>k__BackingField;
    [CompilerGeneratedAttribute]
private CloudInstance <Instance>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AvailabilityZone>k__BackingField;
    [CompilerGeneratedAttribute]
private CloudMachine <Machine>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Provider>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Region>k__BackingField;
    [CompilerGeneratedAttribute]
private CloudProject <Project>k__BackingField;
    [CompilerGeneratedAttribute]
private CloudService <Service>k__BackingField;
    public CloudAccount Account { get; public set; }
    public CloudInstance Instance { get; public set; }
    [MaxLengthAttribute]
[JsonPropertyAttribute("availability_zone")]
public string AvailabilityZone { get; public set; }
    public CloudMachine Machine { get; public set; }
    [MaxLengthAttribute]
[RequiredAttribute]
public string Provider { get; public set; }
    [MaxLengthAttribute]
public string Region { get; public set; }
    public CloudProject Project { get; public set; }
    public CloudService Service { get; public set; }
    [CompilerGeneratedAttribute]
public CloudAccount get_Account();
    [CompilerGeneratedAttribute]
public void set_Account(CloudAccount value);
    [CompilerGeneratedAttribute]
public CloudInstance get_Instance();
    [CompilerGeneratedAttribute]
public void set_Instance(CloudInstance value);
    [CompilerGeneratedAttribute]
public string get_AvailabilityZone();
    [CompilerGeneratedAttribute]
public void set_AvailabilityZone(string value);
    [CompilerGeneratedAttribute]
public CloudMachine get_Machine();
    [CompilerGeneratedAttribute]
public void set_Machine(CloudMachine value);
    [CompilerGeneratedAttribute]
public string get_Provider();
    [CompilerGeneratedAttribute]
public void set_Provider(string value);
    [CompilerGeneratedAttribute]
public string get_Region();
    [CompilerGeneratedAttribute]
public void set_Region(string value);
    [CompilerGeneratedAttribute]
public CloudProject get_Project();
    [CompilerGeneratedAttribute]
public void set_Project(CloudProject value);
    [CompilerGeneratedAttribute]
public CloudService get_Service();
    [CompilerGeneratedAttribute]
public void set_Service(CloudService value);
}
public class Elastic.Apm.Api.CloudAccount : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [MaxLengthAttribute]
public string Id { get; public set; }
    [MaxLengthAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Elastic.Apm.Api.CloudContext : object {
    [CompilerGeneratedAttribute]
private CloudOrigin <Origin>k__BackingField;
    public CloudOrigin Origin { get; public set; }
    [CompilerGeneratedAttribute]
public CloudOrigin get_Origin();
    [CompilerGeneratedAttribute]
public void set_Origin(CloudOrigin value);
}
public class Elastic.Apm.Api.CloudInstance : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [MaxLengthAttribute]
public string Id { get; public set; }
    [MaxLengthAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Elastic.Apm.Api.CloudMachine : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [MaxLengthAttribute]
public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
public class Elastic.Apm.Api.CloudOrigin : ValueType {
    [CompilerGeneratedAttribute]
private string <Account>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public string Account { get; public set; }
    public string Id { get; public set; }
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Account();
    [CompilerGeneratedAttribute]
public void set_Account(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
}
public class Elastic.Apm.Api.CloudProject : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [MaxLengthAttribute]
public string Name { get; public set; }
    [MaxLengthAttribute]
public string Id { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
}
public class Elastic.Apm.Api.CloudService : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [MaxLengthAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
[AttributeUsageAttribute("128")]
public class Elastic.Apm.Api.Constraints.MaxLengthAttribute : Attribute {
    [CompilerGeneratedAttribute]
private int <Length>k__BackingField;
    public int Length { get; }
    public MaxLengthAttribute(int length);
    [CompilerGeneratedAttribute]
public int get_Length();
}
[AttributeUsageAttribute("128")]
public class Elastic.Apm.Api.Constraints.RequiredAttribute : Attribute {
}
public class Elastic.Apm.Api.Container : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [RequiredAttribute]
[MaxLengthAttribute]
public string Id { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
}
public class Elastic.Apm.Api.Context : object {
    private Lazy`1<Dictionary`2<string, string>> _custom;
    internal Lazy`1<LabelsDictionary> InternalLabels;
    [CompilerGeneratedAttribute]
private Message <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private Request <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private Response <Response>k__BackingField;
    [CompilerGeneratedAttribute]
private Service <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private User <User>k__BackingField;
    [JsonConverterAttribute("Elastic.Apm.Report.Serialization.CustomJsonConverter")]
public Dictionary`2<string, string> Custom { get; }
    [ObsoleteAttribute("Instead of this dictionary, use the `SetLabel` method which supports more types than just string. This property will be removed in a future release.")]
[JsonPropertyAttribute("tags")]
public Dictionary`2<string, string> Labels { get; }
    public Message Message { get; public set; }
    public Request Request { get; public set; }
    public Response Response { get; public set; }
    [JsonPropertyAttribute("service")]
internal Service Service { get; internal set; }
    public User User { get; public set; }
    public Dictionary`2<string, string> get_Custom();
    public Dictionary`2<string, string> get_Labels();
    [CompilerGeneratedAttribute]
public Message get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(Message value);
    [CompilerGeneratedAttribute]
public Request get_Request();
    [CompilerGeneratedAttribute]
public void set_Request(Request value);
    [CompilerGeneratedAttribute]
public Response get_Response();
    [CompilerGeneratedAttribute]
public void set_Response(Response value);
    [CompilerGeneratedAttribute]
internal Service get_Service();
    [CompilerGeneratedAttribute]
internal void set_Service(Service value);
    [CompilerGeneratedAttribute]
public User get_User();
    [CompilerGeneratedAttribute]
public void set_User(User value);
    internal Context DeepCopy();
    public bool ShouldSerializeLabels();
    public bool ShouldSerializeCustom();
}
public class Elastic.Apm.Api.Database : object {
    public static string TypeElasticsearch;
    public static string TypeSql;
    [CompilerGeneratedAttribute]
private string <Instance>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Statement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public string Instance { get; public set; }
    [MaxLengthAttribute("10000")]
public string Statement { get; public set; }
    public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Instance();
    [CompilerGeneratedAttribute]
public void set_Instance(string value);
    [CompilerGeneratedAttribute]
public string get_Statement();
    [CompilerGeneratedAttribute]
public void set_Statement(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
public class Elastic.Apm.Api.Destination : object {
    private Optional`1<string> _address;
    private Optional`1<Nullable`1<int>> _port;
    private Optional`1<DestinationService> _service;
    [MaxLengthAttribute]
public string Address { get; public set; }
    internal bool AddressHasValue { get; }
    public Nullable`1<int> Port { get; public set; }
    public DestinationService Service { get; public set; }
    public string get_Address();
    public void set_Address(string value);
    internal bool get_AddressHasValue();
    public Nullable`1<int> get_Port();
    public void set_Port(Nullable`1<int> value);
    public DestinationService get_Service();
    public void set_Service(DestinationService value);
    internal void CopyMissingPropertiesFrom(Destination src);
}
public class Elastic.Apm.Api.DistributedTracingData : object {
    [CompilerGeneratedAttribute]
private bool <FlagRecorded>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParentId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TraceId>k__BackingField;
    [CompilerGeneratedAttribute]
private TraceState <TraceState>k__BackingField;
    internal bool FlagRecorded { get; }
    internal bool HasTraceState { get; }
    internal string ParentId { get; }
    internal string TraceId { get; }
    internal TraceState TraceState { get; }
    internal DistributedTracingData(string traceId, string parentId, bool flagRecorded, TraceState traceState);
    [CompilerGeneratedAttribute]
internal bool get_FlagRecorded();
    internal bool get_HasTraceState();
    [CompilerGeneratedAttribute]
internal string get_ParentId();
    [CompilerGeneratedAttribute]
internal string get_TraceId();
    [CompilerGeneratedAttribute]
internal TraceState get_TraceState();
    public string SerializeToString();
    public static DistributedTracingData TryDeserializeFromString(string serialized);
    public virtual string ToString();
}
public class Elastic.Apm.Api.ErrorLog : object {
    [CompilerGeneratedAttribute]
private string <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LoggerName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParamMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<CapturedStackFrame> <StackTrace>k__BackingField;
    [MaxLengthAttribute]
public string Level { get; public set; }
    [JsonPropertyAttribute("logger_name")]
[MaxLengthAttribute]
public string LoggerName { get; public set; }
    public string Message { get; public set; }
    [JsonPropertyAttribute("param_message")]
[MaxLengthAttribute]
public string ParamMessage { get; public set; }
    [JsonPropertyAttribute("stacktrace")]
public List`1<CapturedStackFrame> StackTrace { get; public set; }
    public ErrorLog(string message);
    [CompilerGeneratedAttribute]
public string get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(string value);
    [CompilerGeneratedAttribute]
public string get_LoggerName();
    [CompilerGeneratedAttribute]
public void set_LoggerName(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_ParamMessage();
    [CompilerGeneratedAttribute]
public void set_ParamMessage(string value);
    [CompilerGeneratedAttribute]
public List`1<CapturedStackFrame> get_StackTrace();
    [CompilerGeneratedAttribute]
public void set_StackTrace(List`1<CapturedStackFrame> value);
}
public class Elastic.Apm.Api.Framework : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [MaxLengthAttribute]
public string Name { get; public set; }
    [MaxLengthAttribute]
public string Version { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    public virtual string ToString();
}
public class Elastic.Apm.Api.Http : object {
    private Uri _originalUrl;
    private string _url;
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StatusCode>k__BackingField;
    [MaxLengthAttribute]
public string Method { get; public set; }
    internal Uri OriginalUrl { get; }
    [JsonPropertyAttribute("status_code")]
public int StatusCode { get; public set; }
    public string Url { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Method();
    [CompilerGeneratedAttribute]
public void set_Method(string value);
    internal Uri get_OriginalUrl();
    [CompilerGeneratedAttribute]
public int get_StatusCode();
    [CompilerGeneratedAttribute]
public void set_StatusCode(int value);
    public string get_Url();
    public void set_Url(string value);
    internal void SetUrl(Uri uri);
}
[SpecificationAttribute("error.json")]
public interface Elastic.Apm.Api.IError {
    public string Culprit { get; public set; }
    public CapturedException Exception { get; }
    public string Id { get; }
    public ErrorLog Log { get; public set; }
    public string ParentId { get; }
    public string TraceId { get; }
    public string TransactionId { get; }
    public abstract virtual string get_Culprit();
    public abstract virtual void set_Culprit(string value);
    public abstract virtual CapturedException get_Exception();
    public abstract virtual string get_Id();
    public abstract virtual ErrorLog get_Log();
    public abstract virtual void set_Log(ErrorLog value);
    public abstract virtual string get_ParentId();
    public abstract virtual string get_TraceId();
    public abstract virtual string get_TransactionId();
}
public interface Elastic.Apm.Api.IExecutionSegment {
    [RequiredAttribute]
public Nullable`1<double> Duration { get; public set; }
    [RequiredAttribute]
public string Id { get; }
    public bool IsSampled { get; }
    [ObsoleteAttribute("Instead of this dictionary, use the `SetLabel` method which supports more types than just string. This property will be removed in a future release.")]
public Dictionary`2<string, string> Labels { get; }
    public string Name { get; public set; }
    public Outcome Outcome { get; public set; }
    public DistributedTracingData OutgoingDistributedTracingData { get; }
    public string ParentId { get; }
    [RequiredAttribute]
public string TraceId { get; }
    public abstract virtual Nullable`1<double> get_Duration();
    public abstract virtual void set_Duration(Nullable`1<double> value);
    public abstract virtual string get_Id();
    public abstract virtual bool get_IsSampled();
    public abstract virtual Dictionary`2<string, string> get_Labels();
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual Outcome get_Outcome();
    public abstract virtual void set_Outcome(Outcome value);
    public abstract virtual DistributedTracingData get_OutgoingDistributedTracingData();
    public abstract virtual string get_ParentId();
    public abstract virtual string get_TraceId();
    public abstract virtual void CaptureError(string message, string culprit, StackFrame[] frames, string parentId, Dictionary`2<string, Label> labels);
    public abstract virtual void CaptureException(Exception exception, string culprit, bool isHandled, string parentId, Dictionary`2<string, Label> labels);
    public abstract virtual void CaptureErrorLog(ErrorLog errorLog, string parentId, Exception exception, Dictionary`2<string, Label> labels);
    public abstract virtual void CaptureSpan(string name, string type, Action`1<ISpan> capturedAction, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public abstract virtual void CaptureSpan(string name, string type, Action capturedAction, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public abstract virtual T CaptureSpan(string name, string type, Func`2<ISpan, T> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public abstract virtual T CaptureSpan(string name, string type, Func`1<T> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public abstract virtual Task CaptureSpan(string name, string type, Func`1<Task> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public abstract virtual Task CaptureSpan(string name, string type, Func`2<ISpan, Task> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public abstract virtual Task`1<T> CaptureSpan(string name, string type, Func`1<Task`1<T>> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public abstract virtual Task`1<T> CaptureSpan(string name, string type, Func`2<ISpan, Task`1<T>> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public abstract virtual void End();
    public abstract virtual void SetLabel(string key, string value);
    public abstract virtual void SetLabel(string key, bool value);
    public abstract virtual void SetLabel(string key, double value);
    public abstract virtual void SetLabel(string key, int value);
    public abstract virtual void SetLabel(string key, long value);
    public abstract virtual void SetLabel(string key, decimal value);
    public abstract virtual ISpan StartSpan(string name, string type, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public abstract virtual bool TryGetLabel(string key, T& value);
}
[SpecificationAttribute("metricset.json")]
public interface Elastic.Apm.Api.IMetricSet {
    [RequiredAttribute]
public IEnumerable`1<MetricSample> Samples { get; public set; }
    public long Timestamp { get; public set; }
    public TransactionInfo Transaction { get; public set; }
    public SpanInfo Span { get; public set; }
    public abstract virtual IEnumerable`1<MetricSample> get_Samples();
    public abstract virtual void set_Samples(IEnumerable`1<MetricSample> value);
    public abstract virtual long get_Timestamp();
    public abstract virtual void set_Timestamp(long value);
    public abstract virtual TransactionInfo get_Transaction();
    public abstract virtual void set_Transaction(TransactionInfo value);
    public abstract virtual SpanInfo get_Span();
    public abstract virtual void set_Span(SpanInfo value);
}
[SpecificationAttribute("span.json")]
public interface Elastic.Apm.Api.ISpan {
    public string Action { get; public set; }
    public SpanContext Context { get; }
    public bool IsExitSpan { get; }
    public List`1<CapturedStackFrame> StackTrace { get; }
    public string Subtype { get; public set; }
    public long Timestamp { get; }
    public string TransactionId { get; }
    public string Type { get; public set; }
    public abstract virtual string get_Action();
    public abstract virtual void set_Action(string value);
    public abstract virtual SpanContext get_Context();
    public abstract virtual bool get_IsExitSpan();
    public abstract virtual List`1<CapturedStackFrame> get_StackTrace();
    public abstract virtual string get_Subtype();
    public abstract virtual void set_Subtype(string value);
    public abstract virtual long get_Timestamp();
    public abstract virtual string get_TransactionId();
    public abstract virtual string get_Type();
    public abstract virtual void set_Type(string value);
}
public interface Elastic.Apm.Api.ITracer {
    public ISpan CurrentSpan { get; }
    public ITransaction CurrentTransaction { get; }
    public abstract virtual ISpan get_CurrentSpan();
    public abstract virtual ITransaction get_CurrentTransaction();
    public abstract virtual void CaptureError(string message, string culprit, StackFrame[] frames, string parentId, Dictionary`2<string, Label> labels);
    public abstract virtual void CaptureException(Exception exception, string culprit, bool isHandled, string parentId, Dictionary`2<string, Label> labels);
    public abstract virtual void CaptureErrorLog(ErrorLog errorLog, string parentId, Exception exception, Dictionary`2<string, Label> labels);
    public abstract virtual void CaptureTransaction(string name, string type, Action`1<ITransaction> action, DistributedTracingData distributedTracingData, IEnumerable`1<SpanLink> links);
    public abstract virtual void CaptureTransaction(string name, string type, Action action, DistributedTracingData distributedTracingData, IEnumerable`1<SpanLink> links);
    public abstract virtual T CaptureTransaction(string name, string type, Func`2<ITransaction, T> func, DistributedTracingData distributedTracingData, IEnumerable`1<SpanLink> links);
    public abstract virtual T CaptureTransaction(string name, string type, Func`1<T> func, DistributedTracingData distributedTracingData, IEnumerable`1<SpanLink> links);
    public abstract virtual Task CaptureTransaction(string name, string type, Func`1<Task> func, DistributedTracingData distributedTracingData, IEnumerable`1<SpanLink> links);
    public abstract virtual Task CaptureTransaction(string name, string type, Func`2<ITransaction, Task> func, DistributedTracingData distributedTracingData, IEnumerable`1<SpanLink> links);
    public abstract virtual Task`1<T> CaptureTransaction(string name, string type, Func`1<Task`1<T>> func, DistributedTracingData distributedTracingData, IEnumerable`1<SpanLink> links);
    public abstract virtual Task`1<T> CaptureTransaction(string name, string type, Func`2<ITransaction, Task`1<T>> func, DistributedTracingData distributedTracingData, IEnumerable`1<SpanLink> links);
    public abstract virtual ITransaction StartTransaction(string name, string type, DistributedTracingData distributedTracingData, bool ignoreActivity, IEnumerable`1<SpanLink> links);
}
[SpecificationAttribute("transaction.json")]
public interface Elastic.Apm.Api.ITransaction {
    public Faas FaaS { get; public set; }
    public Context Context { get; }
    public Dictionary`2<string, string> Custom { get; }
    public IConfiguration Configuration { get; }
    public string Result { get; public set; }
    [RequiredAttribute]
public SpanCount SpanCount { get; }
    [RequiredAttribute]
public string Type { get; public set; }
    public abstract virtual Faas get_FaaS();
    public abstract virtual void set_FaaS(Faas value);
    public abstract virtual Context get_Context();
    public abstract virtual Dictionary`2<string, string> get_Custom();
    public abstract virtual IConfiguration get_Configuration();
    public abstract virtual string get_Result();
    public abstract virtual void set_Result(string value);
    public abstract virtual SpanCount get_SpanCount();
    public abstract virtual string get_Type();
    public abstract virtual void set_Type(string value);
    public abstract virtual string EnsureParentId();
    public abstract virtual void SetService(string serviceName, string serviceVersion);
}
public class Elastic.Apm.Api.Kubernetes.KubernetesMetadata : object {
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private Node <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private Pod <Pod>k__BackingField;
    [MaxLengthAttribute]
public string Namespace { get; public set; }
    public Node Node { get; public set; }
    public Pod Pod { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public Node get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(Node value);
    [CompilerGeneratedAttribute]
public Pod get_Pod();
    [CompilerGeneratedAttribute]
public void set_Pod(Pod value);
    public virtual string ToString();
}
public class Elastic.Apm.Api.Kubernetes.Node : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [MaxLengthAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual string ToString();
}
public class Elastic.Apm.Api.Kubernetes.Pod : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uid>k__BackingField;
    [MaxLengthAttribute]
public string Name { get; public set; }
    [MaxLengthAttribute]
public string Uid { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Uid();
    [CompilerGeneratedAttribute]
public void set_Uid(string value);
    public virtual string ToString();
}
public class Elastic.Apm.Api.Label : object {
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public object Value { get; }
    public Label(string value);
    public Label(bool value);
    public Label(double value);
    public Label(int value);
    public Label(long value);
    public Label(decimal value);
    [CompilerGeneratedAttribute]
public object get_Value();
    public static Label op_Implicit(string value);
    public static Label op_Implicit(bool value);
    public static Label op_Implicit(double value);
    public static Label op_Implicit(int value);
    public static Label op_Implicit(long value);
    public static Label op_Implicit(decimal value);
}
public class Elastic.Apm.Api.Language : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [MaxLengthAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual string ToString();
}
public class Elastic.Apm.Api.Message : object {
    [CompilerGeneratedAttribute]
private string <Body>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private Age <Age>k__BackingField;
    [CompilerGeneratedAttribute]
private Queue <Queue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RoutingKey>k__BackingField;
    public string Body { get; public set; }
    public Dictionary`2<string, string> Headers { get; public set; }
    public Age Age { get; public set; }
    public Queue Queue { get; public set; }
    public string RoutingKey { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Age get_Age();
    [CompilerGeneratedAttribute]
public void set_Age(Age value);
    [CompilerGeneratedAttribute]
public Queue get_Queue();
    [CompilerGeneratedAttribute]
public void set_Queue(Queue value);
    [CompilerGeneratedAttribute]
public string get_RoutingKey();
    [CompilerGeneratedAttribute]
public void set_RoutingKey(string value);
}
public class Elastic.Apm.Api.MetricSample : object {
    [CompilerGeneratedAttribute]
private KeyValuePair`2<string, double> <KeyValue>k__BackingField;
    internal KeyValuePair`2<string, double> KeyValue { get; internal set; }
    public MetricSample(string key, double value);
    [CompilerGeneratedAttribute]
internal KeyValuePair`2<string, double> get_KeyValue();
    [CompilerGeneratedAttribute]
internal void set_KeyValue(KeyValuePair`2<string, double> value);
    public virtual string ToString();
}
public class Elastic.Apm.Api.Node : object {
    [CompilerGeneratedAttribute]
private string <ConfiguredName>k__BackingField;
    [JsonPropertyAttribute("configured_name")]
[MaxLengthAttribute]
public string ConfiguredName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ConfiguredName();
    [CompilerGeneratedAttribute]
public void set_ConfiguredName(string value);
    public virtual string ToString();
}
[JsonConverterAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Converters.StringEnumConverter")]
public enum Elastic.Apm.Api.Outcome : Enum {
    public int value__;
    [EnumMemberAttribute]
public static Outcome Unknown;
    [EnumMemberAttribute]
public static Outcome Success;
    [EnumMemberAttribute]
public static Outcome Failure;
}
internal class Elastic.Apm.Api.ProcessInformation : object {
    [CompilerGeneratedAttribute]
private int <Pid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    public int Pid { get; public set; }
    [MaxLengthAttribute]
public string Title { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Pid();
    [CompilerGeneratedAttribute]
public void set_Pid(int value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    public static ProcessInformation Create();
    public virtual string ToString();
}
public class Elastic.Apm.Api.Queue : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [MaxLengthAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Elastic.Apm.Api.Request : object {
    [CompilerGeneratedAttribute]
private object <Body>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HttpVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private Socket <Socket>k__BackingField;
    [CompilerGeneratedAttribute]
private Url <Url>k__BackingField;
    public object Body { get; public set; }
    public Dictionary`2<string, string> Headers { get; public set; }
    [JsonPropertyAttribute("http_version")]
[MaxLengthAttribute]
public string HttpVersion { get; public set; }
    [MaxLengthAttribute]
[RequiredAttribute]
public string Method { get; public set; }
    public Socket Socket { get; public set; }
    [RequiredAttribute]
public Url Url { get; public set; }
    public Request(string method, Url url);
    [CompilerGeneratedAttribute]
public object get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(object value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_HttpVersion();
    [CompilerGeneratedAttribute]
public void set_HttpVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Method();
    [CompilerGeneratedAttribute]
public void set_Method(string value);
    [CompilerGeneratedAttribute]
public Socket get_Socket();
    [CompilerGeneratedAttribute]
public void set_Socket(Socket value);
    [CompilerGeneratedAttribute]
public Url get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(Url value);
    internal Request DeepCopy();
    public virtual string ToString();
}
public class Elastic.Apm.Api.Response : object {
    [CompilerGeneratedAttribute]
private bool <Finished>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StatusCode>k__BackingField;
    public bool Finished { get; public set; }
    public Dictionary`2<string, string> Headers { get; public set; }
    [JsonPropertyAttribute("status_code")]
public int StatusCode { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Finished();
    [CompilerGeneratedAttribute]
public void set_Finished(bool value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public int get_StatusCode();
    [CompilerGeneratedAttribute]
public void set_StatusCode(int value);
    internal Response DeepCopy();
}
public class Elastic.Apm.Api.Runtime : object {
    internal static string DotNetName;
    internal static string DotNetCoreName;
    internal static string DotNetFullFrameworkName;
    internal static string MonoName;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [MaxLengthAttribute]
public string Name { get; public set; }
    [MaxLengthAttribute]
public string Version { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    public virtual string ToString();
}
public class Elastic.Apm.Api.Service : object {
    [CompilerGeneratedAttribute]
private AgentC <Agent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Environment>k__BackingField;
    [CompilerGeneratedAttribute]
private Framework <Framework>k__BackingField;
    [CompilerGeneratedAttribute]
private Language <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Node <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private Runtime <Runtime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    public AgentC Agent { get; public set; }
    [MaxLengthAttribute]
public string Environment { get; public set; }
    public Framework Framework { get; public set; }
    public Language Language { get; public set; }
    [MaxLengthAttribute]
public string Name { get; public set; }
    public Node Node { get; public set; }
    public Runtime Runtime { get; public set; }
    [MaxLengthAttribute]
public string Version { get; public set; }
    internal Service(string name, string version);
    [CompilerGeneratedAttribute]
public AgentC get_Agent();
    [CompilerGeneratedAttribute]
public void set_Agent(AgentC value);
    [CompilerGeneratedAttribute]
public string get_Environment();
    [CompilerGeneratedAttribute]
public void set_Environment(string value);
    [CompilerGeneratedAttribute]
public Framework get_Framework();
    [CompilerGeneratedAttribute]
public void set_Framework(Framework value);
    [CompilerGeneratedAttribute]
public Language get_Language();
    [CompilerGeneratedAttribute]
public void set_Language(Language value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Node get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(Node value);
    [CompilerGeneratedAttribute]
public Runtime get_Runtime();
    [CompilerGeneratedAttribute]
public void set_Runtime(Runtime value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    public virtual string ToString();
    internal static Service GetDefaultService(IConfigurationReader configurationReader, IApmLogger loggerArg);
    private static void SetAgentActivationMethod(IApmLogger logger, Service service);
    [CompilerGeneratedAttribute]
internal static bool <SetAgentActivationMethod>g__CheckForLoadedAssembly|36_0(string name);
}
public class Elastic.Apm.Api.Socket : object {
    [CompilerGeneratedAttribute]
private string <RemoteAddress>k__BackingField;
    [JsonPropertyAttribute("remote_address")]
public string RemoteAddress { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RemoteAddress();
    [CompilerGeneratedAttribute]
public void set_RemoteAddress(string value);
    internal Socket DeepCopy();
    public virtual string ToString();
}
public class Elastic.Apm.Api.SpanContext : object {
    internal Lazy`1<LabelsDictionary> InternalLabels;
    [CompilerGeneratedAttribute]
private Database <Db>k__BackingField;
    [CompilerGeneratedAttribute]
private Destination <Destination>k__BackingField;
    [CompilerGeneratedAttribute]
private Http <Http>k__BackingField;
    [CompilerGeneratedAttribute]
private Message <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private SpanService <Service>k__BackingField;
    public Database Db { get; public set; }
    public Destination Destination { get; public set; }
    public Http Http { get; public set; }
    public Message Message { get; public set; }
    [JsonPropertyAttribute("tags")]
[ObsoleteAttribute("Instead of this dictionary, use the `SetLabel` method which supports more types than just string. This property will be removed in a future release.")]
public Dictionary`2<string, string> Labels { get; }
    public SpanService Service { get; public set; }
    [CompilerGeneratedAttribute]
public Database get_Db();
    [CompilerGeneratedAttribute]
public void set_Db(Database value);
    [CompilerGeneratedAttribute]
public Destination get_Destination();
    [CompilerGeneratedAttribute]
public void set_Destination(Destination value);
    [CompilerGeneratedAttribute]
public Http get_Http();
    [CompilerGeneratedAttribute]
public void set_Http(Http value);
    [CompilerGeneratedAttribute]
public Message get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(Message value);
    public Dictionary`2<string, string> get_Labels();
    public bool ShouldSerializeLabels();
    [CompilerGeneratedAttribute]
public SpanService get_Service();
    [CompilerGeneratedAttribute]
public void set_Service(SpanService value);
    public virtual string ToString();
}
public class Elastic.Apm.Api.SpanCount : object {
    private int _dropped;
    private int _started;
    private int _total;
    public int Dropped { get; }
    [RequiredAttribute]
public int Started { get; }
    public int get_Dropped();
    public int get_Started();
    internal void IncrementStarted();
    internal void IncrementDropped();
    internal int IncrementTotal();
    public virtual string ToString();
}
public class Elastic.Apm.Api.SpanLink : object {
    [CompilerGeneratedAttribute]
private string <SpanId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TraceId>k__BackingField;
    [JsonPropertyAttribute("span_id")]
[MaxLengthAttribute]
public string SpanId { get; }
    [JsonPropertyAttribute("trace_id")]
[MaxLengthAttribute]
public string TraceId { get; }
    public SpanLink(string spanId, string traceId);
    [CompilerGeneratedAttribute]
public string get_SpanId();
    [CompilerGeneratedAttribute]
public string get_TraceId();
}
public class Elastic.Apm.Api.SpanService : object {
    [CompilerGeneratedAttribute]
private Target <Target>k__BackingField;
    public Target Target { get; }
    public SpanService(Target target);
    [CompilerGeneratedAttribute]
public Target get_Target();
}
[AttributeUsageAttribute("1028")]
public class Elastic.Apm.Api.SpecificationAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    public string Path { get; }
    public SpecificationAttribute(string path);
    [CompilerGeneratedAttribute]
public string get_Path();
}
public class Elastic.Apm.Api.System : object {
    [CompilerGeneratedAttribute]
private KubernetesMetadata <Kubernetes>k__BackingField;
    [CompilerGeneratedAttribute]
private Container <Container>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DetectedHostName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConfiguredHostName>k__BackingField;
    public KubernetesMetadata Kubernetes { get; public set; }
    public Container Container { get; public set; }
    [MaxLengthAttribute]
[JsonPropertyAttribute("detected_hostname")]
public string DetectedHostName { get; public set; }
    [MaxLengthAttribute]
[JsonPropertyAttribute("configured_hostname")]
public string ConfiguredHostName { get; public set; }
    [MaxLengthAttribute]
[JsonPropertyAttribute("hostname")]
[ObsoleteAttribute("Deprecated. Use ConfiguredHostName")]
public string HostName { get; public set; }
    [CompilerGeneratedAttribute]
public KubernetesMetadata get_Kubernetes();
    [CompilerGeneratedAttribute]
public void set_Kubernetes(KubernetesMetadata value);
    [CompilerGeneratedAttribute]
public Container get_Container();
    [CompilerGeneratedAttribute]
public void set_Container(Container value);
    [CompilerGeneratedAttribute]
public string get_DetectedHostName();
    [CompilerGeneratedAttribute]
public void set_DetectedHostName(string value);
    [CompilerGeneratedAttribute]
public string get_ConfiguredHostName();
    [CompilerGeneratedAttribute]
public void set_ConfiguredHostName(string value);
    public string get_HostName();
    public void set_HostName(string value);
    public virtual string ToString();
}
public class Elastic.Apm.Api.Target : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    private bool _onlyUseName;
    public string Type { get; private set; }
    public string Name { get; private set; }
    public Target(string type, string name);
    internal Target(string type, string name, bool onlyUseName);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    public static Target TargetWithName(string name);
    public static Target TargetWithType(string type);
    public string ToDestinationServiceResource();
    public sealed virtual bool Equals(Target other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(Target left, Target right);
    public static bool op_Inequality(Target left, Target right);
}
internal class Elastic.Apm.Api.Tracer : object {
    private IApmServerInfo _apmServerInfo;
    private IConfigurationSnapshotProvider _configurationProvider;
    private ScopedLogger _logger;
    private IPayloadSender _sender;
    private Service _service;
    private BreakdownMetricsProvider _breakdownMetricsProvider;
    [CompilerGeneratedAttribute]
private ICurrentExecutionSegmentsContainer <CurrentExecutionSegmentsContainer>k__BackingField;
    [CompilerGeneratedAttribute]
private DbSpanCommon <DbSpanCommon>k__BackingField;
    internal ICurrentExecutionSegmentsContainer CurrentExecutionSegmentsContainer { get; }
    public ISpan CurrentSpan { get; }
    public ITransaction CurrentTransaction { get; }
    public DbSpanCommon DbSpanCommon { get; }
    public Tracer(IApmLogger logger, Service service, IPayloadSender payloadSender, IConfigurationSnapshotProvider configurationProvider, ICurrentExecutionSegmentsContainer currentExecutionSegmentsContainer, IApmServerInfo apmServerInfo, BreakdownMetricsProvider breakdownMetricsProvider);
    [CompilerGeneratedAttribute]
internal ICurrentExecutionSegmentsContainer get_CurrentExecutionSegmentsContainer();
    public sealed virtual ISpan get_CurrentSpan();
    public sealed virtual ITransaction get_CurrentTransaction();
    [CompilerGeneratedAttribute]
public DbSpanCommon get_DbSpanCommon();
    public sealed virtual ITransaction StartTransaction(string name, string type, DistributedTracingData distributedTracingData, bool ignoreActivity, IEnumerable`1<SpanLink> links);
    internal Transaction StartTransactionInternal(string name, string type, Nullable`1<long> timestamp, bool ignoreActivity, string id, string traceId, DistributedTracingData distributedTracingData, IEnumerable`1<SpanLink> links, Activity current);
    private Transaction StartTransactionInternal(string name, string type, DistributedTracingData distributedTracingData, bool ignoreActivity, Nullable`1<long> timestamp, string id, string traceId, IEnumerable`1<SpanLink> links, Activity current);
    public sealed virtual void CaptureTransaction(string name, string type, Action`1<ITransaction> action, DistributedTracingData distributedTracingData, IEnumerable`1<SpanLink> links);
    public sealed virtual void CaptureTransaction(string name, string type, Action action, DistributedTracingData distributedTracingData, IEnumerable`1<SpanLink> links);
    public sealed virtual T CaptureTransaction(string name, string type, Func`2<ITransaction, T> func, DistributedTracingData distributedTracingData, IEnumerable`1<SpanLink> links);
    public sealed virtual T CaptureTransaction(string name, string type, Func`1<T> func, DistributedTracingData distributedTracingData, IEnumerable`1<SpanLink> links);
    [AsyncStateMachineAttribute("Elastic.Apm.Api.Tracer/<CaptureTransaction>d__24")]
public sealed virtual Task CaptureTransaction(string name, string type, Func`1<Task> func, DistributedTracingData distributedTracingData, IEnumerable`1<SpanLink> links);
    [AsyncStateMachineAttribute("Elastic.Apm.Api.Tracer/<CaptureTransaction>d__25")]
public sealed virtual Task CaptureTransaction(string name, string type, Func`2<ITransaction, Task> func, DistributedTracingData distributedTracingData, IEnumerable`1<SpanLink> links);
    [AsyncStateMachineAttribute("Elastic.Apm.Api.Tracer/<CaptureTransaction>d__26`1")]
public sealed virtual Task`1<T> CaptureTransaction(string name, string type, Func`1<Task`1<T>> func, DistributedTracingData distributedTracingData, IEnumerable`1<SpanLink> links);
    [AsyncStateMachineAttribute("Elastic.Apm.Api.Tracer/<CaptureTransaction>d__27`1")]
public sealed virtual Task`1<T> CaptureTransaction(string name, string type, Func`2<ITransaction, Task`1<T>> func, DistributedTracingData distributedTracingData, IEnumerable`1<SpanLink> links);
    public sealed virtual void CaptureError(string message, string culprit, StackFrame[] frames, string parentId, Dictionary`2<string, Label> labels);
    public sealed virtual void CaptureException(Exception exception, string culprit, bool isHandled, string parentId, Dictionary`2<string, Label> labels);
    public sealed virtual void CaptureErrorLog(ErrorLog errorLog, string parentId, Exception exception, Dictionary`2<string, Label> labels);
}
public class Elastic.Apm.Api.Url : object {
    private string _full;
    private string _raw;
    [CompilerGeneratedAttribute]
private string <HostName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PathName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Protocol>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Search>k__BackingField;
    [MaxLengthAttribute]
public string Full { get; public set; }
    [MaxLengthAttribute]
[JsonPropertyAttribute("hostname")]
public string HostName { get; public set; }
    [MaxLengthAttribute]
[JsonPropertyAttribute("pathname")]
public string PathName { get; public set; }
    [MaxLengthAttribute]
public string Protocol { get; public set; }
    [MaxLengthAttribute]
public string Raw { get; public set; }
    [MaxLengthAttribute]
[JsonPropertyAttribute("search")]
public string Search { get; public set; }
    public string get_Full();
    public void set_Full(string value);
    [CompilerGeneratedAttribute]
public string get_HostName();
    [CompilerGeneratedAttribute]
public void set_HostName(string value);
    [CompilerGeneratedAttribute]
public string get_PathName();
    [CompilerGeneratedAttribute]
public void set_PathName(string value);
    [CompilerGeneratedAttribute]
public string get_Protocol();
    [CompilerGeneratedAttribute]
public void set_Protocol(string value);
    public string get_Raw();
    public void set_Raw(string value);
    [CompilerGeneratedAttribute]
public string get_Search();
    [CompilerGeneratedAttribute]
public void set_Search(string value);
    internal Url DeepCopy();
    public virtual string ToString();
    public static Url FromUri(Uri url);
}
public class Elastic.Apm.Api.User : object {
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserName>k__BackingField;
    [MaxLengthAttribute]
public string Email { get; public set; }
    [MaxLengthAttribute]
public string Id { get; public set; }
    [MaxLengthAttribute]
[JsonPropertyAttribute("username")]
public string UserName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
public void set_Email(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_UserName();
    [CompilerGeneratedAttribute]
public void set_UserName(string value);
    public virtual string ToString();
}
internal class Elastic.Apm.ApmAgent : object {
    internal CompositeDisposable Disposables;
    [CompilerGeneratedAttribute]
private AgentComponents <Components>k__BackingField;
    internal ICentralConfigurationFetcher CentralConfigurationFetcher { get; }
    internal AgentComponents Components { get; }
    internal IConfigurationStore ConfigurationStore { get; }
    public IConfigurationReader Configuration { get; }
    [ObsoleteAttribute("Please use Configuration property instead")]
public IConfigurationReader ConfigurationReader { get; }
    public IApmLogger Logger { get; }
    public IPayloadSender PayloadSender { get; }
    public Service Service { get; }
    public ITracer Tracer { get; }
    internal Tracer TracerInternal { get; }
    internal HttpTraceConfiguration HttpTraceConfiguration { get; }
    private HashSet`1<Type> Elastic.Apm.IApmAgentComponents.SubscribedListeners { get; }
    internal ApmAgent(AgentComponents agentComponents);
    internal ICentralConfigurationFetcher get_CentralConfigurationFetcher();
    [CompilerGeneratedAttribute]
internal AgentComponents get_Components();
    internal IConfigurationStore get_ConfigurationStore();
    public sealed virtual IConfigurationReader get_Configuration();
    public sealed virtual IConfigurationReader get_ConfigurationReader();
    public sealed virtual IApmLogger get_Logger();
    public sealed virtual IPayloadSender get_PayloadSender();
    public sealed virtual Service get_Service();
    public sealed virtual ITracer get_Tracer();
    internal Tracer get_TracerInternal();
    internal HttpTraceConfiguration get_HttpTraceConfiguration();
    private sealed virtual override HashSet`1<Type> Elastic.Apm.IApmAgentComponents.get_SubscribedListeners();
    public sealed virtual void Dispose();
}
[ExtensionAttribute]
public static class Elastic.Apm.ApmAgentExtensions : object {
    [ExtensionAttribute]
public static IDisposable Subscribe(IApmAgent agent, IDiagnosticsSubscriber[] subscribers);
    [ExtensionAttribute]
internal static IDisposable SubscribeIncludingAllDefaults(IApmAgent agent, IDiagnosticsSubscriber[] subscribers);
    [ExtensionAttribute]
internal static IExecutionSegment GetCurrentExecutionSegment(IApmAgent agent);
}
internal abstract class Elastic.Apm.BackendComm.BackendCommComponentBase : object {
    private static string ThisClassName;
    [CompilerGeneratedAttribute]
private CancellationTokenSource <CancellationTokenSource>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpClient <HttpClient>k__BackingField;
    private string _dbgName;
    private DisposableHelper _disposableHelper;
    private bool _isEnabled;
    private IApmLogger _logger;
    private ManualResetEventSlim _loopCompleted;
    private ManualResetEventSlim _loopStarted;
    private Thread _workLoopThread;
    private string _dbgDerivedClassName;
    protected CancellationTokenSource CancellationTokenSource { get; }
    protected HttpClient HttpClient { get; }
    internal bool IsRunning { get; }
    internal BackendCommComponentBase(bool isEnabled, IApmLogger logger, string dbgDerivedClassName, Service service, IConfiguration configuration, HttpMessageHandler httpMessageHandler);
    [CompilerGeneratedAttribute]
protected CancellationTokenSource get_CancellationTokenSource();
    [CompilerGeneratedAttribute]
protected HttpClient get_HttpClient();
    protected abstract virtual void WorkLoopIteration();
    internal bool get_IsRunning();
    protected void StartWorkLoop();
    private void WorkLoop();
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool isDisposing);
    [CompilerGeneratedAttribute]
private void <Dispose>b__22_0();
}
internal static class Elastic.Apm.BackendComm.BackendCommUtils : object {
    private static string ThisClassName;
    private static LazyContextualInit ConfigServicePointOnceHelper;
    private static TimeSpan DnsTimeout;
    private static BackendCommUtils();
    private static void ConfigServicePoint(Uri serverUrlBase, IApmLogger logger);
    private static HttpClientHandler CreateHttpClientHandler(IConfiguration configuration, IApmLogger logger);
    internal static HttpClient BuildHttpClient(IApmLogger loggerArg, IConfiguration configuration, Service service, string dbgCallerDesc, HttpMessageHandler httpMessageHandler);
    private static string GetUserAgent(Service service);
    private static string AdaptUserAgentValue(string value);
}
internal class Elastic.Apm.BackendComm.CentralConfig.CentralConfiguration : AbstractConfigurationReader {
    private static string ThisClassName;
    private CentralConfigPayload _configPayload;
    [CompilerGeneratedAttribute]
private string <ETag>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CaptureBody>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <CaptureBodyContentTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CaptureHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <ExitSpanMinDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<WildcardMatcher> <IgnoreMessageQueues>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<LogLevel> <LogLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Recording>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<WildcardMatcher> <SanitizeFieldNames>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SpanCompressionEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <SpanCompressionExactMatchMaxDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <SpanCompressionSameKindMaxDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <SpanStackTraceMinDurationInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <SpanFramesMinDurationInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <StackTraceLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TraceContinuationStrategy>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<WildcardMatcher> <TransactionIgnoreUrls>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<WildcardMatcher> <TransactionNameGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <TransactionMaxSpans>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <TransactionSampleRate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UsePathAsTransactionName>k__BackingField;
    public string Description { get; }
    internal string ETag { get; }
    internal string CaptureBody { get; private set; }
    internal List`1<string> CaptureBodyContentTypes { get; private set; }
    internal Nullable`1<bool> CaptureHeaders { get; private set; }
    internal Nullable`1<double> ExitSpanMinDuration { get; private set; }
    internal IReadOnlyList`1<WildcardMatcher> IgnoreMessageQueues { get; private set; }
    internal Nullable`1<LogLevel> LogLevel { get; private set; }
    internal Nullable`1<bool> Recording { get; private set; }
    internal IReadOnlyList`1<WildcardMatcher> SanitizeFieldNames { get; private set; }
    internal Nullable`1<bool> SpanCompressionEnabled { get; private set; }
    internal Nullable`1<double> SpanCompressionExactMatchMaxDuration { get; private set; }
    internal Nullable`1<double> SpanCompressionSameKindMaxDuration { get; private set; }
    internal Nullable`1<double> SpanStackTraceMinDurationInMilliseconds { get; private set; }
    internal Nullable`1<double> SpanFramesMinDurationInMilliseconds { get; private set; }
    internal Nullable`1<int> StackTraceLimit { get; private set; }
    internal string TraceContinuationStrategy { get; private set; }
    internal IReadOnlyList`1<WildcardMatcher> TransactionIgnoreUrls { get; private set; }
    internal IReadOnlyCollection`1<WildcardMatcher> TransactionNameGroups { get; private set; }
    internal Nullable`1<int> TransactionMaxSpans { get; private set; }
    internal Nullable`1<double> TransactionSampleRate { get; private set; }
    internal Nullable`1<bool> UsePathAsTransactionName { get; private set; }
    public CentralConfiguration(IApmLogger logger, CentralConfigPayload configPayload, string eTag);
    public sealed virtual string get_Description();
    [CompilerGeneratedAttribute]
internal string get_ETag();
    [CompilerGeneratedAttribute]
internal string get_CaptureBody();
    [CompilerGeneratedAttribute]
private void set_CaptureBody(string value);
    [CompilerGeneratedAttribute]
internal List`1<string> get_CaptureBodyContentTypes();
    [CompilerGeneratedAttribute]
private void set_CaptureBodyContentTypes(List`1<string> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<bool> get_CaptureHeaders();
    [CompilerGeneratedAttribute]
private void set_CaptureHeaders(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<double> get_ExitSpanMinDuration();
    [CompilerGeneratedAttribute]
private void set_ExitSpanMinDuration(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
internal IReadOnlyList`1<WildcardMatcher> get_IgnoreMessageQueues();
    [CompilerGeneratedAttribute]
private void set_IgnoreMessageQueues(IReadOnlyList`1<WildcardMatcher> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<LogLevel> get_LogLevel();
    [CompilerGeneratedAttribute]
private void set_LogLevel(Nullable`1<LogLevel> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<bool> get_Recording();
    [CompilerGeneratedAttribute]
private void set_Recording(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
internal IReadOnlyList`1<WildcardMatcher> get_SanitizeFieldNames();
    [CompilerGeneratedAttribute]
private void set_SanitizeFieldNames(IReadOnlyList`1<WildcardMatcher> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<bool> get_SpanCompressionEnabled();
    [CompilerGeneratedAttribute]
private void set_SpanCompressionEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<double> get_SpanCompressionExactMatchMaxDuration();
    [CompilerGeneratedAttribute]
private void set_SpanCompressionExactMatchMaxDuration(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<double> get_SpanCompressionSameKindMaxDuration();
    [CompilerGeneratedAttribute]
private void set_SpanCompressionSameKindMaxDuration(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<double> get_SpanStackTraceMinDurationInMilliseconds();
    [CompilerGeneratedAttribute]
private void set_SpanStackTraceMinDurationInMilliseconds(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<double> get_SpanFramesMinDurationInMilliseconds();
    [CompilerGeneratedAttribute]
private void set_SpanFramesMinDurationInMilliseconds(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<int> get_StackTraceLimit();
    [CompilerGeneratedAttribute]
private void set_StackTraceLimit(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
internal string get_TraceContinuationStrategy();
    [CompilerGeneratedAttribute]
private void set_TraceContinuationStrategy(string value);
    [CompilerGeneratedAttribute]
internal IReadOnlyList`1<WildcardMatcher> get_TransactionIgnoreUrls();
    [CompilerGeneratedAttribute]
private void set_TransactionIgnoreUrls(IReadOnlyList`1<WildcardMatcher> value);
    [CompilerGeneratedAttribute]
internal IReadOnlyCollection`1<WildcardMatcher> get_TransactionNameGroups();
    [CompilerGeneratedAttribute]
private void set_TransactionNameGroups(IReadOnlyCollection`1<WildcardMatcher> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<int> get_TransactionMaxSpans();
    [CompilerGeneratedAttribute]
private void set_TransactionMaxSpans(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<double> get_TransactionSampleRate();
    [CompilerGeneratedAttribute]
private void set_TransactionSampleRate(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<bool> get_UsePathAsTransactionName();
    [CompilerGeneratedAttribute]
private void set_UsePathAsTransactionName(Nullable`1<bool> value);
    private CentralConfigurationKeyValue BuildKv(DynamicConfigurationOption option, string value);
    private T GetConfigurationValue(DynamicConfigurationOption option, Func`2<ConfigurationKeyValue, T> parser);
    private Nullable`1<T> GetSimpleConfigurationValue(DynamicConfigurationOption option, Func`2<ConfigurationKeyValue, T> parser);
    public virtual string ToString();
    public sealed virtual ConfigurationKeyValue Lookup(ConfigurationOption option);
}
internal class Elastic.Apm.BackendComm.CentralConfig.CentralConfigurationFetcher : BackendCommComponentBase {
    private static string ThisClassName;
    internal static TimeSpan GetConfigHttpRequestTimeout;
    internal static TimeSpan WaitTimeIfAnyError;
    private IAgentTimer _agentTimer;
    private ICentralConfigurationResponseParser _centralConfigurationResponseParser;
    private IConfigurationStore _configurationStore;
    private Uri _getConfigAbsoluteUrl;
    private IConfiguration _initialSnapshot;
    private IApmLogger _logger;
    private Action`1<CentralConfiguration> _onResponse;
    private long _dbgIterationsCount;
    private EntityTagHeaderValue _eTag;
    internal CentralConfigurationFetcher(IApmLogger logger, IConfigurationStore configurationStore, ICentralConfigurationResponseParser centralConfigurationResponseParser, Service service, HttpMessageHandler httpMessageHandler, IAgentTimer agentTimer, string dbgName);
    internal CentralConfigurationFetcher(IApmLogger logger, IConfigurationStore configurationStore, Service service, HttpMessageHandler httpMessageHandler, IAgentTimer agentTimer, string dbgName);
    private CentralConfigurationFetcher(IApmLogger logger, IConfigurationStore configurationStore, IConfiguration initialConfiguration, Service service, HttpMessageHandler httpMessageHandler, IAgentTimer agentTimer, string dbgName);
    private static CentralConfigurationFetcher();
    protected virtual void WorkLoopIteration();
    private HttpRequestMessage BuildHttpRequest(EntityTagHeaderValue eTag);
    [AsyncStateMachineAttribute("Elastic.Apm.BackendComm.CentralConfig.CentralConfigurationFetcher/<FetchConfigHttpResponseImplAsync>d__17")]
private Task`1<ValueTuple`2<HttpResponseMessage, string>> FetchConfigHttpResponseImplAsync(HttpRequestMessage httpRequest);
    [AsyncStateMachineAttribute("Elastic.Apm.BackendComm.CentralConfig.CentralConfigurationFetcher/<FetchConfigHttpResponseAsync>d__18")]
private Task`1<ValueTuple`2<HttpResponseMessage, string>> FetchConfigHttpResponseAsync(HttpRequestMessage httpRequest);
    private void UpdateConfigStore(CentralConfiguration centralConfiguration);
}
internal class Elastic.Apm.BackendComm.CentralConfig.CentralConfigurationKeyValue : ConfigurationKeyValue {
    public CentralConfigurationKeyValue(DynamicConfigurationOption option, string value, string readFrom);
}
internal class Elastic.Apm.BackendComm.CentralConfig.CentralConfigurationResponseParser : object {
    internal static TimeSpan WaitTimeIfNoCacheControlMaxAge;
    private IApmLogger _logger;
    internal CentralConfigurationResponseParser(IApmLogger logger);
    private static CentralConfigurationResponseParser();
    public sealed virtual ValueTuple`2<CentralConfiguration, WaitInfoS> ParseHttpResponse(HttpResponseMessage httpResponse, string httpResponseBody);
    private CentralConfiguration ParseConfigPayload(HttpResponseMessage httpResponse, CentralConfigPayload configPayload);
    private static WaitInfoS ExtractWaitInfo(HttpResponseMessage httpResponse);
    private bool InterpretResponseStatusCode(HttpResponseMessage httpResponse, WaitInfoS waitInfo);
}
[ExtensionAttribute]
internal static class Elastic.Apm.BackendComm.CentralConfig.DynamicConfigurationExtensions : object {
    private static IReadOnlyCollection`1<DynamicConfigurationOption> All;
    private static DynamicConfigurationExtensions();
    public static IReadOnlyCollection`1<DynamicConfigurationOption> AllDynamicOptions();
    [ExtensionAttribute]
public static ConfigurationOption ToConfigurationOption(DynamicConfigurationOption dynamicOption);
    [ExtensionAttribute]
public static Nullable`1<DynamicConfigurationOption> ToDynamicConfigurationOption(ConfigurationOption option);
    [ExtensionAttribute]
public static string ToJsonKey(DynamicConfigurationOption dynamicOption);
}
internal enum Elastic.Apm.BackendComm.CentralConfig.DynamicConfigurationOption : Enum {
    public int value__;
    public static DynamicConfigurationOption CaptureBodyContentTypes;
    public static DynamicConfigurationOption CaptureBody;
    public static DynamicConfigurationOption CaptureHeaders;
    public static DynamicConfigurationOption ExitSpanMinDuration;
    public static DynamicConfigurationOption IgnoreMessageQueues;
    public static DynamicConfigurationOption LogLevel;
    public static DynamicConfigurationOption Recording;
    public static DynamicConfigurationOption SanitizeFieldNames;
    public static DynamicConfigurationOption SpanCompressionEnabled;
    public static DynamicConfigurationOption SpanCompressionExactMatchMaxDuration;
    public static DynamicConfigurationOption SpanCompressionSameKindMaxDuration;
    public static DynamicConfigurationOption SpanStackTraceMinDuration;
    [ObsoleteAttribute("Use SpanStackTraceMinDurationKey")]
public static DynamicConfigurationOption SpanFramesMinDuration;
    public static DynamicConfigurationOption StackTraceLimit;
    public static DynamicConfigurationOption TraceContinuationStrategy;
    public static DynamicConfigurationOption TransactionIgnoreUrls;
    public static DynamicConfigurationOption TransactionNameGroups;
    public static DynamicConfigurationOption TransactionMaxSpans;
    public static DynamicConfigurationOption TransactionSampleRate;
    public static DynamicConfigurationOption UsePathAsTransactionName;
}
internal interface Elastic.Apm.BackendComm.CentralConfig.ICentralConfigurationFetcher {
}
internal interface Elastic.Apm.BackendComm.CentralConfig.ICentralConfigurationResponseParser {
    public abstract virtual ValueTuple`2<CentralConfiguration, WaitInfoS> ParseHttpResponse(HttpResponseMessage httpResponse, string httpResponseBody);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.BackendComm.CentralConfig.RuntimeConfigurationSnapshot : object {
    [NullableAttribute("2")]
private CentralConfiguration _dynamicConfiguration;
    private IConfigurationReader _mainConfiguration;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    public string ApiKey { get; }
    public IReadOnlyCollection`1<string> ApplicationNamespaces { get; }
    public IReadOnlyList`1<WildcardMatcher> BaggageToAttach { get; }
    public string CaptureBody { get; }
    public List`1<string> CaptureBodyContentTypes { get; }
    public bool CaptureHeaders { get; }
    public bool CentralConfig { get; }
    public string CloudProvider { get; }
    public string Description { get; }
    public IReadOnlyList`1<WildcardMatcher> DisableMetrics { get; }
    public bool Enabled { get; }
    public bool OpenTelemetryBridgeEnabled { get; }
    public string Environment { get; }
    public IReadOnlyCollection`1<string> ExcludedNamespaces { get; }
    public double ExitSpanMinDuration { get; }
    public TimeSpan FlushInterval { get; }
    public IReadOnlyDictionary`2<string, string> GlobalLabels { get; }
    public string HostName { get; }
    public IReadOnlyList`1<WildcardMatcher> IgnoreMessageQueues { get; }
    public LogLevel LogLevel { get; }
    public int MaxBatchEventCount { get; }
    public int MaxQueueEventCount { get; }
    public double MetricsIntervalInMilliseconds { get; }
    public bool Recording { get; }
    public IReadOnlyList`1<WildcardMatcher> SanitizeFieldNames { get; }
    public string SecretToken { get; }
    public string ServerCert { get; }
    public Uri ServerUrl { get; }
    [ObsoleteAttribute("Use ServerUrl")]
public IReadOnlyList`1<Uri> ServerUrls { get; }
    public bool UseWindowsCredentials { get; }
    public string ServiceName { get; }
    public string ServiceNodeName { get; }
    public string ServiceVersion { get; }
    public bool SpanCompressionEnabled { get; }
    public double SpanCompressionExactMatchMaxDuration { get; }
    public double SpanCompressionSameKindMaxDuration { get; }
    public double SpanStackTraceMinDurationInMilliseconds { get; }
    [ObsoleteAttribute("Use SpanStackTraceMinDurationInMilliseconds")]
public double SpanFramesMinDurationInMilliseconds { get; }
    public int StackTraceLimit { get; }
    [ObsoleteAttribute("Use TraceContinuationStrategy")]
public bool TraceContextIgnoreSampledFalse { get; }
    public string TraceContinuationStrategy { get; }
    public IReadOnlyList`1<WildcardMatcher> TransactionIgnoreUrls { get; }
    public IReadOnlyCollection`1<WildcardMatcher> TransactionNameGroups { get; }
    public int TransactionMaxSpans { get; }
    public double TransactionSampleRate { get; }
    public bool UseElasticTraceparentHeader { get; }
    public bool UsePathAsTransactionName { get; }
    public bool VerifyServerCert { get; }
    internal RuntimeConfigurationSnapshot(IConfigurationReader mainConfiguration);
    internal RuntimeConfigurationSnapshot(IConfigurationReader mainConfiguration, CentralConfiguration dynamicConfiguration);
    public sealed virtual ConfigurationKeyValue Lookup(ConfigurationOption option);
    public sealed virtual string get_ApiKey();
    public sealed virtual IReadOnlyCollection`1<string> get_ApplicationNamespaces();
    public sealed virtual IReadOnlyList`1<WildcardMatcher> get_BaggageToAttach();
    public sealed virtual string get_CaptureBody();
    public sealed virtual List`1<string> get_CaptureBodyContentTypes();
    public sealed virtual bool get_CaptureHeaders();
    public sealed virtual bool get_CentralConfig();
    public sealed virtual string get_CloudProvider();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Description();
    public sealed virtual IReadOnlyList`1<WildcardMatcher> get_DisableMetrics();
    public sealed virtual bool get_Enabled();
    public sealed virtual bool get_OpenTelemetryBridgeEnabled();
    public sealed virtual string get_Environment();
    public sealed virtual IReadOnlyCollection`1<string> get_ExcludedNamespaces();
    public sealed virtual double get_ExitSpanMinDuration();
    public sealed virtual TimeSpan get_FlushInterval();
    public sealed virtual IReadOnlyDictionary`2<string, string> get_GlobalLabels();
    public sealed virtual string get_HostName();
    public sealed virtual IReadOnlyList`1<WildcardMatcher> get_IgnoreMessageQueues();
    public sealed virtual LogLevel get_LogLevel();
    public sealed virtual int get_MaxBatchEventCount();
    public sealed virtual int get_MaxQueueEventCount();
    public sealed virtual double get_MetricsIntervalInMilliseconds();
    public sealed virtual bool get_Recording();
    public sealed virtual IReadOnlyList`1<WildcardMatcher> get_SanitizeFieldNames();
    public sealed virtual string get_SecretToken();
    public sealed virtual string get_ServerCert();
    public sealed virtual Uri get_ServerUrl();
    public sealed virtual IReadOnlyList`1<Uri> get_ServerUrls();
    public sealed virtual bool get_UseWindowsCredentials();
    public sealed virtual string get_ServiceName();
    public sealed virtual string get_ServiceNodeName();
    public sealed virtual string get_ServiceVersion();
    public sealed virtual bool get_SpanCompressionEnabled();
    public sealed virtual double get_SpanCompressionExactMatchMaxDuration();
    public sealed virtual double get_SpanCompressionSameKindMaxDuration();
    public sealed virtual double get_SpanStackTraceMinDurationInMilliseconds();
    public sealed virtual double get_SpanFramesMinDurationInMilliseconds();
    public sealed virtual int get_StackTraceLimit();
    public sealed virtual bool get_TraceContextIgnoreSampledFalse();
    public sealed virtual string get_TraceContinuationStrategy();
    public sealed virtual IReadOnlyList`1<WildcardMatcher> get_TransactionIgnoreUrls();
    public sealed virtual IReadOnlyCollection`1<WildcardMatcher> get_TransactionNameGroups();
    public sealed virtual int get_TransactionMaxSpans();
    public sealed virtual double get_TransactionSampleRate();
    public sealed virtual bool get_UseElasticTraceparentHeader();
    public sealed virtual bool get_UsePathAsTransactionName();
    public sealed virtual bool get_VerifyServerCert();
}
internal class Elastic.Apm.Cloud.AwsCloudMetadataProvider : object {
    internal static string TokenUri;
    internal static string MetadataUri;
    internal static string Name;
    private HttpMessageHandler _handler;
    private IApmLogger _logger;
    [CompilerGeneratedAttribute]
private string <Provider>k__BackingField;
    public string Provider { get; }
    public AwsCloudMetadataProvider(IApmLogger logger);
    internal AwsCloudMetadataProvider(IApmLogger logger, HttpMessageHandler handler);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Provider();
    [AsyncStateMachineAttribute("Elastic.Apm.Cloud.AwsCloudMetadataProvider/<GetMetadataAsync>d__10")]
public sealed virtual Task`1<Cloud> GetMetadataAsync();
}
public class Elastic.Apm.Cloud.AzureAppServiceMetadataProvider : object {
    internal static string Name;
    private IDictionary _environmentVariables;
    private IApmLogger _logger;
    public string Provider { get; }
    internal AzureAppServiceMetadataProvider(IApmLogger logger, IDictionary environmentVariables);
    public sealed virtual string get_Provider();
    public sealed virtual Task`1<Cloud> GetMetadataAsync();
}
internal class Elastic.Apm.Cloud.AzureCloudMetadataProvider : object {
    internal static string MetadataUri;
    internal static string Name;
    private HttpMessageHandler _handler;
    private IApmLogger _logger;
    [CompilerGeneratedAttribute]
private string <Provider>k__BackingField;
    public string Provider { get; }
    internal AzureCloudMetadataProvider(IApmLogger logger, HttpMessageHandler handler);
    public AzureCloudMetadataProvider(IApmLogger logger);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Provider();
    [AsyncStateMachineAttribute("Elastic.Apm.Cloud.AzureCloudMetadataProvider/<GetMetadataAsync>d__9")]
public sealed virtual Task`1<Cloud> GetMetadataAsync();
}
internal static class Elastic.Apm.Cloud.AzureEnvironmentVariables : object {
    internal static string WebsiteOwnerName;
    internal static string WebsiteResourceGroup;
    internal static string WebsiteSiteName;
    internal static string WebsiteInstanceId;
    internal static string RegionName;
    internal static string FunctionsExtensionVersion;
    internal static string FunctionsWorkerRuntime;
}
internal class Elastic.Apm.Cloud.AzureFunctionsMetaData : ValueType {
    [CompilerGeneratedAttribute]
private bool <IsValid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RegionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FunctionsExtensionVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebsiteSiteName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebsiteResourceGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubscriptionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FunctionsWorkerRuntime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebsiteInstanceId>k__BackingField;
    internal bool IsValid { get; internal set; }
    internal string RegionName { get; internal set; }
    internal string FunctionsExtensionVersion { get; internal set; }
    internal string WebsiteSiteName { get; internal set; }
    internal string WebsiteResourceGroup { get; internal set; }
    internal string SubscriptionId { get; internal set; }
    internal string FunctionsWorkerRuntime { get; internal set; }
    internal string WebsiteInstanceId { get; internal set; }
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
internal bool get_IsValid();
    [CompilerGeneratedAttribute]
internal void set_IsValid(bool value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
internal string get_RegionName();
    [CompilerGeneratedAttribute]
internal void set_RegionName(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
internal string get_FunctionsExtensionVersion();
    [CompilerGeneratedAttribute]
internal void set_FunctionsExtensionVersion(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
internal string get_WebsiteSiteName();
    [CompilerGeneratedAttribute]
internal void set_WebsiteSiteName(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
internal string get_WebsiteResourceGroup();
    [CompilerGeneratedAttribute]
internal void set_WebsiteResourceGroup(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
internal string get_SubscriptionId();
    [CompilerGeneratedAttribute]
internal void set_SubscriptionId(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
internal string get_FunctionsWorkerRuntime();
    [CompilerGeneratedAttribute]
internal void set_FunctionsWorkerRuntime(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
internal string get_WebsiteInstanceId();
    [CompilerGeneratedAttribute]
internal void set_WebsiteInstanceId(string value);
}
internal class Elastic.Apm.Cloud.AzureFunctionsMetadataProvider : object {
    internal static string Name;
    private IDictionary _environmentVariables;
    private IApmLogger _logger;
    public string Provider { get; }
    public AzureFunctionsMetadataProvider(IApmLogger logger, IDictionary environmentVariables);
    public sealed virtual string get_Provider();
    public sealed virtual Task`1<Cloud> GetMetadataAsync();
    internal static AzureFunctionsMetaData GetAzureFunctionsMetaData(IApmLogger logger, IDictionary environmentVariables);
    private Cloud GetMetadata();
}
public class Elastic.Apm.Cloud.CloudMetadataProviderCollection : KeyedCollection`2<string, ICloudMetadataProvider> {
    public CloudMetadataProviderCollection(string cloudProvider, IApmLogger logger);
    internal CloudMetadataProviderCollection(string cloudProvider, IApmLogger logger, IEnvironmentVariables environmentVariables);
    protected virtual string GetKeyForItem(ICloudMetadataProvider item);
    [AsyncStateMachineAttribute("Elastic.Apm.Cloud.CloudMetadataProviderCollection/<GetMetadataAsync>d__3")]
public Task`1<Cloud> GetMetadataAsync();
    public virtual string ToString();
}
internal class Elastic.Apm.Cloud.EnvironmentBasedAzureMetadataHelper : ValueType {
    private string _name;
    private IApmLogger _logger;
    private IDictionary _environmentVariables;
    internal EnvironmentBasedAzureMetadataHelper(string name, IApmLogger logger, IDictionary environmentVariables);
    internal string GetEnvironmentVariable(string key);
    internal bool NullOrEmptyVariable(string key, string value);
    internal Nullable`1<WebSiteOwnerNameTokens> TokenizeWebSiteOwnerName(string websiteOwnerName);
}
internal class Elastic.Apm.Cloud.GcpCloudMetadataProvider : object {
    internal static string MetadataUri;
    internal static string Name;
    private HttpMessageHandler _handler;
    private IApmLogger _logger;
    [CompilerGeneratedAttribute]
private string <Provider>k__BackingField;
    public string Provider { get; }
    internal GcpCloudMetadataProvider(IApmLogger logger, HttpMessageHandler handler);
    public GcpCloudMetadataProvider(IApmLogger logger);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Provider();
    [AsyncStateMachineAttribute("Elastic.Apm.Cloud.GcpCloudMetadataProvider/<GetMetadataAsync>d__9")]
public sealed virtual Task`1<Cloud> GetMetadataAsync();
}
public interface Elastic.Apm.Cloud.ICloudMetadataProvider {
    public string Provider { get; }
    public abstract virtual string get_Provider();
    public abstract virtual Task`1<Cloud> GetMetadataAsync();
}
internal class Elastic.Apm.Cloud.WebSiteOwnerNameTokens : ValueType {
    [CompilerGeneratedAttribute]
private string <Region>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubscriptionId>k__BackingField;
    internal string Region { get; }
    internal string ResourceGroup { get; }
    internal string SubscriptionId { get; }
    internal WebSiteOwnerNameTokens(string subscriptionId, string resourceGroup, string region);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
internal string get_Region();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
internal string get_ResourceGroup();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
internal string get_SubscriptionId();
}
internal class Elastic.Apm.CompositeDisposable : object {
    private List`1<IDisposable> _disposables;
    private object _lock;
    private bool _isDisposed;
    public CompositeDisposable Add(IDisposable disposable);
    public sealed virtual void Dispose();
}
public abstract class Elastic.Apm.Config.AbstractConfigurationReader : object {
    private IApmLogger _logger;
    private ConfigurationDefaults _defaults;
    protected AbstractConfigurationReader(IApmLogger logger, string dbgDerivedClassName);
    internal AbstractConfigurationReader(IApmLogger logger, ConfigurationDefaults defaults);
    protected bool ParseUseElasticTraceparentHeader(ConfigurationKeyValue kv);
    protected internal static bool TryParseLogLevel(string value, LogLevel& level);
    protected IReadOnlyList`1<WildcardMatcher> ParseSanitizeFieldNames(ConfigurationKeyValue kv);
    protected IReadOnlyList`1<WildcardMatcher> ParseBaggageToAttach(ConfigurationKeyValue kv);
    private IReadOnlyList`1<WildcardMatcher> ParseWildcardMatcher(string stringValue, string configName);
    protected IReadOnlyList`1<WildcardMatcher> ParseDisableMetrics(ConfigurationKeyValue kv);
    protected double ParseExitSpanMinDuration(ConfigurationKeyValue kv);
    protected IReadOnlyList`1<WildcardMatcher> ParseIgnoreMessageQueues(ConfigurationKeyValue kv);
    protected string ParseSecretToken(ConfigurationKeyValue kv);
    protected string ParseServerCert(ConfigurationKeyValue kv);
    protected string ParseApiKey(ConfigurationKeyValue kv);
    protected bool ParseEnabled(ConfigurationKeyValue kv);
    protected bool ParseOpenTelemetryBridgeEnabled(ConfigurationKeyValue kv);
    protected bool ParseRecording(ConfigurationKeyValue kv);
    protected string ParseTraceContinuationStrategy(ConfigurationKeyValue kv);
    protected bool ParseTraceContextIgnoreSampledFalse(ConfigurationKeyValue kv);
    protected bool ParseUseWindowsCredentials(ConfigurationKeyValue kv);
    protected bool ParseVerifyServerCert(ConfigurationKeyValue kv);
    protected bool ParseCaptureHeaders(ConfigurationKeyValue kv);
    protected LogLevel ParseLogLevel(ConfigurationKeyValue kv);
    protected Uri ParseServerUrl(ConfigurationKeyValue kv);
    protected IReadOnlyList`1<Uri> ParseServerUrls(ConfigurationKeyValue kv);
    protected double ParseMetricsInterval(ConfigurationKeyValue kv);
    protected int ParseStackTraceLimit(ConfigurationKeyValue kv);
    protected IReadOnlyList`1<WildcardMatcher> ParseTransactionIgnoreUrls(ConfigurationKeyValue kv);
    protected IReadOnlyCollection`1<WildcardMatcher> ParseTransactionNameGroups(ConfigurationKeyValue kv);
    protected bool ParseSpanCompressionEnabled(ConfigurationKeyValue kv);
    protected double ParseSpanCompressionExactMatchMaxDuration(ConfigurationKeyValue kv);
    protected double ParseSpanCompressionSameKindMaxDuration(ConfigurationKeyValue kv);
    protected double ParseSpanStackTraceMinDurationInMilliseconds(ConfigurationKeyValue kv);
    protected double ParseSpanFramesMinDurationInMilliseconds(ConfigurationKeyValue kv);
    private int ParseMaxXyzEventCount(ConfigurationKeyValue kv, int defaultValue, string dbgOptionName);
    protected int ParseMaxBatchEventCount(ConfigurationKeyValue kv);
    protected int ParseMaxQueueEventCount(ConfigurationKeyValue kv);
    protected TimeSpan ParseFlushInterval(ConfigurationKeyValue kv);
    private TimeSpan ParsePositiveOrZeroTimeIntervalInMillisecondsImpl(ConfigurationKeyValue kv, TimeSuffix defaultSuffix, TimeSpan defaultValue, string dbgOptionName);
    private TimeSpan ParseTimeIntervalImpl(ConfigurationKeyValue kv, TimeSuffix defaultSuffix, TimeSpan defaultValue, string dbgOptionName);
    private bool TryParseTimeInterval(string valueAsString, Double& valueInMilliseconds, TimeSuffix defaultSuffix);
    private static AssemblyName DiscoverEntryAssemblyName();
    internal static string DiscoverDefaultServiceName();
    internal static string AdaptServiceName(string originalName);
    protected string ParseServiceName(ConfigurationKeyValue kv);
    private string DiscoverServiceVersion();
    protected string ParseServiceVersion(ConfigurationKeyValue kv);
    protected string ParseEnvironment(ConfigurationKeyValue kv);
    protected string ParseServiceNodeName(ConfigurationKeyValue kv);
    private static bool TryParseFloatingPoint(string valueAsString, Double& result);
    protected double ParseTransactionSampleRate(ConfigurationKeyValue kv);
    protected int ParseTransactionMaxSpans(ConfigurationKeyValue kv);
    protected bool ParseUsePathAsTransactionName(ConfigurationKeyValue kv);
    internal static bool IsMsOrElastic(Byte[] array);
    protected string ParseCaptureBody(ConfigurationKeyValue kv);
    protected List`1<string> ParseCaptureBodyContentTypes(ConfigurationKeyValue kv);
    protected bool ParseCentralConfig(ConfigurationKeyValue kv);
    protected string ParseCloudProvider(ConfigurationKeyValue kv);
    private bool ParseBoolOption(ConfigurationKeyValue kv, bool defaultValue, string dbgOptionName);
    protected IReadOnlyDictionary`2<string, string> ParseGlobalLabels(ConfigurationKeyValue kv);
    protected string ParseHostName(ConfigurationKeyValue kv);
    private IReadOnlyDictionary`2<string, string> ParseKeyValuePairs(ConfigurationKeyValue kv, string dbgOptionName);
    internal static string ToLogString(IReadOnlyDictionary`2<string, string> stringToStringMap);
    protected IReadOnlyList`1<string> ParseExcludedNamespaces(ConfigurationKeyValue kv);
    protected IReadOnlyList`1<string> ParseApplicationNamespaces(ConfigurationKeyValue kv);
    private static bool TryParseUri(string u, Uri& uri);
    [CompilerGeneratedAttribute]
internal static Nullable`1<LogLevel> <TryParseLogLevel>g__DefaultLogLevel|5_0(<>c__DisplayClass5_0& );
    [CompilerGeneratedAttribute]
private List`1<Uri> <ParseServerUrls>g__LogAndReturnDefault|25_0(<>c__DisplayClass25_0& );
    [CompilerGeneratedAttribute]
private List`1<string> <ParseExcludedNamespaces>g__LogAndReturnDefault|64_1();
    [CompilerGeneratedAttribute]
private List`1<string> <ParseApplicationNamespaces>g__LogAndReturnDefault|65_1();
}
public class Elastic.Apm.Config.ApplicationKeyValue : ConfigurationKeyValue {
    public ApplicationKeyValue(ConfigurationOption option, string value, string readFrom);
}
public static class Elastic.Apm.Config.ConfigConsts : object {
}
internal class Elastic.Apm.Config.ConfigurationDefaults : object {
    [CompilerGeneratedAttribute]
private string <ServiceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EnvironmentName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DebugName>k__BackingField;
    public string ServiceName { get; internal set; }
    public string EnvironmentName { get; internal set; }
    public string DebugName { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_ServiceName();
    [CompilerGeneratedAttribute]
internal void set_ServiceName(string value);
    [CompilerGeneratedAttribute]
public string get_EnvironmentName();
    [CompilerGeneratedAttribute]
internal void set_EnvironmentName(string value);
    [CompilerGeneratedAttribute]
public string get_DebugName();
    [CompilerGeneratedAttribute]
internal void set_DebugName(string value);
}
public class Elastic.Apm.Config.ConfigurationKeyValue : object {
    [CompilerGeneratedAttribute]
private ConfigurationType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private ConfigurationOption <Option>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReadFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <NeedsMasking>k__BackingField;
    public ConfigurationType Type { get; }
    public ConfigurationOption Option { get; }
    public string Key { get; }
    public string ReadFrom { get; }
    public string Value { get; }
    public bool NeedsMasking { get; }
    private string ValueForLogging { get; }
    public ConfigurationKeyValue(ConfigurationOption option, ConfigurationType type, string value, string readFrom);
    [CompilerGeneratedAttribute]
public ConfigurationType get_Type();
    [CompilerGeneratedAttribute]
public ConfigurationOption get_Option();
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public string get_ReadFrom();
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public bool get_NeedsMasking();
    private string get_ValueForLogging();
    public void Log(T state, Action`5<T, string, string, string, string> logCallback);
    public virtual string ToString();
    [CompilerGeneratedAttribute]
internal static string <get_ValueForLogging>g__UrlString|20_0(string value);
}
internal static class Elastic.Apm.Config.ConfigurationLogger : object {
    [CompilerGeneratedAttribute]
private static IReadOnlyCollection`1<OptionLoggingInstruction> <OptionLoggingInstructions>k__BackingField;
    internal static IReadOnlyCollection`1<OptionLoggingInstruction> OptionLoggingInstructions { get; }
    private static ConfigurationLogger();
    internal static DefaultKeyValue GetDefaultValueForLogging(ConfigurationOption option, IConfigurationReader config);
    [CompilerGeneratedAttribute]
internal static IReadOnlyCollection`1<OptionLoggingInstruction> get_OptionLoggingInstructions();
    public static void PrintAgentLogPreamble(IApmLogger logger, IConfigurationReader configurationReader);
    public static void PrintAgentConfiguration(IApmLogger logger, IConfigurationReader configurationReader);
}
public enum Elastic.Apm.Config.ConfigurationOption : Enum {
    public int value__;
    public static ConfigurationOption ApiKey;
    public static ConfigurationOption ApplicationNamespaces;
    public static ConfigurationOption BaggageToAttach;
    public static ConfigurationOption CaptureBody;
    public static ConfigurationOption CaptureBodyContentTypes;
    public static ConfigurationOption CaptureHeaders;
    public static ConfigurationOption CentralConfig;
    public static ConfigurationOption CloudProvider;
    public static ConfigurationOption DisableMetrics;
    public static ConfigurationOption Enabled;
    public static ConfigurationOption OpenTelemetryBridgeEnabled;
    public static ConfigurationOption Environment;
    public static ConfigurationOption ExcludedNamespaces;
    public static ConfigurationOption ExitSpanMinDuration;
    public static ConfigurationOption FlushInterval;
    public static ConfigurationOption GlobalLabels;
    public static ConfigurationOption HostName;
    public static ConfigurationOption IgnoreMessageQueues;
    public static ConfigurationOption LogLevel;
    public static ConfigurationOption MaxBatchEventCount;
    public static ConfigurationOption MaxQueueEventCount;
    public static ConfigurationOption MetricsInterval;
    public static ConfigurationOption Recording;
    public static ConfigurationOption SanitizeFieldNames;
    public static ConfigurationOption SecretToken;
    public static ConfigurationOption ServerCert;
    public static ConfigurationOption ServerUrl;
    public static ConfigurationOption UseWindowsCredentials;
    public static ConfigurationOption ServiceName;
    public static ConfigurationOption ServiceNodeName;
    public static ConfigurationOption ServiceVersion;
    public static ConfigurationOption SpanCompressionEnabled;
    public static ConfigurationOption SpanCompressionExactMatchMaxDuration;
    public static ConfigurationOption SpanCompressionSameKindMaxDuration;
    public static ConfigurationOption SpanStackTraceMinDuration;
    public static ConfigurationOption StackTraceLimit;
    public static ConfigurationOption TraceContinuationStrategy;
    public static ConfigurationOption TransactionIgnoreUrls;
    public static ConfigurationOption TransactionMaxSpans;
    public static ConfigurationOption TransactionNameGroups;
    public static ConfigurationOption TransactionSampleRate;
    public static ConfigurationOption UseElasticTraceparentHeader;
    public static ConfigurationOption UsePathAsTransactionName;
    public static ConfigurationOption VerifyServerCert;
    public static ConfigurationOption ServerUrls;
    public static ConfigurationOption SpanFramesMinDuration;
    public static ConfigurationOption TraceContextIgnoreSampledFalse;
    public static ConfigurationOption FullFrameworkConfigurationReaderType;
}
[ExtensionAttribute]
internal static class Elastic.Apm.Config.ConfigurationOptionExtensions : object {
    internal static string EnvPrefix;
    internal static string KeyPrefix;
    private static IReadOnlyCollection`1<ConfigurationOption> All;
    private static ConfigurationOptionExtensions();
    public static IReadOnlyCollection`1<ConfigurationOption> AllOptions();
    [ExtensionAttribute]
public static string ToNormalizedName(ConfigurationOption option);
    [ExtensionAttribute]
public static string ToConfigurationName(ConfigurationOption option, ConfigurationType type);
    [ExtensionAttribute]
public static string ToEnvironmentVariable(ConfigurationOption option);
    [ExtensionAttribute]
public static string ToConfigKey(ConfigurationOption option);
}
internal class Elastic.Apm.Config.ConfigurationStore : object {
    private static string ThisClassName;
    private object _lock;
    private IApmLogger _logger;
    private IConfiguration modreq(System.Runtime.CompilerServices.IsVolatile) _currentSnapshot;
    public IConfiguration CurrentSnapshot { get; public set; }
    internal ConfigurationStore(IConfiguration initialSnapshot, IApmLogger logger);
    public sealed virtual IConfiguration get_CurrentSnapshot();
    public sealed virtual void set_CurrentSnapshot(IConfiguration value);
}
public enum Elastic.Apm.Config.ConfigurationType : Enum {
    public int value__;
    public static ConfigurationType Environment;
    public static ConfigurationType Application;
    public static ConfigurationType CentralConfig;
    public static ConfigurationType Default;
}
public class Elastic.Apm.Config.DefaultKeyValue : ConfigurationKeyValue {
    public DefaultKeyValue(ConfigurationOption option, string value, string readFrom);
}
internal class Elastic.Apm.Config.EnvironmentConfiguration : FallbackToEnvironmentConfigurationBase {
    private static ConfigurationDefaults ConfigurationDefaults;
    private static NullConfigurationKeyValueProvider NullProvider;
    public EnvironmentConfiguration(IApmLogger logger);
    private static EnvironmentConfiguration();
}
public class Elastic.Apm.Config.EnvironmentKeyValue : ConfigurationKeyValue {
    public EnvironmentKeyValue(ConfigurationOption option, string value, string readFrom);
}
internal class Elastic.Apm.Config.EnvironmentKeyValueProvider : object {
    public string Description { get; }
    public sealed virtual string get_Description();
    public sealed virtual EnvironmentKeyValue Read(ConfigurationOption option);
}
internal abstract class Elastic.Apm.Config.FallbackConfigurationBase : AbstractConfigurationReader {
    [CompilerGeneratedAttribute]
private IConfigurationKeyValueProvider <KeyValueProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IConfigurationEnvironmentValueProvider <EnvironmentProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiKey>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <ApplicationNamespaces>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<WildcardMatcher> <BaggageToAttach>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CaptureBody>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <CaptureBodyContentTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CaptureHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CentralConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CloudProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<WildcardMatcher> <DisableMetrics>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Environment>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <ExcludedNamespaces>k__BackingField;
    [CompilerGeneratedAttribute]
private double <ExitSpanMinDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <FlushInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <GlobalLabels>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HostName>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<WildcardMatcher> <IgnoreMessageQueues>k__BackingField;
    [CompilerGeneratedAttribute]
private LogLevel <LogLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxBatchEventCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxQueueEventCount>k__BackingField;
    [CompilerGeneratedAttribute]
private double <MetricsIntervalInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Recording>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<WildcardMatcher> <SanitizeFieldNames>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecretToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServerCert>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ServerUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<Uri> <ServerUrls>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseWindowsCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceNodeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SpanCompressionEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private double <SpanCompressionExactMatchMaxDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private double <SpanCompressionSameKindMaxDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private double <SpanStackTraceMinDurationInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private double <SpanFramesMinDurationInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StackTraceLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TraceContextIgnoreSampledFalse>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TraceContinuationStrategy>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<WildcardMatcher> <TransactionIgnoreUrls>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<WildcardMatcher> <TransactionNameGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TransactionMaxSpans>k__BackingField;
    [CompilerGeneratedAttribute]
private double <TransactionSampleRate>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseElasticTraceparentHeader>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UsePathAsTransactionName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <VerifyServerCert>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OpenTelemetryBridgeEnabled>k__BackingField;
    private IConfigurationKeyValueProvider KeyValueProvider { get; }
    private IConfigurationEnvironmentValueProvider EnvironmentProvider { get; }
    public string Description { get; }
    public string ApiKey { get; }
    public IReadOnlyCollection`1<string> ApplicationNamespaces { get; }
    public IReadOnlyList`1<WildcardMatcher> BaggageToAttach { get; }
    public string CaptureBody { get; }
    public List`1<string> CaptureBodyContentTypes { get; }
    public bool CaptureHeaders { get; }
    public bool CentralConfig { get; }
    public string CloudProvider { get; }
    public IReadOnlyList`1<WildcardMatcher> DisableMetrics { get; }
    public bool Enabled { get; }
    public string Environment { get; }
    public IReadOnlyCollection`1<string> ExcludedNamespaces { get; }
    public double ExitSpanMinDuration { get; }
    public TimeSpan FlushInterval { get; }
    public IReadOnlyDictionary`2<string, string> GlobalLabels { get; }
    public string HostName { get; }
    public IReadOnlyList`1<WildcardMatcher> IgnoreMessageQueues { get; }
    public LogLevel LogLevel { get; protected set; }
    public int MaxBatchEventCount { get; }
    public int MaxQueueEventCount { get; }
    public double MetricsIntervalInMilliseconds { get; }
    public bool Recording { get; }
    public IReadOnlyList`1<WildcardMatcher> SanitizeFieldNames { get; }
    public string SecretToken { get; }
    public string ServerCert { get; }
    public Uri ServerUrl { get; }
    [ObsoleteAttribute("Use ServerUrl")]
public IReadOnlyList`1<Uri> ServerUrls { get; }
    public bool UseWindowsCredentials { get; }
    public string ServiceName { get; protected set; }
    public string ServiceNodeName { get; }
    public string ServiceVersion { get; }
    public bool SpanCompressionEnabled { get; }
    public double SpanCompressionExactMatchMaxDuration { get; }
    public double SpanCompressionSameKindMaxDuration { get; }
    public double SpanStackTraceMinDurationInMilliseconds { get; }
    [ObsoleteAttribute("Use SpanStackTraceMinDurationInMilliseconds")]
public double SpanFramesMinDurationInMilliseconds { get; }
    public int StackTraceLimit { get; }
    public bool TraceContextIgnoreSampledFalse { get; }
    public string TraceContinuationStrategy { get; }
    public IReadOnlyList`1<WildcardMatcher> TransactionIgnoreUrls { get; }
    public IReadOnlyCollection`1<WildcardMatcher> TransactionNameGroups { get; }
    public int TransactionMaxSpans { get; }
    public double TransactionSampleRate { get; }
    public bool UseElasticTraceparentHeader { get; }
    public bool UsePathAsTransactionName { get; }
    public bool VerifyServerCert { get; }
    public bool OpenTelemetryBridgeEnabled { get; }
    internal FallbackConfigurationBase(IApmLogger logger, ConfigurationDefaults defaults, IConfigurationKeyValueProvider configKeyValueProvider, IConfigurationEnvironmentValueProvider environmentValueProvider);
    [CompilerGeneratedAttribute]
private IConfigurationKeyValueProvider get_KeyValueProvider();
    [CompilerGeneratedAttribute]
private IConfigurationEnvironmentValueProvider get_EnvironmentProvider();
    public sealed virtual ConfigurationKeyValue Lookup(ConfigurationOption option);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Description();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApiKey();
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyCollection`1<string> get_ApplicationNamespaces();
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyList`1<WildcardMatcher> get_BaggageToAttach();
    [CompilerGeneratedAttribute]
public sealed virtual string get_CaptureBody();
    [CompilerGeneratedAttribute]
public sealed virtual List`1<string> get_CaptureBodyContentTypes();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_CaptureHeaders();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_CentralConfig();
    [CompilerGeneratedAttribute]
public sealed virtual string get_CloudProvider();
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyList`1<WildcardMatcher> get_DisableMetrics();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Enabled();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Environment();
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyCollection`1<string> get_ExcludedNamespaces();
    [CompilerGeneratedAttribute]
public sealed virtual double get_ExitSpanMinDuration();
    [CompilerGeneratedAttribute]
public sealed virtual TimeSpan get_FlushInterval();
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyDictionary`2<string, string> get_GlobalLabels();
    [CompilerGeneratedAttribute]
public sealed virtual string get_HostName();
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyList`1<WildcardMatcher> get_IgnoreMessageQueues();
    [CompilerGeneratedAttribute]
public sealed virtual LogLevel get_LogLevel();
    [CompilerGeneratedAttribute]
protected void set_LogLevel(LogLevel value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_MaxBatchEventCount();
    [CompilerGeneratedAttribute]
public sealed virtual int get_MaxQueueEventCount();
    [CompilerGeneratedAttribute]
public sealed virtual double get_MetricsIntervalInMilliseconds();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Recording();
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyList`1<WildcardMatcher> get_SanitizeFieldNames();
    [CompilerGeneratedAttribute]
public sealed virtual string get_SecretToken();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ServerCert();
    [CompilerGeneratedAttribute]
public sealed virtual Uri get_ServerUrl();
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyList`1<Uri> get_ServerUrls();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_UseWindowsCredentials();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ServiceName();
    [CompilerGeneratedAttribute]
protected void set_ServiceName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ServiceNodeName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ServiceVersion();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_SpanCompressionEnabled();
    [CompilerGeneratedAttribute]
public sealed virtual double get_SpanCompressionExactMatchMaxDuration();
    [CompilerGeneratedAttribute]
public sealed virtual double get_SpanCompressionSameKindMaxDuration();
    [CompilerGeneratedAttribute]
public sealed virtual double get_SpanStackTraceMinDurationInMilliseconds();
    [CompilerGeneratedAttribute]
public sealed virtual double get_SpanFramesMinDurationInMilliseconds();
    [CompilerGeneratedAttribute]
public sealed virtual int get_StackTraceLimit();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_TraceContextIgnoreSampledFalse();
    [CompilerGeneratedAttribute]
public sealed virtual string get_TraceContinuationStrategy();
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyList`1<WildcardMatcher> get_TransactionIgnoreUrls();
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyCollection`1<WildcardMatcher> get_TransactionNameGroups();
    [CompilerGeneratedAttribute]
public sealed virtual int get_TransactionMaxSpans();
    [CompilerGeneratedAttribute]
public sealed virtual double get_TransactionSampleRate();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_UseElasticTraceparentHeader();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_UsePathAsTransactionName();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_VerifyServerCert();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_OpenTelemetryBridgeEnabled();
}
internal abstract class Elastic.Apm.Config.FallbackToEnvironmentConfigurationBase : FallbackConfigurationBase {
    internal FallbackToEnvironmentConfigurationBase(IApmLogger logger, ConfigurationDefaults defaults, IConfigurationKeyValueProvider configKeyValueProvider);
}
public interface Elastic.Apm.Config.IConfiguration {
}
public interface Elastic.Apm.Config.IConfigurationDescription {
    public string Description { get; }
    public abstract virtual string get_Description();
}
internal interface Elastic.Apm.Config.IConfigurationEnvironmentValueProvider {
    public abstract virtual EnvironmentKeyValue Read(ConfigurationOption option);
}
internal interface Elastic.Apm.Config.IConfigurationKeyValueProvider {
    public abstract virtual ApplicationKeyValue Read(ConfigurationOption option);
}
public interface Elastic.Apm.Config.IConfigurationLookup {
    public abstract virtual ConfigurationKeyValue Lookup(ConfigurationOption option);
}
public interface Elastic.Apm.Config.IConfigurationReader {
    public string ApiKey { get; }
    public IReadOnlyCollection`1<string> ApplicationNamespaces { get; }
    public IReadOnlyList`1<WildcardMatcher> BaggageToAttach { get; }
    public string CaptureBody { get; }
    public List`1<string> CaptureBodyContentTypes { get; }
    public bool CaptureHeaders { get; }
    public bool CentralConfig { get; }
    public string CloudProvider { get; }
    public IReadOnlyList`1<WildcardMatcher> DisableMetrics { get; }
    public bool Enabled { get; }
    public bool OpenTelemetryBridgeEnabled { get; }
    public string Environment { get; }
    public IReadOnlyCollection`1<string> ExcludedNamespaces { get; }
    public double ExitSpanMinDuration { get; }
    public TimeSpan FlushInterval { get; }
    public IReadOnlyDictionary`2<string, string> GlobalLabels { get; }
    public string HostName { get; }
    public IReadOnlyList`1<WildcardMatcher> IgnoreMessageQueues { get; }
    public LogLevel LogLevel { get; }
    public int MaxBatchEventCount { get; }
    public int MaxQueueEventCount { get; }
    public double MetricsIntervalInMilliseconds { get; }
    public bool Recording { get; }
    public IReadOnlyList`1<WildcardMatcher> SanitizeFieldNames { get; }
    public string SecretToken { get; }
    public string ServerCert { get; }
    public Uri ServerUrl { get; }
    [ObsoleteAttribute("Use ServerUrl")]
public IReadOnlyList`1<Uri> ServerUrls { get; }
    public bool UseWindowsCredentials { get; }
    public string ServiceName { get; }
    public string ServiceNodeName { get; }
    public string ServiceVersion { get; }
    public bool SpanCompressionEnabled { get; }
    public double SpanCompressionExactMatchMaxDuration { get; }
    public double SpanCompressionSameKindMaxDuration { get; }
    public double SpanStackTraceMinDurationInMilliseconds { get; }
    [ObsoleteAttribute("Use SpanStackTraceMinDurationInMilliseconds")]
public double SpanFramesMinDurationInMilliseconds { get; }
    public int StackTraceLimit { get; }
    [ObsoleteAttribute("Use TraceContinuationStrategy")]
public bool TraceContextIgnoreSampledFalse { get; }
    public string TraceContinuationStrategy { get; }
    public IReadOnlyList`1<WildcardMatcher> TransactionIgnoreUrls { get; }
    public IReadOnlyCollection`1<WildcardMatcher> TransactionNameGroups { get; }
    public int TransactionMaxSpans { get; }
    public double TransactionSampleRate { get; }
    public bool UseElasticTraceparentHeader { get; }
    public bool UsePathAsTransactionName { get; }
    public bool VerifyServerCert { get; }
    public abstract virtual string get_ApiKey();
    public abstract virtual IReadOnlyCollection`1<string> get_ApplicationNamespaces();
    public abstract virtual IReadOnlyList`1<WildcardMatcher> get_BaggageToAttach();
    public abstract virtual string get_CaptureBody();
    public abstract virtual List`1<string> get_CaptureBodyContentTypes();
    public abstract virtual bool get_CaptureHeaders();
    public abstract virtual bool get_CentralConfig();
    public abstract virtual string get_CloudProvider();
    public abstract virtual IReadOnlyList`1<WildcardMatcher> get_DisableMetrics();
    public abstract virtual bool get_Enabled();
    public abstract virtual bool get_OpenTelemetryBridgeEnabled();
    public abstract virtual string get_Environment();
    public abstract virtual IReadOnlyCollection`1<string> get_ExcludedNamespaces();
    public abstract virtual double get_ExitSpanMinDuration();
    public abstract virtual TimeSpan get_FlushInterval();
    public abstract virtual IReadOnlyDictionary`2<string, string> get_GlobalLabels();
    public abstract virtual string get_HostName();
    public abstract virtual IReadOnlyList`1<WildcardMatcher> get_IgnoreMessageQueues();
    public abstract virtual LogLevel get_LogLevel();
    public abstract virtual int get_MaxBatchEventCount();
    public abstract virtual int get_MaxQueueEventCount();
    public abstract virtual double get_MetricsIntervalInMilliseconds();
    public abstract virtual bool get_Recording();
    public abstract virtual IReadOnlyList`1<WildcardMatcher> get_SanitizeFieldNames();
    public abstract virtual string get_SecretToken();
    public abstract virtual string get_ServerCert();
    public abstract virtual Uri get_ServerUrl();
    public abstract virtual IReadOnlyList`1<Uri> get_ServerUrls();
    public abstract virtual bool get_UseWindowsCredentials();
    public abstract virtual string get_ServiceName();
    public abstract virtual string get_ServiceNodeName();
    public abstract virtual string get_ServiceVersion();
    public abstract virtual bool get_SpanCompressionEnabled();
    public abstract virtual double get_SpanCompressionExactMatchMaxDuration();
    public abstract virtual double get_SpanCompressionSameKindMaxDuration();
    public abstract virtual double get_SpanStackTraceMinDurationInMilliseconds();
    public abstract virtual double get_SpanFramesMinDurationInMilliseconds();
    public abstract virtual int get_StackTraceLimit();
    public abstract virtual bool get_TraceContextIgnoreSampledFalse();
    public abstract virtual string get_TraceContinuationStrategy();
    public abstract virtual IReadOnlyList`1<WildcardMatcher> get_TransactionIgnoreUrls();
    public abstract virtual IReadOnlyCollection`1<WildcardMatcher> get_TransactionNameGroups();
    public abstract virtual int get_TransactionMaxSpans();
    public abstract virtual double get_TransactionSampleRate();
    public abstract virtual bool get_UseElasticTraceparentHeader();
    public abstract virtual bool get_UsePathAsTransactionName();
    public abstract virtual bool get_VerifyServerCert();
}
internal interface Elastic.Apm.Config.IConfigurationSnapshotProvider {
    public IConfiguration CurrentSnapshot { get; }
    public abstract virtual IConfiguration get_CurrentSnapshot();
}
internal interface Elastic.Apm.Config.IConfigurationStore {
    public IConfiguration CurrentSnapshot { get; public set; }
    public abstract virtual IConfiguration get_CurrentSnapshot();
    public abstract virtual void set_CurrentSnapshot(IConfiguration value);
}
internal class Elastic.Apm.Config.NullConfigurationKeyValueProvider : object {
    public string Description { get; }
    public sealed virtual string get_Description();
    public sealed virtual ApplicationKeyValue Read(ConfigurationOption key);
}
internal class Elastic.Apm.Config.OptionLoggingInstruction : object {
    [CompilerGeneratedAttribute]
private ConfigurationOption <Option>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LogAlways>k__BackingField;
    public ConfigurationOption Option { get; }
    public bool LogAlways { get; }
    internal OptionLoggingInstruction(ConfigurationOption option);
    [CompilerGeneratedAttribute]
public ConfigurationOption get_Option();
    [CompilerGeneratedAttribute]
public bool get_LogAlways();
    public virtual string ToString();
}
internal static class Elastic.Apm.Consts : object {
    internal static int PropertyMaxLength;
    internal static string AgentName;
    internal static string Redacted;
    internal static string NotProvided;
    internal static string ActivationK8SAttach;
    internal static string ActivationMethodNuGet;
    internal static string ActivationMethodProfiler;
    internal static string ActivationMethodStartupHook;
}
internal class Elastic.Apm.CurrentExecutionSegmentsContainer : object {
    private AsyncLocal`1<ISpan> _currentSpan;
    private AsyncLocal`1<ITransaction> _currentTransaction;
    public ISpan CurrentSpan { get; public set; }
    public ITransaction CurrentTransaction { get; public set; }
    public sealed virtual ISpan get_CurrentSpan();
    public sealed virtual void set_CurrentSpan(ISpan value);
    public sealed virtual ITransaction get_CurrentTransaction();
    public sealed virtual void set_CurrentTransaction(ITransaction value);
}
public abstract class Elastic.Apm.DiagnosticListeners.DiagnosticListenerBase : object {
    [CompilerGeneratedAttribute]
private IApmLogger <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private IApmAgent <ApmAgent>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowDuplicates>k__BackingField;
    protected IApmLogger Logger { get; }
    protected IApmAgent ApmAgent { get; }
    public string Name { get; }
    public bool AllowDuplicates { get; }
    protected DiagnosticListenerBase(IApmAgent apmAgent);
    [CompilerGeneratedAttribute]
protected IApmLogger get_Logger();
    [CompilerGeneratedAttribute]
protected IApmAgent get_ApmAgent();
    protected abstract virtual void HandleOnNext(KeyValuePair`2<string, object> kv);
    public abstract virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual bool get_AllowDuplicates();
    public virtual void OnCompleted();
    public virtual void OnError(Exception error);
    public virtual void OnNext(KeyValuePair`2<string, object> kv);
}
internal static class Elastic.Apm.DiagnosticListeners.HttpDiagnosticListener : object {
    internal static IDiagnosticListener New(IApmAgent components);
}
internal class Elastic.Apm.DiagnosticListeners.HttpDiagnosticListenerCoreImpl : HttpDiagnosticListenerImplBase`2<HttpRequestMessage, HttpResponseMessage> {
    protected string ExceptionEventKey { get; }
    public string Name { get; }
    internal string StartEventKey { get; }
    internal string StopEventKey { get; }
    public HttpDiagnosticListenerCoreImpl(IApmAgent agent);
    protected virtual string get_ExceptionEventKey();
    public virtual string get_Name();
    internal virtual string get_StartEventKey();
    internal virtual string get_StopEventKey();
    protected virtual Uri RequestGetUri(HttpRequestMessage request);
    protected virtual string RequestGetMethod(HttpRequestMessage request);
    protected virtual bool RequestHeadersContain(HttpRequestMessage request, string headerName);
    protected virtual bool RequestTryGetHeader(HttpRequestMessage request, string headerName, String& value);
    protected virtual void RequestHeadersAdd(HttpRequestMessage request, string headerName, string headerValue);
    protected virtual int ResponseGetStatusCode(HttpResponseMessage response);
}
internal class Elastic.Apm.DiagnosticListeners.HttpDiagnosticListenerFullFrameworkImpl : HttpDiagnosticListenerImplBase`2<HttpWebRequest, HttpWebResponse> {
    protected string ExceptionEventKey { get; }
    public string Name { get; }
    internal string StartEventKey { get; }
    internal string StopEventKey { get; }
    public HttpDiagnosticListenerFullFrameworkImpl(IApmAgent agent);
    protected virtual string get_ExceptionEventKey();
    public virtual string get_Name();
    internal virtual string get_StartEventKey();
    internal virtual string get_StopEventKey();
    protected virtual Uri RequestGetUri(HttpWebRequest request);
    protected virtual string RequestGetMethod(HttpWebRequest request);
    protected virtual bool RequestHeadersContain(HttpWebRequest request, string headerName);
    protected virtual void RequestHeadersAdd(HttpWebRequest request, string headerName, string headerValue);
    protected virtual int ResponseGetStatusCode(HttpWebResponse response);
    protected virtual bool RequestTryGetHeader(HttpWebRequest request, string headerName, String& value);
    protected virtual void ProcessExceptionEvent(object eventValue, Uri requestUrl);
}
internal abstract class Elastic.Apm.DiagnosticListeners.HttpDiagnosticListenerImplBase`2 : DiagnosticListenerBase {
    private static string EventExceptionPropertyName;
    protected static string EventRequestPropertyName;
    private static string EventResponsePropertyName;
    private static string BaggageHeaderName;
    internal ConcurrentDictionary`2<TRequest, ISpan> ProcessingRequests;
    private HttpTraceConfiguration _configuration;
    private ApmAgent _realAgent;
    protected string ExceptionEventKey { get; }
    internal string StartEventKey { get; }
    internal string StopEventKey { get; }
    protected HttpDiagnosticListenerImplBase`2(IApmAgent agent);
    protected abstract virtual string RequestGetMethod(TRequest request);
    protected abstract virtual Uri RequestGetUri(TRequest request);
    protected abstract virtual void RequestHeadersAdd(TRequest request, string headerName, string headerValue);
    protected abstract virtual bool RequestHeadersContain(TRequest request, string headerName);
    protected abstract virtual bool RequestTryGetHeader(TRequest request, string headerName, String& value);
    protected abstract virtual int ResponseGetStatusCode(TResponse response);
    protected abstract virtual string get_ExceptionEventKey();
    internal abstract virtual string get_StartEventKey();
    internal abstract virtual string get_StopEventKey();
    public virtual void OnError(Exception error);
    protected virtual void HandleOnNext(KeyValuePair`2<string, object> kv);
    private void ProcessStartEvent(TRequest request, Uri requestUrl);
    private void PropagateTraceContext(TRequest request, ITransaction transaction, ISpan span);
    private void ProcessStopEvent(object eventValue, TRequest request, Uri requestUrl);
    internal static void SetOutcome(ISpan span, int statusCode);
    protected virtual void ProcessExceptionEvent(object eventValue, Uri requestUrl);
    private bool IsRequestFilteredOut(Uri requestUri);
}
internal class Elastic.Apm.DiagnosticListeners.HttpTraceConfiguration : object {
    private ReaderWriterLockSlim _tracersLock;
    private List`1<IHttpSpanTracer> _tracers;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _captureSpan;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _subscribed;
    public bool Subscribed { get; public set; }
    public bool CaptureSpan { get; public set; }
    public bool HasTracers { get; }
    public bool get_Subscribed();
    public void set_Subscribed(bool value);
    public bool get_CaptureSpan();
    public void set_CaptureSpan(bool value);
    public bool get_HasTracers();
    public HttpTracers GetTracers();
    public void AddTracer(IHttpSpanTracer tracer);
}
internal interface Elastic.Apm.DiagnosticListeners.IHttpSpanTracer {
    public abstract virtual bool IsMatch(string method, Uri requestUrl, Func`2<string, string> headerGetter);
    public abstract virtual ISpan StartSpan(IApmAgent agent, string method, Uri requestUrl, Func`2<string, string> headerGetter);
    public abstract virtual bool ShouldSuppressSpanCreation();
}
internal static class Elastic.Apm.DiagnosticListeners.KnownListeners : object {
    public static string MicrosoftAspNetCoreHostingHttpRequestIn;
    public static string SystemNetHttpHttpRequestOut;
    public static string SystemNetHttpDesktopHttpRequestOut;
    public static string ApmTransactionActivityName;
    public static HashSet`1<string> KnownListenersList { get; }
    public static HashSet`1<string> get_KnownListenersList();
}
internal class Elastic.Apm.DiagnosticSource.DiagnosticInitializer : object {
    private IApmAgent _agent;
    private IList`1<IDiagnosticListener> _listeners;
    private ScopedLogger _logger;
    private CompositeDisposable _subscriptions;
    internal DiagnosticInitializer(IApmAgent agent, IDiagnosticListener listener);
    internal DiagnosticInitializer(IApmAgent agent, IEnumerable`1<IDiagnosticListener> listeners);
    public sealed virtual void OnCompleted();
    public sealed virtual void OnError(Exception error);
    public sealed virtual void OnNext(DiagnosticListener value);
    public sealed virtual void Dispose();
}
public class Elastic.Apm.DiagnosticSource.HttpDiagnosticsSubscriber : object {
    private bool _captureSpan;
    internal HttpDiagnosticsSubscriber(bool captureSpan);
    public sealed virtual IDisposable Subscribe(IApmAgent agent);
}
internal interface Elastic.Apm.DiagnosticSource.IDiagnosticListener {
    public string Name { get; }
    public bool AllowDuplicates { get; }
    public abstract virtual string get_Name();
    public abstract virtual bool get_AllowDuplicates();
}
public interface Elastic.Apm.DiagnosticSource.IDiagnosticsSubscriber {
    public abstract virtual IDisposable Subscribe(IApmAgent components);
}
internal static class Elastic.Apm.DistributedTracing.TraceContext : object {
    private static byte FlagRecorded;
    private static int OptionsLength;
    private static int SpanIdLength;
    private static int TraceIdLength;
    internal static string TraceParentHeaderName;
    internal static string TraceParentBinaryHeaderName;
    internal static string TraceParentHeaderNamePrefixed;
    internal static string TraceStateHeaderName;
    private static int VersionAndTraceIdAndSpanIdLength;
    private static int VersionAndTraceIdLength;
    private static int VersionPrefixIdLength;
    internal static DistributedTracingData TryExtractTracingData(string traceParentValue, string traceStateValue);
    internal static bool IsHex(IEnumerable`1<char> chars);
    public static string BuildTraceparent(DistributedTracingData distributedTracingData);
    private static bool IsTraceIdValid(string traceId);
    private static bool IsTraceParentValid(string parentId);
    private static byte HexStringTwoCharToByte(string src, int start);
    [CompilerGeneratedAttribute]
internal static int <HexStringTwoCharToByte>g__HexCharToInt|16_0(char c);
}
internal class Elastic.Apm.DistributedTracing.TraceState : object {
    private static int DefaultSizeLimit;
    private static char VendorSeparator;
    private static char EntrySeparator;
    private static string VendorPrefix;
    private static string SampleRatePrefix;
    private static string FullPrefix;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <SampleRate>k__BackingField;
    private List`1<string> _tracestate;
    private StringBuilder _rewriteBuffer;
    private int _sizeLimit;
    private int _headerIndex;
    public Nullable`1<double> SampleRate { get; private set; }
    public int SizeLimit { get; public set; }
    public TraceState(double sampleRate);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_SampleRate();
    [CompilerGeneratedAttribute]
private void set_SampleRate(Nullable`1<double> value);
    public int get_SizeLimit();
    public void set_SizeLimit(int value);
    internal void SetSampleRate(double sampleRate);
    private string MutateTracestate(double sampleRate);
    public void AddTextHeader(string headerValue);
    public static string ValidateTracestate(string traceState);
    private static bool IsValidKey(string str);
    private static bool IsValidValue(string str);
    public static string GetHeaderValue(double sampleRate);
    public string ToTextHeader();
}
internal class Elastic.Apm.EmptyDisposable : object {
    public static EmptyDisposable Instance;
    private static EmptyDisposable();
    public sealed virtual void Dispose();
}
[ExtensionAttribute]
internal static class Elastic.Apm.Extensions.ListExtensions : object {
    [ExtensionAttribute]
public static bool ContainsLike(List`1<string> list, string matchedString);
}
[ExtensionAttribute]
internal static class Elastic.Apm.Extensions.StringExtensions : object {
    [ExtensionAttribute]
public static bool IsLike(string pattern, string text, bool caseSensitive);
}
[ExtensionAttribute]
internal static class Elastic.Apm.Extensions.TransactionExtensions : object {
    [ExtensionAttribute]
internal static void CollectRequestBody(ITransaction transaction, bool isForError, IHttpRequestAdapter httpRequest, IApmLogger logger);
    [ExtensionAttribute]
internal static bool IsCaptureRequestBodyEnabled(ITransaction transaction, bool isForError);
    private static bool IsCaptureRequestBodyEnabledForContentType(ITransaction transaction, string requestContentType, IApmLogger logger);
    [ExtensionAttribute]
internal static void SetOutcomeForHttpResult(ITransaction transaction, int httpReturnCode);
}
[FlagsAttribute]
internal enum Elastic.Apm.Features.AgentFeature : Enum {
    public int value__;
    public static AgentFeature MetricsCollection;
    public static AgentFeature RemoteConfiguration;
    public static AgentFeature ContainerInfo;
    public static AgentFeature AzureFunctionsCloudMetaDataDiscovery;
}
internal abstract class Elastic.Apm.Features.AgentFeatures : object {
    private IApmLogger _logger;
    private AgentFeature _enabledFeatures;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    internal string Name { get; }
    internal AgentFeatures(IApmLogger logger, string name, AgentFeature featureMask);
    internal bool Check(AgentFeature agentFeature);
    [CompilerGeneratedAttribute]
internal string get_Name();
}
internal static class Elastic.Apm.Features.AgentFeaturesProvider : object {
    private static AgentFeatures AgentFeatures;
    internal static AgentFeatures Get(IApmLogger logger, IEnvironmentVariables environmentVariables);
    internal static void Set(AgentFeatures agentFeatures);
}
internal class Elastic.Apm.Features.AzureFunctionsAgentFeatures : AgentFeatures {
    internal AzureFunctionsAgentFeatures(IApmLogger logger);
}
internal class Elastic.Apm.Features.DefaultAgentFeatures : AgentFeatures {
    public DefaultAgentFeatures(IApmLogger logger);
}
internal class Elastic.Apm.Filters.CookieHeaderRedactionFilter : object {
    private static string CookieHeader;
    public static IError Filter(IError error);
    public static ITransaction Filter(ITransaction transaction);
    internal static void HandleCookieHeader(Dictionary`2<string, string> headers, IReadOnlyList`1<WildcardMatcher> sanitizeFieldNames);
}
internal class Elastic.Apm.Filters.ErrorContextSanitizerFilter : object {
    public static IError Filter(IError error);
}
public class Elastic.Apm.Filters.HeaderDictionarySanitizerFilter : object {
    public static IError Filter(IError error);
    public static ITransaction Filter(ITransaction transaction);
}
internal static class Elastic.Apm.Filters.Sanitization : object {
    public static void SanitizeHeadersInContext(Context context, IConfiguration configuration);
    [CompilerGeneratedAttribute]
internal static void <SanitizeHeadersInContext>g__RedactMatches|0_0(Dictionary`2<string, string> dictionary, IConfiguration configuration);
}
internal class Elastic.Apm.Filters.SpanStackTraceCapturingFilter : object {
    private IApmServerInfo _apmServerInfo;
    private IApmLogger _logger;
    public SpanStackTraceCapturingFilter(IApmLogger logger, IApmServerInfo apmServerInfo);
    public ISpan Filter(ISpan iSpan);
}
internal class Elastic.Apm.Filters.TransactionIgnoreUrlsFilter : object {
    public static ITransaction Filter(ITransaction transaction);
}
internal class Elastic.Apm.Helpers.AgentSpinLock : object {
    private static int FalseValueAsInt;
    private static int TrueValueAsInt;
    private Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _isAcquiredBoolValueAsInt;
    internal bool IsAcquired { get; }
    internal bool get_IsAcquired();
    internal bool TryAcquire();
    internal Acquisition TryAcquireWithDisposable();
    internal void Release();
    private static bool IntToBool(int i);
}
[IsReadOnlyAttribute]
[DebuggerDisplayAttribute("{_elapsedSinceTimerStarted}")]
internal class Elastic.Apm.Helpers.AgentTimeInstant : ValueType {
    private IAgentTimer _sourceAgentTimer;
    private TimeSpan _elapsedSinceTimerStarted;
    internal AgentTimeInstant(IAgentTimer sourceAgentTimer, TimeSpan elapsedSinceTimerStarted);
    public virtual bool Equals(object otherObj);
    public bool Equals(AgentTimeInstant other);
    public virtual int GetHashCode();
    public static AgentTimeInstant op_Addition(AgentTimeInstant i, TimeSpan t);
    public static AgentTimeInstant op_Subtraction(AgentTimeInstant i, TimeSpan t);
    public static TimeSpan op_Subtraction(AgentTimeInstant i1, AgentTimeInstant i2);
    public static bool op_Equality(AgentTimeInstant i1, AgentTimeInstant i2);
    public static bool op_Inequality(AgentTimeInstant i1, AgentTimeInstant i2);
    public static bool op_LessThan(AgentTimeInstant i1, AgentTimeInstant i2);
    public static bool op_LessThanOrEqual(AgentTimeInstant i1, AgentTimeInstant i2);
    public static bool op_GreaterThan(AgentTimeInstant i1, AgentTimeInstant i2);
    public static bool op_GreaterThanOrEqual(AgentTimeInstant i1, AgentTimeInstant i2);
    private static void VerifyInstantsAreCompatible(AgentTimeInstant i1, AgentTimeInstant i2, string caller);
    internal bool IsCompatibleWith(IAgentTimer otherAgentTimer);
    public virtual string ToString();
    public string ToStringDetailed();
}
internal class Elastic.Apm.Helpers.AgentTimer : object {
    private Stopwatch _stopwatch;
    [CompilerGeneratedAttribute]
private AgentTimeInstant <WhenStarted>k__BackingField;
    public AgentTimeInstant Now { get; }
    internal AgentTimeInstant WhenStarted { get; }
    public sealed virtual AgentTimeInstant get_Now();
    [CompilerGeneratedAttribute]
internal AgentTimeInstant get_WhenStarted();
    public sealed virtual Task Delay(AgentTimeInstant until, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Helpers.AgentTimer/<DelayAsyncImpl>d__8")]
private Task DelayAsyncImpl(AgentTimeInstant until, CancellationToken cancellationToken);
}
[ExtensionAttribute]
internal static class Elastic.Apm.Helpers.AgentTimerExtensions : object {
    [AsyncStateMachineAttribute("Elastic.Apm.Helpers.AgentTimerExtensions/<TryAwaitOrTimeout>d__0")]
[ExtensionAttribute]
internal static Task`1<bool> TryAwaitOrTimeout(IAgentTimer agentTimer, Task taskToAwait, AgentTimeInstant until, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Helpers.AgentTimerExtensions/<TryAwaitOrTimeout>d__1`1")]
[ExtensionAttribute]
internal static Task`1<ValueTuple`2<bool, TResult>> TryAwaitOrTimeout(IAgentTimer agentTimer, Task`1<TResult> taskToAwait, AgentTimeInstant until, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Helpers.AgentTimerExtensions/<AwaitOrTimeout>d__2")]
[ExtensionAttribute]
internal static Task AwaitOrTimeout(IAgentTimer agentTimer, Task taskToAwait, AgentTimeInstant until, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Helpers.AgentTimerExtensions/<AwaitOrTimeout>d__3`1")]
[ExtensionAttribute]
internal static Task`1<TResult> AwaitOrTimeout(IAgentTimer agentTimer, Task`1<TResult> taskToAwait, AgentTimeInstant until, CancellationToken cancellationToken);
}
internal static class Elastic.Apm.Helpers.Assertion : object {
    private static AssertionLevel DefaultLevel;
    private static AssertIfEnabled SingletonAssertIfEnabled;
    private static Impl ImplSingleton;
    internal static Nullable`1<AssertIfEnabled> If_O_n_LevelEnabled { get; }
    internal static Nullable`1<AssertIfEnabled> IfEnabled { get; }
    internal static bool Is_O_n_LevelEnabled { get; }
    internal static bool IsEnabled { get; }
    private static Assertion();
    internal static Nullable`1<AssertIfEnabled> get_If_O_n_LevelEnabled();
    internal static Nullable`1<AssertIfEnabled> get_IfEnabled();
    internal static bool get_Is_O_n_LevelEnabled();
    internal static bool get_IsEnabled();
    internal static void DoIfEnabled(Action`1<AssertIfEnabled> doAction);
    internal static void DoIf_O_n_LevelEnabled(Action`1<AssertIfEnabled> doAction);
}
internal class Elastic.Apm.Helpers.AssertionFailedException : Exception {
    internal AssertionFailedException(string message);
}
internal enum Elastic.Apm.Helpers.AssertionLevel : Enum {
    public int value__;
    public static AssertionLevel Disabled;
    public static AssertionLevel O_1;
    public static AssertionLevel O_n;
}
[ExtensionAttribute]
internal static class Elastic.Apm.Helpers.CollectionExtensions : object {
    [ExtensionAttribute]
internal static bool IsEmpty(List`1<T> thisObj);
}
[ExtensionAttribute]
internal static class Elastic.Apm.Helpers.ContractExtensions : object {
    [ExtensionAttribute]
public static T ThrowIfArgumentNull(T arg, string argName);
    [ExtensionAttribute]
public static Nullable`1<T> ThrowIfNullableValueArgumentNull(Nullable`1<T> arg, string argName);
    [ExtensionAttribute]
public static int ThrowIfArgumentNegative(int arg, string argName);
}
internal static class Elastic.Apm.Helpers.CookieHeaderRedacter : object {
    private static ReadOnlySpan`1<char> Redacted { get; }
    private static ReadOnlySpan`1<char> SemiColon { get; }
    private static ReadOnlySpan`1<char> Comma { get; }
    private static ReadOnlySpan`1<char> get_Redacted();
    private static ReadOnlySpan`1<char> get_SemiColon();
    private static ReadOnlySpan`1<char> get_Comma();
    public static string Redact(string cookieHeaderValue, IReadOnlyList`1<WildcardMatcher> namesToSanitize);
}
internal class Elastic.Apm.Helpers.DbConnectionStringParser : object {
    private static string ThisClassName;
    internal static int MaxCacheSize;
    private IApmLogger _logger;
    private ConcurrentDictionary`2<string, Destination> _cache;
    private Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _cacheCount;
    internal static int MaxNestingDepth;
    internal DbConnectionStringParser(IApmLogger logger);
    internal Destination ExtractDestination(string dbConnectionString);
    internal Destination ExtractDestination(string dbConnectionString, Boolean& wasFoundInCache);
    private Destination ParseConnectionString(string dbConnectionString);
}
internal class Elastic.Apm.Helpers.DbgUtils : object {
    internal static string CurrentThreadDesc { get; }
    internal static string get_CurrentThreadDesc();
    internal static string CurrentMethodName(string caller);
}
internal class Elastic.Apm.Helpers.DisposableHelper : object {
    internal static string AnotherCallStillInProgressMsg;
    private Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _state;
    internal bool HasStarted { get; }
    internal bool get_HasStarted();
    internal bool DoOnce(IApmLogger loggerArg, string dbgOwnerDesc, Action ownerDispose);
    private State TryChangeStateAtomically(State fromState, State toState);
}
internal class Elastic.Apm.Helpers.EnvironmentVariables : object {
    private IApmLogger _logger;
    public EnvironmentVariables(IApmLogger logger);
    public sealed virtual IDictionary GetEnvironmentVariables();
}
[ExtensionAttribute]
internal static class Elastic.Apm.Helpers.EnvironmentVariablesExtensions : object {
    [ExtensionAttribute]
internal static string SafeGetValue(IEnvironmentVariables environmentVariables, string name);
    [ExtensionAttribute]
internal static bool SafeCheckValue(IEnvironmentVariables environmentVariables, string name, string value);
    [ExtensionAttribute]
internal static bool SafeCheckExists(IEnvironmentVariables environmentVariables, string name);
}
internal static class Elastic.Apm.Helpers.ExceptionFilter : object {
    internal static bool Capture(Exception e, ITransaction transaction);
    internal static bool Capture(Exception e, ISpan span);
}
internal static class Elastic.Apm.Helpers.ExceptionUtils : object {
    internal static string MethodExitingCancelledMsgFmt;
    internal static string MethodExitingExceptionMsgFmt;
    internal static string MethodExitingNormallyMsgFmt;
    internal static string MethodStartingMsgFmt;
    private static string ThisClassName;
    internal static void DoSwallowingExceptions(IApmLogger loggerArg, Action action, bool shouldSwallowCancellation, string dbgCallerMethodName);
}
internal static class Elastic.Apm.Helpers.GrpcHelper : object {
    internal static string GrpcReturnCodeToString(string returnCode);
    internal static Outcome GrpcServerReturnCodeToOutcome(string returnCode);
    internal static Outcome GrpcClientReturnCodeToOutcome(string returnCode);
}
public class Elastic.Apm.Helpers.HostNameDetector : object {
    public sealed virtual string GetDetectedHostName(IApmLogger logger);
    [CompilerGeneratedAttribute]
internal static string <GetDetectedHostName>g__NormalizeHostName|0_0(string hostName);
}
internal interface Elastic.Apm.Helpers.IAgentTimer {
    public AgentTimeInstant Now { get; }
    public abstract virtual AgentTimeInstant get_Now();
    public abstract virtual Task Delay(AgentTimeInstant until, CancellationToken cancellationToken);
}
internal interface Elastic.Apm.Helpers.IEnvironmentVariables {
    public abstract virtual IDictionary GetEnvironmentVariables();
}
internal interface Elastic.Apm.Helpers.IHostNameDetector {
    public abstract virtual string GetDetectedHostName(IApmLogger logger);
}
internal interface Elastic.Apm.Helpers.IHttpFormAdapter {
    public bool HasValue { get; }
    public int Count { get; }
    public abstract virtual bool get_HasValue();
    public abstract virtual int get_Count();
}
[ExtensionAttribute]
internal static class Elastic.Apm.Helpers.IHttpFormAdapterExtensions : object {
    [ExtensionAttribute]
internal static string AsSanitizedString(IHttpFormAdapter form, IConfiguration configuration, Boolean& longerThanMaxLength);
}
internal interface Elastic.Apm.Helpers.IHttpRequestAdapter {
    public bool HasValue { get; }
    public string ContentType { get; }
    public abstract virtual bool get_HasValue();
    public abstract virtual string get_ContentType();
    public abstract virtual string ExtractBody(IConfiguration configuration, IApmLogger logger, Boolean& longerThanMaxLength);
}
[ExtensionAttribute]
internal static class Elastic.Apm.Helpers.IHttpRequestAdapterExtensions : object {
    [ExtensionAttribute]
internal static string ExtractBody(IHttpRequestAdapter httpRequest, IApmLogger logger, IConfiguration configuration);
}
internal class Elastic.Apm.Helpers.LazyContextualInit : object {
    private bool _isInited;
    private object _lock;
    internal Nullable`1<IfNotInitedHelper> IfNotInited { get; }
    internal bool IsInited { get; }
    internal Nullable`1<IfNotInitedHelper> get_IfNotInited();
    internal bool get_IsInited();
    internal bool Init(Action initAction);
}
internal class Elastic.Apm.Helpers.LazyContextualInit`1 : object {
    private bool _isInited;
    private object _lock;
    private T _value;
    internal Nullable`1<IfNotInitedHelper<T>> IfNotInited { get; }
    internal bool IsInited { get; }
    internal T Value { get; }
    internal Nullable`1<IfNotInitedHelper<T>> get_IfNotInited();
    internal bool get_IsInited();
    internal T get_Value();
    internal T InitOrGet(Func`1<T> producer);
}
internal static class Elastic.Apm.Helpers.LogLevelUtils : object {
    internal static LogLevel GetFinest(LogLevel logLevel1, LogLevel logLevel2);
}
[ExtensionAttribute]
internal static class Elastic.Apm.Helpers.ObjectExtensions : object {
    public static string NullAsString;
    [ExtensionAttribute]
public static TResult Let(T x, Func`2<T, TResult> func);
    [ExtensionAttribute]
public static void Let(T x, Action`1<T> action);
    [ExtensionAttribute]
public static string AsNullableToString(object value);
}
internal static class Elastic.Apm.Helpers.PlatformDetection : object {
    internal static bool IsDotNetFullFramework;
    internal static bool IsDotNetCore;
    internal static bool IsMono;
    internal static bool IsDotNet;
    internal static bool IsModernDotnet;
    internal static string DotNetRuntimeDescription;
    private static PlatformDetection();
    internal static string GetDotNetRuntimeVersionFromDescription(string frameworkDescription, IApmLogger loggerArg, string expectedPrefix);
    internal static Runtime GetServiceRuntime(IApmLogger logger);
    private static string GetMonoVersion();
    private static string GetNetVersion();
    private static string GetDotNetCoreRuntimeVersion(IApmLogger logger);
}
internal static class Elastic.Apm.Helpers.RandomGenerator : object {
    [ThreadStaticAttribute]
private static Random _local;
    private static Random Global;
    private static RandomGenerator();
    internal static Random GetInstance();
    internal static void GenerateRandomBytes(Byte[] bytes);
    internal static string GenerateRandomBytesAsString(Byte[] bytes);
}
internal static class Elastic.Apm.Helpers.RequestBodyStreamHelper : object {
    internal static int RequestBodyMaxLength;
    internal static string ToString(Stream requestBody, Boolean& longerThanMaxLength);
}
[ExtensionAttribute]
internal static class Elastic.Apm.Helpers.Sanitization : object {
    [ExtensionAttribute]
internal static HttpRequestMessage Sanitize(HttpRequestMessage message, IReadOnlyList`1<WildcardMatcher> matchers);
    [ExtensionAttribute]
internal static Uri Sanitize(Uri uri);
    internal static bool Sanitize(Uri uri, String& result);
    internal static bool TrySanitizeUrl(string uri, String& sanitizedUri, Uri& originalUri);
}
internal static class Elastic.Apm.Helpers.StacktraceHelper : object {
    private static string DefaultAsyncMethodName;
    private static ElasticVersion V710;
    private static StacktraceHelper();
    internal static List`1<CapturedStackFrame> GenerateApmStackTrace(StackFrame[] frames, IApmLogger logger, IConfigurationReader configurationReader, IApmServerInfo apmServerInfo, string dbgCapturingFor);
    internal static List`1<CapturedStackFrame> GenerateApmStackTrace(Exception exception, IApmLogger logger, string dbgCapturingFor, IConfigurationReader configurationReader, IApmServerInfo apmServerInfo);
    private static string GetRealMethodName(MethodBase inputMethod);
}
[ExtensionAttribute]
internal static class Elastic.Apm.Helpers.StringExtensions : object {
    internal static string Ellipsis;
    [ExtensionAttribute]
internal static string NotNull(string s);
    [ExtensionAttribute]
internal static bool IsEmpty(string input);
    [ExtensionAttribute]
internal static string Repeat(string input, int count);
    [ExtensionAttribute]
internal static bool ContainsOrdinalIgnoreCase(string s, string value);
    [ExtensionAttribute]
internal static string ToLog(string thisObj);
    [ExtensionAttribute]
internal static string Truncate(string input, int length);
}
internal class Elastic.Apm.Helpers.SystemInfoHelper : object {
    private Regex _containerUidRegex;
    private Regex _shortenedUuidRegex;
    private Regex _ecsContainerIdRegex;
    private Regex _podRegex;
    private IApmLogger _logger;
    internal static string Namespace;
    internal static string PodName;
    internal static string PodUid;
    internal static string NodeName;
    public SystemInfoHelper(IApmLogger logger);
    internal void ParseMountInfo(System system, string reportedHostName, string line);
    internal void ParseContainerId(System system, string reportedHostName, string line);
    internal System GetSystemInfo(string hostName, IHostNameDetector detector);
    private void ParseContainerInfo(System system, string reportedHostName);
    protected virtual StreamReader GetCGroupAsStream();
    protected virtual StreamReader GetMountInfoAsStream();
    internal void ParseKubernetesInfo(System system);
}
[ExtensionAttribute]
internal static class Elastic.Apm.Helpers.TextUtils : object {
    public static string Indentation;
    public static char IndentationChar;
    public static int IndentationLength;
    private static String[] EndOfLineCharSequences;
    private static TextUtils();
    internal static string PrefixEveryLine(string input, string prefix);
    [ExtensionAttribute]
internal static string Indent(string input, string indentation);
    [ExtensionAttribute]
internal static string Indent(string input, int indentationLevel);
    internal static bool IsHex(char c);
    internal static bool IsLatinLetter(char c);
}
[ExtensionAttribute]
internal static class Elastic.Apm.Helpers.TimeExtensions : object {
    private static int NumberOfTicksPerSecond;
    [ExtensionAttribute]
internal static string FormatForLog(DateTime dateTime, bool includeKind);
    [ExtensionAttribute]
internal static string FormatForLog(DateTimeKind dateTimeKind);
    [ExtensionAttribute]
internal static string FormatForLog(DateTimeOffset dateTimeOffset);
    [ExtensionAttribute]
internal static string ToHms(TimeSpan timeSpan);
    [ExtensionAttribute]
internal static string ToHmsInSeconds(TimeSpan timeSpan);
    [ExtensionAttribute]
internal static TimeSpan TruncateToSeconds(TimeSpan timeSpan);
    [CompilerGeneratedAttribute]
internal static void <ToHms>g__AppendIfNotZero|4_0(int count, string unitsSuffix, <>c__DisplayClass4_0& );
}
internal static class Elastic.Apm.Helpers.TimeUtils : object {
    internal static DateTime UnixEpochDateTime;
    private static TimeUtils();
    internal static long TimestampNow();
    internal static long ToTimestamp(DateTime dateTimeToConvert);
    internal static long ToTimestamp(DateTimeOffset dateTimeToConvert);
    internal static DateTime ToDateTime(long timestamp);
    internal static string FormatTimestampForLog(long timestamp);
    internal static double DurationBetweenTimestamps(long startTimestamp, long endTimestamp);
    internal static DateTime ToEndDateTime(long startTimestamp, double duration);
    internal static TimeSpan TimeSpanFromFractionalMilliseconds(double fractionalMilliseconds);
    internal static long RoundTimeValue(double value);
}
internal class Elastic.Apm.Helpers.ToStringBuilder : ValueType {
    private static int StringBuilderInitialCapacity;
    private StringBuilder _stringBuilder;
    private bool _addedAny;
    public ToStringBuilder(string className);
    public void Add(string propertyName, object propertyValue);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public virtual string ToString();
}
internal static class Elastic.Apm.Helpers.UrlUtils : object {
    private static string ThisClassName;
    internal static Destination ExtractDestination(Uri url, IApmLogger logger);
    internal static string ExtractService(Uri url, ISpan span);
    internal static string GetProtocolName(string protocol);
}
public abstract class Elastic.Apm.Helpers.WildcardMatcher : object {
    private static string CaseInsensitivePrefix;
    private static string CaseSensitivePrefix;
    private static string Wildcard;
    public abstract virtual string GetMatcher();
    public abstract virtual bool Matches(string s);
    internal abstract virtual bool Matches(string firstPart, string secondPart);
    public static WildcardMatcher ValueOf(string wildcardString);
    public static bool IsAnyMatch(IReadOnlyList`1<WildcardMatcher> matchers, string s);
    internal static WildcardMatcher AnyMatch(IReadOnlyList`1<WildcardMatcher> matchers, string s);
    internal static WildcardMatcher AnyMatch(IReadOnlyCollection`1<WildcardMatcher> matchers, string firstPart, string secondPart);
    internal static int IndexOfIgnoreCase(string haystack1, string haystack2, string needle, bool ignoreCase, int start, int end);
    internal static char CharAt(int i, string firstPart, string secondPart, int firstPartLength);
}
public interface Elastic.Apm.IApmAgent {
    [ObsoleteAttribute("Please use Configuration property instead")]
public IConfigurationReader ConfigurationReader { get; }
    public IConfigurationReader Configuration { get; }
    public IApmLogger Logger { get; }
    public IPayloadSender PayloadSender { get; }
    public Service Service { get; }
    public ITracer Tracer { get; }
    public abstract virtual IConfigurationReader get_ConfigurationReader();
    public abstract virtual IConfigurationReader get_Configuration();
    public abstract virtual IApmLogger get_Logger();
    public abstract virtual IPayloadSender get_PayloadSender();
    public abstract virtual Service get_Service();
    public abstract virtual ITracer get_Tracer();
}
public interface Elastic.Apm.IApmAgentComponents {
    public HashSet`1<Type> SubscribedListeners { get; }
    public abstract virtual HashSet`1<Type> get_SubscribedListeners();
}
internal interface Elastic.Apm.ICurrentExecutionSegmentsContainer {
    public ISpan CurrentSpan { get; public set; }
    public ITransaction CurrentTransaction { get; public set; }
    public abstract virtual ISpan get_CurrentSpan();
    public abstract virtual void set_CurrentSpan(ISpan value);
    public abstract virtual ITransaction get_CurrentTransaction();
    public abstract virtual void set_CurrentTransaction(ITransaction value);
}
internal class Elastic.Apm.Instrumentations.SqlClient.SqlClientDiagnosticListener : DiagnosticListenerBase {
    private ApmAgent _agent;
    private PropertyFetcherSet _microsoftPropertyFetcherSet;
    private ConcurrentDictionary`2<Guid, ISpan> _spans;
    private PropertyFetcherSet _systemPropertyFetcherSet;
    public bool AllowDuplicates { get; }
    public string Name { get; }
    public SqlClientDiagnosticListener(IApmAgent apmAgent);
    public virtual bool get_AllowDuplicates();
    public virtual string get_Name();
    protected virtual void HandleOnNext(KeyValuePair`2<string, object> value);
    private void HandleStartCommand(object payloadData, PropertyFetcherSet propertyFetcherSet);
    private void HandleStopCommand(object payloadData, PropertyFetcherSet propertyFetcherSet);
    private void HandleErrorCommand(object payloadData, PropertyFetcherSet propertyFetcherSet);
}
public class Elastic.Apm.Instrumentations.SqlClient.SqlClientDiagnosticSubscriber : object {
    public sealed virtual IDisposable Subscribe(IApmAgent agentComponents);
}
internal class Elastic.Apm.Instrumentations.SqlClient.SqlEventListener : EventListener {
    private static int BeginExecuteEventId;
    private static int EndExecuteId;
    private ApmAgent _apmAgent;
    private IApmLogger _logger;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<int, ValueTuple`2<ISpan, long>> _processingSpans;
    public SqlEventListener(IApmAgent apmAgent);
    protected virtual void OnEventSourceCreated(EventSource eventSource);
    protected virtual void OnEventWritten(EventWrittenEventArgs eventData);
    private void ProcessBeginExecute(IReadOnlyList`1<object> payload);
    private void ProcessEndExecute(IReadOnlyList`1<object> payload);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Ben.Demystifier.EnhancedStackFrame : StackFrame {
    private int _colNumber;
    [NullableAttribute("2")]
private string _fileName;
    private int _lineNumber;
    [CompilerGeneratedAttribute]
private ResolvedMethod <MethodInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private StackFrame <StackFrame>k__BackingField;
    public bool IsRecursive { get; internal set; }
    public ResolvedMethod MethodInfo { get; }
    public StackFrame StackFrame { get; }
    internal EnhancedStackFrame(StackFrame stackFrame, ResolvedMethod methodInfo, string fileName, int lineNumber, int colNumber);
    public bool get_IsRecursive();
    internal void set_IsRecursive(bool value);
    [CompilerGeneratedAttribute]
public ResolvedMethod get_MethodInfo();
    [CompilerGeneratedAttribute]
public StackFrame get_StackFrame();
    internal bool IsEquivalent(ResolvedMethod methodInfo, string fileName, int lineNumber, int colNumber);
    public virtual int GetFileColumnNumber();
    public virtual int GetFileLineNumber();
    [NullableContextAttribute("2")]
public virtual string GetFileName();
    public virtual int GetILOffset();
    [NullableContextAttribute("2")]
public virtual MethodBase GetMethod();
    public virtual int GetNativeOffset();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Ben.Demystifier.EnhancedStackTrace : StackTrace {
    private List`1<EnhancedStackFrame> _frames;
    [NullableAttribute("2")]
private static Type StackTraceHiddenAttributeType;
    public int FrameCount { get; }
    public EnhancedStackTrace(Exception e);
    public EnhancedStackTrace(StackTrace stackTrace);
    private static EnhancedStackTrace();
    public virtual int get_FrameCount();
    public static EnhancedStackTrace Current();
    public virtual StackFrame GetFrame(int index);
    public virtual StackFrame[] GetFrames();
    public virtual string ToString();
    internal void Append(StringBuilder sb);
    private EnumerableIList`1<EnhancedStackFrame> GetEnumerator();
    private sealed virtual override IEnumerator`1<EnhancedStackFrame> System.Collections.Generic.IEnumerable<Elastic.Apm.Libraries.Ben.Demystifier.EnhancedStackFrame>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public static string TryGetFullPath(string filePath);
    private static List`1<EnhancedStackFrame> GetFrames(Exception exception);
    public static List`1<EnhancedStackFrame> GetFrames(StackTrace stackTrace);
    public static ResolvedMethod GetMethodDisplayString(MethodBase originMethod);
    private static bool IsFSharpAsync(MethodBase method);
    private static bool TryResolveGeneratedName(MethodBase& method, Type& type, String& methodName, String& subMethodName, GeneratedNameKind& kind, Nullable`1& ordinal);
    private static bool TryResolveSourceMethod(IEnumerable`1<MethodBase> candidateMethods, GeneratedNameKind kind, string matchHint, MethodBase& method, Type& type, Nullable`1& ordinal);
    private static void GetOrdinal(MethodBase method, Nullable`1& ordinal);
    private static string GetMatchHint(GeneratedNameKind kind, MethodBase method);
    internal static bool TryParseGeneratedName(string name, GeneratedNameKind& kind, Int32& openBracketOffset, Int32& closeBracketOffset);
    private static int IndexOfBalancedParenthesis(string str, int openingOffset, char closing);
    private static string GetPrefix(ParameterInfo parameter);
    private static ResolvedParameter GetParameter(ParameterInfo parameter);
    private static ResolvedParameter GetValueTupleParameter(IList`1<string> tupleNames, string prefix, string name, Type parameterType);
    private static string GetValueTupleParameterName(IList`1<string> tupleNames, Type parameterType);
    private static bool ShowInStackTrace(MethodBase method);
    private static bool IsStackTraceHidden(MemberInfo memberInfo);
    private static bool TryResolveStateMachineMethod(MethodBase& method, Type& declaringType);
    [CompilerGeneratedAttribute]
internal static MethodInfo[] <TryResolveStateMachineMethod>g__GetDeclaredMethods|31_0(Type type);
}
internal static class Elastic.Apm.Libraries.Ben.Demystifier.Enumerable.EnumerableIList : object {
    [NullableContextAttribute("1")]
public static EnumerableIList`1<T> Create(IList`1<T> list);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal class Elastic.Apm.Libraries.Ben.Demystifier.Enumerable.EnumerableIList`1 : ValueType {
    private IList`1<T> _list;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static EnumerableIList`1<T> Empty;
    public T Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public EnumerableIList`1(IList`1<T> list);
    private static EnumerableIList`1();
    public sealed virtual EnumeratorIList`1<T> GetEnumerator();
    public static EnumerableIList`1<T> op_Implicit(List`1<T> list);
    public static EnumerableIList`1<T> op_Implicit(T[] array);
    public sealed virtual T get_Item(int index);
    public sealed virtual void set_Item(int index, T value);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual void Add(T item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(T item);
    public sealed virtual void CopyTo(T[] array, int arrayIndex);
    public sealed virtual int IndexOf(T item);
    public sealed virtual void Insert(int index, T item);
    public sealed virtual bool Remove(T item);
    public sealed virtual void RemoveAt(int index);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Ben.Demystifier.Enumerable.EnumeratorIList`1 : ValueType {
    private IList`1<T> _list;
    private int _index;
    public T Current { get; }
    [NullableAttribute("2")]
private object System.Collections.IEnumerator.Current { get; }
    public EnumeratorIList`1(IList`1<T> list);
    public sealed virtual T get_Current();
    public sealed virtual bool MoveNext();
    public sealed virtual void Dispose();
    [NullableContextAttribute("2")]
private sealed virtual override object System.Collections.IEnumerator.get_Current();
    public sealed virtual void Reset();
}
internal interface Elastic.Apm.Libraries.Ben.Demystifier.Enumerable.IEnumerableIList`1 {
    public abstract virtual EnumeratorIList`1<T> GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Elastic.Apm.Libraries.Ben.Demystifier.ExceptionExtensions : object {
    [NullableAttribute("2")]
private static FieldInfo stackTraceString;
    private static ExceptionExtensions();
    [ExtensionAttribute]
private static void SetStackTracesString(Exception exception, string value);
    [ExtensionAttribute]
public static T Demystify(T exception);
    [ExtensionAttribute]
public static string ToStringDemystified(Exception exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Ben.Demystifier.Internal.ILReader : object {
    private static OpCode[] doubleByteOpCode;
    private static OpCode[] singleByteOpCode;
    private Byte[] _cil;
    [CompilerGeneratedAttribute]
private int <MetadataToken>k__BackingField;
    [CompilerGeneratedAttribute]
private OpCode <OpCode>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private MemberInfo <Operand>k__BackingField;
    private int ptr;
    public int MetadataToken { get; private set; }
    public OpCode OpCode { get; private set; }
    [NullableAttribute("2")]
public MemberInfo Operand { get; private set; }
    private static ILReader();
    public ILReader(Byte[] cil);
    [CompilerGeneratedAttribute]
public int get_MetadataToken();
    [CompilerGeneratedAttribute]
private void set_MetadataToken(int value);
    [CompilerGeneratedAttribute]
public OpCode get_OpCode();
    [CompilerGeneratedAttribute]
private void set_OpCode(OpCode value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public MemberInfo get_Operand();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_Operand(MemberInfo value);
    public bool Read(MethodBase methodInfo);
    private OpCode ReadOpCode();
    private MemberInfo ReadOperand(OpCode code, MethodBase methodInfo);
    private byte ReadByte();
    private int ReadInt();
    private static FieldInfo[] GetOpCodeFields();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Ben.Demystifier.Internal.PortablePdbReader : object {
    private Dictionary`2<string, MetadataReaderProvider> _cache;
    public void PopulateStackFrame(StackFrame frameInfo, MethodBase method, int IlOffset, String& fileName, Int32& row, Int32& column);
    private MetadataReader GetMetadataReader(string assemblyPath);
    private static string GetPdbPath(string assemblyPath);
    private static bool IsPortable(string pdbPath);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Elastic.Apm.Libraries.Ben.Demystifier.Internal.ReflectionHelper : object {
    [NullableAttribute("2")]
private static PropertyInfo tranformerNamesLazyPropertyInfo;
    [ExtensionAttribute]
public static bool IsValueTuple(Type type);
    [ExtensionAttribute]
public static bool IsTupleElementNameAttribue(Attribute attribute);
    [ExtensionAttribute]
public static IList`1<string> GetTransformerNames(Attribute attribute);
    private static PropertyInfo GetTransformNamesPropertyInfo(Type attributeType);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Ben.Demystifier.ResolvedMethod : object {
    [CompilerGeneratedAttribute]
private Type <DeclaringType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GenericArguments>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAsync>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsLambda>k__BackingField;
    [CompilerGeneratedAttribute]
private MethodBase <MethodBase>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Ordinal>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EnumerableIList`1<ResolvedParameter> <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RecurseCount>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Type[] <ResolvedGenericArguments>k__BackingField;
    [CompilerGeneratedAttribute]
private ResolvedParameter <ReturnParameter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private MethodBase <SubMethodBase>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EnumerableIList`1<ResolvedParameter> <SubMethodParameters>k__BackingField;
    public Type DeclaringType { get; public set; }
    public string GenericArguments { get; public set; }
    public bool IsAsync { get; public set; }
    public bool IsLambda { get; public set; }
    public MethodBase MethodBase { get; public set; }
    public string Name { get; public set; }
    public Nullable`1<int> Ordinal { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EnumerableIList`1<ResolvedParameter> Parameters { get; public set; }
    public int RecurseCount { get; internal set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Type[] ResolvedGenericArguments { get; public set; }
    public ResolvedParameter ReturnParameter { get; public set; }
    public string SubMethod { get; public set; }
    public MethodBase SubMethodBase { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EnumerableIList`1<ResolvedParameter> SubMethodParameters { get; public set; }
    [CompilerGeneratedAttribute]
public Type get_DeclaringType();
    [CompilerGeneratedAttribute]
public void set_DeclaringType(Type value);
    [CompilerGeneratedAttribute]
public string get_GenericArguments();
    [CompilerGeneratedAttribute]
public void set_GenericArguments(string value);
    [CompilerGeneratedAttribute]
public bool get_IsAsync();
    [CompilerGeneratedAttribute]
public void set_IsAsync(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsLambda();
    [CompilerGeneratedAttribute]
public void set_IsLambda(bool value);
    [CompilerGeneratedAttribute]
public MethodBase get_MethodBase();
    [CompilerGeneratedAttribute]
public void set_MethodBase(MethodBase value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Ordinal();
    [CompilerGeneratedAttribute]
public void set_Ordinal(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public EnumerableIList`1<ResolvedParameter> get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(EnumerableIList`1<ResolvedParameter> value);
    [CompilerGeneratedAttribute]
public int get_RecurseCount();
    [CompilerGeneratedAttribute]
internal void set_RecurseCount(int value);
    [CompilerGeneratedAttribute]
public Type[] get_ResolvedGenericArguments();
    [CompilerGeneratedAttribute]
public void set_ResolvedGenericArguments(Type[] value);
    [CompilerGeneratedAttribute]
public ResolvedParameter get_ReturnParameter();
    [CompilerGeneratedAttribute]
public void set_ReturnParameter(ResolvedParameter value);
    [CompilerGeneratedAttribute]
public string get_SubMethod();
    [CompilerGeneratedAttribute]
public void set_SubMethod(string value);
    [CompilerGeneratedAttribute]
public MethodBase get_SubMethodBase();
    [CompilerGeneratedAttribute]
public void set_SubMethodBase(MethodBase value);
    [CompilerGeneratedAttribute]
public EnumerableIList`1<ResolvedParameter> get_SubMethodParameters();
    [CompilerGeneratedAttribute]
public void set_SubMethodParameters(EnumerableIList`1<ResolvedParameter> value);
    [NullableContextAttribute("1")]
internal bool IsSequentialEquivalent(ResolvedMethod obj);
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
public StringBuilder Append(StringBuilder builder);
    [NullableContextAttribute("1")]
public StringBuilder Append(StringBuilder builder, bool fullName);
    [NullableContextAttribute("1")]
private StringBuilder AppendDeclaringTypeName(StringBuilder builder, bool fullName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Ben.Demystifier.ResolvedParameter : object {
    [CompilerGeneratedAttribute]
private bool <IsDynamicType>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ResolvedType>k__BackingField;
    public bool IsDynamicType { get; public set; }
    [NullableAttribute("2")]
public string Name { get; public set; }
    [NullableAttribute("2")]
public string Prefix { get; public set; }
    public Type ResolvedType { get; public set; }
    public ResolvedParameter(Type resolvedType);
    [CompilerGeneratedAttribute]
public bool get_IsDynamicType();
    [CompilerGeneratedAttribute]
public void set_IsDynamicType(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Name();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Name(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Prefix();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Prefix(string value);
    [CompilerGeneratedAttribute]
public Type get_ResolvedType();
    [CompilerGeneratedAttribute]
public void set_ResolvedType(Type value);
    public virtual string ToString();
    public StringBuilder Append(StringBuilder sb);
    protected virtual void AppendTypeName(StringBuilder sb);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Elastic.Apm.Libraries.Ben.Demystifier.StringBuilderExtentions : object {
    [ExtensionAttribute]
public static StringBuilder AppendDemystified(StringBuilder builder, Exception exception);
    [ExtensionAttribute]
private static void AppendInnerException(StringBuilder builder, Exception exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Elastic.Apm.Libraries.Ben.Demystifier.TypeNameHelper : object {
    public static Dictionary`2<Type, string> BuiltInTypeNames;
    public static Dictionary`2<string, string> FSharpTypeNames;
    private static TypeNameHelper();
    public static string GetTypeDisplayName(Type type, bool fullName, bool includeGenericParameterNames);
    [ExtensionAttribute]
public static StringBuilder AppendTypeDisplayName(StringBuilder builder, Type type, bool fullName, bool includeGenericParameterNames);
    public static string GetTypeNameForGenericType(Type type);
    private static void ProcessType(StringBuilder builder, Type type, DisplayNameOptions options);
    private static void ProcessArrayType(StringBuilder builder, Type type, DisplayNameOptions options);
    private static void ProcessGenericType(StringBuilder builder, Type type, Type[] genericArguments, int length, DisplayNameOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Ben.Demystifier.ValueTupleResolvedParameter : ResolvedParameter {
    [CompilerGeneratedAttribute]
private IList`1<string> <TupleNames>k__BackingField;
    public IList`1<string> TupleNames { get; }
    public ValueTupleResolvedParameter(Type resolvedType, IList`1<string> tupleNames);
    [CompilerGeneratedAttribute]
public IList`1<string> get_TupleNames();
    protected virtual void AppendTypeName(StringBuilder sb);
    private void AppendValueTupleParameterName(StringBuilder sb, Type parameterType);
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonArray : BsonToken {
    private List`1<BsonToken> _children;
    public BsonType Type { get; }
    public virtual BsonType get_Type();
    public void Add(BsonToken token);
    public sealed virtual IEnumerator`1<BsonToken> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonBinary : BsonValue {
    [CompilerGeneratedAttribute]
private BsonBinaryType <BinaryType>k__BackingField;
    public BsonBinaryType BinaryType { get; public set; }
    public BsonBinary(Byte[] value, BsonBinaryType binaryType);
    [CompilerGeneratedAttribute]
public BsonBinaryType get_BinaryType();
    [CompilerGeneratedAttribute]
public void set_BinaryType(BsonBinaryType value);
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonBinaryType : Enum {
    public byte value__;
    public static BsonBinaryType Binary;
    public static BsonBinaryType Function;
    [ObsoleteAttribute("This type has been deprecated in the BSON specification. Use Binary instead.")]
public static BsonBinaryType BinaryOld;
    [ObsoleteAttribute("This type has been deprecated in the BSON specification. Use Uuid instead.")]
public static BsonBinaryType UuidOld;
    public static BsonBinaryType Uuid;
    public static BsonBinaryType Md5;
    public static BsonBinaryType UserDefined;
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonBinaryWriter : object {
    private static Encoding Encoding;
    private BinaryWriter _writer;
    private Byte[] _largeByteBuffer;
    [CompilerGeneratedAttribute]
private DateTimeKind <DateTimeKindHandling>k__BackingField;
    public DateTimeKind DateTimeKindHandling { get; public set; }
    public BsonBinaryWriter(BinaryWriter writer);
    private static BsonBinaryWriter();
    [CompilerGeneratedAttribute]
public DateTimeKind get_DateTimeKindHandling();
    [CompilerGeneratedAttribute]
public void set_DateTimeKindHandling(DateTimeKind value);
    public void Flush();
    public void Close();
    public void WriteToken(BsonToken t);
    private void WriteTokenInternal(BsonToken t);
    private void WriteString(string s, int byteCount, Nullable`1<int> calculatedlengthPrefix);
    public void WriteUtf8Bytes(string s, int byteCount);
    private int CalculateSize(int stringByteCount);
    private int CalculateSizeWithLength(int stringByteCount, bool includeSize);
    private int CalculateSize(BsonToken t);
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonBoolean : BsonValue {
    public static BsonBoolean False;
    public static BsonBoolean True;
    private BsonBoolean(bool value);
    private static BsonBoolean();
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonEmpty : BsonToken {
    public static BsonToken Null;
    public static BsonToken Undefined;
    [CompilerGeneratedAttribute]
private BsonType <Type>k__BackingField;
    public BsonType Type { get; }
    private BsonEmpty(BsonType type);
    private static BsonEmpty();
    [CompilerGeneratedAttribute]
public virtual BsonType get_Type();
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonObject : BsonToken {
    private List`1<BsonProperty> _children;
    public BsonType Type { get; }
    public virtual BsonType get_Type();
    public void Add(string name, BsonToken token);
    public sealed virtual IEnumerator`1<BsonProperty> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[ObsoleteAttribute("BSON reading and writing has been moved to its own package. See https://www.nuget.org/packages/Newtonsoft.Json.Bson for more details.")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonObjectId : object {
    [CompilerGeneratedAttribute]
private Byte[] <Value>k__BackingField;
    public Byte[] Value { get; }
    public BsonObjectId(Byte[] value);
    [CompilerGeneratedAttribute]
public Byte[] get_Value();
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonProperty : object {
    [CompilerGeneratedAttribute]
private BsonString <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private BsonToken <Value>k__BackingField;
    public BsonString Name { get; public set; }
    public BsonToken Value { get; public set; }
    [CompilerGeneratedAttribute]
public BsonString get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(BsonString value);
    [CompilerGeneratedAttribute]
public BsonToken get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(BsonToken value);
}
[ObsoleteAttribute("BSON reading and writing has been moved to its own package. See https://www.nuget.org/packages/Newtonsoft.Json.Bson for more details.")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonReader : JsonReader {
    private static int MaxCharBytesSize;
    private static Byte[] SeqRange1;
    private static Byte[] SeqRange2;
    private static Byte[] SeqRange3;
    private static Byte[] SeqRange4;
    private BinaryReader _reader;
    private List`1<ContainerContext> _stack;
    private BsonReaderState _bsonReaderState;
    private Byte[] _byteBuffer;
    private Char[] _charBuffer;
    private ContainerContext _currentContext;
    private BsonType _currentElementType;
    [CompilerGeneratedAttribute]
private DateTimeKind <DateTimeKindHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <JsonNet35BinaryCompatibility>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ReadRootValueAsArray>k__BackingField;
    public DateTimeKind DateTimeKindHandling { get; public set; }
    [ObsoleteAttribute("JsonNet35BinaryCompatibility will be removed in a future version of Json.NET.")]
public bool JsonNet35BinaryCompatibility { get; public set; }
    public bool ReadRootValueAsArray { get; public set; }
    public BsonReader(Stream stream);
    public BsonReader(BinaryReader reader);
    public BsonReader(Stream stream, bool readRootValueAsArray, DateTimeKind dateTimeKindHandling);
    public BsonReader(BinaryReader reader, bool readRootValueAsArray, DateTimeKind dateTimeKindHandling);
    private static BsonReader();
    [CompilerGeneratedAttribute]
public DateTimeKind get_DateTimeKindHandling();
    [CompilerGeneratedAttribute]
public void set_DateTimeKindHandling(DateTimeKind value);
    [CompilerGeneratedAttribute]
public bool get_JsonNet35BinaryCompatibility();
    [CompilerGeneratedAttribute]
public void set_JsonNet35BinaryCompatibility(bool value);
    [CompilerGeneratedAttribute]
public bool get_ReadRootValueAsArray();
    [CompilerGeneratedAttribute]
public void set_ReadRootValueAsArray(bool value);
    private string ReadElement();
    public virtual bool Read();
    public virtual void Close();
    private bool ReadCodeWScope();
    private bool ReadReference();
    private bool ReadNormal();
    private void PopContext();
    private void PushContext(ContainerContext newContext);
    private byte ReadByte();
    private void ReadType(BsonType type);
    private Byte[] ReadBinary(BsonBinaryType& binaryType);
    private string ReadString();
    private string ReadLengthString();
    private string GetString(int length);
    private int GetLastFullCharStop(int start);
    private int BytesInSequence(byte b);
    private void EnsureBuffers();
    private double ReadDouble();
    private int ReadInt32();
    private long ReadInt64();
    private BsonType ReadType();
    private void MovePosition(int count);
    private Byte[] ReadBytes(int count);
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonRegex : BsonToken {
    [CompilerGeneratedAttribute]
private BsonString <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private BsonString <Pattern>k__BackingField;
    public BsonString Options { get; public set; }
    public BsonString Pattern { get; public set; }
    public BsonType Type { get; }
    public BsonRegex(string pattern, string options);
    [CompilerGeneratedAttribute]
public BsonString get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(BsonString value);
    [CompilerGeneratedAttribute]
public BsonString get_Pattern();
    [CompilerGeneratedAttribute]
public void set_Pattern(BsonString value);
    public virtual BsonType get_Type();
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonString : BsonValue {
    [CompilerGeneratedAttribute]
private int <ByteCount>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeLength>k__BackingField;
    public int ByteCount { get; public set; }
    public bool IncludeLength { get; }
    public BsonString(object value, bool includeLength);
    [CompilerGeneratedAttribute]
public int get_ByteCount();
    [CompilerGeneratedAttribute]
public void set_ByteCount(int value);
    [CompilerGeneratedAttribute]
public bool get_IncludeLength();
}
internal abstract class Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonToken : object {
    [CompilerGeneratedAttribute]
private int <CalculatedSize>k__BackingField;
    [CompilerGeneratedAttribute]
private BsonToken <Parent>k__BackingField;
    public BsonType Type { get; }
    public int CalculatedSize { get; public set; }
    public BsonToken Parent { get; public set; }
    public abstract virtual BsonType get_Type();
    [CompilerGeneratedAttribute]
public int get_CalculatedSize();
    [CompilerGeneratedAttribute]
public void set_CalculatedSize(int value);
    [CompilerGeneratedAttribute]
public BsonToken get_Parent();
    [CompilerGeneratedAttribute]
public void set_Parent(BsonToken value);
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonType : Enum {
    public sbyte value__;
    public static BsonType Number;
    public static BsonType String;
    public static BsonType Object;
    public static BsonType Array;
    public static BsonType Binary;
    public static BsonType Undefined;
    public static BsonType Oid;
    public static BsonType Boolean;
    public static BsonType Date;
    public static BsonType Null;
    public static BsonType Regex;
    public static BsonType Reference;
    public static BsonType Code;
    public static BsonType Symbol;
    public static BsonType CodeWScope;
    public static BsonType Integer;
    public static BsonType TimeStamp;
    public static BsonType Long;
    public static BsonType MinKey;
    public static BsonType MaxKey;
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonValue : BsonToken {
    [CompilerGeneratedAttribute]
private BsonType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public BsonType Type { get; }
    public object Value { get; }
    public BsonValue(object value, BsonType type);
    [CompilerGeneratedAttribute]
public virtual BsonType get_Type();
    [CompilerGeneratedAttribute]
public object get_Value();
}
[ObsoleteAttribute("BSON reading and writing has been moved to its own package. See https://www.nuget.org/packages/Newtonsoft.Json.Bson for more details.")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Bson.BsonWriter : JsonWriter {
    private BsonBinaryWriter _writer;
    private BsonToken _root;
    private BsonToken _parent;
    private string _propertyName;
    public DateTimeKind DateTimeKindHandling { get; public set; }
    public BsonWriter(Stream stream);
    public BsonWriter(BinaryWriter writer);
    public DateTimeKind get_DateTimeKindHandling();
    public void set_DateTimeKindHandling(DateTimeKind value);
    public virtual void Flush();
    protected virtual void WriteEnd(JsonToken token);
    public virtual void WriteComment(string text);
    public virtual void WriteStartConstructor(string name);
    public virtual void WriteRaw(string json);
    public virtual void WriteRawValue(string json);
    public virtual void WriteStartArray();
    public virtual void WriteStartObject();
    public virtual void WritePropertyName(string name);
    public virtual void Close();
    private void AddParent(BsonToken container);
    private void RemoveParent();
    private void AddValue(object value, BsonType type);
    internal void AddToken(BsonToken token);
    public virtual void WriteValue(object value);
    public virtual void WriteNull();
    public virtual void WriteUndefined();
    public virtual void WriteValue(string value);
    public virtual void WriteValue(int value);
    public virtual void WriteValue(UInt32 value);
    public virtual void WriteValue(long value);
    public virtual void WriteValue(ulong value);
    public virtual void WriteValue(float value);
    public virtual void WriteValue(double value);
    public virtual void WriteValue(bool value);
    public virtual void WriteValue(short value);
    public virtual void WriteValue(ushort value);
    public virtual void WriteValue(char value);
    public virtual void WriteValue(byte value);
    public virtual void WriteValue(sbyte value);
    public virtual void WriteValue(decimal value);
    public virtual void WriteValue(DateTime value);
    public virtual void WriteValue(DateTimeOffset value);
    public virtual void WriteValue(Byte[] value);
    public virtual void WriteValue(Guid value);
    public virtual void WriteValue(TimeSpan value);
    public virtual void WriteValue(Uri value);
    public void WriteObjectId(Byte[] value);
    public void WriteRegex(string pattern, string options);
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.ConstructorHandling : Enum {
    public int value__;
    public static ConstructorHandling Default;
    public static ConstructorHandling AllowNonPublicDefaultConstructor;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Converters.BinaryConverter : JsonConverter {
    private static string BinaryTypeName;
    private static string BinaryToArrayName;
    [NullableAttribute("2")]
private ReflectionObject _reflectionObject;
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    private Byte[] GetByteArray(object value);
    private void EnsureReflectionObject(Type t);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    private Byte[] ReadByteArray(JsonReader reader);
    public virtual bool CanConvert(Type objectType);
}
[ObsoleteAttribute("BSON reading and writing has been moved to its own package. See https://www.nuget.org/packages/Newtonsoft.Json.Bson for more details.")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Converters.BsonObjectIdConverter : JsonConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Elastic.Apm.Libraries.Newtonsoft.Json.Converters.CustomCreationConverter`1 : JsonConverter {
    public bool CanWrite { get; }
    public abstract virtual T Create(Type objectType);
    public virtual bool get_CanWrite();
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Converters.DataSetConverter : JsonConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type valueType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Converters.DataTableConverter : JsonConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    private static void CreateRow(JsonReader reader, DataTable dt, JsonSerializer serializer);
    private static Type GetColumnDataType(JsonReader reader);
    public virtual bool CanConvert(Type valueType);
}
internal abstract class Elastic.Apm.Libraries.Newtonsoft.Json.Converters.DateTimeConverterBase : JsonConverter {
    [NullableContextAttribute("1")]
public virtual bool CanConvert(Type objectType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Converters.DiscriminatedUnionConverter : JsonConverter {
    private static string CasePropertyName;
    private static string FieldsPropertyName;
    private static ThreadSafeStore`2<Type, Union> UnionCache;
    private static ThreadSafeStore`2<Type, Type> UnionTypeLookupCache;
    private static DiscriminatedUnionConverter();
    private static Type CreateUnionTypeLookup(Type t);
    private static Union CreateUnion(Type t);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Converters.EntityKeyMemberConverter : JsonConverter {
    private static string EntityKeyMemberFullTypeName;
    private static string KeyPropertyName;
    private static string TypePropertyName;
    private static string ValuePropertyName;
    [NullableAttribute("2")]
private static ReflectionObject _reflectionObject;
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    private static void ReadAndAssertProperty(JsonReader reader, string propertyName);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    private static void EnsureReflectionObject(Type objectType);
    public virtual bool CanConvert(Type objectType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Converters.ExpandoObjectConverter : JsonConverter {
    public bool CanWrite { get; }
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    private object ReadValue(JsonReader reader);
    private object ReadList(JsonReader reader);
    private object ReadObject(JsonReader reader);
    public virtual bool CanConvert(Type objectType);
    public virtual bool get_CanWrite();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Converters.IsoDateTimeConverter : DateTimeConverterBase {
    private static string DefaultDateTimeFormat;
    [NullableAttribute("2")]
private CultureInfo _culture;
    [NullableAttribute("2")]
private string _dateTimeFormat;
    [CompilerGeneratedAttribute]
private DateTimeStyles <DateTimeStyles>k__BackingField;
    public CultureInfo Culture { get; public set; }
    [NullableAttribute("2")]
public string DateTimeFormat { get; public set; }
    public DateTimeStyles DateTimeStyles { get; public set; }
    public CultureInfo get_Culture();
    public void set_Culture(CultureInfo value);
    [NullableContextAttribute("2")]
public string get_DateTimeFormat();
    [NullableContextAttribute("2")]
public void set_DateTimeFormat(string value);
    [CompilerGeneratedAttribute]
public DateTimeStyles get_DateTimeStyles();
    [CompilerGeneratedAttribute]
public void set_DateTimeStyles(DateTimeStyles value);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
}
[NullableContextAttribute("1")]
internal interface Elastic.Apm.Libraries.Newtonsoft.Json.Converters.IXmlDeclaration {
    public string Version { get; }
    public string Encoding { get; public set; }
    public string Standalone { get; public set; }
    public abstract virtual string get_Version();
    public abstract virtual string get_Encoding();
    public abstract virtual void set_Encoding(string value);
    public abstract virtual string get_Standalone();
    public abstract virtual void set_Standalone(string value);
}
[NullableContextAttribute("1")]
internal interface Elastic.Apm.Libraries.Newtonsoft.Json.Converters.IXmlDocument {
    [NullableAttribute("2")]
public IXmlElement DocumentElement { get; }
    public abstract virtual IXmlNode CreateComment(string text);
    public abstract virtual IXmlNode CreateTextNode(string text);
    public abstract virtual IXmlNode CreateCDataSection(string data);
    public abstract virtual IXmlNode CreateWhitespace(string text);
    public abstract virtual IXmlNode CreateSignificantWhitespace(string text);
    [NullableContextAttribute("2")]
public abstract virtual IXmlNode CreateXmlDeclaration(string version, string encoding, string standalone);
    [NullableContextAttribute("2")]
public abstract virtual IXmlNode CreateXmlDocumentType(string name, string publicId, string systemId, string internalSubset);
    public abstract virtual IXmlNode CreateProcessingInstruction(string target, string data);
    public abstract virtual IXmlElement CreateElement(string elementName);
    public abstract virtual IXmlElement CreateElement(string qualifiedName, string namespaceUri);
    public abstract virtual IXmlNode CreateAttribute(string name, string value);
    public abstract virtual IXmlNode CreateAttribute(string qualifiedName, string namespaceUri, string value);
    [NullableContextAttribute("2")]
public abstract virtual IXmlElement get_DocumentElement();
}
[NullableContextAttribute("1")]
internal interface Elastic.Apm.Libraries.Newtonsoft.Json.Converters.IXmlDocumentType {
    public string Name { get; }
    public string System { get; }
    public string Public { get; }
    public string InternalSubset { get; }
    public abstract virtual string get_Name();
    public abstract virtual string get_System();
    public abstract virtual string get_Public();
    public abstract virtual string get_InternalSubset();
}
[NullableContextAttribute("1")]
internal interface Elastic.Apm.Libraries.Newtonsoft.Json.Converters.IXmlElement {
    public bool IsEmpty { get; }
    public abstract virtual void SetAttributeNode(IXmlNode attribute);
    public abstract virtual string GetPrefixOfNamespace(string namespaceUri);
    public abstract virtual bool get_IsEmpty();
}
[NullableContextAttribute("2")]
internal interface Elastic.Apm.Libraries.Newtonsoft.Json.Converters.IXmlNode {
    public XmlNodeType NodeType { get; }
    public string LocalName { get; }
    [NullableAttribute("1")]
public List`1<IXmlNode> ChildNodes { get; }
    [NullableAttribute("1")]
public List`1<IXmlNode> Attributes { get; }
    public IXmlNode ParentNode { get; }
    public string Value { get; public set; }
    public string NamespaceUri { get; }
    public object WrappedNode { get; }
    public abstract virtual XmlNodeType get_NodeType();
    public abstract virtual string get_LocalName();
    [NullableContextAttribute("1")]
public abstract virtual List`1<IXmlNode> get_ChildNodes();
    [NullableContextAttribute("1")]
public abstract virtual List`1<IXmlNode> get_Attributes();
    public abstract virtual IXmlNode get_ParentNode();
    public abstract virtual string get_Value();
    public abstract virtual void set_Value(string value);
    [NullableContextAttribute("1")]
public abstract virtual IXmlNode AppendChild(IXmlNode newChild);
    public abstract virtual string get_NamespaceUri();
    public abstract virtual object get_WrappedNode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Converters.JavaScriptDateTimeConverter : DateTimeConverterBase {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Converters.KeyValuePairConverter : JsonConverter {
    private static string KeyName;
    private static string ValueName;
    private static ThreadSafeStore`2<Type, ReflectionObject> ReflectionObjectPerType;
    private static KeyValuePairConverter();
    private static ReflectionObject InitializeReflectionObject(Type t);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Converters.StringEnumConverter : JsonConverter {
    [CompilerGeneratedAttribute]
private bool <AllowIntegerValues>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private NamingStrategy <NamingStrategy>k__BackingField;
    public bool AllowIntegerValues { get; public set; }
    [ObsoleteAttribute("StringEnumConverter.CamelCaseText is obsolete. Set StringEnumConverter.NamingStrategy with CamelCaseNamingStrategy instead.")]
public bool CamelCaseText { get; public set; }
    [NullableAttribute("2")]
public NamingStrategy NamingStrategy { get; public set; }
    [ObsoleteAttribute("StringEnumConverter(bool) is obsolete. Create a converter with StringEnumConverter(NamingStrategy, bool) instead.")]
public StringEnumConverter(bool camelCaseText);
    public StringEnumConverter(NamingStrategy namingStrategy, bool allowIntegerValues);
    public StringEnumConverter(Type namingStrategyType);
    public StringEnumConverter(Type namingStrategyType, Object[] namingStrategyParameters);
    public StringEnumConverter(Type namingStrategyType, Object[] namingStrategyParameters, bool allowIntegerValues);
    [CompilerGeneratedAttribute]
public bool get_AllowIntegerValues();
    [CompilerGeneratedAttribute]
public void set_AllowIntegerValues(bool value);
    public bool get_CamelCaseText();
    public void set_CamelCaseText(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public NamingStrategy get_NamingStrategy();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_NamingStrategy(NamingStrategy value);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Converters.UnixDateTimeConverter : DateTimeConverterBase {
    internal static DateTime UnixEpoch;
    private static UnixDateTimeConverter();
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Converters.VersionConverter : JsonConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Converters.XmlDeclarationWrapper : XmlNodeWrapper {
    private XmlDeclaration _declaration;
    public string Version { get; }
    public string Encoding { get; public set; }
    public string Standalone { get; public set; }
    public XmlDeclarationWrapper(XmlDeclaration declaration);
    public sealed virtual string get_Version();
    public sealed virtual string get_Encoding();
    public sealed virtual void set_Encoding(string value);
    public sealed virtual string get_Standalone();
    public sealed virtual void set_Standalone(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Converters.XmlDocumentTypeWrapper : XmlNodeWrapper {
    private XmlDocumentType _documentType;
    public string Name { get; }
    public string System { get; }
    public string Public { get; }
    public string InternalSubset { get; }
    [NullableAttribute("2")]
public string LocalName { get; }
    public XmlDocumentTypeWrapper(XmlDocumentType documentType);
    public sealed virtual string get_Name();
    public sealed virtual string get_System();
    public sealed virtual string get_Public();
    public sealed virtual string get_InternalSubset();
    [NullableContextAttribute("2")]
public virtual string get_LocalName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Converters.XmlDocumentWrapper : XmlNodeWrapper {
    private XmlDocument _document;
    [NullableAttribute("2")]
public IXmlElement DocumentElement { get; }
    public XmlDocumentWrapper(XmlDocument document);
    public sealed virtual IXmlNode CreateComment(string data);
    public sealed virtual IXmlNode CreateTextNode(string text);
    public sealed virtual IXmlNode CreateCDataSection(string data);
    public sealed virtual IXmlNode CreateWhitespace(string text);
    public sealed virtual IXmlNode CreateSignificantWhitespace(string text);
    [NullableContextAttribute("2")]
public sealed virtual IXmlNode CreateXmlDeclaration(string version, string encoding, string standalone);
    [NullableContextAttribute("2")]
public sealed virtual IXmlNode CreateXmlDocumentType(string name, string publicId, string systemId, string internalSubset);
    public sealed virtual IXmlNode CreateProcessingInstruction(string target, string data);
    public sealed virtual IXmlElement CreateElement(string elementName);
    public sealed virtual IXmlElement CreateElement(string qualifiedName, string namespaceUri);
    public sealed virtual IXmlNode CreateAttribute(string name, string value);
    public sealed virtual IXmlNode CreateAttribute(string qualifiedName, string namespaceUri, string value);
    [NullableContextAttribute("2")]
public sealed virtual IXmlElement get_DocumentElement();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Converters.XmlElementWrapper : XmlNodeWrapper {
    private XmlElement _element;
    public bool IsEmpty { get; }
    public XmlElementWrapper(XmlElement element);
    public sealed virtual void SetAttributeNode(IXmlNode attribute);
    public sealed virtual string GetPrefixOfNamespace(string namespaceUri);
    public sealed virtual bool get_IsEmpty();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Converters.XmlNodeConverter : JsonConverter {
    internal static List`1<IXmlNode> EmptyChildNodes;
    private static string TextName;
    private static string CommentName;
    private static string CDataName;
    private static string WhitespaceName;
    private static string SignificantWhitespaceName;
    private static string DeclarationName;
    private static string JsonNamespaceUri;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <DeserializeRootElementName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WriteArrayAttribute>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OmitRootObject>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EncodeSpecialCharacters>k__BackingField;
    [NullableAttribute("2")]
public string DeserializeRootElementName { get; public set; }
    public bool WriteArrayAttribute { get; public set; }
    public bool OmitRootObject { get; public set; }
    public bool EncodeSpecialCharacters { get; public set; }
    private static XmlNodeConverter();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_DeserializeRootElementName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_DeserializeRootElementName(string value);
    [CompilerGeneratedAttribute]
public bool get_WriteArrayAttribute();
    [CompilerGeneratedAttribute]
public void set_WriteArrayAttribute(bool value);
    [CompilerGeneratedAttribute]
public bool get_OmitRootObject();
    [CompilerGeneratedAttribute]
public void set_OmitRootObject(bool value);
    [CompilerGeneratedAttribute]
public bool get_EncodeSpecialCharacters();
    [CompilerGeneratedAttribute]
public void set_EncodeSpecialCharacters(bool value);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    private IXmlNode WrapXml(object value);
    private void PushParentNamespaces(IXmlNode node, XmlNamespaceManager manager);
    private string ResolveFullName(IXmlNode node, XmlNamespaceManager manager);
    private string GetPropertyName(IXmlNode node, XmlNamespaceManager manager);
    private bool IsArray(IXmlNode node);
    private void SerializeGroupedNodes(JsonWriter writer, IXmlNode node, XmlNamespaceManager manager, bool writePropertyName);
    private void WriteGroupedNodes(JsonWriter writer, XmlNamespaceManager manager, bool writePropertyName, List`1<IXmlNode> groupedNodes, string elementNames);
    private void WriteGroupedNodes(JsonWriter writer, XmlNamespaceManager manager, bool writePropertyName, IXmlNode node, string elementNames);
    private void SerializeNode(JsonWriter writer, IXmlNode node, XmlNamespaceManager manager, bool writePropertyName);
    private static bool AllSameName(IXmlNode node);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    private void DeserializeValue(JsonReader reader, IXmlDocument document, XmlNamespaceManager manager, string propertyName, IXmlNode currentNode);
    private void ReadElement(JsonReader reader, IXmlDocument document, IXmlNode currentNode, string propertyName, XmlNamespaceManager manager);
    private void CreateElement(JsonReader reader, IXmlDocument document, IXmlNode currentNode, string elementName, XmlNamespaceManager manager, string elementPrefix, Dictionary`2<string, string> attributeNameValues);
    private static void AddAttribute(JsonReader reader, IXmlDocument document, IXmlNode currentNode, string propertyName, string attributeName, XmlNamespaceManager manager, string attributePrefix);
    private static string ConvertTokenToXmlValue(JsonReader reader);
    private void ReadArrayElements(JsonReader reader, IXmlDocument document, string propertyName, IXmlNode currentNode, XmlNamespaceManager manager);
    private void AddJsonArrayAttribute(IXmlElement element, IXmlDocument document);
    private bool ShouldReadInto(JsonReader reader);
    private Dictionary`2<string, string> ReadAttributeElements(JsonReader reader, XmlNamespaceManager manager);
    private void CreateInstruction(JsonReader reader, IXmlDocument document, IXmlNode currentNode, string propertyName);
    private void CreateDocumentType(JsonReader reader, IXmlDocument document, IXmlNode currentNode);
    private IXmlElement CreateElement(string elementName, IXmlDocument document, string elementPrefix, XmlNamespaceManager manager);
    private void DeserializeNode(JsonReader reader, IXmlDocument document, XmlNamespaceManager manager, IXmlNode currentNode);
    private bool IsNamespaceAttribute(string attributeName, String& prefix);
    private bool ValueAttributes(List`1<IXmlNode> c);
    public virtual bool CanConvert(Type valueType);
    private bool IsXmlNode(Type valueType);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Converters.XmlNodeWrapper : object {
    [NullableAttribute("1")]
private XmlNode _node;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<IXmlNode> _childNodes;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<IXmlNode> _attributes;
    public object WrappedNode { get; }
    public XmlNodeType NodeType { get; }
    public string LocalName { get; }
    [NullableAttribute("1")]
public List`1<IXmlNode> ChildNodes { get; }
    protected bool HasChildNodes { get; }
    [NullableAttribute("1")]
public List`1<IXmlNode> Attributes { get; }
    private bool HasAttributes { get; }
    public IXmlNode ParentNode { get; }
    public string Value { get; public set; }
    public string NamespaceUri { get; }
    [NullableContextAttribute("1")]
public XmlNodeWrapper(XmlNode node);
    public sealed virtual object get_WrappedNode();
    public sealed virtual XmlNodeType get_NodeType();
    public virtual string get_LocalName();
    [NullableContextAttribute("1")]
public sealed virtual List`1<IXmlNode> get_ChildNodes();
    protected virtual bool get_HasChildNodes();
    [NullableContextAttribute("1")]
internal static IXmlNode WrapNode(XmlNode node);
    [NullableContextAttribute("1")]
public sealed virtual List`1<IXmlNode> get_Attributes();
    private bool get_HasAttributes();
    public sealed virtual IXmlNode get_ParentNode();
    public sealed virtual string get_Value();
    public sealed virtual void set_Value(string value);
    [NullableContextAttribute("1")]
public sealed virtual IXmlNode AppendChild(IXmlNode newChild);
    public sealed virtual string get_NamespaceUri();
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.DateFormatHandling : Enum {
    public int value__;
    public static DateFormatHandling IsoDateFormat;
    public static DateFormatHandling MicrosoftDateFormat;
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.DateParseHandling : Enum {
    public int value__;
    public static DateParseHandling None;
    public static DateParseHandling DateTime;
    public static DateParseHandling DateTimeOffset;
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.DateTimeZoneHandling : Enum {
    public int value__;
    public static DateTimeZoneHandling Local;
    public static DateTimeZoneHandling Utc;
    public static DateTimeZoneHandling Unspecified;
    public static DateTimeZoneHandling RoundtripKind;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.DefaultJsonNameTable : JsonNameTable {
    private static int HashCodeRandomizer;
    private int _count;
    private Entry[] _entries;
    private int _mask;
    private static DefaultJsonNameTable();
    public virtual string Get(Char[] key, int start, int length);
    public string Add(string key);
    private string AddEntry(string str, int hashCode);
    private void Grow();
    private static bool TextEquals(string str1, Char[] str2, int str2Start, int str2Length);
}
[FlagsAttribute]
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.DefaultValueHandling : Enum {
    public int value__;
    public static DefaultValueHandling Include;
    public static DefaultValueHandling Ignore;
    public static DefaultValueHandling Populate;
    public static DefaultValueHandling IgnoreAndPopulate;
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.FloatFormatHandling : Enum {
    public int value__;
    public static FloatFormatHandling String;
    public static FloatFormatHandling Symbol;
    public static FloatFormatHandling DefaultValue;
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.FloatParseHandling : Enum {
    public int value__;
    public static FloatParseHandling Double;
    public static FloatParseHandling Decimal;
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.Formatting : Enum {
    public int value__;
    public static Formatting None;
    public static Formatting Indented;
}
[NullableContextAttribute("1")]
internal interface Elastic.Apm.Libraries.Newtonsoft.Json.IArrayPool`1 {
    public abstract virtual T[] Rent(int minimumLength);
    public abstract virtual void Return(T[] array);
}
internal interface Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo {
    public int LineNumber { get; }
    public int LinePosition { get; }
    public abstract virtual int get_LineNumber();
    public abstract virtual int get_LinePosition();
    public abstract virtual bool HasLineInfo();
}
[AttributeUsageAttribute("1028")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.JsonArrayAttribute : JsonContainerAttribute {
    [CompilerGeneratedAttribute]
private bool <AllowNullItems>k__BackingField;
    public bool AllowNullItems { get; public set; }
    public JsonArrayAttribute(bool allowNullItems);
    [NullableContextAttribute("1")]
public JsonArrayAttribute(string id);
    [CompilerGeneratedAttribute]
public bool get_AllowNullItems();
    [CompilerGeneratedAttribute]
public void set_AllowNullItems(bool value);
}
[AttributeUsageAttribute("32")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.JsonConstructorAttribute : Attribute {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1028")]
internal abstract class Elastic.Apm.Libraries.Newtonsoft.Json.JsonContainerAttribute : Attribute {
    internal Nullable`1<bool> _isReference;
    internal Nullable`1<bool> _itemIsReference;
    internal Nullable`1<ReferenceLoopHandling> _itemReferenceLoopHandling;
    internal Nullable`1<TypeNameHandling> _itemTypeNameHandling;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Object[] _namingStrategyParameters;
    private Type _namingStrategyType;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Object[] <ItemConverterParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ItemConverterType>k__BackingField;
    [CompilerGeneratedAttribute]
private NamingStrategy <NamingStrategyInstance>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    public string Description { get; public set; }
    public string Id { get; public set; }
    public bool IsReference { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object[] ItemConverterParameters { get; public set; }
    public Type ItemConverterType { get; public set; }
    public bool ItemIsReference { get; public set; }
    public ReferenceLoopHandling ItemReferenceLoopHandling { get; public set; }
    public TypeNameHandling ItemTypeNameHandling { get; public set; }
    internal NamingStrategy NamingStrategyInstance { get; internal set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object[] NamingStrategyParameters { get; public set; }
    public Type NamingStrategyType { get; public set; }
    public string Title { get; public set; }
    [NullableContextAttribute("1")]
protected JsonContainerAttribute(string id);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    public bool get_IsReference();
    public void set_IsReference(bool value);
    [CompilerGeneratedAttribute]
public Object[] get_ItemConverterParameters();
    [CompilerGeneratedAttribute]
public void set_ItemConverterParameters(Object[] value);
    [CompilerGeneratedAttribute]
public Type get_ItemConverterType();
    [CompilerGeneratedAttribute]
public void set_ItemConverterType(Type value);
    public bool get_ItemIsReference();
    public void set_ItemIsReference(bool value);
    public ReferenceLoopHandling get_ItemReferenceLoopHandling();
    public void set_ItemReferenceLoopHandling(ReferenceLoopHandling value);
    public TypeNameHandling get_ItemTypeNameHandling();
    public void set_ItemTypeNameHandling(TypeNameHandling value);
    [CompilerGeneratedAttribute]
internal NamingStrategy get_NamingStrategyInstance();
    [CompilerGeneratedAttribute]
internal void set_NamingStrategyInstance(NamingStrategy value);
    public Object[] get_NamingStrategyParameters();
    public void set_NamingStrategyParameters(Object[] value);
    public Type get_NamingStrategyType();
    public void set_NamingStrategyType(Type value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.JsonContainerType : Enum {
    public int value__;
    public static JsonContainerType None;
    public static JsonContainerType Object;
    public static JsonContainerType Array;
    public static JsonContainerType Constructor;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.JsonConvert : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private static Func`1<JsonSerializerSettings> <DefaultSettings>k__BackingField;
    public static string True;
    public static string False;
    public static string Null;
    public static string Undefined;
    public static string PositiveInfinity;
    public static string NegativeInfinity;
    public static string NaN;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Func`1<JsonSerializerSettings> DefaultSettings { get; public set; }
    private static JsonConvert();
    [CompilerGeneratedAttribute]
public static Func`1<JsonSerializerSettings> get_DefaultSettings();
    [CompilerGeneratedAttribute]
public static void set_DefaultSettings(Func`1<JsonSerializerSettings> value);
    public static string ToString(DateTime value);
    public static string ToString(DateTime value, DateFormatHandling format, DateTimeZoneHandling timeZoneHandling);
    public static string ToString(DateTimeOffset value);
    public static string ToString(DateTimeOffset value, DateFormatHandling format);
    public static string ToString(bool value);
    public static string ToString(char value);
    public static string ToString(Enum value);
    public static string ToString(int value);
    public static string ToString(short value);
    public static string ToString(ushort value);
    public static string ToString(UInt32 value);
    public static string ToString(long value);
    private static string ToStringInternal(BigInteger value);
    public static string ToString(ulong value);
    public static string ToString(float value);
    internal static string ToString(float value, FloatFormatHandling floatFormatHandling, char quoteChar, bool nullable);
    private static string EnsureFloatFormat(double value, string text, FloatFormatHandling floatFormatHandling, char quoteChar, bool nullable);
    public static string ToString(double value);
    internal static string ToString(double value, FloatFormatHandling floatFormatHandling, char quoteChar, bool nullable);
    private static string EnsureDecimalPlace(double value, string text);
    private static string EnsureDecimalPlace(string text);
    public static string ToString(byte value);
    public static string ToString(sbyte value);
    public static string ToString(decimal value);
    public static string ToString(Guid value);
    internal static string ToString(Guid value, char quoteChar);
    public static string ToString(TimeSpan value);
    internal static string ToString(TimeSpan value, char quoteChar);
    public static string ToString(Uri value);
    internal static string ToString(Uri value, char quoteChar);
    public static string ToString(string value);
    public static string ToString(string value, char delimiter);
    public static string ToString(string value, char delimiter, StringEscapeHandling stringEscapeHandling);
    public static string ToString(object value);
    [DebuggerStepThroughAttribute]
public static string SerializeObject(object value);
    [DebuggerStepThroughAttribute]
public static string SerializeObject(object value, Formatting formatting);
    [DebuggerStepThroughAttribute]
public static string SerializeObject(object value, JsonConverter[] converters);
    [DebuggerStepThroughAttribute]
public static string SerializeObject(object value, Formatting formatting, JsonConverter[] converters);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public static string SerializeObject(object value, JsonSerializerSettings settings);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public static string SerializeObject(object value, Type type, JsonSerializerSettings settings);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public static string SerializeObject(object value, Formatting formatting, JsonSerializerSettings settings);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public static string SerializeObject(object value, Type type, Formatting formatting, JsonSerializerSettings settings);
    private static string SerializeObjectInternal(object value, Type type, JsonSerializer jsonSerializer);
    [DebuggerStepThroughAttribute]
public static object DeserializeObject(string value);
    [DebuggerStepThroughAttribute]
public static object DeserializeObject(string value, JsonSerializerSettings settings);
    [DebuggerStepThroughAttribute]
public static object DeserializeObject(string value, Type type);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public static T DeserializeObject(string value);
    [DebuggerStepThroughAttribute]
public static T DeserializeAnonymousType(string value, T anonymousTypeObject);
    [DebuggerStepThroughAttribute]
public static T DeserializeAnonymousType(string value, T anonymousTypeObject, JsonSerializerSettings settings);
    [DebuggerStepThroughAttribute]
public static T DeserializeObject(string value, JsonConverter[] converters);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public static T DeserializeObject(string value, JsonSerializerSettings settings);
    [DebuggerStepThroughAttribute]
public static object DeserializeObject(string value, Type type, JsonConverter[] converters);
    [NullableContextAttribute("2")]
public static object DeserializeObject(string value, Type type, JsonSerializerSettings settings);
    [DebuggerStepThroughAttribute]
public static void PopulateObject(string value, object target);
    public static void PopulateObject(string value, object target, JsonSerializerSettings settings);
    public static string SerializeXmlNode(XmlNode node);
    public static string SerializeXmlNode(XmlNode node, Formatting formatting);
    public static string SerializeXmlNode(XmlNode node, Formatting formatting, bool omitRootObject);
    public static XmlDocument DeserializeXmlNode(string value);
    [NullableContextAttribute("2")]
public static XmlDocument DeserializeXmlNode(string value, string deserializeRootElementName);
    [NullableContextAttribute("2")]
public static XmlDocument DeserializeXmlNode(string value, string deserializeRootElementName, bool writeArrayAttribute);
    [NullableContextAttribute("2")]
public static XmlDocument DeserializeXmlNode(string value, string deserializeRootElementName, bool writeArrayAttribute, bool encodeSpecialCharacters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter : object {
    public bool CanRead { get; }
    public bool CanWrite { get; }
    public abstract virtual bool CanConvert(Type objectType);
    public abstract virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public abstract virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual bool get_CanRead();
    public virtual bool get_CanWrite();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverter`1 : JsonConverter {
    public abstract virtual T ReadJson(JsonReader reader, Type objectType, T existingValue, bool hasExistingValue, JsonSerializer serializer);
    public abstract virtual void WriteJson(JsonWriter writer, T value, JsonSerializer serializer);
    public sealed virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public sealed virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public sealed virtual bool CanConvert(Type objectType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("3484")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverterAttribute : Attribute {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Object[] <ConverterParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ConverterType>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object[] ConverterParameters { get; }
    public Type ConverterType { get; }
    public JsonConverterAttribute(Type converterType);
    public JsonConverterAttribute(Type converterType, Object[] converterParameters);
    [CompilerGeneratedAttribute]
public Object[] get_ConverterParameters();
    [CompilerGeneratedAttribute]
public Type get_ConverterType();
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.JsonConverterCollection : Collection`1<JsonConverter> {
}
[AttributeUsageAttribute("1028")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.JsonDictionaryAttribute : JsonContainerAttribute {
    [NullableContextAttribute("1")]
public JsonDictionaryAttribute(string id);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.JsonException : Exception {
    public JsonException(string message);
    public JsonException(string message, Exception innerException);
    public JsonException(SerializationInfo info, StreamingContext context);
    internal static JsonException Create(IJsonLineInfo lineInfo, string path, string message);
}
[AttributeUsageAttribute("384")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.JsonExtensionDataAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReadData>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WriteData>k__BackingField;
    public bool ReadData { get; public set; }
    public bool WriteData { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_ReadData();
    [CompilerGeneratedAttribute]
public void set_ReadData(bool value);
    [CompilerGeneratedAttribute]
public bool get_WriteData();
    [CompilerGeneratedAttribute]
public void set_WriteData(bool value);
}
[AttributeUsageAttribute("384")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.JsonIgnoreAttribute : Attribute {
}
internal abstract class Elastic.Apm.Libraries.Newtonsoft.Json.JsonNameTable : object {
    [NullableContextAttribute("1")]
public abstract virtual string Get(Char[] key, int start, int length);
}
[AttributeUsageAttribute("1036")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.JsonObjectAttribute : JsonContainerAttribute {
    internal Nullable`1<NullValueHandling> _itemNullValueHandling;
    internal Nullable`1<Required> _itemRequired;
    internal Nullable`1<MissingMemberHandling> _missingMemberHandling;
    [CompilerGeneratedAttribute]
private MemberSerialization <MemberSerialization>k__BackingField;
    public NullValueHandling ItemNullValueHandling { get; public set; }
    public Required ItemRequired { get; public set; }
    public MemberSerialization MemberSerialization { get; public set; }
    public MissingMemberHandling MissingMemberHandling { get; public set; }
    public JsonObjectAttribute(MemberSerialization memberSerialization);
    [NullableContextAttribute("1")]
public JsonObjectAttribute(string id);
    public NullValueHandling get_ItemNullValueHandling();
    public void set_ItemNullValueHandling(NullValueHandling value);
    public Required get_ItemRequired();
    public void set_ItemRequired(Required value);
    [CompilerGeneratedAttribute]
public MemberSerialization get_MemberSerialization();
    [CompilerGeneratedAttribute]
public void set_MemberSerialization(MemberSerialization value);
    public MissingMemberHandling get_MissingMemberHandling();
    public void set_MissingMemberHandling(MissingMemberHandling value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.JsonPosition : ValueType {
    private static Char[] SpecialCharacters;
    internal JsonContainerType Type;
    internal int Position;
    [NullableAttribute("2")]
internal string PropertyName;
    internal bool HasIndex;
    public JsonPosition(JsonContainerType type);
    private static JsonPosition();
    internal int CalculateLength();
    [NullableContextAttribute("2")]
internal void WriteTo(StringBuilder sb, StringWriter& writer, Char[]& buffer);
    internal static bool TypeHasIndex(JsonContainerType type);
    internal static string BuildPath(List`1<JsonPosition> positions, Nullable`1<JsonPosition> currentPosition);
    internal static string FormatMessage(IJsonLineInfo lineInfo, string path, string message);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2432")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.JsonPropertyAttribute : Attribute {
    internal Nullable`1<DefaultValueHandling> _defaultValueHandling;
    internal Nullable`1<bool> _isReference;
    internal Nullable`1<bool> _itemIsReference;
    internal Nullable`1<ReferenceLoopHandling> _itemReferenceLoopHandling;
    internal Nullable`1<TypeNameHandling> _itemTypeNameHandling;
    internal Nullable`1<NullValueHandling> _nullValueHandling;
    internal Nullable`1<ObjectCreationHandling> _objectCreationHandling;
    internal Nullable`1<int> _order;
    internal Nullable`1<ReferenceLoopHandling> _referenceLoopHandling;
    internal Nullable`1<Required> _required;
    internal Nullable`1<TypeNameHandling> _typeNameHandling;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Object[] <ItemConverterParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ItemConverterType>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Object[] <NamingStrategyParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <NamingStrategyType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    public DefaultValueHandling DefaultValueHandling { get; public set; }
    public bool IsReference { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object[] ItemConverterParameters { get; public set; }
    public Type ItemConverterType { get; public set; }
    public bool ItemIsReference { get; public set; }
    public ReferenceLoopHandling ItemReferenceLoopHandling { get; public set; }
    public TypeNameHandling ItemTypeNameHandling { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object[] NamingStrategyParameters { get; public set; }
    public Type NamingStrategyType { get; public set; }
    public NullValueHandling NullValueHandling { get; public set; }
    public ObjectCreationHandling ObjectCreationHandling { get; public set; }
    public int Order { get; public set; }
    public string PropertyName { get; public set; }
    public ReferenceLoopHandling ReferenceLoopHandling { get; public set; }
    public Required Required { get; public set; }
    public TypeNameHandling TypeNameHandling { get; public set; }
    [NullableContextAttribute("1")]
public JsonPropertyAttribute(string propertyName);
    public DefaultValueHandling get_DefaultValueHandling();
    public void set_DefaultValueHandling(DefaultValueHandling value);
    public bool get_IsReference();
    public void set_IsReference(bool value);
    [CompilerGeneratedAttribute]
public Object[] get_ItemConverterParameters();
    [CompilerGeneratedAttribute]
public void set_ItemConverterParameters(Object[] value);
    [CompilerGeneratedAttribute]
public Type get_ItemConverterType();
    [CompilerGeneratedAttribute]
public void set_ItemConverterType(Type value);
    public bool get_ItemIsReference();
    public void set_ItemIsReference(bool value);
    public ReferenceLoopHandling get_ItemReferenceLoopHandling();
    public void set_ItemReferenceLoopHandling(ReferenceLoopHandling value);
    public TypeNameHandling get_ItemTypeNameHandling();
    public void set_ItemTypeNameHandling(TypeNameHandling value);
    [CompilerGeneratedAttribute]
public Object[] get_NamingStrategyParameters();
    [CompilerGeneratedAttribute]
public void set_NamingStrategyParameters(Object[] value);
    [CompilerGeneratedAttribute]
public Type get_NamingStrategyType();
    [CompilerGeneratedAttribute]
public void set_NamingStrategyType(Type value);
    public NullValueHandling get_NullValueHandling();
    public void set_NullValueHandling(NullValueHandling value);
    public ObjectCreationHandling get_ObjectCreationHandling();
    public void set_ObjectCreationHandling(ObjectCreationHandling value);
    public int get_Order();
    public void set_Order(int value);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public void set_PropertyName(string value);
    public ReferenceLoopHandling get_ReferenceLoopHandling();
    public void set_ReferenceLoopHandling(ReferenceLoopHandling value);
    public Required get_Required();
    public void set_Required(Required value);
    public TypeNameHandling get_TypeNameHandling();
    public void set_TypeNameHandling(TypeNameHandling value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal abstract class Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader : object {
    private JsonToken _tokenType;
    private object _value;
    internal char _quoteChar;
    internal State _currentState;
    private JsonPosition _currentPosition;
    private CultureInfo _culture;
    private DateTimeZoneHandling _dateTimeZoneHandling;
    private Nullable`1<int> _maxDepth;
    private bool _hasExceededMaxDepth;
    internal DateParseHandling _dateParseHandling;
    internal FloatParseHandling _floatParseHandling;
    private List`1<JsonPosition> _stack;
    [CompilerGeneratedAttribute]
private bool <CloseInput>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportMultipleContent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DateFormatString>k__BackingField;
    protected State CurrentState { get; }
    public bool CloseInput { get; public set; }
    public bool SupportMultipleContent { get; public set; }
    public char QuoteChar { get; protected internal set; }
    public DateTimeZoneHandling DateTimeZoneHandling { get; public set; }
    public DateParseHandling DateParseHandling { get; public set; }
    public FloatParseHandling FloatParseHandling { get; public set; }
    public string DateFormatString { get; public set; }
    public Nullable`1<int> MaxDepth { get; public set; }
    public JsonToken TokenType { get; }
    public object Value { get; }
    public Type ValueType { get; }
    public int Depth { get; }
    [NullableAttribute("1")]
public string Path { get; }
    [NullableAttribute("1")]
public CultureInfo Culture { get; public set; }
    [NullableContextAttribute("1")]
public virtual Task`1<bool> ReadAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader/<SkipAsync>d__1")]
public Task SkipAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader/<ReaderReadAndAssertAsync>d__2")]
internal Task ReaderReadAndAssertAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
public virtual Task`1<Nullable`1<bool>> ReadAsBooleanAsync(CancellationToken cancellationToken);
    public virtual Task`1<Byte[]> ReadAsBytesAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader/<ReadArrayIntoByteArrayAsync>d__5")]
internal Task`1<Byte[]> ReadArrayIntoByteArrayAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
public virtual Task`1<Nullable`1<DateTime>> ReadAsDateTimeAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
public virtual Task`1<Nullable`1<DateTimeOffset>> ReadAsDateTimeOffsetAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
public virtual Task`1<Nullable`1<decimal>> ReadAsDecimalAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
public virtual Task`1<Nullable`1<double>> ReadAsDoubleAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
public virtual Task`1<Nullable`1<int>> ReadAsInt32Async(CancellationToken cancellationToken);
    public virtual Task`1<string> ReadAsStringAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader/<ReadAndMoveToContentAsync>d__12")]
internal Task`1<bool> ReadAndMoveToContentAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
internal Task`1<bool> MoveToContentAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonReader/<MoveToContentFromNonContentAsync>d__14")]
private Task`1<bool> MoveToContentFromNonContentAsync(CancellationToken cancellationToken);
    protected State get_CurrentState();
    [CompilerGeneratedAttribute]
public bool get_CloseInput();
    [CompilerGeneratedAttribute]
public void set_CloseInput(bool value);
    [CompilerGeneratedAttribute]
public bool get_SupportMultipleContent();
    [CompilerGeneratedAttribute]
public void set_SupportMultipleContent(bool value);
    public virtual char get_QuoteChar();
    protected internal virtual void set_QuoteChar(char value);
    public DateTimeZoneHandling get_DateTimeZoneHandling();
    public void set_DateTimeZoneHandling(DateTimeZoneHandling value);
    public DateParseHandling get_DateParseHandling();
    public void set_DateParseHandling(DateParseHandling value);
    public FloatParseHandling get_FloatParseHandling();
    public void set_FloatParseHandling(FloatParseHandling value);
    [CompilerGeneratedAttribute]
public string get_DateFormatString();
    [CompilerGeneratedAttribute]
public void set_DateFormatString(string value);
    public Nullable`1<int> get_MaxDepth();
    public void set_MaxDepth(Nullable`1<int> value);
    public virtual JsonToken get_TokenType();
    public virtual object get_Value();
    public virtual Type get_ValueType();
    public virtual int get_Depth();
    [NullableContextAttribute("1")]
public virtual string get_Path();
    [NullableContextAttribute("1")]
public CultureInfo get_Culture();
    [NullableContextAttribute("1")]
public void set_Culture(CultureInfo value);
    internal JsonPosition GetPosition(int depth);
    private void Push(JsonContainerType value);
    private JsonContainerType Pop();
    private JsonContainerType Peek();
    public abstract virtual bool Read();
    public virtual Nullable`1<int> ReadAsInt32();
    internal Nullable`1<int> ReadInt32String(string s);
    public virtual string ReadAsString();
    public virtual Byte[] ReadAsBytes();
    [NullableContextAttribute("1")]
internal Byte[] ReadArrayIntoByteArray();
    [NullableContextAttribute("1")]
private bool ReadArrayElementIntoByteArrayReportDone(List`1<byte> buffer);
    public virtual Nullable`1<double> ReadAsDouble();
    internal Nullable`1<double> ReadDoubleString(string s);
    public virtual Nullable`1<bool> ReadAsBoolean();
    internal Nullable`1<bool> ReadBooleanString(string s);
    public virtual Nullable`1<decimal> ReadAsDecimal();
    internal Nullable`1<decimal> ReadDecimalString(string s);
    public virtual Nullable`1<DateTime> ReadAsDateTime();
    internal Nullable`1<DateTime> ReadDateTimeString(string s);
    public virtual Nullable`1<DateTimeOffset> ReadAsDateTimeOffset();
    internal Nullable`1<DateTimeOffset> ReadDateTimeOffsetString(string s);
    internal void ReaderReadAndAssert();
    [NullableContextAttribute("1")]
internal JsonReaderException CreateUnexpectedEndException();
    internal void ReadIntoWrappedTypeObject();
    public void Skip();
    protected void SetToken(JsonToken newToken);
    protected void SetToken(JsonToken newToken, object value);
    protected void SetToken(JsonToken newToken, object value, bool updateIndex);
    internal void SetPostValueState(bool updateIndex);
    private void UpdateScopeWithFinishedValue();
    private void ValidateEnd(JsonToken endToken);
    protected void SetStateBasedOnCurrent();
    private void SetFinished();
    private JsonContainerType GetTypeForCloseToken(JsonToken token);
    private sealed virtual override void System.IDisposable.Dispose();
    protected virtual void Dispose(bool disposing);
    public virtual void Close();
    internal void ReadAndAssert();
    internal void ReadForTypeAndAssert(JsonContract contract, bool hasConverter);
    internal bool ReadForType(JsonContract contract, bool hasConverter);
    internal bool ReadAndMoveToContent();
    internal bool MoveToContent();
    private JsonToken GetContentToken();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.JsonReaderException : JsonException {
    [CompilerGeneratedAttribute]
private int <LineNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LinePosition>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    public int LineNumber { get; }
    public int LinePosition { get; }
    [NullableAttribute("2")]
public string Path { get; }
    public JsonReaderException(string message);
    public JsonReaderException(string message, Exception innerException);
    public JsonReaderException(SerializationInfo info, StreamingContext context);
    public JsonReaderException(string message, string path, int lineNumber, int linePosition, Exception innerException);
    [CompilerGeneratedAttribute]
public int get_LineNumber();
    [CompilerGeneratedAttribute]
public int get_LinePosition();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Path();
    internal static JsonReaderException Create(JsonReader reader, string message);
    internal static JsonReaderException Create(JsonReader reader, string message, Exception ex);
    internal static JsonReaderException Create(IJsonLineInfo lineInfo, string path, string message, Exception ex);
}
[AttributeUsageAttribute("384")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.JsonRequiredAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializationException : JsonException {
    [CompilerGeneratedAttribute]
private int <LineNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LinePosition>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    public int LineNumber { get; }
    public int LinePosition { get; }
    [NullableAttribute("2")]
public string Path { get; }
    public JsonSerializationException(string message);
    public JsonSerializationException(string message, Exception innerException);
    public JsonSerializationException(SerializationInfo info, StreamingContext context);
    public JsonSerializationException(string message, string path, int lineNumber, int linePosition, Exception innerException);
    [CompilerGeneratedAttribute]
public int get_LineNumber();
    [CompilerGeneratedAttribute]
public int get_LinePosition();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Path();
    internal static JsonSerializationException Create(JsonReader reader, string message);
    internal static JsonSerializationException Create(JsonReader reader, string message, Exception ex);
    internal static JsonSerializationException Create(IJsonLineInfo lineInfo, string path, string message, Exception ex);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializer : object {
    private Nullable`1<bool> _checkAdditionalContent;
    internal ConstructorHandling _constructorHandling;
    internal StreamingContext _context;
    internal IContractResolver _contractResolver;
    [NullableAttribute("2")]
internal JsonConverterCollection _converters;
    private CultureInfo _culture;
    private Nullable`1<DateFormatHandling> _dateFormatHandling;
    [NullableAttribute("2")]
private string _dateFormatString;
    private bool _dateFormatStringSet;
    private Nullable`1<DateParseHandling> _dateParseHandling;
    private Nullable`1<DateTimeZoneHandling> _dateTimeZoneHandling;
    internal DefaultValueHandling _defaultValueHandling;
    [NullableAttribute("2")]
internal IEqualityComparer _equalityComparer;
    private Nullable`1<FloatFormatHandling> _floatFormatHandling;
    private Nullable`1<FloatParseHandling> _floatParseHandling;
    private Nullable`1<Formatting> _formatting;
    private Nullable`1<int> _maxDepth;
    private bool _maxDepthSet;
    internal MetadataPropertyHandling _metadataPropertyHandling;
    internal MissingMemberHandling _missingMemberHandling;
    internal NullValueHandling _nullValueHandling;
    internal ObjectCreationHandling _objectCreationHandling;
    internal PreserveReferencesHandling _preserveReferencesHandling;
    internal ReferenceLoopHandling _referenceLoopHandling;
    [NullableAttribute("2")]
private IReferenceResolver _referenceResolver;
    internal ISerializationBinder _serializationBinder;
    private Nullable`1<StringEscapeHandling> _stringEscapeHandling;
    [NullableAttribute("2")]
internal ITraceWriter _traceWriter;
    internal TypeNameAssemblyFormatHandling _typeNameAssemblyFormatHandling;
    internal TypeNameHandling _typeNameHandling;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EventHandler`1<ErrorEventArgs> Error;
    [ObsoleteAttribute("Binder is obsolete. Use SerializationBinder instead.")]
public SerializationBinder Binder { get; public set; }
    public bool CheckAdditionalContent { get; public set; }
    public ConstructorHandling ConstructorHandling { get; public set; }
    public StreamingContext Context { get; public set; }
    public IContractResolver ContractResolver { get; public set; }
    public JsonConverterCollection Converters { get; }
    public CultureInfo Culture { get; public set; }
    public DateFormatHandling DateFormatHandling { get; public set; }
    public string DateFormatString { get; public set; }
    public DateParseHandling DateParseHandling { get; public set; }
    public DateTimeZoneHandling DateTimeZoneHandling { get; public set; }
    public DefaultValueHandling DefaultValueHandling { get; public set; }
    [NullableAttribute("2")]
public IEqualityComparer EqualityComparer { get; public set; }
    public FloatFormatHandling FloatFormatHandling { get; public set; }
    public FloatParseHandling FloatParseHandling { get; public set; }
    public Formatting Formatting { get; public set; }
    public Nullable`1<int> MaxDepth { get; public set; }
    public MetadataPropertyHandling MetadataPropertyHandling { get; public set; }
    public MissingMemberHandling MissingMemberHandling { get; public set; }
    public NullValueHandling NullValueHandling { get; public set; }
    public ObjectCreationHandling ObjectCreationHandling { get; public set; }
    public PreserveReferencesHandling PreserveReferencesHandling { get; public set; }
    public ReferenceLoopHandling ReferenceLoopHandling { get; public set; }
    [NullableAttribute("2")]
public IReferenceResolver ReferenceResolver { get; public set; }
    public ISerializationBinder SerializationBinder { get; public set; }
    public StringEscapeHandling StringEscapeHandling { get; public set; }
    [NullableAttribute("2")]
public ITraceWriter TraceWriter { get; public set; }
    [ObsoleteAttribute("TypeNameAssemblyFormat is obsolete. Use TypeNameAssemblyFormatHandling instead.")]
public FormatterAssemblyStyle TypeNameAssemblyFormat { get; public set; }
    public TypeNameAssemblyFormatHandling TypeNameAssemblyFormatHandling { get; public set; }
    public TypeNameHandling TypeNameHandling { get; public set; }
    public virtual SerializationBinder get_Binder();
    public virtual void set_Binder(SerializationBinder value);
    public virtual bool get_CheckAdditionalContent();
    public virtual void set_CheckAdditionalContent(bool value);
    public virtual ConstructorHandling get_ConstructorHandling();
    public virtual void set_ConstructorHandling(ConstructorHandling value);
    public virtual StreamingContext get_Context();
    public virtual void set_Context(StreamingContext value);
    public virtual IContractResolver get_ContractResolver();
    public virtual void set_ContractResolver(IContractResolver value);
    public virtual JsonConverterCollection get_Converters();
    public virtual CultureInfo get_Culture();
    public virtual void set_Culture(CultureInfo value);
    public virtual DateFormatHandling get_DateFormatHandling();
    public virtual void set_DateFormatHandling(DateFormatHandling value);
    public virtual string get_DateFormatString();
    public virtual void set_DateFormatString(string value);
    public virtual DateParseHandling get_DateParseHandling();
    public virtual void set_DateParseHandling(DateParseHandling value);
    public virtual DateTimeZoneHandling get_DateTimeZoneHandling();
    public virtual void set_DateTimeZoneHandling(DateTimeZoneHandling value);
    public virtual DefaultValueHandling get_DefaultValueHandling();
    public virtual void set_DefaultValueHandling(DefaultValueHandling value);
    [NullableContextAttribute("2")]
public virtual IEqualityComparer get_EqualityComparer();
    [NullableContextAttribute("2")]
public virtual void set_EqualityComparer(IEqualityComparer value);
    public virtual FloatFormatHandling get_FloatFormatHandling();
    public virtual void set_FloatFormatHandling(FloatFormatHandling value);
    public virtual FloatParseHandling get_FloatParseHandling();
    public virtual void set_FloatParseHandling(FloatParseHandling value);
    public virtual Formatting get_Formatting();
    public virtual void set_Formatting(Formatting value);
    public virtual Nullable`1<int> get_MaxDepth();
    public virtual void set_MaxDepth(Nullable`1<int> value);
    public virtual MetadataPropertyHandling get_MetadataPropertyHandling();
    public virtual void set_MetadataPropertyHandling(MetadataPropertyHandling value);
    public virtual MissingMemberHandling get_MissingMemberHandling();
    public virtual void set_MissingMemberHandling(MissingMemberHandling value);
    public virtual NullValueHandling get_NullValueHandling();
    public virtual void set_NullValueHandling(NullValueHandling value);
    public virtual ObjectCreationHandling get_ObjectCreationHandling();
    public virtual void set_ObjectCreationHandling(ObjectCreationHandling value);
    public virtual PreserveReferencesHandling get_PreserveReferencesHandling();
    public virtual void set_PreserveReferencesHandling(PreserveReferencesHandling value);
    public virtual ReferenceLoopHandling get_ReferenceLoopHandling();
    public virtual void set_ReferenceLoopHandling(ReferenceLoopHandling value);
    [NullableContextAttribute("2")]
public virtual IReferenceResolver get_ReferenceResolver();
    [NullableContextAttribute("2")]
public virtual void set_ReferenceResolver(IReferenceResolver value);
    public virtual ISerializationBinder get_SerializationBinder();
    public virtual void set_SerializationBinder(ISerializationBinder value);
    public virtual StringEscapeHandling get_StringEscapeHandling();
    public virtual void set_StringEscapeHandling(StringEscapeHandling value);
    [NullableContextAttribute("2")]
public virtual ITraceWriter get_TraceWriter();
    [NullableContextAttribute("2")]
public virtual void set_TraceWriter(ITraceWriter value);
    public virtual FormatterAssemblyStyle get_TypeNameAssemblyFormat();
    public virtual void set_TypeNameAssemblyFormat(FormatterAssemblyStyle value);
    public virtual TypeNameAssemblyFormatHandling get_TypeNameAssemblyFormatHandling();
    public virtual void set_TypeNameAssemblyFormatHandling(TypeNameAssemblyFormatHandling value);
    public virtual TypeNameHandling get_TypeNameHandling();
    public virtual void set_TypeNameHandling(TypeNameHandling value);
    [CompilerGeneratedAttribute]
public virtual void add_Error(EventHandler`1<ErrorEventArgs> value);
    [CompilerGeneratedAttribute]
public virtual void remove_Error(EventHandler`1<ErrorEventArgs> value);
    internal bool IsCheckAdditionalContentSet();
    public static JsonSerializer Create();
    public static JsonSerializer Create(JsonSerializerSettings settings);
    public static JsonSerializer CreateDefault();
    public static JsonSerializer CreateDefault(JsonSerializerSettings settings);
    private static void ApplySerializerSettings(JsonSerializer serializer, JsonSerializerSettings settings);
    [DebuggerStepThroughAttribute]
public void Populate(TextReader reader, object target);
    [DebuggerStepThroughAttribute]
public void Populate(JsonReader reader, object target);
    internal virtual void PopulateInternal(JsonReader reader, object target);
    [DebuggerStepThroughAttribute]
public object Deserialize(JsonReader reader);
    [DebuggerStepThroughAttribute]
public object Deserialize(TextReader reader, Type objectType);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public T Deserialize(JsonReader reader);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public object Deserialize(JsonReader reader, Type objectType);
    [NullableContextAttribute("2")]
internal virtual object DeserializeInternal(JsonReader reader, Type objectType);
    [NullableContextAttribute("2")]
private void SetupReader(JsonReader reader, CultureInfo& previousCulture, Nullable`1& previousDateTimeZoneHandling, Nullable`1& previousDateParseHandling, Nullable`1& previousFloatParseHandling, Nullable`1& previousMaxDepth, String& previousDateFormatString);
    [NullableContextAttribute("2")]
private void ResetReader(JsonReader reader, CultureInfo previousCulture, Nullable`1<DateTimeZoneHandling> previousDateTimeZoneHandling, Nullable`1<DateParseHandling> previousDateParseHandling, Nullable`1<FloatParseHandling> previousFloatParseHandling, Nullable`1<int> previousMaxDepth, string previousDateFormatString);
    public void Serialize(TextWriter textWriter, object value);
    [NullableContextAttribute("2")]
public void Serialize(JsonWriter jsonWriter, object value, Type objectType);
    public void Serialize(TextWriter textWriter, object value, Type objectType);
    public void Serialize(JsonWriter jsonWriter, object value);
    private TraceJsonReader CreateTraceJsonReader(JsonReader reader);
    [NullableContextAttribute("2")]
internal virtual void SerializeInternal(JsonWriter jsonWriter, object value, Type objectType);
    internal IReferenceResolver GetReferenceResolver();
    internal JsonConverter GetMatchingConverter(Type type);
    internal static JsonConverter GetMatchingConverter(IList`1<JsonConverter> converters, Type objectType);
    internal void OnError(ErrorEventArgs e);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.JsonSerializerSettings : object {
    internal static bool DefaultCheckAdditionalContent;
    internal static ConstructorHandling DefaultConstructorHandling;
    internal static DateFormatHandling DefaultDateFormatHandling;
    [NullableAttribute("1")]
internal static string DefaultDateFormatString;
    internal static DateParseHandling DefaultDateParseHandling;
    internal static DateTimeZoneHandling DefaultDateTimeZoneHandling;
    internal static DefaultValueHandling DefaultDefaultValueHandling;
    internal static FloatFormatHandling DefaultFloatFormatHandling;
    internal static FloatParseHandling DefaultFloatParseHandling;
    internal static Formatting DefaultFormatting;
    internal static int DefaultMaxDepth;
    internal static MetadataPropertyHandling DefaultMetadataPropertyHandling;
    internal static MissingMemberHandling DefaultMissingMemberHandling;
    internal static NullValueHandling DefaultNullValueHandling;
    internal static ObjectCreationHandling DefaultObjectCreationHandling;
    internal static PreserveReferencesHandling DefaultPreserveReferencesHandling;
    internal static ReferenceLoopHandling DefaultReferenceLoopHandling;
    internal static StringEscapeHandling DefaultStringEscapeHandling;
    internal static TypeNameAssemblyFormatHandling DefaultTypeNameAssemblyFormatHandling;
    internal static TypeNameHandling DefaultTypeNameHandling;
    internal static StreamingContext DefaultContext;
    [NullableAttribute("1")]
internal static CultureInfo DefaultCulture;
    internal Nullable`1<bool> _checkAdditionalContent;
    internal Nullable`1<ConstructorHandling> _constructorHandling;
    internal Nullable`1<StreamingContext> _context;
    internal CultureInfo _culture;
    internal Nullable`1<DateFormatHandling> _dateFormatHandling;
    internal string _dateFormatString;
    internal bool _dateFormatStringSet;
    internal Nullable`1<DateParseHandling> _dateParseHandling;
    internal Nullable`1<DateTimeZoneHandling> _dateTimeZoneHandling;
    internal Nullable`1<DefaultValueHandling> _defaultValueHandling;
    internal Nullable`1<FloatFormatHandling> _floatFormatHandling;
    internal Nullable`1<FloatParseHandling> _floatParseHandling;
    internal Nullable`1<Formatting> _formatting;
    internal Nullable`1<int> _maxDepth;
    internal bool _maxDepthSet;
    internal Nullable`1<MetadataPropertyHandling> _metadataPropertyHandling;
    internal Nullable`1<MissingMemberHandling> _missingMemberHandling;
    internal Nullable`1<NullValueHandling> _nullValueHandling;
    internal Nullable`1<ObjectCreationHandling> _objectCreationHandling;
    internal Nullable`1<PreserveReferencesHandling> _preserveReferencesHandling;
    internal Nullable`1<ReferenceLoopHandling> _referenceLoopHandling;
    internal Nullable`1<StringEscapeHandling> _stringEscapeHandling;
    internal Nullable`1<TypeNameAssemblyFormatHandling> _typeNameAssemblyFormatHandling;
    internal Nullable`1<TypeNameHandling> _typeNameHandling;
    [CompilerGeneratedAttribute]
private IContractResolver <ContractResolver>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IList`1<JsonConverter> <Converters>k__BackingField;
    [CompilerGeneratedAttribute]
private IEqualityComparer <EqualityComparer>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EventHandler`1<ErrorEventArgs> <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<IReferenceResolver> <ReferenceResolverProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private ISerializationBinder <SerializationBinder>k__BackingField;
    [CompilerGeneratedAttribute]
private ITraceWriter <TraceWriter>k__BackingField;
    [ObsoleteAttribute("Binder is obsolete. Use SerializationBinder instead.")]
public SerializationBinder Binder { get; public set; }
    public bool CheckAdditionalContent { get; public set; }
    public ConstructorHandling ConstructorHandling { get; public set; }
    public StreamingContext Context { get; public set; }
    public IContractResolver ContractResolver { get; public set; }
    [NullableAttribute("1")]
public IList`1<JsonConverter> Converters { get; public set; }
    [NullableAttribute("1")]
public CultureInfo Culture { get; public set; }
    public DateFormatHandling DateFormatHandling { get; public set; }
    [NullableAttribute("1")]
public string DateFormatString { get; public set; }
    public DateParseHandling DateParseHandling { get; public set; }
    public DateTimeZoneHandling DateTimeZoneHandling { get; public set; }
    public DefaultValueHandling DefaultValueHandling { get; public set; }
    public IEqualityComparer EqualityComparer { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EventHandler`1<ErrorEventArgs> Error { get; public set; }
    public FloatFormatHandling FloatFormatHandling { get; public set; }
    public FloatParseHandling FloatParseHandling { get; public set; }
    public Formatting Formatting { get; public set; }
    public Nullable`1<int> MaxDepth { get; public set; }
    public MetadataPropertyHandling MetadataPropertyHandling { get; public set; }
    public MissingMemberHandling MissingMemberHandling { get; public set; }
    public NullValueHandling NullValueHandling { get; public set; }
    public ObjectCreationHandling ObjectCreationHandling { get; public set; }
    public PreserveReferencesHandling PreserveReferencesHandling { get; public set; }
    public ReferenceLoopHandling ReferenceLoopHandling { get; public set; }
    [ObsoleteAttribute("ReferenceResolver property is obsolete. Use the ReferenceResolverProvider property to set the IReferenceResolver: settings.ReferenceResolverProvider = () => resolver")]
public IReferenceResolver ReferenceResolver { get; public set; }
    public Func`1<IReferenceResolver> ReferenceResolverProvider { get; public set; }
    public ISerializationBinder SerializationBinder { get; public set; }
    public StringEscapeHandling StringEscapeHandling { get; public set; }
    public ITraceWriter TraceWriter { get; public set; }
    [ObsoleteAttribute("TypeNameAssemblyFormat is obsolete. Use TypeNameAssemblyFormatHandling instead.")]
public FormatterAssemblyStyle TypeNameAssemblyFormat { get; public set; }
    public TypeNameAssemblyFormatHandling TypeNameAssemblyFormatHandling { get; public set; }
    public TypeNameHandling TypeNameHandling { get; public set; }
    private static JsonSerializerSettings();
    public SerializationBinder get_Binder();
    public void set_Binder(SerializationBinder value);
    public bool get_CheckAdditionalContent();
    public void set_CheckAdditionalContent(bool value);
    public ConstructorHandling get_ConstructorHandling();
    public void set_ConstructorHandling(ConstructorHandling value);
    public StreamingContext get_Context();
    public void set_Context(StreamingContext value);
    [CompilerGeneratedAttribute]
public IContractResolver get_ContractResolver();
    [CompilerGeneratedAttribute]
public void set_ContractResolver(IContractResolver value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IList`1<JsonConverter> get_Converters();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Converters(IList`1<JsonConverter> value);
    [NullableContextAttribute("1")]
public CultureInfo get_Culture();
    [NullableContextAttribute("1")]
public void set_Culture(CultureInfo value);
    public DateFormatHandling get_DateFormatHandling();
    public void set_DateFormatHandling(DateFormatHandling value);
    [NullableContextAttribute("1")]
public string get_DateFormatString();
    [NullableContextAttribute("1")]
public void set_DateFormatString(string value);
    public DateParseHandling get_DateParseHandling();
    public void set_DateParseHandling(DateParseHandling value);
    public DateTimeZoneHandling get_DateTimeZoneHandling();
    public void set_DateTimeZoneHandling(DateTimeZoneHandling value);
    public DefaultValueHandling get_DefaultValueHandling();
    public void set_DefaultValueHandling(DefaultValueHandling value);
    [CompilerGeneratedAttribute]
public IEqualityComparer get_EqualityComparer();
    [CompilerGeneratedAttribute]
public void set_EqualityComparer(IEqualityComparer value);
    [CompilerGeneratedAttribute]
public EventHandler`1<ErrorEventArgs> get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(EventHandler`1<ErrorEventArgs> value);
    public FloatFormatHandling get_FloatFormatHandling();
    public void set_FloatFormatHandling(FloatFormatHandling value);
    public FloatParseHandling get_FloatParseHandling();
    public void set_FloatParseHandling(FloatParseHandling value);
    public Formatting get_Formatting();
    public void set_Formatting(Formatting value);
    public Nullable`1<int> get_MaxDepth();
    public void set_MaxDepth(Nullable`1<int> value);
    public MetadataPropertyHandling get_MetadataPropertyHandling();
    public void set_MetadataPropertyHandling(MetadataPropertyHandling value);
    public MissingMemberHandling get_MissingMemberHandling();
    public void set_MissingMemberHandling(MissingMemberHandling value);
    public NullValueHandling get_NullValueHandling();
    public void set_NullValueHandling(NullValueHandling value);
    public ObjectCreationHandling get_ObjectCreationHandling();
    public void set_ObjectCreationHandling(ObjectCreationHandling value);
    public PreserveReferencesHandling get_PreserveReferencesHandling();
    public void set_PreserveReferencesHandling(PreserveReferencesHandling value);
    public ReferenceLoopHandling get_ReferenceLoopHandling();
    public void set_ReferenceLoopHandling(ReferenceLoopHandling value);
    public IReferenceResolver get_ReferenceResolver();
    public void set_ReferenceResolver(IReferenceResolver value);
    [CompilerGeneratedAttribute]
public Func`1<IReferenceResolver> get_ReferenceResolverProvider();
    [CompilerGeneratedAttribute]
public void set_ReferenceResolverProvider(Func`1<IReferenceResolver> value);
    [CompilerGeneratedAttribute]
public ISerializationBinder get_SerializationBinder();
    [CompilerGeneratedAttribute]
public void set_SerializationBinder(ISerializationBinder value);
    public StringEscapeHandling get_StringEscapeHandling();
    public void set_StringEscapeHandling(StringEscapeHandling value);
    [CompilerGeneratedAttribute]
public ITraceWriter get_TraceWriter();
    [CompilerGeneratedAttribute]
public void set_TraceWriter(ITraceWriter value);
    public FormatterAssemblyStyle get_TypeNameAssemblyFormat();
    public void set_TypeNameAssemblyFormat(FormatterAssemblyStyle value);
    public TypeNameAssemblyFormatHandling get_TypeNameAssemblyFormatHandling();
    public void set_TypeNameAssemblyFormatHandling(TypeNameAssemblyFormatHandling value);
    public TypeNameHandling get_TypeNameHandling();
    public void set_TypeNameHandling(TypeNameHandling value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader : JsonReader {
    private bool _safeAsync;
    private static char UnicodeReplacementChar;
    private static int MaximumJavascriptIntegerCharacterLength;
    private static int LargeBufferLength;
    private TextReader _reader;
    private int _charsUsed;
    private int _lineStartPos;
    private int _lineNumber;
    private bool _isEndOfFile;
    private StringBuffer _stringBuffer;
    private StringReference _stringReference;
    [NullableAttribute("2")]
private IArrayPool`1<char> _arrayPool;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Char[] <CharBuffer>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CharPos>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JsonNameTable <PropertyNameTable>k__BackingField;
    [NullableAttribute("2")]
internal Char[] CharBuffer { get; internal set; }
    internal int CharPos { get; private set; }
    [NullableAttribute("2")]
public JsonNameTable PropertyNameTable { get; public set; }
    [NullableAttribute("2")]
public IArrayPool`1<char> ArrayPool { get; public set; }
    public int LineNumber { get; }
    public int LinePosition { get; }
    public JsonTextReader(TextReader reader);
    public virtual Task`1<bool> ReadAsync(CancellationToken cancellationToken);
    internal Task`1<bool> DoReadAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<DoReadAsync>d__3")]
private Task`1<bool> DoReadAsync(Task`1<bool> task, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ParsePostValueAsync>d__4")]
private Task`1<bool> ParsePostValueAsync(bool ignoreComments, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ReadFromFinishedAsync>d__5")]
private Task`1<bool> ReadFromFinishedAsync(CancellationToken cancellationToken);
    private Task`1<int> ReadDataAsync(bool append, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ReadDataAsync>d__7")]
private Task`1<int> ReadDataAsync(bool append, int charsRequired, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ParseValueAsync>d__8")]
private Task`1<bool> ParseValueAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ReadStringIntoBufferAsync>d__9")]
private Task ReadStringIntoBufferAsync(char quote, CancellationToken cancellationToken);
    private Task ProcessCarriageReturnAsync(bool append, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ProcessCarriageReturnAsync>d__11")]
private Task ProcessCarriageReturnAsync(Task`1<bool> task);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ParseUnicodeAsync>d__12")]
private Task`1<char> ParseUnicodeAsync(CancellationToken cancellationToken);
    private Task`1<bool> EnsureCharsAsync(int relativePosition, bool append, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ReadCharsAsync>d__14")]
private Task`1<bool> ReadCharsAsync(int relativePosition, bool append, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ParseObjectAsync>d__15")]
private Task`1<bool> ParseObjectAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ParseCommentAsync>d__16")]
private Task ParseCommentAsync(bool setToken, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<EatWhitespaceAsync>d__17")]
private Task EatWhitespaceAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ParseStringAsync>d__18")]
private Task ParseStringAsync(char quote, ReadType readType, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<MatchValueAsync>d__19")]
private Task`1<bool> MatchValueAsync(string value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<MatchValueWithTrailingSeparatorAsync>d__20")]
private Task`1<bool> MatchValueWithTrailingSeparatorAsync(string value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<MatchAndSetAsync>d__21")]
private Task MatchAndSetAsync(string value, JsonToken newToken, object tokenValue, CancellationToken cancellationToken);
    private Task ParseTrueAsync(CancellationToken cancellationToken);
    private Task ParseFalseAsync(CancellationToken cancellationToken);
    private Task ParseNullAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ParseConstructorAsync>d__25")]
private Task ParseConstructorAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ParseNumberNaNAsync>d__26")]
private Task`1<object> ParseNumberNaNAsync(ReadType readType, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ParseNumberPositiveInfinityAsync>d__27")]
private Task`1<object> ParseNumberPositiveInfinityAsync(ReadType readType, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ParseNumberNegativeInfinityAsync>d__28")]
private Task`1<object> ParseNumberNegativeInfinityAsync(ReadType readType, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ParseNumberAsync>d__29")]
private Task ParseNumberAsync(ReadType readType, CancellationToken cancellationToken);
    private Task ParseUndefinedAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ParsePropertyAsync>d__31")]
private Task`1<bool> ParsePropertyAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ReadNumberIntoBufferAsync>d__32")]
private Task ReadNumberIntoBufferAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ParseUnquotedPropertyAsync>d__33")]
private Task ParseUnquotedPropertyAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ReadNullCharAsync>d__34")]
private Task`1<bool> ReadNullCharAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<HandleNullAsync>d__35")]
private Task HandleNullAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ReadFinishedAsync>d__36")]
private Task ReadFinishedAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ReadStringValueAsync>d__37")]
private Task`1<object> ReadStringValueAsync(ReadType readType, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ReadNumberValueAsync>d__38")]
private Task`1<object> ReadNumberValueAsync(ReadType readType, CancellationToken cancellationToken);
    public virtual Task`1<Nullable`1<bool>> ReadAsBooleanAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<DoReadAsBooleanAsync>d__40")]
internal Task`1<Nullable`1<bool>> DoReadAsBooleanAsync(CancellationToken cancellationToken);
    public virtual Task`1<Byte[]> ReadAsBytesAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<DoReadAsBytesAsync>d__42")]
internal Task`1<Byte[]> DoReadAsBytesAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<ReadIntoWrappedTypeObjectAsync>d__43")]
private Task ReadIntoWrappedTypeObjectAsync(CancellationToken cancellationToken);
    public virtual Task`1<Nullable`1<DateTime>> ReadAsDateTimeAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<DoReadAsDateTimeAsync>d__45")]
internal Task`1<Nullable`1<DateTime>> DoReadAsDateTimeAsync(CancellationToken cancellationToken);
    public virtual Task`1<Nullable`1<DateTimeOffset>> ReadAsDateTimeOffsetAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<DoReadAsDateTimeOffsetAsync>d__47")]
internal Task`1<Nullable`1<DateTimeOffset>> DoReadAsDateTimeOffsetAsync(CancellationToken cancellationToken);
    public virtual Task`1<Nullable`1<decimal>> ReadAsDecimalAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<DoReadAsDecimalAsync>d__49")]
internal Task`1<Nullable`1<decimal>> DoReadAsDecimalAsync(CancellationToken cancellationToken);
    public virtual Task`1<Nullable`1<double>> ReadAsDoubleAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<DoReadAsDoubleAsync>d__51")]
internal Task`1<Nullable`1<double>> DoReadAsDoubleAsync(CancellationToken cancellationToken);
    public virtual Task`1<Nullable`1<int>> ReadAsInt32Async(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<DoReadAsInt32Async>d__53")]
internal Task`1<Nullable`1<int>> DoReadAsInt32Async(CancellationToken cancellationToken);
    public virtual Task`1<string> ReadAsStringAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextReader/<DoReadAsStringAsync>d__55")]
internal Task`1<string> DoReadAsStringAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal Char[] get_CharBuffer();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_CharBuffer(Char[] value);
    [CompilerGeneratedAttribute]
internal int get_CharPos();
    [CompilerGeneratedAttribute]
private void set_CharPos(int value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public JsonNameTable get_PropertyNameTable();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_PropertyNameTable(JsonNameTable value);
    [NullableContextAttribute("2")]
public IArrayPool`1<char> get_ArrayPool();
    [NullableContextAttribute("2")]
public void set_ArrayPool(IArrayPool`1<char> value);
    private void EnsureBufferNotEmpty();
    private void SetNewLine(bool hasNextChar);
    private void OnNewLine(int pos);
    private void ParseString(char quote, ReadType readType);
    private void ParseReadString(char quote, ReadType readType);
    private static void BlockCopyChars(Char[] src, int srcOffset, Char[] dst, int dstOffset, int count);
    private void ShiftBufferIfNeeded();
    private int ReadData(bool append);
    private void PrepareBufferForReadData(bool append, int charsRequired);
    private int ReadData(bool append, int charsRequired);
    private bool EnsureChars(int relativePosition, bool append);
    private bool ReadChars(int relativePosition, bool append);
    public virtual bool Read();
    public virtual Nullable`1<int> ReadAsInt32();
    public virtual Nullable`1<DateTime> ReadAsDateTime();
    [NullableContextAttribute("2")]
public virtual string ReadAsString();
    [NullableContextAttribute("2")]
public virtual Byte[] ReadAsBytes();
    [NullableContextAttribute("2")]
private object ReadStringValue(ReadType readType);
    [NullableContextAttribute("2")]
private object FinishReadQuotedStringValue(ReadType readType);
    private JsonReaderException CreateUnexpectedCharacterException(char c);
    public virtual Nullable`1<bool> ReadAsBoolean();
    private void ProcessValueComma();
    [NullableContextAttribute("2")]
private object ReadNumberValue(ReadType readType);
    [NullableContextAttribute("2")]
private object FinishReadQuotedNumber(ReadType readType);
    public virtual Nullable`1<DateTimeOffset> ReadAsDateTimeOffset();
    public virtual Nullable`1<decimal> ReadAsDecimal();
    public virtual Nullable`1<double> ReadAsDouble();
    private void HandleNull();
    private void ReadFinished();
    private bool ReadNullChar();
    private void EnsureBuffer();
    private void ReadStringIntoBuffer(char quote);
    private void FinishReadStringIntoBuffer(int charPos, int initialPosition, int lastWritePosition);
    private void WriteCharToBuffer(char writeChar, int lastWritePosition, int writeToPosition);
    private char ConvertUnicode(bool enoughChars);
    private char ParseUnicode();
    private void ReadNumberIntoBuffer();
    private bool ReadNumberCharIntoBuffer(char currentChar, int charPos);
    private void ClearRecentString();
    private bool ParsePostValue(bool ignoreComments);
    private bool ParseObject();
    private bool ParseProperty();
    private bool ValidIdentifierChar(char value);
    private void ParseUnquotedProperty();
    private bool ReadUnquotedPropertyReportIfDone(char currentChar, int initialPosition);
    private bool ParseValue();
    private void ProcessLineFeed();
    private void ProcessCarriageReturn(bool append);
    private void EatWhitespace();
    private void ParseConstructor();
    private void ParseNumber(ReadType readType);
    private void ParseReadNumber(ReadType readType, char firstChar, int initialPosition);
    private JsonReaderException ThrowReaderError(string message, Exception ex);
    private static object BigIntegerParse(string number, CultureInfo culture);
    private void ParseComment(bool setToken);
    private void EndComment(bool setToken, int initialPosition, int endPosition);
    private bool MatchValue(string value);
    private bool MatchValue(bool enoughChars, string value);
    private bool MatchValueWithTrailingSeparator(string value);
    private bool IsSeparator(char c);
    private void ParseTrue();
    private void ParseNull();
    private void ParseUndefined();
    private void ParseFalse();
    private object ParseNumberNegativeInfinity(ReadType readType);
    private object ParseNumberNegativeInfinity(ReadType readType, bool matched);
    private object ParseNumberPositiveInfinity(ReadType readType);
    private object ParseNumberPositiveInfinity(ReadType readType, bool matched);
    private object ParseNumberNaN(ReadType readType);
    private object ParseNumberNaN(ReadType readType, bool matched);
    public virtual void Close();
    public sealed virtual bool HasLineInfo();
    public sealed virtual int get_LineNumber();
    public sealed virtual int get_LinePosition();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter : JsonWriter {
    private bool _safeAsync;
    private static int IndentCharBufferSize;
    private TextWriter _writer;
    [NullableAttribute("2")]
private Base64Encoder _base64Encoder;
    private char _indentChar;
    private int _indentation;
    private char _quoteChar;
    [NullableAttribute("2")]
private Boolean[] _charEscapeFlags;
    [NullableAttribute("2")]
private Char[] _writeBuffer;
    [NullableAttribute("2")]
private IArrayPool`1<char> _arrayPool;
    [NullableAttribute("2")]
private Char[] _indentChars;
    [CompilerGeneratedAttribute]
private bool <QuoteName>k__BackingField;
    private Base64Encoder Base64Encoder { get; }
    [NullableAttribute("2")]
public IArrayPool`1<char> ArrayPool { get; public set; }
    public int Indentation { get; public set; }
    public char QuoteChar { get; public set; }
    public char IndentChar { get; public set; }
    public bool QuoteName { get; public set; }
    public JsonTextWriter(TextWriter textWriter);
    public virtual Task FlushAsync(CancellationToken cancellationToken);
    internal Task DoFlushAsync(CancellationToken cancellationToken);
    protected virtual Task WriteValueDelimiterAsync(CancellationToken cancellationToken);
    internal Task DoWriteValueDelimiterAsync(CancellationToken cancellationToken);
    protected virtual Task WriteEndAsync(JsonToken token, CancellationToken cancellationToken);
    internal Task DoWriteEndAsync(JsonToken token, CancellationToken cancellationToken);
    public virtual Task CloseAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter/<DoCloseAsync>d__8")]
internal Task DoCloseAsync(CancellationToken cancellationToken);
    public virtual Task WriteEndAsync(CancellationToken cancellationToken);
    protected virtual Task WriteIndentAsync(CancellationToken cancellationToken);
    internal Task DoWriteIndentAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter/<WriteIndentAsync>d__12")]
private Task WriteIndentAsync(int currentIndentCount, int newLineLen, CancellationToken cancellationToken);
    private Task WriteValueInternalAsync(JsonToken token, string value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter/<WriteValueInternalAsync>d__14")]
private Task WriteValueInternalAsync(Task task, string value, CancellationToken cancellationToken);
    protected virtual Task WriteIndentSpaceAsync(CancellationToken cancellationToken);
    internal Task DoWriteIndentSpaceAsync(CancellationToken cancellationToken);
    public virtual Task WriteRawAsync(string json, CancellationToken cancellationToken);
    internal Task DoWriteRawAsync(string json, CancellationToken cancellationToken);
    public virtual Task WriteNullAsync(CancellationToken cancellationToken);
    internal Task DoWriteNullAsync(CancellationToken cancellationToken);
    private Task WriteDigitsAsync(ulong uvalue, bool negative, CancellationToken cancellationToken);
    private Task WriteIntegerValueAsync(ulong uvalue, bool negative, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter/<WriteIntegerValueAsync>d__23")]
private Task WriteIntegerValueAsync(Task task, ulong uvalue, bool negative, CancellationToken cancellationToken);
    internal Task WriteIntegerValueAsync(long value, CancellationToken cancellationToken);
    internal Task WriteIntegerValueAsync(ulong uvalue, CancellationToken cancellationToken);
    private Task WriteEscapedStringAsync(string value, bool quote, CancellationToken cancellationToken);
    public virtual Task WritePropertyNameAsync(string name, CancellationToken cancellationToken);
    internal Task DoWritePropertyNameAsync(string name, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter/<DoWritePropertyNameAsync>d__29")]
private Task DoWritePropertyNameAsync(Task task, string name, CancellationToken cancellationToken);
    public virtual Task WritePropertyNameAsync(string name, bool escape, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter/<DoWritePropertyNameAsync>d__31")]
internal Task DoWritePropertyNameAsync(string name, bool escape, CancellationToken cancellationToken);
    public virtual Task WriteStartArrayAsync(CancellationToken cancellationToken);
    internal Task DoWriteStartArrayAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter/<DoWriteStartArrayAsync>d__34")]
internal Task DoWriteStartArrayAsync(Task task, CancellationToken cancellationToken);
    public virtual Task WriteStartObjectAsync(CancellationToken cancellationToken);
    internal Task DoWriteStartObjectAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter/<DoWriteStartObjectAsync>d__37")]
internal Task DoWriteStartObjectAsync(Task task, CancellationToken cancellationToken);
    public virtual Task WriteStartConstructorAsync(string name, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter/<DoWriteStartConstructorAsync>d__39")]
internal Task DoWriteStartConstructorAsync(string name, CancellationToken cancellationToken);
    public virtual Task WriteUndefinedAsync(CancellationToken cancellationToken);
    internal Task DoWriteUndefinedAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter/<DoWriteUndefinedAsync>d__42")]
private Task DoWriteUndefinedAsync(Task task, CancellationToken cancellationToken);
    public virtual Task WriteWhitespaceAsync(string ws, CancellationToken cancellationToken);
    internal Task DoWriteWhitespaceAsync(string ws, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(bool value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(bool value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<bool> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<bool> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(byte value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<byte> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<byte> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Byte[] value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter/<WriteValueNonNullAsync>d__53")]
internal Task WriteValueNonNullAsync(Byte[] value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(char value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(char value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<char> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<char> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(DateTime value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter/<DoWriteValueAsync>d__59")]
internal Task DoWriteValueAsync(DateTime value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<DateTime> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<DateTime> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(DateTimeOffset value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter/<DoWriteValueAsync>d__63")]
internal Task DoWriteValueAsync(DateTimeOffset value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<DateTimeOffset> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<DateTimeOffset> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(decimal value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(decimal value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<decimal> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<decimal> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(double value, CancellationToken cancellationToken);
    internal Task WriteValueAsync(double value, bool nullable, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<double> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(float value, CancellationToken cancellationToken);
    internal Task WriteValueAsync(float value, bool nullable, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<float> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Guid value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter/<DoWriteValueAsync>d__77")]
internal Task DoWriteValueAsync(Guid value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<Guid> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<Guid> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(int value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<int> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<int> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(long value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<long> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<long> value, CancellationToken cancellationToken);
    internal Task WriteValueAsync(BigInteger value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(object value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(sbyte value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<sbyte> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<sbyte> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(short value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<short> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<short> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(string value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(string value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter/<DoWriteValueAsync>d__96")]
private Task DoWriteValueAsync(Task task, string value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(TimeSpan value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter/<DoWriteValueAsync>d__98")]
internal Task DoWriteValueAsync(TimeSpan value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<TimeSpan> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<TimeSpan> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(UInt32 value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<UInt32> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<UInt32> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(ulong value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<ulong> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<ulong> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Uri value, CancellationToken cancellationToken);
    internal Task WriteValueNotNullAsync(Uri value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter/<WriteValueNotNullAsync>d__109")]
internal Task WriteValueNotNullAsync(Task task, Uri value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(ushort value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<ushort> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<ushort> value, CancellationToken cancellationToken);
    public virtual Task WriteCommentAsync(string text, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter/<DoWriteCommentAsync>d__114")]
internal Task DoWriteCommentAsync(string text, CancellationToken cancellationToken);
    public virtual Task WriteEndArrayAsync(CancellationToken cancellationToken);
    public virtual Task WriteEndConstructorAsync(CancellationToken cancellationToken);
    public virtual Task WriteEndObjectAsync(CancellationToken cancellationToken);
    public virtual Task WriteRawValueAsync(string json, CancellationToken cancellationToken);
    internal Task DoWriteRawValueAsync(string json, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonTextWriter/<DoWriteRawValueAsync>d__120")]
private Task DoWriteRawValueAsync(Task task, string json, CancellationToken cancellationToken);
    internal Char[] EnsureWriteBuffer(int length, int copyTo);
    private Base64Encoder get_Base64Encoder();
    [NullableContextAttribute("2")]
public IArrayPool`1<char> get_ArrayPool();
    [NullableContextAttribute("2")]
public void set_ArrayPool(IArrayPool`1<char> value);
    public int get_Indentation();
    public void set_Indentation(int value);
    public char get_QuoteChar();
    public void set_QuoteChar(char value);
    public char get_IndentChar();
    public void set_IndentChar(char value);
    [CompilerGeneratedAttribute]
public bool get_QuoteName();
    [CompilerGeneratedAttribute]
public void set_QuoteName(bool value);
    public virtual void Flush();
    public virtual void Close();
    private void CloseBufferAndWriter();
    public virtual void WriteStartObject();
    public virtual void WriteStartArray();
    public virtual void WriteStartConstructor(string name);
    protected virtual void WriteEnd(JsonToken token);
    public virtual void WritePropertyName(string name);
    public virtual void WritePropertyName(string name, bool escape);
    internal virtual void OnStringEscapeHandlingChanged();
    private void UpdateCharEscapeFlags();
    protected virtual void WriteIndent();
    private int SetIndentChars();
    protected virtual void WriteValueDelimiter();
    protected virtual void WriteIndentSpace();
    private void WriteValueInternal(string value, JsonToken token);
    [NullableContextAttribute("2")]
public virtual void WriteValue(object value);
    public virtual void WriteNull();
    public virtual void WriteUndefined();
    [NullableContextAttribute("2")]
public virtual void WriteRaw(string json);
    [NullableContextAttribute("2")]
public virtual void WriteValue(string value);
    private void WriteEscapedString(string value, bool quote);
    public virtual void WriteValue(int value);
    public virtual void WriteValue(UInt32 value);
    public virtual void WriteValue(long value);
    public virtual void WriteValue(ulong value);
    public virtual void WriteValue(float value);
    public virtual void WriteValue(Nullable`1<float> value);
    public virtual void WriteValue(double value);
    public virtual void WriteValue(Nullable`1<double> value);
    public virtual void WriteValue(bool value);
    public virtual void WriteValue(short value);
    public virtual void WriteValue(ushort value);
    public virtual void WriteValue(char value);
    public virtual void WriteValue(byte value);
    public virtual void WriteValue(sbyte value);
    public virtual void WriteValue(decimal value);
    public virtual void WriteValue(DateTime value);
    private int WriteValueToBuffer(DateTime value);
    [NullableContextAttribute("2")]
public virtual void WriteValue(Byte[] value);
    public virtual void WriteValue(DateTimeOffset value);
    private int WriteValueToBuffer(DateTimeOffset value);
    public virtual void WriteValue(Guid value);
    public virtual void WriteValue(TimeSpan value);
    [NullableContextAttribute("2")]
public virtual void WriteValue(Uri value);
    [NullableContextAttribute("2")]
public virtual void WriteComment(string text);
    public virtual void WriteWhitespace(string ws);
    private void EnsureWriteBuffer();
    private void WriteIntegerValue(long value);
    private void WriteIntegerValue(ulong value, bool negative);
    private int WriteNumberToBuffer(ulong value, bool negative);
    private void WriteIntegerValue(int value);
    private void WriteIntegerValue(UInt32 value, bool negative);
    private int WriteNumberToBuffer(UInt32 value, bool negative);
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.JsonToken : Enum {
    public int value__;
    public static JsonToken None;
    public static JsonToken StartObject;
    public static JsonToken StartArray;
    public static JsonToken StartConstructor;
    public static JsonToken PropertyName;
    public static JsonToken Comment;
    public static JsonToken Raw;
    public static JsonToken Integer;
    public static JsonToken Float;
    public static JsonToken String;
    public static JsonToken Boolean;
    public static JsonToken Null;
    public static JsonToken Undefined;
    public static JsonToken EndObject;
    public static JsonToken EndArray;
    public static JsonToken EndConstructor;
    public static JsonToken Date;
    public static JsonToken Bytes;
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.JsonValidatingReader : JsonReader {
    private Stack`1<SchemaScope> _stack;
    private JsonSchema _schema;
    private JsonSchemaModel _model;
    private SchemaScope _currentScope;
    [CompilerGeneratedAttribute]
private ValidationEventHandler ValidationEventHandler;
    private static IList`1<JsonSchemaModel> EmptySchemaList;
    [CompilerGeneratedAttribute]
private JsonReader <Reader>k__BackingField;
    public object Value { get; }
    public int Depth { get; }
    public string Path { get; }
    public char QuoteChar { get; protected internal set; }
    public JsonToken TokenType { get; }
    public Type ValueType { get; }
    private IList`1<JsonSchemaModel> CurrentSchemas { get; }
    private IList`1<JsonSchemaModel> CurrentMemberSchemas { get; }
    public JsonSchema Schema { get; public set; }
    public JsonReader Reader { get; }
    private int Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.LineNumber { get; }
    private int Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.LinePosition { get; }
    public JsonValidatingReader(JsonReader reader);
    private static JsonValidatingReader();
    [CompilerGeneratedAttribute]
public void add_ValidationEventHandler(ValidationEventHandler value);
    [CompilerGeneratedAttribute]
public void remove_ValidationEventHandler(ValidationEventHandler value);
    public virtual object get_Value();
    public virtual int get_Depth();
    public virtual string get_Path();
    public virtual char get_QuoteChar();
    protected internal virtual void set_QuoteChar(char value);
    public virtual JsonToken get_TokenType();
    public virtual Type get_ValueType();
    private void Push(SchemaScope scope);
    private SchemaScope Pop();
    private IList`1<JsonSchemaModel> get_CurrentSchemas();
    private IList`1<JsonSchemaModel> get_CurrentMemberSchemas();
    private void RaiseError(string message, JsonSchemaModel schema);
    private void OnValidationEvent(JsonSchemaException exception);
    public JsonSchema get_Schema();
    public void set_Schema(JsonSchema value);
    [CompilerGeneratedAttribute]
public JsonReader get_Reader();
    public virtual void Close();
    private void ValidateNotDisallowed(JsonSchemaModel schema);
    private Nullable`1<JsonSchemaType> GetCurrentNodeSchemaType();
    public virtual Nullable`1<int> ReadAsInt32();
    public virtual Byte[] ReadAsBytes();
    public virtual Nullable`1<decimal> ReadAsDecimal();
    public virtual Nullable`1<double> ReadAsDouble();
    public virtual Nullable`1<bool> ReadAsBoolean();
    public virtual string ReadAsString();
    public virtual Nullable`1<DateTime> ReadAsDateTime();
    public virtual Nullable`1<DateTimeOffset> ReadAsDateTimeOffset();
    public virtual bool Read();
    private void ValidateCurrentToken();
    private void WriteToken(IList`1<JsonSchemaModel> schemas);
    private void ValidateEndObject(JsonSchemaModel schema);
    private void ValidateEndArray(JsonSchemaModel schema);
    private void ValidateNull(JsonSchemaModel schema);
    private void ValidateBoolean(JsonSchemaModel schema);
    private void ValidateString(JsonSchemaModel schema);
    private void ValidateInteger(JsonSchemaModel schema);
    private void ProcessValue();
    private void ValidateFloat(JsonSchemaModel schema);
    private static double FloatingPointRemainder(double dividend, double divisor);
    private static bool IsZero(double value);
    private void ValidatePropertyName(JsonSchemaModel schema);
    private bool IsPropertyDefinied(JsonSchemaModel schema, string propertyName);
    private bool ValidateArray(JsonSchemaModel schema);
    private bool ValidateObject(JsonSchemaModel schema);
    private bool TestType(JsonSchemaModel currentSchema, JsonSchemaType currentType);
    private sealed virtual override bool Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.HasLineInfo();
    private sealed virtual override int Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.get_LineNumber();
    private sealed virtual override int Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.get_LinePosition();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter : object {
    private static State[][] StateArray;
    internal static State[][] StateArrayTemplate;
    [NullableAttribute("2")]
private List`1<JsonPosition> _stack;
    private JsonPosition _currentPosition;
    private State _currentState;
    private Formatting _formatting;
    [CompilerGeneratedAttribute]
private bool <CloseOutput>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AutoCompleteOnClose>k__BackingField;
    private DateFormatHandling _dateFormatHandling;
    private DateTimeZoneHandling _dateTimeZoneHandling;
    private StringEscapeHandling _stringEscapeHandling;
    private FloatFormatHandling _floatFormatHandling;
    [NullableAttribute("2")]
private CultureInfo _culture;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <DateFormatString>k__BackingField;
    public bool CloseOutput { get; public set; }
    public bool AutoCompleteOnClose { get; public set; }
    protected internal int Top { get; }
    public WriteState WriteState { get; }
    internal string ContainerPath { get; }
    public string Path { get; }
    public Formatting Formatting { get; public set; }
    public DateFormatHandling DateFormatHandling { get; public set; }
    public DateTimeZoneHandling DateTimeZoneHandling { get; public set; }
    public StringEscapeHandling StringEscapeHandling { get; public set; }
    public FloatFormatHandling FloatFormatHandling { get; public set; }
    [NullableAttribute("2")]
public string DateFormatString { get; public set; }
    public CultureInfo Culture { get; public set; }
    private static JsonWriter();
    internal Task AutoCompleteAsync(JsonToken tokenBeingWritten, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter/<AutoCompleteAsync>d__1")]
private Task AutoCompleteAsync(CancellationToken cancellationToken);
    public virtual Task CloseAsync(CancellationToken cancellationToken);
    public virtual Task FlushAsync(CancellationToken cancellationToken);
    protected virtual Task WriteEndAsync(JsonToken token, CancellationToken cancellationToken);
    protected virtual Task WriteIndentAsync(CancellationToken cancellationToken);
    protected virtual Task WriteValueDelimiterAsync(CancellationToken cancellationToken);
    protected virtual Task WriteIndentSpaceAsync(CancellationToken cancellationToken);
    public virtual Task WriteRawAsync(string json, CancellationToken cancellationToken);
    public virtual Task WriteEndAsync(CancellationToken cancellationToken);
    internal Task WriteEndInternalAsync(CancellationToken cancellationToken);
    internal Task InternalWriteEndAsync(JsonContainerType type, CancellationToken cancellationToken);
    public virtual Task WriteEndArrayAsync(CancellationToken cancellationToken);
    public virtual Task WriteEndConstructorAsync(CancellationToken cancellationToken);
    public virtual Task WriteEndObjectAsync(CancellationToken cancellationToken);
    public virtual Task WriteNullAsync(CancellationToken cancellationToken);
    public virtual Task WritePropertyNameAsync(string name, CancellationToken cancellationToken);
    public virtual Task WritePropertyNameAsync(string name, bool escape, CancellationToken cancellationToken);
    internal Task InternalWritePropertyNameAsync(string name, CancellationToken cancellationToken);
    public virtual Task WriteStartArrayAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter/<InternalWriteStartAsync>d__20")]
internal Task InternalWriteStartAsync(JsonToken token, JsonContainerType container, CancellationToken cancellationToken);
    public virtual Task WriteCommentAsync(string text, CancellationToken cancellationToken);
    internal Task InternalWriteCommentAsync(CancellationToken cancellationToken);
    public virtual Task WriteRawValueAsync(string json, CancellationToken cancellationToken);
    public virtual Task WriteStartConstructorAsync(string name, CancellationToken cancellationToken);
    public virtual Task WriteStartObjectAsync(CancellationToken cancellationToken);
    public Task WriteTokenAsync(JsonReader reader, CancellationToken cancellationToken);
    public Task WriteTokenAsync(JsonReader reader, bool writeChildren, CancellationToken cancellationToken);
    public Task WriteTokenAsync(JsonToken token, CancellationToken cancellationToken);
    public Task WriteTokenAsync(JsonToken token, object value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter/<WriteTokenAsync>d__30")]
internal virtual Task WriteTokenAsync(JsonReader reader, bool writeChildren, bool writeDateConstructorAsDate, bool writeComments, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter/<WriteTokenSyncReadingAsync>d__31")]
internal Task WriteTokenSyncReadingAsync(JsonReader reader, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter/<WriteConstructorDateAsync>d__32")]
private Task WriteConstructorDateAsync(JsonReader reader, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(bool value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<bool> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(byte value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<byte> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Byte[] value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(char value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<char> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(DateTime value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<DateTime> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(DateTimeOffset value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<DateTimeOffset> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(decimal value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<decimal> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(double value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<double> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(float value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<float> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Guid value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<Guid> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(int value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<int> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(long value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<long> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(object value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(sbyte value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<sbyte> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(short value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<short> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(string value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(TimeSpan value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<TimeSpan> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(UInt32 value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<UInt32> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(ulong value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<ulong> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Uri value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(ushort value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<ushort> value, CancellationToken cancellationToken);
    public virtual Task WriteUndefinedAsync(CancellationToken cancellationToken);
    public virtual Task WriteWhitespaceAsync(string ws, CancellationToken cancellationToken);
    internal Task InternalWriteValueAsync(JsonToken token, CancellationToken cancellationToken);
    protected Task SetWriteStateAsync(JsonToken token, object value, CancellationToken cancellationToken);
    internal static Task WriteValueAsync(JsonWriter writer, PrimitiveTypeCode typeCode, object value, CancellationToken cancellationToken);
    internal static State[][] BuildStateArray();
    [CompilerGeneratedAttribute]
public bool get_CloseOutput();
    [CompilerGeneratedAttribute]
public void set_CloseOutput(bool value);
    [CompilerGeneratedAttribute]
public bool get_AutoCompleteOnClose();
    [CompilerGeneratedAttribute]
public void set_AutoCompleteOnClose(bool value);
    protected internal int get_Top();
    public WriteState get_WriteState();
    internal string get_ContainerPath();
    public string get_Path();
    public Formatting get_Formatting();
    public void set_Formatting(Formatting value);
    public DateFormatHandling get_DateFormatHandling();
    public void set_DateFormatHandling(DateFormatHandling value);
    public DateTimeZoneHandling get_DateTimeZoneHandling();
    public void set_DateTimeZoneHandling(DateTimeZoneHandling value);
    public StringEscapeHandling get_StringEscapeHandling();
    public void set_StringEscapeHandling(StringEscapeHandling value);
    internal virtual void OnStringEscapeHandlingChanged();
    public FloatFormatHandling get_FloatFormatHandling();
    public void set_FloatFormatHandling(FloatFormatHandling value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_DateFormatString();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_DateFormatString(string value);
    public CultureInfo get_Culture();
    public void set_Culture(CultureInfo value);
    internal void UpdateScopeWithFinishedValue();
    private void Push(JsonContainerType value);
    private JsonContainerType Pop();
    private JsonContainerType Peek();
    public abstract virtual void Flush();
    public virtual void Close();
    public virtual void WriteStartObject();
    public virtual void WriteEndObject();
    public virtual void WriteStartArray();
    public virtual void WriteEndArray();
    public virtual void WriteStartConstructor(string name);
    public virtual void WriteEndConstructor();
    public virtual void WritePropertyName(string name);
    public virtual void WritePropertyName(string name, bool escape);
    public virtual void WriteEnd();
    public void WriteToken(JsonReader reader);
    public void WriteToken(JsonReader reader, bool writeChildren);
    [NullableContextAttribute("2")]
public void WriteToken(JsonToken token, object value);
    public void WriteToken(JsonToken token);
    internal virtual void WriteToken(JsonReader reader, bool writeChildren, bool writeDateConstructorAsDate, bool writeComments);
    private bool IsWriteTokenIncomplete(JsonReader reader, bool writeChildren, int initialDepth);
    private int CalculateWriteTokenInitialDepth(JsonReader reader);
    private int CalculateWriteTokenFinalDepth(JsonReader reader);
    private void WriteConstructorDate(JsonReader reader);
    private void WriteEnd(JsonContainerType type);
    private void AutoCompleteAll();
    private JsonToken GetCloseTokenForType(JsonContainerType type);
    private void AutoCompleteClose(JsonContainerType type);
    private int CalculateLevelsToComplete(JsonContainerType type);
    private void UpdateCurrentState();
    protected virtual void WriteEnd(JsonToken token);
    protected virtual void WriteIndent();
    protected virtual void WriteValueDelimiter();
    protected virtual void WriteIndentSpace();
    internal void AutoComplete(JsonToken tokenBeingWritten);
    public virtual void WriteNull();
    public virtual void WriteUndefined();
    [NullableContextAttribute("2")]
public virtual void WriteRaw(string json);
    [NullableContextAttribute("2")]
public virtual void WriteRawValue(string json);
    [NullableContextAttribute("2")]
public virtual void WriteValue(string value);
    public virtual void WriteValue(int value);
    public virtual void WriteValue(UInt32 value);
    public virtual void WriteValue(long value);
    public virtual void WriteValue(ulong value);
    public virtual void WriteValue(float value);
    public virtual void WriteValue(double value);
    public virtual void WriteValue(bool value);
    public virtual void WriteValue(short value);
    public virtual void WriteValue(ushort value);
    public virtual void WriteValue(char value);
    public virtual void WriteValue(byte value);
    public virtual void WriteValue(sbyte value);
    public virtual void WriteValue(decimal value);
    public virtual void WriteValue(DateTime value);
    public virtual void WriteValue(DateTimeOffset value);
    public virtual void WriteValue(Guid value);
    public virtual void WriteValue(TimeSpan value);
    public virtual void WriteValue(Nullable`1<int> value);
    public virtual void WriteValue(Nullable`1<UInt32> value);
    public virtual void WriteValue(Nullable`1<long> value);
    public virtual void WriteValue(Nullable`1<ulong> value);
    public virtual void WriteValue(Nullable`1<float> value);
    public virtual void WriteValue(Nullable`1<double> value);
    public virtual void WriteValue(Nullable`1<bool> value);
    public virtual void WriteValue(Nullable`1<short> value);
    public virtual void WriteValue(Nullable`1<ushort> value);
    public virtual void WriteValue(Nullable`1<char> value);
    public virtual void WriteValue(Nullable`1<byte> value);
    public virtual void WriteValue(Nullable`1<sbyte> value);
    public virtual void WriteValue(Nullable`1<decimal> value);
    public virtual void WriteValue(Nullable`1<DateTime> value);
    public virtual void WriteValue(Nullable`1<DateTimeOffset> value);
    public virtual void WriteValue(Nullable`1<Guid> value);
    public virtual void WriteValue(Nullable`1<TimeSpan> value);
    [NullableContextAttribute("2")]
public virtual void WriteValue(Byte[] value);
    [NullableContextAttribute("2")]
public virtual void WriteValue(Uri value);
    [NullableContextAttribute("2")]
public virtual void WriteValue(object value);
    [NullableContextAttribute("2")]
public virtual void WriteComment(string text);
    public virtual void WriteWhitespace(string ws);
    private sealed virtual override void System.IDisposable.Dispose();
    protected virtual void Dispose(bool disposing);
    internal static void WriteValue(JsonWriter writer, PrimitiveTypeCode typeCode, object value);
    private static void ResolveConvertibleValue(IConvertible convertible, PrimitiveTypeCode& typeCode, Object& value);
    private static JsonWriterException CreateUnsupportedTypeException(JsonWriter writer, object value);
    protected void SetWriteState(JsonToken token, object value);
    internal void InternalWriteEnd(JsonContainerType container);
    internal void InternalWritePropertyName(string name);
    internal void InternalWriteRaw();
    internal void InternalWriteStart(JsonToken token, JsonContainerType container);
    internal void InternalWriteValue(JsonToken token);
    internal void InternalWriteWhitespace(string ws);
    internal void InternalWriteComment();
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter/<<InternalWriteEndAsync>g__AwaitProperty|11_0>d")]
[CompilerGeneratedAttribute]
private Task <InternalWriteEndAsync>g__AwaitProperty|11_0(Task task, int LevelsToComplete, JsonToken token, CancellationToken CancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter/<<InternalWriteEndAsync>g__AwaitIndent|11_1>d")]
[CompilerGeneratedAttribute]
private Task <InternalWriteEndAsync>g__AwaitIndent|11_1(Task task, int LevelsToComplete, JsonToken token, CancellationToken CancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter/<<InternalWriteEndAsync>g__AwaitEnd|11_2>d")]
[CompilerGeneratedAttribute]
private Task <InternalWriteEndAsync>g__AwaitEnd|11_2(Task task, int LevelsToComplete, CancellationToken CancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriter/<<InternalWriteEndAsync>g__AwaitRemaining|11_3>d")]
[CompilerGeneratedAttribute]
private Task <InternalWriteEndAsync>g__AwaitRemaining|11_3(int LevelsToComplete, CancellationToken CancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.JsonWriterException : JsonException {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [NullableAttribute("2")]
public string Path { get; }
    public JsonWriterException(string message);
    public JsonWriterException(string message, Exception innerException);
    public JsonWriterException(SerializationInfo info, StreamingContext context);
    public JsonWriterException(string message, string path, Exception innerException);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Path();
    internal static JsonWriterException Create(JsonWriter writer, string message, Exception ex);
    internal static JsonWriterException Create(string path, string message, Exception ex);
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.Linq.CommentHandling : Enum {
    public int value__;
    public static CommentHandling Ignore;
    public static CommentHandling Load;
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.Linq.DuplicatePropertyNameHandling : Enum {
    public int value__;
    public static DuplicatePropertyNameHandling Replace;
    public static DuplicatePropertyNameHandling Ignore;
    public static DuplicatePropertyNameHandling Error;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.Extensions : object {
    [ExtensionAttribute]
public static IJEnumerable`1<JToken> Ancestors(IEnumerable`1<T> source);
    [ExtensionAttribute]
public static IJEnumerable`1<JToken> AncestorsAndSelf(IEnumerable`1<T> source);
    [ExtensionAttribute]
public static IJEnumerable`1<JToken> Descendants(IEnumerable`1<T> source);
    [ExtensionAttribute]
public static IJEnumerable`1<JToken> DescendantsAndSelf(IEnumerable`1<T> source);
    [ExtensionAttribute]
public static IJEnumerable`1<JProperty> Properties(IEnumerable`1<JObject> source);
    [ExtensionAttribute]
public static IJEnumerable`1<JToken> Values(IEnumerable`1<JToken> source, object key);
    [ExtensionAttribute]
public static IJEnumerable`1<JToken> Values(IEnumerable`1<JToken> source);
    [ExtensionAttribute]
public static IEnumerable`1<U> Values(IEnumerable`1<JToken> source, object key);
    [ExtensionAttribute]
public static IEnumerable`1<U> Values(IEnumerable`1<JToken> source);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static U Value(IEnumerable`1<JToken> value);
    [ExtensionAttribute]
public static U Value(IEnumerable`1<T> value);
    [IteratorStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.Extensions/<Values>d__11`2")]
[ExtensionAttribute]
internal static IEnumerable`1<U> Values(IEnumerable`1<T> source, object key);
    [ExtensionAttribute]
public static IJEnumerable`1<JToken> Children(IEnumerable`1<T> source);
    [ExtensionAttribute]
public static IEnumerable`1<U> Children(IEnumerable`1<T> source);
    [IteratorStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.Extensions/<Convert>d__14`2")]
[ExtensionAttribute]
internal static IEnumerable`1<U> Convert(IEnumerable`1<T> source);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
internal static U Convert(T token);
    [ExtensionAttribute]
public static IJEnumerable`1<JToken> AsJEnumerable(IEnumerable`1<JToken> source);
    [ExtensionAttribute]
public static IJEnumerable`1<T> AsJEnumerable(IEnumerable`1<T> source);
}
[NullableContextAttribute("1")]
[DefaultMemberAttribute("Item")]
internal interface Elastic.Apm.Libraries.Newtonsoft.Json.Linq.IJEnumerable`1 {
    public IJEnumerable`1<JToken> Item { get; }
    public abstract virtual IJEnumerable`1<JToken> get_Item(object key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray : JContainer {
    private List`1<JToken> _values;
    protected IList`1<JToken> ChildrenTokens { get; }
    public bool IsReadOnly { get; }
    [NullableAttribute("2")]
public JToken Item { get; public set; }
    public JToken Item { get; public set; }
    public JTokenType Type { get; }
    public JArray(JArray other);
    public JArray(Object[] content);
    public JArray(object content);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray/<WriteToAsync>d__0")]
public virtual Task WriteToAsync(JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters);
    public static Task`1<JArray> LoadAsync(JsonReader reader, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JArray/<LoadAsync>d__2")]
public static Task`1<JArray> LoadAsync(JsonReader reader, JsonLoadSettings settings, CancellationToken cancellationToken);
    protected virtual IList`1<JToken> get_ChildrenTokens();
    public sealed virtual bool get_IsReadOnly();
    public virtual JToken get_Item(object key);
    public virtual void set_Item(object key, JToken value);
    public sealed virtual JToken get_Item(int index);
    public sealed virtual void set_Item(int index, JToken value);
    public virtual JTokenType get_Type();
    internal virtual bool DeepEquals(JToken node);
    internal virtual JToken CloneToken();
    public static JArray Load(JsonReader reader);
    public static JArray Load(JsonReader reader, JsonLoadSettings settings);
    public static JArray Parse(string json);
    public static JArray Parse(string json, JsonLoadSettings settings);
    public static JArray FromObject(object o);
    public static JArray FromObject(object o, JsonSerializer jsonSerializer);
    public virtual void WriteTo(JsonWriter writer, JsonConverter[] converters);
    [NullableContextAttribute("2")]
internal virtual int IndexOfItem(JToken item);
    internal virtual void MergeItem(object content, JsonMergeSettings settings);
    public sealed virtual int IndexOf(JToken item);
    public sealed virtual void Insert(int index, JToken item);
    public sealed virtual void RemoveAt(int index);
    public sealed virtual IEnumerator`1<JToken> GetEnumerator();
    public sealed virtual void Add(JToken item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(JToken item);
    public sealed virtual void CopyTo(JToken[] array, int arrayIndex);
    public sealed virtual bool Remove(JToken item);
    internal virtual int GetDeepHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor : JContainer {
    private List`1<JToken> _values;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    protected IList`1<JToken> ChildrenTokens { get; }
    [NullableAttribute("2")]
public JToken Item { get; public set; }
    [NullableAttribute("2")]
public string Name { get; public set; }
    public JTokenType Type { get; }
    public JConstructor(JConstructor other);
    public JConstructor(string name, Object[] content);
    public JConstructor(string name, object content);
    public JConstructor(string name);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor/<WriteToAsync>d__0")]
public virtual Task WriteToAsync(JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters);
    public static Task`1<JConstructor> LoadAsync(JsonReader reader, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JConstructor/<LoadAsync>d__2")]
public static Task`1<JConstructor> LoadAsync(JsonReader reader, JsonLoadSettings settings, CancellationToken cancellationToken);
    protected virtual IList`1<JToken> get_ChildrenTokens();
    public virtual JToken get_Item(object key);
    public virtual void set_Item(object key, JToken value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Name();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual JTokenType get_Type();
    [NullableContextAttribute("2")]
internal virtual int IndexOfItem(JToken item);
    internal virtual void MergeItem(object content, JsonMergeSettings settings);
    internal virtual bool DeepEquals(JToken node);
    internal virtual JToken CloneToken();
    public virtual void WriteTo(JsonWriter writer, JsonConverter[] converters);
    internal virtual int GetDeepHashCode();
    public static JConstructor Load(JsonReader reader);
    public static JConstructor Load(JsonReader reader, JsonLoadSettings settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer : JToken {
    [NullableAttribute("2")]
internal ListChangedEventHandler _listChanged;
    [NullableAttribute("2")]
internal AddingNewEventHandler _addingNew;
    [NullableAttribute("2")]
internal NotifyCollectionChangedEventHandler _collectionChanged;
    [NullableAttribute("2")]
private object _syncRoot;
    private bool _busy;
    protected IList`1<JToken> ChildrenTokens { get; }
    public bool HasValues { get; }
    [NullableAttribute("2")]
public JToken First { get; }
    [NullableAttribute("2")]
public JToken Last { get; }
    private JToken System.Collections.Generic.IList<Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>.Item { get; private set; }
    private bool System.Collections.Generic.ICollection<Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>.IsReadOnly { get; }
    private bool System.Collections.IList.IsFixedSize { get; }
    private bool System.Collections.IList.IsReadOnly { get; }
    private object System.Collections.IList.Item { get; private set; }
    public int Count { get; }
    private bool System.Collections.ICollection.IsSynchronized { get; }
    private object System.Collections.ICollection.SyncRoot { get; }
    private bool System.ComponentModel.IBindingList.AllowEdit { get; }
    private bool System.ComponentModel.IBindingList.AllowNew { get; }
    private bool System.ComponentModel.IBindingList.AllowRemove { get; }
    private bool System.ComponentModel.IBindingList.IsSorted { get; }
    private ListSortDirection System.ComponentModel.IBindingList.SortDirection { get; }
    [NullableAttribute("2")]
private PropertyDescriptor System.ComponentModel.IBindingList.SortProperty { get; }
    private bool System.ComponentModel.IBindingList.SupportsChangeNotification { get; }
    private bool System.ComponentModel.IBindingList.SupportsSearching { get; }
    private bool System.ComponentModel.IBindingList.SupportsSorting { get; }
    internal JContainer(JContainer other);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer/<ReadTokenFromAsync>d__0")]
internal Task ReadTokenFromAsync(JsonReader reader, JsonLoadSettings options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer/<ReadContentFromAsync>d__1")]
private Task ReadContentFromAsync(JsonReader reader, JsonLoadSettings settings, CancellationToken cancellationToken);
    public sealed virtual void add_ListChanged(ListChangedEventHandler value);
    public sealed virtual void remove_ListChanged(ListChangedEventHandler value);
    public void add_AddingNew(AddingNewEventHandler value);
    public void remove_AddingNew(AddingNewEventHandler value);
    public sealed virtual void add_CollectionChanged(NotifyCollectionChangedEventHandler value);
    public sealed virtual void remove_CollectionChanged(NotifyCollectionChangedEventHandler value);
    protected abstract virtual IList`1<JToken> get_ChildrenTokens();
    internal void CheckReentrancy();
    internal virtual IList`1<JToken> CreateChildrenCollection();
    protected virtual void OnAddingNew(AddingNewEventArgs e);
    protected virtual void OnListChanged(ListChangedEventArgs e);
    protected virtual void OnCollectionChanged(NotifyCollectionChangedEventArgs e);
    public virtual bool get_HasValues();
    internal bool ContentsEqual(JContainer container);
    [NullableContextAttribute("2")]
public virtual JToken get_First();
    [NullableContextAttribute("2")]
public virtual JToken get_Last();
    public virtual JEnumerable`1<JToken> Children();
    [NullableContextAttribute("2")]
public virtual IEnumerable`1<T> Values();
    public IEnumerable`1<JToken> Descendants();
    public IEnumerable`1<JToken> DescendantsAndSelf();
    [IteratorStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JContainer/<GetDescendants>d__36")]
internal IEnumerable`1<JToken> GetDescendants(bool self);
    [NullableContextAttribute("2")]
internal bool IsMultiContent(object content);
    internal JToken EnsureParentToken(JToken item, bool skipParentCheck);
    [NullableContextAttribute("2")]
internal abstract virtual int IndexOfItem(JToken item);
    [NullableContextAttribute("2")]
internal virtual bool InsertItem(int index, JToken item, bool skipParentCheck);
    internal virtual void RemoveItemAt(int index);
    [NullableContextAttribute("2")]
internal virtual bool RemoveItem(JToken item);
    internal virtual JToken GetItem(int index);
    [NullableContextAttribute("2")]
internal virtual void SetItem(int index, JToken item);
    internal virtual void ClearItems();
    internal virtual void ReplaceItem(JToken existing, JToken replacement);
    [NullableContextAttribute("2")]
internal virtual bool ContainsItem(JToken item);
    internal virtual void CopyItemsTo(Array array, int arrayIndex);
    internal static bool IsTokenUnchanged(JToken currentValue, JToken newValue);
    internal virtual void ValidateToken(JToken o, JToken existing);
    [NullableContextAttribute("2")]
public virtual void Add(object content);
    [NullableContextAttribute("2")]
internal bool TryAdd(object content);
    internal void AddAndSkipParentCheck(JToken token);
    [NullableContextAttribute("2")]
public void AddFirst(object content);
    [NullableContextAttribute("2")]
internal bool TryAddInternal(int index, object content, bool skipParentCheck);
    internal static JToken CreateFromContent(object content);
    public JsonWriter CreateWriter();
    public void ReplaceAll(object content);
    public void RemoveAll();
    internal abstract virtual void MergeItem(object content, JsonMergeSettings settings);
    public void Merge(object content);
    public void Merge(object content, JsonMergeSettings settings);
    internal void ReadTokenFrom(JsonReader reader, JsonLoadSettings options);
    internal void ReadContentFrom(JsonReader r, JsonLoadSettings settings);
    [NullableContextAttribute("2")]
private static JProperty ReadProperty(JsonReader r, JsonLoadSettings settings, IJsonLineInfo lineInfo, JContainer parent);
    internal int ContentsHashCode();
    private sealed virtual override string System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[] listAccessors);
    private sealed virtual override PropertyDescriptorCollection System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[] listAccessors);
    private sealed virtual override int System.Collections.Generic.IList<Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>.IndexOf(JToken item);
    private sealed virtual override void System.Collections.Generic.IList<Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>.Insert(int index, JToken item);
    private sealed virtual override void System.Collections.Generic.IList<Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>.RemoveAt(int index);
    private sealed virtual override JToken System.Collections.Generic.IList<Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>.get_Item(int index);
    private sealed virtual override void System.Collections.Generic.IList<Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>.set_Item(int index, JToken value);
    private sealed virtual override void System.Collections.Generic.ICollection<Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>.Add(JToken item);
    private sealed virtual override void System.Collections.Generic.ICollection<Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>.Clear();
    private sealed virtual override bool System.Collections.Generic.ICollection<Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>.Contains(JToken item);
    private sealed virtual override void System.Collections.Generic.ICollection<Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>.CopyTo(JToken[] array, int arrayIndex);
    private sealed virtual override bool System.Collections.Generic.ICollection<Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>.get_IsReadOnly();
    private sealed virtual override bool System.Collections.Generic.ICollection<Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>.Remove(JToken item);
    private JToken EnsureValue(object value);
    private sealed virtual override int System.Collections.IList.Add(object value);
    private sealed virtual override void System.Collections.IList.Clear();
    private sealed virtual override bool System.Collections.IList.Contains(object value);
    private sealed virtual override int System.Collections.IList.IndexOf(object value);
    private sealed virtual override void System.Collections.IList.Insert(int index, object value);
    private sealed virtual override bool System.Collections.IList.get_IsFixedSize();
    private sealed virtual override bool System.Collections.IList.get_IsReadOnly();
    private sealed virtual override void System.Collections.IList.Remove(object value);
    private sealed virtual override void System.Collections.IList.RemoveAt(int index);
    private sealed virtual override object System.Collections.IList.get_Item(int index);
    private sealed virtual override void System.Collections.IList.set_Item(int index, object value);
    private sealed virtual override void System.Collections.ICollection.CopyTo(Array array, int index);
    public sealed virtual int get_Count();
    private sealed virtual override bool System.Collections.ICollection.get_IsSynchronized();
    private sealed virtual override object System.Collections.ICollection.get_SyncRoot();
    private sealed virtual override void System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor property);
    private sealed virtual override object System.ComponentModel.IBindingList.AddNew();
    private sealed virtual override bool System.ComponentModel.IBindingList.get_AllowEdit();
    private sealed virtual override bool System.ComponentModel.IBindingList.get_AllowNew();
    private sealed virtual override bool System.ComponentModel.IBindingList.get_AllowRemove();
    private sealed virtual override void System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor property, ListSortDirection direction);
    private sealed virtual override int System.ComponentModel.IBindingList.Find(PropertyDescriptor property, object key);
    private sealed virtual override bool System.ComponentModel.IBindingList.get_IsSorted();
    private sealed virtual override void System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor property);
    private sealed virtual override void System.ComponentModel.IBindingList.RemoveSort();
    private sealed virtual override ListSortDirection System.ComponentModel.IBindingList.get_SortDirection();
    [NullableContextAttribute("2")]
private sealed virtual override PropertyDescriptor System.ComponentModel.IBindingList.get_SortProperty();
    private sealed virtual override bool System.ComponentModel.IBindingList.get_SupportsChangeNotification();
    private sealed virtual override bool System.ComponentModel.IBindingList.get_SupportsSearching();
    private sealed virtual override bool System.ComponentModel.IBindingList.get_SupportsSorting();
    internal static void MergeEnumerableContent(JContainer target, IEnumerable content, JsonMergeSettings settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
[DefaultMemberAttribute("Item")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JEnumerable`1 : ValueType {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static JEnumerable`1<T> Empty;
    private IEnumerable`1<T> _enumerable;
    public IJEnumerable`1<JToken> Item { get; }
    public JEnumerable`1(IEnumerable`1<T> enumerable);
    private static JEnumerable`1();
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual IJEnumerable`1<JToken> get_Item(object key);
    public sealed virtual bool Equals(JEnumerable`1<T> other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject : JContainer {
    private JPropertyKeyedCollection _properties;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private PropertyChangedEventHandler PropertyChanged;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private PropertyChangingEventHandler PropertyChanging;
    protected IList`1<JToken> ChildrenTokens { get; }
    public JTokenType Type { get; }
    [NullableAttribute("2")]
public JToken Item { get; public set; }
    [NullableAttribute("2")]
public JToken Item { get; public set; }
    private ICollection`1<string> System.Collections.Generic.IDictionary<System.String,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>.Keys { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ICollection`1<JToken> System.Collections.Generic.IDictionary<System.String,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>.Values { get; }
    private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>>.IsReadOnly { get; }
    public JObject(JObject other);
    public JObject(Object[] content);
    public JObject(object content);
    public virtual Task WriteToAsync(JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters);
    public static Task`1<JObject> LoadAsync(JsonReader reader, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject/<LoadAsync>d__2")]
public static Task`1<JObject> LoadAsync(JsonReader reader, JsonLoadSettings settings, CancellationToken cancellationToken);
    protected virtual IList`1<JToken> get_ChildrenTokens();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanging(PropertyChangingEventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanging(PropertyChangingEventHandler value);
    internal virtual bool DeepEquals(JToken node);
    [NullableContextAttribute("2")]
internal virtual int IndexOfItem(JToken item);
    [NullableContextAttribute("2")]
internal virtual bool InsertItem(int index, JToken item, bool skipParentCheck);
    internal virtual void ValidateToken(JToken o, JToken existing);
    internal virtual void MergeItem(object content, JsonMergeSettings settings);
    private static bool IsNull(JToken token);
    internal void InternalPropertyChanged(JProperty childProperty);
    internal void InternalPropertyChanging(JProperty childProperty);
    internal virtual JToken CloneToken();
    public virtual JTokenType get_Type();
    public IEnumerable`1<JProperty> Properties();
    public JProperty Property(string name);
    public JProperty Property(string name, StringComparison comparison);
    public JEnumerable`1<JToken> PropertyValues();
    public virtual JToken get_Item(object key);
    public virtual void set_Item(object key, JToken value);
    public sealed virtual JToken get_Item(string propertyName);
    public sealed virtual void set_Item(string propertyName, JToken value);
    public static JObject Load(JsonReader reader);
    public static JObject Load(JsonReader reader, JsonLoadSettings settings);
    public static JObject Parse(string json);
    public static JObject Parse(string json, JsonLoadSettings settings);
    public static JObject FromObject(object o);
    public static JObject FromObject(object o, JsonSerializer jsonSerializer);
    public virtual void WriteTo(JsonWriter writer, JsonConverter[] converters);
    [NullableContextAttribute("2")]
public JToken GetValue(string propertyName);
    [NullableContextAttribute("2")]
public JToken GetValue(string propertyName, StringComparison comparison);
    public bool TryGetValue(string propertyName, StringComparison comparison, JToken& value);
    public sealed virtual void Add(string propertyName, JToken value);
    public sealed virtual bool ContainsKey(string propertyName);
    private sealed virtual override ICollection`1<string> System.Collections.Generic.IDictionary<System.String,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>.get_Keys();
    public sealed virtual bool Remove(string propertyName);
    public sealed virtual bool TryGetValue(string propertyName, JToken& value);
    private sealed virtual override ICollection`1<JToken> System.Collections.Generic.IDictionary<System.String,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>.get_Values();
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>>.Add(KeyValuePair`2<string, JToken> item);
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>>.Clear();
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>>.Contains(KeyValuePair`2<string, JToken> item);
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>>.CopyTo(KeyValuePair`2[] array, int arrayIndex);
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>>.get_IsReadOnly();
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>>.Remove(KeyValuePair`2<string, JToken> item);
    internal virtual int GetDeepHashCode();
    [IteratorStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject/<GetEnumerator>d__63")]
public sealed virtual IEnumerator`1<KeyValuePair`2<string, JToken>> GetEnumerator();
    protected virtual void OnPropertyChanged(string propertyName);
    protected virtual void OnPropertyChanging(string propertyName);
    private sealed virtual override PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties();
    private sealed virtual override PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties(Attribute[] attributes);
    private sealed virtual override AttributeCollection System.ComponentModel.ICustomTypeDescriptor.GetAttributes();
    [NullableContextAttribute("2")]
private sealed virtual override string System.ComponentModel.ICustomTypeDescriptor.GetClassName();
    [NullableContextAttribute("2")]
private sealed virtual override string System.ComponentModel.ICustomTypeDescriptor.GetComponentName();
    private sealed virtual override TypeConverter System.ComponentModel.ICustomTypeDescriptor.GetConverter();
    [NullableContextAttribute("2")]
private sealed virtual override EventDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent();
    [NullableContextAttribute("2")]
private sealed virtual override PropertyDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty();
    private sealed virtual override object System.ComponentModel.ICustomTypeDescriptor.GetEditor(Type editorBaseType);
    private sealed virtual override EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents(Attribute[] attributes);
    private sealed virtual override EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents();
    private sealed virtual override object System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor pd);
    protected virtual DynamicMetaObject GetMetaObject(Expression parameter);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JObject/<<WriteToAsync>g__AwaitProperties|0_0>d")]
[CompilerGeneratedAttribute]
private Task <WriteToAsync>g__AwaitProperties|0_0(Task task, int i, JsonWriter Writer, CancellationToken CancellationToken, JsonConverter[] Converters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty : JContainer {
    private JPropertyList _content;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    protected IList`1<JToken> ChildrenTokens { get; }
    public string Name { get; }
    public JTokenType Type { get; }
    public JToken Value { get; public set; }
    public JProperty(JProperty other);
    internal JProperty(string name);
    public JProperty(string name, Object[] content);
    public JProperty(string name, object content);
    public virtual Task WriteToAsync(JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty/<WriteToAsync>d__1")]
private Task WriteToAsync(Task task, JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters);
    private Task WriteValueAsync(JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters);
    public static Task`1<JProperty> LoadAsync(JsonReader reader, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JProperty/<LoadAsync>d__4")]
public static Task`1<JProperty> LoadAsync(JsonReader reader, JsonLoadSettings settings, CancellationToken cancellationToken);
    protected virtual IList`1<JToken> get_ChildrenTokens();
    [CompilerGeneratedAttribute]
[DebuggerStepThroughAttribute]
public string get_Name();
    [DebuggerStepThroughAttribute]
public virtual JTokenType get_Type();
    [DebuggerStepThroughAttribute]
public JToken get_Value();
    public void set_Value(JToken value);
    internal virtual JToken GetItem(int index);
    [NullableContextAttribute("2")]
internal virtual void SetItem(int index, JToken item);
    [NullableContextAttribute("2")]
internal virtual bool RemoveItem(JToken item);
    internal virtual void RemoveItemAt(int index);
    [NullableContextAttribute("2")]
internal virtual int IndexOfItem(JToken item);
    [NullableContextAttribute("2")]
internal virtual bool InsertItem(int index, JToken item, bool skipParentCheck);
    [NullableContextAttribute("2")]
internal virtual bool ContainsItem(JToken item);
    internal virtual void MergeItem(object content, JsonMergeSettings settings);
    internal virtual void ClearItems();
    internal virtual bool DeepEquals(JToken node);
    internal virtual JToken CloneToken();
    public virtual void WriteTo(JsonWriter writer, JsonConverter[] converters);
    internal virtual int GetDeepHashCode();
    public static JProperty Load(JsonReader reader);
    public static JProperty Load(JsonReader reader, JsonLoadSettings settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JPropertyDescriptor : PropertyDescriptor {
    public Type ComponentType { get; }
    public bool IsReadOnly { get; }
    public Type PropertyType { get; }
    protected int NameHashCode { get; }
    public JPropertyDescriptor(string name);
    private static JObject CastInstance(object instance);
    public virtual bool CanResetValue(object component);
    public virtual object GetValue(object component);
    public virtual void ResetValue(object component);
    public virtual void SetValue(object component, object value);
    public virtual bool ShouldSerializeValue(object component);
    public virtual Type get_ComponentType();
    public virtual bool get_IsReadOnly();
    public virtual Type get_PropertyType();
    protected virtual int get_NameHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DefaultMemberAttribute("Item")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JPropertyKeyedCollection : Collection`1<JToken> {
    private static IEqualityComparer`1<string> Comparer;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<string, JToken> _dictionary;
    public JToken Item { get; }
    public ICollection`1<string> Keys { get; }
    public ICollection`1<JToken> Values { get; }
    private static JPropertyKeyedCollection();
    public JToken get_Item(string key);
    public ICollection`1<string> get_Keys();
    public ICollection`1<JToken> get_Values();
    private void AddKey(string key, JToken item);
    protected void ChangeItemKey(JToken item, string newKey);
    protected virtual void ClearItems();
    public bool Contains(string key);
    private bool ContainsItem(JToken item);
    private void EnsureDictionary();
    private string GetKeyForItem(JToken item);
    protected virtual void InsertItem(int index, JToken item);
    public bool Remove(string key);
    protected virtual void RemoveItem(int index);
    private void RemoveKey(string key);
    protected virtual void SetItem(int index, JToken item);
    public bool TryGetValue(string key, JToken& value);
    public int IndexOfReference(JToken t);
    public bool Compare(JPropertyKeyedCollection other);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JRaw : JValue {
    public JRaw(JRaw other);
    [NullableContextAttribute("2")]
public JRaw(object rawJson);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JRaw/<CreateAsync>d__0")]
public static Task`1<JRaw> CreateAsync(JsonReader reader, CancellationToken cancellationToken);
    public static JRaw Create(JsonReader reader);
    internal virtual JToken CloneToken();
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonLoadSettings : object {
    private CommentHandling _commentHandling;
    private DuplicatePropertyNameHandling _duplicatePropertyNameHandling;
    private LineInfoHandling _lineInfoHandling;
    public CommentHandling CommentHandling { get; public set; }
    public DuplicatePropertyNameHandling DuplicatePropertyNameHandling { get; public set; }
    public LineInfoHandling LineInfoHandling { get; public set; }
    public CommentHandling get_CommentHandling();
    public void set_CommentHandling(CommentHandling value);
    public DuplicatePropertyNameHandling get_DuplicatePropertyNameHandling();
    public void set_DuplicatePropertyNameHandling(DuplicatePropertyNameHandling value);
    public LineInfoHandling get_LineInfoHandling();
    public void set_LineInfoHandling(LineInfoHandling value);
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonMergeSettings : object {
    private MergeArrayHandling _mergeArrayHandling;
    private MergeNullValueHandling _mergeNullValueHandling;
    private StringComparison _propertyNameComparison;
    public MergeArrayHandling MergeArrayHandling { get; public set; }
    public MergeNullValueHandling MergeNullValueHandling { get; public set; }
    public StringComparison PropertyNameComparison { get; public set; }
    public MergeArrayHandling get_MergeArrayHandling();
    public void set_MergeArrayHandling(MergeArrayHandling value);
    public MergeNullValueHandling get_MergeNullValueHandling();
    public void set_MergeNullValueHandling(MergeNullValueHandling value);
    public StringComparison get_PropertyNameComparison();
    public void set_PropertyNameComparison(StringComparison value);
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter : PathFilter {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Index>k__BackingField;
    public Nullable`1<int> Index { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(Nullable`1<int> value);
    [NullableContextAttribute("1")]
[IteratorStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter/<ExecuteFilter>d__4")]
public virtual IEnumerable`1<JToken> ExecuteFilter(JToken root, IEnumerable`1<JToken> current, JsonSelectSettings settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.ArrayMultipleIndexFilter : PathFilter {
    internal List`1<int> Indexes;
    public ArrayMultipleIndexFilter(List`1<int> indexes);
    [IteratorStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.ArrayMultipleIndexFilter/<ExecuteFilter>d__2")]
public virtual IEnumerable`1<JToken> ExecuteFilter(JToken root, IEnumerable`1<JToken> current, JsonSelectSettings settings);
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter : PathFilter {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <End>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Step>k__BackingField;
    public Nullable`1<int> End { get; public set; }
    public Nullable`1<int> Start { get; public set; }
    public Nullable`1<int> Step { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_End();
    [CompilerGeneratedAttribute]
public void set_End(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Step();
    [CompilerGeneratedAttribute]
public void set_Step(Nullable`1<int> value);
    [NullableContextAttribute("1")]
[IteratorStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter/<ExecuteFilter>d__12")]
public virtual IEnumerable`1<JToken> ExecuteFilter(JToken root, IEnumerable`1<JToken> current, JsonSelectSettings settings);
    private bool IsValid(int index, int stopIndex, bool positiveStep);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression : QueryExpression {
    public object Left;
    [NullableAttribute("2")]
public object Right;
    public BooleanQueryExpression(QueryOperator operator, object left, object right);
    private IEnumerable`1<JToken> GetResult(JToken root, JToken t, object o);
    public virtual bool IsMatch(JToken root, JToken t, JsonSelectSettings settings);
    private bool MatchTokens(JToken leftResult, JToken rightResult, JsonSelectSettings settings);
    private static bool RegexEquals(JValue input, JValue pattern, JsonSelectSettings settings);
    internal static bool EqualsWithStringCoercion(JValue value, JValue queryValue);
    internal static bool EqualsWithStrictMatch(JValue value, JValue queryValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.CompositeExpression : QueryExpression {
    [CompilerGeneratedAttribute]
private List`1<QueryExpression> <Expressions>k__BackingField;
    public List`1<QueryExpression> Expressions { get; public set; }
    public CompositeExpression(QueryOperator operator);
    [CompilerGeneratedAttribute]
public List`1<QueryExpression> get_Expressions();
    [CompilerGeneratedAttribute]
public void set_Expressions(List`1<QueryExpression> value);
    public virtual bool IsMatch(JToken root, JToken t, JsonSelectSettings settings);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.FieldFilter : PathFilter {
    internal string Name;
    public FieldFilter(string name);
    [NullableContextAttribute("1")]
[IteratorStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.FieldFilter/<ExecuteFilter>d__2")]
public virtual IEnumerable`1<JToken> ExecuteFilter(JToken root, IEnumerable`1<JToken> current, JsonSelectSettings settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter : PathFilter {
    internal List`1<string> Names;
    public FieldMultipleFilter(List`1<string> names);
    [IteratorStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter/<ExecuteFilter>d__2")]
public virtual IEnumerable`1<JToken> ExecuteFilter(JToken root, IEnumerable`1<JToken> current, JsonSelectSettings settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.JPath : object {
    private static Char[] FloatCharacters;
    private string _expression;
    private int _currentIndex;
    [CompilerGeneratedAttribute]
private List`1<PathFilter> <Filters>k__BackingField;
    public List`1<PathFilter> Filters { get; }
    public JPath(string expression);
    private static JPath();
    [CompilerGeneratedAttribute]
public List`1<PathFilter> get_Filters();
    private void ParseMain();
    private bool ParsePath(List`1<PathFilter> filters, int currentPartStartIndex, bool query);
    private static PathFilter CreatePathFilter(string member, bool scan);
    private PathFilter ParseIndexer(char indexerOpenChar, bool scan);
    private PathFilter ParseArrayIndexer(char indexerCloseChar);
    private void EatWhitespace();
    private PathFilter ParseQuery(char indexerCloseChar, bool scan);
    private bool TryParseExpression(List`1& expressionPath);
    private JsonException CreateUnexpectedCharacterException();
    private object ParseSide();
    private QueryExpression ParseExpression();
    [NullableContextAttribute("2")]
private bool TryParseValue(Object& value);
    private string ReadQuotedString();
    private string ReadRegexString();
    private bool Match(string s);
    private QueryOperator ParseOperator();
    private PathFilter ParseQuotedField(char indexerCloseChar, bool scan);
    private void EnsureLength(string message);
    internal IEnumerable`1<JToken> Evaluate(JToken root, JToken t, JsonSelectSettings settings);
    internal static IEnumerable`1<JToken> Evaluate(List`1<PathFilter> filters, JToken root, JToken t, JsonSelectSettings settings);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal abstract class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.PathFilter : object {
    [NullableContextAttribute("1")]
public abstract virtual IEnumerable`1<JToken> ExecuteFilter(JToken root, IEnumerable`1<JToken> current, JsonSelectSettings settings);
    protected static JToken GetTokenIndex(JToken t, JsonSelectSettings settings, int index);
    protected static JToken GetNextScanValue(JToken originalParent, JToken container, JToken value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.QueryExpression : object {
    internal QueryOperator Operator;
    public QueryExpression(QueryOperator operator);
    public abstract virtual bool IsMatch(JToken root, JToken t, JsonSelectSettings settings);
    public bool IsMatch(JToken root, JToken t);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.QueryFilter : PathFilter {
    internal QueryExpression Expression;
    public QueryFilter(QueryExpression expression);
    [IteratorStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.QueryFilter/<ExecuteFilter>d__2")]
public virtual IEnumerable`1<JToken> ExecuteFilter(JToken root, IEnumerable`1<JToken> current, JsonSelectSettings settings);
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.QueryOperator : Enum {
    public int value__;
    public static QueryOperator None;
    public static QueryOperator Equals;
    public static QueryOperator NotEquals;
    public static QueryOperator Exists;
    public static QueryOperator LessThan;
    public static QueryOperator LessThanOrEquals;
    public static QueryOperator GreaterThan;
    public static QueryOperator GreaterThanOrEquals;
    public static QueryOperator And;
    public static QueryOperator Or;
    public static QueryOperator RegexEquals;
    public static QueryOperator StrictEquals;
    public static QueryOperator StrictNotEquals;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.QueryScanFilter : PathFilter {
    internal QueryExpression Expression;
    public QueryScanFilter(QueryExpression expression);
    [IteratorStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.QueryScanFilter/<ExecuteFilter>d__2")]
public virtual IEnumerable`1<JToken> ExecuteFilter(JToken root, IEnumerable`1<JToken> current, JsonSelectSettings settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.RootFilter : PathFilter {
    public static RootFilter Instance;
    private static RootFilter();
    public virtual IEnumerable`1<JToken> ExecuteFilter(JToken root, IEnumerable`1<JToken> current, JsonSelectSettings settings);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.ScanFilter : PathFilter {
    internal string Name;
    public ScanFilter(string name);
    [NullableContextAttribute("1")]
[IteratorStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.ScanFilter/<ExecuteFilter>d__2")]
public virtual IEnumerable`1<JToken> ExecuteFilter(JToken root, IEnumerable`1<JToken> current, JsonSelectSettings settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.ScanMultipleFilter : PathFilter {
    private List`1<string> _names;
    public ScanMultipleFilter(List`1<string> names);
    [IteratorStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonPath.ScanMultipleFilter/<ExecuteFilter>d__2")]
public virtual IEnumerable`1<JToken> ExecuteFilter(JToken root, IEnumerable`1<JToken> current, JsonSelectSettings settings);
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JsonSelectSettings : object {
    [CompilerGeneratedAttribute]
private bool <ErrorWhenNoMatch>k__BackingField;
    public bool ErrorWhenNoMatch { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_ErrorWhenNoMatch();
    [CompilerGeneratedAttribute]
public void set_ErrorWhenNoMatch(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal abstract class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken : object {
    [NullableAttribute("2")]
private static JTokenEqualityComparer _equalityComparer;
    [NullableAttribute("2")]
private object _annotations;
    private static JTokenType[] BooleanTypes;
    private static JTokenType[] NumberTypes;
    private static JTokenType[] BigIntegerTypes;
    private static JTokenType[] StringTypes;
    private static JTokenType[] GuidTypes;
    private static JTokenType[] TimeSpanTypes;
    private static JTokenType[] UriTypes;
    private static JTokenType[] CharTypes;
    private static JTokenType[] DateTimeTypes;
    private static JTokenType[] BytesTypes;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JContainer <Parent>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JToken <Next>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JToken <Previous>k__BackingField;
    public static JTokenEqualityComparer EqualityComparer { get; }
    [NullableAttribute("2")]
public JContainer Parent { get; internal set; }
    public JToken Root { get; }
    public JTokenType Type { get; }
    public bool HasValues { get; }
    [NullableAttribute("2")]
public JToken Next { get; internal set; }
    [NullableAttribute("2")]
public JToken Previous { get; internal set; }
    public string Path { get; }
    [NullableAttribute("2")]
public JToken Item { get; public set; }
    [NullableAttribute("2")]
public JToken First { get; }
    [NullableAttribute("2")]
public JToken Last { get; }
    private IJEnumerable`1<JToken> Elastic.Apm.Libraries.Newtonsoft.Json.Linq.IJEnumerable<Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>.Item { get; }
    private int Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.LineNumber { get; }
    private int Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.LinePosition { get; }
    private static JToken();
    public virtual Task WriteToAsync(JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters);
    public Task WriteToAsync(JsonWriter writer, JsonConverter[] converters);
    public static Task`1<JToken> ReadFromAsync(JsonReader reader, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken/<ReadFromAsync>d__3")]
public static Task`1<JToken> ReadFromAsync(JsonReader reader, JsonLoadSettings settings, CancellationToken cancellationToken);
    public static Task`1<JToken> LoadAsync(JsonReader reader, CancellationToken cancellationToken);
    public static Task`1<JToken> LoadAsync(JsonReader reader, JsonLoadSettings settings, CancellationToken cancellationToken);
    public static JTokenEqualityComparer get_EqualityComparer();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
[DebuggerStepThroughAttribute]
public JContainer get_Parent();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_Parent(JContainer value);
    public JToken get_Root();
    internal abstract virtual JToken CloneToken();
    internal abstract virtual bool DeepEquals(JToken node);
    public abstract virtual JTokenType get_Type();
    public abstract virtual bool get_HasValues();
    [NullableContextAttribute("2")]
public static bool DeepEquals(JToken t1, JToken t2);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public JToken get_Next();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_Next(JToken value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public JToken get_Previous();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_Previous(JToken value);
    public string get_Path();
    [NullableContextAttribute("2")]
public void AddAfterSelf(object content);
    [NullableContextAttribute("2")]
public void AddBeforeSelf(object content);
    public IEnumerable`1<JToken> Ancestors();
    public IEnumerable`1<JToken> AncestorsAndSelf();
    [IteratorStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken/<GetAncestors>d__48")]
internal IEnumerable`1<JToken> GetAncestors(bool self);
    [IteratorStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken/<AfterSelf>d__49")]
public IEnumerable`1<JToken> AfterSelf();
    [IteratorStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken/<BeforeSelf>d__50")]
public IEnumerable`1<JToken> BeforeSelf();
    public virtual JToken get_Item(object key);
    public virtual void set_Item(object key, JToken value);
    [NullableContextAttribute("2")]
public virtual T Value(object key);
    [NullableContextAttribute("2")]
public virtual JToken get_First();
    [NullableContextAttribute("2")]
public virtual JToken get_Last();
    public virtual JEnumerable`1<JToken> Children();
    [NullableContextAttribute("0")]
public JEnumerable`1<T> Children();
    [NullableContextAttribute("2")]
public virtual IEnumerable`1<T> Values();
    public void Remove();
    public void Replace(JToken value);
    public abstract virtual void WriteTo(JsonWriter writer, JsonConverter[] converters);
    public virtual string ToString();
    public string ToString(Formatting formatting, JsonConverter[] converters);
    private static JValue EnsureValue(JToken value);
    private static string GetType(JToken token);
    private static bool ValidateToken(JToken o, JTokenType[] validTypes, bool nullable);
    public static bool op_Explicit(JToken value);
    public static DateTimeOffset op_Explicit(JToken value);
    [NullableContextAttribute("2")]
public static Nullable`1<bool> op_Explicit(JToken value);
    public static long op_Explicit(JToken value);
    [NullableContextAttribute("2")]
public static Nullable`1<DateTime> op_Explicit(JToken value);
    [NullableContextAttribute("2")]
public static Nullable`1<DateTimeOffset> op_Explicit(JToken value);
    [NullableContextAttribute("2")]
public static Nullable`1<decimal> op_Explicit(JToken value);
    [NullableContextAttribute("2")]
public static Nullable`1<double> op_Explicit(JToken value);
    [NullableContextAttribute("2")]
public static Nullable`1<char> op_Explicit(JToken value);
    public static int op_Explicit(JToken value);
    public static short op_Explicit(JToken value);
    public static ushort op_Explicit(JToken value);
    public static char op_Explicit(JToken value);
    public static byte op_Explicit(JToken value);
    public static sbyte op_Explicit(JToken value);
    [NullableContextAttribute("2")]
public static Nullable`1<int> op_Explicit(JToken value);
    [NullableContextAttribute("2")]
public static Nullable`1<short> op_Explicit(JToken value);
    [NullableContextAttribute("2")]
public static Nullable`1<ushort> op_Explicit(JToken value);
    [NullableContextAttribute("2")]
public static Nullable`1<byte> op_Explicit(JToken value);
    [NullableContextAttribute("2")]
public static Nullable`1<sbyte> op_Explicit(JToken value);
    public static DateTime op_Explicit(JToken value);
    [NullableContextAttribute("2")]
public static Nullable`1<long> op_Explicit(JToken value);
    [NullableContextAttribute("2")]
public static Nullable`1<float> op_Explicit(JToken value);
    public static decimal op_Explicit(JToken value);
    [NullableContextAttribute("2")]
public static Nullable`1<UInt32> op_Explicit(JToken value);
    [NullableContextAttribute("2")]
public static Nullable`1<ulong> op_Explicit(JToken value);
    public static double op_Explicit(JToken value);
    public static float op_Explicit(JToken value);
    [NullableContextAttribute("2")]
public static string op_Explicit(JToken value);
    public static UInt32 op_Explicit(JToken value);
    public static ulong op_Explicit(JToken value);
    [NullableContextAttribute("2")]
public static Byte[] op_Explicit(JToken value);
    public static Guid op_Explicit(JToken value);
    [NullableContextAttribute("2")]
public static Nullable`1<Guid> op_Explicit(JToken value);
    public static TimeSpan op_Explicit(JToken value);
    [NullableContextAttribute("2")]
public static Nullable`1<TimeSpan> op_Explicit(JToken value);
    [NullableContextAttribute("2")]
public static Uri op_Explicit(JToken value);
    private static BigInteger ToBigInteger(JToken value);
    private static Nullable`1<BigInteger> ToBigIntegerNullable(JToken value);
    public static JToken op_Implicit(bool value);
    public static JToken op_Implicit(DateTimeOffset value);
    public static JToken op_Implicit(byte value);
    public static JToken op_Implicit(Nullable`1<byte> value);
    public static JToken op_Implicit(sbyte value);
    public static JToken op_Implicit(Nullable`1<sbyte> value);
    public static JToken op_Implicit(Nullable`1<bool> value);
    public static JToken op_Implicit(long value);
    public static JToken op_Implicit(Nullable`1<DateTime> value);
    public static JToken op_Implicit(Nullable`1<DateTimeOffset> value);
    public static JToken op_Implicit(Nullable`1<decimal> value);
    public static JToken op_Implicit(Nullable`1<double> value);
    public static JToken op_Implicit(short value);
    public static JToken op_Implicit(ushort value);
    public static JToken op_Implicit(int value);
    public static JToken op_Implicit(Nullable`1<int> value);
    public static JToken op_Implicit(DateTime value);
    public static JToken op_Implicit(Nullable`1<long> value);
    public static JToken op_Implicit(Nullable`1<float> value);
    public static JToken op_Implicit(decimal value);
    public static JToken op_Implicit(Nullable`1<short> value);
    public static JToken op_Implicit(Nullable`1<ushort> value);
    public static JToken op_Implicit(Nullable`1<UInt32> value);
    public static JToken op_Implicit(Nullable`1<ulong> value);
    public static JToken op_Implicit(double value);
    public static JToken op_Implicit(float value);
    public static JToken op_Implicit(string value);
    public static JToken op_Implicit(UInt32 value);
    public static JToken op_Implicit(ulong value);
    public static JToken op_Implicit(Byte[] value);
    public static JToken op_Implicit(Uri value);
    public static JToken op_Implicit(TimeSpan value);
    public static JToken op_Implicit(Nullable`1<TimeSpan> value);
    public static JToken op_Implicit(Guid value);
    public static JToken op_Implicit(Nullable`1<Guid> value);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IEnumerator`1<JToken> System.Collections.Generic.IEnumerable<Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>.GetEnumerator();
    internal abstract virtual int GetDeepHashCode();
    private sealed virtual override IJEnumerable`1<JToken> Elastic.Apm.Libraries.Newtonsoft.Json.Linq.IJEnumerable<Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken>.get_Item(object key);
    public JsonReader CreateReader();
    internal static JToken FromObjectInternal(object o, JsonSerializer jsonSerializer);
    public static JToken FromObject(object o);
    public static JToken FromObject(object o, JsonSerializer jsonSerializer);
    [NullableContextAttribute("2")]
public T ToObject();
    public object ToObject(Type objectType);
    [NullableContextAttribute("2")]
public T ToObject(JsonSerializer jsonSerializer);
    public object ToObject(Type objectType, JsonSerializer jsonSerializer);
    public static JToken ReadFrom(JsonReader reader);
    public static JToken ReadFrom(JsonReader reader, JsonLoadSettings settings);
    public static JToken Parse(string json);
    public static JToken Parse(string json, JsonLoadSettings settings);
    public static JToken Load(JsonReader reader, JsonLoadSettings settings);
    public static JToken Load(JsonReader reader);
    [NullableContextAttribute("2")]
internal void SetLineInfo(IJsonLineInfo lineInfo, JsonLoadSettings settings);
    internal void SetLineInfo(int lineNumber, int linePosition);
    private sealed virtual override bool Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.HasLineInfo();
    private sealed virtual override int Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.get_LineNumber();
    private sealed virtual override int Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.get_LinePosition();
    public JToken SelectToken(string path);
    public JToken SelectToken(string path, bool errorWhenNoMatch);
    [NullableContextAttribute("2")]
public JToken SelectToken(string path, JsonSelectSettings settings);
    public IEnumerable`1<JToken> SelectTokens(string path);
    public IEnumerable`1<JToken> SelectTokens(string path, bool errorWhenNoMatch);
    public IEnumerable`1<JToken> SelectTokens(string path, JsonSelectSettings settings);
    protected virtual DynamicMetaObject GetMetaObject(Expression parameter);
    private sealed virtual override DynamicMetaObject System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression parameter);
    private sealed virtual override object System.ICloneable.Clone();
    public JToken DeepClone();
    public void AddAnnotation(object annotation);
    public T Annotation();
    public object Annotation(Type type);
    [IteratorStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken/<Annotations>d__184`1")]
public IEnumerable`1<T> Annotations();
    [IteratorStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JToken/<Annotations>d__185")]
public IEnumerable`1<object> Annotations(Type type);
    public void RemoveAnnotations();
    public void RemoveAnnotations(Type type);
    internal void CopyAnnotations(JToken target, JToken source);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenEqualityComparer : object {
    public sealed virtual bool Equals(JToken x, JToken y);
    public sealed virtual int GetHashCode(JToken obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenReader : JsonReader {
    private JToken _root;
    [NullableAttribute("2")]
private string _initialPath;
    [NullableAttribute("2")]
private JToken _parent;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JToken <CurrentToken>k__BackingField;
    [NullableAttribute("2")]
public JToken CurrentToken { get; private set; }
    private int Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.LineNumber { get; }
    private int Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.LinePosition { get; }
    public string Path { get; }
    public JTokenReader(JToken token);
    public JTokenReader(JToken token, string initialPath);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public JToken get_CurrentToken();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_CurrentToken(JToken value);
    private sealed virtual override int Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.get_LineNumber();
    private sealed virtual override int Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.get_LinePosition();
    public virtual string get_Path();
    public virtual bool Read();
    private bool ReadOver(JToken t);
    private bool ReadToEnd();
    private Nullable`1<JsonToken> GetEndToken(JContainer c);
    private bool ReadInto(JContainer c);
    private bool SetEnd(JContainer c);
    private void SetToken(JToken token);
    [NullableContextAttribute("2")]
private string SafeToString(object value);
    private sealed virtual override bool Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.HasLineInfo();
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenType : Enum {
    public int value__;
    public static JTokenType None;
    public static JTokenType Object;
    public static JTokenType Array;
    public static JTokenType Constructor;
    public static JTokenType Property;
    public static JTokenType Comment;
    public static JTokenType Integer;
    public static JTokenType Float;
    public static JTokenType String;
    public static JTokenType Boolean;
    public static JTokenType Null;
    public static JTokenType Undefined;
    public static JTokenType Date;
    public static JTokenType Raw;
    public static JTokenType Bytes;
    public static JTokenType Guid;
    public static JTokenType Uri;
    public static JTokenType TimeSpan;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JTokenWriter : JsonWriter {
    private JContainer _token;
    private JContainer _parent;
    private JValue _value;
    [CompilerGeneratedAttribute]
private JToken <CurrentToken>k__BackingField;
    public JToken CurrentToken { get; private set; }
    public JToken Token { get; }
    [NullableContextAttribute("1")]
public JTokenWriter(JContainer container);
    [NullableContextAttribute("0")]
internal virtual Task WriteTokenAsync(JsonReader reader, bool writeChildren, bool writeDateConstructorAsDate, bool writeComments, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
public JToken get_CurrentToken();
    [CompilerGeneratedAttribute]
private void set_CurrentToken(JToken value);
    public JToken get_Token();
    public virtual void Flush();
    public virtual void Close();
    public virtual void WriteStartObject();
    [NullableContextAttribute("1")]
private void AddParent(JContainer container);
    private void RemoveParent();
    public virtual void WriteStartArray();
    [NullableContextAttribute("1")]
public virtual void WriteStartConstructor(string name);
    protected virtual void WriteEnd(JsonToken token);
    [NullableContextAttribute("1")]
public virtual void WritePropertyName(string name);
    private void AddValue(object value, JsonToken token);
    internal void AddValue(JValue value, JsonToken token);
    public virtual void WriteValue(object value);
    public virtual void WriteNull();
    public virtual void WriteUndefined();
    public virtual void WriteRaw(string json);
    public virtual void WriteComment(string text);
    public virtual void WriteValue(string value);
    public virtual void WriteValue(int value);
    public virtual void WriteValue(UInt32 value);
    public virtual void WriteValue(long value);
    public virtual void WriteValue(ulong value);
    public virtual void WriteValue(float value);
    public virtual void WriteValue(double value);
    public virtual void WriteValue(bool value);
    public virtual void WriteValue(short value);
    public virtual void WriteValue(ushort value);
    public virtual void WriteValue(char value);
    public virtual void WriteValue(byte value);
    public virtual void WriteValue(sbyte value);
    public virtual void WriteValue(decimal value);
    public virtual void WriteValue(DateTime value);
    public virtual void WriteValue(DateTimeOffset value);
    public virtual void WriteValue(Byte[] value);
    public virtual void WriteValue(TimeSpan value);
    public virtual void WriteValue(Guid value);
    public virtual void WriteValue(Uri value);
    [NullableContextAttribute("1")]
internal virtual void WriteToken(JsonReader reader, bool writeChildren, bool writeDateConstructorAsDate, bool writeComments);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Linq.JValue : JToken {
    private JTokenType _valueType;
    [NullableAttribute("2")]
private object _value;
    public bool HasValues { get; }
    public JTokenType Type { get; }
    [NullableAttribute("2")]
public object Value { get; public set; }
    [NullableContextAttribute("2")]
internal JValue(object value, JTokenType type);
    public JValue(JValue other);
    public JValue(long value);
    public JValue(decimal value);
    public JValue(char value);
    public JValue(ulong value);
    public JValue(double value);
    public JValue(float value);
    public JValue(DateTime value);
    public JValue(DateTimeOffset value);
    public JValue(bool value);
    [NullableContextAttribute("2")]
public JValue(string value);
    public JValue(Guid value);
    [NullableContextAttribute("2")]
public JValue(Uri value);
    public JValue(TimeSpan value);
    [NullableContextAttribute("2")]
public JValue(object value);
    public virtual Task WriteToAsync(JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters);
    internal virtual bool DeepEquals(JToken node);
    public virtual bool get_HasValues();
    private static int CompareBigInteger(BigInteger i1, object i2);
    [NullableContextAttribute("2")]
internal static int Compare(JTokenType valueType, object objA, object objB);
    private static int CompareFloat(object objA, object objB);
    [NullableContextAttribute("2")]
private static bool Operation(ExpressionType operation, object objA, object objB, Object& result);
    internal virtual JToken CloneToken();
    public static JValue CreateComment(string value);
    public static JValue CreateString(string value);
    public static JValue CreateNull();
    public static JValue CreateUndefined();
    [NullableContextAttribute("2")]
private static JTokenType GetValueType(Nullable`1<JTokenType> current, object value);
    private static JTokenType GetStringValueType(Nullable`1<JTokenType> current);
    public virtual JTokenType get_Type();
    [NullableContextAttribute("2")]
public object get_Value();
    [NullableContextAttribute("2")]
public void set_Value(object value);
    public virtual void WriteTo(JsonWriter writer, JsonConverter[] converters);
    internal virtual int GetDeepHashCode();
    private static bool ValuesEquals(JValue v1, JValue v2);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(JValue other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    public string ToString(string format);
    public sealed virtual string ToString(IFormatProvider formatProvider);
    public sealed virtual string ToString(string format, IFormatProvider formatProvider);
    protected virtual DynamicMetaObject GetMetaObject(Expression parameter);
    private sealed virtual override int System.IComparable.CompareTo(object obj);
    public sealed virtual int CompareTo(JValue obj);
    private sealed virtual override TypeCode System.IConvertible.GetTypeCode();
    private sealed virtual override bool System.IConvertible.ToBoolean(IFormatProvider provider);
    private sealed virtual override char System.IConvertible.ToChar(IFormatProvider provider);
    private sealed virtual override sbyte System.IConvertible.ToSByte(IFormatProvider provider);
    private sealed virtual override byte System.IConvertible.ToByte(IFormatProvider provider);
    private sealed virtual override short System.IConvertible.ToInt16(IFormatProvider provider);
    private sealed virtual override ushort System.IConvertible.ToUInt16(IFormatProvider provider);
    private sealed virtual override int System.IConvertible.ToInt32(IFormatProvider provider);
    private sealed virtual override UInt32 System.IConvertible.ToUInt32(IFormatProvider provider);
    private sealed virtual override long System.IConvertible.ToInt64(IFormatProvider provider);
    private sealed virtual override ulong System.IConvertible.ToUInt64(IFormatProvider provider);
    private sealed virtual override float System.IConvertible.ToSingle(IFormatProvider provider);
    private sealed virtual override double System.IConvertible.ToDouble(IFormatProvider provider);
    private sealed virtual override decimal System.IConvertible.ToDecimal(IFormatProvider provider);
    private sealed virtual override DateTime System.IConvertible.ToDateTime(IFormatProvider provider);
    private sealed virtual override object System.IConvertible.ToType(Type conversionType, IFormatProvider provider);
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.Linq.LineInfoHandling : Enum {
    public int value__;
    public static LineInfoHandling Ignore;
    public static LineInfoHandling Load;
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.Linq.MergeArrayHandling : Enum {
    public int value__;
    public static MergeArrayHandling Concat;
    public static MergeArrayHandling Union;
    public static MergeArrayHandling Replace;
    public static MergeArrayHandling Merge;
}
[FlagsAttribute]
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.Linq.MergeNullValueHandling : Enum {
    public int value__;
    public static MergeNullValueHandling Ignore;
    public static MergeNullValueHandling Merge;
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.MemberSerialization : Enum {
    public int value__;
    public static MemberSerialization OptOut;
    public static MemberSerialization OptIn;
    public static MemberSerialization Fields;
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.MetadataPropertyHandling : Enum {
    public int value__;
    public static MetadataPropertyHandling Default;
    public static MetadataPropertyHandling ReadAhead;
    public static MetadataPropertyHandling Ignore;
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.MissingMemberHandling : Enum {
    public int value__;
    public static MissingMemberHandling Ignore;
    public static MissingMemberHandling Error;
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.NullValueHandling : Enum {
    public int value__;
    public static NullValueHandling Include;
    public static NullValueHandling Ignore;
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.ObjectCreationHandling : Enum {
    public int value__;
    public static ObjectCreationHandling Auto;
    public static ObjectCreationHandling Reuse;
    public static ObjectCreationHandling Replace;
}
[FlagsAttribute]
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.PreserveReferencesHandling : Enum {
    public int value__;
    public static PreserveReferencesHandling None;
    public static PreserveReferencesHandling Objects;
    public static PreserveReferencesHandling Arrays;
    public static PreserveReferencesHandling All;
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.ReadType : Enum {
    public int value__;
    public static ReadType Read;
    public static ReadType ReadAsInt32;
    public static ReadType ReadAsInt64;
    public static ReadType ReadAsBytes;
    public static ReadType ReadAsString;
    public static ReadType ReadAsDecimal;
    public static ReadType ReadAsDateTime;
    public static ReadType ReadAsDateTimeOffset;
    public static ReadType ReadAsDouble;
    public static ReadType ReadAsBoolean;
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.ReferenceLoopHandling : Enum {
    public int value__;
    public static ReferenceLoopHandling Error;
    public static ReferenceLoopHandling Ignore;
    public static ReferenceLoopHandling Serialize;
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.Required : Enum {
    public int value__;
    public static Required Default;
    public static Required AllowNull;
    public static Required Always;
    public static Required DisallowNull;
}
[ExtensionAttribute]
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.Schema.Extensions : object {
    [ExtensionAttribute]
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
public static bool IsValid(JToken source, JsonSchema schema);
    [ExtensionAttribute]
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
public static bool IsValid(JToken source, JsonSchema schema, IList`1& errorMessages);
    [ExtensionAttribute]
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
public static void Validate(JToken source, JsonSchema schema);
    [ExtensionAttribute]
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
public static void Validate(JToken source, JsonSchema schema, ValidationEventHandler validationEventHandler);
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchema : object {
    [CompilerGeneratedAttribute]
private JsonSchema <AdditionalItems>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSchema <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowAdditionalItems>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowAdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private JToken <Default>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeferredReference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonSchemaType> <Disallow>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <DivisibleBy>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<JToken> <Enum>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ExclusiveMaximum>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ExclusiveMinimum>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<JsonSchema> <Extends>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Hidden>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InternalId>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<JsonSchema> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Maximum>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaximumItems>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaximumLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Minimum>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinimumItems>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinimumLength>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, JsonSchema> <PatternProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PositionalItemsValidation>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, JsonSchema> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ReferencesResolved>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Required>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Requires>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Transient>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonSchemaType> <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UniqueItems>k__BackingField;
    public JsonSchema AdditionalItems { get; public set; }
    public JsonSchema AdditionalProperties { get; public set; }
    public bool AllowAdditionalItems { get; public set; }
    public bool AllowAdditionalProperties { get; public set; }
    public JToken Default { get; public set; }
    internal string DeferredReference { get; internal set; }
    public string Description { get; public set; }
    public Nullable`1<JsonSchemaType> Disallow { get; public set; }
    public Nullable`1<double> DivisibleBy { get; public set; }
    public IList`1<JToken> Enum { get; public set; }
    public Nullable`1<bool> ExclusiveMaximum { get; public set; }
    public Nullable`1<bool> ExclusiveMinimum { get; public set; }
    public IList`1<JsonSchema> Extends { get; public set; }
    public string Format { get; public set; }
    public Nullable`1<bool> Hidden { get; public set; }
    public string Id { get; public set; }
    internal string InternalId { get; }
    public IList`1<JsonSchema> Items { get; public set; }
    internal string Location { get; internal set; }
    public Nullable`1<double> Maximum { get; public set; }
    public Nullable`1<int> MaximumItems { get; public set; }
    public Nullable`1<int> MaximumLength { get; public set; }
    public Nullable`1<double> Minimum { get; public set; }
    public Nullable`1<int> MinimumItems { get; public set; }
    public Nullable`1<int> MinimumLength { get; public set; }
    public string Pattern { get; public set; }
    public IDictionary`2<string, JsonSchema> PatternProperties { get; public set; }
    public bool PositionalItemsValidation { get; public set; }
    public IDictionary`2<string, JsonSchema> Properties { get; public set; }
    public Nullable`1<bool> ReadOnly { get; public set; }
    internal bool ReferencesResolved { get; internal set; }
    public Nullable`1<bool> Required { get; public set; }
    public string Requires { get; public set; }
    public string Title { get; public set; }
    public Nullable`1<bool> Transient { get; public set; }
    public Nullable`1<JsonSchemaType> Type { get; public set; }
    public bool UniqueItems { get; public set; }
    [CompilerGeneratedAttribute]
public JsonSchema get_AdditionalItems();
    [CompilerGeneratedAttribute]
public void set_AdditionalItems(JsonSchema value);
    [CompilerGeneratedAttribute]
public JsonSchema get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(JsonSchema value);
    [CompilerGeneratedAttribute]
public bool get_AllowAdditionalItems();
    [CompilerGeneratedAttribute]
public void set_AllowAdditionalItems(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowAdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AllowAdditionalProperties(bool value);
    [CompilerGeneratedAttribute]
public JToken get_Default();
    [CompilerGeneratedAttribute]
public void set_Default(JToken value);
    [CompilerGeneratedAttribute]
internal string get_DeferredReference();
    [CompilerGeneratedAttribute]
internal void set_DeferredReference(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonSchemaType> get_Disallow();
    [CompilerGeneratedAttribute]
public void set_Disallow(Nullable`1<JsonSchemaType> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_DivisibleBy();
    [CompilerGeneratedAttribute]
public void set_DivisibleBy(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public IList`1<JToken> get_Enum();
    [CompilerGeneratedAttribute]
public void set_Enum(IList`1<JToken> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ExclusiveMaximum();
    [CompilerGeneratedAttribute]
public void set_ExclusiveMaximum(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ExclusiveMinimum();
    [CompilerGeneratedAttribute]
public void set_ExclusiveMinimum(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IList`1<JsonSchema> get_Extends();
    [CompilerGeneratedAttribute]
public void set_Extends(IList`1<JsonSchema> value);
    [CompilerGeneratedAttribute]
public string get_Format();
    [CompilerGeneratedAttribute]
public void set_Format(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Hidden();
    [CompilerGeneratedAttribute]
public void set_Hidden(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
internal string get_InternalId();
    [CompilerGeneratedAttribute]
public IList`1<JsonSchema> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IList`1<JsonSchema> value);
    [CompilerGeneratedAttribute]
internal string get_Location();
    [CompilerGeneratedAttribute]
internal void set_Location(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Maximum();
    [CompilerGeneratedAttribute]
public void set_Maximum(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaximumItems();
    [CompilerGeneratedAttribute]
public void set_MaximumItems(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaximumLength();
    [CompilerGeneratedAttribute]
public void set_MaximumLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Minimum();
    [CompilerGeneratedAttribute]
public void set_Minimum(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MinimumItems();
    [CompilerGeneratedAttribute]
public void set_MinimumItems(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MinimumLength();
    [CompilerGeneratedAttribute]
public void set_MinimumLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Pattern();
    [CompilerGeneratedAttribute]
public void set_Pattern(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, JsonSchema> get_PatternProperties();
    [CompilerGeneratedAttribute]
public void set_PatternProperties(IDictionary`2<string, JsonSchema> value);
    [CompilerGeneratedAttribute]
public bool get_PositionalItemsValidation();
    [CompilerGeneratedAttribute]
public void set_PositionalItemsValidation(bool value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, JsonSchema> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(IDictionary`2<string, JsonSchema> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnly();
    [CompilerGeneratedAttribute]
public void set_ReadOnly(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
internal bool get_ReferencesResolved();
    [CompilerGeneratedAttribute]
internal void set_ReferencesResolved(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Required();
    [CompilerGeneratedAttribute]
public void set_Required(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Requires();
    [CompilerGeneratedAttribute]
public void set_Requires(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Transient();
    [CompilerGeneratedAttribute]
public void set_Transient(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonSchemaType> get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(Nullable`1<JsonSchemaType> value);
    [CompilerGeneratedAttribute]
public bool get_UniqueItems();
    [CompilerGeneratedAttribute]
public void set_UniqueItems(bool value);
    public static JsonSchema Read(JsonReader reader);
    public static JsonSchema Read(JsonReader reader, JsonSchemaResolver resolver);
    public static JsonSchema Parse(string json);
    public static JsonSchema Parse(string json, JsonSchemaResolver resolver);
    public void WriteTo(JsonWriter writer);
    public void WriteTo(JsonWriter writer, JsonSchemaResolver resolver);
    public virtual string ToString();
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaBuilder : object {
    private IDictionary`2<string, JsonSchema> _documentSchemas;
    private JsonSchemaResolver _resolver;
    private IList`1<JsonSchema> _stack;
    private JObject _rootSchema;
    [CompilerGeneratedAttribute]
private JsonSchema <CurrentSchema>k__BackingField;
    private JsonSchema CurrentSchema { get; private set; }
    public JsonSchemaBuilder(JsonSchemaResolver resolver);
    [CompilerGeneratedAttribute]
private JsonSchema get_CurrentSchema();
    [CompilerGeneratedAttribute]
private void set_CurrentSchema(JsonSchema value);
    private void Push(JsonSchema value);
    private JsonSchema Pop();
    internal JsonSchema Read(JsonReader reader);
    private string UnescapeReference(string reference);
    private JsonSchema ResolveReferences(JsonSchema schema);
    private JsonSchema BuildSchema(JToken token);
    private void ProcessSchemaProperties(JObject schemaObject);
    private void ProcessExtends(JToken token);
    private void ProcessEnum(JToken token);
    private void ProcessAdditionalProperties(JToken token);
    private void ProcessAdditionalItems(JToken token);
    private IDictionary`2<string, JsonSchema> ProcessProperties(JToken token);
    private void ProcessItems(JToken token);
    private Nullable`1<JsonSchemaType> ProcessType(JToken token);
    internal static JsonSchemaType MapType(string type);
    internal static string MapType(JsonSchemaType type);
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaConstants : object {
    public static string AdditionalItemsPropertyName;
    public static string AdditionalPropertiesPropertyName;
    public static string DefaultPropertyName;
    public static string DescriptionPropertyName;
    public static string DisallowPropertyName;
    public static string DivisibleByPropertyName;
    public static string EnumPropertyName;
    public static string ExclusiveMaximumPropertyName;
    public static string ExclusiveMinimumPropertyName;
    public static string ExtendsPropertyName;
    public static string FormatPropertyName;
    public static string HiddenPropertyName;
    public static string IdPropertyName;
    public static string ItemsPropertyName;
    public static string MaximumItemsPropertyName;
    public static string MaximumLengthPropertyName;
    public static string MaximumPropertyName;
    public static string MinimumItemsPropertyName;
    public static string MinimumLengthPropertyName;
    public static string MinimumPropertyName;
    public static string OptionLabelPropertyName;
    public static string OptionValuePropertyName;
    public static string PatternPropertiesPropertyName;
    public static string PatternPropertyName;
    public static string PropertiesPropertyName;
    public static string ReadOnlyPropertyName;
    public static string RequiredPropertyName;
    public static string RequiresPropertyName;
    public static string TitlePropertyName;
    public static string TransientPropertyName;
    public static string TypePropertyName;
    public static string UniqueItemsPropertyName;
    public static IDictionary`2<string, JsonSchemaType> JsonSchemaTypeMapping;
    private static JsonSchemaConstants();
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaException : JsonException {
    [CompilerGeneratedAttribute]
private int <LineNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LinePosition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    public int LineNumber { get; }
    public int LinePosition { get; }
    public string Path { get; }
    public JsonSchemaException(string message);
    public JsonSchemaException(string message, Exception innerException);
    public JsonSchemaException(SerializationInfo info, StreamingContext context);
    internal JsonSchemaException(string message, Exception innerException, string path, int lineNumber, int linePosition);
    [CompilerGeneratedAttribute]
public int get_LineNumber();
    [CompilerGeneratedAttribute]
public int get_LinePosition();
    [CompilerGeneratedAttribute]
public string get_Path();
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaGenerator : object {
    [CompilerGeneratedAttribute]
private UndefinedSchemaIdHandling <UndefinedSchemaIdHandling>k__BackingField;
    private IContractResolver _contractResolver;
    private JsonSchemaResolver _resolver;
    private IList`1<TypeSchema> _stack;
    [CompilerGeneratedAttribute]
private JsonSchema <CurrentSchema>k__BackingField;
    public UndefinedSchemaIdHandling UndefinedSchemaIdHandling { get; public set; }
    public IContractResolver ContractResolver { get; public set; }
    private JsonSchema CurrentSchema { get; private set; }
    [CompilerGeneratedAttribute]
public UndefinedSchemaIdHandling get_UndefinedSchemaIdHandling();
    [CompilerGeneratedAttribute]
public void set_UndefinedSchemaIdHandling(UndefinedSchemaIdHandling value);
    public IContractResolver get_ContractResolver();
    public void set_ContractResolver(IContractResolver value);
    [CompilerGeneratedAttribute]
private JsonSchema get_CurrentSchema();
    [CompilerGeneratedAttribute]
private void set_CurrentSchema(JsonSchema value);
    private void Push(TypeSchema typeSchema);
    private TypeSchema Pop();
    public JsonSchema Generate(Type type);
    public JsonSchema Generate(Type type, JsonSchemaResolver resolver);
    public JsonSchema Generate(Type type, bool rootSchemaNullable);
    public JsonSchema Generate(Type type, JsonSchemaResolver resolver, bool rootSchemaNullable);
    private string GetTitle(Type type);
    private string GetDescription(Type type);
    private string GetTypeId(Type type, bool explicitOnly);
    private JsonSchema GenerateInternal(Type type, Required valueRequired, bool required);
    private JsonSchemaType AddNullType(JsonSchemaType type, Required valueRequired);
    private bool HasFlag(DefaultValueHandling value, DefaultValueHandling flag);
    private void GenerateObjectSchema(Type type, JsonObjectContract contract);
    private void GenerateISerializableContract(Type type, JsonISerializableContract contract);
    internal static bool HasFlag(Nullable`1<JsonSchemaType> value, JsonSchemaType flag);
    private JsonSchemaType GetJsonSchemaType(Type type, Required valueRequired);
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaModel : object {
    [CompilerGeneratedAttribute]
private JsonSchemaModel <AdditionalItems>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSchemaModel <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowAdditionalItems>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowAdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSchemaType <Disallow>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <DivisibleBy>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<JToken> <Enum>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExclusiveMaximum>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExclusiveMinimum>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<JsonSchemaModel> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Maximum>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaximumItems>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaximumLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Minimum>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinimumItems>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinimumLength>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, JsonSchemaModel> <PatternProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Patterns>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PositionalItemsValidation>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, JsonSchemaModel> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Required>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSchemaType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UniqueItems>k__BackingField;
    public JsonSchemaModel AdditionalItems { get; public set; }
    public JsonSchemaModel AdditionalProperties { get; public set; }
    public bool AllowAdditionalItems { get; public set; }
    public bool AllowAdditionalProperties { get; public set; }
    public JsonSchemaType Disallow { get; public set; }
    public Nullable`1<double> DivisibleBy { get; public set; }
    public IList`1<JToken> Enum { get; public set; }
    public bool ExclusiveMaximum { get; public set; }
    public bool ExclusiveMinimum { get; public set; }
    public IList`1<JsonSchemaModel> Items { get; public set; }
    public Nullable`1<double> Maximum { get; public set; }
    public Nullable`1<int> MaximumItems { get; public set; }
    public Nullable`1<int> MaximumLength { get; public set; }
    public Nullable`1<double> Minimum { get; public set; }
    public Nullable`1<int> MinimumItems { get; public set; }
    public Nullable`1<int> MinimumLength { get; public set; }
    public IDictionary`2<string, JsonSchemaModel> PatternProperties { get; public set; }
    public IList`1<string> Patterns { get; public set; }
    public bool PositionalItemsValidation { get; public set; }
    public IDictionary`2<string, JsonSchemaModel> Properties { get; public set; }
    public bool Required { get; public set; }
    public JsonSchemaType Type { get; public set; }
    public bool UniqueItems { get; public set; }
    [CompilerGeneratedAttribute]
public JsonSchemaModel get_AdditionalItems();
    [CompilerGeneratedAttribute]
public void set_AdditionalItems(JsonSchemaModel value);
    [CompilerGeneratedAttribute]
public JsonSchemaModel get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(JsonSchemaModel value);
    [CompilerGeneratedAttribute]
public bool get_AllowAdditionalItems();
    [CompilerGeneratedAttribute]
public void set_AllowAdditionalItems(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowAdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AllowAdditionalProperties(bool value);
    [CompilerGeneratedAttribute]
public JsonSchemaType get_Disallow();
    [CompilerGeneratedAttribute]
public void set_Disallow(JsonSchemaType value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_DivisibleBy();
    [CompilerGeneratedAttribute]
public void set_DivisibleBy(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public IList`1<JToken> get_Enum();
    [CompilerGeneratedAttribute]
public void set_Enum(IList`1<JToken> value);
    [CompilerGeneratedAttribute]
public bool get_ExclusiveMaximum();
    [CompilerGeneratedAttribute]
public void set_ExclusiveMaximum(bool value);
    [CompilerGeneratedAttribute]
public bool get_ExclusiveMinimum();
    [CompilerGeneratedAttribute]
public void set_ExclusiveMinimum(bool value);
    [CompilerGeneratedAttribute]
public IList`1<JsonSchemaModel> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IList`1<JsonSchemaModel> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Maximum();
    [CompilerGeneratedAttribute]
public void set_Maximum(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaximumItems();
    [CompilerGeneratedAttribute]
public void set_MaximumItems(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaximumLength();
    [CompilerGeneratedAttribute]
public void set_MaximumLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Minimum();
    [CompilerGeneratedAttribute]
public void set_Minimum(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MinimumItems();
    [CompilerGeneratedAttribute]
public void set_MinimumItems(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MinimumLength();
    [CompilerGeneratedAttribute]
public void set_MinimumLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, JsonSchemaModel> get_PatternProperties();
    [CompilerGeneratedAttribute]
public void set_PatternProperties(IDictionary`2<string, JsonSchemaModel> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Patterns();
    [CompilerGeneratedAttribute]
public void set_Patterns(IList`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_PositionalItemsValidation();
    [CompilerGeneratedAttribute]
public void set_PositionalItemsValidation(bool value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, JsonSchemaModel> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(IDictionary`2<string, JsonSchemaModel> value);
    [CompilerGeneratedAttribute]
public bool get_Required();
    [CompilerGeneratedAttribute]
public void set_Required(bool value);
    [CompilerGeneratedAttribute]
public JsonSchemaType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(JsonSchemaType value);
    [CompilerGeneratedAttribute]
public bool get_UniqueItems();
    [CompilerGeneratedAttribute]
public void set_UniqueItems(bool value);
    public static JsonSchemaModel Create(IList`1<JsonSchema> schemata);
    private static void Combine(JsonSchemaModel model, JsonSchema schema);
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaModelBuilder : object {
    private JsonSchemaNode _node;
    private Dictionary`2<JsonSchemaNode, JsonSchemaModel> _nodeModels;
    private JsonSchemaNodeCollection _nodes;
    public JsonSchemaModel Build(JsonSchema schema);
    public JsonSchemaNode AddSchema(JsonSchemaNode existingNode, JsonSchema schema);
    public void AddProperties(IDictionary`2<string, JsonSchema> source, IDictionary`2<string, JsonSchemaNode> target);
    public void AddProperty(IDictionary`2<string, JsonSchemaNode> target, string propertyName, JsonSchema schema);
    public void AddItem(JsonSchemaNode parentNode, int index, JsonSchema schema);
    public void AddAdditionalProperties(JsonSchemaNode parentNode, JsonSchema schema);
    public void AddAdditionalItems(JsonSchemaNode parentNode, JsonSchema schema);
    private JsonSchemaModel BuildNodeModel(JsonSchemaNode node);
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaNode : object {
    [CompilerGeneratedAttribute]
private JsonSchemaNode <AdditionalItems>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSchemaNode <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<JsonSchemaNode> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, JsonSchemaNode> <PatternProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, JsonSchemaNode> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private ReadOnlyCollection`1<JsonSchema> <Schemas>k__BackingField;
    public JsonSchemaNode AdditionalItems { get; public set; }
    public JsonSchemaNode AdditionalProperties { get; public set; }
    public string Id { get; }
    public List`1<JsonSchemaNode> Items { get; }
    public Dictionary`2<string, JsonSchemaNode> PatternProperties { get; }
    public Dictionary`2<string, JsonSchemaNode> Properties { get; }
    public ReadOnlyCollection`1<JsonSchema> Schemas { get; }
    public JsonSchemaNode(JsonSchema schema);
    private JsonSchemaNode(JsonSchemaNode source, JsonSchema schema);
    [CompilerGeneratedAttribute]
public JsonSchemaNode get_AdditionalItems();
    [CompilerGeneratedAttribute]
public void set_AdditionalItems(JsonSchemaNode value);
    [CompilerGeneratedAttribute]
public JsonSchemaNode get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(JsonSchemaNode value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public List`1<JsonSchemaNode> get_Items();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, JsonSchemaNode> get_PatternProperties();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, JsonSchemaNode> get_Properties();
    [CompilerGeneratedAttribute]
public ReadOnlyCollection`1<JsonSchema> get_Schemas();
    public JsonSchemaNode Combine(JsonSchema schema);
    public static string GetId(IEnumerable`1<JsonSchema> schemata);
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaNodeCollection : KeyedCollection`2<string, JsonSchemaNode> {
    protected virtual string GetKeyForItem(JsonSchemaNode item);
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaResolver : object {
    [CompilerGeneratedAttribute]
private IList`1<JsonSchema> <LoadedSchemas>k__BackingField;
    public IList`1<JsonSchema> LoadedSchemas { get; protected set; }
    [CompilerGeneratedAttribute]
public IList`1<JsonSchema> get_LoadedSchemas();
    [CompilerGeneratedAttribute]
protected void set_LoadedSchemas(IList`1<JsonSchema> value);
    public virtual JsonSchema GetSchema(string reference);
}
[FlagsAttribute]
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaType : Enum {
    public int value__;
    public static JsonSchemaType None;
    public static JsonSchemaType String;
    public static JsonSchemaType Float;
    public static JsonSchemaType Integer;
    public static JsonSchemaType Boolean;
    public static JsonSchemaType Object;
    public static JsonSchemaType Array;
    public static JsonSchemaType Null;
    public static JsonSchemaType Any;
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Schema.JsonSchemaWriter : object {
    private JsonSchemaResolver _resolver;
    private JsonWriter _writer;
    public JsonSchemaWriter(JsonWriter writer, JsonSchemaResolver resolver);
    private void ReferenceOrWriteSchema(JsonSchema schema);
    public void WriteSchema(JsonSchema schema);
    private void WriteSchemaDictionaryIfNotNull(JsonWriter writer, string propertyName, IDictionary`2<string, JsonSchema> properties);
    private void WriteItems(JsonSchema schema);
    private void WriteType(string propertyName, JsonWriter writer, JsonSchemaType type);
    private void WritePropertyIfNotNull(JsonWriter writer, string propertyName, object value);
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.Schema.UndefinedSchemaIdHandling : Enum {
    public int value__;
    public static UndefinedSchemaIdHandling None;
    public static UndefinedSchemaIdHandling UseTypeName;
    public static UndefinedSchemaIdHandling UseAssemblyQualifiedName;
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Schema.ValidationEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private JsonSchemaException <Exception>k__BackingField;
    public JsonSchemaException Exception { get; }
    public string Message { get; }
    public string Path { get; }
    internal ValidationEventArgs(JsonSchemaException ex);
    [CompilerGeneratedAttribute]
public JsonSchemaException get_Exception();
    public string get_Message();
    public string get_Path();
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Schema.ValidationEventHandler : MulticastDelegate {
    public ValidationEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, ValidationEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, ValidationEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.CachedAttributeGetter`1 : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ThreadSafeStore`2<object, T> TypeAttributeCache;
    private static CachedAttributeGetter`1();
    [NullableContextAttribute("1")]
public static T GetAttribute(object type);
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.CamelCaseNamingStrategy : NamingStrategy {
    public CamelCaseNamingStrategy(bool processDictionaryKeys, bool overrideSpecifiedNames);
    public CamelCaseNamingStrategy(bool processDictionaryKeys, bool overrideSpecifiedNames, bool processExtensionDataNames);
    [NullableContextAttribute("1")]
protected virtual string ResolvePropertyName(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver : DefaultContractResolver {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<StructMultiKey`2<Type, Type>, JsonContract> _contractCache;
    private static DefaultJsonNameTable NameTable;
    private static object TypeContractCacheLock;
    private static CamelCasePropertyNamesContractResolver();
    public virtual JsonContract ResolveContract(Type type);
    internal virtual DefaultJsonNameTable GetNameTable();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultContractResolver : object {
    [CompilerGeneratedAttribute]
private static IContractResolver <Instance>k__BackingField;
    private static String[] BlacklistedTypeNames;
    private static JsonConverter[] BuiltInConverters;
    private DefaultJsonNameTable _nameTable;
    private ThreadSafeStore`2<Type, JsonContract> _contractCache;
    [CompilerGeneratedAttribute]
private BindingFlags <DefaultMembersSearchFlags>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SerializeCompilerGeneratedMembers>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreSerializableInterface>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreSerializableAttribute>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreIsSpecifiedMembers>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreShouldSerializeMembers>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private NamingStrategy <NamingStrategy>k__BackingField;
    internal static IContractResolver Instance { get; }
    public bool DynamicCodeGeneration { get; }
    [ObsoleteAttribute("DefaultMembersSearchFlags is obsolete. To modify the members serialized inherit from DefaultContractResolver and override the GetSerializableMembers method instead.")]
public BindingFlags DefaultMembersSearchFlags { get; public set; }
    public bool SerializeCompilerGeneratedMembers { get; public set; }
    public bool IgnoreSerializableInterface { get; public set; }
    public bool IgnoreSerializableAttribute { get; public set; }
    public bool IgnoreIsSpecifiedMembers { get; public set; }
    public bool IgnoreShouldSerializeMembers { get; public set; }
    [NullableAttribute("2")]
public NamingStrategy NamingStrategy { get; public set; }
    private static DefaultContractResolver();
    [CompilerGeneratedAttribute]
internal static IContractResolver get_Instance();
    public bool get_DynamicCodeGeneration();
    [CompilerGeneratedAttribute]
public BindingFlags get_DefaultMembersSearchFlags();
    [CompilerGeneratedAttribute]
public void set_DefaultMembersSearchFlags(BindingFlags value);
    [CompilerGeneratedAttribute]
public bool get_SerializeCompilerGeneratedMembers();
    [CompilerGeneratedAttribute]
public void set_SerializeCompilerGeneratedMembers(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreSerializableInterface();
    [CompilerGeneratedAttribute]
public void set_IgnoreSerializableInterface(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreSerializableAttribute();
    [CompilerGeneratedAttribute]
public void set_IgnoreSerializableAttribute(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreIsSpecifiedMembers();
    [CompilerGeneratedAttribute]
public void set_IgnoreIsSpecifiedMembers(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreShouldSerializeMembers();
    [CompilerGeneratedAttribute]
public void set_IgnoreShouldSerializeMembers(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public NamingStrategy get_NamingStrategy();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_NamingStrategy(NamingStrategy value);
    public virtual JsonContract ResolveContract(Type type);
    private static bool FilterMembers(MemberInfo member);
    protected virtual List`1<MemberInfo> GetSerializableMembers(Type objectType);
    private bool ShouldSerializeEntityMember(MemberInfo memberInfo);
    protected virtual JsonObjectContract CreateObjectContract(Type objectType);
    private static void ThrowUnableToSerializeError(object o, StreamingContext context);
    private MemberInfo GetExtensionDataMemberForType(Type type);
    private static void SetExtensionDataDelegates(JsonObjectContract contract, MemberInfo member);
    private ConstructorInfo GetAttributeConstructor(Type objectType);
    private ConstructorInfo GetImmutableConstructor(Type objectType, JsonPropertyCollection memberProperties);
    private ConstructorInfo GetParameterizedConstructor(Type objectType);
    protected virtual IList`1<JsonProperty> CreateConstructorParameters(ConstructorInfo constructor, JsonPropertyCollection memberProperties);
    private JsonProperty MatchProperty(JsonPropertyCollection properties, string name, Type type);
    protected virtual JsonProperty CreatePropertyFromConstructorParameter(JsonProperty matchingMemberProperty, ParameterInfo parameterInfo);
    protected virtual JsonConverter ResolveContractConverter(Type objectType);
    private Func`1<object> GetDefaultCreator(Type createdType);
    private void InitializeContract(JsonContract contract);
    private void ResolveCallbackMethods(JsonContract contract, Type t);
    private void GetCallbackMethodsForType(Type type, List`1& onSerializing, List`1& onSerialized, List`1& onDeserializing, List`1& onDeserialized, List`1& onError);
    private static bool IsConcurrentOrObservableCollection(Type t);
    private static bool ShouldSkipDeserialized(Type t);
    private static bool ShouldSkipSerializing(Type t);
    private List`1<Type> GetClassHierarchyForType(Type type);
    protected virtual JsonDictionaryContract CreateDictionaryContract(Type objectType);
    protected virtual JsonArrayContract CreateArrayContract(Type objectType);
    protected virtual JsonPrimitiveContract CreatePrimitiveContract(Type objectType);
    protected virtual JsonLinqContract CreateLinqContract(Type objectType);
    protected virtual JsonISerializableContract CreateISerializableContract(Type objectType);
    protected virtual JsonDynamicContract CreateDynamicContract(Type objectType);
    protected virtual JsonStringContract CreateStringContract(Type objectType);
    protected virtual JsonContract CreateContract(Type objectType);
    internal static bool IsJsonPrimitiveType(Type t);
    internal static bool IsIConvertible(Type t);
    internal static bool CanConvertToString(Type type);
    private static bool IsValidCallback(MethodInfo method, ParameterInfo[] parameters, Type attributeType, MethodInfo currentCallback, Type& prevAttributeType);
    internal static string GetClrTypeFullName(Type type);
    protected virtual IList`1<JsonProperty> CreateProperties(Type type, MemberSerialization memberSerialization);
    internal virtual DefaultJsonNameTable GetNameTable();
    protected virtual IValueProvider CreateMemberValueProvider(MemberInfo member);
    protected virtual JsonProperty CreateProperty(MemberInfo member, MemberSerialization memberSerialization);
    private void SetPropertySettingsFromAttributes(JsonProperty property, object attributeProvider, string name, Type declaringType, MemberSerialization memberSerialization, Boolean& allowNonPublicAccess);
    private Predicate`1<object> CreateShouldSerializeTest(MemberInfo member);
    private void SetIsSpecifiedActions(JsonProperty property, MemberInfo member, bool allowNonPublicAccess);
    protected virtual string ResolvePropertyName(string propertyName);
    protected virtual string ResolveExtensionDataName(string extensionDataName);
    protected virtual string ResolveDictionaryKey(string dictionaryKey);
    public string GetResolvedPropertyName(string propertyName);
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultNamingStrategy : NamingStrategy {
    [NullableContextAttribute("1")]
protected virtual string ResolvePropertyName(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultReferenceResolver : object {
    private int _referenceCount;
    private BidirectionalDictionary`2<string, object> GetMappings(object context);
    public sealed virtual object ResolveReference(object context, string reference);
    public sealed virtual string GetReference(object context, object value);
    public sealed virtual void AddReference(object context, string reference, object value);
    public sealed virtual bool IsReferenced(object context, object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DefaultSerializationBinder : SerializationBinder {
    internal static DefaultSerializationBinder Instance;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ThreadSafeStore`2<StructMultiKey`2<string, string>, Type> _typeCache;
    private static DefaultSerializationBinder();
    private Type GetTypeFromTypeNameKey(StructMultiKey`2<string, string> typeNameKey);
    private Type GetGenericTypeFromTypeName(string typeName, Assembly assembly);
    private Type GetTypeByName(StructMultiKey`2<string, string> typeNameKey);
    public virtual Type BindToType(string assemblyName, string typeName);
    [NullableContextAttribute("2")]
public virtual void BindToName(Type serializedType, String& assemblyName, String& typeName);
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.DiagnosticsTraceWriter : object {
    [CompilerGeneratedAttribute]
private TraceLevel <LevelFilter>k__BackingField;
    public TraceLevel LevelFilter { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TraceLevel get_LevelFilter();
    [CompilerGeneratedAttribute]
public void set_LevelFilter(TraceLevel value);
    private TraceEventType GetTraceEventType(TraceLevel level);
    [NullableContextAttribute("1")]
public sealed virtual void Trace(TraceLevel level, string message, Exception ex);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ErrorContext : object {
    [CompilerGeneratedAttribute]
private Exception <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Handled>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private object <Member>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private object <OriginalObject>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Traced>k__BackingField;
    public Exception Error { get; }
    public bool Handled { get; public set; }
    [NullableAttribute("2")]
public object Member { get; }
    [NullableAttribute("2")]
public object OriginalObject { get; }
    public string Path { get; }
    internal bool Traced { get; internal set; }
    internal ErrorContext(object originalObject, object member, string path, Exception error);
    [CompilerGeneratedAttribute]
public Exception get_Error();
    [CompilerGeneratedAttribute]
public bool get_Handled();
    [CompilerGeneratedAttribute]
public void set_Handled(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_Member();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_OriginalObject();
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
internal bool get_Traced();
    [CompilerGeneratedAttribute]
internal void set_Traced(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ErrorEventArgs : EventArgs {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private object <CurrentObject>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorContext <ErrorContext>k__BackingField;
    [NullableAttribute("2")]
public object CurrentObject { get; }
    public ErrorContext ErrorContext { get; }
    public ErrorEventArgs(object currentObject, ErrorContext errorContext);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_CurrentObject();
    [CompilerGeneratedAttribute]
public ErrorContext get_ErrorContext();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ExpressionValueProvider : object {
    private MemberInfo _memberInfo;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`2<object, object> _getter;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Action`2<object, object> _setter;
    public ExpressionValueProvider(MemberInfo memberInfo);
    public sealed virtual void SetValue(object target, object value);
    public sealed virtual object GetValue(object target);
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ExtensionDataGetter : MulticastDelegate {
    public ExtensionDataGetter(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual IEnumerable`1<KeyValuePair`2<object, object>> Invoke(object o);
    public virtual IAsyncResult BeginInvoke(object o, AsyncCallback callback, object object);
    public virtual IEnumerable`1<KeyValuePair`2<object, object>> EndInvoke(IAsyncResult result);
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ExtensionDataSetter : MulticastDelegate {
    public ExtensionDataSetter(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object o, string key, object value);
    public virtual IAsyncResult BeginInvoke(object o, string key, object value, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
internal interface Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IAttributeProvider {
    public abstract virtual IList`1<Attribute> GetAttributes(bool inherit);
    public abstract virtual IList`1<Attribute> GetAttributes(Type attributeType, bool inherit);
}
[NullableContextAttribute("1")]
internal interface Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IContractResolver {
    public abstract virtual JsonContract ResolveContract(Type type);
}
[NullableContextAttribute("1")]
internal interface Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IReferenceResolver {
    public abstract virtual void AddReference(object context, string reference, object value);
    public abstract virtual string GetReference(object context, object value);
    public abstract virtual bool IsReferenced(object context, object value);
    public abstract virtual object ResolveReference(object context, string reference);
}
[NullableContextAttribute("1")]
internal interface Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ISerializationBinder {
    [NullableContextAttribute("2")]
public abstract virtual void BindToName(Type serializedType, String& assemblyName, String& typeName);
    public abstract virtual Type BindToType(string assemblyName, string typeName);
}
[NullableContextAttribute("1")]
internal interface Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ITraceWriter {
    public TraceLevel LevelFilter { get; }
    public abstract virtual TraceLevel get_LevelFilter();
    public abstract virtual void Trace(TraceLevel level, string message, Exception ex);
}
[NullableContextAttribute("1")]
internal interface Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.IValueProvider {
    public abstract virtual object GetValue(object target);
    public abstract virtual void SetValue(object target, object value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonArrayContract : JsonContainerContract {
    [CompilerGeneratedAttribute]
private Type <CollectionItemType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsMultidimensionalArray>k__BackingField;
    private Type _genericCollectionDefinitionType;
    private Type _genericWrapperType;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ObjectConstructor`1<object> _genericWrapperCreator;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`1<object> _genericTemporaryCollectionCreator;
    [CompilerGeneratedAttribute]
private bool <IsArray>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShouldCreateWrapper>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanDeserialize>k__BackingField;
    private ConstructorInfo _parameterizedConstructor;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ObjectConstructor`1<object> _parameterizedCreator;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ObjectConstructor`1<object> _overrideCreator;
    [CompilerGeneratedAttribute]
private bool <HasParameterizedCreator>k__BackingField;
    public Type CollectionItemType { get; }
    public bool IsMultidimensionalArray { get; }
    internal bool IsArray { get; }
    internal bool ShouldCreateWrapper { get; }
    internal bool CanDeserialize { get; private set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal ObjectConstructor`1<object> ParameterizedCreator { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ObjectConstructor`1<object> OverrideCreator { get; public set; }
    public bool HasParameterizedCreator { get; public set; }
    internal bool HasParameterizedCreatorInternal { get; }
    [NullableContextAttribute("1")]
public JsonArrayContract(Type underlyingType);
    [CompilerGeneratedAttribute]
public Type get_CollectionItemType();
    [CompilerGeneratedAttribute]
public bool get_IsMultidimensionalArray();
    [CompilerGeneratedAttribute]
internal bool get_IsArray();
    [CompilerGeneratedAttribute]
internal bool get_ShouldCreateWrapper();
    [CompilerGeneratedAttribute]
internal bool get_CanDeserialize();
    [CompilerGeneratedAttribute]
private void set_CanDeserialize(bool value);
    internal ObjectConstructor`1<object> get_ParameterizedCreator();
    public ObjectConstructor`1<object> get_OverrideCreator();
    public void set_OverrideCreator(ObjectConstructor`1<object> value);
    [CompilerGeneratedAttribute]
public bool get_HasParameterizedCreator();
    [CompilerGeneratedAttribute]
public void set_HasParameterizedCreator(bool value);
    internal bool get_HasParameterizedCreatorInternal();
    [NullableContextAttribute("1")]
internal IWrappedCollection CreateWrapper(object list);
    [NullableContextAttribute("1")]
internal IList CreateTemporaryCollection();
    [NullableContextAttribute("1")]
private void StoreFSharpListCreatorIfNecessary(Type underlyingType);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContainerContract : JsonContract {
    private JsonContract _itemContract;
    [CompilerGeneratedAttribute]
private JsonContract <FinalItemContract>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonConverter <ItemConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ItemIsReference>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ReferenceLoopHandling> <ItemReferenceLoopHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TypeNameHandling> <ItemTypeNameHandling>k__BackingField;
    internal JsonContract FinalItemContract { get; private set; }
    internal JsonContract ItemContract { get; internal set; }
    public JsonConverter ItemConverter { get; public set; }
    public Nullable`1<bool> ItemIsReference { get; public set; }
    public Nullable`1<ReferenceLoopHandling> ItemReferenceLoopHandling { get; public set; }
    public Nullable`1<TypeNameHandling> ItemTypeNameHandling { get; public set; }
    [NullableContextAttribute("1")]
internal JsonContainerContract(Type underlyingType);
    [CompilerGeneratedAttribute]
internal JsonContract get_FinalItemContract();
    [CompilerGeneratedAttribute]
private void set_FinalItemContract(JsonContract value);
    internal JsonContract get_ItemContract();
    internal void set_ItemContract(JsonContract value);
    [CompilerGeneratedAttribute]
public JsonConverter get_ItemConverter();
    [CompilerGeneratedAttribute]
public void set_ItemConverter(JsonConverter value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ItemIsReference();
    [CompilerGeneratedAttribute]
public void set_ItemIsReference(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<ReferenceLoopHandling> get_ItemReferenceLoopHandling();
    [CompilerGeneratedAttribute]
public void set_ItemReferenceLoopHandling(Nullable`1<ReferenceLoopHandling> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TypeNameHandling> get_ItemTypeNameHandling();
    [CompilerGeneratedAttribute]
public void set_ItemTypeNameHandling(Nullable`1<TypeNameHandling> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContract : object {
    private Type _createdType;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<SerializationCallback> _onDeserializedCallbacks;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<SerializationCallback> _onDeserializingCallbacks;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<SerializationErrorCallback> _onErrorCallbacks;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<SerializationCallback> _onSerializedCallbacks;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<SerializationCallback> _onSerializingCallbacks;
    internal JsonContractType ContractType;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JsonConverter <Converter>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`1<object> <DefaultCreator>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DefaultCreatorNonPublic>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JsonConverter <InternalConverter>k__BackingField;
    internal ReadType InternalReadType;
    internal bool IsConvertable;
    internal bool IsEnum;
    internal bool IsInstantiable;
    internal bool IsNullable;
    internal bool IsReadOnlyOrFixedSize;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsReference>k__BackingField;
    internal bool IsSealed;
    internal Type NonNullableUnderlyingType;
    [CompilerGeneratedAttribute]
private Type <UnderlyingType>k__BackingField;
    [NullableAttribute("2")]
public JsonConverter Converter { get; public set; }
    public Type CreatedType { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`1<object> DefaultCreator { get; public set; }
    public bool DefaultCreatorNonPublic { get; public set; }
    [NullableAttribute("2")]
public JsonConverter InternalConverter { get; internal set; }
    public Nullable`1<bool> IsReference { get; public set; }
    public IList`1<SerializationCallback> OnDeserializedCallbacks { get; }
    public IList`1<SerializationCallback> OnDeserializingCallbacks { get; }
    public IList`1<SerializationErrorCallback> OnErrorCallbacks { get; }
    public IList`1<SerializationCallback> OnSerializedCallbacks { get; }
    public IList`1<SerializationCallback> OnSerializingCallbacks { get; }
    public Type UnderlyingType { get; }
    internal JsonContract(Type underlyingType);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public JsonConverter get_Converter();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Converter(JsonConverter value);
    public Type get_CreatedType();
    public void set_CreatedType(Type value);
    [CompilerGeneratedAttribute]
public Func`1<object> get_DefaultCreator();
    [CompilerGeneratedAttribute]
public void set_DefaultCreator(Func`1<object> value);
    [CompilerGeneratedAttribute]
public bool get_DefaultCreatorNonPublic();
    [CompilerGeneratedAttribute]
public void set_DefaultCreatorNonPublic(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public JsonConverter get_InternalConverter();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_InternalConverter(JsonConverter value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsReference();
    [CompilerGeneratedAttribute]
public void set_IsReference(Nullable`1<bool> value);
    public IList`1<SerializationCallback> get_OnDeserializedCallbacks();
    public IList`1<SerializationCallback> get_OnDeserializingCallbacks();
    public IList`1<SerializationErrorCallback> get_OnErrorCallbacks();
    public IList`1<SerializationCallback> get_OnSerializedCallbacks();
    public IList`1<SerializationCallback> get_OnSerializingCallbacks();
    [CompilerGeneratedAttribute]
public Type get_UnderlyingType();
    internal void InvokeOnSerializing(object o, StreamingContext context);
    internal void InvokeOnSerialized(object o, StreamingContext context);
    internal void InvokeOnDeserializing(object o, StreamingContext context);
    internal void InvokeOnDeserialized(object o, StreamingContext context);
    internal void InvokeOnError(object o, StreamingContext context, ErrorContext errorContext);
    internal static SerializationCallback CreateSerializationCallback(MethodInfo callbackMethodInfo);
    internal static SerializationErrorCallback CreateSerializationErrorCallback(MethodInfo callbackMethodInfo);
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonContractType : Enum {
    public int value__;
    public static JsonContractType None;
    public static JsonContractType Object;
    public static JsonContractType Array;
    public static JsonContractType Primitive;
    public static JsonContractType String;
    public static JsonContractType Dictionary;
    public static JsonContractType Dynamic;
    public static JsonContractType Serializable;
    public static JsonContractType Linq;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonDictionaryContract : JsonContainerContract {
    private Type _genericCollectionDefinitionType;
    private ConstructorInfo _parameterizedConstructor;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`1<object> _genericTemporaryDictionaryCreator;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ObjectConstructor`1<object> _genericWrapperCreator;
    private Type _genericWrapperType;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ObjectConstructor`1<object> _parameterizedCreator;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<string, string> <DictionaryKeyResolver>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <DictionaryKeyType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <DictionaryValueType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasParameterizedCreator>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonContract <KeyContract>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ObjectConstructor`1<object> <OverrideCreator>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShouldCreateWrapper>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<string, string> DictionaryKeyResolver { get; public set; }
    public Type DictionaryKeyType { get; }
    public Type DictionaryValueType { get; }
    public bool HasParameterizedCreator { get; public set; }
    internal bool HasParameterizedCreatorInternal { get; }
    internal JsonContract KeyContract { get; internal set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ObjectConstructor`1<object> OverrideCreator { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal ObjectConstructor`1<object> ParameterizedCreator { get; }
    internal bool ShouldCreateWrapper { get; }
    [NullableContextAttribute("1")]
public JsonDictionaryContract(Type underlyingType);
    [CompilerGeneratedAttribute]
public Func`2<string, string> get_DictionaryKeyResolver();
    [CompilerGeneratedAttribute]
public void set_DictionaryKeyResolver(Func`2<string, string> value);
    [CompilerGeneratedAttribute]
public Type get_DictionaryKeyType();
    [CompilerGeneratedAttribute]
public Type get_DictionaryValueType();
    [CompilerGeneratedAttribute]
public bool get_HasParameterizedCreator();
    [CompilerGeneratedAttribute]
public void set_HasParameterizedCreator(bool value);
    internal bool get_HasParameterizedCreatorInternal();
    [CompilerGeneratedAttribute]
internal JsonContract get_KeyContract();
    [CompilerGeneratedAttribute]
internal void set_KeyContract(JsonContract value);
    [CompilerGeneratedAttribute]
public ObjectConstructor`1<object> get_OverrideCreator();
    [CompilerGeneratedAttribute]
public void set_OverrideCreator(ObjectConstructor`1<object> value);
    internal ObjectConstructor`1<object> get_ParameterizedCreator();
    [CompilerGeneratedAttribute]
internal bool get_ShouldCreateWrapper();
    [NullableContextAttribute("1")]
internal IWrappedDictionary CreateWrapper(object dictionary);
    [NullableContextAttribute("1")]
internal IDictionary CreateTemporaryDictionary();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonDynamicContract : JsonContainerContract {
    [CompilerGeneratedAttribute]
private JsonPropertyCollection <Properties>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<string, string> <PropertyNameResolver>k__BackingField;
    private ThreadSafeStore`2<string, CallSite`1<Func`3<CallSite, object, object>>> _callSiteGetters;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ThreadSafeStore`2<string, CallSite`1<Func`4<CallSite, object, object, object>>> _callSiteSetters;
    public JsonPropertyCollection Properties { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<string, string> PropertyNameResolver { get; public set; }
    public JsonDynamicContract(Type underlyingType);
    [CompilerGeneratedAttribute]
public JsonPropertyCollection get_Properties();
    [CompilerGeneratedAttribute]
public Func`2<string, string> get_PropertyNameResolver();
    [CompilerGeneratedAttribute]
public void set_PropertyNameResolver(Func`2<string, string> value);
    private static CallSite`1<Func`3<CallSite, object, object>> CreateCallSiteGetter(string name);
    private static CallSite`1<Func`4<CallSite, object, object, object>> CreateCallSiteSetter(string name);
    internal bool TryGetMember(IDynamicMetaObjectProvider dynamicProvider, string name, Object& value);
    internal bool TrySetMember(IDynamicMetaObjectProvider dynamicProvider, string name, object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonFormatterConverter : object {
    private JsonSerializerInternalReader _reader;
    private JsonISerializableContract _contract;
    [NullableAttribute("2")]
private JsonProperty _member;
    public JsonFormatterConverter(JsonSerializerInternalReader reader, JsonISerializableContract contract, JsonProperty member);
    private T GetTokenValue(object value);
    public sealed virtual object Convert(object value, Type type);
    public sealed virtual object Convert(object value, TypeCode typeCode);
    public sealed virtual bool ToBoolean(object value);
    public sealed virtual byte ToByte(object value);
    public sealed virtual char ToChar(object value);
    public sealed virtual DateTime ToDateTime(object value);
    public sealed virtual decimal ToDecimal(object value);
    public sealed virtual double ToDouble(object value);
    public sealed virtual short ToInt16(object value);
    public sealed virtual int ToInt32(object value);
    public sealed virtual long ToInt64(object value);
    public sealed virtual sbyte ToSByte(object value);
    public sealed virtual float ToSingle(object value);
    public sealed virtual string ToString(object value);
    public sealed virtual ushort ToUInt16(object value);
    public sealed virtual UInt32 ToUInt32(object value);
    public sealed virtual ulong ToUInt64(object value);
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonISerializableContract : JsonContainerContract {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ObjectConstructor`1<object> <ISerializableCreator>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ObjectConstructor`1<object> ISerializableCreator { get; public set; }
    [NullableContextAttribute("1")]
public JsonISerializableContract(Type underlyingType);
    [CompilerGeneratedAttribute]
public ObjectConstructor`1<object> get_ISerializableCreator();
    [CompilerGeneratedAttribute]
public void set_ISerializableCreator(ObjectConstructor`1<object> value);
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonLinqContract : JsonContract {
    [NullableContextAttribute("1")]
public JsonLinqContract(Type underlyingType);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonObjectContract : JsonContainerContract {
    [CompilerGeneratedAttribute]
private MemberSerialization <MemberSerialization>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MissingMemberHandling> <MissingMemberHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Required> <ItemRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<NullValueHandling> <ItemNullValueHandling>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private JsonPropertyCollection <Properties>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ObjectConstructor`1<object> <OverrideCreator>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ObjectConstructor`1<object> <ParameterizedCreator>k__BackingField;
    [CompilerGeneratedAttribute]
private ExtensionDataSetter <ExtensionDataSetter>k__BackingField;
    [CompilerGeneratedAttribute]
private ExtensionDataGetter <ExtensionDataGetter>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<string, string> <ExtensionDataNameResolver>k__BackingField;
    internal bool ExtensionDataIsJToken;
    private Nullable`1<bool> _hasRequiredOrDefaultValueProperties;
    private JsonPropertyCollection _creatorParameters;
    private Type _extensionDataValueType;
    public MemberSerialization MemberSerialization { get; public set; }
    public Nullable`1<MissingMemberHandling> MissingMemberHandling { get; public set; }
    public Nullable`1<Required> ItemRequired { get; public set; }
    public Nullable`1<NullValueHandling> ItemNullValueHandling { get; public set; }
    [NullableAttribute("1")]
public JsonPropertyCollection Properties { get; }
    [NullableAttribute("1")]
public JsonPropertyCollection CreatorParameters { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ObjectConstructor`1<object> OverrideCreator { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal ObjectConstructor`1<object> ParameterizedCreator { get; internal set; }
    public ExtensionDataSetter ExtensionDataSetter { get; public set; }
    public ExtensionDataGetter ExtensionDataGetter { get; public set; }
    public Type ExtensionDataValueType { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<string, string> ExtensionDataNameResolver { get; public set; }
    internal bool HasRequiredOrDefaultValueProperties { get; }
    [NullableContextAttribute("1")]
public JsonObjectContract(Type underlyingType);
    [CompilerGeneratedAttribute]
public MemberSerialization get_MemberSerialization();
    [CompilerGeneratedAttribute]
public void set_MemberSerialization(MemberSerialization value);
    [CompilerGeneratedAttribute]
public Nullable`1<MissingMemberHandling> get_MissingMemberHandling();
    [CompilerGeneratedAttribute]
public void set_MissingMemberHandling(Nullable`1<MissingMemberHandling> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Required> get_ItemRequired();
    [CompilerGeneratedAttribute]
public void set_ItemRequired(Nullable`1<Required> value);
    [CompilerGeneratedAttribute]
public Nullable`1<NullValueHandling> get_ItemNullValueHandling();
    [CompilerGeneratedAttribute]
public void set_ItemNullValueHandling(Nullable`1<NullValueHandling> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public JsonPropertyCollection get_Properties();
    [NullableContextAttribute("1")]
public JsonPropertyCollection get_CreatorParameters();
    [CompilerGeneratedAttribute]
public ObjectConstructor`1<object> get_OverrideCreator();
    [CompilerGeneratedAttribute]
public void set_OverrideCreator(ObjectConstructor`1<object> value);
    [CompilerGeneratedAttribute]
internal ObjectConstructor`1<object> get_ParameterizedCreator();
    [CompilerGeneratedAttribute]
internal void set_ParameterizedCreator(ObjectConstructor`1<object> value);
    [CompilerGeneratedAttribute]
public ExtensionDataSetter get_ExtensionDataSetter();
    [CompilerGeneratedAttribute]
public void set_ExtensionDataSetter(ExtensionDataSetter value);
    [CompilerGeneratedAttribute]
public ExtensionDataGetter get_ExtensionDataGetter();
    [CompilerGeneratedAttribute]
public void set_ExtensionDataGetter(ExtensionDataGetter value);
    public Type get_ExtensionDataValueType();
    public void set_ExtensionDataValueType(Type value);
    [CompilerGeneratedAttribute]
public Func`2<string, string> get_ExtensionDataNameResolver();
    [CompilerGeneratedAttribute]
public void set_ExtensionDataNameResolver(Func`2<string, string> value);
    internal bool get_HasRequiredOrDefaultValueProperties();
    [NullableContextAttribute("1")]
[SecuritySafeCriticalAttribute]
internal object GetUninitializedObject();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonPrimitiveContract : JsonContract {
    private static Dictionary`2<Type, ReadType> ReadTypeMap;
    [CompilerGeneratedAttribute]
private PrimitiveTypeCode <TypeCode>k__BackingField;
    internal PrimitiveTypeCode TypeCode { get; internal set; }
    public JsonPrimitiveContract(Type underlyingType);
    private static JsonPrimitiveContract();
    [CompilerGeneratedAttribute]
internal PrimitiveTypeCode get_TypeCode();
    [CompilerGeneratedAttribute]
internal void set_TypeCode(PrimitiveTypeCode value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonProperty : object {
    private object _defaultValue;
    internal bool _hasExplicitDefaultValue;
    private bool _hasGeneratedDefaultValue;
    private string _propertyName;
    private Type _propertyType;
    internal Nullable`1<Required> _required;
    internal bool _skipPropertyNameEscape;
    [CompilerGeneratedAttribute]
private IAttributeProvider <AttributeProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonConverter <Converter>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <DeclaringType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DefaultValueHandling> <DefaultValueHandling>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Predicate`1<object> <GetIsSpecified>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasMemberAttribute>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Ignored>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsReference>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonConverter <ItemConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ItemIsReference>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ReferenceLoopHandling> <ItemReferenceLoopHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TypeNameHandling> <ItemTypeNameHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<NullValueHandling> <NullValueHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ObjectCreationHandling> <ObjectCreationHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonContract <PropertyContract>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Readable>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ReferenceLoopHandling> <ReferenceLoopHandling>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`2<object, object> <SetIsSpecified>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Predicate`1<object> <ShouldDeserialize>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Predicate`1<object> <ShouldSerialize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TypeNameHandling> <TypeNameHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UnderlyingName>k__BackingField;
    [CompilerGeneratedAttribute]
private IValueProvider <ValueProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Writable>k__BackingField;
    public IAttributeProvider AttributeProvider { get; public set; }
    public JsonConverter Converter { get; public set; }
    public Type DeclaringType { get; public set; }
    public object DefaultValue { get; public set; }
    public Nullable`1<DefaultValueHandling> DefaultValueHandling { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Predicate`1<object> GetIsSpecified { get; public set; }
    public bool HasMemberAttribute { get; public set; }
    public bool Ignored { get; public set; }
    public Nullable`1<bool> IsReference { get; public set; }
    public bool IsRequiredSpecified { get; }
    public JsonConverter ItemConverter { get; public set; }
    public Nullable`1<bool> ItemIsReference { get; public set; }
    public Nullable`1<ReferenceLoopHandling> ItemReferenceLoopHandling { get; public set; }
    public Nullable`1<TypeNameHandling> ItemTypeNameHandling { get; public set; }
    [ObsoleteAttribute("MemberConverter is obsolete. Use Converter instead.")]
public JsonConverter MemberConverter { get; public set; }
    public Nullable`1<NullValueHandling> NullValueHandling { get; public set; }
    public Nullable`1<ObjectCreationHandling> ObjectCreationHandling { get; public set; }
    public Nullable`1<int> Order { get; public set; }
    internal JsonContract PropertyContract { get; internal set; }
    public string PropertyName { get; public set; }
    public Type PropertyType { get; public set; }
    public bool Readable { get; public set; }
    public Nullable`1<ReferenceLoopHandling> ReferenceLoopHandling { get; public set; }
    public Required Required { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`2<object, object> SetIsSpecified { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Predicate`1<object> ShouldDeserialize { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Predicate`1<object> ShouldSerialize { get; public set; }
    public Nullable`1<TypeNameHandling> TypeNameHandling { get; public set; }
    public string UnderlyingName { get; public set; }
    public IValueProvider ValueProvider { get; public set; }
    public bool Writable { get; public set; }
    [CompilerGeneratedAttribute]
public IAttributeProvider get_AttributeProvider();
    [CompilerGeneratedAttribute]
public void set_AttributeProvider(IAttributeProvider value);
    [CompilerGeneratedAttribute]
public JsonConverter get_Converter();
    [CompilerGeneratedAttribute]
public void set_Converter(JsonConverter value);
    [CompilerGeneratedAttribute]
public Type get_DeclaringType();
    [CompilerGeneratedAttribute]
public void set_DeclaringType(Type value);
    public object get_DefaultValue();
    public void set_DefaultValue(object value);
    [CompilerGeneratedAttribute]
public Nullable`1<DefaultValueHandling> get_DefaultValueHandling();
    [CompilerGeneratedAttribute]
public void set_DefaultValueHandling(Nullable`1<DefaultValueHandling> value);
    [CompilerGeneratedAttribute]
public Predicate`1<object> get_GetIsSpecified();
    [CompilerGeneratedAttribute]
public void set_GetIsSpecified(Predicate`1<object> value);
    [CompilerGeneratedAttribute]
public bool get_HasMemberAttribute();
    [CompilerGeneratedAttribute]
public void set_HasMemberAttribute(bool value);
    [CompilerGeneratedAttribute]
public bool get_Ignored();
    [CompilerGeneratedAttribute]
public void set_Ignored(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsReference();
    [CompilerGeneratedAttribute]
public void set_IsReference(Nullable`1<bool> value);
    public bool get_IsRequiredSpecified();
    [CompilerGeneratedAttribute]
public JsonConverter get_ItemConverter();
    [CompilerGeneratedAttribute]
public void set_ItemConverter(JsonConverter value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ItemIsReference();
    [CompilerGeneratedAttribute]
public void set_ItemIsReference(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<ReferenceLoopHandling> get_ItemReferenceLoopHandling();
    [CompilerGeneratedAttribute]
public void set_ItemReferenceLoopHandling(Nullable`1<ReferenceLoopHandling> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TypeNameHandling> get_ItemTypeNameHandling();
    [CompilerGeneratedAttribute]
public void set_ItemTypeNameHandling(Nullable`1<TypeNameHandling> value);
    public JsonConverter get_MemberConverter();
    public void set_MemberConverter(JsonConverter value);
    [CompilerGeneratedAttribute]
public Nullable`1<NullValueHandling> get_NullValueHandling();
    [CompilerGeneratedAttribute]
public void set_NullValueHandling(Nullable`1<NullValueHandling> value);
    [CompilerGeneratedAttribute]
public Nullable`1<ObjectCreationHandling> get_ObjectCreationHandling();
    [CompilerGeneratedAttribute]
public void set_ObjectCreationHandling(Nullable`1<ObjectCreationHandling> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Order();
    [CompilerGeneratedAttribute]
public void set_Order(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
internal JsonContract get_PropertyContract();
    [CompilerGeneratedAttribute]
internal void set_PropertyContract(JsonContract value);
    public string get_PropertyName();
    public void set_PropertyName(string value);
    public Type get_PropertyType();
    public void set_PropertyType(Type value);
    [CompilerGeneratedAttribute]
public bool get_Readable();
    [CompilerGeneratedAttribute]
public void set_Readable(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<ReferenceLoopHandling> get_ReferenceLoopHandling();
    [CompilerGeneratedAttribute]
public void set_ReferenceLoopHandling(Nullable`1<ReferenceLoopHandling> value);
    public Required get_Required();
    public void set_Required(Required value);
    [CompilerGeneratedAttribute]
public Action`2<object, object> get_SetIsSpecified();
    [CompilerGeneratedAttribute]
public void set_SetIsSpecified(Action`2<object, object> value);
    [CompilerGeneratedAttribute]
public Predicate`1<object> get_ShouldDeserialize();
    [CompilerGeneratedAttribute]
public void set_ShouldDeserialize(Predicate`1<object> value);
    [CompilerGeneratedAttribute]
public Predicate`1<object> get_ShouldSerialize();
    [CompilerGeneratedAttribute]
public void set_ShouldSerialize(Predicate`1<object> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TypeNameHandling> get_TypeNameHandling();
    [CompilerGeneratedAttribute]
public void set_TypeNameHandling(Nullable`1<TypeNameHandling> value);
    [CompilerGeneratedAttribute]
public string get_UnderlyingName();
    [CompilerGeneratedAttribute]
public void set_UnderlyingName(string value);
    [CompilerGeneratedAttribute]
public IValueProvider get_ValueProvider();
    [CompilerGeneratedAttribute]
public void set_ValueProvider(IValueProvider value);
    [CompilerGeneratedAttribute]
public bool get_Writable();
    [CompilerGeneratedAttribute]
public void set_Writable(bool value);
    internal object GetResolvedDefaultValue();
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
internal void WritePropertyName(JsonWriter writer);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonPropertyCollection : KeyedCollection`2<string, JsonProperty> {
    private List`1<JsonProperty> _list;
    private Type _type;
    public JsonPropertyCollection(Type type);
    protected virtual string GetKeyForItem(JsonProperty item);
    public void AddProperty(JsonProperty property);
    public JsonProperty GetClosestMatchProperty(string propertyName);
    private bool TryGetValue(string key, JsonProperty& item);
    public JsonProperty GetProperty(string propertyName, StringComparison comparisonType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonSerializerInternalBase : object {
    internal JsonSerializer Serializer;
    [NullableAttribute("2")]
internal ITraceWriter TraceWriter;
    [NullableAttribute("2")]
private ErrorContext _currentErrorContext;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private BidirectionalDictionary`2<string, object> _mappings;
    [NullableAttribute("2")]
protected JsonSerializerProxy InternalSerializer;
    internal BidirectionalDictionary`2<string, object> DefaultReferenceMappings { get; }
    protected JsonSerializerInternalBase(JsonSerializer serializer);
    internal BidirectionalDictionary`2<string, object> get_DefaultReferenceMappings();
    protected NullValueHandling ResolvedNullValueHandling(JsonObjectContract containerContract, JsonProperty property);
    private ErrorContext GetErrorContext(object currentObject, object member, string path, Exception error);
    protected void ClearErrorContext();
    [NullableContextAttribute("2")]
protected bool IsErrorHandled(object currentObject, JsonContract contract, object keyValue, IJsonLineInfo lineInfo, string path, Exception ex);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonSerializerInternalReader : JsonSerializerInternalBase {
    public JsonSerializerInternalReader(JsonSerializer serializer);
    public void Populate(JsonReader reader, object target);
    [NullableContextAttribute("2")]
private JsonContract GetContractSafe(Type type);
    private JsonContract GetContract(Type type);
    [NullableContextAttribute("2")]
public object Deserialize(JsonReader reader, Type objectType, bool checkAdditionalContent);
    private JsonSerializerProxy GetInternalSerializer();
    [NullableContextAttribute("2")]
private JToken CreateJToken(JsonReader reader, JsonContract contract);
    private JToken CreateJObject(JsonReader reader);
    [NullableContextAttribute("2")]
private object CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, object existingValue);
    [NullableContextAttribute("2")]
private static bool CoerceEmptyStringToNull(Type objectType, JsonContract contract, string s);
    internal string GetExpectedDescription(JsonContract contract);
    [NullableContextAttribute("2")]
private JsonConverter GetConverter(JsonContract contract, JsonConverter memberConverter, JsonContainerContract containerContract, JsonProperty containerProperty);
    [NullableContextAttribute("2")]
private object CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, object existingValue);
    [NullableContextAttribute("2")]
private bool ReadMetadataPropertiesToken(JTokenReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, object existingValue, Object& newValue, String& id);
    [NullableContextAttribute("2")]
private bool ReadMetadataProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, object existingValue, Object& newValue, String& id);
    [NullableContextAttribute("2")]
private void ResolveTypeName(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, string qualifiedTypeName);
    private JsonArrayContract EnsureArrayContract(JsonReader reader, Type objectType, JsonContract contract);
    [NullableContextAttribute("2")]
private object CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, object existingValue, string id);
    [NullableContextAttribute("2")]
private bool HasNoDefinedType(JsonContract contract);
    [NullableContextAttribute("2")]
private object EnsureType(JsonReader reader, object value, CultureInfo culture, JsonContract contract, Type targetType);
    private bool SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, object target);
    [NullableContextAttribute("2")]
private bool CalculatePropertyDetails(JsonProperty property, JsonConverter& propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, object target, Boolean& useExistingValue, Object& currentValue, JsonContract& propertyContract, Boolean& gottenCurrentValue, Boolean& ignoredValue);
    private void AddReference(JsonReader reader, string id, object value);
    private bool HasFlag(DefaultValueHandling value, DefaultValueHandling flag);
    [NullableContextAttribute("2")]
private bool ShouldSetPropertyValue(JsonProperty property, JsonObjectContract contract, object value);
    private IList CreateNewList(JsonReader reader, JsonArrayContract contract, Boolean& createdFromNonDefaultCreator);
    private IDictionary CreateNewDictionary(JsonReader reader, JsonDictionaryContract contract, Boolean& createdFromNonDefaultCreator);
    private void OnDeserializing(JsonReader reader, JsonContract contract, object value);
    private void OnDeserialized(JsonReader reader, JsonContract contract, object value);
    private object PopulateDictionary(IDictionary dictionary, JsonReader reader, JsonDictionaryContract contract, JsonProperty containerProperty, string id);
    private object PopulateMultidimensionalArray(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, string id);
    private void ThrowUnexpectedEndException(JsonReader reader, JsonContract contract, object currentObject, string message);
    private object PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, string id);
    private object CreateISerializable(JsonReader reader, JsonISerializableContract contract, JsonProperty member, string id);
    internal object CreateISerializableItem(JToken token, Type type, JsonISerializableContract contract, JsonProperty member);
    private object CreateDynamic(JsonReader reader, JsonDynamicContract contract, JsonProperty member, string id);
    private object CreateObjectUsingCreatorWithParameters(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ObjectConstructor`1<object> creator, string id);
    private object DeserializeConvertable(JsonConverter converter, JsonReader reader, Type objectType, object existingValue);
    private List`1<CreatorPropertyContext> ResolvePropertyAndCreatorValues(JsonObjectContract contract, JsonProperty containerProperty, JsonReader reader, Type objectType);
    public object CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, string id, Boolean& createdFromNonDefaultCreator);
    private object PopulateObject(object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, string id);
    private bool ShouldDeserialize(JsonReader reader, JsonProperty property, object target);
    private bool CheckPropertyName(JsonReader reader, string memberName);
    private void SetExtensionData(JsonObjectContract contract, JsonProperty member, JsonReader reader, string memberName, object o);
    private object ReadExtensionDataValue(JsonObjectContract contract, JsonProperty member, JsonReader reader);
    private void EndProcessProperty(object newObject, JsonReader reader, JsonObjectContract contract, int initialDepth, JsonProperty property, PropertyPresence presence, bool setDefaultValue);
    private void SetPropertyPresence(JsonReader reader, JsonProperty property, Dictionary`2<JsonProperty, PropertyPresence> requiredProperties);
    private void HandleError(JsonReader reader, bool readPastError, int initialDepth);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonSerializerInternalWriter : JsonSerializerInternalBase {
    [NullableAttribute("2")]
private Type _rootType;
    private int _rootLevel;
    private List`1<object> _serializeStack;
    public JsonSerializerInternalWriter(JsonSerializer serializer);
    [NullableContextAttribute("2")]
public void Serialize(JsonWriter jsonWriter, object value, Type objectType);
    private JsonSerializerProxy GetInternalSerializer();
    [NullableContextAttribute("2")]
private JsonContract GetContractSafe(object value);
    private JsonContract GetContract(object value);
    private void SerializePrimitive(JsonWriter writer, object value, JsonPrimitiveContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty);
    [NullableContextAttribute("2")]
private void SerializeValue(JsonWriter writer, object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty);
    [NullableContextAttribute("2")]
private Nullable`1<bool> ResolveIsReference(JsonContract contract, JsonProperty property, JsonContainerContract collectionContract, JsonProperty containerProperty);
    [NullableContextAttribute("2")]
private bool ShouldWriteReference(object value, JsonProperty property, JsonContract valueContract, JsonContainerContract collectionContract, JsonProperty containerProperty);
    [NullableContextAttribute("2")]
private bool ShouldWriteProperty(object memberValue, JsonObjectContract containerContract, JsonProperty property);
    [NullableContextAttribute("2")]
private bool CheckForCircularReference(JsonWriter writer, object value, JsonProperty property, JsonContract contract, JsonContainerContract containerContract, JsonProperty containerProperty);
    private void WriteReference(JsonWriter writer, object value);
    private string GetReference(JsonWriter writer, object value);
    internal static bool TryConvertToString(object value, Type type, String& s);
    private void SerializeString(JsonWriter writer, object value, JsonStringContract contract);
    private void OnSerializing(JsonWriter writer, JsonContract contract, object value);
    private void OnSerialized(JsonWriter writer, JsonContract contract, object value);
    private void SerializeObject(JsonWriter writer, object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty);
    private bool CalculatePropertyValues(JsonWriter writer, object value, JsonContainerContract contract, JsonProperty member, JsonProperty property, JsonContract& memberContract, Object& memberValue);
    private void WriteObjectStart(JsonWriter writer, object value, JsonContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty);
    private bool HasCreatorParameter(JsonContainerContract contract, JsonProperty property);
    private void WriteReferenceIdProperty(JsonWriter writer, Type type, object value);
    private void WriteTypeProperty(JsonWriter writer, Type type);
    private bool HasFlag(DefaultValueHandling value, DefaultValueHandling flag);
    private bool HasFlag(PreserveReferencesHandling value, PreserveReferencesHandling flag);
    private bool HasFlag(TypeNameHandling value, TypeNameHandling flag);
    private void SerializeConvertable(JsonWriter writer, JsonConverter converter, object value, JsonContract contract, JsonContainerContract collectionContract, JsonProperty containerProperty);
    private void SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty);
    private void SerializeMultidimensionalArray(JsonWriter writer, Array values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty);
    private void SerializeMultidimensionalArray(JsonWriter writer, Array values, JsonArrayContract contract, JsonProperty member, int initialDepth, Int32[] indices);
    private bool WriteStartArray(JsonWriter writer, object values, JsonArrayContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty);
    [SecuritySafeCriticalAttribute]
private void SerializeISerializable(JsonWriter writer, ISerializable value, JsonISerializableContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty);
    private void SerializeDynamic(JsonWriter writer, IDynamicMetaObjectProvider value, JsonDynamicContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty);
    [NullableContextAttribute("2")]
private bool ShouldWriteDynamicProperty(object memberValue);
    [NullableContextAttribute("2")]
private bool ShouldWriteType(TypeNameHandling typeNameHandlingFlag, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty);
    private void SerializeDictionary(JsonWriter writer, IDictionary values, JsonDictionaryContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty);
    private string GetPropertyName(JsonWriter writer, object name, JsonContract contract, Boolean& escape);
    private void HandleError(JsonWriter writer, int initialDepth);
    private bool ShouldSerialize(JsonWriter writer, JsonProperty property, object target);
    private bool IsSpecified(JsonWriter writer, JsonProperty property, object target);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonSerializerProxy : JsonSerializer {
    private JsonSerializer _serializer;
    [NullableAttribute("2")]
private JsonSerializerInternalReader _serializerReader;
    [NullableAttribute("2")]
private JsonSerializerInternalWriter _serializerWriter;
    [ObsoleteAttribute("Binder is obsolete. Use SerializationBinder instead.")]
public SerializationBinder Binder { get; public set; }
    public bool CheckAdditionalContent { get; public set; }
    public ConstructorHandling ConstructorHandling { get; public set; }
    public StreamingContext Context { get; public set; }
    public IContractResolver ContractResolver { get; public set; }
    public JsonConverterCollection Converters { get; }
    public CultureInfo Culture { get; public set; }
    public DateFormatHandling DateFormatHandling { get; public set; }
    public string DateFormatString { get; public set; }
    public DateParseHandling DateParseHandling { get; public set; }
    public DateTimeZoneHandling DateTimeZoneHandling { get; public set; }
    public DefaultValueHandling DefaultValueHandling { get; public set; }
    [NullableAttribute("2")]
public IEqualityComparer EqualityComparer { get; public set; }
    public FloatFormatHandling FloatFormatHandling { get; public set; }
    public FloatParseHandling FloatParseHandling { get; public set; }
    public Formatting Formatting { get; public set; }
    public Nullable`1<int> MaxDepth { get; public set; }
    public MetadataPropertyHandling MetadataPropertyHandling { get; public set; }
    public MissingMemberHandling MissingMemberHandling { get; public set; }
    public NullValueHandling NullValueHandling { get; public set; }
    public ObjectCreationHandling ObjectCreationHandling { get; public set; }
    public PreserveReferencesHandling PreserveReferencesHandling { get; public set; }
    public ReferenceLoopHandling ReferenceLoopHandling { get; public set; }
    [NullableAttribute("2")]
public IReferenceResolver ReferenceResolver { get; public set; }
    public ISerializationBinder SerializationBinder { get; public set; }
    public StringEscapeHandling StringEscapeHandling { get; public set; }
    [NullableAttribute("2")]
public ITraceWriter TraceWriter { get; public set; }
    [ObsoleteAttribute("TypeNameAssemblyFormat is obsolete. Use TypeNameAssemblyFormatHandling instead.")]
public FormatterAssemblyStyle TypeNameAssemblyFormat { get; public set; }
    public TypeNameAssemblyFormatHandling TypeNameAssemblyFormatHandling { get; public set; }
    public TypeNameHandling TypeNameHandling { get; public set; }
    public JsonSerializerProxy(JsonSerializerInternalReader serializerReader);
    public JsonSerializerProxy(JsonSerializerInternalWriter serializerWriter);
    public virtual SerializationBinder get_Binder();
    public virtual void set_Binder(SerializationBinder value);
    public virtual bool get_CheckAdditionalContent();
    public virtual void set_CheckAdditionalContent(bool value);
    public virtual ConstructorHandling get_ConstructorHandling();
    public virtual void set_ConstructorHandling(ConstructorHandling value);
    public virtual StreamingContext get_Context();
    public virtual void set_Context(StreamingContext value);
    public virtual IContractResolver get_ContractResolver();
    public virtual void set_ContractResolver(IContractResolver value);
    public virtual JsonConverterCollection get_Converters();
    public virtual CultureInfo get_Culture();
    public virtual void set_Culture(CultureInfo value);
    public virtual DateFormatHandling get_DateFormatHandling();
    public virtual void set_DateFormatHandling(DateFormatHandling value);
    public virtual string get_DateFormatString();
    public virtual void set_DateFormatString(string value);
    public virtual DateParseHandling get_DateParseHandling();
    public virtual void set_DateParseHandling(DateParseHandling value);
    public virtual DateTimeZoneHandling get_DateTimeZoneHandling();
    public virtual void set_DateTimeZoneHandling(DateTimeZoneHandling value);
    public virtual DefaultValueHandling get_DefaultValueHandling();
    public virtual void set_DefaultValueHandling(DefaultValueHandling value);
    [NullableContextAttribute("2")]
public virtual IEqualityComparer get_EqualityComparer();
    [NullableContextAttribute("2")]
public virtual void set_EqualityComparer(IEqualityComparer value);
    public virtual FloatFormatHandling get_FloatFormatHandling();
    public virtual void set_FloatFormatHandling(FloatFormatHandling value);
    public virtual FloatParseHandling get_FloatParseHandling();
    public virtual void set_FloatParseHandling(FloatParseHandling value);
    public virtual Formatting get_Formatting();
    public virtual void set_Formatting(Formatting value);
    public virtual Nullable`1<int> get_MaxDepth();
    public virtual void set_MaxDepth(Nullable`1<int> value);
    public virtual MetadataPropertyHandling get_MetadataPropertyHandling();
    public virtual void set_MetadataPropertyHandling(MetadataPropertyHandling value);
    public virtual MissingMemberHandling get_MissingMemberHandling();
    public virtual void set_MissingMemberHandling(MissingMemberHandling value);
    public virtual NullValueHandling get_NullValueHandling();
    public virtual void set_NullValueHandling(NullValueHandling value);
    public virtual ObjectCreationHandling get_ObjectCreationHandling();
    public virtual void set_ObjectCreationHandling(ObjectCreationHandling value);
    public virtual PreserveReferencesHandling get_PreserveReferencesHandling();
    public virtual void set_PreserveReferencesHandling(PreserveReferencesHandling value);
    public virtual ReferenceLoopHandling get_ReferenceLoopHandling();
    public virtual void set_ReferenceLoopHandling(ReferenceLoopHandling value);
    [NullableContextAttribute("2")]
public virtual IReferenceResolver get_ReferenceResolver();
    [NullableContextAttribute("2")]
public virtual void set_ReferenceResolver(IReferenceResolver value);
    public virtual ISerializationBinder get_SerializationBinder();
    public virtual void set_SerializationBinder(ISerializationBinder value);
    public virtual StringEscapeHandling get_StringEscapeHandling();
    public virtual void set_StringEscapeHandling(StringEscapeHandling value);
    [NullableContextAttribute("2")]
public virtual ITraceWriter get_TraceWriter();
    [NullableContextAttribute("2")]
public virtual void set_TraceWriter(ITraceWriter value);
    public virtual FormatterAssemblyStyle get_TypeNameAssemblyFormat();
    public virtual void set_TypeNameAssemblyFormat(FormatterAssemblyStyle value);
    public virtual TypeNameAssemblyFormatHandling get_TypeNameAssemblyFormatHandling();
    public virtual void set_TypeNameAssemblyFormatHandling(TypeNameAssemblyFormatHandling value);
    public virtual TypeNameHandling get_TypeNameHandling();
    public virtual void set_TypeNameHandling(TypeNameHandling value);
    public virtual void add_Error(EventHandler`1<ErrorEventArgs> value);
    public virtual void remove_Error(EventHandler`1<ErrorEventArgs> value);
    internal JsonSerializerInternalBase GetInternalSerializer();
    [NullableContextAttribute("2")]
internal virtual object DeserializeInternal(JsonReader reader, Type objectType);
    internal virtual void PopulateInternal(JsonReader reader, object target);
    [NullableContextAttribute("2")]
internal virtual void SerializeInternal(JsonWriter jsonWriter, object value, Type rootType);
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonStringContract : JsonPrimitiveContract {
    [NullableContextAttribute("1")]
public JsonStringContract(Type underlyingType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.JsonTypeReflector : object {
    private static Nullable`1<bool> _dynamicCodeGeneration;
    private static Nullable`1<bool> _fullyTrusted;
    public static string IdPropertyName;
    public static string RefPropertyName;
    public static string TypePropertyName;
    public static string ValuePropertyName;
    public static string ArrayValuesPropertyName;
    public static string ShouldSerializePrefix;
    public static string SpecifiedPostfix;
    public static string ConcurrentDictionaryTypeName;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ThreadSafeStore`2<Type, Func`2<Object[], object>> CreatorCache;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ThreadSafeStore`2<Type, Type> AssociatedMetadataTypesCache;
    [NullableAttribute("2")]
private static ReflectionObject _metadataTypeAttributeReflectionObject;
    public static bool DynamicCodeGeneration { get; }
    public static bool FullyTrusted { get; }
    public static ReflectionDelegateFactory ReflectionDelegateFactory { get; }
    private static JsonTypeReflector();
    public static T GetCachedAttribute(object attributeProvider);
    public static bool CanTypeDescriptorConvertString(Type type, TypeConverter& typeConverter);
    public static DataContractAttribute GetDataContractAttribute(Type type);
    public static DataMemberAttribute GetDataMemberAttribute(MemberInfo memberInfo);
    public static MemberSerialization GetObjectMemberSerialization(Type objectType, bool ignoreSerializableAttribute);
    public static JsonConverter GetJsonConverter(object attributeProvider);
    public static JsonConverter CreateJsonConverterInstance(Type converterType, Object[] args);
    public static NamingStrategy CreateNamingStrategyInstance(Type namingStrategyType, Object[] args);
    public static NamingStrategy GetContainerNamingStrategy(JsonContainerAttribute containerAttribute);
    private static Func`2<Object[], object> GetCreator(Type type);
    private static Type GetAssociatedMetadataType(Type type);
    private static Type GetAssociateMetadataTypeFromAttribute(Type type);
    private static T GetAttribute(Type type);
    private static T GetAttribute(MemberInfo memberInfo);
    public static bool IsNonSerializable(object provider);
    public static bool IsSerializable(object provider);
    public static T GetAttribute(object provider);
    [SecuritySafeCriticalAttribute]
public static bool get_DynamicCodeGeneration();
    public static bool get_FullyTrusted();
    public static ReflectionDelegateFactory get_ReflectionDelegateFactory();
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.KebabCaseNamingStrategy : NamingStrategy {
    public KebabCaseNamingStrategy(bool processDictionaryKeys, bool overrideSpecifiedNames);
    public KebabCaseNamingStrategy(bool processDictionaryKeys, bool overrideSpecifiedNames, bool processExtensionDataNames);
    [NullableContextAttribute("1")]
protected virtual string ResolvePropertyName(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.MemoryTraceWriter : object {
    private object _lock;
    private Queue`1<string> _traceMessages;
    [CompilerGeneratedAttribute]
private TraceLevel <LevelFilter>k__BackingField;
    public TraceLevel LevelFilter { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TraceLevel get_LevelFilter();
    [CompilerGeneratedAttribute]
public void set_LevelFilter(TraceLevel value);
    public sealed virtual void Trace(TraceLevel level, string message, Exception ex);
    public IEnumerable`1<string> GetTraceMessages();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.NamingStrategy : object {
    [CompilerGeneratedAttribute]
private bool <OverrideSpecifiedNames>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ProcessDictionaryKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ProcessExtensionDataNames>k__BackingField;
    public bool OverrideSpecifiedNames { get; public set; }
    public bool ProcessDictionaryKeys { get; public set; }
    public bool ProcessExtensionDataNames { get; public set; }
    protected abstract virtual string ResolvePropertyName(string name);
    [CompilerGeneratedAttribute]
public bool get_OverrideSpecifiedNames();
    [CompilerGeneratedAttribute]
public void set_OverrideSpecifiedNames(bool value);
    [CompilerGeneratedAttribute]
public bool get_ProcessDictionaryKeys();
    [CompilerGeneratedAttribute]
public void set_ProcessDictionaryKeys(bool value);
    [CompilerGeneratedAttribute]
public bool get_ProcessExtensionDataNames();
    [CompilerGeneratedAttribute]
public void set_ProcessExtensionDataNames(bool value);
    public virtual string GetPropertyName(string name, bool hasSpecifiedName);
    public virtual string GetExtensionDataName(string name);
    public virtual string GetDictionaryKey(string key);
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
protected bool Equals(NamingStrategy other);
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ObjectConstructor`1 : MulticastDelegate {
    public ObjectConstructor`1(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual object Invoke(Object[] args);
    public virtual IAsyncResult BeginInvoke(Object[] args, AsyncCallback callback, object object);
    public virtual object EndInvoke(IAsyncResult result);
}
[AttributeUsageAttribute("64")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.OnErrorAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ReflectionAttributeProvider : object {
    private object _attributeProvider;
    public ReflectionAttributeProvider(object attributeProvider);
    public sealed virtual IList`1<Attribute> GetAttributes(bool inherit);
    public sealed virtual IList`1<Attribute> GetAttributes(Type attributeType, bool inherit);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.ReflectionValueProvider : object {
    private MemberInfo _memberInfo;
    public ReflectionValueProvider(MemberInfo memberInfo);
    public sealed virtual void SetValue(object target, object value);
    public sealed virtual object GetValue(object target);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.SerializationBinderAdapter : object {
    public SerializationBinder SerializationBinder;
    public SerializationBinderAdapter(SerializationBinder serializationBinder);
    public sealed virtual Type BindToType(string assemblyName, string typeName);
    [NullableContextAttribute("2")]
public sealed virtual void BindToName(Type serializedType, String& assemblyName, String& typeName);
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.SerializationCallback : MulticastDelegate {
    public SerializationCallback(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object o, StreamingContext context);
    public virtual IAsyncResult BeginInvoke(object o, StreamingContext context, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.SerializationErrorCallback : MulticastDelegate {
    public SerializationErrorCallback(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object o, StreamingContext context, ErrorContext errorContext);
    public virtual IAsyncResult BeginInvoke(object o, StreamingContext context, ErrorContext errorContext, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.SnakeCaseNamingStrategy : NamingStrategy {
    public SnakeCaseNamingStrategy(bool processDictionaryKeys, bool overrideSpecifiedNames);
    public SnakeCaseNamingStrategy(bool processDictionaryKeys, bool overrideSpecifiedNames, bool processExtensionDataNames);
    [NullableContextAttribute("1")]
protected virtual string ResolvePropertyName(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.TraceJsonReader : JsonReader {
    private JsonReader _innerReader;
    private JsonTextWriter _textWriter;
    private StringWriter _sw;
    public int Depth { get; }
    public string Path { get; }
    public char QuoteChar { get; protected internal set; }
    public JsonToken TokenType { get; }
    [NullableAttribute("2")]
public object Value { get; }
    [NullableAttribute("2")]
public Type ValueType { get; }
    private int Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.LineNumber { get; }
    private int Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.LinePosition { get; }
    public TraceJsonReader(JsonReader innerReader);
    public string GetDeserializedJsonMessage();
    public virtual bool Read();
    public virtual Nullable`1<int> ReadAsInt32();
    [NullableContextAttribute("2")]
public virtual string ReadAsString();
    [NullableContextAttribute("2")]
public virtual Byte[] ReadAsBytes();
    public virtual Nullable`1<decimal> ReadAsDecimal();
    public virtual Nullable`1<double> ReadAsDouble();
    public virtual Nullable`1<bool> ReadAsBoolean();
    public virtual Nullable`1<DateTime> ReadAsDateTime();
    public virtual Nullable`1<DateTimeOffset> ReadAsDateTimeOffset();
    public void WriteCurrentToken();
    public virtual int get_Depth();
    public virtual string get_Path();
    public virtual char get_QuoteChar();
    protected internal virtual void set_QuoteChar(char value);
    public virtual JsonToken get_TokenType();
    [NullableContextAttribute("2")]
public virtual object get_Value();
    [NullableContextAttribute("2")]
public virtual Type get_ValueType();
    public virtual void Close();
    private sealed virtual override bool Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.HasLineInfo();
    private sealed virtual override int Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.get_LineNumber();
    private sealed virtual override int Elastic.Apm.Libraries.Newtonsoft.Json.IJsonLineInfo.get_LinePosition();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Serialization.TraceJsonWriter : JsonWriter {
    private JsonWriter _innerWriter;
    private JsonTextWriter _textWriter;
    private StringWriter _sw;
    public TraceJsonWriter(JsonWriter innerWriter);
    public string GetSerializedJsonMessage();
    public virtual void WriteValue(decimal value);
    public virtual void WriteValue(Nullable`1<decimal> value);
    public virtual void WriteValue(bool value);
    public virtual void WriteValue(Nullable`1<bool> value);
    public virtual void WriteValue(byte value);
    public virtual void WriteValue(Nullable`1<byte> value);
    public virtual void WriteValue(char value);
    public virtual void WriteValue(Nullable`1<char> value);
    [NullableContextAttribute("2")]
public virtual void WriteValue(Byte[] value);
    public virtual void WriteValue(DateTime value);
    public virtual void WriteValue(Nullable`1<DateTime> value);
    public virtual void WriteValue(DateTimeOffset value);
    public virtual void WriteValue(Nullable`1<DateTimeOffset> value);
    public virtual void WriteValue(double value);
    public virtual void WriteValue(Nullable`1<double> value);
    public virtual void WriteUndefined();
    public virtual void WriteNull();
    public virtual void WriteValue(float value);
    public virtual void WriteValue(Nullable`1<float> value);
    public virtual void WriteValue(Guid value);
    public virtual void WriteValue(Nullable`1<Guid> value);
    public virtual void WriteValue(int value);
    public virtual void WriteValue(Nullable`1<int> value);
    public virtual void WriteValue(long value);
    public virtual void WriteValue(Nullable`1<long> value);
    [NullableContextAttribute("2")]
public virtual void WriteValue(object value);
    public virtual void WriteValue(sbyte value);
    public virtual void WriteValue(Nullable`1<sbyte> value);
    public virtual void WriteValue(short value);
    public virtual void WriteValue(Nullable`1<short> value);
    [NullableContextAttribute("2")]
public virtual void WriteValue(string value);
    public virtual void WriteValue(TimeSpan value);
    public virtual void WriteValue(Nullable`1<TimeSpan> value);
    public virtual void WriteValue(UInt32 value);
    public virtual void WriteValue(Nullable`1<UInt32> value);
    public virtual void WriteValue(ulong value);
    public virtual void WriteValue(Nullable`1<ulong> value);
    [NullableContextAttribute("2")]
public virtual void WriteValue(Uri value);
    public virtual void WriteValue(ushort value);
    public virtual void WriteValue(Nullable`1<ushort> value);
    public virtual void WriteWhitespace(string ws);
    [NullableContextAttribute("2")]
public virtual void WriteComment(string text);
    public virtual void WriteStartArray();
    public virtual void WriteEndArray();
    public virtual void WriteStartConstructor(string name);
    public virtual void WriteEndConstructor();
    public virtual void WritePropertyName(string name);
    public virtual void WritePropertyName(string name, bool escape);
    public virtual void WriteStartObject();
    public virtual void WriteEndObject();
    [NullableContextAttribute("2")]
public virtual void WriteRawValue(string json);
    [NullableContextAttribute("2")]
public virtual void WriteRaw(string json);
    public virtual void Close();
    public virtual void Flush();
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.StringEscapeHandling : Enum {
    public int value__;
    public static StringEscapeHandling Default;
    public static StringEscapeHandling EscapeNonAscii;
    public static StringEscapeHandling EscapeHtml;
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.TypeNameAssemblyFormatHandling : Enum {
    public int value__;
    public static TypeNameAssemblyFormatHandling Simple;
    public static TypeNameAssemblyFormatHandling Full;
}
[FlagsAttribute]
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.TypeNameHandling : Enum {
    public int value__;
    public static TypeNameHandling None;
    public static TypeNameHandling Objects;
    public static TypeNameHandling Arrays;
    public static TypeNameHandling All;
    public static TypeNameHandling Auto;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.AsyncUtils : object {
    public static Task`1<bool> False;
    public static Task`1<bool> True;
    internal static Task CompletedTask;
    private static AsyncUtils();
    [ExtensionAttribute]
internal static Task`1<bool> ToAsync(bool value);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static Task CancelIfRequestedAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static Task`1<T> CancelIfRequestedAsync(CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task FromCanceled(CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<T> FromCanceled(CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task WriteAsync(TextWriter writer, char value, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task WriteAsync(TextWriter writer, string value, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task WriteAsync(TextWriter writer, Char[] value, int start, int count, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<int> ReadAsync(TextReader reader, Char[] buffer, int index, int count, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static bool IsCompletedSucessfully(Task task);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.Base64Encoder : object {
    private static int Base64LineSize;
    private static int LineSizeInBytes;
    private Char[] _charsLine;
    private TextWriter _writer;
    [NullableAttribute("2")]
private Byte[] _leftOverBytes;
    private int _leftOverBytesCount;
    public Base64Encoder(TextWriter writer);
    private void ValidateEncode(Byte[] buffer, int index, int count);
    public void Encode(Byte[] buffer, int index, int count);
    private void StoreLeftOverBytes(Byte[] buffer, int index, Int32& count);
    private bool FulfillFromLeftover(Byte[] buffer, int index, Int32& count);
    public void Flush();
    private void WriteChars(Char[] chars, int index, int count);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.Base64Encoder/<EncodeAsync>d__13")]
public Task EncodeAsync(Byte[] buffer, int index, int count, CancellationToken cancellationToken);
    private Task WriteCharsAsync(Char[] chars, int index, int count, CancellationToken cancellationToken);
    public Task FlushAsync(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.BidirectionalDictionary`2 : object {
    private string _duplicateFirstErrorMessage;
    private string _duplicateSecondErrorMessage;
    private IDictionary`2<TFirst, TSecond> _firstToSecond;
    private IDictionary`2<TSecond, TFirst> _secondToFirst;
    public BidirectionalDictionary`2(IEqualityComparer`1<TFirst> firstEqualityComparer, IEqualityComparer`1<TSecond> secondEqualityComparer);
    public BidirectionalDictionary`2(IEqualityComparer`1<TFirst> firstEqualityComparer, IEqualityComparer`1<TSecond> secondEqualityComparer, string duplicateFirstErrorMessage, string duplicateSecondErrorMessage);
    public void Set(TFirst first, TSecond second);
    public bool TryGetByFirst(TFirst first, TSecond& second);
    public bool TryGetBySecond(TSecond second, TFirst& first);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.BufferUtils : object {
    [NullableContextAttribute("1")]
public static Char[] RentBuffer(IArrayPool`1<char> bufferPool, int minSize);
    public static void ReturnBuffer(IArrayPool`1<char> bufferPool, Char[] buffer);
    public static Char[] EnsureBufferSize(IArrayPool`1<char> bufferPool, int size, Char[] buffer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.CollectionUtils : object {
    public static bool IsNullOrEmpty(ICollection`1<T> collection);
    [ExtensionAttribute]
public static void AddRange(IList`1<T> initial, IEnumerable`1<T> collection);
    public static bool IsDictionaryType(Type type);
    public static ConstructorInfo ResolveEnumerableCollectionConstructor(Type collectionType, Type collectionItemType);
    public static ConstructorInfo ResolveEnumerableCollectionConstructor(Type collectionType, Type collectionItemType, Type constructorArgumentType);
    [ExtensionAttribute]
public static bool AddDistinct(IList`1<T> list, T value);
    [ExtensionAttribute]
public static bool AddDistinct(IList`1<T> list, T value, IEqualityComparer`1<T> comparer);
    [ExtensionAttribute]
public static bool ContainsValue(IEnumerable`1<TSource> source, TSource value, IEqualityComparer`1<TSource> comparer);
    [ExtensionAttribute]
public static bool AddRangeDistinct(IList`1<T> list, IEnumerable`1<T> values, IEqualityComparer`1<T> comparer);
    [ExtensionAttribute]
public static int IndexOf(IEnumerable`1<T> collection, Func`2<T, bool> predicate);
    [ExtensionAttribute]
public static bool Contains(List`1<T> list, T value, IEqualityComparer comparer);
    [ExtensionAttribute]
public static int IndexOfReference(List`1<T> list, T item);
    [ExtensionAttribute]
public static void FastReverse(List`1<T> list);
    private static IList`1<int> GetDimensions(IList values, int dimensionsCount);
    private static void CopyFromJaggedToMultidimensionalArray(IList values, Array multidimensionalArray, Int32[] indices);
    private static object JaggedArrayGetValue(IList values, Int32[] indices);
    public static Array ToMultidimensionalArray(IList values, Type type, int rank);
    public static T[] ArrayEmpty();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.CollectionWrapper`1 : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ICollection`1<T> _genericCollection;
    [NullableAttribute("2")]
private IList _list;
    [NullableAttribute("2")]
private object _syncRoot;
    public int Count { get; }
    private bool System.Collections.IList.IsFixedSize { get; }
    public bool IsReadOnly { get; }
    private bool System.Collections.ICollection.IsSynchronized { get; }
    private object System.Collections.IList.Item { get; private set; }
    private object System.Collections.ICollection.SyncRoot { get; }
    public object UnderlyingCollection { get; }
    public CollectionWrapper`1(IList list);
    public CollectionWrapper`1(ICollection`1<T> list);
    public virtual int get_Count();
    private sealed virtual override bool System.Collections.IList.get_IsFixedSize();
    public virtual bool get_IsReadOnly();
    private sealed virtual override bool System.Collections.ICollection.get_IsSynchronized();
    private sealed virtual override object System.Collections.IList.get_Item(int index);
    private sealed virtual override void System.Collections.IList.set_Item(int index, object value);
    private sealed virtual override object System.Collections.ICollection.get_SyncRoot();
    public sealed virtual object get_UnderlyingCollection();
    public virtual void Add(T item);
    public virtual void Clear();
    public virtual bool Contains(T item);
    public virtual void CopyTo(T[] array, int arrayIndex);
    public virtual bool Remove(T item);
    public virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override int System.Collections.IList.Add(object value);
    private sealed virtual override bool System.Collections.IList.Contains(object value);
    private sealed virtual override int System.Collections.IList.IndexOf(object value);
    private sealed virtual override void System.Collections.IList.RemoveAt(int index);
    private sealed virtual override void System.Collections.IList.Insert(int index, object value);
    private sealed virtual override void System.Collections.IList.Remove(object value);
    private sealed virtual override void System.Collections.ICollection.CopyTo(Array array, int arrayIndex);
    private static void VerifyValueType(object value);
    private static bool IsCompatibleObject(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.ConvertUtils : object {
    private static Dictionary`2<Type, PrimitiveTypeCode> TypeCodeMap;
    private static TypeInformation[] PrimitiveTypeCodes;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ThreadSafeStore`2<StructMultiKey`2<Type, Type>, Func`2<object, object>> CastConverters;
    private static ConvertUtils();
    public static PrimitiveTypeCode GetTypeCode(Type t);
    public static PrimitiveTypeCode GetTypeCode(Type t, Boolean& isEnum);
    public static TypeInformation GetTypeInformation(IConvertible convertable);
    public static bool IsConvertible(Type t);
    public static TimeSpan ParseTimeSpan(string input);
    [NullableContextAttribute("2")]
private static Func`2<object, object> CreateCastConverter(StructMultiKey`2<Type, Type> t);
    internal static BigInteger ToBigInteger(object value);
    public static object FromBigInteger(BigInteger i, Type targetType);
    public static object Convert(object initialValue, CultureInfo culture, Type targetType);
    private static bool TryConvert(object initialValue, CultureInfo culture, Type targetType, Object& value);
    private static ConvertResult TryConvertInternal(object initialValue, CultureInfo culture, Type targetType, Object& value);
    public static object ConvertOrCast(object initialValue, CultureInfo culture, Type targetType);
    private static object EnsureTypeAssignable(object value, Type initialType, Type targetType);
    public static bool VersionTryParse(string input, Version& result);
    public static bool IsInteger(object value);
    public static ParseResult Int32TryParse(Char[] chars, int start, int length, Int32& value);
    public static ParseResult Int64TryParse(Char[] chars, int start, int length, Int64& value);
    public static ParseResult DecimalTryParse(Char[] chars, int start, int length, Decimal& value);
    public static bool TryConvertGuid(string s, Guid& g);
    public static bool TryHexTextToInt(Char[] text, int start, int end, Int32& value);
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.Creator`1 : MulticastDelegate {
    public Creator`1(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual T Invoke();
    public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object);
    public virtual T EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.DateTimeParser : ValueType {
    public int Year;
    public int Month;
    public int Day;
    public int Hour;
    public int Minute;
    public int Second;
    public int Fraction;
    public int ZoneHour;
    public int ZoneMinute;
    public ParserTimeZone Zone;
    private Char[] _text;
    private int _end;
    private static Int32[] Power10;
    private static int Lzyyyy;
    private static int Lzyyyy_;
    private static int Lzyyyy_MM;
    private static int Lzyyyy_MM_;
    private static int Lzyyyy_MM_dd;
    private static int Lzyyyy_MM_ddT;
    private static int LzHH;
    private static int LzHH_;
    private static int LzHH_mm;
    private static int LzHH_mm_;
    private static int LzHH_mm_ss;
    private static int Lz_;
    private static int Lz_zz;
    private static short MaxFractionDigits;
    private static DateTimeParser();
    public bool Parse(Char[] text, int startIndex, int length);
    private bool ParseDate(int start);
    private bool ParseTimeAndZoneAndWhitespace(int start);
    private bool ParseTime(Int32& start);
    private bool ParseZone(int start);
    private bool Parse4Digit(int start, Int32& num);
    private bool Parse2Digit(int start, Int32& num);
    private bool ParseChar(int start, char ch);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.DateTimeUtils : object {
    internal static long InitialJavaScriptDateTicks;
    private static string IsoDateFormat;
    private static int DaysPer100Years;
    private static int DaysPer400Years;
    private static int DaysPer4Years;
    private static int DaysPerYear;
    private static long TicksPerDay;
    private static Int32[] DaysToMonth365;
    private static Int32[] DaysToMonth366;
    private static DateTimeUtils();
    [ExtensionAttribute]
public static TimeSpan GetUtcOffset(DateTime d);
    public static XmlDateTimeSerializationMode ToSerializationMode(DateTimeKind kind);
    internal static DateTime EnsureDateTime(DateTime value, DateTimeZoneHandling timeZone);
    private static DateTime SwitchToLocalTime(DateTime value);
    private static DateTime SwitchToUtcTime(DateTime value);
    private static long ToUniversalTicks(DateTime dateTime);
    private static long ToUniversalTicks(DateTime dateTime, TimeSpan offset);
    internal static long ConvertDateTimeToJavaScriptTicks(DateTime dateTime, TimeSpan offset);
    internal static long ConvertDateTimeToJavaScriptTicks(DateTime dateTime);
    internal static long ConvertDateTimeToJavaScriptTicks(DateTime dateTime, bool convertToUtc);
    private static long UniversalTicksToJavaScriptTicks(long universalTicks);
    internal static DateTime ConvertJavaScriptTicksToDateTime(long javaScriptTicks);
    internal static bool TryParseDateTimeIso(StringReference text, DateTimeZoneHandling dateTimeZoneHandling, DateTime& dt);
    internal static bool TryParseDateTimeOffsetIso(StringReference text, DateTimeOffset& dt);
    private static DateTime CreateDateTime(DateTimeParser dateTimeParser);
    internal static bool TryParseDateTime(StringReference s, DateTimeZoneHandling dateTimeZoneHandling, string dateFormatString, CultureInfo culture, DateTime& dt);
    internal static bool TryParseDateTime(string s, DateTimeZoneHandling dateTimeZoneHandling, string dateFormatString, CultureInfo culture, DateTime& dt);
    internal static bool TryParseDateTimeOffset(StringReference s, string dateFormatString, CultureInfo culture, DateTimeOffset& dt);
    internal static bool TryParseDateTimeOffset(string s, string dateFormatString, CultureInfo culture, DateTimeOffset& dt);
    private static bool TryParseMicrosoftDate(StringReference text, Int64& ticks, TimeSpan& offset, DateTimeKind& kind);
    private static bool TryParseDateTimeMicrosoft(StringReference text, DateTimeZoneHandling dateTimeZoneHandling, DateTime& dt);
    private static bool TryParseDateTimeExact(string text, DateTimeZoneHandling dateTimeZoneHandling, string dateFormatString, CultureInfo culture, DateTime& dt);
    private static bool TryParseDateTimeOffsetMicrosoft(StringReference text, DateTimeOffset& dt);
    private static bool TryParseDateTimeOffsetExact(string text, string dateFormatString, CultureInfo culture, DateTimeOffset& dt);
    private static bool TryReadOffset(StringReference offsetText, int startIndex, TimeSpan& offset);
    internal static void WriteDateTimeString(TextWriter writer, DateTime value, DateFormatHandling format, string formatString, CultureInfo culture);
    internal static int WriteDateTimeString(Char[] chars, int start, DateTime value, Nullable`1<TimeSpan> offset, DateTimeKind kind, DateFormatHandling format);
    internal static int WriteDefaultIsoDate(Char[] chars, int start, DateTime dt);
    private static void CopyIntToCharArray(Char[] chars, int start, int value, int digits);
    internal static int WriteDateTimeOffset(Char[] chars, int start, TimeSpan offset, DateFormatHandling format);
    internal static void WriteDateTimeOffsetString(TextWriter writer, DateTimeOffset value, DateFormatHandling format, string formatString, CultureInfo culture);
    private static void GetDateValues(DateTime td, Int32& year, Int32& month, Int32& day);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.DictionaryWrapper`2 : object {
    [NullableAttribute("2")]
private IDictionary _dictionary;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IDictionary`2<TKey, TValue> _genericDictionary;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyDictionary`2<TKey, TValue> _readOnlyDictionary;
    [NullableAttribute("2")]
private object _syncRoot;
    internal IDictionary`2<TKey, TValue> GenericDictionary { get; }
    public ICollection`1<TKey> Keys { get; }
    public ICollection`1<TValue> Values { get; }
    public TValue Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    [NullableAttribute("2")]
private object System.Collections.IDictionary.Item { get; private set; }
    private bool System.Collections.IDictionary.IsFixedSize { get; }
    private ICollection System.Collections.IDictionary.Keys { get; }
    private ICollection System.Collections.IDictionary.Values { get; }
    private bool System.Collections.ICollection.IsSynchronized { get; }
    private object System.Collections.ICollection.SyncRoot { get; }
    public object UnderlyingDictionary { get; }
    public DictionaryWrapper`2(IDictionary dictionary);
    public DictionaryWrapper`2(IDictionary`2<TKey, TValue> dictionary);
    public DictionaryWrapper`2(IReadOnlyDictionary`2<TKey, TValue> dictionary);
    internal IDictionary`2<TKey, TValue> get_GenericDictionary();
    public sealed virtual void Add(TKey key, TValue value);
    public sealed virtual bool ContainsKey(TKey key);
    public sealed virtual ICollection`1<TKey> get_Keys();
    public sealed virtual bool Remove(TKey key);
    public sealed virtual bool TryGetValue(TKey key, TValue& value);
    public sealed virtual ICollection`1<TValue> get_Values();
    public sealed virtual TValue get_Item(TKey key);
    public sealed virtual void set_Item(TKey key, TValue value);
    public sealed virtual void Add(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual bool Remove(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override void System.Collections.IDictionary.Add(object key, object value);
    private sealed virtual override object System.Collections.IDictionary.get_Item(object key);
    private sealed virtual override void System.Collections.IDictionary.set_Item(object key, object value);
    private sealed virtual override IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator();
    private sealed virtual override bool System.Collections.IDictionary.Contains(object key);
    private sealed virtual override bool System.Collections.IDictionary.get_IsFixedSize();
    private sealed virtual override ICollection System.Collections.IDictionary.get_Keys();
    public sealed virtual void Remove(object key);
    private sealed virtual override ICollection System.Collections.IDictionary.get_Values();
    private sealed virtual override void System.Collections.ICollection.CopyTo(Array array, int index);
    private sealed virtual override bool System.Collections.ICollection.get_IsSynchronized();
    private sealed virtual override object System.Collections.ICollection.get_SyncRoot();
    public sealed virtual object get_UnderlyingDictionary();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.DynamicProxy`1 : object {
    public virtual IEnumerable`1<string> GetDynamicMemberNames(T instance);
    public virtual bool TryBinaryOperation(T instance, BinaryOperationBinder binder, object arg, Object& result);
    public virtual bool TryConvert(T instance, ConvertBinder binder, Object& result);
    public virtual bool TryCreateInstance(T instance, CreateInstanceBinder binder, Object[] args, Object& result);
    public virtual bool TryDeleteIndex(T instance, DeleteIndexBinder binder, Object[] indexes);
    public virtual bool TryDeleteMember(T instance, DeleteMemberBinder binder);
    public virtual bool TryGetIndex(T instance, GetIndexBinder binder, Object[] indexes, Object& result);
    public virtual bool TryGetMember(T instance, GetMemberBinder binder, Object& result);
    public virtual bool TryInvoke(T instance, InvokeBinder binder, Object[] args, Object& result);
    public virtual bool TryInvokeMember(T instance, InvokeMemberBinder binder, Object[] args, Object& result);
    public virtual bool TrySetIndex(T instance, SetIndexBinder binder, Object[] indexes, object value);
    public virtual bool TrySetMember(T instance, SetMemberBinder binder, object value);
    public virtual bool TryUnaryOperation(T instance, UnaryOperationBinder binder, Object& result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.DynamicProxyMetaObject`1 : DynamicMetaObject {
    private DynamicProxy`1<T> _proxy;
    private static Expression[] NoArgs { get; }
    internal DynamicProxyMetaObject`1(Expression expression, T value, DynamicProxy`1<T> proxy);
    private bool IsOverridden(string method);
    public virtual DynamicMetaObject BindGetMember(GetMemberBinder binder);
    public virtual DynamicMetaObject BindSetMember(SetMemberBinder binder, DynamicMetaObject value);
    public virtual DynamicMetaObject BindDeleteMember(DeleteMemberBinder binder);
    public virtual DynamicMetaObject BindConvert(ConvertBinder binder);
    public virtual DynamicMetaObject BindInvokeMember(InvokeMemberBinder binder, DynamicMetaObject[] args);
    public virtual DynamicMetaObject BindCreateInstance(CreateInstanceBinder binder, DynamicMetaObject[] args);
    public virtual DynamicMetaObject BindInvoke(InvokeBinder binder, DynamicMetaObject[] args);
    public virtual DynamicMetaObject BindBinaryOperation(BinaryOperationBinder binder, DynamicMetaObject arg);
    public virtual DynamicMetaObject BindUnaryOperation(UnaryOperationBinder binder);
    public virtual DynamicMetaObject BindGetIndex(GetIndexBinder binder, DynamicMetaObject[] indexes);
    public virtual DynamicMetaObject BindSetIndex(SetIndexBinder binder, DynamicMetaObject[] indexes, DynamicMetaObject value);
    public virtual DynamicMetaObject BindDeleteIndex(DeleteIndexBinder binder, DynamicMetaObject[] indexes);
    private static Expression[] get_NoArgs();
    private static IEnumerable`1<Expression> GetArgs(DynamicMetaObject[] args);
    private static Expression[] GetArgArray(DynamicMetaObject[] args);
    private static Expression[] GetArgArray(DynamicMetaObject[] args, DynamicMetaObject value);
    private static ConstantExpression Constant(DynamicMetaObjectBinder binder);
    private DynamicMetaObject CallMethodWithResult(string methodName, DynamicMetaObjectBinder binder, IEnumerable`1<Expression> args, Fallback<T> fallback, Fallback<T> fallbackInvoke);
    private DynamicMetaObject BuildCallMethodWithResult(string methodName, DynamicMetaObjectBinder binder, IEnumerable`1<Expression> args, DynamicMetaObject fallbackResult, Fallback<T> fallbackInvoke);
    private DynamicMetaObject CallMethodReturnLast(string methodName, DynamicMetaObjectBinder binder, IEnumerable`1<Expression> args, Fallback<T> fallback);
    private DynamicMetaObject CallMethodNoResult(string methodName, DynamicMetaObjectBinder binder, Expression[] args, Fallback<T> fallback);
    private BindingRestrictions GetRestrictions();
    public virtual IEnumerable`1<string> GetDynamicMemberNames();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.DynamicUtils : object {
    [ExtensionAttribute]
public static IEnumerable`1<string> GetDynamicMemberNames(IDynamicMetaObjectProvider dynamicProvider);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.EnumInfo : object {
    public bool IsFlags;
    public String[] Names;
    public String[] ResolvedNames;
    public UInt64[] Values;
    public EnumInfo(bool isFlags, UInt64[] values, String[] names, String[] resolvedNames);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.EnumUtils : object {
    private static char EnumSeparatorChar;
    private static string EnumSeparatorString;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ThreadSafeStore`2<StructMultiKey`2<Type, NamingStrategy>, EnumInfo> ValuesAndNamesPerEnum;
    private static CamelCaseNamingStrategy _camelCaseNamingStrategy;
    private static EnumUtils();
    private static EnumInfo InitializeValuesAndNames(StructMultiKey`2<Type, NamingStrategy> key);
    [NullableContextAttribute("0")]
public static IList`1<T> GetFlagsValues(T value);
    public static bool TryToString(Type enumType, object value, bool camelCase, String& name);
    public static bool TryToString(Type enumType, object value, NamingStrategy namingStrategy, String& name);
    private static string InternalFlagsFormat(EnumInfo entry, ulong result);
    public static EnumInfo GetEnumValuesAndNames(Type enumType);
    private static ulong ToUInt64(object value);
    public static object ParseEnum(Type enumType, NamingStrategy namingStrategy, string value, bool disallowNumber);
    private static Nullable`1<int> MatchName(string value, String[] enumNames, String[] resolvedNames, int valueIndex, int valueSubstringLength, StringComparison comparison);
    private static Nullable`1<int> FindIndexByName(String[] enumNames, string value, int valueIndex, int valueSubstringLength, StringComparison comparison);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory : ReflectionDelegateFactory {
    private static ExpressionReflectionDelegateFactory _instance;
    internal static ReflectionDelegateFactory Instance { get; }
    private static ExpressionReflectionDelegateFactory();
    internal static ReflectionDelegateFactory get_Instance();
    public virtual ObjectConstructor`1<object> CreateParameterizedConstructor(MethodBase method);
    public virtual MethodCall`2<T, object> CreateMethodCall(MethodBase method);
    private Expression BuildMethodCall(MethodBase method, Type type, ParameterExpression targetParameterExpression, ParameterExpression argsParameterExpression);
    public virtual Func`1<T> CreateDefaultConstructor(Type type);
    public virtual Func`2<T, object> CreateGet(PropertyInfo propertyInfo);
    public virtual Func`2<T, object> CreateGet(FieldInfo fieldInfo);
    public virtual Action`2<T, object> CreateSet(FieldInfo fieldInfo);
    public virtual Action`2<T, object> CreateSet(PropertyInfo propertyInfo);
    private Expression EnsureCastExpression(Expression expression, Type targetType, bool allowWidening);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.FSharpFunction : object {
    private object _instance;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private MethodCall`2<object, object> _invoker;
    public FSharpFunction(object instance, MethodCall`2<object, object> invoker);
    [NullableContextAttribute("1")]
public object Invoke(Object[] args);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.FSharpUtils : object {
    private static object Lock;
    [NullableAttribute("2")]
private static FSharpUtils _instance;
    private MethodInfo _ofSeq;
    private Type _mapType;
    [CompilerGeneratedAttribute]
private Assembly <FSharpCoreAssembly>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private MethodCall`2<object, object> <IsUnion>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private MethodCall`2<object, object> <GetUnionCases>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private MethodCall`2<object, object> <PreComputeUnionTagReader>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private MethodCall`2<object, object> <PreComputeUnionReader>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private MethodCall`2<object, object> <PreComputeUnionConstructor>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<object, object> <GetUnionCaseInfoDeclaringType>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<object, object> <GetUnionCaseInfoName>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<object, object> <GetUnionCaseInfoTag>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private MethodCall`2<object, object> <GetUnionCaseInfoFields>k__BackingField;
    public static string FSharpSetTypeName;
    public static string FSharpListTypeName;
    public static string FSharpMapTypeName;
    public static FSharpUtils Instance { get; }
    public Assembly FSharpCoreAssembly { get; private set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public MethodCall`2<object, object> IsUnion { get; private set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public MethodCall`2<object, object> GetUnionCases { get; private set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public MethodCall`2<object, object> PreComputeUnionTagReader { get; private set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public MethodCall`2<object, object> PreComputeUnionReader { get; private set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public MethodCall`2<object, object> PreComputeUnionConstructor { get; private set; }
    public Func`2<object, object> GetUnionCaseInfoDeclaringType { get; private set; }
    public Func`2<object, object> GetUnionCaseInfoName { get; private set; }
    public Func`2<object, object> GetUnionCaseInfoTag { get; private set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public MethodCall`2<object, object> GetUnionCaseInfoFields { get; private set; }
    private FSharpUtils(Assembly fsharpCoreAssembly);
    private static FSharpUtils();
    public static FSharpUtils get_Instance();
    [CompilerGeneratedAttribute]
public Assembly get_FSharpCoreAssembly();
    [CompilerGeneratedAttribute]
private void set_FSharpCoreAssembly(Assembly value);
    [CompilerGeneratedAttribute]
public MethodCall`2<object, object> get_IsUnion();
    [CompilerGeneratedAttribute]
private void set_IsUnion(MethodCall`2<object, object> value);
    [CompilerGeneratedAttribute]
public MethodCall`2<object, object> get_GetUnionCases();
    [CompilerGeneratedAttribute]
private void set_GetUnionCases(MethodCall`2<object, object> value);
    [CompilerGeneratedAttribute]
public MethodCall`2<object, object> get_PreComputeUnionTagReader();
    [CompilerGeneratedAttribute]
private void set_PreComputeUnionTagReader(MethodCall`2<object, object> value);
    [CompilerGeneratedAttribute]
public MethodCall`2<object, object> get_PreComputeUnionReader();
    [CompilerGeneratedAttribute]
private void set_PreComputeUnionReader(MethodCall`2<object, object> value);
    [CompilerGeneratedAttribute]
public MethodCall`2<object, object> get_PreComputeUnionConstructor();
    [CompilerGeneratedAttribute]
private void set_PreComputeUnionConstructor(MethodCall`2<object, object> value);
    [CompilerGeneratedAttribute]
public Func`2<object, object> get_GetUnionCaseInfoDeclaringType();
    [CompilerGeneratedAttribute]
private void set_GetUnionCaseInfoDeclaringType(Func`2<object, object> value);
    [CompilerGeneratedAttribute]
public Func`2<object, object> get_GetUnionCaseInfoName();
    [CompilerGeneratedAttribute]
private void set_GetUnionCaseInfoName(Func`2<object, object> value);
    [CompilerGeneratedAttribute]
public Func`2<object, object> get_GetUnionCaseInfoTag();
    [CompilerGeneratedAttribute]
private void set_GetUnionCaseInfoTag(Func`2<object, object> value);
    [CompilerGeneratedAttribute]
public MethodCall`2<object, object> get_GetUnionCaseInfoFields();
    [CompilerGeneratedAttribute]
private void set_GetUnionCaseInfoFields(MethodCall`2<object, object> value);
    public static void EnsureInitialized(Assembly fsharpCoreAssembly);
    private static MethodInfo GetMethodWithNonPublicFallback(Type type, string methodName, BindingFlags bindingFlags);
    private static MethodCall`2<object, object> CreateFSharpFuncCall(Type type, string methodName);
    public ObjectConstructor`1<object> CreateSeq(Type t);
    public ObjectConstructor`1<object> CreateMap(Type keyType, Type valueType);
    [NullableContextAttribute("2")]
public ObjectConstructor`1<object> BuildMapCreator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.ImmutableCollectionsUtils : object {
    private static string ImmutableArrayGenericTypeName;
    private static string ImmutableArrayTypeName;
    private static string ImmutableDictionaryGenericInterfaceTypeName;
    private static string ImmutableDictionaryGenericTypeName;
    private static string ImmutableDictionaryTypeName;
    private static string ImmutableHashSetGenericTypeName;
    private static string ImmutableHashSetTypeName;
    private static string ImmutableListGenericInterfaceTypeName;
    private static string ImmutableListGenericTypeName;
    private static string ImmutableListTypeName;
    private static string ImmutableQueueGenericInterfaceTypeName;
    private static string ImmutableQueueGenericTypeName;
    private static string ImmutableQueueTypeName;
    private static string ImmutableSetGenericInterfaceTypeName;
    private static string ImmutableSortedDictionaryGenericTypeName;
    private static string ImmutableSortedDictionaryTypeName;
    private static string ImmutableSortedSetGenericTypeName;
    private static string ImmutableSortedSetTypeName;
    private static string ImmutableStackGenericInterfaceTypeName;
    private static string ImmutableStackGenericTypeName;
    private static string ImmutableStackTypeName;
    private static IList`1<ImmutableCollectionTypeInfo> ArrayContractImmutableCollectionDefinitions;
    private static IList`1<ImmutableCollectionTypeInfo> DictionaryContractImmutableCollectionDefinitions;
    private static ImmutableCollectionsUtils();
    internal static bool TryBuildImmutableForArrayContract(Type underlyingType, Type collectionItemType, Type& createdType, ObjectConstructor`1& parameterizedCreator);
    internal static bool TryBuildImmutableForDictionaryContract(Type underlyingType, Type keyItemType, Type valueItemType, Type& createdType, ObjectConstructor`1& parameterizedCreator);
}
internal interface Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.IWrappedCollection {
    [NullableAttribute("1")]
public object UnderlyingCollection { get; }
    [NullableContextAttribute("1")]
public abstract virtual object get_UnderlyingCollection();
}
internal interface Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.IWrappedDictionary {
    [NullableAttribute("1")]
public object UnderlyingDictionary { get; }
    [NullableContextAttribute("1")]
public abstract virtual object get_UnderlyingDictionary();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.JavaScriptUtils : object {
    internal static Boolean[] SingleQuoteCharEscapeFlags;
    internal static Boolean[] DoubleQuoteCharEscapeFlags;
    internal static Boolean[] HtmlCharEscapeFlags;
    private static int UnicodeTextLength;
    private static string EscapedUnicodeText;
    private static JavaScriptUtils();
    public static Boolean[] GetCharEscapeFlags(StringEscapeHandling stringEscapeHandling, char quoteChar);
    public static bool ShouldEscapeJavaScriptString(string s, Boolean[] charEscapeFlags);
    [NullableContextAttribute("2")]
public static void WriteEscapedJavaScriptString(TextWriter writer, string s, char delimiter, bool appendDelimiters, Boolean[] charEscapeFlags, StringEscapeHandling stringEscapeHandling, IArrayPool`1<char> bufferPool, Char[]& writeBuffer);
    public static string ToEscapedJavaScriptString(string value, char delimiter, bool appendDelimiters, StringEscapeHandling stringEscapeHandling);
    private static int FirstCharToEscape(string s, Boolean[] charEscapeFlags, StringEscapeHandling stringEscapeHandling);
    public static Task WriteEscapedJavaScriptStringAsync(TextWriter writer, string s, char delimiter, bool appendDelimiters, Boolean[] charEscapeFlags, StringEscapeHandling stringEscapeHandling, JsonTextWriter client, Char[] writeBuffer, CancellationToken cancellationToken);
    private static Task WriteEscapedJavaScriptStringWithDelimitersAsync(TextWriter writer, string s, char delimiter, Boolean[] charEscapeFlags, StringEscapeHandling stringEscapeHandling, JsonTextWriter client, Char[] writeBuffer, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.JavaScriptUtils/<WriteEscapedJavaScriptStringWithDelimitersAsync>d__13")]
private static Task WriteEscapedJavaScriptStringWithDelimitersAsync(Task task, TextWriter writer, string s, char delimiter, Boolean[] charEscapeFlags, StringEscapeHandling stringEscapeHandling, JsonTextWriter client, Char[] writeBuffer, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.JavaScriptUtils/<WriteCharAsync>d__14")]
public static Task WriteCharAsync(Task task, TextWriter writer, char c, CancellationToken cancellationToken);
    private static Task WriteEscapedJavaScriptStringWithoutDelimitersAsync(TextWriter writer, string s, Boolean[] charEscapeFlags, StringEscapeHandling stringEscapeHandling, JsonTextWriter client, Char[] writeBuffer, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.JavaScriptUtils/<WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync>d__16")]
private static Task WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(TextWriter writer, string s, int lastWritePosition, Boolean[] charEscapeFlags, StringEscapeHandling stringEscapeHandling, JsonTextWriter client, Char[] writeBuffer, CancellationToken cancellationToken);
    public static bool TryGetDateFromConstructorJson(JsonReader reader, DateTime& dateTime, String& errorMessage);
    private static bool TryGetDateConstructorValue(JsonReader reader, Nullable`1& integer, String& errorMessage);
}
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.JsonTokenUtils : object {
    internal static bool IsEndToken(JsonToken token);
    internal static bool IsStartToken(JsonToken token);
    internal static bool IsPrimitiveToken(JsonToken token);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory : ReflectionDelegateFactory {
    private static LateBoundReflectionDelegateFactory _instance;
    internal static ReflectionDelegateFactory Instance { get; }
    private static LateBoundReflectionDelegateFactory();
    internal static ReflectionDelegateFactory get_Instance();
    public virtual ObjectConstructor`1<object> CreateParameterizedConstructor(MethodBase method);
    public virtual MethodCall`2<T, object> CreateMethodCall(MethodBase method);
    public virtual Func`1<T> CreateDefaultConstructor(Type type);
    public virtual Func`2<T, object> CreateGet(PropertyInfo propertyInfo);
    public virtual Func`2<T, object> CreateGet(FieldInfo fieldInfo);
    public virtual Action`2<T, object> CreateSet(FieldInfo fieldInfo);
    public virtual Action`2<T, object> CreateSet(PropertyInfo propertyInfo);
}
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.MathUtils : object {
    public static int IntLength(ulong i);
    public static char IntToHex(int n);
    public static Nullable`1<int> Min(Nullable`1<int> val1, Nullable`1<int> val2);
    public static Nullable`1<int> Max(Nullable`1<int> val1, Nullable`1<int> val2);
    public static Nullable`1<double> Max(Nullable`1<double> val1, Nullable`1<double> val2);
    public static bool ApproxEquals(double d1, double d2);
}
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.MethodCall`2 : MulticastDelegate {
    public MethodCall`2(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual TResult Invoke(T target, Object[] args);
    public virtual IAsyncResult BeginInvoke(T target, Object[] args, AsyncCallback callback, object object);
    public virtual TResult EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.MiscellaneousUtils : object {
    [NullableContextAttribute("2")]
[ConditionalAttribute("DEBUG")]
public static void Assert(bool condition, string message);
    [NullableContextAttribute("2")]
public static bool ValueEquals(object objA, object objB);
    public static ArgumentOutOfRangeException CreateArgumentOutOfRangeException(string paramName, object actualValue, string message);
    public static string ToString(object value);
    public static int ByteArrayCompare(Byte[] a1, Byte[] a2);
    public static string GetPrefix(string qualifiedName);
    public static string GetLocalName(string qualifiedName);
    public static void GetQualifiedNameParts(string qualifiedName, String& prefix, String& localName);
    internal static RegexOptions GetRegexOptions(string optionsText);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.NoThrowExpressionVisitor : ExpressionVisitor {
    internal static object ErrorResult;
    private static NoThrowExpressionVisitor();
    protected virtual Expression VisitConditional(ConditionalExpression node);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.NoThrowGetBinderMember : GetMemberBinder {
    private GetMemberBinder _innerBinder;
    public NoThrowGetBinderMember(GetMemberBinder innerBinder);
    public virtual DynamicMetaObject FallbackGetMember(DynamicMetaObject target, DynamicMetaObject errorSuggestion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.NoThrowSetBinderMember : SetMemberBinder {
    private SetMemberBinder _innerBinder;
    public NoThrowSetBinderMember(SetMemberBinder innerBinder);
    public virtual DynamicMetaObject FallbackSetMember(DynamicMetaObject target, DynamicMetaObject value, DynamicMetaObject errorSuggestion);
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.ParseResult : Enum {
    public int value__;
    public static ParseResult None;
    public static ParseResult Success;
    public static ParseResult Overflow;
    public static ParseResult Invalid;
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.ParserTimeZone : Enum {
    public int value__;
    public static ParserTimeZone Unspecified;
    public static ParserTimeZone Utc;
    public static ParserTimeZone LocalWestOfUtc;
    public static ParserTimeZone LocalEastOfUtc;
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.PrimitiveTypeCode : Enum {
    public int value__;
    public static PrimitiveTypeCode Empty;
    public static PrimitiveTypeCode Object;
    public static PrimitiveTypeCode Char;
    public static PrimitiveTypeCode CharNullable;
    public static PrimitiveTypeCode Boolean;
    public static PrimitiveTypeCode BooleanNullable;
    public static PrimitiveTypeCode SByte;
    public static PrimitiveTypeCode SByteNullable;
    public static PrimitiveTypeCode Int16;
    public static PrimitiveTypeCode Int16Nullable;
    public static PrimitiveTypeCode UInt16;
    public static PrimitiveTypeCode UInt16Nullable;
    public static PrimitiveTypeCode Int32;
    public static PrimitiveTypeCode Int32Nullable;
    public static PrimitiveTypeCode Byte;
    public static PrimitiveTypeCode ByteNullable;
    public static PrimitiveTypeCode UInt32;
    public static PrimitiveTypeCode UInt32Nullable;
    public static PrimitiveTypeCode Int64;
    public static PrimitiveTypeCode Int64Nullable;
    public static PrimitiveTypeCode UInt64;
    public static PrimitiveTypeCode UInt64Nullable;
    public static PrimitiveTypeCode Single;
    public static PrimitiveTypeCode SingleNullable;
    public static PrimitiveTypeCode Double;
    public static PrimitiveTypeCode DoubleNullable;
    public static PrimitiveTypeCode DateTime;
    public static PrimitiveTypeCode DateTimeNullable;
    public static PrimitiveTypeCode DateTimeOffset;
    public static PrimitiveTypeCode DateTimeOffsetNullable;
    public static PrimitiveTypeCode Decimal;
    public static PrimitiveTypeCode DecimalNullable;
    public static PrimitiveTypeCode Guid;
    public static PrimitiveTypeCode GuidNullable;
    public static PrimitiveTypeCode TimeSpan;
    public static PrimitiveTypeCode TimeSpanNullable;
    public static PrimitiveTypeCode BigInteger;
    public static PrimitiveTypeCode BigIntegerNullable;
    public static PrimitiveTypeCode Uri;
    public static PrimitiveTypeCode String;
    public static PrimitiveTypeCode Bytes;
    public static PrimitiveTypeCode DBNull;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.ReflectionDelegateFactory : object {
    public abstract virtual Func`1<T> CreateDefaultConstructor(Type type);
    public abstract virtual Func`2<T, object> CreateGet(PropertyInfo propertyInfo);
    public abstract virtual Func`2<T, object> CreateGet(FieldInfo fieldInfo);
    public abstract virtual MethodCall`2<T, object> CreateMethodCall(MethodBase method);
    public abstract virtual ObjectConstructor`1<object> CreateParameterizedConstructor(MethodBase method);
    public abstract virtual Action`2<T, object> CreateSet(FieldInfo fieldInfo);
    public abstract virtual Action`2<T, object> CreateSet(PropertyInfo propertyInfo);
    public Func`2<T, object> CreateGet(MemberInfo memberInfo);
    public Action`2<T, object> CreateSet(MemberInfo memberInfo);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.ReflectionMember : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<object, object> <Getter>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <MemberType>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`2<object, object> <Setter>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<object, object> Getter { get; public set; }
    public Type MemberType { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`2<object, object> Setter { get; public set; }
    [CompilerGeneratedAttribute]
public Func`2<object, object> get_Getter();
    [CompilerGeneratedAttribute]
public void set_Getter(Func`2<object, object> value);
    [CompilerGeneratedAttribute]
public Type get_MemberType();
    [CompilerGeneratedAttribute]
public void set_MemberType(Type value);
    [CompilerGeneratedAttribute]
public Action`2<object, object> get_Setter();
    [CompilerGeneratedAttribute]
public void set_Setter(Action`2<object, object> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.ReflectionObject : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ObjectConstructor`1<object> <Creator>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ReflectionMember> <Members>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ObjectConstructor`1<object> Creator { get; }
    public IDictionary`2<string, ReflectionMember> Members { get; }
    private ReflectionObject(ObjectConstructor`1<object> creator);
    [CompilerGeneratedAttribute]
public ObjectConstructor`1<object> get_Creator();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ReflectionMember> get_Members();
    public object GetValue(object target, string member);
    public void SetValue(object target, string member, object value);
    public Type GetType(string member);
    public static ReflectionObject Create(Type t, String[] memberNames);
    public static ReflectionObject Create(Type t, MethodBase creator, String[] memberNames);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.ReflectionUtils : object {
    public static Type[] EmptyTypes;
    private static ReflectionUtils();
    [ExtensionAttribute]
public static bool IsVirtual(PropertyInfo propertyInfo);
    [ExtensionAttribute]
public static MethodInfo GetBaseDefinition(PropertyInfo propertyInfo);
    public static bool IsPublic(PropertyInfo property);
    [NullableContextAttribute("2")]
public static Type GetObjectType(object v);
    public static string GetTypeName(Type t, TypeNameAssemblyFormatHandling assemblyFormat, ISerializationBinder binder);
    private static string GetFullyQualifiedTypeName(Type t, ISerializationBinder binder);
    private static string RemoveAssemblyDetails(string fullyQualifiedTypeName);
    public static bool HasDefaultConstructor(Type t, bool nonPublic);
    public static ConstructorInfo GetDefaultConstructor(Type t);
    public static ConstructorInfo GetDefaultConstructor(Type t, bool nonPublic);
    public static bool IsNullable(Type t);
    public static bool IsNullableType(Type t);
    public static Type EnsureNotNullableType(Type t);
    public static Type EnsureNotByRefType(Type t);
    public static bool IsGenericDefinition(Type type, Type genericInterfaceDefinition);
    public static bool ImplementsGenericDefinition(Type type, Type genericInterfaceDefinition);
    public static bool ImplementsGenericDefinition(Type type, Type genericInterfaceDefinition, Type& implementingType);
    public static bool InheritsGenericDefinition(Type type, Type genericClassDefinition);
    public static bool InheritsGenericDefinition(Type type, Type genericClassDefinition, Type& implementingType);
    private static bool InheritsGenericDefinitionInternal(Type currentType, Type genericClassDefinition, Type& implementingType);
    public static Type GetCollectionItemType(Type type);
    [NullableContextAttribute("2")]
public static void GetDictionaryKeyValueTypes(Type dictionaryType, Type& keyType, Type& valueType);
    public static Type GetMemberUnderlyingType(MemberInfo member);
    public static bool IsByRefLikeType(Type type);
    public static bool IsIndexedProperty(PropertyInfo property);
    public static object GetMemberValue(MemberInfo member, object target);
    public static void SetMemberValue(MemberInfo member, object target, object value);
    public static bool CanReadMemberValue(MemberInfo member, bool nonPublic);
    public static bool CanSetMemberValue(MemberInfo member, bool nonPublic, bool canSetReadOnly);
    public static List`1<MemberInfo> GetFieldsAndProperties(Type type, BindingFlags bindingAttr);
    private static bool IsOverridenGenericMember(MemberInfo memberInfo, BindingFlags bindingAttr);
    public static T GetAttribute(object attributeProvider);
    public static T GetAttribute(object attributeProvider, bool inherit);
    public static T[] GetAttributes(object attributeProvider, bool inherit);
    public static Attribute[] GetAttributes(object attributeProvider, Type attributeType, bool inherit);
    public static StructMultiKey`2<string, string> SplitFullyQualifiedTypeName(string fullyQualifiedTypeName);
    private static Nullable`1<int> GetAssemblyDelimiterIndex(string fullyQualifiedTypeName);
    public static MemberInfo GetMemberInfoFromType(Type targetType, MemberInfo memberInfo);
    public static IEnumerable`1<FieldInfo> GetFields(Type targetType, BindingFlags bindingAttr);
    private static void GetChildPrivateFields(IList`1<MemberInfo> initialFields, Type targetType, BindingFlags bindingAttr);
    public static IEnumerable`1<PropertyInfo> GetProperties(Type targetType, BindingFlags bindingAttr);
    [ExtensionAttribute]
public static BindingFlags RemoveFlag(BindingFlags bindingAttr, BindingFlags flag);
    private static void GetChildPrivateProperties(IList`1<PropertyInfo> initialProperties, Type targetType, BindingFlags bindingAttr);
    public static bool IsMethodOverridden(Type currentType, Type methodDeclaringType, string method);
    public static object GetDefaultValue(Type type);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.StringBuffer : ValueType {
    [CompilerGeneratedAttribute]
private int <Position>k__BackingField;
    [CompilerGeneratedAttribute]
private Char[] <InternalBuffer>k__BackingField;
    public int Position { get; public set; }
    public bool IsEmpty { get; }
    public Char[] InternalBuffer { get; private set; }
    public StringBuffer(IArrayPool`1<char> bufferPool, int initalSize);
    [NullableContextAttribute("1")]
private StringBuffer(Char[] buffer);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public int get_Position();
    [CompilerGeneratedAttribute]
public void set_Position(int value);
    public bool get_IsEmpty();
    public void Append(IArrayPool`1<char> bufferPool, char value);
    [NullableContextAttribute("1")]
public void Append(IArrayPool`1<char> bufferPool, Char[] buffer, int startIndex, int count);
    public void Clear(IArrayPool`1<char> bufferPool);
    private void EnsureSize(IArrayPool`1<char> bufferPool, int appendLength);
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
public string ToString(int start, int length);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Char[] get_InternalBuffer();
    [CompilerGeneratedAttribute]
private void set_InternalBuffer(Char[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
[DefaultMemberAttribute("Item")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.StringReference : ValueType {
    [CompilerGeneratedAttribute]
private Char[] <Chars>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StartIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Length>k__BackingField;
    public char Item { get; }
    public Char[] Chars { get; }
    public int StartIndex { get; }
    public int Length { get; }
    public StringReference(Char[] chars, int startIndex, int length);
    public char get_Item(int i);
    [CompilerGeneratedAttribute]
public Char[] get_Chars();
    [CompilerGeneratedAttribute]
public int get_StartIndex();
    [CompilerGeneratedAttribute]
public int get_Length();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.StringReferenceExtensions : object {
    [ExtensionAttribute]
public static int IndexOf(StringReference s, char c, int startIndex, int length);
    [ExtensionAttribute]
public static bool StartsWith(StringReference s, string text);
    [ExtensionAttribute]
public static bool EndsWith(StringReference s, string text);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.StringUtils : object {
    public static char CarriageReturn;
    public static string CarriageReturnLineFeed;
    public static string Empty;
    public static char LineFeed;
    public static char Tab;
    [NullableContextAttribute("2")]
public static bool IsNullOrEmpty(string value);
    [ExtensionAttribute]
public static string FormatWith(string format, IFormatProvider provider, object arg0);
    [ExtensionAttribute]
public static string FormatWith(string format, IFormatProvider provider, object arg0, object arg1);
    [ExtensionAttribute]
public static string FormatWith(string format, IFormatProvider provider, object arg0, object arg1, object arg2);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static string FormatWith(string format, IFormatProvider provider, object arg0, object arg1, object arg2, object arg3);
    [ExtensionAttribute]
private static string FormatWith(string format, IFormatProvider provider, Object[] args);
    public static bool IsWhiteSpace(string s);
    public static StringWriter CreateStringWriter(int capacity);
    public static void ToCharAsUnicode(char c, Char[] buffer);
    [ExtensionAttribute]
public static TSource ForgivingCaseSensitiveFind(IEnumerable`1<TSource> source, Func`2<TSource, string> valueSelector, string testValue);
    public static string ToCamelCase(string s);
    private static char ToLower(char c);
    public static string ToSnakeCase(string s);
    public static string ToKebabCase(string s);
    private static string ToSeparatedCase(string s, char separator);
    public static bool IsHighSurrogate(char c);
    public static bool IsLowSurrogate(char c);
    [ExtensionAttribute]
public static bool StartsWith(string source, char value);
    [ExtensionAttribute]
public static bool EndsWith(string source, char value);
    [ExtensionAttribute]
public static string Trim(string s, int start, int length);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.StructMultiKey`2 : ValueType {
    public T1 Value1;
    public T2 Value2;
    public StructMultiKey`2(T1 v1, T2 v2);
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(StructMultiKey`2<T1, T2> other);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.ThreadSafeStore`2 : object {
    private ConcurrentDictionary`2<TKey, TValue> _concurrentStore;
    private Func`2<TKey, TValue> _creator;
    public ThreadSafeStore`2(Func`2<TKey, TValue> creator);
    public TValue Get(TKey key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.TypeExtensions : object {
    [ExtensionAttribute]
public static MethodInfo Method(Delegate d);
    [ExtensionAttribute]
public static MemberTypes MemberType(MemberInfo memberInfo);
    [ExtensionAttribute]
public static bool ContainsGenericParameters(Type type);
    [ExtensionAttribute]
public static bool IsInterface(Type type);
    [ExtensionAttribute]
public static bool IsGenericType(Type type);
    [ExtensionAttribute]
public static bool IsGenericTypeDefinition(Type type);
    [ExtensionAttribute]
public static Type BaseType(Type type);
    [ExtensionAttribute]
public static Assembly Assembly(Type type);
    [ExtensionAttribute]
public static bool IsEnum(Type type);
    [ExtensionAttribute]
public static bool IsClass(Type type);
    [ExtensionAttribute]
public static bool IsSealed(Type type);
    [ExtensionAttribute]
public static bool IsAbstract(Type type);
    [ExtensionAttribute]
public static bool IsVisible(Type type);
    [ExtensionAttribute]
public static bool IsValueType(Type type);
    [ExtensionAttribute]
public static bool IsPrimitive(Type type);
    [ExtensionAttribute]
public static bool AssignableToTypeName(Type type, string fullTypeName, bool searchInterfaces, Type& match);
    [ExtensionAttribute]
public static bool AssignableToTypeName(Type type, string fullTypeName, bool searchInterfaces);
    [ExtensionAttribute]
public static bool ImplementInterface(Type type, Type interfaceType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.TypeInformation : object {
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private PrimitiveTypeCode <TypeCode>k__BackingField;
    public Type Type { get; }
    public PrimitiveTypeCode TypeCode { get; }
    public TypeInformation(Type type, PrimitiveTypeCode typeCode);
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public PrimitiveTypeCode get_TypeCode();
}
internal static class Elastic.Apm.Libraries.Newtonsoft.Json.Utilities.ValidationUtils : object {
    [NullableContextAttribute("1")]
public static void ArgumentNotNull(object value, string parameterName);
}
internal enum Elastic.Apm.Libraries.Newtonsoft.Json.WriteState : Enum {
    public int value__;
    public static WriteState Error;
    public static WriteState Closed;
    public static WriteState Object;
    public static WriteState Array;
    public static WriteState Constructor;
    public static WriteState Property;
    public static WriteState Start;
}
internal class Elastic.Apm.Logging.ConsoleLogger : object {
    private static object SyncRoot;
    private TextWriter _errorOut;
    private TextWriter _standardOut;
    [CompilerGeneratedAttribute]
private static ConsoleLogger <Instance>k__BackingField;
    [CompilerGeneratedAttribute]
private LogLevelSwitch <LogLevelSwitch>k__BackingField;
    public static ConsoleLogger Instance { get; }
    public LogLevelSwitch LogLevelSwitch { get; }
    internal LogLevel Level { get; }
    public ConsoleLogger(LogLevel level, TextWriter standardOut, TextWriter errorOut);
    private static ConsoleLogger();
    [CompilerGeneratedAttribute]
public static ConsoleLogger get_Instance();
    [CompilerGeneratedAttribute]
public sealed virtual LogLevelSwitch get_LogLevelSwitch();
    internal LogLevel get_Level();
    internal static ConsoleLogger LoggerOrDefault(Nullable`1<LogLevel> level);
    public sealed virtual bool IsEnabled(LogLevel level);
    public sealed virtual void Log(LogLevel level, TState state, Exception e, Func`3<TState, Exception, string> formatter);
    internal static string LevelToString(LogLevel level);
    [CompilerGeneratedAttribute]
internal static void <Log>g__PrintException|14_0(TextWriter writer, Exception exception, string caption);
}
internal class Elastic.Apm.Logging.EnvironmentLoggingConfiguration : object {
    [CompilerGeneratedAttribute]
private IDictionary <EnvironmentVariables>k__BackingField;
    public IDictionary EnvironmentVariables { get; }
    public EnvironmentLoggingConfiguration(IDictionary environmentVariables);
    [CompilerGeneratedAttribute]
public IDictionary get_EnvironmentVariables();
    public string GetSafeEnvironmentVariable(string key);
    public Nullable`1<LogLevel> GetLogLevel(String[] keys);
    public string GetLogDirectory(String[] keys);
    public bool AnyConfigured(String[] keys);
    public Nullable`1<GlobalLogTarget> ParseLogTargets(String[] keys);
    internal static string GetDefaultLogDirectory();
    [CompilerGeneratedAttribute]
private string <GetLogLevel>b__5_0(string k);
    [CompilerGeneratedAttribute]
private string <GetLogDirectory>b__6_0(string k);
    [CompilerGeneratedAttribute]
private string <AnyConfigured>b__7_0(string k);
}
[IsReadOnlyAttribute]
internal class Elastic.Apm.Logging.GlobalLogConfiguration : ValueType {
    [CompilerGeneratedAttribute]
private bool <IsActive>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AgentLogFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private LogLevel <LogLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private GlobalLogTarget <LogTargets>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LogFileDirectory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LogFilePrefix>k__BackingField;
    internal bool IsActive { get; }
    internal string AgentLogFilePath { get; }
    internal LogLevel LogLevel { get; }
    internal GlobalLogTarget LogTargets { get; }
    internal string LogFileDirectory { get; }
    internal string LogFilePrefix { get; }
    private GlobalLogConfiguration(bool isActive, LogLevel logLevel, GlobalLogTarget logTarget, string logFileDirectory, string logFilePrefix);
    [CompilerGeneratedAttribute]
internal bool get_IsActive();
    [CompilerGeneratedAttribute]
internal string get_AgentLogFilePath();
    [CompilerGeneratedAttribute]
internal LogLevel get_LogLevel();
    [CompilerGeneratedAttribute]
internal GlobalLogTarget get_LogTargets();
    [CompilerGeneratedAttribute]
internal string get_LogFileDirectory();
    [CompilerGeneratedAttribute]
internal string get_LogFilePrefix();
    public virtual string ToString();
    internal static GlobalLogConfiguration FromEnvironment(IDictionary environmentVariables);
    private static string GetLogFilePrefix();
    public string CreateLogFileName(string applicationName);
}
[FlagsAttribute]
internal enum Elastic.Apm.Logging.GlobalLogTarget : Enum {
    public int value__;
    public static GlobalLogTarget None;
    public static GlobalLogTarget File;
    public static GlobalLogTarget StdOut;
}
public interface Elastic.Apm.Logging.IApmLogger {
    public abstract virtual bool IsEnabled(LogLevel level);
    public abstract virtual void Log(LogLevel level, TState state, Exception e, Func`3<TState, Exception, string> formatter);
}
public interface Elastic.Apm.Logging.ILogLevelSwitchable {
    public LogLevelSwitch LogLevelSwitch { get; }
    public abstract virtual LogLevelSwitch get_LogLevelSwitch();
}
public static class Elastic.Apm.Logging.LogEnvironmentVariables : object {
    public static string OTEL_LOG_LEVEL;
    public static string OTEL_DOTNET_AUTO_LOG_DIRECTORY;
    public static string ELASTIC_OTEL_LOG_TARGETS;
    public static string ELASTIC_APM_LOG_LEVEL;
    public static string ELASTIC_APM_LOG_DIRECTORY;
    public static string ELASTIC_APM_PROFILER_LOG;
    public static string ELASTIC_APM_PROFILER_LOG_DIR;
    public static string ELASTIC_APM_PROFILER_LOG_TARGETS;
    public static string ELASTIC_APM_STARTUP_HOOKS_LOGGING;
}
[ExtensionAttribute]
internal static class Elastic.Apm.Logging.LoggingExtensions : object {
    [CompilerGeneratedAttribute]
private static ConditionalWeakTable`2<string, LogValuesFormatter> <Formatters>k__BackingField;
    private static object _lock;
    private static ConditionalWeakTable`2<string, LogValuesFormatter> Formatters { get; }
    private static LoggingExtensions();
    [CompilerGeneratedAttribute]
private static ConditionalWeakTable`2<string, LogValuesFormatter> get_Formatters();
    [ExtensionAttribute]
internal static ScopedLogger Scoped(IApmLogger logger, string scope);
    [ExtensionAttribute]
private static void DoLog(IApmLogger logger, LogLevel level, string message, Exception e, Object[] args);
    private static LogValuesFormatter GetOrAddFormatter(string message, IReadOnlyCollection`1<object> args);
    [ExtensionAttribute]
internal static Nullable`1<MaybeLogger> IfLevel(IApmLogger logger, LogLevel level);
    [ExtensionAttribute]
internal static Nullable`1<MaybeLogger> Trace(IApmLogger logger);
    [ExtensionAttribute]
internal static Nullable`1<MaybeLogger> Debug(IApmLogger logger);
    [ExtensionAttribute]
internal static Nullable`1<MaybeLogger> Info(IApmLogger logger);
    [ExtensionAttribute]
internal static Nullable`1<MaybeLogger> Warning(IApmLogger logger);
    [ExtensionAttribute]
internal static Nullable`1<MaybeLogger> Error(IApmLogger logger);
    [ExtensionAttribute]
internal static Nullable`1<MaybeLogger> Critical(IApmLogger logger);
}
public enum Elastic.Apm.Logging.LogLevel : Enum {
    public int value__;
    public static LogLevel Trace;
    public static LogLevel Debug;
    public static LogLevel Information;
    public static LogLevel Warning;
    public static LogLevel Error;
    public static LogLevel Critical;
    public static LogLevel None;
}
public class Elastic.Apm.Logging.LogLevelSwitch : object {
    private LogLevel modreq(System.Runtime.CompilerServices.IsVolatile) _level;
    public LogLevel Level { get; public set; }
    public LogLevelSwitch(LogLevel level);
    public LogLevel get_Level();
    public void set_Level(LogLevel value);
}
internal class Elastic.Apm.Logging.LogValuesFormatter : object {
    private static string NullValue;
    private static Object[] EmptyArray;
    private static Char[] FormatDelimiters;
    private string _format;
    private string _scope;
    [CompilerGeneratedAttribute]
private string <OriginalFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <ValueNames>k__BackingField;
    public string OriginalFormat { get; }
    public List`1<string> ValueNames { get; }
    public LogValuesFormatter(string format, IReadOnlyCollection`1<object> args, string scope);
    private static LogValuesFormatter();
    [CompilerGeneratedAttribute]
public string get_OriginalFormat();
    [CompilerGeneratedAttribute]
public List`1<string> get_ValueNames();
    private static int FindBraceIndex(string format, char brace, int startIndex, int endIndex);
    private static int FindIndexOfAny(string format, Char[] chars, int startIndex, int endIndex);
    public string Format(Object[] values);
    private string Format(string scope, Object[] values);
    private object FormatArgument(object value);
    public LogValues GetState(Object[] values);
}
internal class Elastic.Apm.Logging.ScopedLogger : object {
    [CompilerGeneratedAttribute]
private ConditionalWeakTable`2<string, LogValuesFormatter> <Formatters>k__BackingField;
    [CompilerGeneratedAttribute]
private IApmLogger <Logger>k__BackingField;
    private object _lock;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    internal ConditionalWeakTable`2<string, LogValuesFormatter> Formatters { get; }
    public IApmLogger Logger { get; }
    public string Scope { get; }
    public ScopedLogger(IApmLogger logger, string scope);
    [CompilerGeneratedAttribute]
internal ConditionalWeakTable`2<string, LogValuesFormatter> get_Formatters();
    [CompilerGeneratedAttribute]
public IApmLogger get_Logger();
    [CompilerGeneratedAttribute]
public string get_Scope();
    public sealed virtual bool IsEnabled(LogLevel level);
    internal LogValuesFormatter GetOrAddFormatter(string message, IReadOnlyCollection`1<object> args);
    private sealed virtual override void Elastic.Apm.Logging.IApmLogger.Log(LogLevel level, TState state, Exception e, Func`3<TState, Exception, string> formatter);
}
internal class Elastic.Apm.Logging.TraceLogger : object {
    private static string SourceName;
    internal static TraceSource TraceSource;
    [CompilerGeneratedAttribute]
private LogLevelSwitch <LogLevelSwitch>k__BackingField;
    public LogLevelSwitch LogLevelSwitch { get; }
    private LogLevel Level { get; }
    private static TraceLogger();
    public TraceLogger(LogLevel level);
    [CompilerGeneratedAttribute]
public sealed virtual LogLevelSwitch get_LogLevelSwitch();
    private LogLevel get_Level();
    public sealed virtual bool IsEnabled(LogLevel level);
    public sealed virtual void Log(LogLevel level, TState state, Exception e, Func`3<TState, Exception, string> formatter);
    internal static string LevelToString(LogLevel level);
    [CompilerGeneratedAttribute]
internal static void <Log>g__PrintException|10_0(StringBuilder builder, Exception exception, string caption);
}
internal interface Elastic.Apm.Metrics.IMetricsCollector {
    public abstract virtual void StartCollecting();
}
internal interface Elastic.Apm.Metrics.IMetricsProvider {
    public int ConsecutiveNumberOfFailedReads { get; public set; }
    public string DbgName { get; }
    public bool IsMetricAlreadyCaptured { get; }
    public abstract virtual int get_ConsecutiveNumberOfFailedReads();
    public abstract virtual void set_ConsecutiveNumberOfFailedReads(int value);
    public abstract virtual string get_DbgName();
    public abstract virtual bool get_IsMetricAlreadyCaptured();
    public abstract virtual IEnumerable`1<MetricSet> GetSamples();
    public abstract virtual bool IsEnabled(IReadOnlyList`1<WildcardMatcher> disabledMetrics);
}
internal static class Elastic.Apm.Metrics.Linux.GlobalMemoryStatus : object {
    public static string ProcMemInfo;
    public static ValueTuple`2<long, long> GetTotalAndAvailableSystemMemory(IApmLogger logger);
    internal static ValueTuple`2<long, long> GetTotalAndAvailableSystemMemory(IApmLogger logger, string pathPrefix, bool ignoreOs);
    [CompilerGeneratedAttribute]
internal static long <GetTotalAndAvailableSystemMemory>g__GetEntry|2_0(string line, string name);
}
internal class Elastic.Apm.Metrics.MetricsCollector : object {
    internal static int MaxTryWithoutSuccess;
    internal List`1<IMetricsProvider> MetricsProviders;
    private IConfigurationSnapshotProvider _configurationSnapshotProvider;
    private AgentSpinLock _isCollectionInProgress;
    private IApmLogger _logger;
    private IPayloadSender _payloadSender;
    private Timer _timer;
    public MetricsCollector(IApmLogger logger, IPayloadSender payloadSender, IConfigurationSnapshotProvider configurationSnapshotProvider, IMetricsProvider[] metricsProvider);
    public sealed virtual void StartCollecting();
    internal void CollectAllMetrics();
    private void CollectAllMetricsImpl();
    private List`1<IMetricSet> CollectMetricsFromProviders();
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
private void <.ctor>b__7_0(object _, ElapsedEventArgs _);
    [CompilerGeneratedAttribute]
private void <.ctor>g__AddIfEnabled|7_1(IMetricsProvider provider, <>c__DisplayClass7_0& );
    [CompilerGeneratedAttribute]
private void <CollectMetricsFromProviders>g__ProcessFailedReading|11_0(IMetricsProvider metricsProvider);
}
[JsonConverterAttribute("Elastic.Apm.Report.Serialization.MetricSetConverter")]
internal class Elastic.Apm.Metrics.MetricSet : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<MetricSample> <Samples>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private TransactionInfo <Transaction>k__BackingField;
    [CompilerGeneratedAttribute]
private SpanInfo <Span>k__BackingField;
    public IEnumerable`1<MetricSample> Samples { get; public set; }
    public long Timestamp { get; public set; }
    public TransactionInfo Transaction { get; public set; }
    public SpanInfo Span { get; public set; }
    public MetricSet(long timestamp, IEnumerable`1<MetricSample> samples);
    public MetricSet(IEnumerable`1<MetricSample> samples);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<MetricSample> get_Samples();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Samples(IEnumerable`1<MetricSample> value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_Timestamp();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Timestamp(long value);
    [CompilerGeneratedAttribute]
public sealed virtual TransactionInfo get_Transaction();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Transaction(TransactionInfo value);
    [CompilerGeneratedAttribute]
public sealed virtual SpanInfo get_Span();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Span(SpanInfo value);
}
internal class Elastic.Apm.Metrics.MetricsProvider.BreakdownMetricsProvider : object {
    internal static string SpanSelfTime;
    internal static string SpanSelfTimeCount;
    internal static string SpanSelfTimeSumUs;
    internal static int MetricLimit;
    private Dictionary`2<GroupKey, MetricSet> _itemsToSend;
    private IApmLogger _logger;
    private bool _loggedWarning;
    private object _itemsToSendLock;
    [CompilerGeneratedAttribute]
private int <ConsecutiveNumberOfFailedReads>k__BackingField;
    public int ConsecutiveNumberOfFailedReads { get; public set; }
    public string DbgName { get; }
    public bool IsMetricAlreadyCaptured { get; }
    public BreakdownMetricsProvider(IApmLogger logger);
    [CompilerGeneratedAttribute]
public sealed virtual int get_ConsecutiveNumberOfFailedReads();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConsecutiveNumberOfFailedReads(int value);
    public sealed virtual string get_DbgName();
    public sealed virtual bool get_IsMetricAlreadyCaptured();
    public sealed virtual bool IsEnabled(IReadOnlyList`1<WildcardMatcher> matchers);
    public void CaptureTransaction(Transaction transaction);
    public sealed virtual IEnumerable`1<MetricSet> GetSamples();
}
internal class Elastic.Apm.Metrics.MetricsProvider.CgroupFiles : object {
    [CompilerGeneratedAttribute]
private string <MaxMemoryFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatMemoryFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UsedMemoryFile>k__BackingField;
    public string MaxMemoryFile { get; }
    public string StatMemoryFile { get; }
    public string UsedMemoryFile { get; }
    public CgroupFiles(string maxMemoryFile, string usedMemoryFile, string statMemoryFile);
    [CompilerGeneratedAttribute]
public string get_MaxMemoryFile();
    [CompilerGeneratedAttribute]
public string get_StatMemoryFile();
    [CompilerGeneratedAttribute]
public string get_UsedMemoryFile();
}
internal class Elastic.Apm.Metrics.MetricsProvider.CgroupMetricsProvider : object {
    private static string Cgroup1MaxMemory;
    private static string Cgroup1Unlimited;
    private static string Cgroup1UsedMemory;
    private static string Cgroup2MaxMemory;
    private static string Cgroup2Unlimited;
    private static string Cgroup2UsedMemory;
    private static string CgroupMemoryStat;
    private static string DefaultSysFsCgroup;
    private static string ProcSelfCgroup;
    private static string ProcSelfMountinfo;
    private static string ProcMeminfo;
    internal static string SystemProcessCgroupMemoryMemLimitBytes;
    internal static string SystemProcessCgroupMemoryMemUsageBytes;
    internal static Regex Cgroup1MountPoint;
    internal static Regex Cgroup2MountPoint;
    internal static Regex MemoryCgroup;
    private CgroupFiles _cGroupFiles;
    private bool _collectMemLimitBytes;
    private bool _collectMemUsageBytes;
    private bool _collectTotalMemory;
    private string _pathPrefix;
    private bool _ignoreOs;
    private IApmLogger _logger;
    [CompilerGeneratedAttribute]
private int <ConsecutiveNumberOfFailedReads>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DbgName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsMetricAlreadyCaptured>k__BackingField;
    private static byte Newline;
    private static byte Space;
    public int ConsecutiveNumberOfFailedReads { get; public set; }
    public string DbgName { get; }
    public bool IsMetricAlreadyCaptured { get; }
    private static ReadOnlySpan`1<byte> _totalInactiveFile { get; }
    private static ReadOnlySpan`1<byte> _inactiveFile { get; }
    public CgroupMetricsProvider(IApmLogger logger, IReadOnlyList`1<WildcardMatcher> disabledMetrics);
    private CgroupMetricsProvider(IApmLogger logger, IReadOnlyList`1<WildcardMatcher> disabledMetrics, string pathPrefix, bool ignoreOs);
    private static CgroupMetricsProvider();
    internal static CgroupMetricsProvider TestableCgroupMetricsProvider(IApmLogger logger, IReadOnlyList`1<WildcardMatcher> disabledMetrics, string pathPrefix, bool ignoreOs);
    [CompilerGeneratedAttribute]
public sealed virtual int get_ConsecutiveNumberOfFailedReads();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConsecutiveNumberOfFailedReads(int value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DbgName();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsMetricAlreadyCaptured();
    private CgroupFiles FindCGroupFiles();
    private CgroupFiles CreateCgroup1Files(string memoryMountPath);
    private CgroupFiles CreateCgroup2Files(string cGroupLine, string rootCgroupFsPath);
    internal static string ApplyCgroupRegex(Regex regex, string mountLine);
    private string GetMaxMemoryFile(string maxMemoryFile, string cgroupUnlimitedConstant);
    [IteratorStateMachineAttribute("Elastic.Apm.Metrics.MetricsProvider.CgroupMetricsProvider/<GetSamples>d__41")]
public sealed virtual IEnumerable`1<MetricSet> GetSamples();
    [IteratorStateMachineAttribute("Elastic.Apm.Metrics.MetricsProvider.CgroupMetricsProvider/<GetSamplesCore>d__42")]
private IEnumerable`1<MetricSample> GetSamplesCore();
    private MetricSample GetMemoryMemLimitBytes();
    private MetricSample GetMemoryMemUsageBytes();
    private static ReadOnlySpan`1<byte> get__totalInactiveFile();
    private static ReadOnlySpan`1<byte> get__inactiveFile();
    public sealed virtual bool IsEnabled(IReadOnlyList`1<WildcardMatcher> disabledMetrics);
    private static bool IsSystemProcessCgroupMemoryMemLimitBytesEnabled(IReadOnlyList`1<WildcardMatcher> disabledMetrics);
    private static bool IsSystemProcessCgroupMemoryMemUsageBytesEnabled(IReadOnlyList`1<WildcardMatcher> disabledMetrics);
    private static bool IsTotalMemoryEnabled(IReadOnlyList`1<WildcardMatcher> disabledMetrics);
}
internal class Elastic.Apm.Metrics.MetricsProvider.FreeAndTotalMemoryProvider : object {
    internal static string FreeMemory;
    internal static string TotalMemory;
    private bool _collectFreeMemory;
    private bool _collectTotalMemory;
    private IApmLogger _logger;
    private string _pathPrefix;
    private bool _ignoreOs;
    [CompilerGeneratedAttribute]
private int <ConsecutiveNumberOfFailedReads>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsMetricAlreadyCaptured>k__BackingField;
    public int ConsecutiveNumberOfFailedReads { get; public set; }
    public string DbgName { get; }
    public bool IsMetricAlreadyCaptured { get; }
    public FreeAndTotalMemoryProvider(IApmLogger logger, IReadOnlyList`1<WildcardMatcher> disabledMetrics);
    private FreeAndTotalMemoryProvider(IApmLogger logger, IReadOnlyList`1<WildcardMatcher> disabledMetrics, string pathPrefix, bool ignoreOs);
    internal static FreeAndTotalMemoryProvider TestableFreeAndTotalMemoryProvider(IApmLogger logger, IReadOnlyList`1<WildcardMatcher> disabledMetrics, string pathPrefix, bool ignoreOs);
    [CompilerGeneratedAttribute]
public sealed virtual int get_ConsecutiveNumberOfFailedReads();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConsecutiveNumberOfFailedReads(int value);
    public sealed virtual string get_DbgName();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsMetricAlreadyCaptured();
    public sealed virtual bool IsEnabled(IReadOnlyList`1<WildcardMatcher> disabledMetrics);
    private static bool IsFreeMemoryEnabled(IReadOnlyList`1<WildcardMatcher> disabledMetrics);
    private static bool IsTotalMemoryEnabled(IReadOnlyList`1<WildcardMatcher> disabledMetrics);
    [IteratorStateMachineAttribute("Elastic.Apm.Metrics.MetricsProvider.FreeAndTotalMemoryProvider/<GetSamples>d__22")]
public sealed virtual IEnumerable`1<MetricSet> GetSamples();
    [IteratorStateMachineAttribute("Elastic.Apm.Metrics.MetricsProvider.FreeAndTotalMemoryProvider/<GetSamplesCore>d__23")]
private IEnumerable`1<MetricSample> GetSamplesCore();
}
internal class Elastic.Apm.Metrics.MetricsProvider.GcMetricsProvider : object {
    internal static string GcCountName;
    internal static string GcGen0SizeName;
    internal static string GcGen1SizeName;
    internal static string GcGen2SizeName;
    internal static string GcGen3SizeName;
    internal static string GcTimeName;
    private bool _collectGcCount;
    private bool _collectGcGen0Size;
    private bool _collectGcGen1Size;
    private bool _collectGcGen2Size;
    private bool _collectGcGen3Size;
    private bool _collectGcTime;
    private GcEventListener _eventListener;
    private object _lock;
    private IApmLogger _logger;
    private UInt32 _gcCount;
    private long _gcTimeInTicks;
    private ulong _gen0Size;
    private ulong _gen1Size;
    private ulong _gen2Size;
    private ulong _gen3Size;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _isMetricAlreadyCaptured;
    private bool _isEnabled;
    [CompilerGeneratedAttribute]
private int <ConsecutiveNumberOfFailedReads>k__BackingField;
    public int ConsecutiveNumberOfFailedReads { get; public set; }
    public string DbgName { get; }
    public bool IsMetricAlreadyCaptured { get; }
    public GcMetricsProvider(IApmLogger logger, IReadOnlyList`1<WildcardMatcher> disabledMetrics);
    [CompilerGeneratedAttribute]
public sealed virtual int get_ConsecutiveNumberOfFailedReads();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConsecutiveNumberOfFailedReads(int value);
    public sealed virtual string get_DbgName();
    public sealed virtual bool get_IsMetricAlreadyCaptured();
    public sealed virtual bool IsEnabled(IReadOnlyList`1<WildcardMatcher> disabledMetrics);
    public sealed virtual IEnumerable`1<MetricSet> GetSamples();
    public sealed virtual void Dispose();
}
internal class Elastic.Apm.Metrics.MetricsProvider.ProcessTotalCpuTimeProvider : object {
    internal static string ProcessCpuTotalPct;
    private TimeSpan _lastCurrentProcessCpuTime;
    private DateTime _lastTimeWindowStart;
    private Version _processAssemblyVersion;
    [CompilerGeneratedAttribute]
private int <ConsecutiveNumberOfFailedReads>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsMetricAlreadyCaptured>k__BackingField;
    public int ConsecutiveNumberOfFailedReads { get; public set; }
    public string DbgName { get; }
    public bool IsMetricAlreadyCaptured { get; }
    public ProcessTotalCpuTimeProvider(IApmLogger logger);
    [CompilerGeneratedAttribute]
public sealed virtual int get_ConsecutiveNumberOfFailedReads();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConsecutiveNumberOfFailedReads(int value);
    public sealed virtual string get_DbgName();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsMetricAlreadyCaptured();
    public sealed virtual IEnumerable`1<MetricSet> GetSamples();
    public sealed virtual bool IsEnabled(IReadOnlyList`1<WildcardMatcher> disabledMetrics);
}
internal class Elastic.Apm.Metrics.MetricsProvider.ProcessWorkingSetAndVirtualMemoryProvider : object {
    internal static string ProcessVirtualMemory;
    internal static string ProcessWorkingSetMemory;
    private bool _collectProcessVirtualMemory;
    private bool _collectProcessWorkingSetMemory;
    [CompilerGeneratedAttribute]
private int <ConsecutiveNumberOfFailedReads>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsMetricAlreadyCaptured>k__BackingField;
    public int ConsecutiveNumberOfFailedReads { get; public set; }
    public string DbgName { get; }
    public bool IsMetricAlreadyCaptured { get; }
    public ProcessWorkingSetAndVirtualMemoryProvider(IReadOnlyList`1<WildcardMatcher> disabledMetrics);
    [CompilerGeneratedAttribute]
public sealed virtual int get_ConsecutiveNumberOfFailedReads();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConsecutiveNumberOfFailedReads(int value);
    public sealed virtual string get_DbgName();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsMetricAlreadyCaptured();
    public sealed virtual bool IsEnabled(IReadOnlyList`1<WildcardMatcher> disabledMetrics);
    private bool IsProcessVirtualMemoryEnabled(IReadOnlyList`1<WildcardMatcher> disabledMetrics);
    private bool IsProcessWorkingSetMemoryEnabled(IReadOnlyList`1<WildcardMatcher> disabledMetrics);
    public sealed virtual IEnumerable`1<MetricSet> GetSamples();
}
internal class Elastic.Apm.Metrics.MetricsProvider.SystemTotalCpuProvider : object {
    internal static string SystemCpuTotalPct;
    private IApmLogger _logger;
    private PerformanceCounter _processorTimePerfCounter;
    private StreamReader _procStatStreamReader;
    private bool _initializationStarted;
    private long _prevIdleTime;
    private long _prevTotalTime;
    [CompilerGeneratedAttribute]
private int <ConsecutiveNumberOfFailedReads>k__BackingField;
    public int ConsecutiveNumberOfFailedReads { get; public set; }
    public string DbgName { get; }
    public bool IsMetricAlreadyCaptured { get; }
    public SystemTotalCpuProvider(IApmLogger logger);
    internal SystemTotalCpuProvider(IApmLogger logger, StreamReader procStatStreamReader);
    [CompilerGeneratedAttribute]
public sealed virtual int get_ConsecutiveNumberOfFailedReads();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConsecutiveNumberOfFailedReads(int value);
    public sealed virtual string get_DbgName();
    public sealed virtual bool get_IsMetricAlreadyCaptured();
    internal ValueTuple`3<bool, long, long> ReadProcStat();
    private StreamReader GetProcStatAsStream();
    public sealed virtual IEnumerable`1<MetricSet> GetSamples();
    public sealed virtual bool IsEnabled(IReadOnlyList`1<WildcardMatcher> disabledMetrics);
    public sealed virtual void Dispose();
}
public class Elastic.Apm.Metrics.SpanInfo : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubType>k__BackingField;
    [MaxLengthAttribute]
public string Type { get; public set; }
    [MaxLengthAttribute]
public string SubType { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_SubType();
    [CompilerGeneratedAttribute]
public void set_SubType(string value);
    public sealed virtual bool Equals(SpanInfo other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(SpanInfo left, SpanInfo right);
    public static bool op_Inequality(SpanInfo left, SpanInfo right);
}
public class Elastic.Apm.Metrics.TransactionInfo : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [MaxLengthAttribute]
public string Name { get; public set; }
    [MaxLengthAttribute]
public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public sealed virtual bool Equals(TransactionInfo other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(TransactionInfo left, TransactionInfo right);
    public static bool op_Inequality(TransactionInfo left, TransactionInfo right);
}
internal static class Elastic.Apm.Metrics.Windows.GlobalMemoryStatus : object {
    private static bool GlobalMemoryStatusEx(MemoryStatusEx& lpBuffer);
    internal static ValueTuple`3<bool, ulong, ulong> GetTotalPhysAndAvailPhys();
}
internal class Elastic.Apm.Metrics.Windows.MemoryStatusEx : ValueType {
    internal UInt32 dwLength;
    private UInt32 dwMemoryLoad;
    internal ulong ullTotalPhys;
    internal ulong ullAvailPhys;
    private ulong ullTotalPageFile;
    private ulong ullAvailPageFile;
    private ulong ullTotalVirtual;
    private ulong ullAvailVirtual;
    private ulong ullAvailExtendedVirtual;
}
internal class Elastic.Apm.Model.ChildDurationTimer : object {
    private int _activeChildren;
    private long _start;
    [CompilerGeneratedAttribute]
private double <Duration>k__BackingField;
    public double Duration { get; private set; }
    [CompilerGeneratedAttribute]
public double get_Duration();
    [CompilerGeneratedAttribute]
private void set_Duration(double value);
    public void OnChildStart(long startTimestamp);
    public void OnChildEnd(long endTimestamp);
    public void OnSpanEnd(long endTimestamp);
    private void IncrementDuration(long epochMicros);
}
internal class Elastic.Apm.Model.Composite : object {
    [CompilerGeneratedAttribute]
private string <CompressionStrategy>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Sum>k__BackingField;
    [JsonPropertyAttribute("compression_strategy")]
public string CompressionStrategy { get; public set; }
    public int Count { get; public set; }
    public double Sum { get; public set; }
    [CompilerGeneratedAttribute]
public string get_CompressionStrategy();
    [CompilerGeneratedAttribute]
public void set_CompressionStrategy(string value);
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(int value);
    [CompilerGeneratedAttribute]
public double get_Sum();
    [CompilerGeneratedAttribute]
public void set_Sum(double value);
}
internal class Elastic.Apm.Model.DbSpanCommon : object {
    private DbConnectionStringParser _dbConnectionStringParser;
    internal DbSpanCommon(IApmLogger logger);
    internal ISpan StartSpan(IApmAgent agent, IDbCommand dbCommand, InstrumentationFlag instrumentationFlag, string subType, bool captureStackTraceOnStart);
    internal static string GetDbSpanName(IDbCommand dbCommand);
    internal void EndSpan(ISpan span, IDbCommand dbCommand, Outcome outcome, Nullable`1<TimeSpan> duration);
    private static void GetDefaultProperties(string dbConnectionClassName, String& spanSubtype, Nullable`1& defaultPort);
    private static string GetSpanAction(CommandType dbCommandType);
    internal Destination GetDestination(string dbConnectionString, Nullable`1<int> defaultPort);
}
internal class Elastic.Apm.Model.DroppedSpanStats : object {
    [CompilerGeneratedAttribute]
private string <DestinationServiceResource>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceTargetType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceTargetName>k__BackingField;
    [CompilerGeneratedAttribute]
private Outcome <Outcome>k__BackingField;
    [CompilerGeneratedAttribute]
private DroppedSpanDuration <Duration>k__BackingField;
    [JsonPropertyAttribute("destination_service_resource")]
public string DestinationServiceResource { get; }
    [JsonPropertyAttribute("service_target_type")]
public string ServiceTargetType { get; }
    [JsonPropertyAttribute("service_target_name")]
public string ServiceTargetName { get; }
    public Outcome Outcome { get; }
    public DroppedSpanDuration Duration { get; public set; }
    public DroppedSpanStats(string serviceTargetType, string serviceTargetName, string destinationServiceResource, Outcome outcome, double durationSumUs);
    [CompilerGeneratedAttribute]
public string get_DestinationServiceResource();
    [CompilerGeneratedAttribute]
public string get_ServiceTargetType();
    [CompilerGeneratedAttribute]
public string get_ServiceTargetName();
    [CompilerGeneratedAttribute]
public Outcome get_Outcome();
    [CompilerGeneratedAttribute]
public DroppedSpanDuration get_Duration();
    [CompilerGeneratedAttribute]
public void set_Duration(DroppedSpanDuration value);
}
internal class Elastic.Apm.Model.Error : object {
    [CompilerGeneratedAttribute]
private IConfiguration <Configuration>k__BackingField;
    [CompilerGeneratedAttribute]
private Context <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Culprit>k__BackingField;
    [CompilerGeneratedAttribute]
private CapturedException <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorLog <Log>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParentId>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TraceId>k__BackingField;
    [CompilerGeneratedAttribute]
private TransactionData <Transaction>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TransactionId>k__BackingField;
    [JsonIgnoreAttribute]
internal IConfiguration Configuration { get; }
    public Context Context { get; public set; }
    [MaxLengthAttribute]
public string Culprit { get; public set; }
    public CapturedException Exception { get; public set; }
    [MaxLengthAttribute]
public string Id { get; }
    public ErrorLog Log { get; public set; }
    [MaxLengthAttribute]
[JsonPropertyAttribute("parent_id")]
public string ParentId { get; public set; }
    public long Timestamp { get; }
    [MaxLengthAttribute]
[JsonPropertyAttribute("trace_id")]
public string TraceId { get; public set; }
    public TransactionData Transaction { get; }
    [MaxLengthAttribute]
[JsonPropertyAttribute("transaction_id")]
public string TransactionId { get; public set; }
    public Error(CapturedException capturedException, Transaction transaction, string parentId, IApmLogger loggerArg, Dictionary`2<string, Label> labels);
    public Error(ErrorLog errorLog, Transaction transaction, string parentId, IApmLogger loggerArg, Dictionary`2<string, Label> labels);
    private Error(Transaction transaction, string parentId, IApmLogger loggerArg, Dictionary`2<string, Label> labels);
    [JsonConstructorAttribute]
private Error(string culprit, CapturedException capturedException, string id, string parentId, long timestamp, string traceId, string transactionId, TransactionData transaction);
    [CompilerGeneratedAttribute]
internal IConfiguration get_Configuration();
    private void CheckAndCaptureBaggage(Transaction transaction);
    [CompilerGeneratedAttribute]
public Context get_Context();
    [CompilerGeneratedAttribute]
public void set_Context(Context value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Culprit();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Culprit(string value);
    [CompilerGeneratedAttribute]
public sealed virtual CapturedException get_Exception();
    [CompilerGeneratedAttribute]
public void set_Exception(CapturedException value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual ErrorLog get_Log();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Log(ErrorLog value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ParentId();
    [CompilerGeneratedAttribute]
public void set_ParentId(string value);
    [CompilerGeneratedAttribute]
public long get_Timestamp();
    [CompilerGeneratedAttribute]
public sealed virtual string get_TraceId();
    [CompilerGeneratedAttribute]
public void set_TraceId(string value);
    [CompilerGeneratedAttribute]
public TransactionData get_Transaction();
    [CompilerGeneratedAttribute]
public sealed virtual string get_TransactionId();
    [CompilerGeneratedAttribute]
public void set_TransactionId(string value);
    public bool ShouldSerializeContext();
    public virtual string ToString();
}
internal static class Elastic.Apm.Model.ExecutionSegmentCommon : object {
    private static string DefaultCulprit;
    internal static void CaptureSpan(ISpan span, Action`1<ISpan> capturedAction);
    internal static void CaptureSpan(ISpan span, Action capturedAction);
    internal static T CaptureSpan(ISpan span, Func`2<ISpan, T> func);
    internal static T CaptureSpan(ISpan span, Func`1<T> func);
    internal static Task CaptureSpan(ISpan span, Func`1<Task> func);
    internal static Task CaptureSpan(ISpan span, Func`2<ISpan, Task> func);
    internal static Task`1<T> CaptureSpan(ISpan span, Func`1<Task`1<T>> func);
    internal static Task`1<T> CaptureSpan(ISpan span, Func`2<ISpan, Task`1<T>> func);
    private static void RegisterContinuation(Task task, ISpan span);
    public static void CaptureException(Exception exception, IApmLogger logger, IPayloadSender payloadSender, IExecutionSegment executionSegment, IConfigurationReader configurationReader, Transaction transaction, IApmServerInfo apmServerInfo, string culprit, bool isHandled, string parentId, Dictionary`2<string, Label> labels);
    private static string GetCulprit(Exception exception, IConfigurationReader configurationReader);
    private static bool IsInApp(string fullyQualifiedTypeName, IReadOnlyCollection`1<string> excludedNamespaces, IReadOnlyCollection`1<string> applicationNamespaces);
    public static void CaptureError(string message, string culprit, StackFrame[] frames, IPayloadSender payloadSender, IApmLogger logger, IExecutionSegment executionSegment, IConfigurationReader configurationReader, Transaction transaction, IApmServerInfo apmServerInfo, string parentId, Dictionary`2<string, Label> labels);
    internal static ISpan StartSpanOnCurrentExecutionSegment(IApmAgent agent, string spanName, string spanType, string subType, InstrumentationFlag instrumentationFlag, bool captureStackTraceOnStart, bool isExitSpan);
    internal static void CaptureErrorLog(ErrorLog errorLog, IPayloadSender payloadSender, IApmLogger logger, IExecutionSegment executionSegment, IConfiguration configuration, Transaction enclosingTransaction, string parentId, IApmServerInfo serverInfo, Exception exception, Dictionary`2<string, Label> labels);
}
public class Elastic.Apm.Model.Faas : object {
    [CompilerGeneratedAttribute]
private bool <ColdStart>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Execution>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private Trigger <Trigger>k__BackingField;
    public bool ColdStart { get; public set; }
    public string Execution { get; public set; }
    public string Id { get; public set; }
    public string Name { get; public set; }
    public string Version { get; public set; }
    public Trigger Trigger { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_ColdStart();
    [CompilerGeneratedAttribute]
public void set_ColdStart(bool value);
    [CompilerGeneratedAttribute]
public string get_Execution();
    [CompilerGeneratedAttribute]
public void set_Execution(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public Trigger get_Trigger();
    [CompilerGeneratedAttribute]
public void set_Trigger(Trigger value);
    public virtual string ToString();
}
[FlagsAttribute]
internal enum Elastic.Apm.Model.InstrumentationFlag : Enum {
    public short value__;
    public static InstrumentationFlag None;
    public static InstrumentationFlag HttpClient;
    public static InstrumentationFlag AspNetCore;
    public static InstrumentationFlag EfCore;
    public static InstrumentationFlag EfClassic;
    public static InstrumentationFlag SqlClient;
    public static InstrumentationFlag AspNetClassic;
    public static InstrumentationFlag Azure;
    public static InstrumentationFlag Elasticsearch;
    public static InstrumentationFlag Postgres;
    public static InstrumentationFlag Oracle;
    public static InstrumentationFlag MySql;
    public static InstrumentationFlag Sqlite;
    public static InstrumentationFlag AdoNet;
}
internal interface Elastic.Apm.Model.IScannerFilter {
    public abstract virtual void Reset();
    public abstract virtual bool Skip(Scanner s, char c);
}
[JsonConverterAttribute("Elastic.Apm.Report.Serialization.LabelsJsonConverter")]
internal class Elastic.Apm.Model.LabelsDictionary : Dictionary`2<string, string> {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Label> <InnerDictionary>k__BackingField;
    internal Dictionary`2<string, Label> InnerDictionary { get; }
    internal Dictionary`2<string, Label> MergedDictionary { get; }
    [CompilerGeneratedAttribute]
internal Dictionary`2<string, Label> get_InnerDictionary();
    internal Dictionary`2<string, Label> get_MergedDictionary();
}
[SpecificationAttribute("metadata.json")]
internal class Elastic.Apm.Model.Metadata : object {
    [CompilerGeneratedAttribute]
private Cloud <Cloud>k__BackingField;
    [CompilerGeneratedAttribute]
private LabelsDictionary <Labels>k__BackingField;
    [CompilerGeneratedAttribute]
private Service <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private ProcessInformation <Process>k__BackingField;
    [CompilerGeneratedAttribute]
private System <System>k__BackingField;
    public Cloud Cloud { get; public set; }
    public LabelsDictionary Labels { get; public set; }
    public Service Service { get; public set; }
    public ProcessInformation Process { get; public set; }
    public System System { get; public set; }
    [CompilerGeneratedAttribute]
public Cloud get_Cloud();
    [CompilerGeneratedAttribute]
public void set_Cloud(Cloud value);
    [CompilerGeneratedAttribute]
public LabelsDictionary get_Labels();
    [CompilerGeneratedAttribute]
public void set_Labels(LabelsDictionary value);
    [CompilerGeneratedAttribute]
public Service get_Service();
    [CompilerGeneratedAttribute]
public void set_Service(Service value);
    [CompilerGeneratedAttribute]
public ProcessInformation get_Process();
    [CompilerGeneratedAttribute]
public void set_Process(ProcessInformation value);
    [CompilerGeneratedAttribute]
public System get_System();
    [CompilerGeneratedAttribute]
public void set_System(System value);
    public bool ShouldSerializeLabels();
}
internal class Elastic.Apm.Model.NoOp : object {
    public static NoOp INSTANCE;
    private static NoOp();
    public sealed virtual bool Skip(Scanner s, char c);
    public sealed virtual void Reset();
}
internal class Elastic.Apm.Model.NoopSpan : object {
    private static SpanContext ReusableContextInstance;
    private ICurrentExecutionSegmentsContainer _currentExecutionSegmentsContainer;
    private Lazy`1<Dictionary`2<string, string>> _labels;
    private ISpan _parentSpan;
    [CompilerGeneratedAttribute]
private string <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsExitSpan>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Duration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Outcome <Outcome>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParentId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<CapturedStackFrame> <StackTrace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Subtype>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TraceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TransactionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [MaxLengthAttribute]
public string Action { get; public set; }
    public SpanContext Context { get; }
    public bool IsExitSpan { get; }
    public Nullable`1<double> Duration { get; public set; }
    [MaxLengthAttribute]
public string Id { get; }
    public bool IsSampled { get; }
    public Dictionary`2<string, string> Labels { get; }
    [MaxLengthAttribute]
public string Name { get; public set; }
    public Outcome Outcome { get; public set; }
    public DistributedTracingData OutgoingDistributedTracingData { get; }
    [JsonPropertyAttribute("parent_id")]
[MaxLengthAttribute]
public string ParentId { get; }
    public List`1<CapturedStackFrame> StackTrace { get; }
    [MaxLengthAttribute]
public string Subtype { get; public set; }
    public long Timestamp { get; }
    [JsonPropertyAttribute("trace_id")]
[MaxLengthAttribute]
public string TraceId { get; }
    public string TransactionId { get; }
    [MaxLengthAttribute]
public string Type { get; public set; }
    internal NoopSpan(string name, string type, string subtype, string action, ICurrentExecutionSegmentsContainer currentExecutionSegmentsContainer, string parentId, string traceId, ISpan parentSpan);
    private static NoopSpan();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Action();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Action(string value);
    public sealed virtual SpanContext get_Context();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsExitSpan();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Duration();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Duration(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    public sealed virtual bool get_IsSampled();
    public sealed virtual Dictionary`2<string, string> get_Labels();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Outcome get_Outcome();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Outcome(Outcome value);
    public sealed virtual DistributedTracingData get_OutgoingDistributedTracingData();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ParentId();
    [CompilerGeneratedAttribute]
public sealed virtual List`1<CapturedStackFrame> get_StackTrace();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Subtype();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Subtype(string value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_Timestamp();
    [CompilerGeneratedAttribute]
public sealed virtual string get_TraceId();
    [CompilerGeneratedAttribute]
public sealed virtual string get_TransactionId();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Type(string value);
    public sealed virtual void CaptureError(string message, string culprit, StackFrame[] frames, string parentId, Dictionary`2<string, Label> labels);
    public sealed virtual void CaptureException(Exception exception, string culprit, bool isHandled, string parentId, Dictionary`2<string, Label> labels);
    public sealed virtual void CaptureErrorLog(ErrorLog errorLog, string parentId, Exception exception, Dictionary`2<string, Label> labels);
    public sealed virtual void CaptureSpan(string name, string type, Action`1<ISpan> capturedAction, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual void CaptureSpan(string name, string type, Action capturedAction, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual T CaptureSpan(string name, string type, Func`2<ISpan, T> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual T CaptureSpan(string name, string type, Func`1<T> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual Task CaptureSpan(string name, string type, Func`1<Task> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual Task CaptureSpan(string name, string type, Func`2<ISpan, Task> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual Task`1<T> CaptureSpan(string name, string type, Func`1<Task`1<T>> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual Task`1<T> CaptureSpan(string name, string type, Func`2<ISpan, Task`1<T>> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual void End();
    public sealed virtual void SetLabel(string key, string value);
    public sealed virtual void SetLabel(string key, bool value);
    public sealed virtual void SetLabel(string key, double value);
    public sealed virtual void SetLabel(string key, int value);
    public sealed virtual void SetLabel(string key, long value);
    public sealed virtual void SetLabel(string key, decimal value);
    public sealed virtual ISpan StartSpan(string name, string type, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual bool TryGetLabel(string key, T& value);
}
internal class Elastic.Apm.Model.NoopTransaction : object {
    private static Context ReusableContextInstance;
    private ICurrentExecutionSegmentsContainer _currentExecutionSegmentsContainer;
    private Lazy`1<Dictionary`2<string, string>> _custom;
    private Lazy`1<Dictionary`2<string, string>> _labels;
    [CompilerGeneratedAttribute]
private Faas <FaaS>k__BackingField;
    [CompilerGeneratedAttribute]
private IConfiguration <Configuration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Duration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Outcome <Outcome>k__BackingField;
    [CompilerGeneratedAttribute]
private DistributedTracingData <OutgoingDistributedTracingData>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParentId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Result>k__BackingField;
    [CompilerGeneratedAttribute]
private SpanCount <SpanCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TraceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public Context Context { get; }
    public Faas FaaS { get; public set; }
    public Dictionary`2<string, string> Custom { get; }
    public IConfiguration Configuration { get; }
    public Nullable`1<double> Duration { get; public set; }
    [MaxLengthAttribute]
public string Id { get; }
    public bool IsSampled { get; }
    public Dictionary`2<string, string> Labels { get; }
    [MaxLengthAttribute]
public string Name { get; public set; }
    public Outcome Outcome { get; public set; }
    public DistributedTracingData OutgoingDistributedTracingData { get; }
    [JsonPropertyAttribute("parent_id")]
[MaxLengthAttribute]
public string ParentId { get; }
    [MaxLengthAttribute]
public string Result { get; public set; }
    [JsonPropertyAttribute("span_count")]
public SpanCount SpanCount { get; }
    [JsonPropertyAttribute("trace_id")]
[MaxLengthAttribute]
public string TraceId { get; }
    [MaxLengthAttribute]
public string Type { get; public set; }
    public NoopTransaction(string name, string type, ICurrentExecutionSegmentsContainer currentExecutionSegmentsContainer, IConfiguration configuration);
    private static NoopTransaction();
    public sealed virtual Context get_Context();
    [CompilerGeneratedAttribute]
public sealed virtual Faas get_FaaS();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FaaS(Faas value);
    public sealed virtual Dictionary`2<string, string> get_Custom();
    [CompilerGeneratedAttribute]
public sealed virtual IConfiguration get_Configuration();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Duration();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Duration(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    public sealed virtual bool get_IsSampled();
    public sealed virtual Dictionary`2<string, string> get_Labels();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Outcome get_Outcome();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Outcome(Outcome value);
    [CompilerGeneratedAttribute]
public sealed virtual DistributedTracingData get_OutgoingDistributedTracingData();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ParentId();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Result();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Result(string value);
    [CompilerGeneratedAttribute]
public sealed virtual SpanCount get_SpanCount();
    [CompilerGeneratedAttribute]
public sealed virtual string get_TraceId();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Type(string value);
    public sealed virtual void CaptureError(string message, string culprit, StackFrame[] frames, string parentId, Dictionary`2<string, Label> labels);
    public sealed virtual void CaptureException(Exception exception, string culprit, bool isHandled, string parentId, Dictionary`2<string, Label> labels);
    public sealed virtual void CaptureSpan(string name, string type, Action`1<ISpan> capturedAction, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual void CaptureSpan(string name, string type, Action capturedAction, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual T CaptureSpan(string name, string type, Func`2<ISpan, T> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual T CaptureSpan(string name, string type, Func`1<T> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual Task CaptureSpan(string name, string type, Func`1<Task> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual Task CaptureSpan(string name, string type, Func`2<ISpan, Task> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual Task`1<T> CaptureSpan(string name, string type, Func`1<Task`1<T>> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual Task`1<T> CaptureSpan(string name, string type, Func`2<ISpan, Task`1<T>> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual void End();
    public sealed virtual void SetLabel(string key, string value);
    public sealed virtual void SetLabel(string key, bool value);
    public sealed virtual void SetLabel(string key, double value);
    public sealed virtual void SetLabel(string key, int value);
    public sealed virtual void SetLabel(string key, long value);
    public sealed virtual void SetLabel(string key, decimal value);
    public sealed virtual ISpan StartSpan(string name, string type, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual string EnsureParentId();
    public sealed virtual void SetService(string serviceName, string serviceVersion);
    public sealed virtual bool TryGetLabel(string key, T& value);
    public sealed virtual void CaptureErrorLog(ErrorLog errorLog, string parentId, Exception exception, Dictionary`2<string, Label> labels);
}
public class Elastic.Apm.Model.OTel : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpanKind>k__BackingField;
    public Dictionary`2<string, object> Attributes { get; public set; }
    public string SpanKind { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Attributes();
    [CompilerGeneratedAttribute]
public void set_Attributes(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public string get_SpanKind();
    [CompilerGeneratedAttribute]
public void set_SpanKind(string value);
}
internal class Elastic.Apm.Model.Scanner : object {
    private IScannerFilter _scannerFilter;
    private int _end;
    private string _input;
    private int _inputLength;
    private int _pos;
    private int _start;
    public Scanner(IScannerFilter scannerFilter);
    public void SetQuery(string sql);
    public Token ScanWhile(Token token);
    public bool ScanUntil(Token token);
    public bool ScanToken(Token token);
    public Token Scan();
    private Token ScanKeywordOrIdentifier(bool maybeKeyword);
    private Token ScanNumericLiteral();
    private Token ScanStringLiteral();
    private Token ScanQuotedIdentifier(char delimiter);
    private Token ScanSimpleComment();
    private Token ScanBracketedComment();
    private char Peek();
    public char Next();
    private bool HasNext();
    private bool IsTextEqualIgnoreCase(string name);
    private string Text();
    public void AppendCurrentTokenText(StringBuilder sb);
    public int TextLength();
    private bool IsNextChar(char c);
    public bool IsNextCharIgnoreCase(char c);
}
internal class Elastic.Apm.Model.SignatureParser : object {
    private static int DisableCacheThreshold;
    private static int QueryLengthCacheLowerThreshold;
    private static int QueryLengthCacheUpperThreshold;
    private Scanner _scanner;
    private ConcurrentDictionary`2<string, String[]> _signatureCache;
    public SignatureParser(Scanner scanner);
    private static SignatureParser();
    public void QuerySignature(string query, StringBuilder signature, bool preparedStatement);
    public void QuerySignature(string query, StringBuilder signature, StringBuilder dbLink, bool preparedStatement);
    private void Parse(Scanner scanner, string query, StringBuilder signature, StringBuilder dbLink);
    private void AppendIdentifiers(Scanner scanner, StringBuilder signature, StringBuilder dbLink);
}
internal class Elastic.Apm.Model.Span : object {
    private IApmServerInfo _apmServerInfo;
    private ChildDurationTimer _childDurationTimer;
    private Lazy`1<SpanContext> _context;
    private ICurrentExecutionSegmentsContainer _currentExecutionSegmentsContainer;
    private Transaction _enclosingTransaction;
    private bool _isDropped;
    private IApmLogger _logger;
    private Span _parentSpan;
    private IPayloadSender _payloadSender;
    private Span _compressionBuffer;
    private bool _hasPropagatedContext;
    private bool _isEnded;
    internal Outcome _outcome;
    private bool _outcomeChangedThroughApi;
    [CompilerGeneratedAttribute]
private string <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DroppedSpanStatCacheStruct> <DroppedSpanStatCache>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Duration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private InstrumentationFlag <InstrumentationFlag>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsExitSpan>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParentId>k__BackingField;
    internal StackTrace RawStackTrace;
    [CompilerGeneratedAttribute]
private IEnumerable`1<SpanLink> <Links>k__BackingField;
    [CompilerGeneratedAttribute]
private Composite <Composite>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <SampleRate>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<CapturedStackFrame> <StackTrace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Subtype>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TraceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private OTel <Otel>k__BackingField;
    [CompilerGeneratedAttribute]
private EventHandler Ended;
    private bool Discardable { get; }
    [MaxLengthAttribute]
public string Action { get; public set; }
    [JsonIgnoreAttribute]
internal Nullable`1<DroppedSpanStatCacheStruct> DroppedSpanStatCache { get; internal set; }
    [JsonIgnoreAttribute]
internal IConfiguration Configuration { get; }
    public SpanContext Context { get; }
    public Nullable`1<double> Duration { get; public set; }
    [MaxLengthAttribute]
public string Id { get; public set; }
    internal InstrumentationFlag InstrumentationFlag { get; internal set; }
    [JsonIgnoreAttribute]
public bool IsExitSpan { get; }
    [JsonIgnoreAttribute]
public bool IsSampled { get; }
    [JsonIgnoreAttribute]
[ObsoleteAttribute("Instead of this dictionary, use the `SetLabel` method which supports more types than just string. This property will be removed in a future release.")]
public Dictionary`2<string, string> Labels { get; }
    [MaxLengthAttribute]
public string Name { get; public set; }
    public Outcome Outcome { get; public set; }
    [JsonIgnoreAttribute]
public DistributedTracingData OutgoingDistributedTracingData { get; }
    [MaxLengthAttribute]
[JsonPropertyAttribute("parent_id")]
public string ParentId { get; public set; }
    public IEnumerable`1<SpanLink> Links { get; private set; }
    public Composite Composite { get; public set; }
    [JsonPropertyAttribute("sample_rate")]
internal Nullable`1<double> SampleRate { get; }
    private double SelfDuration { get; }
    [JsonIgnoreAttribute]
internal bool ShouldBeSentToApmServer { get; }
    [JsonPropertyAttribute("stacktrace")]
public List`1<CapturedStackFrame> StackTrace { get; public set; }
    [MaxLengthAttribute]
public string Subtype { get; public set; }
    public long Timestamp { get; internal set; }
    [MaxLengthAttribute]
[JsonPropertyAttribute("trace_id")]
public string TraceId { get; public set; }
    [MaxLengthAttribute]
[JsonPropertyAttribute("transaction_id")]
public string TransactionId { get; }
    [MaxLengthAttribute]
public string Type { get; public set; }
    public OTel Otel { get; public set; }
    [JsonConstructorAttribute]
private Span(double duration, string id, string name, string parentId);
    public Span(string name, string type, string parentId, string traceId, Transaction enclosingTransaction, IPayloadSender payloadSender, IApmLogger logger, ICurrentExecutionSegmentsContainer currentExecutionSegmentsContainer, IApmServerInfo apmServerInfo, Span parentSpan, InstrumentationFlag instrumentationFlag, bool captureStackTraceOnStart, Nullable`1<long> timestamp, bool isExitSpan, string id, IEnumerable`1<SpanLink> links, Activity current);
    private bool get_Discardable();
    private void CheckAndCaptureBaggage();
    private bool UseLegacyCaptureStackTraceSetting();
    internal bool IsCaptureStackTraceOnStartEnabled();
    internal bool IsCaptureStackTraceOnEndEnabled();
    private bool DurationRequiresCaptureStackTrace();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Action();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Action(string value);
    [CompilerGeneratedAttribute]
internal Nullable`1<DroppedSpanStatCacheStruct> get_DroppedSpanStatCache();
    [CompilerGeneratedAttribute]
internal void set_DroppedSpanStatCache(Nullable`1<DroppedSpanStatCacheStruct> value);
    internal IConfiguration get_Configuration();
    public sealed virtual SpanContext get_Context();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Duration();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Duration(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
internal InstrumentationFlag get_InstrumentationFlag();
    [CompilerGeneratedAttribute]
internal void set_InstrumentationFlag(InstrumentationFlag value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsExitSpan();
    public sealed virtual bool get_IsSampled();
    public sealed virtual Dictionary`2<string, string> get_Labels();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    public sealed virtual Outcome get_Outcome();
    public sealed virtual void set_Outcome(Outcome value);
    public sealed virtual DistributedTracingData get_OutgoingDistributedTracingData();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ParentId();
    [CompilerGeneratedAttribute]
public void set_ParentId(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<SpanLink> get_Links();
    [CompilerGeneratedAttribute]
private void set_Links(IEnumerable`1<SpanLink> value);
    [CompilerGeneratedAttribute]
public Composite get_Composite();
    [CompilerGeneratedAttribute]
public void set_Composite(Composite value);
    [CompilerGeneratedAttribute]
internal Nullable`1<double> get_SampleRate();
    private double get_SelfDuration();
    internal bool get_ShouldBeSentToApmServer();
    [CompilerGeneratedAttribute]
public sealed virtual List`1<CapturedStackFrame> get_StackTrace();
    [CompilerGeneratedAttribute]
public void set_StackTrace(List`1<CapturedStackFrame> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Subtype();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Subtype(string value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_Timestamp();
    [CompilerGeneratedAttribute]
internal void set_Timestamp(long value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TraceId();
    [CompilerGeneratedAttribute]
public void set_TraceId(string value);
    public sealed virtual string get_TransactionId();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Type(string value);
    public bool ShouldSerializeContext();
    public virtual string ToString();
    public sealed virtual bool TryGetLabel(string key, T& value);
    [CompilerGeneratedAttribute]
public OTel get_Otel();
    [CompilerGeneratedAttribute]
public void set_Otel(OTel value);
    public sealed virtual ISpan StartSpan(string name, string type, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    internal Span StartSpanInternal(string name, string type, string subType, string action, InstrumentationFlag instrumentationFlag, bool captureStackTraceOnStart, Nullable`1<long> timestamp, string id, bool isExitSpan, IEnumerable`1<SpanLink> links, Activity current);
    [CompilerGeneratedAttribute]
public void add_Ended(EventHandler value);
    [CompilerGeneratedAttribute]
public void remove_Ended(EventHandler value);
    public sealed virtual void End();
    private bool TryToCompress(Span sibling);
    private bool IsSameKind(Span other);
    private bool TryToCompressRegular(Span sibling);
    private bool TryToCompressComposite(Span sibling);
    internal void InsertSpanLinkInternal(IEnumerable`1<SpanLink> links);
    private void SetThisToParentsBuffer();
    public bool IsCompressionEligible();
    public sealed virtual void CaptureException(Exception exception, string culprit, bool isHandled, string parentId, Dictionary`2<string, Label> labels);
    public sealed virtual void CaptureSpan(string name, string type, Action`1<ISpan> capturedAction, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual void CaptureSpan(string name, string type, Action capturedAction, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual T CaptureSpan(string name, string type, Func`2<ISpan, T> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual T CaptureSpan(string name, string type, Func`1<T> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual Task CaptureSpan(string name, string type, Func`1<Task> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual Task CaptureSpan(string name, string type, Func`2<ISpan, Task> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual Task`1<T> CaptureSpan(string name, string type, Func`1<Task`1<T>> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual Task`1<T> CaptureSpan(string name, string type, Func`2<ISpan, Task`1<T>> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual void CaptureError(string message, string culprit, StackFrame[] frames, string parentId, Dictionary`2<string, Label> labels);
    private void DeduceServiceTarget();
    private Destination DeduceHttpDestination();
    public sealed virtual void SetLabel(string key, string value);
    public sealed virtual void SetLabel(string key, bool value);
    public sealed virtual void SetLabel(string key, double value);
    public sealed virtual void SetLabel(string key, int value);
    public sealed virtual void SetLabel(string key, long value);
    public sealed virtual void SetLabel(string key, decimal value);
    public sealed virtual void CaptureErrorLog(ErrorLog errorLog, string parentId, Exception exception, Dictionary`2<string, Label> labels);
    [CompilerGeneratedAttribute]
private void <End>g__QueueSpan|117_0(Span span);
    [CompilerGeneratedAttribute]
private void <DeduceServiceTarget>g__FillDestinationService|135_0();
    [CompilerGeneratedAttribute]
private void <DeduceServiceTarget>g__CopyMissingProperties|135_1(Destination src);
}
internal class Elastic.Apm.Model.SpanTimer : object {
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private double <TotalDuration>k__BackingField;
    public int Count { get; public set; }
    public double TotalDuration { get; public set; }
    public SpanTimer(double duration);
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(int value);
    [CompilerGeneratedAttribute]
public double get_TotalDuration();
    [CompilerGeneratedAttribute]
public void set_TotalDuration(double value);
    public void IncrementTimer(double duration);
}
internal class Elastic.Apm.Model.SpanTimerKey : ValueType {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubType>k__BackingField;
    public string Type { get; }
    public string SubType { get; public set; }
    public static SpanTimerKey AppSpanType { get; }
    public SpanTimerKey(string type, string subType);
    public SpanTimerKey(string type);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Type();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_SubType();
    [CompilerGeneratedAttribute]
public void set_SubType(string value);
    public static SpanTimerKey get_AppSpanType();
}
internal class Elastic.Apm.Model.Transaction : object {
    internal static string ApmTransactionActivityName;
    internal TraceState _traceState;
    internal ConcurrentDictionary`2<SpanTimerKey, SpanTimer> SpanTimings;
    private Activity _activity;
    private IApmServerInfo _apmServerInfo;
    private BreakdownMetricsProvider _breakdownMetricsProvider;
    private Lazy`1<Context> _context;
    private ICurrentExecutionSegmentsContainer _currentExecutionSegmentsContainer;
    private IApmLogger _logger;
    private IPayloadSender _sender;
    private ConcurrentDictionary`2<DroppedSpanStatsKey, DroppedSpanStats> _droppedSpanStatsMap;
    private bool _isEnded;
    private string _name;
    private Outcome _outcome;
    private bool _outcomeChangedThroughApi;
    [CompilerGeneratedAttribute]
private ChildDurationTimer <ChildDurationTimer>k__BackingField;
    internal Span CompressionBuffer;
    [CompilerGeneratedAttribute]
private IConfiguration <Configuration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Duration>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasCustomName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSampled>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<SpanLink> <Links>k__BackingField;
    [CompilerGeneratedAttribute]
private OTel <Otel>k__BackingField;
    [CompilerGeneratedAttribute]
private Faas <FaaS>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParentId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Result>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <SampleRate>k__BackingField;
    internal Service Service;
    [CompilerGeneratedAttribute]
private SpanCount <SpanCount>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TraceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    private object _lock;
    [CompilerGeneratedAttribute]
private EventHandler Ended;
    internal ChildDurationTimer ChildDurationTimer { get; }
    [JsonIgnoreAttribute]
public IConfiguration Configuration { get; }
    public Context Context { get; }
    [JsonIgnoreAttribute]
public Dictionary`2<string, string> Custom { get; }
    [JsonPropertyAttribute("dropped_spans_stats")]
public IEnumerable`1<DroppedSpanStats> DroppedSpanStats { get; }
    public Nullable`1<double> Duration { get; public set; }
    [JsonIgnoreAttribute]
internal bool HasCustomName { get; private set; }
    [MaxLengthAttribute]
public string Id { get; }
    [JsonIgnoreAttribute]
internal bool IsContextCreated { get; }
    [JsonPropertyAttribute("sampled")]
public bool IsSampled { get; }
    [JsonIgnoreAttribute]
[ObsoleteAttribute("Instead of this dictionary, use the `SetLabel` method which supports more types than just string. This property will be removed in a future release.")]
public Dictionary`2<string, string> Labels { get; }
    public IEnumerable`1<SpanLink> Links { get; private set; }
    [MaxLengthAttribute]
public string Name { get; public set; }
    public OTel Otel { get; public set; }
    public Faas FaaS { get; public set; }
    public Outcome Outcome { get; public set; }
    [JsonIgnoreAttribute]
public DistributedTracingData OutgoingDistributedTracingData { get; }
    [MaxLengthAttribute]
[JsonPropertyAttribute("parent_id")]
public string ParentId { get; public set; }
    [MaxLengthAttribute]
public string Result { get; public set; }
    [JsonPropertyAttribute("sample_rate")]
internal Nullable`1<double> SampleRate { get; }
    internal double SelfDuration { get; }
    [JsonPropertyAttribute("span_count")]
public SpanCount SpanCount { get; public set; }
    public long Timestamp { get; }
    [MaxLengthAttribute]
[JsonPropertyAttribute("trace_id")]
public string TraceId { get; }
    [MaxLengthAttribute]
public string Type { get; public set; }
    [JsonConstructorAttribute]
private Transaction(Context context, string name, string type, double duration, long timestamp, string id, string traceId, string parentId, bool isSampled, string result, SpanCount spanCount);
    internal Transaction(ApmAgent agent, string name, string type, Nullable`1<long> timestamp);
    internal Transaction(IApmLogger logger, string name, string type, Sampler sampler, DistributedTracingData distributedTracingData, IPayloadSender sender, IConfiguration configuration, ICurrentExecutionSegmentsContainer currentExecutionSegmentsContainer, IApmServerInfo apmServerInfo, BreakdownMetricsProvider breakdownMetricsProvider, bool ignoreActivity, Nullable`1<long> timestamp, string id, string traceId, IEnumerable`1<SpanLink> links, Activity current);
    private static Transaction();
    private void CheckAndCaptureBaggage();
    [CompilerGeneratedAttribute]
internal ChildDurationTimer get_ChildDurationTimer();
    [CompilerGeneratedAttribute]
public sealed virtual IConfiguration get_Configuration();
    public sealed virtual Context get_Context();
    public sealed virtual Dictionary`2<string, string> get_Custom();
    public IEnumerable`1<DroppedSpanStats> get_DroppedSpanStats();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Duration();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Duration(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
internal bool get_HasCustomName();
    [CompilerGeneratedAttribute]
private void set_HasCustomName(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    internal bool get_IsContextCreated();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsSampled();
    public sealed virtual Dictionary`2<string, string> get_Labels();
    [CompilerGeneratedAttribute]
public IEnumerable`1<SpanLink> get_Links();
    [CompilerGeneratedAttribute]
private void set_Links(IEnumerable`1<SpanLink> value);
    internal void InsertSpanLinkInternal(IEnumerable`1<SpanLink> links);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public OTel get_Otel();
    [CompilerGeneratedAttribute]
public void set_Otel(OTel value);
    [CompilerGeneratedAttribute]
public sealed virtual Faas get_FaaS();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FaaS(Faas value);
    public sealed virtual Outcome get_Outcome();
    public sealed virtual void set_Outcome(Outcome value);
    public sealed virtual DistributedTracingData get_OutgoingDistributedTracingData();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ParentId();
    [CompilerGeneratedAttribute]
public void set_ParentId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Result();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Result(string value);
    [CompilerGeneratedAttribute]
internal Nullable`1<double> get_SampleRate();
    internal double get_SelfDuration();
    [CompilerGeneratedAttribute]
public sealed virtual SpanCount get_SpanCount();
    [CompilerGeneratedAttribute]
public void set_SpanCount(SpanCount value);
    [CompilerGeneratedAttribute]
public long get_Timestamp();
    [CompilerGeneratedAttribute]
public sealed virtual string get_TraceId();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Type(string value);
    internal void SetOutcome(Outcome outcome);
    private Activity StartActivity(bool shouldRestartTrace);
    internal void UpdateDroppedSpanStats(string serviceTargetType, string serviceTargetName, string destinationServiceResource, Outcome outcome, double duration);
    public sealed virtual void SetService(string serviceName, string serviceVersion);
    public sealed virtual string EnsureParentId();
    public bool ShouldSerializeContext();
    public virtual string ToString();
    [CompilerGeneratedAttribute]
public void add_Ended(EventHandler value);
    [CompilerGeneratedAttribute]
public void remove_Ended(EventHandler value);
    public sealed virtual void End();
    public sealed virtual bool TryGetLabel(string key, T& value);
    public sealed virtual ISpan StartSpan(string name, string type, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    internal Span StartSpanInternal(string name, string type, string subType, string action, InstrumentationFlag instrumentationFlag, bool captureStackTraceOnStart, Nullable`1<long> timestamp, string id, bool isExitSpan, IEnumerable`1<SpanLink> links, Activity current);
    public sealed virtual void CaptureException(Exception exception, string culprit, bool isHandled, string parentId, Dictionary`2<string, Label> labels);
    public sealed virtual void CaptureError(string message, string culprit, StackFrame[] frames, string parentId, Dictionary`2<string, Label> labels);
    public sealed virtual void CaptureSpan(string name, string type, Action`1<ISpan> capturedAction, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual void CaptureSpan(string name, string type, Action capturedAction, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual T CaptureSpan(string name, string type, Func`2<ISpan, T> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual T CaptureSpan(string name, string type, Func`1<T> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual Task CaptureSpan(string name, string type, Func`1<Task> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual Task CaptureSpan(string name, string type, Func`2<ISpan, Task> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual Task`1<T> CaptureSpan(string name, string type, Func`1<Task`1<T>> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    public sealed virtual Task`1<T> CaptureSpan(string name, string type, Func`2<ISpan, Task`1<T>> func, string subType, string action, bool isExitSpan, IEnumerable`1<SpanLink> links);
    internal static string StatusCodeToResult(string protocolName, int statusCode);
    internal static string GetNameFromRouteContext(IDictionary`2<string, object> routeValues);
    public sealed virtual void CaptureErrorLog(ErrorLog errorLog, string parentId, Exception exception, Dictionary`2<string, Label> labels);
    public sealed virtual void SetLabel(string key, string value);
    public sealed virtual void SetLabel(string key, bool value);
    public sealed virtual void SetLabel(string key, double value);
    public sealed virtual void SetLabel(string key, int value);
    public sealed virtual void SetLabel(string key, long value);
    public sealed virtual void SetLabel(string key, decimal value);
}
public class Elastic.Apm.Model.Trigger : ValueType {
    public static string TypeOther;
    public static string TypeHttp;
    [CompilerGeneratedAttribute]
private string <RequestId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyAttribute("request_id")]
public string RequestId { get; public set; }
    public string Type { get; public set; }
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_RequestId();
    [CompilerGeneratedAttribute]
public void set_RequestId(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual string ToString();
}
internal static class Elastic.Apm.OpenTelemetry.SemanticConventions : object {
    public static string DbSystem;
    public static string DbName;
    public static string HttpUrl;
    public static string HttpStatusCode;
    public static string HttpMethod;
    public static string HttpScheme;
    public static string HttpHost;
    public static string HttpRequestMethod;
    public static string HttpRequestBodySize;
    public static string HttpResponseStatusCode;
    public static string HttpResponseBodySize;
    public static string UrlFull;
    public static string ServerAddress;
    public static string ServerPort;
    public static string NetPeerIp;
    public static string NetPeerName;
    public static string NetPeerPort;
    public static string MessagingSystem;
    public static string MessagingDestination;
    public static string RpcSystem;
    public static string RpcService;
}
internal class Elastic.Apm.Reflection.CascadePropertyFetcher : PropertyFetcher {
    private PropertyFetcher _innerFetcher;
    public CascadePropertyFetcher(PropertyFetcher innerFetcher, string propertyName);
    public virtual object Fetch(object obj);
}
internal class Elastic.Apm.Reflection.ExpressionBuilder : object {
    public static Func`2<TObject, TProperty> BuildPropertyGetter(string propertyName);
    public static Func`2<object, object> BuildPropertyGetter(Type type, PropertyInfo propertyInfo);
    public static Func`2<object, object> BuildFieldGetter(Type type, FieldInfo fieldInfo);
    public static Func`2<object, object> BuildPropertyGetter(Type type, string propertyName);
}
internal class Elastic.Apm.Reflection.PropertyFetcher : object {
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    private PropertyFetch _innerFetcher;
    public string PropertyName { get; }
    public PropertyFetcher(string propertyName);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    public virtual object Fetch(object obj);
    [CompilerGeneratedAttribute]
private bool <Fetch>b__5_0(PropertyInfo p);
}
internal class Elastic.Apm.Reflection.PropertyFetcherCollection : object {
    private Dictionary`2<string, PropertyFetcher> _propertyFetchers;
    public PropertyFetcherCollection(int capacity);
    public void Add(PropertyFetcher propertyFetcher);
    public void Add(string propertyName);
    public object Fetch(object obj, string propertyName);
    public sealed virtual IEnumerator`1<PropertyFetcher> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public interface Elastic.Apm.Report.IPayloadSender {
    public abstract virtual void QueueError(IError error);
    public abstract virtual void QueueMetrics(IMetricSet metrics);
    public abstract virtual void QueueSpan(ISpan span);
    public abstract virtual void QueueTransaction(ITransaction transaction);
}
public interface Elastic.Apm.Report.IPayloadSenderWithFilters {
    public abstract virtual bool AddFilter(Func`2<ITransaction, ITransaction> transactionFilter);
    public abstract virtual bool AddFilter(Func`2<ISpan, ISpan> spanFilter);
    public abstract virtual bool AddFilter(Func`2<IError, IError> errorFilter);
}
internal class Elastic.Apm.Report.PayloadSenderV2 : BackendCommComponentBase {
    private static string ThisClassName;
    private List`1<Func`2<IError, IError>> ErrorFilters;
    private List`1<Func`2<ISpan, ISpan>> SpanFilters;
    private List`1<Func`2<ITransaction, ITransaction>> TransactionFilters;
    private IApmServerInfo _apmServerInfo;
    private Action`2<bool, IApmServerInfo> _serverInfoCallback;
    private CloudMetadataProviderCollection _cloudMetadataProviderCollection;
    internal System System;
    private IConfiguration _configuration;
    private BatchBlock`1<object> _eventQueue;
    private TimeSpan _flushInterval;
    private Uri _intakeV2EventsAbsoluteUrl;
    private IApmLogger _logger;
    private int _maxQueueEventCount;
    private Metadata _metadata;
    private PayloadItemSerializer _payloadItemSerializer;
    private string _cachedMetadataJsonLine;
    private long _eventQueueCount;
    private ElasticVersion _brokenActivationMethodVersion;
    private string _cachedActivationMethod;
    private bool _isEnabled;
    private bool _getApmServerVersion;
    private bool _getCloudMetadata;
    private bool _allowFilterAdd;
    private static UTF8Encoding Utf8Encoding;
    private static MediaTypeHeaderValue MediaTypeHeaderValue;
    public PayloadSenderV2(IApmLogger logger, IConfiguration configuration, Service service, System system, IApmServerInfo apmServerInfo, HttpMessageHandler httpMessageHandler, string dbgName, bool isEnabled, IEnvironmentVariables environmentVariables, Action`2<bool, IApmServerInfo> serverInfoCallback);
    private static PayloadSenderV2();
    internal static void SetUpFilters(List`1<Func`2<ITransaction, ITransaction>> transactionFilters, List`1<Func`2<ISpan, ISpan>> spanFilters, List`1<Func`2<IError, IError>> errorFilters, IApmServerInfo apmServerInfo, IApmLogger logger);
    public sealed virtual void QueueTransaction(ITransaction transaction);
    public sealed virtual void QueueSpan(ISpan span);
    public sealed virtual void QueueMetrics(IMetricSet metricSet);
    public sealed virtual void QueueError(IError error);
    protected virtual void Dispose(bool disposing);
    [AsyncStateMachineAttribute("Elastic.Apm.Report.PayloadSenderV2/<EnqueueEventInternal>d__34")]
internal Task`1<bool> EnqueueEventInternal(object eventObj, string dbgEventKind);
    internal void EnqueueEvent(object eventObj, string dbgEventKind);
    protected virtual void WorkLoopIteration();
    private void ResetActivationMethodIfKnownBrokenApmServer();
    private Object[] ReceiveBatch();
    private void ProcessQueueItems(Object[] queueItems);
    private void Serialize(object item, string eventType, TextWriter writer);
    private T TryExecuteFilter(List`1<Func`2<T, T>> filters, T item);
    public sealed virtual bool AddFilter(Func`2<ITransaction, ITransaction> transactionFilter);
    public sealed virtual bool AddFilter(Func`2<ISpan, ISpan> spanFilter);
    public sealed virtual bool AddFilter(Func`2<IError, IError> errorFilter);
}
internal class Elastic.Apm.Report.Serialization.CustomJsonConverter : JsonConverter`1<Dictionary`2<string, string>> {
    public virtual void WriteJson(JsonWriter writer, Dictionary`2<string, string> custom, JsonSerializer serializer);
    public virtual Dictionary`2<string, string> ReadJson(JsonReader reader, Type objectType, Dictionary`2<string, string> existingValue, bool hasExistingValue, JsonSerializer serializer);
}
internal class Elastic.Apm.Report.Serialization.ElasticApmContractResolver : DefaultContractResolver {
    private TruncateJsonConverter _defaultTruncateJsonConverter;
    protected virtual JsonProperty CreateProperty(MemberInfo member, MemberSerialization memberSerialization);
}
internal class Elastic.Apm.Report.Serialization.LabelsJsonConverter : JsonConverter`1<LabelsDictionary> {
    public virtual void WriteJson(JsonWriter writer, LabelsDictionary labels, JsonSerializer serializer);
    public virtual LabelsDictionary ReadJson(JsonReader reader, Type objectType, LabelsDictionary existingValue, bool hasExistingValue, JsonSerializer serializer);
}
internal class Elastic.Apm.Report.Serialization.MetricSetConverter : JsonConverter`1<MetricSet> {
    public virtual void WriteJson(JsonWriter writer, MetricSet value, JsonSerializer serializer);
    public virtual MetricSet ReadJson(JsonReader reader, Type objectType, MetricSet existingValue, bool hasExistingValue, JsonSerializer serializer);
}
internal class Elastic.Apm.Report.Serialization.OutcomeConverter : JsonConverter`1<Outcome> {
    public virtual Outcome ReadJson(JsonReader reader, Type objectType, Outcome existingValue, bool hasExistingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, Outcome value, JsonSerializer serializer);
}
internal class Elastic.Apm.Report.Serialization.PayloadItemSerializer : object {
    private JsonSerializer _serializer;
    public void Serialize(object item, TextWriter writer);
    internal T Deserialize(string json);
    internal string Serialize(object item);
}
internal class Elastic.Apm.Report.Serialization.TruncateJsonConverter : JsonConverter`1<string> {
    [CompilerGeneratedAttribute]
private int <MaxLength>k__BackingField;
    public int MaxLength { get; }
    public TruncateJsonConverter(int maxLength);
    [CompilerGeneratedAttribute]
public int get_MaxLength();
    public virtual void WriteJson(JsonWriter writer, string value, JsonSerializer serializer);
    public virtual string ReadJson(JsonReader reader, Type objectType, string existingValue, bool hasExistingValue, JsonSerializer serializer);
}
[IsReadOnlyAttribute]
internal class Elastic.Apm.Sampler : ValueType {
    private long _higherBound;
    private long _lowerBound;
    [CompilerGeneratedAttribute]
private double <Rate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Constant>k__BackingField;
    public double Rate { get; }
    internal Nullable`1<bool> Constant { get; }
    internal Sampler(double rate);
    [CompilerGeneratedAttribute]
public double get_Rate();
    internal static double RoundToPrecision(double rate);
    [CompilerGeneratedAttribute]
internal Nullable`1<bool> get_Constant();
    internal bool DecideIfToSample(Byte[] randomBytes);
    internal static bool IsValidRate(double rate);
    public virtual string ToString();
}
internal class Elastic.Apm.ServerInfo.ApmServerInfo : object {
    [CompilerGeneratedAttribute]
private ElasticVersion <Version>k__BackingField;
    public ElasticVersion Version { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual ElasticVersion get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(ElasticVersion value);
}
internal class Elastic.Apm.ServerInfo.ApmServerInfoProvider : object {
    [AsyncStateMachineAttribute("Elastic.Apm.ServerInfo.ApmServerInfoProvider/<FillApmServerInfo>d__0")]
internal static Task FillApmServerInfo(IApmServerInfo apmServerInfo, IApmLogger logger, IConfiguration configuration, HttpClient httpClient, Action`2<bool, IApmServerInfo> callbackOnFinish);
}
internal class Elastic.Apm.ServerInfo.ElasticVersion : object {
    private static Regex VersionRegex;
    [CompilerGeneratedAttribute]
private int <Major>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Minor>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Patch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Prerelease>k__BackingField;
    public int Major { get; }
    public int Minor { get; }
    public int Patch { get; }
    public string Prerelease { get; }
    public ElasticVersion(string version);
    public ElasticVersion(int major, int minor, int patch, string prerelease);
    private static ElasticVersion();
    [CompilerGeneratedAttribute]
public int get_Major();
    [CompilerGeneratedAttribute]
public int get_Minor();
    [CompilerGeneratedAttribute]
public int get_Patch();
    [CompilerGeneratedAttribute]
public string get_Prerelease();
    public static bool TryParse(string version, ElasticVersion& elasticVersion);
    public static bool Equals(ElasticVersion versionA, ElasticVersion versionB);
    public static int Compare(ElasticVersion versionA, ElasticVersion versionB);
    public ElasticVersion Change(Nullable`1<int> major, Nullable`1<int> minor, Nullable`1<int> patch, string prerelease);
    public virtual string ToString();
    public sealed virtual int CompareTo(object obj);
    public sealed virtual int CompareTo(ElasticVersion other);
    public bool PrecedenceMatches(ElasticVersion other);
    public int CompareByPrecedence(ElasticVersion other);
    private static int CompareComponent(string a, string b, bool lower);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ElasticVersion other);
    public virtual int GetHashCode();
    public static bool op_Equality(ElasticVersion left, ElasticVersion right);
    public static bool op_Inequality(ElasticVersion left, ElasticVersion right);
    public static bool op_GreaterThan(ElasticVersion left, ElasticVersion right);
    public static bool op_GreaterThanOrEqual(ElasticVersion left, ElasticVersion right);
    public static bool op_LessThan(ElasticVersion left, ElasticVersion right);
    public static bool op_LessThanOrEqual(ElasticVersion left, ElasticVersion right);
}
internal interface Elastic.Apm.ServerInfo.IApmServerInfo {
    public ElasticVersion Version { get; public set; }
    public abstract virtual ElasticVersion get_Version();
    public abstract virtual void set_Version(ElasticVersion value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("10688")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
