public class Microsoft.Data.Entity.Build.Tasks.EntityClean : Task {
    private ITaskItem[] _sources;
    private string _resourceOutputPath;
    private string _outputPath;
    [RequiredAttribute]
public ITaskItem[] Sources { get; public set; }
    public string ResourceOutputPath { get; public set; }
    [RequiredAttribute]
public string OutputPath { get; public set; }
    public ITaskItem[] get_Sources();
    public void set_Sources(ITaskItem[] value);
    public string get_ResourceOutputPath();
    public void set_ResourceOutputPath(string value);
    public string get_OutputPath();
    public void set_OutputPath(string value);
    public virtual bool Execute();
}
public class Microsoft.Data.Entity.Build.Tasks.EntityDeploy : Task {
    private string _outputPath;
    private ITaskItem[] _sources;
    private List`1<ITaskItem> _newResources;
    [RequiredAttribute]
public string OutputPath { get; public set; }
    [RequiredAttribute]
public ITaskItem[] Sources { get; public set; }
    [ObsoleteAttribute("Used only for v3.5 backward compatibility.")]
[OutputAttribute]
public ITaskItem[] EntityDataModelEmbeddedResources { get; }
    public string get_OutputPath();
    public void set_OutputPath(string value);
    public ITaskItem[] get_Sources();
    public void set_Sources(ITaskItem[] value);
    public ITaskItem[] get_EntityDataModelEmbeddedResources();
    public virtual bool Execute();
    private bool OutputFiles(DirectoryInfo topLevelOutputDir);
    private bool OutputCMS(string inputFileRelativePath, DirectoryInfo topLevelOutputDir, XmlElement conceptualSchemaElement, XmlElement mappingElement, XmlElement storageSchemaElement);
    private TaskItem CreateTaskItem(string fileName, string logicalName, string relativePathOfEDMXFile);
    private bool OutputXml(string outputPath, XmlElement xmlElement);
}
public class Microsoft.Data.Entity.Build.Tasks.EntityDeploySetLogicalNames : Task {
    private string _resourceOutputPath;
    private ITaskItem[] _sources;
    private List`1<ITaskItem> _newResources;
    [RequiredAttribute]
public string ResourceOutputPath { get; public set; }
    [RequiredAttribute]
public ITaskItem[] Sources { get; public set; }
    [OutputAttribute]
public ITaskItem[] ResourcesToEmbed { get; }
    public string get_ResourceOutputPath();
    public void set_ResourceOutputPath(string value);
    public ITaskItem[] get_Sources();
    public void set_Sources(ITaskItem[] value);
    public ITaskItem[] get_ResourcesToEmbed();
    public virtual bool Execute();
}
public class Microsoft.Data.Entity.Build.Tasks.EntityDeploySplit : Task {
    private static string EntityDeployRelativeDir;
    private ITaskItem[] _sources;
    private ITaskItem[] _edmxItemsToBeEmbedded;
    private ITaskItem[] _edmxItemsToNotBeEmbedded;
    [RequiredAttribute]
public ITaskItem[] Sources { get; public set; }
    [OutputAttribute]
public ITaskItem[] EmbeddingItems { get; public set; }
    [OutputAttribute]
public ITaskItem[] NonEmbeddingItems { get; public set; }
    private static EntityDeploySplit();
    public ITaskItem[] get_Sources();
    public void set_Sources(ITaskItem[] value);
    public ITaskItem[] get_EmbeddingItems();
    public void set_EmbeddingItems(ITaskItem[] value);
    public ITaskItem[] get_NonEmbeddingItems();
    public void set_NonEmbeddingItems(ITaskItem[] value);
    public virtual bool Execute();
    internal static void AssignMetadata(ITaskItem taskItem);
    internal static string ComputeEntityDeployRelativeDir(ITaskItem taskItem);
    internal static string EntityDeployMetadataRelativePath(ITaskItem taskItem);
    private static bool ContainsEntityDeployRelativeDir(ITaskItem taskItem);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.Data.Entity.Build.Tasks.Properties.Resources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string CouldNotFindConceptualSchema { get; }
    internal static string CouldNotFindMapping { get; }
    internal static string CouldNotFindStorageSchema { get; }
    internal static string ErrorCleaningFile { get; }
    internal static string ErrorNotAnEdmxFile { get; }
    internal static string ErrorProcessingInputFile { get; }
    internal static string ErrorWritingFile { get; }
    internal static string FinishedCleaningAllFiles { get; }
    internal static string FinishedCleaningEdmxFile { get; }
    internal static string FinishedCleaningFile { get; }
    internal static string FinishedProcessingEdmxFiles { get; }
    internal static string FinishedProcessingFile { get; }
    internal static string OverwritingFile { get; }
    internal static string ProcessingEdmxFiles { get; }
    internal static string SetLogicalNamesIncorrectPath { get; }
    internal static string SettingLogicalName { get; }
    internal static string StartingProcessingFile { get; }
    internal static string Usage { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_CouldNotFindConceptualSchema();
    internal static string get_CouldNotFindMapping();
    internal static string get_CouldNotFindStorageSchema();
    internal static string get_ErrorCleaningFile();
    internal static string get_ErrorNotAnEdmxFile();
    internal static string get_ErrorProcessingInputFile();
    internal static string get_ErrorWritingFile();
    internal static string get_FinishedCleaningAllFiles();
    internal static string get_FinishedCleaningEdmxFile();
    internal static string get_FinishedCleaningFile();
    internal static string get_FinishedProcessingEdmxFiles();
    internal static string get_FinishedProcessingFile();
    internal static string get_OverwritingFile();
    internal static string get_ProcessingEdmxFiles();
    internal static string get_SetLogicalNamesIncorrectPath();
    internal static string get_SettingLogicalName();
    internal static string get_StartingProcessingFile();
    internal static string get_Usage();
}
internal static class System.Data.Entity.Design.EntityDesignerUtils : object {
    private static EFNamespaceSet v1Namespaces;
    private static EFNamespaceSet v2Namespaces;
    private static EFNamespaceSet v3Namespaces;
    private static EntityDesignerUtils();
    public static void ExtractConceptualMappingAndStorageNodes(StreamReader edmxInputStream, XmlElement& conceptualSchemaNode, XmlElement& mappingNode, XmlElement& storageSchemaNode, String& metadataArtifactProcessingValue);
    public static void OutputXmlElementToStream(XmlElement xmlElement, Stream stream);
}
internal static class System.Data.Metadata.Edm.XmlConstants : object {
    public static string EdmxFileExtension;
    public static string CSSpaceSchemaExtension;
    public static string CSpaceSchemaExtension;
    public static string SSpaceSchemaExtension;
}
