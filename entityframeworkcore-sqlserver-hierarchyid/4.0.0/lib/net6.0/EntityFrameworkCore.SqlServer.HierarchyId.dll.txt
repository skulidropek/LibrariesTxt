[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class Microsoft.EntityFrameworkCore.SqlServer.Design.SqlServerHierarchyIdDesignTimeServices : object {
    public virtual void ConfigureDesignTimeServices(IServiceCollection serviceCollection);
}
internal class Microsoft.EntityFrameworkCore.SqlServer.Infrastructure.SqlServerHierarchyIdOptionsExtension : object {
    private DbContextOptionsExtensionInfo _info;
    public DbContextOptionsExtensionInfo Info { get; }
    public sealed virtual DbContextOptionsExtensionInfo get_Info();
    public virtual void ApplyServices(IServiceCollection services);
    public virtual void Validate(IDbContextOptions options);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.EntityFrameworkCore.SqlServer.Properties.Resources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string ServicesMissing { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_ServicesMissing();
}
internal class Microsoft.EntityFrameworkCore.SqlServer.Query.ExpressionTranslators.SqlServerHierarchyIdMethodCallTranslatorPlugin : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<IMethodCallTranslator> <Translators>k__BackingField;
    public IEnumerable`1<IMethodCallTranslator> Translators { get; }
    public SqlServerHierarchyIdMethodCallTranslatorPlugin(IRelationalTypeMappingSource typeMappingSource, ISqlExpressionFactory sqlExpressionFactory);
    [CompilerGeneratedAttribute]
public virtual IEnumerable`1<IMethodCallTranslator> get_Translators();
}
internal class Microsoft.EntityFrameworkCore.SqlServer.Query.ExpressionTranslators.SqlServerHierarchyIdMethodTranslator : object {
    private static IDictionary`2<MethodInfo, string> _methodToFunctionName;
    private IRelationalTypeMappingSource _typeMappingSource;
    private ISqlExpressionFactory _sqlExpressionFactory;
    public SqlServerHierarchyIdMethodTranslator(IRelationalTypeMappingSource typeMappingSource, ISqlExpressionFactory sqlExpressionFactory);
    private static SqlServerHierarchyIdMethodTranslator();
    public sealed virtual SqlExpression Translate(SqlExpression instance, MethodInfo method, IReadOnlyList`1<SqlExpression> arguments, IDiagnosticsLogger`1<Query> logger);
    [IteratorStateMachineAttribute("Microsoft.EntityFrameworkCore.SqlServer.Query.ExpressionTranslators.SqlServerHierarchyIdMethodTranslator/<simplify>d__5")]
private IEnumerable`1<SqlExpression> simplify(IEnumerable`1<SqlExpression> arguments);
}
internal class Microsoft.EntityFrameworkCore.SqlServer.Scaffolding.SqlServerHierarchyIdCodeGeneratorPlugin : ProviderCodeGeneratorPlugin {
    public virtual MethodCallCodeFragment GenerateProviderOptions();
}
internal class Microsoft.EntityFrameworkCore.SqlServer.Storage.SqlServerHierarchyIdTypeMapping : RelationalTypeMapping {
    private static MethodInfo _getSqlBytes;
    private static MethodInfo _parseHierarchyId;
    private static SqlServerHierarchyIdValueConverter _valueConverter;
    private static Action`2<DbParameter, SqlDbType> _sqlDbTypeSetter;
    private static Action`2<DbParameter, string> _udtTypeNameSetter;
    public SqlServerHierarchyIdTypeMapping(string storeType, Type clrType);
    protected SqlServerHierarchyIdTypeMapping(RelationalTypeMappingParameters parameters);
    private static SqlServerHierarchyIdTypeMapping();
    private static RelationalTypeMappingParameters CreateRelationalTypeMappingParameters(string storeType, Type clrType);
    protected virtual RelationalTypeMapping Clone(RelationalTypeMappingParameters parameters);
    protected virtual void ConfigureParameter(DbParameter parameter);
    public virtual MethodInfo GetDataReaderMethod();
    public virtual Expression GenerateCodeLiteral(object value);
    protected virtual string GenerateNonNullSqlLiteral(object value);
    public virtual DbParameter CreateParameter(DbCommand command, string name, object value, Nullable`1<bool> nullable, ParameterDirection direction);
    public virtual Expression CustomizeDataReaderExpression(Expression expression);
    private static Action`2<DbParameter, SqlDbType> CreateSqlDbTypeAccessor(Type paramType);
    private static Action`2<DbParameter, string> CreateUdtTypeNameAccessor(Type paramType);
}
internal class Microsoft.EntityFrameworkCore.SqlServer.Storage.SqlServerHierarchyIdTypeMappingSourcePlugin : object {
    public static string SqlServerTypeName;
    public virtual RelationalTypeMapping FindMapping(RelationalTypeMappingInfo& modreq(System.Runtime.InteropServices.InAttribute) mappingInfo);
}
internal class Microsoft.EntityFrameworkCore.SqlServer.Storage.SqlServerHierarchyIdValueConverter : ValueConverter`2<HierarchyId, SqlBytes> {
    private static SqlBytes toProvider(HierarchyId hid);
    private static HierarchyId fromProvider(SqlBytes bytes);
}
[ExtensionAttribute]
public static class Microsoft.EntityFrameworkCore.SqlServerHierarchyIdDbContextOptionsBuilderExtensions : object {
    [ExtensionAttribute]
public static SqlServerDbContextOptionsBuilder UseHierarchyId(SqlServerDbContextOptionsBuilder optionsBuilder);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.SqlServerHierarchyIdServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddEntityFrameworkSqlServerHierarchyId(IServiceCollection serviceCollection);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
