public enum OfficeOpenXml.Drawing.ePictureType : Enum {
    public int value__;
    public static ePictureType Bmp;
    public static ePictureType Jpg;
    public static ePictureType Gif;
    public static ePictureType Png;
    public static ePictureType Emf;
    public static ePictureType Tif;
    public static ePictureType Wmf;
    public static ePictureType Svg;
    public static ePictureType WebP;
    public static ePictureType Ico;
    public static ePictureType Emz;
    public static ePictureType Wmz;
}
public interface OfficeOpenXml.Interfaces.Drawing.Image.IImageHandler {
    public HashSet`1<ePictureType> SupportedTypes { get; }
    public Exception LastException { get; }
    public abstract virtual bool ValidForEnvironment();
    public abstract virtual HashSet`1<ePictureType> get_SupportedTypes();
    public abstract virtual bool GetImageBounds(MemoryStream image, ePictureType type, Double& width, Double& height, Double& horizontalResolution, Double& verticalResolution);
    public abstract virtual Exception get_LastException();
}
public interface OfficeOpenXml.Interfaces.Drawing.Text.ITextMeasurer {
    public abstract virtual bool ValidForEnvironment();
    public abstract virtual TextMeasurement MeasureText(string text, MeasurementFont font);
}
public class OfficeOpenXml.Interfaces.Drawing.Text.MeasurementFont : object {
    [CompilerGeneratedAttribute]
private string <FontFamily>k__BackingField;
    [CompilerGeneratedAttribute]
private MeasurementFontStyles <Style>k__BackingField;
    [CompilerGeneratedAttribute]
private float <Size>k__BackingField;
    public string FontFamily { get; public set; }
    public MeasurementFontStyles Style { get; public set; }
    public float Size { get; public set; }
    [CompilerGeneratedAttribute]
public string get_FontFamily();
    [CompilerGeneratedAttribute]
public void set_FontFamily(string value);
    [CompilerGeneratedAttribute]
public MeasurementFontStyles get_Style();
    [CompilerGeneratedAttribute]
public void set_Style(MeasurementFontStyles value);
    [CompilerGeneratedAttribute]
public float get_Size();
    [CompilerGeneratedAttribute]
public void set_Size(float value);
}
[FlagsAttribute]
public enum OfficeOpenXml.Interfaces.Drawing.Text.MeasurementFontStyles : Enum {
    public int value__;
    public static MeasurementFontStyles Regular;
    public static MeasurementFontStyles Bold;
    public static MeasurementFontStyles Italic;
    public static MeasurementFontStyles Underline;
    public static MeasurementFontStyles Strikeout;
}
public class OfficeOpenXml.Interfaces.Drawing.Text.TextMeasurement : ValueType {
    [CompilerGeneratedAttribute]
private float <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private float <Height>k__BackingField;
    public float Width { get; public set; }
    public float Height { get; public set; }
    public static TextMeasurement Empty { get; }
    public bool IsEmpty { get; }
    public TextMeasurement(float width, float height);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public float get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(float value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public float get_Height();
    [CompilerGeneratedAttribute]
public void set_Height(float value);
    public static TextMeasurement get_Empty();
    public bool get_IsEmpty();
}
