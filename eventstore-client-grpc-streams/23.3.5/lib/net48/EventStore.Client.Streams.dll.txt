[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class EventStore.Client.ConditionalWriteResult : ValueType {
    public static ConditionalWriteResult StreamDeleted;
    [CompilerGeneratedAttribute]
private long <NextExpectedVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Position <LogPosition>k__BackingField;
    [CompilerGeneratedAttribute]
private ConditionalWriteStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private StreamRevision <NextExpectedStreamRevision>k__BackingField;
    public long NextExpectedVersion { get; }
    public Position LogPosition { get; }
    public ConditionalWriteStatus Status { get; }
    public StreamRevision NextExpectedStreamRevision { get; }
    private ConditionalWriteResult(StreamRevision nextExpectedStreamRevision, Position logPosition, ConditionalWriteStatus status);
    private static ConditionalWriteResult();
    [CompilerGeneratedAttribute]
public long get_NextExpectedVersion();
    [CompilerGeneratedAttribute]
public Position get_LogPosition();
    [CompilerGeneratedAttribute]
public ConditionalWriteStatus get_Status();
    [CompilerGeneratedAttribute]
public StreamRevision get_NextExpectedStreamRevision();
    internal static ConditionalWriteResult FromWriteResult(IWriteResult writeResult);
    internal static ConditionalWriteResult FromWrongExpectedVersion(WrongExpectedVersionException ex);
    public sealed virtual bool Equals(ConditionalWriteResult other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(ConditionalWriteResult left, ConditionalWriteResult right);
    public static bool op_Inequality(ConditionalWriteResult left, ConditionalWriteResult right);
    public virtual string ToString();
}
public enum EventStore.Client.ConditionalWriteStatus : Enum {
    public int value__;
    public static ConditionalWriteStatus Succeeded;
    public static ConditionalWriteStatus VersionMismatch;
    public static ConditionalWriteStatus StreamDeleted;
}
public static class EventStore.Client.DeadLine : object {
    public static Nullable`1<TimeSpan> None;
}
[IsReadOnlyAttribute]
public class EventStore.Client.DeleteResult : ValueType {
    public Position LogPosition;
    public DeleteResult(Position logPosition);
    public sealed virtual bool Equals(DeleteResult other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(DeleteResult left, DeleteResult right);
    public static bool op_Inequality(DeleteResult left, DeleteResult right);
}
public enum EventStore.Client.Direction : Enum {
    public int value__;
    public static Direction Backwards;
    public static Direction Forwards;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class EventStore.Client.EventStoreClient : EventStoreClientBase {
    private static JsonSerializerOptions StreamMetadataJsonSerializerOptions;
    private static BoundedChannelOptions ReadBoundedChannelOptions;
    private ILogger`1<EventStoreClient> _log;
    private Lazy`1<StreamAppender> _batchAppenderLazy;
    private CancellationTokenSource _disposedTokenSource;
    private static Dictionary`2<string, Func`2<RpcException, Exception>> ExceptionMap;
    private StreamAppender BatchAppender { get; }
    public EventStoreClient(IOptions`1<EventStoreClientSettings> options);
    [NullableContextAttribute("2")]
public EventStoreClient(EventStoreClientSettings settings);
    private static EventStoreClient();
    [AsyncStateMachineAttribute("EventStore.Client.EventStoreClient/<AppendToStreamAsync>d__0")]
public Task`1<IWriteResult> AppendToStreamAsync(string streamName, StreamRevision expectedRevision, IEnumerable`1<EventData> eventData, Action`1<EventStoreClientOperationOptions> configureOperationOptions, Nullable`1<TimeSpan> deadline, UserCredentials userCredentials, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("EventStore.Client.EventStoreClient/<AppendToStreamAsync>d__1")]
public Task`1<IWriteResult> AppendToStreamAsync(string streamName, StreamState expectedState, IEnumerable`1<EventData> eventData, Action`1<EventStoreClientOperationOptions> configureOperationOptions, Nullable`1<TimeSpan> deadline, UserCredentials userCredentials, CancellationToken cancellationToken);
    private ValueTask`1<IWriteResult> AppendToStreamInternal(ChannelInfo channelInfo, AppendReq header, IEnumerable`1<EventData> eventData, EventStoreClientOperationOptions operationOptions, Nullable`1<TimeSpan> deadline, UserCredentials userCredentials, CancellationToken cancellationToken);
    private IWriteResult HandleSuccessAppend(AppendResp response, AppendReq header);
    private IWriteResult HandleWrongExpectedRevision(AppendResp response, AppendReq header, EventStoreClientOperationOptions operationOptions);
    private StreamAppender get_BatchAppender();
    private void SwapStreamAppender(Exception ex);
    private StreamAppender CreateStreamAppender();
    [NullableContextAttribute("2")]
private static FilterOptions GetFilterOptions(IEventFilter filter, UInt32 checkpointInterval);
    [NullableContextAttribute("2")]
private static FilterOptions GetFilterOptions(SubscriptionFilterOptions filterOptions);
    public virtual void Dispose();
    [AsyncStateMachineAttribute("EventStore.Client.EventStoreClient/<DisposeAsync>d__21")]
public virtual ValueTask DisposeAsync();
    public Task`1<DeleteResult> DeleteAsync(string streamName, StreamRevision expectedRevision, Nullable`1<TimeSpan> deadline, UserCredentials userCredentials, CancellationToken cancellationToken);
    public Task`1<DeleteResult> DeleteAsync(string streamName, StreamState expectedState, Nullable`1<TimeSpan> deadline, UserCredentials userCredentials, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("EventStore.Client.EventStoreClient/<DeleteInternal>d__24")]
private Task`1<DeleteResult> DeleteInternal(DeleteReq request, Nullable`1<TimeSpan> deadline, UserCredentials userCredentials, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("EventStore.Client.EventStoreClient/<GetStreamMetadataAsync>d__25")]
public Task`1<StreamMetadataResult> GetStreamMetadataAsync(string streamName, Nullable`1<TimeSpan> deadline, UserCredentials userCredentials, CancellationToken cancellationToken);
    public Task`1<IWriteResult> SetStreamMetadataAsync(string streamName, StreamState expectedState, StreamMetadata metadata, Action`1<EventStoreClientOperationOptions> configureOperationOptions, Nullable`1<TimeSpan> deadline, UserCredentials userCredentials, CancellationToken cancellationToken);
    public Task`1<IWriteResult> SetStreamMetadataAsync(string streamName, StreamRevision expectedRevision, StreamMetadata metadata, Action`1<EventStoreClientOperationOptions> configureOperationOptions, Nullable`1<TimeSpan> deadline, UserCredentials userCredentials, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("EventStore.Client.EventStoreClient/<SetStreamMetadataInternal>d__28")]
private Task`1<IWriteResult> SetStreamMetadataInternal(StreamMetadata metadata, AppendReq appendReq, EventStoreClientOperationOptions operationOptions, Nullable`1<TimeSpan> deadline, UserCredentials userCredentials, CancellationToken cancellationToken);
    public ReadAllStreamResult ReadAllAsync(Direction direction, Position position, long maxCount, bool resolveLinkTos, Nullable`1<TimeSpan> deadline, UserCredentials userCredentials, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public ReadAllStreamResult ReadAllAsync(Direction direction, Position position, IEventFilter eventFilter, long maxCount, bool resolveLinkTos, Nullable`1<TimeSpan> deadline, UserCredentials userCredentials, CancellationToken cancellationToken);
    public ReadStreamResult ReadStreamAsync(Direction direction, string streamName, StreamPosition revision, long maxCount, bool resolveLinkTos, Nullable`1<TimeSpan> deadline, UserCredentials userCredentials, CancellationToken cancellationToken);
    private static ResolvedEvent ConvertToResolvedEvent(ReadEvent readEvent);
    [NullableContextAttribute("2")]
private static EventRecord ConvertToEventRecord(RecordedEvent e);
    public Task`1<StreamSubscription> SubscribeToAllAsync(FromAll start, Func`4<StreamSubscription, ResolvedEvent, CancellationToken, Task> eventAppeared, bool resolveLinkTos, Action`3<StreamSubscription, SubscriptionDroppedReason, Exception> subscriptionDropped, SubscriptionFilterOptions filterOptions, UserCredentials userCredentials, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public StreamSubscriptionResult SubscribeToAll(FromAll start, bool resolveLinkTos, SubscriptionFilterOptions filterOptions, UserCredentials userCredentials, CancellationToken cancellationToken);
    public Task`1<StreamSubscription> SubscribeToStreamAsync(string streamName, FromStream start, Func`4<StreamSubscription, ResolvedEvent, CancellationToken, Task> eventAppeared, bool resolveLinkTos, Action`3<StreamSubscription, SubscriptionDroppedReason, Exception> subscriptionDropped, UserCredentials userCredentials, CancellationToken cancellationToken);
    public StreamSubscriptionResult SubscribeToStream(string streamName, FromStream start, bool resolveLinkTos, UserCredentials userCredentials, CancellationToken cancellationToken);
    public Task`1<DeleteResult> TombstoneAsync(string streamName, StreamRevision expectedRevision, Nullable`1<TimeSpan> deadline, UserCredentials userCredentials, CancellationToken cancellationToken);
    public Task`1<DeleteResult> TombstoneAsync(string streamName, StreamState expectedState, Nullable`1<TimeSpan> deadline, UserCredentials userCredentials, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("EventStore.Client.EventStoreClient/<TombstoneInternal>d__43")]
private Task`1<DeleteResult> TombstoneInternal(TombstoneReq request, Nullable`1<TimeSpan> deadline, UserCredentials userCredentials, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private ValueTask <>n__0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class EventStore.Client.EventStoreClientExtensions : object {
    private static JsonSerializerOptions SystemSettingsJsonSerializerOptions;
    private static EventStoreClientExtensions();
    [ExtensionAttribute]
public static Task SetSystemSettingsAsync(EventStoreClient client, SystemSettings settings, Nullable`1<TimeSpan> deadline, UserCredentials userCredentials, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("EventStore.Client.EventStoreClientExtensions/<ConditionalAppendToStreamAsync>d__2")]
[ExtensionAttribute]
public static Task`1<ConditionalWriteResult> ConditionalAppendToStreamAsync(EventStoreClient client, string streamName, StreamRevision expectedRevision, IEnumerable`1<EventData> eventData, Nullable`1<TimeSpan> deadline, UserCredentials userCredentials, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("EventStore.Client.EventStoreClientExtensions/<ConditionalAppendToStreamAsync>d__3")]
[ExtensionAttribute]
public static Task`1<ConditionalWriteResult> ConditionalAppendToStreamAsync(EventStoreClient client, string streamName, StreamState expectedState, IEnumerable`1<EventData> eventData, Nullable`1<TimeSpan> deadline, UserCredentials userCredentials, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class EventStore.Client.InvalidTransactionException : Exception {
    public InvalidTransactionException(string message);
    public InvalidTransactionException(string message, Exception innerException);
    [ObsoleteAttribute("Obsolete")]
protected InvalidTransactionException(SerializationInfo info, StreamingContext context);
}
public interface EventStore.Client.IWriteResult {
    [ObsoleteAttribute("Please use NextExpectedStreamRevision instead. This property will be removed in a future version.", "True")]
public long NextExpectedVersion { get; }
    public Position LogPosition { get; }
    public StreamRevision NextExpectedStreamRevision { get; }
    public abstract virtual long get_NextExpectedVersion();
    public abstract virtual Position get_LogPosition();
    public abstract virtual StreamRevision get_NextExpectedStreamRevision();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class EventStore.Client.MaximumAppendSizeExceededException : Exception {
    [CompilerGeneratedAttribute]
private UInt32 <MaxAppendSize>k__BackingField;
    public UInt32 MaxAppendSize { get; }
    public MaximumAppendSizeExceededException(UInt32 maxAppendSize, Exception innerException);
    public MaximumAppendSizeExceededException(int maxAppendSize, Exception innerException);
    [CompilerGeneratedAttribute]
public UInt32 get_MaxAppendSize();
}
public enum EventStore.Client.ReadState : Enum {
    public int value__;
    public static ReadState StreamNotFound;
    public static ReadState Ok;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class EventStore.Client.StreamAcl : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <ReadRoles>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <WriteRoles>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <DeleteRoles>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <MetaReadRoles>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <MetaWriteRoles>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] ReadRoles { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] WriteRoles { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] DeleteRoles { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] MetaReadRoles { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] MetaWriteRoles { get; }
    public StreamAcl(string readRole, string writeRole, string deleteRole, string metaReadRole, string metaWriteRole);
    public StreamAcl(String[] readRoles, String[] writeRoles, String[] deleteRoles, String[] metaReadRoles, String[] metaWriteRoles);
    [CompilerGeneratedAttribute]
public String[] get_ReadRoles();
    [CompilerGeneratedAttribute]
public String[] get_WriteRoles();
    [CompilerGeneratedAttribute]
public String[] get_DeleteRoles();
    [CompilerGeneratedAttribute]
public String[] get_MetaReadRoles();
    [CompilerGeneratedAttribute]
public String[] get_MetaWriteRoles();
    [NullableContextAttribute("1")]
private bool Equals(StreamAcl other);
    public virtual bool Equals(object obj);
    public static bool op_Equality(StreamAcl left, StreamAcl right);
    public static bool op_Inequality(StreamAcl left, StreamAcl right);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class EventStore.Client.StreamAclJsonConverter : JsonConverter`1<StreamAcl> {
    public static StreamAclJsonConverter Instance;
    private static StreamAclJsonConverter();
    public virtual StreamAcl Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    private static String[] ReadRoles(Utf8JsonReader& reader);
    public virtual void Write(Utf8JsonWriter writer, StreamAcl value, JsonSerializerOptions options);
    private static void WriteRoles(Utf8JsonWriter writer, string name, String[] roles);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class EventStore.Client.StreamMessage : object {
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    [CompilerGeneratedAttribute]
protected StreamMessage(StreamMessage original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(StreamMessage left, StreamMessage right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(StreamMessage left, StreamMessage right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(StreamMessage other);
    [CompilerGeneratedAttribute]
public abstract virtual StreamMessage <Clone>$();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class EventStore.Client.StreamMetadata : ValueType {
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <MaxAge>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<StreamPosition> <TruncateBefore>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <CacheControl>k__BackingField;
    [CompilerGeneratedAttribute]
private StreamAcl <Acl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxCount>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonDocument <CustomMetadata>k__BackingField;
    public Nullable`1<TimeSpan> MaxAge { get; }
    public Nullable`1<StreamPosition> TruncateBefore { get; }
    public Nullable`1<TimeSpan> CacheControl { get; }
    public StreamAcl Acl { get; }
    public Nullable`1<int> MaxCount { get; }
    public JsonDocument CustomMetadata { get; }
    public StreamMetadata(Nullable`1<int> maxCount, Nullable`1<TimeSpan> maxAge, Nullable`1<StreamPosition> truncateBefore, Nullable`1<TimeSpan> cacheControl, StreamAcl acl, JsonDocument customMetadata);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_MaxAge();
    [CompilerGeneratedAttribute]
public Nullable`1<StreamPosition> get_TruncateBefore();
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_CacheControl();
    [CompilerGeneratedAttribute]
public StreamAcl get_Acl();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxCount();
    [CompilerGeneratedAttribute]
public JsonDocument get_CustomMetadata();
    public sealed virtual bool Equals(StreamMetadata other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(StreamMetadata left, StreamMetadata right);
    public static bool op_Inequality(StreamMetadata left, StreamMetadata right);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class EventStore.Client.StreamMetadataJsonConverter : JsonConverter`1<StreamMetadata> {
    public static StreamMetadataJsonConverter Instance;
    private static StreamMetadataJsonConverter();
    public virtual StreamMetadata Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, StreamMetadata value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class EventStore.Client.StreamMetadataResult : ValueType {
    public string StreamName;
    public bool StreamDeleted;
    public StreamMetadata Metadata;
    public Nullable`1<StreamPosition> MetastreamRevision;
    private StreamMetadataResult(string streamName, Nullable`1<StreamPosition> metastreamRevision, StreamMetadata metadata, bool streamDeleted);
    public virtual int GetHashCode();
    public sealed virtual bool Equals(StreamMetadataResult other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public static bool op_Equality(StreamMetadataResult left, StreamMetadataResult right);
    public static bool op_Inequality(StreamMetadataResult left, StreamMetadataResult right);
    public static StreamMetadataResult None(string streamName);
    public static StreamMetadataResult Create(string streamName, StreamPosition revision, StreamMetadata metadata);
}
[DebuggerDisplayAttribute("{ToString(),nq}")]
internal class EventStore.Client.Streams.AppendReq : object {
    private static MessageParser`1<AppendReq> _parser;
    private UnknownFieldSet _unknownFields;
    public static int OptionsFieldNumber;
    public static int ProposedMessageFieldNumber;
    private object content_;
    private ContentOneofCase contentCase_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<AppendReq> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Options Options { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ProposedMessage ProposedMessage { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ContentOneofCase ContentCase { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public AppendReq(AppendReq other);
    private static AppendReq();
    [NullableContextAttribute("1")]
public AppendReq WithAnyStreamRevision(StreamState expectedState);
    public static MessageParser`1<AppendReq> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual AppendReq Clone();
    public Options get_Options();
    public void set_Options(Options value);
    public ProposedMessage get_ProposedMessage();
    public void set_ProposedMessage(ProposedMessage value);
    public ContentOneofCase get_ContentCase();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearContent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(AppendReq other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(AppendReq other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
[DebuggerDisplayAttribute("{ToString(),nq}")]
internal class EventStore.Client.Streams.AppendResp : object {
    private static MessageParser`1<AppendResp> _parser;
    private UnknownFieldSet _unknownFields;
    public static int SuccessFieldNumber;
    public static int WrongExpectedVersionFieldNumber;
    private object result_;
    private ResultOneofCase resultCase_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<AppendResp> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Success Success { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public WrongExpectedVersion WrongExpectedVersion { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ResultOneofCase ResultCase { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public AppendResp(AppendResp other);
    private static AppendResp();
    public static MessageParser`1<AppendResp> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual AppendResp Clone();
    public Success get_Success();
    public void set_Success(Success value);
    public WrongExpectedVersion get_WrongExpectedVersion();
    public void set_WrongExpectedVersion(WrongExpectedVersion value);
    public ResultOneofCase get_ResultCase();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearResult();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(AppendResp other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(AppendResp other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
[DebuggerDisplayAttribute("{ToString(),nq}")]
internal class EventStore.Client.Streams.BatchAppendReq : object {
    private static MessageParser`1<BatchAppendReq> _parser;
    private UnknownFieldSet _unknownFields;
    public static int CorrelationIdFieldNumber;
    private UUID correlationId_;
    public static int OptionsFieldNumber;
    private Options options_;
    public static int ProposedMessagesFieldNumber;
    private static FieldCodec`1<ProposedMessage> _repeated_proposedMessages_codec;
    private RepeatedField`1<ProposedMessage> proposedMessages_;
    public static int IsFinalFieldNumber;
    private bool isFinal_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<BatchAppendReq> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UUID CorrelationId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Options Options { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public RepeatedField`1<ProposedMessage> ProposedMessages { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool IsFinal { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public BatchAppendReq(BatchAppendReq other);
    private static BatchAppendReq();
    public static MessageParser`1<BatchAppendReq> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual BatchAppendReq Clone();
    public UUID get_CorrelationId();
    public void set_CorrelationId(UUID value);
    public Options get_Options();
    public void set_Options(Options value);
    public RepeatedField`1<ProposedMessage> get_ProposedMessages();
    public bool get_IsFinal();
    public void set_IsFinal(bool value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(BatchAppendReq other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(BatchAppendReq other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
[DebuggerDisplayAttribute("{ToString(),nq}")]
internal class EventStore.Client.Streams.BatchAppendResp : object {
    private static MessageParser`1<BatchAppendResp> _parser;
    private UnknownFieldSet _unknownFields;
    public static int CorrelationIdFieldNumber;
    private UUID correlationId_;
    public static int ErrorFieldNumber;
    public static int SuccessFieldNumber;
    public static int StreamIdentifierFieldNumber;
    private StreamIdentifier streamIdentifier_;
    public static int StreamPositionFieldNumber;
    public static int NoStreamFieldNumber;
    public static int AnyFieldNumber;
    public static int StreamExistsFieldNumber;
    private object result_;
    private ResultOneofCase resultCase_;
    private object expectedStreamPosition_;
    private ExpectedStreamPositionOneofCase expectedStreamPositionCase_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<BatchAppendResp> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public UUID CorrelationId { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Status Error { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Success Success { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public StreamIdentifier StreamIdentifier { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong StreamPosition { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasStreamPosition { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Empty NoStream { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Empty Any { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Empty StreamExists { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ResultOneofCase ResultCase { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ExpectedStreamPositionOneofCase ExpectedStreamPositionCase { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public BatchAppendResp(BatchAppendResp other);
    private static BatchAppendResp();
    [NullableContextAttribute("1")]
public IWriteResult ToWriteResult();
    [NullableContextAttribute("1")]
private static WrongExpectedVersionResult FromWrongExpectedVersion(StreamIdentifier streamIdentifier, WrongExpectedVersion wrongExpectedVersion);
    public static MessageParser`1<BatchAppendResp> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual BatchAppendResp Clone();
    public UUID get_CorrelationId();
    public void set_CorrelationId(UUID value);
    public Status get_Error();
    public void set_Error(Status value);
    public Success get_Success();
    public void set_Success(Success value);
    public StreamIdentifier get_StreamIdentifier();
    public void set_StreamIdentifier(StreamIdentifier value);
    public ulong get_StreamPosition();
    public void set_StreamPosition(ulong value);
    public bool get_HasStreamPosition();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearStreamPosition();
    public Empty get_NoStream();
    public void set_NoStream(Empty value);
    public Empty get_Any();
    public void set_Any(Empty value);
    public Empty get_StreamExists();
    public void set_StreamExists(Empty value);
    public ResultOneofCase get_ResultCase();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearResult();
    public ExpectedStreamPositionOneofCase get_ExpectedStreamPositionCase();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearExpectedStreamPosition();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(BatchAppendResp other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(BatchAppendResp other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
[DebuggerDisplayAttribute("{ToString(),nq}")]
internal class EventStore.Client.Streams.DeleteReq : object {
    private static MessageParser`1<DeleteReq> _parser;
    private UnknownFieldSet _unknownFields;
    public static int OptionsFieldNumber;
    private Options options_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DeleteReq> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Options Options { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DeleteReq(DeleteReq other);
    private static DeleteReq();
    [NullableContextAttribute("1")]
public DeleteReq WithAnyStreamRevision(StreamState expectedState);
    public static MessageParser`1<DeleteReq> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DeleteReq Clone();
    public Options get_Options();
    public void set_Options(Options value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DeleteReq other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DeleteReq other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
[DebuggerDisplayAttribute("{ToString(),nq}")]
internal class EventStore.Client.Streams.DeleteResp : object {
    private static MessageParser`1<DeleteResp> _parser;
    private UnknownFieldSet _unknownFields;
    public static int PositionFieldNumber;
    public static int NoPositionFieldNumber;
    private object positionOption_;
    private PositionOptionOneofCase positionOptionCase_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<DeleteResp> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Position Position { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Empty NoPosition { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public PositionOptionOneofCase PositionOptionCase { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public DeleteResp(DeleteResp other);
    private static DeleteResp();
    public static MessageParser`1<DeleteResp> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual DeleteResp Clone();
    public Position get_Position();
    public void set_Position(Position value);
    public Empty get_NoPosition();
    public void set_NoPosition(Empty value);
    public PositionOptionOneofCase get_PositionOptionCase();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearPositionOption();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(DeleteResp other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(DeleteResp other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
[DebuggerDisplayAttribute("{ToString(),nq}")]
internal class EventStore.Client.Streams.ReadReq : object {
    private static MessageParser`1<ReadReq> _parser;
    private UnknownFieldSet _unknownFields;
    public static int OptionsFieldNumber;
    private Options options_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<ReadReq> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Options Options { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ReadReq(ReadReq other);
    private static ReadReq();
    public static MessageParser`1<ReadReq> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual ReadReq Clone();
    public Options get_Options();
    public void set_Options(Options value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(ReadReq other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(ReadReq other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
[DebuggerDisplayAttribute("{ToString(),nq}")]
internal class EventStore.Client.Streams.ReadResp : object {
    private static MessageParser`1<ReadResp> _parser;
    private UnknownFieldSet _unknownFields;
    public static int EventFieldNumber;
    public static int ConfirmationFieldNumber;
    public static int CheckpointFieldNumber;
    public static int StreamNotFoundFieldNumber;
    public static int FirstStreamPositionFieldNumber;
    public static int LastStreamPositionFieldNumber;
    public static int LastAllStreamPositionFieldNumber;
    public static int CaughtUpFieldNumber;
    public static int FellBehindFieldNumber;
    private object content_;
    private ContentOneofCase contentCase_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<ReadResp> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ReadEvent Event { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public SubscriptionConfirmation Confirmation { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Checkpoint Checkpoint { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public StreamNotFound StreamNotFound { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong FirstStreamPosition { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasFirstStreamPosition { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ulong LastStreamPosition { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public bool HasLastStreamPosition { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public AllStreamPosition LastAllStreamPosition { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public CaughtUp CaughtUp { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public FellBehind FellBehind { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ContentOneofCase ContentCase { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public ReadResp(ReadResp other);
    private static ReadResp();
    public static MessageParser`1<ReadResp> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual ReadResp Clone();
    public ReadEvent get_Event();
    public void set_Event(ReadEvent value);
    public SubscriptionConfirmation get_Confirmation();
    public void set_Confirmation(SubscriptionConfirmation value);
    public Checkpoint get_Checkpoint();
    public void set_Checkpoint(Checkpoint value);
    public StreamNotFound get_StreamNotFound();
    public void set_StreamNotFound(StreamNotFound value);
    public ulong get_FirstStreamPosition();
    public void set_FirstStreamPosition(ulong value);
    public bool get_HasFirstStreamPosition();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearFirstStreamPosition();
    public ulong get_LastStreamPosition();
    public void set_LastStreamPosition(ulong value);
    public bool get_HasLastStreamPosition();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearLastStreamPosition();
    public AllStreamPosition get_LastAllStreamPosition();
    public void set_LastAllStreamPosition(AllStreamPosition value);
    public CaughtUp get_CaughtUp();
    public void set_CaughtUp(CaughtUp value);
    public FellBehind get_FellBehind();
    public void set_FellBehind(FellBehind value);
    public ContentOneofCase get_ContentCase();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearContent();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(ReadResp other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(ReadResp other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
internal static class EventStore.Client.Streams.Streams : object {
    private static string __ServiceName;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<ReadReq> __Marshaller_event_store_client_streams_ReadReq;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<ReadResp> __Marshaller_event_store_client_streams_ReadResp;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<AppendReq> __Marshaller_event_store_client_streams_AppendReq;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<AppendResp> __Marshaller_event_store_client_streams_AppendResp;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<DeleteReq> __Marshaller_event_store_client_streams_DeleteReq;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<DeleteResp> __Marshaller_event_store_client_streams_DeleteResp;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<TombstoneReq> __Marshaller_event_store_client_streams_TombstoneReq;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<TombstoneResp> __Marshaller_event_store_client_streams_TombstoneResp;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<BatchAppendReq> __Marshaller_event_store_client_streams_BatchAppendReq;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Marshaller`1<BatchAppendResp> __Marshaller_event_store_client_streams_BatchAppendResp;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<ReadReq, ReadResp> __Method_Read;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<AppendReq, AppendResp> __Method_Append;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<DeleteReq, DeleteResp> __Method_Delete;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<TombstoneReq, TombstoneResp> __Method_Tombstone;
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static Method`2<BatchAppendReq, BatchAppendResp> __Method_BatchAppend;
    public static ServiceDescriptor Descriptor { get; }
    private static Streams();
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static void __Helper_SerializeMessage(IMessage message, SerializationContext context);
    [GeneratedCodeAttribute("grpc_csharp_plugin", "")]
private static T __Helper_DeserializeMessage(DeserializationContext context, MessageParser`1<T> parser);
    public static ServiceDescriptor get_Descriptor();
}
internal static class EventStore.Client.Streams.StreamsReflection : object {
    private static FileDescriptor descriptor;
    public static FileDescriptor Descriptor { get; }
    private static StreamsReflection();
    public static FileDescriptor get_Descriptor();
}
[DebuggerDisplayAttribute("{ToString(),nq}")]
internal class EventStore.Client.Streams.TombstoneReq : object {
    private static MessageParser`1<TombstoneReq> _parser;
    private UnknownFieldSet _unknownFields;
    public static int OptionsFieldNumber;
    private Options options_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<TombstoneReq> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Options Options { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TombstoneReq(TombstoneReq other);
    private static TombstoneReq();
    [NullableContextAttribute("1")]
public TombstoneReq WithAnyStreamRevision(StreamState expectedState);
    public static MessageParser`1<TombstoneReq> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual TombstoneReq Clone();
    public Options get_Options();
    public void set_Options(Options value);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(TombstoneReq other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(TombstoneReq other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
[DebuggerDisplayAttribute("{ToString(),nq}")]
internal class EventStore.Client.Streams.TombstoneResp : object {
    private static MessageParser`1<TombstoneResp> _parser;
    private UnknownFieldSet _unknownFields;
    public static int PositionFieldNumber;
    public static int NoPositionFieldNumber;
    private object positionOption_;
    private PositionOptionOneofCase positionOptionCase_;
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageParser`1<TombstoneResp> Parser { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public static MessageDescriptor Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private MessageDescriptor pb::Google.Protobuf.IMessage.Descriptor { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Position Position { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public Empty NoPosition { get; public set; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public PositionOptionOneofCase PositionOptionCase { get; }
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public TombstoneResp(TombstoneResp other);
    private static TombstoneResp();
    public static MessageParser`1<TombstoneResp> get_Parser();
    public static MessageDescriptor get_Descriptor();
    private sealed virtual override MessageDescriptor pb::Google.Protobuf.IMessage.get_Descriptor();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual TombstoneResp Clone();
    public Position get_Position();
    public void set_Position(Position value);
    public Empty get_NoPosition();
    public void set_NoPosition(Empty value);
    public PositionOptionOneofCase get_PositionOptionCase();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public void ClearPositionOption();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual bool Equals(object other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual bool Equals(TombstoneResp other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual int GetHashCode();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public virtual string ToString();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void WriteTo(CodedOutputStream output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalWriteTo(WriteContext& output);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual int CalculateSize();
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(TombstoneResp other);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
public sealed virtual void MergeFrom(CodedInputStream input);
    [DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("protoc", "")]
private sealed virtual override void pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ParseContext& input);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class EventStore.Client.StreamSubscription : object {
    private StreamSubscriptionResult _subscription;
    private IAsyncEnumerator`1<StreamMessage> _messages;
    private Func`4<StreamSubscription, ResolvedEvent, CancellationToken, Task> _eventAppeared;
    private Func`4<StreamSubscription, Position, CancellationToken, Task> _checkpointReached;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Action`3<StreamSubscription, SubscriptionDroppedReason, Exception> _subscriptionDropped;
    private ILogger _log;
    private CancellationTokenSource _cts;
    private int _subscriptionDroppedInvoked;
    [CompilerGeneratedAttribute]
private string <SubscriptionId>k__BackingField;
    public string SubscriptionId { get; }
    private StreamSubscription(StreamSubscriptionResult subscription, IAsyncEnumerator`1<StreamMessage> messages, string subscriptionId, Func`4<StreamSubscription, ResolvedEvent, CancellationToken, Task> eventAppeared, Action`3<StreamSubscription, SubscriptionDroppedReason, Exception> subscriptionDropped, ILogger log, Func`4<StreamSubscription, Position, CancellationToken, Task> checkpointReached, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
public string get_SubscriptionId();
    [AsyncStateMachineAttribute("EventStore.Client.StreamSubscription/<Confirm>d__11")]
internal static Task`1<StreamSubscription> Confirm(StreamSubscriptionResult subscription, Func`4<StreamSubscription, ResolvedEvent, CancellationToken, Task> eventAppeared, Action`3<StreamSubscription, SubscriptionDroppedReason, Exception> subscriptionDropped, ILogger log, Func`4<StreamSubscription, Position, CancellationToken, Task> checkpointReached, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("EventStore.Client.StreamSubscription/<Subscribe>d__13")]
private Task Subscribe();
    public sealed virtual void Dispose();
    [NullableContextAttribute("2")]
private void SubscriptionDropped(SubscriptionDroppedReason reason, Exception ex);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class EventStore.Client.SubscriptionFilterOptions : object {
    [CompilerGeneratedAttribute]
private IEventFilter <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <CheckpointInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`4<StreamSubscription, Position, CancellationToken, Task> <CheckpointReached>k__BackingField;
    public IEventFilter Filter { get; }
    public UInt32 CheckpointInterval { get; }
    public Func`4<StreamSubscription, Position, CancellationToken, Task> CheckpointReached { get; }
    public SubscriptionFilterOptions(IEventFilter filter, UInt32 checkpointInterval, Func`4<StreamSubscription, Position, CancellationToken, Task> checkpointReached);
    public SubscriptionFilterOptions(IEventFilter filter, UInt32 checkpointInterval);
    [CompilerGeneratedAttribute]
public IEventFilter get_Filter();
    [CompilerGeneratedAttribute]
public UInt32 get_CheckpointInterval();
    [CompilerGeneratedAttribute]
public Func`4<StreamSubscription, Position, CancellationToken, Task> get_CheckpointReached();
}
[IsReadOnlyAttribute]
public class EventStore.Client.SuccessResult : ValueType {
    [CompilerGeneratedAttribute]
private long <NextExpectedVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Position <LogPosition>k__BackingField;
    [CompilerGeneratedAttribute]
private StreamRevision <NextExpectedStreamRevision>k__BackingField;
    public long NextExpectedVersion { get; }
    public Position LogPosition { get; }
    public StreamRevision NextExpectedStreamRevision { get; }
    public SuccessResult(StreamRevision nextExpectedStreamRevision, Position logPosition);
    [CompilerGeneratedAttribute]
public sealed virtual long get_NextExpectedVersion();
    [CompilerGeneratedAttribute]
public sealed virtual Position get_LogPosition();
    [CompilerGeneratedAttribute]
public sealed virtual StreamRevision get_NextExpectedStreamRevision();
    public sealed virtual bool Equals(SuccessResult other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public static bool op_Equality(SuccessResult left, SuccessResult right);
    public static bool op_Inequality(SuccessResult left, SuccessResult right);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class EventStore.Client.SystemEventTypes : object {
    public static string StreamDeleted;
    public static string StatsCollection;
    public static string LinkTo;
    public static string StreamMetadata;
    public static string Settings;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class EventStore.Client.SystemMetadata : object {
    public static string MaxAge;
    public static string MaxCount;
    public static string TruncateBefore;
    public static string CacheControl;
    public static string Acl;
    public static string AclRead;
    public static string AclWrite;
    public static string AclDelete;
    public static string AclMetaRead;
    public static string AclMetaWrite;
    public static string UserStreamAcl;
    public static string SystemStreamAcl;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class EventStore.Client.SystemSettings : object {
    [CompilerGeneratedAttribute]
private StreamAcl <UserStreamAcl>k__BackingField;
    [CompilerGeneratedAttribute]
private StreamAcl <SystemStreamAcl>k__BackingField;
    public StreamAcl UserStreamAcl { get; }
    public StreamAcl SystemStreamAcl { get; }
    public SystemSettings(StreamAcl userStreamAcl, StreamAcl systemStreamAcl);
    [CompilerGeneratedAttribute]
public StreamAcl get_UserStreamAcl();
    [CompilerGeneratedAttribute]
public StreamAcl get_SystemStreamAcl();
    [NullableContextAttribute("1")]
private bool Equals(SystemSettings other);
    public virtual bool Equals(object obj);
    public static bool op_Equality(SystemSettings left, SystemSettings right);
    public static bool op_Inequality(SystemSettings left, SystemSettings right);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class EventStore.Client.SystemSettingsJsonConverter : JsonConverter`1<SystemSettings> {
    public static SystemSettingsJsonConverter Instance;
    private static SystemSettingsJsonConverter();
    public virtual SystemSettings Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, SystemSettings value, JsonSerializerOptions options);
}
[ExtensionAttribute]
internal static class EventStore.Client.WriteResultExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IWriteResult OptionallyThrowWrongExpectedVersionException(IWriteResult writeResult, EventStoreClientOperationOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class EventStore.Client.WrongExpectedVersionResult : ValueType {
    [CompilerGeneratedAttribute]
private string <StreamName>k__BackingField;
    [CompilerGeneratedAttribute]
private long <NextExpectedVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ActualVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private StreamRevision <ActualStreamRevision>k__BackingField;
    [CompilerGeneratedAttribute]
private Position <LogPosition>k__BackingField;
    [CompilerGeneratedAttribute]
private StreamRevision <NextExpectedStreamRevision>k__BackingField;
    public string StreamName { get; }
    public long NextExpectedVersion { get; }
    public long ActualVersion { get; }
    public StreamRevision ActualStreamRevision { get; }
    public Position LogPosition { get; }
    public StreamRevision NextExpectedStreamRevision { get; }
    public WrongExpectedVersionResult(string streamName, StreamRevision nextExpectedStreamRevision);
    public WrongExpectedVersionResult(string streamName, StreamRevision nextExpectedStreamRevision, StreamRevision actualStreamRevision);
    [CompilerGeneratedAttribute]
public string get_StreamName();
    [CompilerGeneratedAttribute]
public sealed virtual long get_NextExpectedVersion();
    [CompilerGeneratedAttribute]
public long get_ActualVersion();
    [CompilerGeneratedAttribute]
public StreamRevision get_ActualStreamRevision();
    [CompilerGeneratedAttribute]
public sealed virtual Position get_LogPosition();
    [CompilerGeneratedAttribute]
public sealed virtual StreamRevision get_NextExpectedStreamRevision();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.EventStoreClientServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddEventStoreClient(IServiceCollection services, Uri address, Func`1<HttpMessageHandler> createHttpMessageHandler);
    [ExtensionAttribute]
public static IServiceCollection AddEventStoreClient(IServiceCollection services, Func`2<IServiceProvider, Uri> addressFactory, Func`1<HttpMessageHandler> createHttpMessageHandler);
    [ExtensionAttribute]
public static IServiceCollection AddEventStoreClient(IServiceCollection services, Action`1<EventStoreClientSettings> configureSettings);
    [ExtensionAttribute]
public static IServiceCollection AddEventStoreClient(IServiceCollection services, Func`2<IServiceProvider, Action`1<EventStoreClientSettings>> configureSettings);
    [ExtensionAttribute]
public static IServiceCollection AddEventStoreClient(IServiceCollection services, string connectionString, Action`1<EventStoreClientSettings> configureSettings);
    [ExtensionAttribute]
public static IServiceCollection AddEventStoreClient(IServiceCollection services, Func`2<IServiceProvider, string> connectionStringFactory, Action`1<EventStoreClientSettings> configureSettings);
    [ExtensionAttribute]
private static IServiceCollection AddEventStoreClient(IServiceCollection services, EventStoreClientSettings settings, Action`1<EventStoreClientSettings> configureSettings);
    [ExtensionAttribute]
private static IServiceCollection AddEventStoreClient(IServiceCollection services, Func`2<IServiceProvider, EventStoreClientSettings> settingsFactory, Action`1<EventStoreClientSettings> configureSettings);
    [ExtensionAttribute]
private static IServiceCollection AddEventStoreClient(IServiceCollection services, EventStoreClientSettings settings, Func`2<IServiceProvider, Action`1<EventStoreClientSettings>> configureSettingsFactory);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
