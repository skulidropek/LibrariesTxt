[ExtensionAttribute]
public static class ExcelDataReader.ExcelDataReaderExtensions : object {
    [ExtensionAttribute]
public static DataSet AsDataSet(IExcelDataReader self, ExcelDataSetConfiguration configuration);
    private static string GetUniqueColumnName(DataTable table, string name);
    private static DataTable AsDataTable(IExcelDataReader self, ExcelDataTableConfiguration configuration);
    private static bool IsEmptyRow(IExcelDataReader reader, ExcelDataTableConfiguration configuration);
    private static void FixDataTypes(DataSet dataset);
}
public class ExcelDataReader.ExcelDataSetConfiguration : object {
    [CompilerGeneratedAttribute]
private bool <UseColumnDataType>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<IExcelDataReader, ExcelDataTableConfiguration> <ConfigureDataTable>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`3<IExcelDataReader, int, bool> <FilterSheet>k__BackingField;
    public bool UseColumnDataType { get; public set; }
    public Func`2<IExcelDataReader, ExcelDataTableConfiguration> ConfigureDataTable { get; public set; }
    public Func`3<IExcelDataReader, int, bool> FilterSheet { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_UseColumnDataType();
    [CompilerGeneratedAttribute]
public void set_UseColumnDataType(bool value);
    [CompilerGeneratedAttribute]
public Func`2<IExcelDataReader, ExcelDataTableConfiguration> get_ConfigureDataTable();
    [CompilerGeneratedAttribute]
public void set_ConfigureDataTable(Func`2<IExcelDataReader, ExcelDataTableConfiguration> value);
    [CompilerGeneratedAttribute]
public Func`3<IExcelDataReader, int, bool> get_FilterSheet();
    [CompilerGeneratedAttribute]
public void set_FilterSheet(Func`3<IExcelDataReader, int, bool> value);
}
public class ExcelDataReader.ExcelDataTableConfiguration : object {
    [CompilerGeneratedAttribute]
private string <EmptyColumnNamePrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseHeaderRow>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<IExcelDataReader> <ReadHeaderRow>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<IExcelDataReader, IReadOnlyDictionary`2<int, string>> <ReadHeader>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<IExcelDataReader, bool> <FilterRow>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`3<IExcelDataReader, int, bool> <FilterColumn>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`4<IExcelDataReader, int, object, object> <TransformValue>k__BackingField;
    public string EmptyColumnNamePrefix { get; public set; }
    public bool UseHeaderRow { get; public set; }
    public Action`1<IExcelDataReader> ReadHeaderRow { get; public set; }
    public Func`2<IExcelDataReader, IReadOnlyDictionary`2<int, string>> ReadHeader { get; public set; }
    public Func`2<IExcelDataReader, bool> FilterRow { get; public set; }
    public Func`3<IExcelDataReader, int, bool> FilterColumn { get; public set; }
    public Func`4<IExcelDataReader, int, object, object> TransformValue { get; public set; }
    [CompilerGeneratedAttribute]
public string get_EmptyColumnNamePrefix();
    [CompilerGeneratedAttribute]
public void set_EmptyColumnNamePrefix(string value);
    [CompilerGeneratedAttribute]
public bool get_UseHeaderRow();
    [CompilerGeneratedAttribute]
public void set_UseHeaderRow(bool value);
    [CompilerGeneratedAttribute]
public Action`1<IExcelDataReader> get_ReadHeaderRow();
    [CompilerGeneratedAttribute]
public void set_ReadHeaderRow(Action`1<IExcelDataReader> value);
    [CompilerGeneratedAttribute]
public Func`2<IExcelDataReader, IReadOnlyDictionary`2<int, string>> get_ReadHeader();
    [CompilerGeneratedAttribute]
public void set_ReadHeader(Func`2<IExcelDataReader, IReadOnlyDictionary`2<int, string>> value);
    [CompilerGeneratedAttribute]
public Func`2<IExcelDataReader, bool> get_FilterRow();
    [CompilerGeneratedAttribute]
public void set_FilterRow(Func`2<IExcelDataReader, bool> value);
    [CompilerGeneratedAttribute]
public Func`3<IExcelDataReader, int, bool> get_FilterColumn();
    [CompilerGeneratedAttribute]
public void set_FilterColumn(Func`3<IExcelDataReader, int, bool> value);
    [CompilerGeneratedAttribute]
public Func`4<IExcelDataReader, int, object, object> get_TransformValue();
    [CompilerGeneratedAttribute]
public void set_TransformValue(Func`4<IExcelDataReader, int, object, object> value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
