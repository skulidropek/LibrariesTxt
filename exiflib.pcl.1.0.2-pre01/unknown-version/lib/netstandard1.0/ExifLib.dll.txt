[FlagsAttribute]
public enum ExifLib.ExifFlash : Enum {
    public int value__;
    public static ExifFlash No;
    public static ExifFlash Fired;
    public static ExifFlash StrobeReturnLightDetected;
    public static ExifFlash On;
    public static ExifFlash Off;
    public static ExifFlash Auto;
    public static ExifFlash FlashFunctionPresent;
    public static ExifFlash RedEyeReduction;
}
public enum ExifLib.ExifGps : Enum {
    public int value__;
    public static ExifGps Version;
    public static ExifGps LatitudeRef;
    public static ExifGps Latitude;
    public static ExifGps LongitudeRef;
    public static ExifGps Longitude;
    public static ExifGps AltitudeRef;
    public static ExifGps Altitude;
    public static ExifGps TimeStamp;
    public static ExifGps Satellites;
    public static ExifGps Status;
    public static ExifGps MeasureMode;
    public static ExifGps DOP;
    public static ExifGps SpeedRef;
    public static ExifGps Speed;
    public static ExifGps TrackRef;
    public static ExifGps Track;
    public static ExifGps ImgDirectionRef;
    public static ExifGps ImgDirection;
    public static ExifGps MapDatum;
    public static ExifGps DestLatitudeRef;
    public static ExifGps DestLatitude;
    public static ExifGps DestLongitudeRef;
    public static ExifGps DestLongitude;
    public static ExifGps DestBearingRef;
    public static ExifGps DestBearing;
    public static ExifGps DestDistanceRef;
    public static ExifGps DestDistance;
    public static ExifGps ProcessingMethod;
    public static ExifGps AreaInformation;
    public static ExifGps DateStamp;
    public static ExifGps Differential;
}
public enum ExifLib.ExifGpsLatitudeRef : Enum {
    public int value__;
    public static ExifGpsLatitudeRef Unknown;
    public static ExifGpsLatitudeRef North;
    public static ExifGpsLatitudeRef South;
}
public enum ExifLib.ExifGpsLongitudeRef : Enum {
    public int value__;
    public static ExifGpsLongitudeRef Unknown;
    public static ExifGpsLongitudeRef East;
    public static ExifGpsLongitudeRef West;
}
public enum ExifLib.ExifId : Enum {
    public int value__;
    public static ExifId Unknown;
    public static ExifId ImageWidth;
    public static ExifId ImageHeight;
    public static ExifId Orientation;
    public static ExifId XResolution;
    public static ExifId YResolution;
    public static ExifId ResolutionUnit;
    public static ExifId DateTime;
    public static ExifId Description;
    public static ExifId Make;
    public static ExifId Model;
    public static ExifId Software;
    public static ExifId Artist;
    public static ExifId ThumbnailOffset;
    public static ExifId ThumbnailLength;
    public static ExifId ExposureTime;
    public static ExifId FNumber;
    public static ExifId Copyright;
    public static ExifId DateTimeOriginal;
    public static ExifId FlashUsed;
    public static ExifId UserComment;
}
public enum ExifLib.ExifIFD : Enum {
    public int value__;
    public static ExifIFD Exif;
    public static ExifIFD Gps;
}
public static class ExifLib.ExifIO : object {
    public static short ReadShort(Byte[] Data, int offset, bool littleEndian);
    public static ushort ReadUShort(Byte[] Data, int offset, bool littleEndian);
    public static int ReadInt(Byte[] Data, int offset, bool littleEndian);
    public static UInt32 ReadUInt(Byte[] Data, int offset, bool littleEndian);
    public static float ReadSingle(Byte[] Data, int offset, bool littleEndian);
    public static double ReadDouble(Byte[] Data, int offset, bool littleEndian);
}
public enum ExifLib.ExifOrientation : Enum {
    public int value__;
    public static ExifOrientation TopLeft;
    public static ExifOrientation BottomRight;
    public static ExifOrientation TopRight;
    public static ExifOrientation BottomLeft;
    public static ExifOrientation Undefined;
}
public class ExifLib.ExifReader : object {
    [CompilerGeneratedAttribute]
private JpegInfo <info>k__BackingField;
    private bool littleEndian;
    public JpegInfo info { get; private set; }
    protected ExifReader(Stream stream);
    [CompilerGeneratedAttribute]
public JpegInfo get_info();
    [CompilerGeneratedAttribute]
private void set_info(JpegInfo value);
    public static JpegInfo ReadJpeg(Stream stream);
    private void ProcessExif(Byte[] section);
    private int DirOffset(int start, int num);
    private void ProcessExifDir(Byte[] section, int offsetDir, int offsetBase, int length, int depth, ExifIFD ifd);
    private void ProcessSOF(Byte[] section, int marker);
}
public class ExifLib.ExifTag : object {
    [CompilerGeneratedAttribute]
private int <Tag>k__BackingField;
    [CompilerGeneratedAttribute]
private ExifTagFormat <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Components>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LittleEndian>k__BackingField;
    private static Int32[] BytesPerFormat;
    [CompilerGeneratedAttribute]
private bool <IsValid>k__BackingField;
    public int Tag { get; private set; }
    public ExifTagFormat Format { get; private set; }
    public int Components { get; private set; }
    public Byte[] Data { get; private set; }
    public bool LittleEndian { get; private set; }
    public bool IsValid { get; private set; }
    public bool IsNumeric { get; }
    public ExifTag(Byte[] section, int sectionOffset, int offsetBase, int length, bool littleEndian);
    private static ExifTag();
    [CompilerGeneratedAttribute]
public int get_Tag();
    [CompilerGeneratedAttribute]
private void set_Tag(int value);
    [CompilerGeneratedAttribute]
public ExifTagFormat get_Format();
    [CompilerGeneratedAttribute]
private void set_Format(ExifTagFormat value);
    [CompilerGeneratedAttribute]
public int get_Components();
    [CompilerGeneratedAttribute]
private void set_Components(int value);
    [CompilerGeneratedAttribute]
public Byte[] get_Data();
    [CompilerGeneratedAttribute]
private void set_Data(Byte[] value);
    [CompilerGeneratedAttribute]
public bool get_LittleEndian();
    [CompilerGeneratedAttribute]
private void set_LittleEndian(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsValid();
    [CompilerGeneratedAttribute]
private void set_IsValid(bool value);
    private short ReadShort(int offset);
    private ushort ReadUShort(int offset);
    private int ReadInt(int offset);
    private UInt32 ReadUInt(int offset);
    private float ReadSingle(int offset);
    private double ReadDouble(int offset);
    public bool get_IsNumeric();
    public int GetInt(int componentIndex);
    public double GetNumericValue(int componentIndex);
    public string GetStringValue();
    public string GetStringValue(int componentIndex);
    public virtual void Populate(JpegInfo info, ExifIFD ifd);
    public virtual string ToString();
}
public enum ExifLib.ExifTagFormat : Enum {
    public int value__;
    public static ExifTagFormat BYTE;
    public static ExifTagFormat STRING;
    public static ExifTagFormat USHORT;
    public static ExifTagFormat ULONG;
    public static ExifTagFormat URATIONAL;
    public static ExifTagFormat SBYTE;
    public static ExifTagFormat UNDEFINED;
    public static ExifTagFormat SSHORT;
    public static ExifTagFormat SLONG;
    public static ExifTagFormat SRATIONAL;
    public static ExifTagFormat SINGLE;
    public static ExifTagFormat DOUBLE;
    public static ExifTagFormat NUM_FORMATS;
}
public enum ExifLib.ExifUnit : Enum {
    public int value__;
    public static ExifUnit Undefined;
    public static ExifUnit Inch;
    public static ExifUnit Centimeter;
}
public static class ExifLib.JpegId : object {
    public static int START;
    public static int SOI;
    public static int SOS;
    public static int EOI;
    public static int COM;
    public static int JFIF;
    public static int EXIF;
    public static int IPTC;
}
public class ExifLib.JpegInfo : object {
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <FileSize>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsValid>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Height>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsColor>k__BackingField;
    [CompilerGeneratedAttribute]
private ExifOrientation <Orientation>k__BackingField;
    [CompilerGeneratedAttribute]
private double <XResolution>k__BackingField;
    [CompilerGeneratedAttribute]
private double <YResolution>k__BackingField;
    [CompilerGeneratedAttribute]
private ExifUnit <ResolutionUnit>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DateTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DateTimeOriginal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Make>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Model>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Software>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Artist>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Copyright>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserComment>k__BackingField;
    [CompilerGeneratedAttribute]
private double <ExposureTime>k__BackingField;
    [CompilerGeneratedAttribute]
private double <FNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private ExifFlash <Flash>k__BackingField;
    [CompilerGeneratedAttribute]
private ExifGpsLatitudeRef <GpsLatitudeRef>k__BackingField;
    public Double[] GpsLatitude;
    [CompilerGeneratedAttribute]
private ExifGpsLongitudeRef <GpsLongitudeRef>k__BackingField;
    public Double[] GpsLongitude;
    [CompilerGeneratedAttribute]
private int <ThumbnailOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ThumbnailSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <ThumbnailData>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <LoadTime>k__BackingField;
    public string FileName { get; public set; }
    public int FileSize { get; public set; }
    public bool IsValid { get; public set; }
    public int Height { get; public set; }
    public int Width { get; public set; }
    public bool IsColor { get; public set; }
    public ExifOrientation Orientation { get; public set; }
    public double XResolution { get; public set; }
    public double YResolution { get; public set; }
    public ExifUnit ResolutionUnit { get; public set; }
    public string DateTime { get; public set; }
    public string DateTimeOriginal { get; public set; }
    public string Description { get; public set; }
    public string Make { get; public set; }
    public string Model { get; public set; }
    public string Software { get; public set; }
    public string Artist { get; public set; }
    public string Copyright { get; public set; }
    public string UserComment { get; public set; }
    public double ExposureTime { get; public set; }
    public double FNumber { get; public set; }
    public ExifFlash Flash { get; public set; }
    public ExifGpsLatitudeRef GpsLatitudeRef { get; public set; }
    public ExifGpsLongitudeRef GpsLongitudeRef { get; public set; }
    public int ThumbnailOffset { get; public set; }
    public int ThumbnailSize { get; public set; }
    public Byte[] ThumbnailData { get; public set; }
    public TimeSpan LoadTime { get; public set; }
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public void set_FileName(string value);
    [CompilerGeneratedAttribute]
public int get_FileSize();
    [CompilerGeneratedAttribute]
public void set_FileSize(int value);
    [CompilerGeneratedAttribute]
public bool get_IsValid();
    [CompilerGeneratedAttribute]
public void set_IsValid(bool value);
    [CompilerGeneratedAttribute]
public int get_Height();
    [CompilerGeneratedAttribute]
public void set_Height(int value);
    [CompilerGeneratedAttribute]
public int get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(int value);
    [CompilerGeneratedAttribute]
public bool get_IsColor();
    [CompilerGeneratedAttribute]
public void set_IsColor(bool value);
    [CompilerGeneratedAttribute]
public ExifOrientation get_Orientation();
    [CompilerGeneratedAttribute]
public void set_Orientation(ExifOrientation value);
    [CompilerGeneratedAttribute]
public double get_XResolution();
    [CompilerGeneratedAttribute]
public void set_XResolution(double value);
    [CompilerGeneratedAttribute]
public double get_YResolution();
    [CompilerGeneratedAttribute]
public void set_YResolution(double value);
    [CompilerGeneratedAttribute]
public ExifUnit get_ResolutionUnit();
    [CompilerGeneratedAttribute]
public void set_ResolutionUnit(ExifUnit value);
    [CompilerGeneratedAttribute]
public string get_DateTime();
    [CompilerGeneratedAttribute]
public void set_DateTime(string value);
    [CompilerGeneratedAttribute]
public string get_DateTimeOriginal();
    [CompilerGeneratedAttribute]
public void set_DateTimeOriginal(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Make();
    [CompilerGeneratedAttribute]
public void set_Make(string value);
    [CompilerGeneratedAttribute]
public string get_Model();
    [CompilerGeneratedAttribute]
public void set_Model(string value);
    [CompilerGeneratedAttribute]
public string get_Software();
    [CompilerGeneratedAttribute]
public void set_Software(string value);
    [CompilerGeneratedAttribute]
public string get_Artist();
    [CompilerGeneratedAttribute]
public void set_Artist(string value);
    [CompilerGeneratedAttribute]
public string get_Copyright();
    [CompilerGeneratedAttribute]
public void set_Copyright(string value);
    [CompilerGeneratedAttribute]
public string get_UserComment();
    [CompilerGeneratedAttribute]
public void set_UserComment(string value);
    [CompilerGeneratedAttribute]
public double get_ExposureTime();
    [CompilerGeneratedAttribute]
public void set_ExposureTime(double value);
    [CompilerGeneratedAttribute]
public double get_FNumber();
    [CompilerGeneratedAttribute]
public void set_FNumber(double value);
    [CompilerGeneratedAttribute]
public ExifFlash get_Flash();
    [CompilerGeneratedAttribute]
public void set_Flash(ExifFlash value);
    [CompilerGeneratedAttribute]
public ExifGpsLatitudeRef get_GpsLatitudeRef();
    [CompilerGeneratedAttribute]
public void set_GpsLatitudeRef(ExifGpsLatitudeRef value);
    [CompilerGeneratedAttribute]
public ExifGpsLongitudeRef get_GpsLongitudeRef();
    [CompilerGeneratedAttribute]
public void set_GpsLongitudeRef(ExifGpsLongitudeRef value);
    [CompilerGeneratedAttribute]
public int get_ThumbnailOffset();
    [CompilerGeneratedAttribute]
public void set_ThumbnailOffset(int value);
    [CompilerGeneratedAttribute]
public int get_ThumbnailSize();
    [CompilerGeneratedAttribute]
public void set_ThumbnailSize(int value);
    [CompilerGeneratedAttribute]
public Byte[] get_ThumbnailData();
    [CompilerGeneratedAttribute]
public void set_ThumbnailData(Byte[] value);
    [CompilerGeneratedAttribute]
public TimeSpan get_LoadTime();
    [CompilerGeneratedAttribute]
public void set_LoadTime(TimeSpan value);
}
