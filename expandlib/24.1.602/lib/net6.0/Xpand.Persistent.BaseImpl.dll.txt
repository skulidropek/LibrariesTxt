[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal class ProcessedByFody : object {
    internal static string FodyVersion;
    internal static string PropertyChanged;
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[DisplayNameAttribute("AdditionalViewControls")]
public class Xpand.Persistent.BaseImpl.AdditionalViewControls.AdditionalViewControlsOperationPermissionPolicyData : LogicRuleOperationPermissionPolicyData {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <MessageProperty>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Position <Position>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nullable`1<Color> <BackColor>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nullable`1<Color> <ForeColor>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nullable`1<FontStyle> <FontStyle>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nullable`1<int> <Height>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nullable`1<int> <FontSize>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <ImageName>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Type <ControlType>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Type <DecoratorType>k__BackingField;
    public string Message { get; public set; }
    public string MessageProperty { get; public set; }
    public Position Position { get; public set; }
    public Nullable`1<Color> BackColor { get; public set; }
    public Nullable`1<Color> ForeColor { get; public set; }
    public Nullable`1<FontStyle> FontStyle { get; public set; }
    public Nullable`1<int> Height { get; public set; }
    public Nullable`1<int> FontSize { get; public set; }
    public string ImageName { get; public set; }
    [RuleRequiredFieldAttribute]
[ValueConverterAttribute("Xpand.Extensions.XAF.Xpo.ValueConverters.TypeValueConverter")]
public Type ControlType { get; public set; }
    [RuleRequiredFieldAttribute]
[ValueConverterAttribute("Xpand.Extensions.XAF.Xpo.ValueConverters.TypeValueConverter")]
public Type DecoratorType { get; public set; }
    public AdditionalViewControlsOperationPermissionPolicyData(Session session);
    protected virtual Type GetPermissionType();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Message();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Message(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_MessageProperty();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MessageProperty(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Position get_Position();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Position(Position value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Color> get_BackColor();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BackColor(Nullable`1<Color> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Color> get_ForeColor();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ForeColor(Nullable`1<Color> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<FontStyle> get_FontStyle();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FontStyle(Nullable`1<FontStyle> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Height();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Height(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_FontSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FontSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ImageName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ImageName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Type get_ControlType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ControlType(Type value);
    [CompilerGeneratedAttribute]
public sealed virtual Type get_DecoratorType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DecoratorType(Type value);
}
[DisplayNameAttribute("AuditTrail")]
public class Xpand.Persistent.BaseImpl.AuditTrail.AuditTrailOperationPermissionPolicyPolicyData : LogicRuleOperationPermissionPolicyData {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> <AuditPending>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <IncludeRelatedTypes>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nullable`1<ObjectAuditingMode> <AuditingMode>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private AuditMemberStrategy <AuditMemberStrategy>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private AuditTrailStrategy <AuditTrailStrategy>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <AuditTrailMembersContext>k__BackingField;
    public Nullable`1<bool> AuditPending { get; public set; }
    public bool IncludeRelatedTypes { get; public set; }
    public Nullable`1<ObjectAuditingMode> AuditingMode { get; public set; }
    public AuditMemberStrategy AuditMemberStrategy { get; public set; }
    public AuditTrailStrategy AuditTrailStrategy { get; public set; }
    public string AuditTrailMembersContext { get; public set; }
    public AuditTrailOperationPermissionPolicyPolicyData(Session session);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_AuditPending();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AuditPending(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IncludeRelatedTypes();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeRelatedTypes(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<ObjectAuditingMode> get_AuditingMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AuditingMode(Nullable`1<ObjectAuditingMode> value);
    [CompilerGeneratedAttribute]
public sealed virtual AuditMemberStrategy get_AuditMemberStrategy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AuditMemberStrategy(AuditMemberStrategy value);
    [CompilerGeneratedAttribute]
public sealed virtual AuditTrailStrategy get_AuditTrailStrategy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AuditTrailStrategy(AuditTrailStrategy value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AuditTrailMembersContext();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AuditTrailMembersContext(string value);
    protected virtual Type GetPermissionType();
}
[DisplayNameAttribute("Email")]
public class Xpand.Persistent.BaseImpl.Email.EmailOperationPermissionPolicyData : LogicRuleOperationPermissionPolicyData {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <SmtpClientContext>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <TemplateContext>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <EmailReceipientsContext>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <CurrentObjectEmailMember>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IModelMember <Xpand.Persistent.Base.Email.IEmailRule.CurrentObjectEmailMember>k__BackingField;
    [RuleRequiredFieldAttribute]
public string SmtpClientContext { get; public set; }
    [RuleRequiredFieldAttribute]
public string TemplateContext { get; public set; }
    public string EmailReceipientsContext { get; public set; }
    public string CurrentObjectEmailMember { get; public set; }
    private IModelMember Xpand.Persistent.Base.Email.IEmailRule.CurrentObjectEmailMember { get; private set; }
    public EmailOperationPermissionPolicyData(Session session);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SmtpClientContext();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SmtpClientContext(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TemplateContext();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TemplateContext(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_EmailReceipientsContext();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EmailReceipientsContext(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CurrentObjectEmailMember();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CurrentObjectEmailMember(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IModelMember Xpand.Persistent.Base.Email.IEmailRule.get_CurrentObjectEmailMember();
    [CompilerGeneratedAttribute]
private sealed virtual override void Xpand.Persistent.Base.Email.IEmailRule.set_CurrentObjectEmailMember(IModelMember value);
    protected virtual Type GetPermissionType();
}
[ControllerStateRuleAttribute("ClassInfoGraphNode+NewObjectViewController", "DevExpress.ExpressApp.SystemModule.NewObjectViewController", "1=1", "1=1", "1")]
[ControllerStateRuleAttribute("ClassInfoGraphNode+DeleteObjectsViewController", "DevExpress.ExpressApp.SystemModule.DeleteObjectsViewController", "1=1", "1=1", "1")]
[DefaultPropertyAttribute("Name")]
public class Xpand.Persistent.BaseImpl.ImportExport.ClassInfoGraphNode : XpandBaseCustomObject {
    private string _name;
    private SerializationConfiguration _serializationConfiguration;
    private SerializationStrategy _serializationStrategy;
    private NodeType _nodeType;
    private bool _key;
    private string _typeName;
    [VisibleInListViewAttribute("False")]
[ModelDefaultAttribute("AllowEdit", "false")]
public NodeType NodeType { get; public set; }
    [VisibleInDetailViewAttribute("False")]
[ModelDefaultAttribute("AllowEdit", "false")]
public string Name { get; public set; }
    [AssociationAttribute]
public SerializationConfiguration SerializationConfiguration { get; public set; }
    private ISerializationConfiguration Xpand.Persistent.Base.ImportExport.IClassInfoGraphNode.SerializationConfiguration { get; private set; }
    [VisibleInListViewAttribute("False")]
public SerializationStrategy SerializationStrategy { get; public set; }
    [VisibleInListViewAttribute("False")]
public bool Key { get; public set; }
    [BrowsableAttribute("False")]
public string TypeName { get; public set; }
    public ClassInfoGraphNode(Session session);
    [AppearanceAttribute]
public bool RuleObjectCanNotBeKey();
    public sealed virtual NodeType get_NodeType();
    public sealed virtual void set_NodeType(NodeType value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public SerializationConfiguration get_SerializationConfiguration();
    public void set_SerializationConfiguration(SerializationConfiguration value);
    private sealed virtual override ISerializationConfiguration Xpand.Persistent.Base.ImportExport.IClassInfoGraphNode.get_SerializationConfiguration();
    private sealed virtual override void Xpand.Persistent.Base.ImportExport.IClassInfoGraphNode.set_SerializationConfiguration(ISerializationConfiguration value);
    public sealed virtual SerializationStrategy get_SerializationStrategy();
    public sealed virtual void set_SerializationStrategy(SerializationStrategy value);
    public sealed virtual bool get_Key();
    public sealed virtual void set_Key(bool value);
    public sealed virtual string get_TypeName();
    public sealed virtual void set_TypeName(string value);
    [CompilerGeneratedAttribute]
private bool <RuleObjectCanNotBeKey>b__4_0(ITypeInfo info);
}
[DomainComponentAttribute]
public class Xpand.Persistent.BaseImpl.ImportExport.FileChooser : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private XpandFileData <FileData>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ErrorHandling <ErrorHandling>k__BackingField;
    private PropertyChangedEventHandler PropertyChanged;
    public XpandFileData FileData { get; public set; }
    [TooltipAttribute("If false will raise an exception")]
public ErrorHandling ErrorHandling { get; public set; }
    private IFileData Xpand.Persistent.Base.General.IFileChooser.FileData { get; private set; }
    [CompilerGeneratedAttribute]
public XpandFileData get_FileData();
    [CompilerGeneratedAttribute]
public void set_FileData(XpandFileData value);
    [CompilerGeneratedAttribute]
public sealed virtual ErrorHandling get_ErrorHandling();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ErrorHandling(ErrorHandling value);
    private sealed virtual override IFileData Xpand.Persistent.Base.General.IFileChooser.get_FileData();
    private sealed virtual override void Xpand.Persistent.Base.General.IFileChooser.set_FileData(IFileData value);
    public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    protected void <>OnPropertyChanged(PropertyChangedEventArgs eventArgs);
}
[DefaultClassOptionsAttribute]
[NavigationItemAttribute("ImportExport")]
[DefaultPropertyAttribute("Reason")]
public class Xpand.Persistent.BaseImpl.ImportExport.IOError : XPBaseObject {
    private int _oid;
    private FailReason _reason;
    private string _elementXml;
    private string _innerXml;
    [KeyAttribute("True")]
public int Oid { get; public set; }
    public FailReason Reason { get; public set; }
    [SizeAttribute("-1")]
public string ElementXml { get; public set; }
    [SizeAttribute("-1")]
public string InnerXml { get; public set; }
    public IOError(Session session);
    public int get_Oid();
    public void set_Oid(int value);
    public sealed virtual FailReason get_Reason();
    public sealed virtual void set_Reason(FailReason value);
    public sealed virtual string get_ElementXml();
    public sealed virtual void set_ElementXml(string value);
    public sealed virtual string get_InnerXml();
    public sealed virtual void set_InnerXml(string value);
}
[DefaultPropertyAttribute("TypeToSerialize")]
[RuleCombinationOfPropertiesIsUniqueAttribute]
public class Xpand.Persistent.BaseImpl.ImportExport.SerializationConfiguration : XpandBaseCustomObject {
    private Type _typeToSerialize;
    private SerializationConfigurationGroup _serializationConfigurationGroup;
    [PersistentAttribute]
[SizeAttribute("-1")]
protected string TypeNameToSerialize;
    [IndexAttribute("0")]
[SizeAttribute("-1")]
[ValueConverterAttribute("Xpand.Extensions.XAF.Xpo.ValueConverters.TypeValueConverter")]
[TypeConverterAttribute("DevExpress.Persistent.Base.LocalizedClassInfoTypeConverter")]
[VisibleInListViewAttribute("True")]
[RuleRequiredFieldAttribute]
public Type TypeToSerialize { get; public set; }
    [AssociationAttribute]
public XPCollection`1<ClassInfoGraphNode> SerializationGraph { get; }
    [RuleRequiredFieldAttribute]
[AssociationAttribute("SerializationConfigurationGroup-SerializationConfigurations")]
[VisibleInDetailViewAttribute("False")]
public SerializationConfigurationGroup SerializationConfigurationGroup { get; public set; }
    private ISerializationConfigurationGroup Xpand.Persistent.Base.ImportExport.ISerializationConfiguration.SerializationConfigurationGroup { get; private set; }
    private IList`1<IClassInfoGraphNode> Xpand.Persistent.Base.ImportExport.ISerializationConfiguration.SerializationGraph { get; }
    public SerializationConfiguration(Session session);
    public sealed virtual Type get_TypeToSerialize();
    public sealed virtual void set_TypeToSerialize(Type value);
    public XPCollection`1<ClassInfoGraphNode> get_SerializationGraph();
    public SerializationConfigurationGroup get_SerializationConfigurationGroup();
    public void set_SerializationConfigurationGroup(SerializationConfigurationGroup value);
    private sealed virtual override ISerializationConfigurationGroup Xpand.Persistent.Base.ImportExport.ISerializationConfiguration.get_SerializationConfigurationGroup();
    private sealed virtual override void Xpand.Persistent.Base.ImportExport.ISerializationConfiguration.set_SerializationConfigurationGroup(ISerializationConfigurationGroup value);
    private sealed virtual override IList`1<IClassInfoGraphNode> Xpand.Persistent.Base.ImportExport.ISerializationConfiguration.get_SerializationGraph();
}
[DefaultClassOptionsAttribute]
[NavigationItemAttribute("ImportExport")]
[DefaultPropertyAttribute("Name")]
public class Xpand.Persistent.BaseImpl.ImportExport.SerializationConfigurationGroup : XpandBaseCustomObject {
    private string _name;
    private bool _minifyOutput;
    private bool _zipOutput;
    [AssociationAttribute("SerializationConfigurationGroup-SerializationConfigurations")]
[AggregatedAttribute]
public XPCollection`1<SerializationConfiguration> SerializationConfigurations { get; }
    public bool MinifyOutput { get; public set; }
    public bool ZipOutput { get; public set; }
    [RuleUniqueValueAttribute]
[RuleRequiredFieldAttribute]
public string Name { get; public set; }
    private IList`1<ISerializationConfiguration> Xpand.Persistent.Base.ImportExport.ISerializationConfigurationGroup.Configurations { get; }
    public SerializationConfigurationGroup(Session session);
    public XPCollection`1<SerializationConfiguration> get_SerializationConfigurations();
    public sealed virtual bool get_MinifyOutput();
    public sealed virtual void set_MinifyOutput(bool value);
    public sealed virtual bool get_ZipOutput();
    public sealed virtual void set_ZipOutput(bool value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    private sealed virtual override IList`1<ISerializationConfiguration> Xpand.Persistent.Base.ImportExport.ISerializationConfigurationGroup.get_Configurations();
}
[DisplayNameAttribute("MasterDetail")]
public class Xpand.Persistent.BaseImpl.MasterDetail.MasterDetailOperationPermissionPolicyData : LogicRuleOperationPermissionPolicyData {
    private string _childListView;
    private string _collectionMember;
    public string ChildListView { get; public set; }
    public string CollectionMember { get; public set; }
    private IModelListView Xpand.Persistent.Base.MasterDetail.IMasterDetailRule.ChildListView { get; private set; }
    private IModelMember Xpand.Persistent.Base.MasterDetail.IMasterDetailRule.CollectionMember { get; private set; }
    public MasterDetailOperationPermissionPolicyData(Session session);
    public sealed virtual string get_ChildListView();
    public sealed virtual void set_ChildListView(string value);
    public sealed virtual string get_CollectionMember();
    public sealed virtual void set_CollectionMember(string value);
    private sealed virtual override IModelListView Xpand.Persistent.Base.MasterDetail.IMasterDetailRule.get_ChildListView();
    private sealed virtual override void Xpand.Persistent.Base.MasterDetail.IMasterDetailRule.set_ChildListView(IModelListView value);
    private sealed virtual override IModelMember Xpand.Persistent.Base.MasterDetail.IMasterDetailRule.get_CollectionMember();
    private sealed virtual override void Xpand.Persistent.Base.MasterDetail.IMasterDetailRule.set_CollectionMember(IModelMember value);
    protected virtual Type GetPermissionType();
}
[RuleRequiredForAtLeast1PropertyAttribute]
[DisplayNameAttribute("ActionState")]
public class Xpand.Persistent.BaseImpl.ModelArtifact.ActionStateOperationPermissionPolicyData : ArtifactStateOperationPermissionPolicyData {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <ActionId>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ActionState <ActionState>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <ActionContext>k__BackingField;
    public string ActionId { get; public set; }
    public ActionState ActionState { get; public set; }
    public string ActionContext { get; public set; }
    public ActionStateOperationPermissionPolicyData(Session session);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ActionId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ActionId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual ActionState get_ActionState();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ActionState(ActionState value);
    protected virtual Type GetPermissionType();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ActionContext();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ActionContext(string value);
}
[NonPersistentAttribute]
public abstract class Xpand.Persistent.BaseImpl.ModelArtifact.ArtifactStateOperationPermissionPolicyData : LogicRuleOperationPermissionPolicyData {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Module>k__BackingField;
    [DisplayNameAttribute("Module (regex)")]
public string Module { get; public set; }
    protected ArtifactStateOperationPermissionPolicyData(Session session);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Module();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Module(string value);
}
[RuleRequiredForAtLeast1PropertyAttribute]
[DisplayNameAttribute("ControllerState")]
public class Xpand.Persistent.BaseImpl.ModelArtifact.ControllerStateOperationPermissionPolicyData : ArtifactStateOperationPermissionPolicyData {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Type <ControllerType>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ControllerState <ControllerState>k__BackingField;
    public Type ControllerType { get; public set; }
    public ControllerState ControllerState { get; public set; }
    public ControllerStateOperationPermissionPolicyData(Session session);
    [CompilerGeneratedAttribute]
public sealed virtual Type get_ControllerType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ControllerType(Type value);
    [CompilerGeneratedAttribute]
public sealed virtual ControllerState get_ControllerState();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ControllerState(ControllerState value);
    protected virtual Type GetPermissionType();
}
[DisplayNameAttribute("ModelCombine")]
public class Xpand.Persistent.BaseImpl.ModelDifference.ModelCombineOperationPermissionPolicyData : PermissionPolicyData {
    private string _difference;
    private ApplicationModelCombineModifier _modifier;
    public ApplicationModelCombineModifier Modifier { get; public set; }
    public string Difference { get; public set; }
    public ModelCombineOperationPermissionPolicyData(Session session);
    public sealed virtual ApplicationModelCombineModifier get_Modifier();
    public sealed virtual void set_Modifier(ApplicationModelCombineModifier value);
    public sealed virtual string get_Difference();
    public sealed virtual void set_Difference(string value);
    public virtual IList`1<IOperationPermission> GetPermissions();
}
[DefaultClassOptionsAttribute]
[NavigationItemAttribute("WorldCreator")]
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.ICodeTemplate")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.CodeTemplate : TemplateInfo {
    private CodeDomProvider _codeDomProvider;
    private bool _isDefault;
    private TemplateType _templateType;
    [VisibleInLookupListViewAttribute("True")]
public CodeDomProvider CodeDomProvider { get; public set; }
    [VisibleInLookupListViewAttribute("True")]
[RuleValueComparisonAttribute]
public TemplateType TemplateType { get; public set; }
    public bool IsDefault { get; public set; }
    public CodeTemplate(Session session);
    public sealed virtual void SetDefaults();
    public sealed virtual CodeDomProvider get_CodeDomProvider();
    public sealed virtual void set_CodeDomProvider(CodeDomProvider value);
    public sealed virtual TemplateType get_TemplateType();
    public sealed virtual void set_TemplateType(TemplateType value);
    public sealed virtual bool get_IsDefault();
    public sealed virtual void set_IsDefault(bool value);
    private string GetFromResource(string name);
}
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.ICodeTemplateInfo")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.CodeTemplateInfo : XpandBaseCustomObject {
    private CodeTemplate _codeTemplate;
    private TemplateInfo _templateInfo;
    [NonPersistentAttribute]
[VisibleInListViewAttribute("False")]
public CodeTemplate CodeTemplate { get; public set; }
    [VisibleInListViewAttribute("False")]
[RuleRequiredFieldAttribute]
[AssociationAttribute("TemplateInfo-CodeTemplateInfos")]
public TemplateInfo TemplateInfo { get; public set; }
    private ITemplateInfo Xpand.Persistent.Base.PersistentMetaData.ICodeTemplateInfo.TemplateInfo { get; private set; }
    private ICodeTemplate Xpand.Persistent.Base.PersistentMetaData.ICodeTemplateInfo.CodeTemplate { get; private set; }
    [AssociationAttribute("CodeTemplateInfo-PersistentTemplatedTypeInfos")]
public XPCollection`1<PersistentTemplatedTypeInfo> PersistentTemplatedTypeInfos { get; }
    public CodeTemplateInfo(Session session);
    public CodeTemplate get_CodeTemplate();
    public void set_CodeTemplate(CodeTemplate value);
    public TemplateInfo get_TemplateInfo();
    public void set_TemplateInfo(TemplateInfo value);
    private sealed virtual override ITemplateInfo Xpand.Persistent.Base.PersistentMetaData.ICodeTemplateInfo.get_TemplateInfo();
    private sealed virtual override void Xpand.Persistent.Base.PersistentMetaData.ICodeTemplateInfo.set_TemplateInfo(ITemplateInfo value);
    private sealed virtual override ICodeTemplate Xpand.Persistent.Base.PersistentMetaData.ICodeTemplateInfo.get_CodeTemplate();
    private sealed virtual override void Xpand.Persistent.Base.PersistentMetaData.ICodeTemplateInfo.set_CodeTemplate(ICodeTemplate value);
    public XPCollection`1<PersistentTemplatedTypeInfo> get_PersistentTemplatedTypeInfos();
}
[NonPersistentAttribute]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.DataBase : XpandBaseCustomObject {
    private string _name;
    public string Name { get; public set; }
    public DataBase(Session session);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
}
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.IDataStoreLogonObject")]
[AppearanceAttribute]
[NonPersistentAttribute]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.DataStoreLogonObject : XpandBaseCustomObject {
    private string _serverName;
    private DataStoreAuthentication _authentication;
    private string _userName;
    private DataBase _dataBase;
    private IList`1<IDataBase> _dataBases;
    private string _passWord;
    [IndexAttribute("0")]
public string ServerName { get; public set; }
    [IndexAttribute("1")]
public DataStoreAuthentication Authentication { get; public set; }
    [IndexAttribute("2")]
public string UserName { get; public set; }
    [IndexAttribute("4")]
[DataSourcePropertyAttribute("DataBases", "Mono.Cecil.CustomAttributeArgument[]")]
public DataBase DataBase { get; public set; }
    private IDataBase Xpand.Persistent.Base.PersistentMetaData.IDataStoreLogonObject.DataBase { get; private set; }
    [IndexAttribute("3")]
[ModelDefaultAttribute("IsPassword", "True")]
public string PassWord { get; public set; }
    [BrowsableAttribute("False")]
public IList`1<IDataBase> DataBases { get; }
    public DataStoreLogonObject(Session session);
    public DataStoreLogonObject(Session session, DataStoreLogonObject sqlMapperInfo);
    public sealed virtual string get_ServerName();
    public sealed virtual void set_ServerName(string value);
    public sealed virtual DataStoreAuthentication get_Authentication();
    public sealed virtual void set_Authentication(DataStoreAuthentication value);
    public virtual string ToString();
    public sealed virtual string get_UserName();
    public sealed virtual void set_UserName(string value);
    public DataBase get_DataBase();
    public void set_DataBase(DataBase value);
    private sealed virtual override IDataBase Xpand.Persistent.Base.PersistentMetaData.IDataStoreLogonObject.get_DataBase();
    private sealed virtual override void Xpand.Persistent.Base.PersistentMetaData.IDataStoreLogonObject.set_DataBase(IDataBase value);
    public sealed virtual string get_PassWord();
    public sealed virtual void set_PassWord(string value);
    public sealed virtual IList`1<IDataBase> get_DataBases();
}
[NavigationItemAttribute("WorldCreator")]
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.IExtendedCollectionMemberInfo")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.ExtendedCollectionMemberInfo : ExtendedMemberInfo {
    public ExtendedCollectionMemberInfo(Session session);
}
[DefaultClassOptionsAttribute]
[NavigationItemAttribute("WorldCreator")]
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.IExtendedCoreTypeMemberInfo")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.ExtendedCoreTypeMemberInfo : ExtendedMemberInfo {
    private DBColumnType _dataType;
    public DBColumnType DataType { get; public set; }
    public ExtendedCoreTypeMemberInfo(Session session);
    public sealed virtual DBColumnType get_DataType();
    public sealed virtual void set_DataType(DBColumnType value);
}
[RuleCombinationOfPropertiesIsUniqueAttribute]
[AppearanceAttribute]
public abstract class Xpand.Persistent.BaseImpl.PersistentMetaData.ExtendedMemberInfo : PersistentTypeInfo {
    private Type _owner;
    private PersistentClassInfo _ownerClassInfo;
    [VisibleInDetailViewAttribute("False")]
[VisibleInListViewAttribute("True")]
[ModelDefaultAttribute("GroupIndex", "0")]
public string TypeInfoName { get; }
    [BrowsableAttribute("False")]
public PersistentClassInfo OwnerClassInfo { get; public set; }
    [SizeAttribute("-1")]
[ValueConverterAttribute("Xpand.Extensions.XAF.Xpo.ValueConverters.TypeValueConverter")]
[RuleRequiredFieldAttribute]
[TypeConverterAttribute("Xpand.Persistent.Base.XpandLocalizedClassInfoTypeConverter")]
public Type Owner { get; public set; }
    [PersistentAliasAttribute("Concat(_owner,'')")]
public string OwnerType { get; }
    protected ExtendedMemberInfo(Session session);
    public string get_TypeInfoName();
    public PersistentClassInfo get_OwnerClassInfo();
    public void set_OwnerClassInfo(PersistentClassInfo value);
    public sealed virtual Type get_Owner();
    public sealed virtual void set_Owner(Type value);
    public string get_OwnerType();
}
[NavigationItemAttribute("WorldCreator")]
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.IExtendedOrphanedCollection")]
[RuleRequiredForAtLeast1PropertyAttribute]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.ExtendedOrphanedCollection : ExtendedCollectionMemberInfo {
    private string _criteria;
    private Type _elementType;
    private string _elementTypeFullName;
    private PersistentClassInfo _elementClassInfo;
    public string Criteria { get; public set; }
    [SizeAttribute("-1")]
[ValueConverterAttribute("Xpand.Extensions.XAF.Xpo.ValueConverters.TypeValueConverter")]
[TypeConverterAttribute("DevExpress.Persistent.Base.LocalizedClassInfoTypeConverter")]
public Type ElementType { get; public set; }
    public PersistentClassInfo ElementClassInfo { get; public set; }
    [SizeAttribute("-1")]
[BrowsableAttribute("False")]
public string ElementTypeFullName { get; public set; }
    public ExtendedOrphanedCollection(Session session);
    public sealed virtual string get_Criteria();
    public sealed virtual void set_Criteria(string value);
    public Type get_ElementType();
    public void set_ElementType(Type value);
    public PersistentClassInfo get_ElementClassInfo();
    public void set_ElementClassInfo(PersistentClassInfo value);
    public sealed virtual string get_ElementTypeFullName();
    public sealed virtual void set_ElementTypeFullName(string value);
}
[DefaultClassOptionsAttribute]
[NavigationItemAttribute("WorldCreator")]
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.IExtendedReferenceMemberInfo")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.ExtendedReferenceMemberInfo : ExtendedMemberInfo {
    private Type _referenceType;
    [SizeAttribute("-1")]
[ValueConverterAttribute("Xpand.Extensions.XAF.Xpo.ValueConverters.TypeValueConverter")]
[RuleRequiredFieldAttribute]
[TypeConverterAttribute("DevExpress.Persistent.Base.LocalizedClassInfoTypeConverter")]
public Type ReferenceType { get; public set; }
    public ExtendedReferenceMemberInfo(Session session);
    public sealed virtual Type get_ReferenceType();
    public sealed virtual void set_ReferenceType(Type value);
}
[RuleCombinationOfPropertiesIsUniqueAttribute]
[DefaultClassOptionsAttribute]
[NavigationItemAttribute("WorldCreator")]
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.IInterfaceInfo")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.InterfaceInfo : XpandBaseCustomObject {
    private string _assembly;
    private string _name;
    [AssociationAttribute("PersistentClassInfos-Interfaces")]
public XPCollection`1<PersistentClassInfo> PersistentClassInfos { get; }
    public string Name { get; public set; }
    public string Assembly { get; public set; }
    [BrowsableAttribute("False")]
[MemberDesignTimeVisibilityAttribute("False")]
public Type Type { get; }
    private IList`1<IPersistentClassInfo> Xpand.Persistent.Base.PersistentMetaData.IInterfaceInfo.PersistentClassInfos { get; }
    public InterfaceInfo(Session session);
    public XPCollection`1<PersistentClassInfo> get_PersistentClassInfos();
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public sealed virtual string get_Assembly();
    public sealed virtual void set_Assembly(string value);
    public sealed virtual Type get_Type();
    private sealed virtual override IList`1<IPersistentClassInfo> Xpand.Persistent.Base.PersistentMetaData.IInterfaceInfo.get_PersistentClassInfos();
    [CompilerGeneratedAttribute]
private bool <get_Type>b__12_0(Assembly assembly);
}
[NonPersistentAttribute]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.MapperInfo : XpandBaseCustomObject {
    private string _navigationPath;
    private bool _xpoDataBase;
    public string NavigationPath { get; public set; }
    public bool XpoDataBase { get; public set; }
    public MapperInfo(Session session);
    public sealed virtual string get_NavigationPath();
    public sealed virtual void set_NavigationPath(string value);
    public sealed virtual bool get_XpoDataBase();
    public sealed virtual void set_XpoDataBase(bool value);
}
[DefaultClassOptionsAttribute]
[NavigationItemAttribute("WorldCreator")]
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentAssemblyInfo")]
[DefaultPropertyAttribute("Name")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentAssemblyInfo : XpandBaseCustomObject {
    private CodeDomProvider _codeDomProvider;
    private int _compileOrder;
    private bool _doNotCompile;
    private string _errors;
    private string _name;
    private StrongKeyFile _strongKeyFile;
    [PersistentAttribute("GeneratedCode")]
[SizeAttribute("-1")]
private string _generatedCode;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
[PersistentAttribute("Revision")]
private int <Revision>k__BackingField;
    [IndexAttribute("4")]
[FileTypeFilterAttribute("Strong Keys", "1", "Mono.Cecil.CustomAttributeArgument[]")]
[AggregatedAttribute]
[ExpandObjectMembersAttribute]
public StrongKeyFile StrongKeyFile { get; public set; }
    [IndexAttribute("6")]
[ModelDefaultAttribute("AllowEdit", "false")]
[EditorAliasAttribute("CSCodePropertyEditor")]
[PersistentAliasAttribute("_generatedCode")]
[VisibleInListViewAttribute("False")]
public string GeneratedCode { get; }
    [AssociationAttribute("PersistentAssemblyInfo-PersistentClassInfos")]
[AggregatedAttribute]
public XPCollection`1<PersistentClassInfo> PersistentClassInfos { get; }
    [RuleRequiredFieldAttribute]
[RuleUniqueValueAttribute]
[IndexAttribute("0")]
public string Name { get; public set; }
    [VisibleInDetailViewAttribute("False")]
[PersistentAliasAttribute("_revision")]
[RuleValueComparisonAttribute]
public int Revision { get; private set; }
    private int Xpand.Persistent.Base.PersistentMetaData.IPersistentAssemblyInfo.Revision { get; private set; }
    [IndexAttribute("1")]
public int CompileOrder { get; public set; }
    [AssociationAttribute("PersistentAssemblyInfo-Attributes")]
public XPCollection`1<PersistentAssemblyAttributeInfo> Attributes { get; }
    private IList`1<IPersistentAssemblyAttributeInfo> Xpand.Persistent.Base.PersistentMetaData.IPersistentAssemblyInfo.Attributes { get; }
    [IndexAttribute("2")]
[AllowEditAttribute]
public CodeDomProvider CodeDomProvider { get; public set; }
    [IndexAttribute("5")]
public bool DoNotCompile { get; public set; }
    private IFileData Xpand.Persistent.Base.PersistentMetaData.IPersistentAssemblyInfo.StrongKeyFileData { get; private set; }
    [IndexAttribute("7")]
[ModelDefaultAttribute("AllowEdit", "false")]
[SizeAttribute("-1")]
public string Errors { get; public set; }
    private IList`1<IPersistentClassInfo> Xpand.Persistent.Base.PersistentMetaData.IPersistentAssemblyInfo.PersistentClassInfos { get; }
    public PersistentAssemblyInfo(Session session);
    public StrongKeyFile get_StrongKeyFile();
    public void set_StrongKeyFile(StrongKeyFile value);
    public sealed virtual string get_GeneratedCode();
    public XPCollection`1<PersistentClassInfo> get_PersistentClassInfos();
    public virtual void AfterConstruction();
    protected virtual void OnSaving();
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public int get_Revision();
    [CompilerGeneratedAttribute]
private void set_Revision(int value);
    private sealed virtual override int Xpand.Persistent.Base.PersistentMetaData.IPersistentAssemblyInfo.get_Revision();
    private sealed virtual override void Xpand.Persistent.Base.PersistentMetaData.IPersistentAssemblyInfo.set_Revision(int value);
    public sealed virtual int get_CompileOrder();
    public sealed virtual void set_CompileOrder(int value);
    public XPCollection`1<PersistentAssemblyAttributeInfo> get_Attributes();
    private sealed virtual override IList`1<IPersistentAssemblyAttributeInfo> Xpand.Persistent.Base.PersistentMetaData.IPersistentAssemblyInfo.get_Attributes();
    public sealed virtual CodeDomProvider get_CodeDomProvider();
    public void set_CodeDomProvider(CodeDomProvider value);
    public sealed virtual bool get_DoNotCompile();
    public sealed virtual void set_DoNotCompile(bool value);
    private sealed virtual override IFileData Xpand.Persistent.Base.PersistentMetaData.IPersistentAssemblyInfo.get_StrongKeyFileData();
    private sealed virtual override void Xpand.Persistent.Base.PersistentMetaData.IPersistentAssemblyInfo.set_StrongKeyFileData(IFileData value);
    public sealed virtual string get_Errors();
    public sealed virtual void set_Errors(string value);
    private sealed virtual override IList`1<IPersistentClassInfo> Xpand.Persistent.Base.PersistentMetaData.IPersistentAssemblyInfo.get_PersistentClassInfos();
    private sealed virtual override Guid Xpand.Persistent.Base.PersistentMetaData.IPersistentAssemblyInfo.get_Oid();
    private sealed virtual override void Xpand.Persistent.Base.PersistentMetaData.IPersistentAssemblyInfo.set_Oid(Guid value);
}
[DefaultPropertyAttribute("AggregatedName")]
[DisplayNameAttribute("Aggregated")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentMemberInfo")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IExtendedMemberInfo")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentAttributeInfos.PersistentAggregatedAttribute : PersistentAttributeInfo {
    [BrowsableAttribute("False")]
[MemberDesignTimeVisibilityAttribute("False")]
public string AggregatedName { get; }
    public PersistentAggregatedAttribute(Session session);
    public string get_AggregatedName();
    public virtual AttributeInfoAttribute Create();
}
public abstract class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentAttributeInfos.PersistentAssemblyAttributeInfo : XpandBaseCustomObject {
    private PersistentAssemblyInfo _owner;
    [PersistentAttribute]
[SizeAttribute("255")]
[VisibleInDetailViewAttribute("False")]
public string Name { get; }
    [BrowsableAttribute("False")]
[PersistentAttribute]
[SizeAttribute("255")]
public string Type { get; }
    [VisibleInDetailViewAttribute("False")]
[VisibleInListViewAttribute("False")]
[VisibleInLookupListViewAttribute("False")]
[AssociationAttribute("PersistentAssemblyInfo-Attributes")]
public PersistentAssemblyInfo Owner { get; public set; }
    private IPersistentAssemblyInfo Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentAssemblyAttributeInfo.Owner { get; private set; }
    protected PersistentAssemblyAttributeInfo(Session session);
    public string get_Name();
    public string get_Type();
    public PersistentAssemblyInfo get_Owner();
    public void set_Owner(PersistentAssemblyInfo value);
    public abstract virtual AttributeInfoAttribute Create();
    private sealed virtual override IPersistentAssemblyInfo Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentAssemblyAttributeInfo.get_Owner();
    private sealed virtual override void Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentAssemblyAttributeInfo.set_Owner(IPersistentAssemblyInfo value);
}
[HideFromNewMenuAttribute]
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentAssemblyDataStoreAttribute")]
[CreateableItemAttribute]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentAttributeInfos.PersistentAssemblyDataStoreAttribute : PersistentAssemblyAttributeInfo {
    private string _connectionString;
    private PersistentClassInfo _persistentClassInfo;
    private IPersistentClassInfo Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentAssemblyDataStoreAttribute.PersistentClassInfo { get; private set; }
    [SizeAttribute("-1")]
public string ConnectionString { get; public set; }
    public PersistentClassInfo PersistentClassInfo { get; public set; }
    public PersistentAssemblyDataStoreAttribute(Session session);
    public virtual AttributeInfoAttribute Create();
    private sealed virtual override IPersistentClassInfo Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentAssemblyDataStoreAttribute.get_PersistentClassInfo();
    private sealed virtual override void Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentAssemblyDataStoreAttribute.set_PersistentClassInfo(IPersistentClassInfo value);
    public sealed virtual string get_ConnectionString();
    public sealed virtual void set_ConnectionString(string value);
    public PersistentClassInfo get_PersistentClassInfo();
    public void set_PersistentClassInfo(PersistentClassInfo value);
}
[HideFromNewMenuAttribute]
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentAssemblyDataStoreAttributeInfo")]
[CreateableItemAttribute]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentAttributeInfos.PersistentAssemblyDataStoreAttributeInfo : PersistentAssemblyAttributeInfo {
    private DataStoreLogonObject _dataStoreLogon;
    private string _connectionString;
    private PersistentClassInfo _persistentClassInfo;
    [BrowsableAttribute("False")]
[SizeAttribute("-1")]
public string ConnectionString { get; public set; }
    [NonPersistentAttribute]
public DataStoreLogonObject DataStoreLogon { get; public set; }
    public PersistentClassInfo PersistentClassInfo { get; public set; }
    private IPersistentClassInfo Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentAssemblyDataStoreAttributeInfo.PersistentClassInfo { get; private set; }
    private IDataStoreLogonObject Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentAssemblyDataStoreAttributeInfo.DataStoreLogon { get; private set; }
    public PersistentAssemblyDataStoreAttributeInfo(Session session);
    public string get_ConnectionString();
    public void set_ConnectionString(string value);
    public virtual AttributeInfoAttribute Create();
    public DataStoreLogonObject get_DataStoreLogon();
    public void set_DataStoreLogon(DataStoreLogonObject value);
    public PersistentClassInfo get_PersistentClassInfo();
    public void set_PersistentClassInfo(PersistentClassInfo value);
    private sealed virtual override IPersistentClassInfo Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentAssemblyDataStoreAttributeInfo.get_PersistentClassInfo();
    private sealed virtual override void Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentAssemblyDataStoreAttributeInfo.set_PersistentClassInfo(IPersistentClassInfo value);
    private sealed virtual override IDataStoreLogonObject Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentAssemblyDataStoreAttributeInfo.get_DataStoreLogon();
    private sealed virtual override void Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentAssemblyDataStoreAttributeInfo.set_DataStoreLogon(IDataStoreLogonObject value);
}
[DefaultPropertyAttribute("Version")]
[DisplayNameAttribute("Version")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentAttributeInfos.PersistentAssemblyVersionAttributeInfo : PersistentAssemblyAttributeInfo {
    private string _version;
    [ModelDefaultAttribute("EditMask", "#.#")]
public string Version { get; public set; }
    public PersistentAssemblyVersionAttributeInfo(Session session);
    public sealed virtual string get_Version();
    public sealed virtual void set_Version(string value);
    public virtual AttributeInfoAttribute Create();
}
[DefaultPropertyAttribute("AssociationName")]
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentAssociationAttribute")]
[DisplayNameAttribute("Association")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentMemberInfo")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IExtendedMemberInfo")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentAttributeInfos.PersistentAssociationAttribute : PersistentAttributeInfo {
    private RelationType _relationType;
    private string _associationName;
    private PersistentClassInfo _elementClassInfo;
    private Type _elementType;
    private bool _useAssociationNameAsIntermediateTableName;
    private string _elementTypeFullName;
    public RelationType RelationType { get; public set; }
    [VisibleInListViewAttribute("True")]
[RuleRequiredFieldAttribute]
[SizeAttribute("-1")]
public string AssociationName { get; public set; }
    [AttributeInfoAttribute]
public bool UseAssociationNameAsIntermediateTableName { get; public set; }
    [SizeAttribute("-1")]
[ValueConverterAttribute("Xpand.Extensions.XAF.Xpo.ValueConverters.TypeValueConverter")]
[TypeConverterAttribute("DevExpress.Persistent.Base.LocalizedClassInfoTypeConverter")]
public Type ElementType { get; public set; }
    public PersistentClassInfo ElementClassInfo { get; public set; }
    [SizeAttribute("-1")]
[BrowsableAttribute("False")]
public string ElementTypeFullName { get; public set; }
    public PersistentAssociationAttribute(Session session);
    public sealed virtual RelationType get_RelationType();
    public sealed virtual void set_RelationType(RelationType value);
    public sealed virtual string get_AssociationName();
    public sealed virtual void set_AssociationName(string value);
    public bool get_UseAssociationNameAsIntermediateTableName();
    public void set_UseAssociationNameAsIntermediateTableName(bool value);
    public Type get_ElementType();
    public void set_ElementType(Type value);
    public PersistentClassInfo get_ElementClassInfo();
    public void set_ElementClassInfo(PersistentClassInfo value);
    public sealed virtual string get_ElementTypeFullName();
    public sealed virtual void set_ElementTypeFullName(string value);
    public virtual AttributeInfoAttribute Create();
    private AttributeInfoAttribute GetElementTypeDefinedAttributeInfo();
}
public abstract class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentAttributeInfos.PersistentAttributeInfo : XpandBaseCustomObject {
    private PersistentTypeInfo _owner;
    [PersistentAttribute]
[SizeAttribute("-1")]
[VisibleInDetailViewAttribute("False")]
public string Name { get; }
    private IPersistentTypeInfo Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentAttributeInfo.Owner { get; private set; }
    [AssociationAttribute("TypeAttributes")]
[VisibleInDetailViewAttribute("False")]
[VisibleInListViewAttribute("False")]
[VisibleInLookupListViewAttribute("False")]
public PersistentTypeInfo Owner { get; public set; }
    protected PersistentAttributeInfo(Session session);
    public string get_Name();
    public abstract virtual AttributeInfoAttribute Create();
    private sealed virtual override IPersistentTypeInfo Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentAttributeInfo.get_Owner();
    private sealed virtual override void Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentAttributeInfo.set_Owner(IPersistentTypeInfo value);
    public PersistentTypeInfo get_Owner();
    public void set_Owner(PersistentTypeInfo value);
}
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentDefaulClassOptionsAttribute")]
[DefaultPropertyAttribute("DefaultClassOptionsName")]
[DisplayNameAttribute("DefaultClassOptions")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentClassInfo")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentAttributeInfos.PersistentDefaultClassOptionsAttribute : PersistentAttributeInfo {
    [BrowsableAttribute("False")]
[MemberDesignTimeVisibilityAttribute("False")]
public string DefaultClassOptionsName { get; }
    public PersistentDefaultClassOptionsAttribute(Session session);
    public string get_DefaultClassOptionsName();
    public virtual AttributeInfoAttribute Create();
}
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentKeyAttribute")]
[DefaultPropertyAttribute("KeyName")]
[DisplayNameAttribute("Key")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentMemberInfo")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IExtendedMemberInfo")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentAttributeInfos.PersistentKeyAttribute : PersistentAttributeInfo {
    private bool _autoGenerated;
    [BrowsableAttribute("False")]
[MemberDesignTimeVisibilityAttribute("False")]
public string KeyName { get; }
    public bool AutoGenerated { get; public set; }
    public PersistentKeyAttribute(Session session);
    public string get_KeyName();
    public sealed virtual bool get_AutoGenerated();
    public sealed virtual void set_AutoGenerated(bool value);
    public virtual AttributeInfoAttribute Create();
}
[DefaultPropertyAttribute("Map InheritanceType")]
[DisplayNameAttribute("MapInheritance")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentClassInfo")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentAttributeInfos.PersistentMapInheritanceAttribute : PersistentAttributeInfo {
    private MapInheritanceType _mapInheritanceType;
    public MapInheritanceType MapInheritanceType { get; public set; }
    public PersistentMapInheritanceAttribute(Session session);
    public sealed virtual MapInheritanceType get_MapInheritanceType();
    public sealed virtual void set_MapInheritanceType(MapInheritanceType value);
    public virtual AttributeInfoAttribute Create();
}
[DefaultPropertyAttribute("PropertyName")]
[DisplayNameAttribute("ModelDefault")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentMemberInfo")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentClassInfo")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IExtendedMemberInfo")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentAttributeInfos.PersistentModelDefaultAttribute : PersistentAttributeInfo {
    private string _propertyName;
    private string _value;
    public string PropertyName { get; public set; }
    public string Value { get; public set; }
    public PersistentModelDefaultAttribute(Session session);
    public sealed virtual string get_PropertyName();
    public sealed virtual void set_PropertyName(string value);
    public sealed virtual string get_Value();
    public sealed virtual void set_Value(string value);
    public virtual AttributeInfoAttribute Create();
}
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentPersistentAliasAttribute")]
[DefaultPropertyAttribute("AliasExpression")]
[DisplayNameAttribute("Persistent Alias")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentMemberInfo")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IExtendedMemberInfo")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentAttributeInfos.PersistentPersistentAliasAttribute : PersistentAttributeInfo {
    private string _aliasExpression;
    public string AliasExpression { get; public set; }
    public PersistentPersistentAliasAttribute(Session session);
    public sealed virtual string get_AliasExpression();
    public sealed virtual void set_AliasExpression(string value);
    public virtual AttributeInfoAttribute Create();
}
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentPersistentAttribute")]
[DefaultPropertyAttribute("MapTo")]
[DisplayNameAttribute("Persistent")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentMemberInfo")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentClassInfo")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IExtendedMemberInfo")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentAttributeInfos.PersistentPersistentAttribute : PersistentAttributeInfo {
    private string _mapTo;
    public string MapTo { get; public set; }
    public PersistentPersistentAttribute(Session session);
    public sealed virtual string get_MapTo();
    public sealed virtual void set_MapTo(string value);
    public virtual AttributeInfoAttribute Create();
}
[DefaultPropertyAttribute("CollectionName")]
[DisplayNameAttribute("Pivoted Property")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentMemberInfo")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IExtendedMemberInfo")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentAttributeInfos.PersistentPivotedPropertyAttribute : PersistentAttributeInfo {
    private string _associatedMemberName;
    private string _collectionName;
    private string _criteria;
    public string Criteria { get; public set; }
    public string CollectionName { get; public set; }
    public string AssociatedMemberName { get; public set; }
    public PersistentPivotedPropertyAttribute(Session session);
    public string get_Criteria();
    public void set_Criteria(string value);
    public string get_CollectionName();
    public void set_CollectionName(string value);
    public string get_AssociatedMemberName();
    public void set_AssociatedMemberName(string value);
    public virtual AttributeInfoAttribute Create();
}
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentRuleRequiredFieldAttribute")]
[DefaultPropertyAttribute("DefaultProperty")]
[DisplayNameAttribute("Rule Required")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentMemberInfo")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IExtendedMemberInfo")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentAttributeInfos.PersistentRuleRequiredFieldAttribute : PersistentAttributeInfo {
    private string _context;
    private string _iD;
    private string _targetCriteria;
    [BrowsableAttribute("False")]
[MemberDesignTimeVisibilityAttribute("False")]
public string DefaultProperty { get; }
    [SizeAttribute("-1")]
[AttributeInfoAttribute]
public string TargetCriteria { get; public set; }
    public string ID { get; public set; }
    [RuleRequiredFieldAttribute]
public string Context { get; public set; }
    public PersistentRuleRequiredFieldAttribute(Session session);
    public string get_DefaultProperty();
    public string get_TargetCriteria();
    public void set_TargetCriteria(string value);
    public sealed virtual string get_ID();
    public sealed virtual void set_ID(string value);
    public sealed virtual string get_Context();
    public sealed virtual void set_Context(string value);
    public virtual AttributeInfoAttribute Create();
}
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentSizeAttribute")]
[DefaultPropertyAttribute("Size")]
[DisplayNameAttribute("Size")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentMemberInfo")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IExtendedMemberInfo")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentAttributeInfos.PersistentSizeAttribute : PersistentAttributeInfo {
    private int _size;
    public int Size { get; public set; }
    public PersistentSizeAttribute(Session session);
    public virtual void AfterConstruction();
    public sealed virtual int get_Size();
    public sealed virtual void set_Size(int value);
    public virtual AttributeInfoAttribute Create();
}
[DefaultPropertyAttribute("ConverterType")]
[DisplayNameAttribute("Value Converter")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentMemberInfo")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IExtendedMemberInfo")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentAttributeInfos.PersistentValueConverter : PersistentAttributeInfo {
    private Type _converterType;
    [RuleRequiredFieldAttribute]
public Type ConverterType { get; public set; }
    public PersistentValueConverter(Session session);
    public Type get_ConverterType();
    public void set_ConverterType(Type value);
    public virtual AttributeInfoAttribute Create();
}
[DefaultPropertyAttribute("PersistentVisibleInDetailViewName")]
[DisplayNameAttribute("Visible In Detail View")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentMemberInfo")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IExtendedMemberInfo")]
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentVisibleInDetailViewAttribute")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentAttributeInfos.PersistentVisibleInDetailViewAttribute : PersistentAttributeInfo {
    private bool _visible;
    [BrowsableAttribute("False")]
[MemberDesignTimeVisibilityAttribute("False")]
public string PersistentVisibleInDetailViewName { get; }
    public bool Visible { get; public set; }
    public PersistentVisibleInDetailViewAttribute(Session session);
    public string get_PersistentVisibleInDetailViewName();
    public sealed virtual bool get_Visible();
    public sealed virtual void set_Visible(bool value);
    public virtual AttributeInfoAttribute Create();
}
[DefaultPropertyAttribute("PersistentVisibleInListViewName")]
[DisplayNameAttribute("Visible In ListView")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentMemberInfo")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IExtendedMemberInfo")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentAttributeInfos.PersistentVisibleInListViewAttribute : PersistentAttributeInfo {
    private bool _visible;
    [BrowsableAttribute("False")]
[MemberDesignTimeVisibilityAttribute("False")]
public string PersistentVisibleInListViewName { get; }
    public bool Visible { get; public set; }
    public PersistentVisibleInListViewAttribute(Session session);
    public string get_PersistentVisibleInListViewName();
    public bool get_Visible();
    public void set_Visible(bool value);
    public virtual AttributeInfoAttribute Create();
}
[DefaultPropertyAttribute("PersistentVisibleInLookupListViewName")]
[DisplayNameAttribute("Lisible In LookupView")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentMemberInfo")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IExtendedMemberInfo")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentAttributeInfos.PersistentVisibleInLookupListViewAttribute : PersistentAttributeInfo {
    private bool _visible;
    [BrowsableAttribute("False")]
[MemberDesignTimeVisibilityAttribute("False")]
public string PersistentVisibleInLookupListViewName { get; }
    public bool Visible { get; public set; }
    public PersistentVisibleInLookupListViewAttribute(Session session);
    public string get_PersistentVisibleInLookupListViewName();
    public bool get_Visible();
    public void set_Visible(bool value);
    public virtual AttributeInfoAttribute Create();
}
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.PersistentAttributeInfos.IPersistentNavigationItemAttribute")]
[DefaultPropertyAttribute("Path")]
[DisplayNameAttribute("Xpand Navigation")]
[CreateableItemAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentClassInfo")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentAttributeInfos.PersistentXpandNavigationItemAttribute : PersistentAttributeInfo {
    private string _viewId;
    private string _objectKey;
    private string _path;
    public string ViewId { get; public set; }
    public string ObjectKey { get; public set; }
    [RuleRequiredFieldAttribute]
[SizeAttribute("-1")]
public string Path { get; public set; }
    public PersistentXpandNavigationItemAttribute(Session session);
    public sealed virtual string get_ViewId();
    public sealed virtual void set_ViewId(string value);
    public sealed virtual string get_ObjectKey();
    public sealed virtual void set_ObjectKey(string value);
    public sealed virtual string get_Path();
    public sealed virtual void set_Path(string value);
    public virtual AttributeInfoAttribute Create();
}
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentClassesModuleInfo : XPBaseObject {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <ID>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <AssemblyFileName>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <IsMain>k__BackingField;
    [KeyAttribute("True")]
public int ID { get; public set; }
    public string Name { get; public set; }
    public string AssemblyFileName { get; public set; }
    public string Version { get; public set; }
    public bool IsMain { get; public set; }
    public PersistentClassesModuleInfo(Session session);
    [CompilerGeneratedAttribute]
public int get_ID();
    [CompilerGeneratedAttribute]
public void set_ID(int value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AssemblyFileName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AssemblyFileName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsMain();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsMain(bool value);
    public virtual string ToString();
}
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentClassInfo")]
[RuleObjectExistsAttribute]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentClassInfo : PersistentTemplatedTypeInfo {
    public static string KeyPropertiesMessage;
    private static string BaseTypeFullNameName;
    private static string MergedObjectFullNameName;
    private static string BaseTypeName;
    private PersistentClassInfo _baseClassInfo;
    private Type _baseType;
    private string _baseTypeFullName;
    private PersistentClassInfo _mergedClassInfo;
    private string _mergedObjectFullName;
    private Type _mergedObjectType;
    private PersistentAssemblyInfo _persistentAssemblyInfo;
    [IndexAttribute("0")]
[SizeAttribute("-1")]
[ValueConverterAttribute("Xpand.Extensions.XAF.Xpo.ValueConverters.TypeValueConverter")]
[TypeConverterAttribute("Xpand.Persistent.Base.XpandLocalizedClassInfoTypeConverter")]
[RuleRequiredFieldAttribute]
public Type BaseType { get; public set; }
    [IndexAttribute("1")]
[RuleRequiredFieldAttribute]
public PersistentClassInfo BaseClassInfo { get; public set; }
    [IndexAttribute("2")]
[SizeAttribute("-1")]
[ValueConverterAttribute("Xpand.Extensions.XAF.Xpo.ValueConverters.TypeValueConverter")]
[TypeConverterAttribute("DevExpress.Persistent.Base.LocalizedClassInfoTypeConverter")]
public Type MergedObjectType { get; public set; }
    [IndexAttribute("3")]
public PersistentClassInfo MergedClassInfo { get; public set; }
    [IndexAttribute("4")]
[VisibleInListViewAttribute("False")]
[ModelDefaultAttribute("AllowEdit", "false")]
[SizeAttribute("-1")]
[EditorAliasAttribute("CSCodePropertyEditor")]
public string GeneratedCode { get; }
    [AssociationAttribute("PersistentClassInfo-OwnMembers")]
[AggregatedAttribute]
public XPCollection`1<PersistentMemberInfo> OwnMembers { get; }
    [AssociationAttribute("PersistentClassInfos-Interfaces")]
public XPCollection`1<InterfaceInfo> Interfaces { get; }
    [AssociationAttribute("PersistentAssemblyInfo-PersistentClassInfos")]
public PersistentAssemblyInfo PersistentAssemblyInfo { get; public set; }
    [BrowsableAttribute("False")]
[SizeAttribute("-1")]
public string BaseTypeFullName { get; public set; }
    [BrowsableAttribute("False")]
[SizeAttribute("-1")]
public string MergedObjectFullName { get; public set; }
    private IList`1<IInterfaceInfo> Xpand.Persistent.Base.PersistentMetaData.IPersistentClassInfo.Interfaces { get; }
    private IPersistentAssemblyInfo Xpand.Persistent.Base.PersistentMetaData.IPersistentClassInfo.PersistentAssemblyInfo { get; private set; }
    private IList`1<IPersistentMemberInfo> Xpand.Persistent.Base.PersistentMetaData.IPersistentClassInfo.OwnMembers { get; }
    public PersistentClassInfo(Session session);
    public virtual void AfterConstruction();
    public sealed virtual Type get_BaseType();
    public sealed virtual void set_BaseType(Type value);
    public PersistentClassInfo get_BaseClassInfo();
    public void set_BaseClassInfo(PersistentClassInfo value);
    public Type get_MergedObjectType();
    public void set_MergedObjectType(Type value);
    public PersistentClassInfo get_MergedClassInfo();
    public void set_MergedClassInfo(PersistentClassInfo value);
    public string get_GeneratedCode();
    public XPCollection`1<PersistentMemberInfo> get_OwnMembers();
    public XPCollection`1<InterfaceInfo> get_Interfaces();
    public PersistentAssemblyInfo get_PersistentAssemblyInfo();
    public void set_PersistentAssemblyInfo(PersistentAssemblyInfo value);
    public sealed virtual string get_BaseTypeFullName();
    public sealed virtual void set_BaseTypeFullName(string value);
    public sealed virtual string get_MergedObjectFullName();
    public sealed virtual void set_MergedObjectFullName(string value);
    private sealed virtual override IList`1<IInterfaceInfo> Xpand.Persistent.Base.PersistentMetaData.IPersistentClassInfo.get_Interfaces();
    private sealed virtual override IPersistentAssemblyInfo Xpand.Persistent.Base.PersistentMetaData.IPersistentClassInfo.get_PersistentAssemblyInfo();
    private sealed virtual override void Xpand.Persistent.Base.PersistentMetaData.IPersistentClassInfo.set_PersistentAssemblyInfo(IPersistentAssemblyInfo value);
    private sealed virtual override IList`1<IPersistentMemberInfo> Xpand.Persistent.Base.PersistentMetaData.IPersistentClassInfo.get_OwnMembers();
    public sealed virtual bool IsPropertyValueValid(string propertyName, String& errorMessageTemplate, ContextIdentifiers contextIdentifiers, string ruleId);
}
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentCollectionMemberInfo")]
[RuleRequiredForAtLeast1PropertyAttribute]
[DisplayNameAttribute("Collection")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentCollectionMemberInfo : PersistentMemberInfo {
    private PersistentClassInfo _collectionClassInfo;
    private Type _collectionType;
    private string _collectionTypeFullName;
    [SizeAttribute("-1")]
[ValueConverterAttribute("Xpand.Extensions.XAF.Xpo.ValueConverters.TypeValueConverter")]
[TypeConverterAttribute("DevExpress.Persistent.Base.LocalizedClassInfoTypeConverter")]
public Type CollectionType { get; public set; }
    [BrowsableAttribute("False")]
public string CollectionTypeFullName { get; public set; }
    public PersistentClassInfo CollectionClassInfo { get; public set; }
    private IPersistentClassInfo Xpand.Persistent.Base.PersistentMetaData.IPersistentCollectionMemberInfo.CollectionClassInfo { get; private set; }
    public PersistentCollectionMemberInfo(Session session);
    public PersistentCollectionMemberInfo(PersistentAssociationAttribute persistentAssociationAttribute);
    public PersistentCollectionMemberInfo(Session session, PersistentAssociationAttribute persistentAssociationAttribute);
    public Type get_CollectionType();
    public void set_CollectionType(Type value);
    public sealed virtual string get_CollectionTypeFullName();
    public sealed virtual void set_CollectionTypeFullName(string value);
    private sealed virtual override void Xpand.Persistent.Base.PersistentMetaData.IPersistentCollectionMemberInfo.SetCollectionTypeFullName(string s);
    public PersistentClassInfo get_CollectionClassInfo();
    public void set_CollectionClassInfo(PersistentClassInfo value);
    private sealed virtual override IPersistentClassInfo Xpand.Persistent.Base.PersistentMetaData.IPersistentCollectionMemberInfo.get_CollectionClassInfo();
    private sealed virtual override void Xpand.Persistent.Base.PersistentMetaData.IPersistentCollectionMemberInfo.set_CollectionClassInfo(IPersistentClassInfo value);
}
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentCoreTypeMemberInfo")]
[DisplayNameAttribute("Core")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentCoreTypeMemberInfo : PersistentMemberInfo {
    private DBColumnType _dataType;
    public DBColumnType DataType { get; public set; }
    public PersistentCoreTypeMemberInfo(Session session);
    public sealed virtual DBColumnType get_DataType();
    public sealed virtual void set_DataType(DBColumnType value);
}
[RuleCombinationOfPropertiesIsUniqueAttribute]
public abstract class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentMemberInfo : PersistentTemplatedTypeInfo {
    private PersistentClassInfo _owner;
    [VisibleInDetailViewAttribute("False")]
[VisibleInListViewAttribute("True")]
[ModelDefaultAttribute("GroupIndex", "0")]
public string TypeInfoName { get; }
    [VisibleInListViewAttribute("False")]
[ModelDefaultAttribute("AllowEdit", "false")]
[SizeAttribute("-1")]
[EditorAliasAttribute("CSCodePropertyEditor")]
public string GeneratedCode { get; }
    [AssociationAttribute("PersistentClassInfo-OwnMembers")]
[VisibleInListViewAttribute("False")]
[VisibleInLookupListViewAttribute("False")]
public PersistentClassInfo Owner { get; public set; }
    private IPersistentClassInfo Xpand.Persistent.Base.PersistentMetaData.IPersistentMemberInfo.Owner { get; private set; }
    protected PersistentMemberInfo(Session session);
    public string get_TypeInfoName();
    public string get_GeneratedCode();
    public PersistentClassInfo get_Owner();
    public void set_Owner(PersistentClassInfo value);
    private sealed virtual override IPersistentClassInfo Xpand.Persistent.Base.PersistentMetaData.IPersistentMemberInfo.get_Owner();
    private sealed virtual override void Xpand.Persistent.Base.PersistentMetaData.IPersistentMemberInfo.set_Owner(IPersistentClassInfo value);
}
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.IPersistentReferenceMemberInfo")]
[RuleRequiredForAtLeast1PropertyAttribute]
[DisplayNameAttribute("Reference")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentReferenceMemberInfo : PersistentMemberInfo {
    private bool _autoGenerateOtherPartMember;
    private PersistentClassInfo _referenceClassInfo;
    private Type _referenceType;
    private string _referenceTypeFullName;
    [SizeAttribute("-1")]
[ValueConverterAttribute("Xpand.Extensions.XAF.Xpo.ValueConverters.TypeValueConverter")]
[TypeConverterAttribute("DevExpress.Persistent.Base.LocalizedClassInfoTypeConverter")]
public Type ReferenceType { get; public set; }
    public bool AutoGenerateOtherPartMember { get; public set; }
    [BrowsableAttribute("False")]
public string ReferenceTypeFullName { get; public set; }
    public PersistentClassInfo ReferenceClassInfo { get; public set; }
    private IPersistentClassInfo Xpand.Persistent.Base.PersistentMetaData.IPersistentReferenceMemberInfo.ReferenceClassInfo { get; private set; }
    public PersistentReferenceMemberInfo(Session session);
    public PersistentReferenceMemberInfo(Session session, PersistentAssociationAttribute persistentAssociationAttribute);
    public Type get_ReferenceType();
    public void set_ReferenceType(Type value);
    public bool get_AutoGenerateOtherPartMember();
    public void set_AutoGenerateOtherPartMember(bool value);
    public sealed virtual string get_ReferenceTypeFullName();
    public sealed virtual void set_ReferenceTypeFullName(string value);
    private sealed virtual override void Xpand.Persistent.Base.PersistentMetaData.IPersistentReferenceMemberInfo.SetReferenceTypeFullName(string value);
    public PersistentClassInfo get_ReferenceClassInfo();
    public void set_ReferenceClassInfo(PersistentClassInfo value);
    private sealed virtual override IPersistentClassInfo Xpand.Persistent.Base.PersistentMetaData.IPersistentReferenceMemberInfo.get_ReferenceClassInfo();
    private sealed virtual override void Xpand.Persistent.Base.PersistentMetaData.IPersistentReferenceMemberInfo.set_ReferenceClassInfo(IPersistentClassInfo value);
}
[AppearanceAttribute]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentTemplatedTypeInfo : PersistentTypeInfo {
    private CodeTemplateInfo _codeTemplateInfo;
    [AssociationAttribute("CodeTemplateInfo-PersistentTemplatedTypeInfos")]
public CodeTemplateInfo CodeTemplateInfo { get; public set; }
    private ICodeTemplateInfo Xpand.Persistent.Base.PersistentMetaData.IPersistentTemplatedTypeInfo.CodeTemplateInfo { get; private set; }
    public PersistentTemplatedTypeInfo(Session session);
    public CodeTemplateInfo get_CodeTemplateInfo();
    public void set_CodeTemplateInfo(CodeTemplateInfo value);
    private sealed virtual override ICodeTemplateInfo Xpand.Persistent.Base.PersistentMetaData.IPersistentTemplatedTypeInfo.get_CodeTemplateInfo();
    private sealed virtual override void Xpand.Persistent.Base.PersistentMetaData.IPersistentTemplatedTypeInfo.set_CodeTemplateInfo(ICodeTemplateInfo value);
}
[DefaultPropertyAttribute("Name")]
public abstract class Xpand.Persistent.BaseImpl.PersistentMetaData.PersistentTypeInfo : XpandBaseCustomObject {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private EventHandler`1<ObjectCreatedEventArgs> AfterConstructed;
    private string _name;
    [AssociationAttribute("TypeAttributes")]
[AggregatedAttribute]
public XPCollection`1<PersistentAttributeInfo> TypeAttributes { get; }
    private IList`1<ITemplateInfo> Xpand.Persistent.Base.PersistentMetaData.IPersistentTypeInfo.TemplateInfos { get; }
    [AssociationAttribute("PersistentTypeInfo-TemplateInfos")]
public XPCollection`1<TemplateInfo> TemplateInfos { get; }
    [RuleRequiredFieldAttribute]
public string Name { get; public set; }
    private IList`1<IPersistentAttributeInfo> Xpand.Persistent.Base.PersistentMetaData.IPersistentTypeInfo.TypeAttributes { get; }
    protected PersistentTypeInfo(Session session);
    [CompilerGeneratedAttribute]
public void add_AfterConstructed(EventHandler`1<ObjectCreatedEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_AfterConstructed(EventHandler`1<ObjectCreatedEventArgs> value);
    public void InvokeAfterConstructed(ObjectCreatedEventArgs e);
    public virtual void AfterConstruction();
    public XPCollection`1<PersistentAttributeInfo> get_TypeAttributes();
    private sealed virtual override IList`1<ITemplateInfo> Xpand.Persistent.Base.PersistentMetaData.IPersistentTypeInfo.get_TemplateInfos();
    public XPCollection`1<TemplateInfo> get_TemplateInfos();
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    private sealed virtual override IList`1<IPersistentAttributeInfo> Xpand.Persistent.Base.PersistentMetaData.IPersistentTypeInfo.get_TypeAttributes();
}
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.IDataStoreLogonObject")]
[NonPersistentAttribute]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.SqlMapperInfo : DataStoreLogonObject {
    private MapperInfo _mapperInfo;
    [IndexAttribute("5")]
[AggregatedAttribute]
[ExpandObjectMembersAttribute]
public MapperInfo MapperInfo { get; public set; }
    private IMapperInfo Xpand.Persistent.Base.PersistentMetaData.ISqlMapperInfo.MapperInfo { get; private set; }
    public SqlMapperInfo(Session session);
    public SqlMapperInfo(Session session, SqlMapperInfo sqlMapperInfo);
    public MapperInfo get_MapperInfo();
    public void set_MapperInfo(MapperInfo value);
    private sealed virtual override IMapperInfo Xpand.Persistent.Base.PersistentMetaData.ISqlMapperInfo.get_MapperInfo();
    private sealed virtual override void Xpand.Persistent.Base.PersistentMetaData.ISqlMapperInfo.set_MapperInfo(IMapperInfo value);
}
[PersistentAttribute]
[DefaultPropertyAttribute("FileName")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.StrongKeyFile : XpandBaseCustomObject {
    [PersistentAttribute]
private int _size;
    private string _fileName;
    public int Size { get; }
    [SizeAttribute("260")]
public string FileName { get; public set; }
    [PersistentAttribute]
[ValueConverterAttribute("DevExpress.Persistent.Base.CompressionConverter")]
[MemberDesignTimeVisibilityAttribute("False")]
[BrowsableAttribute("False")]
[EditorBrowsableAttribute("1")]
[DelayedAttribute("True")]
public Byte[] Content { get; public set; }
    [MemberDesignTimeVisibilityAttribute("False")]
public bool IsEmpty { get; }
    public StrongKeyFile(Session session);
    public sealed virtual int get_Size();
    public sealed virtual void LoadFromStream(string fileName, Stream stream);
    public sealed virtual void SaveToStream(Stream stream);
    public sealed virtual void Clear();
    public virtual string ToString();
    public sealed virtual string get_FileName();
    public sealed virtual void set_FileName(string value);
    public Byte[] get_Content();
    public void set_Content(Byte[] value);
    public sealed virtual bool get_IsEmpty();
}
[InterfaceRegistratorAttribute("Xpand.Persistent.Base.PersistentMetaData.ITemplateInfo")]
public class Xpand.Persistent.BaseImpl.PersistentMetaData.TemplateInfo : XpandBaseCustomObject {
    private string _name;
    private string _templateCode;
    private PersistentTypeInfo _persistentTypeInfo;
    [BrowsableAttribute("False")]
[AssociationAttribute("PersistentTypeInfo-TemplateInfos")]
public PersistentTypeInfo PersistentTypeInfo { get; public set; }
    [AssociationAttribute("TemplateInfo-CodeTemplateInfos")]
public XPCollection`1<CodeTemplateInfo> CodeTemplateInfos { get; }
    [RuleRequiredFieldAttribute]
public string Name { get; public set; }
    [SizeAttribute("-1")]
[EditorAliasAttribute("CSCodePropertyEditor")]
public string TemplateCode { get; public set; }
    public TemplateInfo(Session session);
    public PersistentTypeInfo get_PersistentTypeInfo();
    public void set_PersistentTypeInfo(PersistentTypeInfo value);
    public XPCollection`1<CodeTemplateInfo> get_CodeTemplateInfos();
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public sealed virtual string get_TemplateCode();
    public sealed virtual void set_TemplateCode(string value);
}
[NonPersistentAttribute]
public class Xpand.Persistent.BaseImpl.PivotChart.PivotOptionsBehavior : XpandBaseCustomObject {
    public PivotOptionsBehavior(Session session);
}
[NonPersistentAttribute]
public class Xpand.Persistent.BaseImpl.PivotChart.PivotOptionsChartDataSource : XpandBaseCustomObject {
    public PivotOptionsChartDataSource(Session session);
}
[NonPersistentAttribute]
public class Xpand.Persistent.BaseImpl.PivotChart.PivotOptionsCustomization : XpandBaseCustomObject {
    public PivotOptionsCustomization(Session session);
}
[NonPersistentAttribute]
public class Xpand.Persistent.BaseImpl.PivotChart.PivotOptionsData : XpandBaseCustomObject {
    public PivotOptionsData(Session session);
}
[NonPersistentAttribute]
public class Xpand.Persistent.BaseImpl.PivotChart.PivotOptionsDataField : XpandBaseCustomObject {
    public PivotOptionsDataField(Session session);
}
[NonPersistentAttribute]
public class Xpand.Persistent.BaseImpl.PivotChart.PivotOptionsFilterPopup : XpandBaseCustomObject {
    public PivotOptionsFilterPopup(Session session);
}
[NonPersistentAttribute]
public class Xpand.Persistent.BaseImpl.PivotChart.PivotOptionsHint : XpandBaseCustomObject {
    public PivotOptionsHint(Session session);
}
[NonPersistentAttribute]
public class Xpand.Persistent.BaseImpl.PivotChart.PivotOptionsMenu : XpandBaseCustomObject {
    public PivotOptionsMenu(Session session);
}
[NonPersistentAttribute]
public class Xpand.Persistent.BaseImpl.PivotChart.PivotOptionsSelection : XpandBaseCustomObject {
    public PivotOptionsSelection(Session session);
}
[NonPersistentAttribute]
public class Xpand.Persistent.BaseImpl.PivotChart.PivotOptionsView : XpandBaseCustomObject {
    public PivotOptionsView(Session session);
}
[NonPersistentAttribute]
public class Xpand.Persistent.BaseImpl.PivotChart.Web.PivotGridOptionsOLAP : XpandBaseCustomObject {
    public PivotGridOptionsOLAP(Session session);
}
[NonPersistentAttribute]
public class Xpand.Persistent.BaseImpl.PivotChart.Web.PivotGridWebOptionsChartDataSource : XpandBaseCustomObject {
    public PivotGridWebOptionsChartDataSource(Session session);
}
[NonPersistentAttribute]
public class Xpand.Persistent.BaseImpl.PivotChart.Web.PivotGridWebOptionsCustomization : XpandBaseCustomObject {
    public PivotGridWebOptionsCustomization(Session session);
}
[NonPersistentAttribute]
public class Xpand.Persistent.BaseImpl.PivotChart.Web.PivotGridWebOptionsLoadingPanel : XpandBaseCustomObject {
    public PivotGridWebOptionsLoadingPanel(Session session);
}
[NonPersistentAttribute]
public class Xpand.Persistent.BaseImpl.PivotChart.Web.PivotGridWebOptionsPager : XpandBaseCustomObject {
    public PivotGridWebOptionsPager(Session session);
}
[NonPersistentAttribute]
public class Xpand.Persistent.BaseImpl.PivotChart.Web.PivotGridWebOptionsView : XpandBaseCustomObject {
    public PivotGridWebOptionsView(Session session);
}
[DisplayNameAttribute("AnonymousLogin")]
public class Xpand.Persistent.BaseImpl.Security.PermissionPolicyData.AnonymousLoginOperationPermissionPolicyData : ModifierPermissionPolicyData {
    public AnonymousLoginOperationPermissionPolicyData(Session session);
    public virtual IList`1<IOperationPermission> GetPermissions();
}
[NonPersistentAttribute]
[RuleCriteriaAttribute]
[AppearanceAttribute]
[AppearanceAttribute]
[AppearanceAttribute]
[AppearanceAttribute]
public abstract class Xpand.Persistent.BaseImpl.Security.PermissionPolicyData.LogicRuleOperationPermissionPolicyData : PermissionPolicyData {
    private Type _objectTypeData;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <ID>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <ExecutionContextGroup>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <ActionExecutionContextGroup>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <ObjectChangedExecutionContextGroup>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <ViewContextGroup>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <FrameTemplateContextGroup>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <NormalCriteria>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <EmptyCriteria>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> <IsNew>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private FrameTemplateContext <FrameTemplateContext>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> <IsRootView>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nullable`1<int> <Index>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ViewType <ViewType>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nullable`1<ViewEditMode> <ViewEditMode>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <View>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IModelView <Xpand.Persistent.Base.Logic.ILogicRule.View>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nesting <Nesting>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Description>k__BackingField;
    [BrowsableAttribute("False")]
public bool HasFrameTemplateContextGroup { get; }
    [BrowsableAttribute("False")]
public bool HasViewContextGroup { get; }
    [BrowsableAttribute("False")]
public bool HasExecutionContextGroup { get; }
    [BrowsableAttribute("False")]
public bool HasActionContextGroup { get; }
    [RuleRequiredFieldAttribute]
[ValueConverterAttribute("Xpand.Extensions.XAF.Xpo.ValueConverters.TypeValueConverter")]
[TypeConverterAttribute("Xpand.Persistent.Base.XpandLocalizedClassInfoTypeConverter")]
[IndexAttribute("2")]
public Type ObjectTypeData { get; public set; }
    [RuleRequiredFieldAttribute]
[IndexAttribute("0")]
public string ID { get; public set; }
    private string Xpand.Persistent.Base.Logic.Model.ILogicRuleOperationPermissionData.ViewId { get; private set; }
    [IndexAttribute("9")]
public string ExecutionContextGroup { get; public set; }
    [IndexAttribute("12")]
public string ActionExecutionContextGroup { get; public set; }
    [InvisibleInAllViewsAttribute]
public string ObjectChangedExecutionContextGroup { get; public set; }
    [IndexAttribute("10")]
public string ViewContextGroup { get; public set; }
    [IndexAttribute("11")]
public string FrameTemplateContextGroup { get; public set; }
    [CriteriaOptionsAttribute("ObjectTypeData")]
[EditorAliasAttribute("ExtendedCriteriaPropertyEditor")]
[ModelDefaultAttribute("RowCount", "3")]
public string NormalCriteria { get; public set; }
    [CriteriaOptionsAttribute("ObjectTypeData")]
[EditorAliasAttribute("ExtendedCriteriaPropertyEditor")]
[ModelDefaultAttribute("RowCount", "3")]
public string EmptyCriteria { get; public set; }
    public Nullable`1<bool> IsNew { get; public set; }
    [IndexAttribute("7")]
public FrameTemplateContext FrameTemplateContext { get; public set; }
    [IndexAttribute("8")]
public Nullable`1<bool> IsRootView { get; public set; }
    [IndexAttribute("1")]
public Nullable`1<int> Index { get; public set; }
    [IndexAttribute("4")]
public ViewType ViewType { get; public set; }
    [IndexAttribute("6")]
public Nullable`1<ViewEditMode> ViewEditMode { get; public set; }
    [IndexAttribute("3")]
public string View { get; public set; }
    private IModelView Xpand.Persistent.Base.Logic.ILogicRule.View { get; private set; }
    [IndexAttribute("5")]
public Nesting Nesting { get; public set; }
    private string Xpand.Persistent.Base.Logic.IRule.Id { get; private set; }
    private ITypeInfo Xpand.Persistent.Base.Logic.ILogicRule.TypeInfo { get; private set; }
    [SizeAttribute("-1")]
public string Description { get; public set; }
    protected LogicRuleOperationPermissionPolicyData(Session session);
    public virtual IList`1<IOperationPermission> GetPermissions();
    protected abstract virtual Type GetPermissionType();
    public bool get_HasFrameTemplateContextGroup();
    public bool get_HasViewContextGroup();
    public bool get_HasExecutionContextGroup();
    public bool get_HasActionContextGroup();
    public virtual void AfterConstruction();
    public sealed virtual Type get_ObjectTypeData();
    public sealed virtual void set_ObjectTypeData(Type value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ID();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ID(string value);
    private sealed virtual override string Xpand.Persistent.Base.Logic.Model.ILogicRuleOperationPermissionData.get_ViewId();
    private sealed virtual override void Xpand.Persistent.Base.Logic.Model.ILogicRuleOperationPermissionData.set_ViewId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ExecutionContextGroup();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExecutionContextGroup(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ActionExecutionContextGroup();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ActionExecutionContextGroup(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ObjectChangedExecutionContextGroup();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ObjectChangedExecutionContextGroup(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ViewContextGroup();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ViewContextGroup(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_FrameTemplateContextGroup();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FrameTemplateContextGroup(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_NormalCriteria();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NormalCriteria(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_EmptyCriteria();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EmptyCriteria(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IsNew();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsNew(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public FrameTemplateContext get_FrameTemplateContext();
    [CompilerGeneratedAttribute]
public void set_FrameTemplateContext(FrameTemplateContext value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IsRootView();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsRootView(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual ViewType get_ViewType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ViewType(ViewType value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<ViewEditMode> get_ViewEditMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ViewEditMode(Nullable`1<ViewEditMode> value);
    [CompilerGeneratedAttribute]
public string get_View();
    [CompilerGeneratedAttribute]
public void set_View(string value);
    [CompilerGeneratedAttribute]
private sealed virtual override IModelView Xpand.Persistent.Base.Logic.ILogicRule.get_View();
    [CompilerGeneratedAttribute]
private sealed virtual override void Xpand.Persistent.Base.Logic.ILogicRule.set_View(IModelView value);
    [CompilerGeneratedAttribute]
public sealed virtual Nesting get_Nesting();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Nesting(Nesting value);
    private sealed virtual override string Xpand.Persistent.Base.Logic.IRule.get_Id();
    private sealed virtual override void Xpand.Persistent.Base.Logic.IRule.set_Id(string value);
    private sealed virtual override ITypeInfo Xpand.Persistent.Base.Logic.ILogicRule.get_TypeInfo();
    private sealed virtual override void Xpand.Persistent.Base.Logic.ILogicRule.set_TypeInfo(ITypeInfo value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Description();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Description(string value);
}
[MapInheritanceAttribute]
public abstract class Xpand.Persistent.BaseImpl.Security.PermissionPolicyData.ModifierPermissionPolicyData : PermissionPolicyData {
    private Modifier _modifier;
    public Modifier Modifier { get; public set; }
    protected ModifierPermissionPolicyData(Session session);
    public sealed virtual Modifier get_Modifier();
    public sealed virtual void set_Modifier(Modifier value);
}
[DisplayNameAttribute("MyDetails")]
public class Xpand.Persistent.BaseImpl.Security.PermissionPolicyData.MyDetailsOperationPermissionPolicyData : ModifierPermissionPolicyData {
    public MyDetailsOperationPermissionPolicyData(Session session);
    public virtual IList`1<IOperationPermission> GetPermissions();
}
[ImageNameAttribute("BO_Security_Permission_Type")]
public abstract class Xpand.Persistent.BaseImpl.Security.PermissionPolicyData.PermissionPolicyData : XpandCustomObject {
    private IEnumerable`1<XPMemberInfo> _propertyInfos;
    private XpandPermissionPolicyRole _role;
    [VisibleInDetailViewAttribute("False")]
public string Permission { get; }
    [VisibleInListViewAttribute("False")]
[VisibleInDetailViewAttribute("False")]
[AssociationAttribute("XpandPermissionPolicyRole-XpandPermissionDatas")]
public XpandPermissionPolicyRole Role { get; public set; }
    protected PermissionPolicyData(Session session);
    public virtual string ToString();
    public string get_Permission();
    protected virtual string GetPermissionInfoCaption();
    private string GetCaption(XPMemberInfo propertyInfo);
    private void EnumerateProperties();
    private bool InfoTypeMatch(XPMemberInfo info);
    private bool AttributesMatch(XPMemberInfo info);
    protected ITypeInfo GetPermissionTypeInfo(Type type);
    protected IList`1<IOperationPermission> GetOperationPermissions();
    protected ITypeInfo GetPermissionTypeInfo();
    public abstract virtual IList`1<IOperationPermission> GetPermissions();
    public XpandPermissionPolicyRole get_Role();
    public void set_Role(XpandPermissionPolicyRole value);
    [CompilerGeneratedAttribute]
private string <GetPermissionInfoCaption>b__5_0(string current, XPMemberInfo propertyInfo);
    [CompilerGeneratedAttribute]
private bool <EnumerateProperties>b__7_0(XPMemberInfo info);
}
[ExtensionAttribute]
public static class Xpand.Persistent.BaseImpl.Security.SecurityExtensions : object {
    [ExtensionAttribute]
public static IPermissionPolicyUser GetAnonymousPermissionPolicyUser(IPermissionPolicyRole systemRole);
    [ExtensionAttribute]
public static ISecurityUserWithRoles GetPermissionPolicyUser(IPermissionPolicyRole systemRole, string userName, string passWord);
    [ExtensionAttribute]
public static XpandPermissionPolicyRole GetAnonymousPermissionPolicyRole(IObjectSpace objectSpace, string roleName, bool selfReadOnlyPermissions);
    [ExtensionAttribute]
public static PermissionPolicyData CreateModifierPermissionPolicy(IObjectSpace objectSpace, Modifier modifier);
}
[ImageNameAttribute("BO_Role")]
[DisplayNameAttribute("Role")]
[MapInheritanceAttribute]
[AppearanceAttribute("HideHiddenNavigationItemsForAdministrators")]
[OverallCustomizationAllowedAttribute]
public class Xpand.Persistent.BaseImpl.Security.XpandPermissionPolicyRole : PermissionPolicyRole {
    private string _hiddenNavigationItems;
    [AssociationAttribute("XpandPermissionPolicyRole-XpandPermissionDatas")]
[AggregatedAttribute]
public XPCollection`1<PermissionPolicyData> Permissions { get; }
    [SizeAttribute("-1")]
public string HiddenNavigationItems { get; public set; }
    private IList`1<IOperationPermissionProvider> Xpand.ExpressApp.Security.Core.IXpandRoleCustomPermissions.Permissions { get; }
    public XpandPermissionPolicyRole(Session session);
    public XPCollection`1<PermissionPolicyData> get_Permissions();
    public sealed virtual string get_HiddenNavigationItems();
    public sealed virtual void set_HiddenNavigationItems(string value);
    private sealed virtual override IList`1<IOperationPermissionProvider> Xpand.ExpressApp.Security.Core.IXpandRoleCustomPermissions.get_Permissions();
    public virtual string ToString();
}
[ImageNameAttribute("BO_User")]
[DefaultPropertyAttribute("UserName")]
[DisplayNameAttribute("User")]
[MapInheritanceAttribute]
public class Xpand.Persistent.BaseImpl.Security.XpandPermissionPolicyUser : PermissionPolicyUser {
    private string _activation;
    private string _email;
    [InvisibleInAllViewsAttribute]
public string Activation { get; public set; }
    [ModelDefaultAttribute("IsEmail", "True")]
[EditorAliasAttribute("HyperLinkPropertyEditor")]
public string Email { get; public set; }
    public XpandPermissionPolicyUser(Session session);
    public string get_Activation();
    public void set_Activation(string value);
    public string get_Email();
    public void set_Email(string value);
}
[DisplayNameAttribute("StateMachineTransition")]
public class Xpand.Persistent.BaseImpl.StateMachine.StateMachineTransitionOperationPermissionPolicyData : PermissionPolicyData {
    private bool _hide;
    private string _stateCaption;
    private string _stateMachineName;
    public StateMachineTransitionModifier Modifier { get; }
    [ImmediatePostDataAttribute]
public string StateMachineName { get; public set; }
    [DataSourcePropertyAttribute("StateCaptions", "Mono.Cecil.CustomAttributeArgument[]")]
public string StateCaption { get; public set; }
    public bool Hide { get; public set; }
    public StateMachineTransitionOperationPermissionPolicyData(Session session);
    public StateMachineTransitionModifier get_Modifier();
    public sealed virtual string get_StateMachineName();
    public sealed virtual void set_StateMachineName(string value);
    public sealed virtual string get_StateCaption();
    public sealed virtual void set_StateCaption(string value);
    public sealed virtual bool get_Hide();
    public sealed virtual void set_Hide(bool value);
    public virtual IList`1<IOperationPermission> GetPermissions();
    private IList`1<IOperationPermission> GetOperationPermissions();
}
public class Xpand.Persistent.BaseImpl.XpandDateRange : XpandCustomObject {
    private string _name;
    private DateTime _startPoint;
    private DateTime _endPoint;
    [RuleUniqueValueAttribute]
[RuleRequiredFieldAttribute]
public string Name { get; public set; }
    [DisplayDateAndTime]
public DateTime StartPoint { get; public set; }
    [DisplayDateAndTime]
public DateTime EndPoint { get; public set; }
    public XpandDateRange(Session session);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public sealed virtual DateTime get_StartPoint();
    public sealed virtual void set_StartPoint(DateTime value);
    public sealed virtual DateTime get_EndPoint();
    public sealed virtual void set_EndPoint(DateTime value);
}
