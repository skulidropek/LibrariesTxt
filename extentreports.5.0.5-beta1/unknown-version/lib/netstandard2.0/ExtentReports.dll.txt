public enum AventStack.ExtentReports.AnalysisStrategy : Enum {
    public int value__;
    public static AnalysisStrategy BDD;
    public static AnalysisStrategy Class;
    public static AnalysisStrategy Test;
}
[DefaultMemberAttribute("Item")]
public class AventStack.ExtentReports.Collections.SynchronizedList`1 : object {
    private List`1<T> _list;
    public T Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public sealed virtual T get_Item(int index);
    public sealed virtual void set_Item(int index, T value);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual void Add(T item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(T item);
    public sealed virtual void CopyTo(T[] array, int arrayIndex);
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    public sealed virtual int IndexOf(T item);
    public sealed virtual void Insert(int index, T item);
    public sealed virtual bool Remove(T item);
    public sealed virtual void RemoveAt(int index);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public class AventStack.ExtentReports.Config.ConfigStore : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Dictionary`2<string, object> <Store>k__BackingField;
    public Dictionary`2<string, object> Store { get; }
    public bool IsEmpty { get; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Store();
    public bool get_IsEmpty();
    public void AddConfig(string k, string v);
    public void RemoveConfig(string k);
    public bool Contains(string k);
    public object GetConfig(string k);
    public void Extend(IDictionary`2<string, object> dict);
}
public class AventStack.ExtentReports.Config.JsonConfigLoader : object {
    public void LoadJSONConfig(T& config, string filePath);
}
internal class AventStack.ExtentReports.Config.XmlConfigLoader : object {
    public void LoadXMLConfig(T& config, string filePath);
}
public abstract class AventStack.ExtentReports.Core.AbstractProcessor : ReactiveSubject {
    protected internal bool UsingNaturalConf;
    private String[] _mediaResolverPath;
    protected internal void OnTestCreated(Test test);
    protected internal void OnTestRemoved(Test test);
    protected internal void OnNodeCreated(Test node);
    protected internal void OnLogCreated(Log log, Test test);
    protected internal void OnMediaAdded(Media m, Test test);
    protected internal void OnMediaAdded(Media m, Log log, Test test);
    private void TryResolveMediaPath(Media media);
    protected internal void TryResolveMediaPath(String[] path);
    protected internal void OnAuthorAdded(Author x, Test test);
    protected internal void OnCategoryAdded(Category x, Test test);
    protected internal void OnDeviceAdded(Device x, Test test);
    protected internal void OnFlush();
    protected internal void OnReportLogAdded(string log);
    protected internal void OnSystemInfoAdded(SystemEnvInfo env);
    protected internal void ConvertRawEntities(ExtentReports extent, string filePath);
}
internal class AventStack.ExtentReports.Core.GherkinKeywordNotFoundException : Exception {
    public GherkinKeywordNotFoundException(string message);
    public GherkinKeywordNotFoundException(string message, Exception innerException);
}
public abstract class AventStack.ExtentReports.Core.ReactiveSubject : object {
    private Subject`1<ReportEntity> _reportSubject;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Report <Report>k__BackingField;
    protected Report Report { get; }
    [CompilerGeneratedAttribute]
protected Report get_Report();
    protected internal void Subscribe(IObserver`1<ReportEntity> obj);
    protected internal void Flush();
}
[ExtensionAttribute]
internal static class AventStack.ExtentReports.Extensions.ConcurrentQueueExtensions : object {
    [ExtensionAttribute]
public static void Clear(ConcurrentQueue`1<T> queue);
}
[ExtensionAttribute]
internal static class AventStack.ExtentReports.Extensions.DictionaryExtensions : object {
    [ExtensionAttribute]
public static void AddRange(IDictionary`2<T, V> source, IDictionary`2<T, V> collection);
}
[ExtensionAttribute]
public static class AventStack.ExtentReports.Extensions.StatusExtensions : object {
    [ExtensionAttribute]
public static Status Min(Status s1, Status s2);
    public static Status Min(Status[] status);
    [ExtensionAttribute]
public static Status Max(Status s1, Status s2);
    public static Status Max(Status[] status);
}
public class AventStack.ExtentReports.ExtentReports : AbstractProcessor {
    public string GherkinDialect { get; public set; }
    public bool UseNaturalTime { get; public set; }
    public Status Status { get; }
    public Report Report { get; }
    public string get_GherkinDialect();
    public void set_GherkinDialect(string value);
    public bool get_UseNaturalTime();
    public void set_UseNaturalTime(bool value);
    public Status get_Status();
    public Report get_Report();
    public void AttachReporter(IObserver`1[] observer);
    public ExtentTest CreateTest(GherkinKeyword keyword, string name, string description);
    public ExtentTest CreateTest(string name, string description);
    public ExtentTest CreateTest(string name, string description);
    public void RemoveTest(int id);
    public void RemoveTest(string name);
    public void RemoveTest(ExtentTest test);
    public void Flush();
    public void AddSystemInfo(string name, string value);
    public void AddTestRunnerLogs(string log);
    public void AddTestRunnerLogs(String[] log);
    public void AddTestRunnerLogs(List`1<string> log);
    public void TryResolveMediaPath(String[] path);
    public void TryResolveMediaPath(string path);
    public void CreateDomainFromJsonArchive(string filePath);
    [CompilerGeneratedAttribute]
private void <AddTestRunnerLogs>b__21_0(string x);
}
public class AventStack.ExtentReports.ExtentTest : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Test <Test>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ExtentReports <Extent>k__BackingField;
    public Status Status { get; }
    public Test Test { get; private set; }
    public Test Model { get; }
    public ExtentReports Extent { get; private set; }
    internal ExtentTest(ExtentReports extent, GherkinKeyword bddType, string name, string description);
    internal ExtentTest(ExtentReports extent, string name, string description);
    public Status get_Status();
    [CompilerGeneratedAttribute]
public Test get_Test();
    [CompilerGeneratedAttribute]
private void set_Test(Test value);
    public Test get_Model();
    [CompilerGeneratedAttribute]
public ExtentReports get_Extent();
    [CompilerGeneratedAttribute]
private void set_Extent(ExtentReports value);
    public ExtentTest CreateNode(GherkinKeyword keyword, string name, string description);
    private void Notify(Test t);
    public ExtentTest CreateNode(string name, string description);
    public ExtentTest CreateNode(string name, string description);
    public void RemoveNode(ExtentTest test);
    public ExtentTest GenerateLog(Status status, string details);
    public ExtentTest GenerateLog(Status status, IMarkup markup);
    public ExtentTest Log(Status status, string details, Exception ex, Media media);
    public ExtentTest Log(Status status, string details, Media media);
    public ExtentTest Log(Status status, Media media);
    public ExtentTest Log(Status status, Exception ex, Media media);
    public ExtentTest Log(Status status, Exception ex);
    public ExtentTest Log(Status status, string details);
    public ExtentTest Log(Status status, IMarkup m);
    public ExtentTest Info(string details, Media media);
    public ExtentTest Info(Exception ex, Media media);
    public ExtentTest Info(Media media);
    public ExtentTest Info(IMarkup m);
    public ExtentTest Pass(string details, Media media);
    public ExtentTest Pass(Exception ex, Media media);
    public ExtentTest Pass(Media media);
    public ExtentTest Pass(IMarkup m);
    public ExtentTest Fail(string details, Media media);
    public ExtentTest Fail(Media media);
    public ExtentTest Fail(Exception ex, Media media);
    public ExtentTest Fail(IMarkup m);
    public ExtentTest Warning(string details, Media media);
    public ExtentTest Warning(Exception ex, Media media);
    public ExtentTest Warning(Media media);
    public ExtentTest Warning(IMarkup m);
    public ExtentTest Skip(string details, Media media);
    public ExtentTest Skip(Exception ex, Media media);
    public ExtentTest Skip(IMarkup m);
    public ExtentTest Skip(Media media);
    public ExtentTest AssignAuthor(String[] author);
    public ExtentTest AssignCategory(String[] category);
    public ExtentTest AssignDevice(String[] device);
    public ExtentTest AddScreenCaptureFromPath(string path, string title);
    public ExtentTest AddScreenCaptureFromBase64String(string base64, string title);
}
public class AventStack.ExtentReports.Gherkin.GherkinDialect : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private GherkinKeywords <Keywords>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Language>k__BackingField;
    public GherkinKeywords Keywords { get; private set; }
    public string Language { get; private set; }
    public GherkinDialect(string language, GherkinKeywords keywords);
    [CompilerGeneratedAttribute]
public GherkinKeywords get_Keywords();
    [CompilerGeneratedAttribute]
private void set_Keywords(GherkinKeywords value);
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
private void set_Language(string value);
    public string Match(string keyword);
}
public static class AventStack.ExtentReports.Gherkin.GherkinDialectProvider : object {
    private static string LangFileName;
    private static string _lang;
    private static GherkinKeywords _keywords;
    private static GherkinDialect _dialect;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private static Dictionary`2<string, GherkinKeywords> <Dialects>k__BackingField;
    public static Dictionary`2<string, GherkinKeywords> Dialects { get; private set; }
    public static GherkinDialect Dialect { get; public set; }
    public static string Lang { get; public set; }
    private static GherkinDialectProvider();
    [CompilerGeneratedAttribute]
public static Dictionary`2<string, GherkinKeywords> get_Dialects();
    [CompilerGeneratedAttribute]
private static void set_Dialects(Dictionary`2<string, GherkinKeywords> value);
    public static GherkinDialect get_Dialect();
    public static void set_Dialect(GherkinDialect value);
    public static string get_Lang();
    public static void set_Lang(string value);
    private static void LoadDialects();
    private static void SetDialect(string lang);
}
public class AventStack.ExtentReports.Gherkin.GherkinKeyword : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <OriginalName>k__BackingField;
    public string Name { get; private set; }
    public string OriginalName { get; private set; }
    public GherkinKeyword(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_OriginalName();
    [CompilerGeneratedAttribute]
private void set_OriginalName(string value);
    private void CreateDomain();
}
public class AventStack.ExtentReports.Gherkin.GherkinKeywords : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ISet`1<string> <And>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ISet`1<string> <Background>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ISet`1<string> <But>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ISet`1<string> <Examples>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ISet`1<string> <Feature>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ISet`1<string> <Given>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Native>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ISet`1<string> <Scenario>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ISet`1<string> <ScenarioOutline>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ISet`1<string> <Then>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ISet`1<string> <When>k__BackingField;
    public ISet`1<string> And { get; public set; }
    public ISet`1<string> Background { get; public set; }
    public ISet`1<string> But { get; public set; }
    public ISet`1<string> Examples { get; public set; }
    public ISet`1<string> Feature { get; public set; }
    public ISet`1<string> Given { get; public set; }
    public string Name { get; public set; }
    public string Native { get; public set; }
    public ISet`1<string> Scenario { get; public set; }
    public ISet`1<string> ScenarioOutline { get; public set; }
    public ISet`1<string> Then { get; public set; }
    public ISet`1<string> When { get; public set; }
    [CompilerGeneratedAttribute]
public ISet`1<string> get_And();
    [CompilerGeneratedAttribute]
public void set_And(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public ISet`1<string> get_Background();
    [CompilerGeneratedAttribute]
public void set_Background(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public ISet`1<string> get_But();
    [CompilerGeneratedAttribute]
public void set_But(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public ISet`1<string> get_Examples();
    [CompilerGeneratedAttribute]
public void set_Examples(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public ISet`1<string> get_Feature();
    [CompilerGeneratedAttribute]
public void set_Feature(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public ISet`1<string> get_Given();
    [CompilerGeneratedAttribute]
public void set_Given(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Native();
    [CompilerGeneratedAttribute]
public void set_Native(string value);
    [CompilerGeneratedAttribute]
public ISet`1<string> get_Scenario();
    [CompilerGeneratedAttribute]
public void set_Scenario(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public ISet`1<string> get_ScenarioOutline();
    [CompilerGeneratedAttribute]
public void set_ScenarioOutline(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public ISet`1<string> get_Then();
    [CompilerGeneratedAttribute]
public void set_Then(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public ISet`1<string> get_When();
    [CompilerGeneratedAttribute]
public void set_When(ISet`1<string> value);
}
public class AventStack.ExtentReports.Gherkin.InvalidGherkinLanguageException : ArgumentException {
    public InvalidGherkinLanguageException(string message);
    protected InvalidGherkinLanguageException(SerializationInfo info, StreamingContext context);
}
public class AventStack.ExtentReports.Gherkin.Model.And : object {
    public static string Name;
    public virtual string ToString();
}
public class AventStack.ExtentReports.Gherkin.Model.Asterisk : object {
    public static string Name;
    public virtual string ToString();
}
public class AventStack.ExtentReports.Gherkin.Model.Background : object {
    public static string Name;
    private static Background();
    public virtual string ToString();
}
public class AventStack.ExtentReports.Gherkin.Model.But : object {
    public static string Name;
    private static But();
    public virtual string ToString();
}
public class AventStack.ExtentReports.Gherkin.Model.Feature : object {
    public static string Name;
    private static Feature();
    public virtual string ToString();
}
public class AventStack.ExtentReports.Gherkin.Model.Given : object {
    public static string Name;
    private static Given();
    public virtual string ToString();
}
public interface AventStack.ExtentReports.Gherkin.Model.IGherkinFormatterModel {
}
public class AventStack.ExtentReports.Gherkin.Model.Scenario : object {
    public static string Name;
    private static Scenario();
    public virtual string ToString();
}
public class AventStack.ExtentReports.Gherkin.Model.ScenarioOutline : object {
    public static string Name;
    private static ScenarioOutline();
    public virtual string ToString();
}
public class AventStack.ExtentReports.Gherkin.Model.Then : object {
    public static string Name;
    private static Then();
    public virtual string ToString();
}
public class AventStack.ExtentReports.Gherkin.Model.When : object {
    public static string Name;
    private static When();
    public virtual string ToString();
}
internal interface AventStack.ExtentReports.Gherkin.Resource.IGherkinResource {
}
public class AventStack.ExtentReports.Listener.Entity.AttributeEntity : object {
}
public interface AventStack.ExtentReports.Listener.Entity.IObservedEntity {
}
public class AventStack.ExtentReports.Listener.Entity.LogEntity : object {
}
public class AventStack.ExtentReports.Listener.Entity.MediaEntity : object {
}
public class AventStack.ExtentReports.Listener.Entity.NamedAttributeTestEntity : object {
}
public class AventStack.ExtentReports.Listener.Entity.ReportEntity : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Report <Report>k__BackingField;
    public Report Report { get; public set; }
    [CompilerGeneratedAttribute]
public Report get_Report();
    [CompilerGeneratedAttribute]
public void set_Report(Report value);
}
public class AventStack.ExtentReports.Listener.Entity.TestEntity : object {
}
public interface AventStack.ExtentReports.Listener.IExtentObserver`1 {
}
public interface AventStack.ExtentReports.Listener.IReportObserver`1 {
}
internal class AventStack.ExtentReports.MarkupUtils.CodeBlock : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private String[] <Code>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private CodeLanguage <CodeLang>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <_id>k__BackingField;
    private static int _cntr;
    public String[] Code { get; public set; }
    public CodeLanguage CodeLang { get; public set; }
    private int _id { get; }
    [CompilerGeneratedAttribute]
public String[] get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(String[] value);
    [CompilerGeneratedAttribute]
public CodeLanguage get_CodeLang();
    [CompilerGeneratedAttribute]
public void set_CodeLang(CodeLanguage value);
    [CompilerGeneratedAttribute]
private int get__id();
    public sealed virtual string GetMarkup();
}
public enum AventStack.ExtentReports.MarkupUtils.CodeLanguage : Enum {
    public int value__;
    public static CodeLanguage Json;
    public static CodeLanguage Xml;
}
public enum AventStack.ExtentReports.MarkupUtils.ExtentColor : Enum {
    public int value__;
    public static ExtentColor Red;
    public static ExtentColor Pink;
    public static ExtentColor Purple;
    public static ExtentColor Indigo;
    public static ExtentColor Blue;
    public static ExtentColor Cyan;
    public static ExtentColor Teal;
    public static ExtentColor Green;
    public static ExtentColor Lime;
    public static ExtentColor Yellow;
    public static ExtentColor Amber;
    public static ExtentColor Orange;
    public static ExtentColor Brown;
    public static ExtentColor Grey;
    public static ExtentColor White;
    public static ExtentColor Black;
    public static ExtentColor Transparent;
}
public interface AventStack.ExtentReports.MarkupUtils.IMarkup {
    public abstract virtual string GetMarkup();
}
internal class AventStack.ExtentReports.MarkupUtils.Label : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ExtentColor <Color>k__BackingField;
    public string Text { get; public set; }
    public ExtentColor Color { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public ExtentColor get_Color();
    [CompilerGeneratedAttribute]
public void set_Color(ExtentColor value);
    public sealed virtual string GetMarkup();
}
internal class AventStack.ExtentReports.MarkupUtils.ListMarkup`1 : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IEnumerable`1<T> <Object>k__BackingField;
    public string Type { get; internal set; }
    public IEnumerable`1<T> Object { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
internal void set_Type(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<T> get_Object();
    [CompilerGeneratedAttribute]
internal void set_Object(IEnumerable`1<T> value);
    public sealed virtual string GetMarkup();
}
internal enum AventStack.ExtentReports.MarkupUtils.ListType : Enum {
    public int value__;
    public static ListType OL;
    public static ListType UL;
}
public class AventStack.ExtentReports.MarkupUtils.MarkupHelper : object {
    public static IMarkup CreateLabel(string text, ExtentColor color);
    public static IMarkup CreateCodeBlock(string code, CodeLanguage lang);
    public static IMarkup CreateCodeBlock(String[] code);
    public static IMarkup CreateTable(String[0...,0...] data);
    public static IMarkup ToTable(object obj);
    public static IMarkup CreateOrderedList(IEnumerable`1<T> enumerable);
    public static IMarkup CreateUnorderedList(IEnumerable`1<T> enumerable);
}
internal class AventStack.ExtentReports.MarkupUtils.Table`1 : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private String[0...,0...] <Data>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private object <Object>k__BackingField;
    public String[0...,0...] Data { get; internal set; }
    public object Object { get; internal set; }
    [CompilerGeneratedAttribute]
public String[0...,0...] get_Data();
    [CompilerGeneratedAttribute]
internal void set_Data(String[0...,0...] value);
    [CompilerGeneratedAttribute]
public object get_Object();
    [CompilerGeneratedAttribute]
internal void set_Object(object value);
    public sealed virtual string GetMarkup();
}
public class AventStack.ExtentReports.MediaEntityBuilder : object {
    private static string Base64Encoded;
    private static MediaEntityBuilder _instance;
    private static ThreadLocal`1<Media> _media;
    private static MediaEntityBuilder();
    public Media Build();
    public static MediaEntityBuilder CreateScreenCaptureFromPath(string path, string title);
    public static MediaEntityBuilder CreateScreenCaptureFromPath(string path);
    public static MediaEntityBuilder CreateScreenCaptureFromBase64String(string base64, string title);
    public static MediaEntityBuilder CreateScreenCaptureFromBase64String(string base64);
}
public class AventStack.ExtentReports.Model.Author : NamedAttribute {
    public Author(string name);
}
public class AventStack.ExtentReports.Model.Category : NamedAttribute {
    public Category(string name);
}
public class AventStack.ExtentReports.Model.Context.Manager.NamedAttributeContextManager`1 : object {
    public ConcurrentDictionary`2<string, NamedAttributeContext`1<T>> Context;
    public bool HasItems { get; }
    public bool get_HasItems();
    public void AddContext(T attr, Test test);
    public void AddContext(T attr, ConcurrentBag`1<Test> bag);
    public void RemoveTest(Test test);
    public void RefreshAll();
}
public class AventStack.ExtentReports.Model.Context.NamedAttributeContext`1 : object {
    public static int adding;
    public static int removing;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ConcurrentQueue`1<Test> <Tests>k__BackingField;
    public T Attr;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <Passed>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <Failed>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <Skipped>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <Others>k__BackingField;
    private static object _synclock;
    public ConcurrentQueue`1<Test> Tests { get; private set; }
    public int Passed { get; private set; }
    public int Failed { get; private set; }
    public int Skipped { get; private set; }
    public int Others { get; private set; }
    public NamedAttributeContext`1(T attr, Test test);
    private static NamedAttributeContext`1();
    [CompilerGeneratedAttribute]
public ConcurrentQueue`1<Test> get_Tests();
    [CompilerGeneratedAttribute]
private void set_Tests(ConcurrentQueue`1<Test> value);
    [CompilerGeneratedAttribute]
public int get_Passed();
    [CompilerGeneratedAttribute]
private void set_Passed(int value);
    [CompilerGeneratedAttribute]
public int get_Failed();
    [CompilerGeneratedAttribute]
private void set_Failed(int value);
    [CompilerGeneratedAttribute]
public int get_Skipped();
    [CompilerGeneratedAttribute]
private void set_Skipped(int value);
    [CompilerGeneratedAttribute]
public int get_Others();
    [CompilerGeneratedAttribute]
private void set_Others(int value);
    public void AddTest(Test test);
    private void Compute(Test test);
    public void Refresh();
    public void RemoveTest(Test test);
    public void Reset();
    public int Count();
}
public class AventStack.ExtentReports.Model.Context.SharedContext`1 : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private NamedAttributeContextManager`1<T> <Ctx>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <View>k__BackingField;
    public NamedAttributeContextManager`1<T> Ctx { get; public set; }
    public string View { get; public set; }
    [CompilerGeneratedAttribute]
public NamedAttributeContextManager`1<T> get_Ctx();
    [CompilerGeneratedAttribute]
public void set_Ctx(NamedAttributeContextManager`1<T> value);
    [CompilerGeneratedAttribute]
public string get_View();
    [CompilerGeneratedAttribute]
public void set_View(string value);
}
internal class AventStack.ExtentReports.Model.Convert.TestEntityParser : object {
    private ExtentReports _extent;
    public TestEntityParser(ExtentReports extent);
    public void CreateEntities(string jsonFilePath);
    public void CreateEntity(Test test, ExtentTest extentTest);
}
public class AventStack.ExtentReports.Model.Device : NamedAttribute {
    public Device(string name);
}
public class AventStack.ExtentReports.Model.ExceptionInfo : NamedAttribute {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Exception <Exception>k__BackingField;
    public Exception Exception { get; public set; }
    public ExceptionInfo(Exception ex);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
public void set_Exception(Exception value);
}
[ExtensionAttribute]
public static class AventStack.ExtentReports.Model.ExtensionMethods.ClonedExtensions : object {
    [ExtensionAttribute]
public static T DeepClone(T obj);
}
public interface AventStack.ExtentReports.Model.IBaseEntity {
}
public interface AventStack.ExtentReports.Model.IMetaDataStorable {
    public IDictionary`2<string, object> Info { get; }
    public abstract virtual IDictionary`2<string, object> get_Info();
}
public interface AventStack.ExtentReports.Model.IRunResult`1 {
    public Status Status { get; }
    public abstract virtual Status get_Status();
}
public class AventStack.ExtentReports.Model.Log : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private DateTime <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Status <Status>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Details>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <Seq>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ExceptionInfo <ExceptionInfo>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ScreenCapture <Media>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IDictionary`2<string, object> <Info>k__BackingField;
    public DateTime Timestamp { get; public set; }
    public Status Status { get; public set; }
    public string Details { get; public set; }
    public int Seq { get; public set; }
    public ExceptionInfo ExceptionInfo { get; public set; }
    public ScreenCapture Media { get; public set; }
    public IDictionary`2<string, object> Info { get; public set; }
    public bool HasMedia { get; }
    public bool HasException { get; }
    public Log(Status status);
    [CompilerGeneratedAttribute]
public DateTime get_Timestamp();
    [CompilerGeneratedAttribute]
public void set_Timestamp(DateTime value);
    [CompilerGeneratedAttribute]
public sealed virtual Status get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(Status value);
    [CompilerGeneratedAttribute]
public string get_Details();
    [CompilerGeneratedAttribute]
public void set_Details(string value);
    [CompilerGeneratedAttribute]
public int get_Seq();
    [CompilerGeneratedAttribute]
public void set_Seq(int value);
    [CompilerGeneratedAttribute]
public ExceptionInfo get_ExceptionInfo();
    [CompilerGeneratedAttribute]
public void set_ExceptionInfo(ExceptionInfo value);
    [CompilerGeneratedAttribute]
public ScreenCapture get_Media();
    [CompilerGeneratedAttribute]
public void set_Media(ScreenCapture value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Info();
    [CompilerGeneratedAttribute]
public void set_Info(IDictionary`2<string, object> value);
    public bool get_HasMedia();
    public bool get_HasException();
    public void AddMedia(Media media);
}
public class AventStack.ExtentReports.Model.Media : object {
    private static int _cntr;
    public int Id;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <ResolvedPath>k__BackingField;
    public IDictionary`2<string, object> Info;
    public string Path { get; public set; }
    public string Title { get; public set; }
    public string ResolvedPath { get; public set; }
    public Media(string path, string title);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_ResolvedPath();
    [CompilerGeneratedAttribute]
public void set_ResolvedPath(string value);
}
public abstract class AventStack.ExtentReports.Model.NamedAttribute : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Name>k__BackingField;
    public string Name { get; public set; }
    protected NamedAttribute(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public abstract class AventStack.ExtentReports.Model.NameValuePair : NamedAttribute {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Value>k__BackingField;
    public string Value { get; public set; }
    public NameValuePair(string name, string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
public class AventStack.ExtentReports.Model.Report : object {
    public AnalysisStrategy AnalysisStrategy;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private DateTime <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private DateTime <EndTime>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ReportStats <Stats>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IList`1<Test> <Tests>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private NamedAttributeContextManager`1<Author> <AuthorCtx>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private NamedAttributeContextManager`1<Category> <CategoryCtx>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private NamedAttributeContextManager`1<Device> <DeviceCtx>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private NamedAttributeContextManager`1<ExceptionInfo> <ExceptionInfoCtx>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ConcurrentQueue`1<string> <Logs>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private List`1<SystemEnvInfo> <SystemEnvInfo>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IDictionary`2<string, object> <Info>k__BackingField;
    private object _synclock;
    public DateTime StartTime { get; public set; }
    public DateTime EndTime { get; public set; }
    public ReportStats Stats { get; }
    public IList`1<Test> Tests { get; private set; }
    public NamedAttributeContextManager`1<Author> AuthorCtx { get; }
    public NamedAttributeContextManager`1<Category> CategoryCtx { get; }
    public NamedAttributeContextManager`1<Device> DeviceCtx { get; }
    public NamedAttributeContextManager`1<ExceptionInfo> ExceptionInfoCtx { get; }
    public ConcurrentQueue`1<string> Logs { get; }
    public List`1<SystemEnvInfo> SystemEnvInfo { get; }
    public IDictionary`2<string, object> Info { get; public set; }
    public Status Status { get; }
    public bool IsBDD { get; }
    public TimeSpan TimeTaken { get; }
    public bool HasAuthors { get; }
    public bool HasCategories { get; }
    public bool HasDevices { get; }
    public bool HasExceptions { get; }
    public bool HasTests { get; }
    [CompilerGeneratedAttribute]
public DateTime get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_EndTime();
    [CompilerGeneratedAttribute]
public void set_EndTime(DateTime value);
    [CompilerGeneratedAttribute]
public ReportStats get_Stats();
    [CompilerGeneratedAttribute]
public IList`1<Test> get_Tests();
    [CompilerGeneratedAttribute]
private void set_Tests(IList`1<Test> value);
    [CompilerGeneratedAttribute]
public NamedAttributeContextManager`1<Author> get_AuthorCtx();
    [CompilerGeneratedAttribute]
public NamedAttributeContextManager`1<Category> get_CategoryCtx();
    [CompilerGeneratedAttribute]
public NamedAttributeContextManager`1<Device> get_DeviceCtx();
    [CompilerGeneratedAttribute]
public NamedAttributeContextManager`1<ExceptionInfo> get_ExceptionInfoCtx();
    [CompilerGeneratedAttribute]
public ConcurrentQueue`1<string> get_Logs();
    [CompilerGeneratedAttribute]
public List`1<SystemEnvInfo> get_SystemEnvInfo();
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Info();
    [CompilerGeneratedAttribute]
public void set_Info(IDictionary`2<string, object> value);
    public void Refresh();
    public Status get_Status();
    public bool get_IsBDD();
    public TimeSpan get_TimeTaken();
    public bool get_HasAuthors();
    public bool get_HasCategories();
    public bool get_HasDevices();
    public bool get_HasExceptions();
    public bool get_HasTests();
    public void AddTest(Test test);
    public void RemoveTest(IList`1<Test> tests, Test test, bool deep);
    public void RemoveTest(Test test);
    public void RemoveTest(int id);
    public void ApplyOverrideConf();
    public bool AnyTestHasStatus(Status status);
    public Test FindTest(IList`1<Test> list, string name);
    public Test FindTest(string name);
    public Test FindTest(IList`1<Test> list, int id);
    public Test FindTest(int id);
}
public class AventStack.ExtentReports.Model.ReportStats : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private AnalysisStrategy <AnalysisStrategy>k__BackingField;
    public ConcurrentDictionary`2<Status, int> Parent;
    public ConcurrentDictionary`2<Status, int> Child;
    public ConcurrentDictionary`2<Status, int> Grandchild;
    public ConcurrentDictionary`2<Status, int> Log;
    public ConcurrentDictionary`2<Status, double> ParentPercentage;
    public ConcurrentDictionary`2<Status, double> ChildPercentage;
    public ConcurrentDictionary`2<Status, double> GrandchildPercentage;
    public ConcurrentDictionary`2<Status, double> LogPercentage;
    private static List`1<Status> _status;
    public AnalysisStrategy AnalysisStrategy { get; public set; }
    private static ReportStats();
    [CompilerGeneratedAttribute]
public AnalysisStrategy get_AnalysisStrategy();
    [CompilerGeneratedAttribute]
public void set_AnalysisStrategy(AnalysisStrategy value);
    public void Update(IEnumerable`1<Test> tests);
    private void Update(IEnumerable`1<IRunResult`1<T>> list, ConcurrentDictionary`2& countDict, ConcurrentDictionary`2& percentDict);
    public void Reset();
    public int SumStat(IDictionary`2<Status, int> dict);
}
public class AventStack.ExtentReports.Model.ScreenCapture : Media {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Base64>k__BackingField;
    public string Base64 { get; public set; }
    public bool IsBase64 { get; }
    public ScreenCapture(string path, string title);
    [CompilerGeneratedAttribute]
public string get_Base64();
    [CompilerGeneratedAttribute]
public void set_Base64(string value);
    public bool get_IsBase64();
}
public class AventStack.ExtentReports.Model.SystemEnvInfo : NameValuePair {
    public SystemEnvInfo(string name, string value);
}
public class AventStack.ExtentReports.Model.Test : object {
    private static char Separator;
    private StatusDeterminator _determinator;
    private static int _cntr;
    private object _synclock;
    public int Id;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <UseNaturalConf>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private DateTime <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private DateTime <EndTime>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Status <Status>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <Level>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <Leaf>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private GherkinKeyword <BddType>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IList`1<Test> <Children>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ConcurrentQueue`1<Log> <Logs>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ConcurrentQueue`1<Log> <GeneratedLog>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private List`1<ScreenCapture> <Media>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private List`1<ExceptionInfo> <ExceptionInfo>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ISet`1<Author> <Author>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ISet`1<Category> <Category>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ISet`1<Device> <Device>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IDictionary`2<string, object> <Info>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Test <Parent>k__BackingField;
    public bool UseNaturalConf { get; public set; }
    public DateTime StartTime { get; public set; }
    public DateTime EndTime { get; public set; }
    public Status Status { get; public set; }
    public int Level { get; public set; }
    public bool Leaf { get; public set; }
    public string Name { get; public set; }
    public string Description { get; public set; }
    public GherkinKeyword BddType { get; public set; }
    public IList`1<Test> Children { get; public set; }
    public ConcurrentQueue`1<Log> Logs { get; public set; }
    public ConcurrentQueue`1<Log> GeneratedLog { get; public set; }
    public List`1<ScreenCapture> Media { get; public set; }
    public List`1<ExceptionInfo> ExceptionInfo { get; public set; }
    public ISet`1<Author> Author { get; public set; }
    public ISet`1<Category> Category { get; public set; }
    public ISet`1<Device> Device { get; public set; }
    public IDictionary`2<string, object> Info { get; public set; }
    [JsonIgnoreAttribute]
public Test Parent { get; public set; }
    public string FullName { get; }
    [JsonIgnoreAttribute]
public Test Ancestor { get; }
    public TimeSpan RunDuration { get; }
    public double TimeTaken { get; }
    public bool IsBdd { get; }
    public bool HasAnyLog { get; }
    public bool HasGeneratedLog { get; }
    public bool HasLog { get; }
    public bool HasChildren { get; }
    public bool HasAttributes { get; }
    public bool HasAuthor { get; }
    public bool HasCategory { get; }
    public bool HasDevice { get; }
    public bool HasScreenCapture { get; }
    public bool HasScreenCaptureDeep { get; }
    public Test(string name, string description, GherkinKeyword bddType);
    [CompilerGeneratedAttribute]
public bool get_UseNaturalConf();
    [CompilerGeneratedAttribute]
public void set_UseNaturalConf(bool value);
    [CompilerGeneratedAttribute]
public DateTime get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_EndTime();
    [CompilerGeneratedAttribute]
public void set_EndTime(DateTime value);
    [CompilerGeneratedAttribute]
public sealed virtual Status get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(Status value);
    [CompilerGeneratedAttribute]
public int get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(int value);
    [CompilerGeneratedAttribute]
public bool get_Leaf();
    [CompilerGeneratedAttribute]
public void set_Leaf(bool value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public GherkinKeyword get_BddType();
    [CompilerGeneratedAttribute]
public void set_BddType(GherkinKeyword value);
    [CompilerGeneratedAttribute]
public IList`1<Test> get_Children();
    [CompilerGeneratedAttribute]
public void set_Children(IList`1<Test> value);
    [CompilerGeneratedAttribute]
public ConcurrentQueue`1<Log> get_Logs();
    [CompilerGeneratedAttribute]
public void set_Logs(ConcurrentQueue`1<Log> value);
    [CompilerGeneratedAttribute]
public ConcurrentQueue`1<Log> get_GeneratedLog();
    [CompilerGeneratedAttribute]
public void set_GeneratedLog(ConcurrentQueue`1<Log> value);
    [CompilerGeneratedAttribute]
public List`1<ScreenCapture> get_Media();
    [CompilerGeneratedAttribute]
public void set_Media(List`1<ScreenCapture> value);
    [CompilerGeneratedAttribute]
public List`1<ExceptionInfo> get_ExceptionInfo();
    [CompilerGeneratedAttribute]
public void set_ExceptionInfo(List`1<ExceptionInfo> value);
    [CompilerGeneratedAttribute]
public ISet`1<Author> get_Author();
    [CompilerGeneratedAttribute]
public void set_Author(ISet`1<Author> value);
    [CompilerGeneratedAttribute]
public ISet`1<Category> get_Category();
    [CompilerGeneratedAttribute]
public void set_Category(ISet`1<Category> value);
    [CompilerGeneratedAttribute]
public ISet`1<Device> get_Device();
    [CompilerGeneratedAttribute]
public void set_Device(ISet`1<Device> value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Info();
    [CompilerGeneratedAttribute]
public void set_Info(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public Test get_Parent();
    [CompilerGeneratedAttribute]
public void set_Parent(Test value);
    public string get_FullName();
    public Test get_Ancestor();
    public TimeSpan get_RunDuration();
    public double get_TimeTaken();
    public bool get_IsBdd();
    public void AddChild(Test test);
    private void End(Status s);
    private void Propagate();
    public void AddLog(Log log);
    public void AddGeneratedLog(Log log);
    private void AddLogCommon(Log log);
    public void AddMedia(ScreenCapture m);
    public bool get_HasAnyLog();
    public bool get_HasGeneratedLog();
    public bool get_HasLog();
    public bool get_HasChildren();
    public bool get_HasAttributes();
    public bool get_HasAuthor();
    public bool get_HasCategory();
    public bool get_HasDevice();
    public bool get_HasScreenCapture();
    public bool get_HasScreenCaptureDeep();
    private bool HasScreenCaptureDeepImpl(Test test);
    public void UpdateResult();
}
public abstract class AventStack.ExtentReports.Reporter.AbstractFileReporter : AbstractFilterableReporter`1<ExtentSparkReporter> {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <SavePath>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <FolderSavePath>k__BackingField;
    internal string SavePath { get; internal set; }
    internal string FolderSavePath { get; internal set; }
    public AbstractFileReporter(string filePath);
    [CompilerGeneratedAttribute]
internal string get_SavePath();
    [CompilerGeneratedAttribute]
internal void set_SavePath(string value);
    [CompilerGeneratedAttribute]
internal string get_FolderSavePath();
    [CompilerGeneratedAttribute]
internal void set_FolderSavePath(string value);
}
public abstract class AventStack.ExtentReports.Reporter.AbstractFilterableReporter`1 : AbstractReporter {
    public sealed virtual Report FilterReport(Report report, HashSet`1<Status> set);
    private void RefreshContext(Report cloned);
}
public class AventStack.ExtentReports.Reporter.AbstractReporter : object {
}
public class AventStack.ExtentReports.Reporter.Config.AbstractConfiguration : object {
    protected ConfigStore Store;
    [XmlElementAttribute("reportName")]
public string ReportName;
}
[XmlRootAttribute("configuration")]
public class AventStack.ExtentReports.Reporter.Config.ExtentSparkReporterConfig : InteractiveReporterConfig {
    private static string OfflinePackage;
    private static string Package;
    private static string DefaultTimeStampFormat;
    private bool _offline;
    private string _timestampFormat;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ExtentSparkReporter <Reporter>k__BackingField;
    internal ExtentSparkReporter Reporter { get; internal set; }
    [XmlElementAttribute("offlineMode")]
public bool OfflineMode { get; public set; }
    [XmlElementAttribute("timeStampFormat")]
public string TimeStampFormat { get; public set; }
    [JsonConstructorAttribute]
public ExtentSparkReporterConfig(ExtentSparkReporter reporter);
    [CompilerGeneratedAttribute]
internal ExtentSparkReporter get_Reporter();
    [CompilerGeneratedAttribute]
internal void set_Reporter(ExtentSparkReporter value);
    public bool get_OfflineMode();
    public void set_OfflineMode(bool value);
    public string get_TimeStampFormat();
    public void set_TimeStampFormat(string value);
    internal void SaveOfflineResources();
    [CompilerGeneratedAttribute]
private void <set_OfflineMode>b__11_0();
}
public class AventStack.ExtentReports.Reporter.Config.FileReporterConfig : AbstractConfiguration {
    [XmlElementAttribute("encoding")]
public string Encoding;
    [XmlElementAttribute("documentTitle")]
public string DocumentTitle;
}
public class AventStack.ExtentReports.Reporter.Config.InteractiveReporterConfig : FileReporterConfig {
    private string OfflinePackage;
    [XmlElementAttribute("protocol")]
public Protocol Protocol;
    [XmlElementAttribute("theme")]
public Theme Theme;
    [XmlElementAttribute("timelineEnabled")]
public bool TimelineEnabled;
    [XmlElementAttribute("styles")]
public string CSS;
    [XmlElementAttribute("scripts")]
public string JS;
    protected void SaveResourceToDisk(string resourceStreamPath, string savePath);
    protected void SaveBinaryResourceToDisk(string resourceStreamPath, string savePath);
    protected void SaveCommonsResources(string folderPath, bool saveFontAwesomeFonts);
}
public interface AventStack.ExtentReports.Reporter.Config.IReporterConfigurable {
    public abstract virtual void LoadJSONConfig(string filePath);
    public abstract virtual void LoadXMLConfig(string filePath);
    public abstract virtual void LoadConfig(string filePath);
}
public enum AventStack.ExtentReports.Reporter.Config.Protocol : Enum {
    public int value__;
    public static Protocol HTTP;
    public static Protocol HTTPS;
}
public enum AventStack.ExtentReports.Reporter.Config.Theme : Enum {
    public int value__;
    public static Theme Standard;
    public static Theme Dark;
}
public class AventStack.ExtentReports.Reporter.ExtentJsonFormatter : AbstractFileReporter {
    public ExtentJsonFormatter(string filePath);
    public sealed virtual void OnCompleted();
    public sealed virtual void OnError(Exception error);
    public sealed virtual void OnNext(ReportEntity value);
}
public class AventStack.ExtentReports.Reporter.ExtentSparkReporter : AbstractFileReporter {
    private EntityFilters`1<ExtentSparkReporter> _filter;
    public ExtentSparkReporterConfig Config;
    public Report Report;
    public EntityFilters`1<ExtentSparkReporter> Filter { get; }
    public ExtentSparkReporter(string filePath);
    public sealed virtual EntityFilters`1<ExtentSparkReporter> get_Filter();
    public sealed virtual void LoadJSONConfig(string filePath);
    private void ApplyConfig();
    public sealed virtual void LoadXMLConfig(string filePath);
    public sealed virtual void LoadConfig(string filePath);
    public sealed virtual void OnCompleted();
    public sealed virtual void OnError(Exception error);
    public sealed virtual void OnNext(ReportEntity value);
    private void AddTemplates();
}
public class AventStack.ExtentReports.Reporter.Filter.ContextFilter : object {
    private static ContextFilter Filter;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private HashSet`1<Status> <Status>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private HashSet`1<string> <Author>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private HashSet`1<string> <Category>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private HashSet`1<string> <Device>k__BackingField;
    public HashSet`1<Status> Status { get; public set; }
    public HashSet`1<string> Author { get; public set; }
    public HashSet`1<string> Category { get; public set; }
    public HashSet`1<string> Device { get; public set; }
    public static ContextFilterBuilder Builder { get; }
    private static ContextFilter();
    [CompilerGeneratedAttribute]
public HashSet`1<Status> get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(HashSet`1<Status> value);
    [CompilerGeneratedAttribute]
public HashSet`1<string> get_Author();
    [CompilerGeneratedAttribute]
public void set_Author(HashSet`1<string> value);
    [CompilerGeneratedAttribute]
public HashSet`1<string> get_Category();
    [CompilerGeneratedAttribute]
public void set_Category(HashSet`1<string> value);
    [CompilerGeneratedAttribute]
public HashSet`1<string> get_Device();
    [CompilerGeneratedAttribute]
public void set_Device(HashSet`1<string> value);
    public static ContextFilterBuilder get_Builder();
}
public class AventStack.ExtentReports.Reporter.Filter.EntityFilters`1 : object {
    public StatusFilter`1<T> StatusFilter;
    private T _reporter;
    public EntityFilters`1(T reporter);
    public T Apply();
}
public interface AventStack.ExtentReports.Reporter.Filter.IReporterFilterable`1 {
    public EntityFilters`1<T> Filter { get; }
    public abstract virtual EntityFilters`1<T> get_Filter();
}
public interface AventStack.ExtentReports.Reporter.Filter.IStatusFilterable`1 {
    public abstract virtual Report FilterReport(Report report, HashSet`1<Status> set);
}
public class AventStack.ExtentReports.Reporter.Filter.StatusFilter`1 : object {
    private EntityFilters`1<T> _configurer;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private HashSet`1<Status> <Status>k__BackingField;
    public HashSet`1<Status> Status { get; private set; }
    public StatusFilter`1(EntityFilters`1<T> configurer);
    [CompilerGeneratedAttribute]
public HashSet`1<Status> get_Status();
    [CompilerGeneratedAttribute]
private void set_Status(HashSet`1<Status> value);
    public EntityFilters`1<T> As(HashSet`1<Status> status);
    public EntityFilters`1<T> As(List`1<Status> status);
    public EntityFilters`1<T> As(Status[] status);
}
public interface AventStack.ExtentReports.Reporter.IExtentReporter {
}
public class AventStack.ExtentReports.Reporter.Model.SparkReporterTest : object {
    public ExtentSparkReporter Reporter;
    public Test Test;
    public SparkReporterTest(ExtentSparkReporter reporter, Test test);
}
internal class AventStack.ExtentReports.Reporter.Templating.RazorEngineManager : object {
    private bool _initialized;
    private static Lazy`1<RazorEngineManager> lazy;
    public IRazorEngineService Razor { get; }
    public static RazorEngineManager Instance { get; }
    private static RazorEngineManager();
    public IRazorEngineService get_Razor();
    internal void InitializeRazor();
    public static RazorEngineManager get_Instance();
}
internal static class AventStack.ExtentReports.Reporter.Templating.TemplateLoadService : object {
    public static void LoadTemplate(string template);
    public static void LoadTemplate(String[] templates);
}
public enum AventStack.ExtentReports.Status : Enum {
    public int value__;
    public static Status Info;
    public static Status Pass;
    public static Status Warning;
    public static Status Skip;
    public static Status Error;
    public static Status Fail;
}
internal static class AventStack.ExtentReports.Util.Assert : object {
    public static void NotNull(object o, string message);
    public static void NotEmpty(string s, string message);
}
internal interface AventStack.ExtentReports.Views.Commons.ICommonsMarker {
}
internal interface AventStack.ExtentReports.Views.IViewsMarker {
}
internal interface AventStack.ExtentReports.Views.Spark.ISparkMarker {
}
