[AutoOpenAttribute]
[ObsoleteAttribute("FAKE0001 Use the Fake.Sql module instead.")]
[CompilationMappingAttribute("7")]
public static class Fake.SQL.SqlServer : object {
    [ObsoleteAttribute("FAKE0001 Use the Fake.Sql module instead.")]
public static ServerInfo getServerInfo(string connectionString);
    [ObsoleteAttribute("FAKE0001 Use the Fake.Sql module instead.")]
public static IEnumerable`1<Database> getDatabasesFromServer(ServerInfo serverInfo);
    [ObsoleteAttribute("FAKE0001 Use the Fake.Sql module instead.")]
public static IEnumerable`1<string> getDatabaseNamesFromServer(ServerInfo serverInfo);
    [ObsoleteAttribute("FAKE0001 Use the Fake.Sql module instead.")]
public static string getDBName(ServerInfo serverInfo);
    [ObsoleteAttribute("FAKE0001 Use the Fake.Sql module instead.")]
public static string getServerName(ServerInfo serverInfo);
    [ObsoleteAttribute("FAKE0001 Use the Fake.Sql module and `dbExistsOnServer` instead.")]
[CompilationArgumentCountsAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static bool existDBOnServer(ServerInfo serverInfo, string dbName);
    [ObsoleteAttribute("FAKE0001 Use the Fake.Sql module instead.")]
public static Database getDatabase(ServerInfo serverInfo);
    [ObsoleteAttribute("FAKE0001 Use the Fake.Sql module instead.")]
public static bool intitialCatalogExistsOnServer(ServerInfo serverInfo);
    [ObsoleteAttribute("FAKE0001 Use the Fake.Sql module instead.")]
public static ServerInfo DropDb(ServerInfo serverInfo);
    [ObsoleteAttribute("FAKE0001 Use the Fake.Sql module instead.")]
public static ServerInfo KillAllProcesses(ServerInfo serverInfo);
    [ObsoleteAttribute("FAKE0001 Use the Fake.Sql module instead.")]
public static ServerInfo Detach(ServerInfo serverInfo);
    [ObsoleteAttribute("FAKE0001 Use the Fake.Sql module instead.")]
[CompilationArgumentCountsAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ServerInfo Attach(ServerInfo serverInfo, AttachOptions attachOptions, IEnumerable`1<string> files);
    [ObsoleteAttribute("FAKE0001 Use the Fake.Sql module instead.")]
public static ServerInfo CreateDb(ServerInfo serverInfo);
    [ObsoleteAttribute("FAKE0001 Use the Fake.Sql module instead.")]
[CompilationArgumentCountsAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static void runScript(ServerInfo serverInfo, string sqlFile);
    [ObsoleteAttribute("FAKE0001 Use the Fake.Sql module instead.")]
public static void Disconnect(ServerInfo serverInfo);
    [CompilationArgumentCountsAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal static void replaceDatabaseFiles(string connectionString, AttachOptions attachOptions, FSharpFunc`2<Unit, a> copyF);
    [ObsoleteAttribute("FAKE0001 Use the Fake.Sql module instead.")]
[CompilationArgumentCountsAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static void ReplaceDatabaseFiles(string connectionString, string targetDir, IEnumerable`1<string> files, AttachOptions attachOptions);
    [ObsoleteAttribute("FAKE0001 Use the Fake.Sql module instead.")]
[CompilationArgumentCountsAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static void ReplaceDatabaseFilesWithCache(string connectionString, string targetDir, string cacheDir, IEnumerable`1<string> files, AttachOptions attachOptions);
    [ObsoleteAttribute("FAKE0001 Use the Fake.Sql module instead.")]
public static void DropAndCreateDatabase(string connectionString);
    [ObsoleteAttribute("FAKE0001 Use the Fake.Sql module instead.")]
[CompilationArgumentCountsAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static void RunScripts(string connectionString, IEnumerable`1<string> scripts);
    [ObsoleteAttribute("FAKE0001 Use the Fake.Sql module instead.")]
[CompilationArgumentCountsAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static void RunScriptsFromDirectory(string connectionString, string scriptDirectory);
}
[CompilationMappingAttribute("7")]
internal static class System.AssemblyVersionInformation : object {
    [LiteralAttribute]
[DebuggerBrowsableAttribute("0")]
internal static string AssemblyTitle;
    [LiteralAttribute]
[DebuggerBrowsableAttribute("0")]
internal static string Guid;
    [LiteralAttribute]
[DebuggerBrowsableAttribute("0")]
internal static string AssemblyProduct;
    [LiteralAttribute]
[DebuggerBrowsableAttribute("0")]
internal static string AssemblyVersion;
    [LiteralAttribute]
[DebuggerBrowsableAttribute("0")]
internal static string AssemblyInformationalVersion;
    [LiteralAttribute]
[DebuggerBrowsableAttribute("0")]
internal static string AssemblyFileVersion;
    [LiteralAttribute]
[DebuggerBrowsableAttribute("0")]
internal static string AssemblyMetadata_BuildDate;
}
