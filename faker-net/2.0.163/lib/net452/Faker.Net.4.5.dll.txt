public static class Faker.Address : object {
    private static IEnumerable`1<Func`1<string>> CityFormats;
    private static IEnumerable`1<Func`1<String[]>> StreetFormats;
    private static IEnumerable`1<Func`1<string>> StreetAddressFormats;
    private static Address();
    public static string Country();
    public static string ZipCode();
    public static string UsMilitaryState();
    public static string UsMilitaryStateAbbr();
    public static string UsTerritory();
    public static string UsTerritoryStateAbbr();
    public static string UsState();
    public static string UsStateAbbr();
    public static string CityPrefix();
    public static string CitySuffix();
    public static string City();
    public static string StreetSuffix();
    public static string StreetName();
    public static string StreetAddress(bool includeSecondary);
    public static string SecondaryAddress();
    public static string UkCounty();
    public static string UkCountry();
    public static string UkPostCode();
    public static string CaProvince();
}
public static class Faker.Boolean : object {
    public static bool Random();
}
public static class Faker.Company : object {
    private static IEnumerable`1<Func`1<string>> NameFormats;
    private static Company();
    public static string Name();
    public static string Suffix();
    public static string CatchPhrase();
    public static string BS();
}
public static class Faker.Config : object {
    [CompilerGeneratedAttribute]
private static char <Separator>k__BackingField;
    public static char Separator { get; public set; }
    private static Config();
    [CompilerGeneratedAttribute]
public static char get_Separator();
    [CompilerGeneratedAttribute]
public static void set_Separator(char value);
}
public static class Faker.Country : object {
    public static string TwoLetterCode();
    public static string Name();
}
public static class Faker.Currency : object {
    public static string ThreeLetterCode();
    public static string Name();
}
public static class Faker.Enum : object {
    public static T Random();
}
[ExtensionAttribute]
public static class Faker.Extensions.ArrayExtensions : object {
    [ExtensionAttribute]
public static string Random(String[] list);
    [ExtensionAttribute]
public static string Random(IEnumerable`1<Func`1<string>> list);
    [ExtensionAttribute]
public static String[] Random(IEnumerable`1<Func`1<String[]>> list);
}
[ExtensionAttribute]
public static class Faker.Extensions.EnumerableExtensions : object {
    [IteratorStateMachineAttribute("Faker.Extensions.EnumerableExtensions/<Times>d__0`1")]
[ExtensionAttribute]
public static IEnumerable`1<T> Times(int count, Func`2<int, T> func);
}
[ExtensionAttribute]
public static class Faker.Extensions.StringExtensions : object {
    private static String[] Alphabet;
    private static StringExtensions();
    [ExtensionAttribute]
public static string Numerify(string s);
    [ExtensionAttribute]
public static string Letterify(string s);
    [ExtensionAttribute]
public static string AlphanumericOnly(string s);
    [ExtensionAttribute]
public static string Capitalise(string s);
}
[ExtensionAttribute]
public static class Faker.Finance : object {
    private static string SecurityCharacters;
    private static string TickerCharacters;
    private static CultureInfo UsCulture;
    private static Finance();
    public static string Isin();
    public static string Ticker();
    public static DateTime Maturity(int minimumMaturityInMonths, int maximumMaturityInMonths);
    public static decimal Coupon();
    private static string SecurityIdentifier();
    private static int CalculateChecksum(IEnumerable`1<char> codeWithoutChecksum, bool reverseLuhn, bool allowSymbols);
    [ExtensionAttribute]
private static int OrdinalPosition(char c, bool allowSymbols);
    [ExtensionAttribute]
private static bool IsEven(int x);
    [ExtensionAttribute]
private static bool IsOdd(int x);
    [ExtensionAttribute]
private static int ToInt(char digit);
    [ExtensionAttribute]
private static IEnumerable`1<int> ToDigits(Char[] s, bool allowSymbols);
    [ExtensionAttribute]
private static int SumDigits(int value);
    [ExtensionAttribute]
private static int ConditionalMultiplyByTwo(int value, bool condition);
    [ExtensionAttribute]
private static int TensComplement(int value);
}
public static class Faker.Identification : object {
    public static int MaxAgeAllowed;
    private static Func`2<int, bool> IsEvenFn;
    private static Identification();
    public static string MedicareBeneficiaryIdentifier();
    private static IEnumerable`1<int> Range(int min, int max, Func`2<int, bool> conditionFn);
    public static string SocialSecurityNumber(bool dashFormat);
    public static DateTime DateOfBirth();
    public static string UkNationalInsuranceNumber(bool formatted);
    public static string UkPassportNumber();
    public static string UsPassportNumber();
    public static string UkNhsNumber(bool formatted);
    private static string NineDigitNumber();
    public static string BulgarianPin();
    private static string BgPin();
}
public static class Faker.Internet : object {
    private static IEnumerable`1<Func`1<string>> UserNameFormats;
    private static Internet();
    public static string Email();
    public static string Email(string name);
    public static string FreeEmail();
    public static string UserName();
    public static string UserName(string name);
    public static string DomainName();
    public static string Url();
    public static string SecureUrl();
    public static string DomainWord();
    public static string DomainSuffix();
}
public static class Faker.Lorem : object {
    public static IEnumerable`1<string> Words(int count);
    public static string GetFirstWord();
    public static string Sentence(int minWordCount);
    public static string Sentence();
    public static IEnumerable`1<string> Sentences(int sentenceCount);
    public static string Paragraph(int minSentenceCount);
    public static string Paragraph();
    public static IEnumerable`1<string> Paragraphs(int paragraphCount);
}
public static class Faker.Name : object {
    private static IEnumerable`1<NameFormats> Formats;
    private static IDictionary`2<NameFormats, Func`1<String[]>> FormatMap;
    private static Name();
    public static string FullName();
    public static string FullName(NameFormats format);
    public static string First();
    public static string Middle();
    public static string Last();
    public static string Prefix();
    public static string Suffix();
}
public enum Faker.NameFormats : Enum {
    public int value__;
    public static NameFormats Standard;
    public static NameFormats StandardWithMiddle;
    public static NameFormats StandardWithMiddleWithPrefix;
    public static NameFormats StandardWithMiddleWithPrefixWithSuffix;
    public static NameFormats StandardWithMiddleWithSuffix;
    public static NameFormats WithPrefix;
    public static NameFormats WithSuffix;
    public static NameFormats WithPrefixWithSuffix;
}
public static class Faker.Phone : object {
    public static string Number();
}
[ExtensionAttribute]
public static class Faker.RandomNumber : object {
    private static RandomNumberGenerator Rnd;
    private static RandomNumber();
    [ExtensionAttribute]
private static int Next(RandomNumberGenerator generator, int min, int max);
    [ExtensionAttribute]
private static long Next(RandomNumberGenerator generator, long min, long max);
    public static int Next();
    public static int Next(int max);
    public static long Next(long max);
    public static int Next(int min, int max);
    public static long Next(long min, long max);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Faker.Resources.Address : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string AddressFormat { get; }
    internal static string CaProvince { get; }
    internal static string CityPrefix { get; }
    internal static string CitySuffix { get; }
    internal static string Country { get; }
    internal static string SecondaryAddress { get; }
    internal static string StreetNameSeparator { get; }
    internal static string StreetSuffix { get; }
    internal static string UkCounties { get; }
    internal static string UkCountry { get; }
    internal static string UkPostCode { get; }
    internal static string UsState { get; }
    internal static string UsMilitaryState { get; }
    internal static string UsTerritory { get; }
    internal static string UsTerritoryAbbr { get; }
    internal static string UsStateAbbr { get; }
    internal static string ZipCode { get; }
    internal static string UsMilitaryStateAbbr { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_AddressFormat();
    internal static string get_CaProvince();
    internal static string get_CityPrefix();
    internal static string get_CitySuffix();
    internal static string get_Country();
    internal static string get_SecondaryAddress();
    internal static string get_StreetNameSeparator();
    internal static string get_StreetSuffix();
    internal static string get_UkCounties();
    internal static string get_UkCountry();
    internal static string get_UkPostCode();
    internal static string get_UsState();
    internal static string get_UsMilitaryState();
    internal static string get_UsTerritory();
    internal static string get_UsTerritoryAbbr();
    internal static string get_UsStateAbbr();
    internal static string get_ZipCode();
    internal static string get_UsMilitaryStateAbbr();
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Faker.Resources.Company : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string And { get; }
    internal static string BS1 { get; }
    internal static string BS2 { get; }
    internal static string BS3 { get; }
    internal static string Buzzwords1 { get; }
    internal static string Buzzwords2 { get; }
    internal static string Buzzwords3 { get; }
    internal static string Suffix { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_And();
    internal static string get_BS1();
    internal static string get_BS2();
    internal static string get_BS3();
    internal static string get_Buzzwords1();
    internal static string get_Buzzwords2();
    internal static string get_Buzzwords3();
    internal static string get_Suffix();
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Faker.Resources.Country : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string Iso2LetterCodes { get; }
    internal static string Names { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_Iso2LetterCodes();
    internal static string get_Names();
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Faker.Resources.Currency : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string Iso3LetterCodes { get; }
    internal static string Names { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_Iso3LetterCodes();
    internal static string get_Names();
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Faker.Resources.Identification : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string Alphabet { get; }
    internal static string Numeric { get; }
    internal static string MbiNumeric { get; }
    internal static string MbiAlphabet { get; }
    internal static string Mbi { get; }
    internal static string UkNationalInsuranceFirstDigit { get; }
    internal static string UkNationalInsuranceSecondDigit { get; }
    internal static string UkNationalInsuranceNotAllowedPrefix { get; }
    internal static string UkNationalInsuranceSuffix { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_Alphabet();
    internal static string get_Numeric();
    internal static string get_MbiNumeric();
    internal static string get_MbiAlphabet();
    internal static string get_Mbi();
    internal static string get_UkNationalInsuranceFirstDigit();
    internal static string get_UkNationalInsuranceSecondDigit();
    internal static string get_UkNationalInsuranceNotAllowedPrefix();
    internal static string get_UkNationalInsuranceSuffix();
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Faker.Resources.Internet : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string DomainSuffix { get; }
    internal static string FreeMail { get; }
    internal static string Page { get; }
    internal static string PageSuffix { get; }
    internal static string SubDomain { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_DomainSuffix();
    internal static string get_FreeMail();
    internal static string get_Page();
    internal static string get_PageSuffix();
    internal static string get_SubDomain();
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Faker.Resources.Lorem : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string Words { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_Words();
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
public class Faker.Resources.Name : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string First { get; }
    internal static string Last { get; }
    internal static string Prefix { get; }
    internal static string Suffix { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_First();
    internal static string get_Last();
    internal static string get_Prefix();
    internal static string get_Suffix();
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Faker.Resources.Phone : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string Formats { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_Formats();
}
public static class Faker.UkHelper : object {
    public static string CalculateNhsNumberChecksum(string nineDigitNumber);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
