public class FirebaseAdmin.AppOptions : object {
    [CompilerGeneratedAttribute]
private GoogleCredential <Credential>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceAccountId>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpClientFactory <HttpClientFactory>k__BackingField;
    public GoogleCredential Credential { get; public set; }
    public string ProjectId { get; public set; }
    public string ServiceAccountId { get; public set; }
    public HttpClientFactory HttpClientFactory { get; public set; }
    internal AppOptions(AppOptions options);
    [CompilerGeneratedAttribute]
public GoogleCredential get_Credential();
    [CompilerGeneratedAttribute]
public void set_Credential(GoogleCredential value);
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public string get_ServiceAccountId();
    [CompilerGeneratedAttribute]
public void set_ServiceAccountId(string value);
    [CompilerGeneratedAttribute]
public HttpClientFactory get_HttpClientFactory();
    [CompilerGeneratedAttribute]
public void set_HttpClientFactory(HttpClientFactory value);
}
public abstract class FirebaseAdmin.Auth.AbstractFirebaseAuth : object {
    private object authLock;
    private Lazy`1<FirebaseTokenFactory> tokenFactory;
    private Lazy`1<FirebaseTokenVerifier> idTokenVerifier;
    private Lazy`1<FirebaseUserManager> userManager;
    private Lazy`1<ProviderConfigManager> providerConfigManager;
    private bool deleted;
    internal FirebaseTokenFactory TokenFactory { get; }
    internal FirebaseTokenVerifier IdTokenVerifier { get; }
    internal FirebaseUserManager UserManager { get; }
    internal ProviderConfigManager ProviderConfigManager { get; }
    internal AbstractFirebaseAuth(Args args);
    internal FirebaseTokenFactory get_TokenFactory();
    internal FirebaseTokenVerifier get_IdTokenVerifier();
    internal FirebaseUserManager get_UserManager();
    internal ProviderConfigManager get_ProviderConfigManager();
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<CreateCustomTokenAsync>d__15")]
public Task`1<string> CreateCustomTokenAsync(string uid);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<CreateCustomTokenAsync>d__16")]
public Task`1<string> CreateCustomTokenAsync(string uid, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<CreateCustomTokenAsync>d__17")]
public Task`1<string> CreateCustomTokenAsync(string uid, IDictionary`2<string, object> developerClaims);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<CreateCustomTokenAsync>d__18")]
public Task`1<string> CreateCustomTokenAsync(string uid, IDictionary`2<string, object> developerClaims, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<VerifyIdTokenAsync>d__19")]
public Task`1<FirebaseToken> VerifyIdTokenAsync(string idToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<VerifyIdTokenAsync>d__20")]
public Task`1<FirebaseToken> VerifyIdTokenAsync(string idToken, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<VerifyIdTokenAsync>d__21")]
public Task`1<FirebaseToken> VerifyIdTokenAsync(string idToken, bool checkRevoked);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<VerifyIdTokenAsync>d__22")]
public Task`1<FirebaseToken> VerifyIdTokenAsync(string idToken, bool checkRevoked, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<CreateUserAsync>d__23")]
public Task`1<UserRecord> CreateUserAsync(UserRecordArgs args);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<CreateUserAsync>d__24")]
public Task`1<UserRecord> CreateUserAsync(UserRecordArgs args, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<GetUserAsync>d__25")]
public Task`1<UserRecord> GetUserAsync(string uid);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<GetUserAsync>d__26")]
public Task`1<UserRecord> GetUserAsync(string uid, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<GetUserByEmailAsync>d__27")]
public Task`1<UserRecord> GetUserByEmailAsync(string email);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<GetUserByEmailAsync>d__28")]
public Task`1<UserRecord> GetUserByEmailAsync(string email, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<GetUserByPhoneNumberAsync>d__29")]
public Task`1<UserRecord> GetUserByPhoneNumberAsync(string phoneNumber);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<GetUserByPhoneNumberAsync>d__30")]
public Task`1<UserRecord> GetUserByPhoneNumberAsync(string phoneNumber, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<GetUsersAsync>d__31")]
public Task`1<GetUsersResult> GetUsersAsync(IReadOnlyCollection`1<UserIdentifier> identifiers);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<GetUsersAsync>d__32")]
public Task`1<GetUsersResult> GetUsersAsync(IReadOnlyCollection`1<UserIdentifier> identifiers, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<UpdateUserAsync>d__33")]
public Task`1<UserRecord> UpdateUserAsync(UserRecordArgs args);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<UpdateUserAsync>d__34")]
public Task`1<UserRecord> UpdateUserAsync(UserRecordArgs args, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<RevokeRefreshTokensAsync>d__35")]
public Task RevokeRefreshTokensAsync(string uid);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<RevokeRefreshTokensAsync>d__36")]
public Task RevokeRefreshTokensAsync(string uid, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<DeleteUserAsync>d__37")]
public Task DeleteUserAsync(string uid);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<DeleteUserAsync>d__38")]
public Task DeleteUserAsync(string uid, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<DeleteUsersAsync>d__39")]
public Task`1<DeleteUsersResult> DeleteUsersAsync(IReadOnlyList`1<string> uids);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<DeleteUsersAsync>d__40")]
public Task`1<DeleteUsersResult> DeleteUsersAsync(IReadOnlyList`1<string> uids, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<ImportUsersAsync>d__41")]
public Task`1<UserImportResult> ImportUsersAsync(IEnumerable`1<ImportUserRecordArgs> users);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<ImportUsersAsync>d__42")]
public Task`1<UserImportResult> ImportUsersAsync(IEnumerable`1<ImportUserRecordArgs> users, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<ImportUsersAsync>d__43")]
public Task`1<UserImportResult> ImportUsersAsync(IEnumerable`1<ImportUserRecordArgs> users, UserImportOptions options);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<ImportUsersAsync>d__44")]
public Task`1<UserImportResult> ImportUsersAsync(IEnumerable`1<ImportUserRecordArgs> users, UserImportOptions options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<SetCustomUserClaimsAsync>d__45")]
public Task SetCustomUserClaimsAsync(string uid, IReadOnlyDictionary`2<string, object> claims);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<SetCustomUserClaimsAsync>d__46")]
public Task SetCustomUserClaimsAsync(string uid, IReadOnlyDictionary`2<string, object> claims, CancellationToken cancellationToken);
    public PagedAsyncEnumerable`2<ExportedUserRecords, ExportedUserRecord> ListUsersAsync(ListUsersOptions options);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<GenerateEmailVerificationLinkAsync>d__48")]
public Task`1<string> GenerateEmailVerificationLinkAsync(string email);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<GenerateEmailVerificationLinkAsync>d__49")]
public Task`1<string> GenerateEmailVerificationLinkAsync(string email, ActionCodeSettings settings);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<GenerateEmailVerificationLinkAsync>d__50")]
public Task`1<string> GenerateEmailVerificationLinkAsync(string email, ActionCodeSettings settings, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<GeneratePasswordResetLinkAsync>d__51")]
public Task`1<string> GeneratePasswordResetLinkAsync(string email);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<GeneratePasswordResetLinkAsync>d__52")]
public Task`1<string> GeneratePasswordResetLinkAsync(string email, ActionCodeSettings settings);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<GeneratePasswordResetLinkAsync>d__53")]
public Task`1<string> GeneratePasswordResetLinkAsync(string email, ActionCodeSettings settings, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<GenerateSignInWithEmailLinkAsync>d__54")]
public Task`1<string> GenerateSignInWithEmailLinkAsync(string email, ActionCodeSettings settings);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<GenerateSignInWithEmailLinkAsync>d__55")]
public Task`1<string> GenerateSignInWithEmailLinkAsync(string email, ActionCodeSettings settings, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<GetOidcProviderConfigAsync>d__56")]
public Task`1<OidcProviderConfig> GetOidcProviderConfigAsync(string providerId);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<GetOidcProviderConfigAsync>d__57")]
public Task`1<OidcProviderConfig> GetOidcProviderConfigAsync(string providerId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<GetSamlProviderConfigAsync>d__58")]
public Task`1<SamlProviderConfig> GetSamlProviderConfigAsync(string providerId);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<GetSamlProviderConfigAsync>d__59")]
public Task`1<SamlProviderConfig> GetSamlProviderConfigAsync(string providerId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<CreateProviderConfigAsync>d__60`1")]
public Task`1<T> CreateProviderConfigAsync(AuthProviderConfigArgs`1<T> args);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<CreateProviderConfigAsync>d__61`1")]
public Task`1<T> CreateProviderConfigAsync(AuthProviderConfigArgs`1<T> args, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<UpdateProviderConfigAsync>d__62`1")]
public Task`1<T> UpdateProviderConfigAsync(AuthProviderConfigArgs`1<T> args);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<UpdateProviderConfigAsync>d__63`1")]
public Task`1<T> UpdateProviderConfigAsync(AuthProviderConfigArgs`1<T> args, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<DeleteProviderConfigAsync>d__64")]
public Task DeleteProviderConfigAsync(string providerId);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<DeleteProviderConfigAsync>d__65")]
public Task DeleteProviderConfigAsync(string providerId, CancellationToken cancellationToken);
    public PagedAsyncEnumerable`2<AuthProviderConfigs`1<OidcProviderConfig>, OidcProviderConfig> ListOidcProviderConfigsAsync(ListProviderConfigsOptions options);
    public PagedAsyncEnumerable`2<AuthProviderConfigs`1<SamlProviderConfig>, SamlProviderConfig> ListSamlProviderConfigsAsync(ListProviderConfigsOptions options);
    private sealed virtual override void FirebaseAdmin.IFirebaseService.Delete();
    internal virtual void Cleanup();
    private protected TResult IfNotDeleted(Func`1<TResult> func);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.AbstractFirebaseAuth/<IsRevokedAsync>d__71")]
private protected Task`1<bool> IsRevokedAsync(FirebaseToken token, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private FirebaseTokenFactory <get_TokenFactory>b__8_0();
    [CompilerGeneratedAttribute]
private FirebaseTokenVerifier <get_IdTokenVerifier>b__10_0();
    [CompilerGeneratedAttribute]
private FirebaseUserManager <get_UserManager>b__12_0();
    [CompilerGeneratedAttribute]
private ProviderConfigManager <get_ProviderConfigManager>b__14_0();
}
public class FirebaseAdmin.Auth.ActionCodeSettings : object {
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HandleCodeInApp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DynamicLinkDomain>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IosBundleId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AndroidPackageName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AndroidMinimumVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AndroidInstallApp>k__BackingField;
    public string Url { get; public set; }
    public bool HandleCodeInApp { get; public set; }
    public string DynamicLinkDomain { get; public set; }
    public string IosBundleId { get; public set; }
    public string AndroidPackageName { get; public set; }
    public string AndroidMinimumVersion { get; public set; }
    public bool AndroidInstallApp { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public bool get_HandleCodeInApp();
    [CompilerGeneratedAttribute]
public void set_HandleCodeInApp(bool value);
    [CompilerGeneratedAttribute]
public string get_DynamicLinkDomain();
    [CompilerGeneratedAttribute]
public void set_DynamicLinkDomain(string value);
    [CompilerGeneratedAttribute]
public string get_IosBundleId();
    [CompilerGeneratedAttribute]
public void set_IosBundleId(string value);
    [CompilerGeneratedAttribute]
public string get_AndroidPackageName();
    [CompilerGeneratedAttribute]
public void set_AndroidPackageName(string value);
    [CompilerGeneratedAttribute]
public string get_AndroidMinimumVersion();
    [CompilerGeneratedAttribute]
public void set_AndroidMinimumVersion(string value);
    [CompilerGeneratedAttribute]
public bool get_AndroidInstallApp();
    [CompilerGeneratedAttribute]
public void set_AndroidInstallApp(bool value);
}
public enum FirebaseAdmin.Auth.AuthErrorCode : Enum {
    public int value__;
    public static AuthErrorCode CertificateFetchFailed;
    public static AuthErrorCode EmailAlreadyExists;
    public static AuthErrorCode ExpiredIdToken;
    public static AuthErrorCode InvalidIdToken;
    public static AuthErrorCode PhoneNumberAlreadyExists;
    public static AuthErrorCode UidAlreadyExists;
    public static AuthErrorCode UnexpectedResponse;
    public static AuthErrorCode UserNotFound;
    public static AuthErrorCode InvalidDynamicLinkDomain;
    public static AuthErrorCode RevokedIdToken;
    public static AuthErrorCode InvalidSessionCookie;
    public static AuthErrorCode ExpiredSessionCookie;
    public static AuthErrorCode RevokedSessionCookie;
    public static AuthErrorCode ConfigurationNotFound;
    public static AuthErrorCode TenantNotFound;
    public static AuthErrorCode TenantIdMismatch;
    public static AuthErrorCode EmailNotFound;
}
internal class FirebaseAdmin.Auth.AuthErrorHandler : HttpErrorHandler`1<FirebaseAuthException> {
    internal static AuthErrorHandler Instance;
    private static IReadOnlyDictionary`2<string, ErrorInfo> CodeToErrorInfo;
    private static AuthErrorHandler();
    public sealed virtual FirebaseAuthException HandleHttpRequestException(HttpRequestException exception);
    public sealed virtual FirebaseAuthException HandleDeserializeException(Exception exception, ResponseInfo responseInfo);
    protected sealed virtual FirebaseExceptionArgs<FirebaseAuthException> CreateExceptionArgs(HttpResponseMessage response, string body);
    protected virtual FirebaseAuthException CreateException(FirebaseExceptionArgs<FirebaseAuthException> args);
    private AuthError ParseAuthError(string body);
}
public class FirebaseAdmin.Auth.DeleteUsersResult : object {
    [CompilerGeneratedAttribute]
private int <SuccessCount>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<ErrorInfo> <Errors>k__BackingField;
    public int SuccessCount { get; }
    public int FailureCount { get; }
    public IReadOnlyList`1<ErrorInfo> Errors { get; }
    internal DeleteUsersResult(int users, IReadOnlyList`1<ErrorInfo> errors);
    [CompilerGeneratedAttribute]
public int get_SuccessCount();
    public int get_FailureCount();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<ErrorInfo> get_Errors();
}
public class FirebaseAdmin.Auth.EmailIdentifier : UserIdentifier {
    private string email;
    public EmailIdentifier(string email);
    public virtual string ToString();
    internal virtual void Populate(GetAccountInfoRequest payload);
    internal virtual bool Matches(UserRecord userRecord);
}
public class FirebaseAdmin.Auth.ErrorInfo : object {
    [CompilerGeneratedAttribute]
private int <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [JsonPropertyAttribute("index")]
public int Index { get; internal set; }
    [JsonPropertyAttribute("message")]
public string Reason { get; internal set; }
    internal ErrorInfo(int index, string reason);
    [CompilerGeneratedAttribute]
public int get_Index();
    [CompilerGeneratedAttribute]
internal void set_Index(int value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
internal void set_Reason(string value);
}
public class FirebaseAdmin.Auth.ExportedUserRecord : UserRecord {
    private static string B64Redacted;
    [CompilerGeneratedAttribute]
private string <PasswordHash>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PasswordSalt>k__BackingField;
    public string PasswordHash { get; }
    public string PasswordSalt { get; }
    internal ExportedUserRecord(User user);
    private static ExportedUserRecord();
    [CompilerGeneratedAttribute]
public string get_PasswordHash();
    [CompilerGeneratedAttribute]
public string get_PasswordSalt();
}
public class FirebaseAdmin.Auth.ExportedUserRecords : object {
    [CompilerGeneratedAttribute]
private string <NextPageToken>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ExportedUserRecord> <Users>k__BackingField;
    public string NextPageToken { get; internal set; }
    public IEnumerable`1<ExportedUserRecord> Users { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_NextPageToken();
    [CompilerGeneratedAttribute]
internal void set_NextPageToken(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ExportedUserRecord> get_Users();
    [CompilerGeneratedAttribute]
internal void set_Users(IEnumerable`1<ExportedUserRecord> value);
}
public class FirebaseAdmin.Auth.FirebaseAuth : AbstractFirebaseAuth {
    private Lazy`1<FirebaseTokenVerifier> sessionCookieVerifier;
    private Lazy`1<TenantManager> tenantManager;
    public static FirebaseAuth DefaultInstance { get; }
    public TenantManager TenantManager { get; }
    internal FirebaseTokenVerifier SessionCookieVerifier { get; }
    internal FirebaseAuth(Args args);
    public static FirebaseAuth get_DefaultInstance();
    public TenantManager get_TenantManager();
    internal FirebaseTokenVerifier get_SessionCookieVerifier();
    public static FirebaseAuth GetAuth(FirebaseApp app);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.FirebaseAuth/<CreateSessionCookieAsync>d__10")]
public Task`1<string> CreateSessionCookieAsync(string idToken, SessionCookieOptions options);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.FirebaseAuth/<CreateSessionCookieAsync>d__11")]
public Task`1<string> CreateSessionCookieAsync(string idToken, SessionCookieOptions options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.FirebaseAuth/<VerifySessionCookieAsync>d__12")]
public Task`1<FirebaseToken> VerifySessionCookieAsync(string sessionCookie);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.FirebaseAuth/<VerifySessionCookieAsync>d__13")]
public Task`1<FirebaseToken> VerifySessionCookieAsync(string sessionCookie, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.FirebaseAuth/<VerifySessionCookieAsync>d__14")]
public Task`1<FirebaseToken> VerifySessionCookieAsync(string sessionCookie, bool checkRevoked);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.FirebaseAuth/<VerifySessionCookieAsync>d__15")]
public Task`1<FirebaseToken> VerifySessionCookieAsync(string sessionCookie, bool checkRevoked, CancellationToken cancellationToken);
    internal virtual void Cleanup();
    private static FirebaseAuth Create(FirebaseApp app);
    [CompilerGeneratedAttribute]
private TenantManager <get_TenantManager>b__6_0();
    [CompilerGeneratedAttribute]
private FirebaseTokenVerifier <get_SessionCookieVerifier>b__8_0();
}
public class FirebaseAdmin.Auth.FirebaseAuthException : FirebaseException {
    [CompilerGeneratedAttribute]
private Nullable`1<AuthErrorCode> <AuthErrorCode>k__BackingField;
    public Nullable`1<AuthErrorCode> AuthErrorCode { get; private set; }
    internal FirebaseAuthException(ErrorCode code, string message, Nullable`1<AuthErrorCode> fcmCode, Exception inner, HttpResponseMessage response);
    [CompilerGeneratedAttribute]
public Nullable`1<AuthErrorCode> get_AuthErrorCode();
    [CompilerGeneratedAttribute]
private void set_AuthErrorCode(Nullable`1<AuthErrorCode> value);
}
public class FirebaseAdmin.Auth.FirebaseToken : object {
    [CompilerGeneratedAttribute]
private string <Issuer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Audience>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ExpirationTimeSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <IssuedAtTimeSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <Claims>k__BackingField;
    public string Issuer { get; }
    public string Subject { get; }
    public string Audience { get; }
    public long ExpirationTimeSeconds { get; }
    public long IssuedAtTimeSeconds { get; }
    public string Uid { get; }
    public string TenantId { get; }
    public IReadOnlyDictionary`2<string, object> Claims { get; }
    internal FirebaseToken(Args args);
    [CompilerGeneratedAttribute]
public string get_Issuer();
    [CompilerGeneratedAttribute]
public string get_Subject();
    [CompilerGeneratedAttribute]
public string get_Audience();
    [CompilerGeneratedAttribute]
public long get_ExpirationTimeSeconds();
    [CompilerGeneratedAttribute]
public long get_IssuedAtTimeSeconds();
    [CompilerGeneratedAttribute]
public string get_Uid();
    [CompilerGeneratedAttribute]
public string get_TenantId();
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, object> get_Claims();
}
public class FirebaseAdmin.Auth.GetUsersResult : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<UserRecord> <Users>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<UserIdentifier> <NotFound>k__BackingField;
    public IEnumerable`1<UserRecord> Users { get; }
    public IEnumerable`1<UserIdentifier> NotFound { get; }
    internal GetUsersResult(GetAccountInfoResponse resp, IReadOnlyCollection`1<UserIdentifier> identifiers);
    [CompilerGeneratedAttribute]
public IEnumerable`1<UserRecord> get_Users();
    [CompilerGeneratedAttribute]
public IEnumerable`1<UserIdentifier> get_NotFound();
    private bool IsUserFound(UserIdentifier id, IEnumerable`1<UserRecord> userRecords);
    [CompilerGeneratedAttribute]
private bool <.ctor>b__0_1(UserIdentifier id);
}
public class FirebaseAdmin.Auth.Hash.Bcrypt : UserImportHash {
    protected virtual IReadOnlyDictionary`2<string, object> GetHashConfiguration();
}
public abstract class FirebaseAdmin.Auth.Hash.Hmac : UserImportHash {
    [CompilerGeneratedAttribute]
private Byte[] <Key>k__BackingField;
    public Byte[] Key { get; public set; }
    internal Hmac(string hashName);
    [CompilerGeneratedAttribute]
public Byte[] get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(Byte[] value);
    protected virtual IReadOnlyDictionary`2<string, object> GetHashConfiguration();
}
public class FirebaseAdmin.Auth.Hash.HmacMd5 : Hmac {
}
public class FirebaseAdmin.Auth.Hash.HmacSha1 : Hmac {
}
public class FirebaseAdmin.Auth.Hash.HmacSha256 : Hmac {
}
public class FirebaseAdmin.Auth.Hash.HmacSha512 : Hmac {
}
public class FirebaseAdmin.Auth.Hash.Md5 : RepeatableHash {
    protected int MinRounds { get; }
    protected int MaxRounds { get; }
    protected virtual int get_MinRounds();
    protected virtual int get_MaxRounds();
}
public class FirebaseAdmin.Auth.Hash.Pbkdf2Sha256 : RepeatableHash {
    protected int MinRounds { get; }
    protected int MaxRounds { get; }
    protected virtual int get_MinRounds();
    protected virtual int get_MaxRounds();
}
public class FirebaseAdmin.Auth.Hash.PbkdfSha1 : RepeatableHash {
    protected int MinRounds { get; }
    protected int MaxRounds { get; }
    protected virtual int get_MinRounds();
    protected virtual int get_MaxRounds();
}
public abstract class FirebaseAdmin.Auth.Hash.RepeatableHash : UserImportHash {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Rounds>k__BackingField;
    public Nullable`1<int> Rounds { get; public set; }
    protected int MinRounds { get; }
    protected int MaxRounds { get; }
    internal RepeatableHash(string hashName);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Rounds();
    [CompilerGeneratedAttribute]
public void set_Rounds(Nullable`1<int> value);
    protected abstract virtual int get_MinRounds();
    protected abstract virtual int get_MaxRounds();
    protected virtual IReadOnlyDictionary`2<string, object> GetHashConfiguration();
}
public class FirebaseAdmin.Auth.Hash.Scrypt : RepeatableHash {
    [CompilerGeneratedAttribute]
private Byte[] <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <SaltSeparator>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MemoryCost>k__BackingField;
    public Byte[] Key { get; public set; }
    public Byte[] SaltSeparator { get; public set; }
    public Nullable`1<int> MemoryCost { get; public set; }
    protected int MinRounds { get; }
    protected int MaxRounds { get; }
    [CompilerGeneratedAttribute]
public Byte[] get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(Byte[] value);
    [CompilerGeneratedAttribute]
public Byte[] get_SaltSeparator();
    [CompilerGeneratedAttribute]
public void set_SaltSeparator(Byte[] value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MemoryCost();
    [CompilerGeneratedAttribute]
public void set_MemoryCost(Nullable`1<int> value);
    protected virtual int get_MinRounds();
    protected virtual int get_MaxRounds();
    protected virtual IReadOnlyDictionary`2<string, object> GetHashConfiguration();
}
public class FirebaseAdmin.Auth.Hash.Sha1 : RepeatableHash {
    protected int MinRounds { get; }
    protected int MaxRounds { get; }
    protected virtual int get_MinRounds();
    protected virtual int get_MaxRounds();
}
public class FirebaseAdmin.Auth.Hash.Sha256 : RepeatableHash {
    protected int MinRounds { get; }
    protected int MaxRounds { get; }
    protected virtual int get_MinRounds();
    protected virtual int get_MaxRounds();
}
public class FirebaseAdmin.Auth.Hash.Sha512 : RepeatableHash {
    protected int MinRounds { get; }
    protected int MaxRounds { get; }
    protected virtual int get_MinRounds();
    protected virtual int get_MaxRounds();
}
public class FirebaseAdmin.Auth.Hash.StandardScrypt : UserImportHash {
    [CompilerGeneratedAttribute]
private int <DerivedKeyLength>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BlockSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Parallelization>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MemoryCost>k__BackingField;
    public int DerivedKeyLength { get; public set; }
    public int BlockSize { get; public set; }
    public Nullable`1<int> Parallelization { get; public set; }
    public Nullable`1<int> MemoryCost { get; public set; }
    [CompilerGeneratedAttribute]
public int get_DerivedKeyLength();
    [CompilerGeneratedAttribute]
public void set_DerivedKeyLength(int value);
    [CompilerGeneratedAttribute]
public int get_BlockSize();
    [CompilerGeneratedAttribute]
public void set_BlockSize(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Parallelization();
    [CompilerGeneratedAttribute]
public void set_Parallelization(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MemoryCost();
    [CompilerGeneratedAttribute]
public void set_MemoryCost(Nullable`1<int> value);
    protected virtual IReadOnlyDictionary`2<string, object> GetHashConfiguration();
    private void ThrowIfNullOrNegative(Nullable`1<int> value, string message);
}
public class FirebaseAdmin.Auth.ImportUserRecordArgs : object {
    private static string CustomAttributes;
    [CompilerGeneratedAttribute]
private string <Uid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <EmailVerified>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PhoneNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PhotoUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private UserMetadata <UserMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <PasswordHash>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <PasswordSalt>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<UserProvider> <UserProviders>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <CustomClaims>k__BackingField;
    public string Uid { get; public set; }
    public string Email { get; public set; }
    public Nullable`1<bool> EmailVerified { get; public set; }
    public string DisplayName { get; public set; }
    public string PhoneNumber { get; public set; }
    public string PhotoUrl { get; public set; }
    public Nullable`1<bool> Disabled { get; public set; }
    public UserMetadata UserMetadata { get; public set; }
    public Byte[] PasswordHash { get; public set; }
    public Byte[] PasswordSalt { get; public set; }
    public IEnumerable`1<UserProvider> UserProviders { get; public set; }
    public IReadOnlyDictionary`2<string, object> CustomClaims { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Uid();
    [CompilerGeneratedAttribute]
public void set_Uid(string value);
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
public void set_Email(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_EmailVerified();
    [CompilerGeneratedAttribute]
public void set_EmailVerified(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_PhoneNumber();
    [CompilerGeneratedAttribute]
public void set_PhoneNumber(string value);
    [CompilerGeneratedAttribute]
public string get_PhotoUrl();
    [CompilerGeneratedAttribute]
public void set_PhotoUrl(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Disabled();
    [CompilerGeneratedAttribute]
public void set_Disabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public UserMetadata get_UserMetadata();
    [CompilerGeneratedAttribute]
public void set_UserMetadata(UserMetadata value);
    [CompilerGeneratedAttribute]
public Byte[] get_PasswordHash();
    [CompilerGeneratedAttribute]
public void set_PasswordHash(Byte[] value);
    [CompilerGeneratedAttribute]
public Byte[] get_PasswordSalt();
    [CompilerGeneratedAttribute]
public void set_PasswordSalt(Byte[] value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<UserProvider> get_UserProviders();
    [CompilerGeneratedAttribute]
public void set_UserProviders(IEnumerable`1<UserProvider> value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, object> get_CustomClaims();
    [CompilerGeneratedAttribute]
public void set_CustomClaims(IReadOnlyDictionary`2<string, object> value);
    internal bool HasPassword();
    internal Request ToRequest();
}
public interface FirebaseAdmin.Auth.IUserInfo {
    public string Uid { get; }
    public string DisplayName { get; }
    public string Email { get; }
    public string PhoneNumber { get; }
    public string PhotoUrl { get; }
    public string ProviderId { get; }
    public abstract virtual string get_Uid();
    public abstract virtual string get_DisplayName();
    public abstract virtual string get_Email();
    public abstract virtual string get_PhoneNumber();
    public abstract virtual string get_PhotoUrl();
    public abstract virtual string get_ProviderId();
}
internal class FirebaseAdmin.Auth.Jwt.EmulatorSigner : object {
    internal static EmulatorSigner Instance;
    public string Algorithm { get; }
    private static EmulatorSigner();
    public sealed virtual string get_Algorithm();
    public sealed virtual Task`1<string> GetKeyIdAsync(CancellationToken cancellationToken);
    public sealed virtual Task`1<Byte[]> SignDataAsync(Byte[] data, CancellationToken cancellationToken);
    public sealed virtual void Dispose();
}
internal class FirebaseAdmin.Auth.Jwt.FirebaseTokenFactory : object {
    public static string FirebaseAudience;
    public static int TokenDurationSeconds;
    public static DateTime UnixEpoch;
    public static ImmutableList`1<string> ReservedClaims;
    [CompilerGeneratedAttribute]
private ISigner <Signer>k__BackingField;
    [CompilerGeneratedAttribute]
private IClock <Clock>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEmulatorMode>k__BackingField;
    internal ISigner Signer { get; }
    internal IClock Clock { get; }
    internal string TenantId { get; }
    internal bool IsEmulatorMode { get; }
    internal FirebaseTokenFactory(Args args);
    private static FirebaseTokenFactory();
    [CompilerGeneratedAttribute]
internal ISigner get_Signer();
    [CompilerGeneratedAttribute]
internal IClock get_Clock();
    [CompilerGeneratedAttribute]
internal string get_TenantId();
    [CompilerGeneratedAttribute]
internal bool get_IsEmulatorMode();
    public sealed virtual void Dispose();
    internal static FirebaseTokenFactory Create(FirebaseApp app, string tenantId);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Jwt.FirebaseTokenFactory/<CreateCustomTokenAsync>d__19")]
internal Task`1<string> CreateCustomTokenAsync(string uid, IDictionary`2<string, object> developerClaims, CancellationToken cancellationToken);
}
internal class FirebaseAdmin.Auth.Jwt.FirebaseTokenVerifier : object {
    private static string IdTokenCertUrl;
    private static string SessionCookieCertUrl;
    private static string FirebaseAudience;
    private static long ClockSkewSeconds;
    private static string Sha256Oid;
    private static IReadOnlyList`1<string> StandardClaims;
    private string shortName;
    private string articledShortName;
    private string operation;
    private string url;
    private string issuer;
    private IClock clock;
    private IPublicKeySource keySource;
    private AuthErrorCode invalidTokenCode;
    private AuthErrorCode expiredIdTokenCode;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEmulatorMode>k__BackingField;
    internal string ProjectId { get; }
    internal string TenantId { get; }
    internal bool IsEmulatorMode { get; }
    internal FirebaseTokenVerifier(FirebaseTokenVerifierArgs args);
    private static FirebaseTokenVerifier();
    [CompilerGeneratedAttribute]
internal string get_ProjectId();
    [CompilerGeneratedAttribute]
internal string get_TenantId();
    [CompilerGeneratedAttribute]
internal bool get_IsEmulatorMode();
    internal static FirebaseTokenVerifier CreateIdTokenVerifier(FirebaseApp app, string tenantId);
    internal static FirebaseTokenVerifierArgs CreateIdTokenVerifierArgs();
    internal static FirebaseTokenVerifier CreateSessionCookieVerifier(FirebaseApp app);
    internal static FirebaseTokenVerifier CreateSessionCookieVerifier(string projectId, IPublicKeySource keySource, IClock clock);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Jwt.FirebaseTokenVerifier/<VerifyTokenAsync>d__29")]
internal Task`1<FirebaseToken> VerifyTokenAsync(string token, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Jwt.FirebaseTokenVerifier/<VerifySignatureAsync>d__30")]
private Task VerifySignatureAsync(String[] segments, string keyId, CancellationToken cancellationToken);
    private FirebaseAuthException CreateException(string message, Nullable`1<AuthErrorCode> errorCode);
}
internal class FirebaseAdmin.Auth.Jwt.FirebaseTokenVerifierArgs : object {
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ShortName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Issuer>k__BackingField;
    [CompilerGeneratedAttribute]
private IClock <Clock>k__BackingField;
    [CompilerGeneratedAttribute]
private IPublicKeySource <PublicKeySource>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthErrorCode <InvalidTokenCode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEmulatorMode>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthErrorCode <ExpiredTokenCode>k__BackingField;
    public string ProjectId { get; public set; }
    public string TenantId { get; public set; }
    public string ShortName { get; public set; }
    public string Operation { get; public set; }
    public string Url { get; public set; }
    public string Issuer { get; public set; }
    public IClock Clock { get; public set; }
    public IPublicKeySource PublicKeySource { get; public set; }
    public AuthErrorCode InvalidTokenCode { get; public set; }
    public bool IsEmulatorMode { get; public set; }
    public AuthErrorCode ExpiredTokenCode { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public string get_TenantId();
    [CompilerGeneratedAttribute]
public void set_TenantId(string value);
    [CompilerGeneratedAttribute]
public string get_ShortName();
    [CompilerGeneratedAttribute]
public void set_ShortName(string value);
    [CompilerGeneratedAttribute]
public string get_Operation();
    [CompilerGeneratedAttribute]
public void set_Operation(string value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_Issuer();
    [CompilerGeneratedAttribute]
public void set_Issuer(string value);
    [CompilerGeneratedAttribute]
public IClock get_Clock();
    [CompilerGeneratedAttribute]
public void set_Clock(IClock value);
    [CompilerGeneratedAttribute]
public IPublicKeySource get_PublicKeySource();
    [CompilerGeneratedAttribute]
public void set_PublicKeySource(IPublicKeySource value);
    [CompilerGeneratedAttribute]
public AuthErrorCode get_InvalidTokenCode();
    [CompilerGeneratedAttribute]
public void set_InvalidTokenCode(AuthErrorCode value);
    [CompilerGeneratedAttribute]
public bool get_IsEmulatorMode();
    [CompilerGeneratedAttribute]
public void set_IsEmulatorMode(bool value);
    [CompilerGeneratedAttribute]
public AuthErrorCode get_ExpiredTokenCode();
    [CompilerGeneratedAttribute]
public void set_ExpiredTokenCode(AuthErrorCode value);
}
internal class FirebaseAdmin.Auth.Jwt.FixedAccountIAMSigner : IAMSigner {
    private string keyId;
    public FixedAccountIAMSigner(Args args);
    public virtual Task`1<string> GetKeyIdAsync(CancellationToken cancellationToken);
    internal static FixedAccountIAMSigner Create(FirebaseApp app);
}
internal class FirebaseAdmin.Auth.Jwt.HttpPublicKeySource : object {
    private static TimeSpan ClockSkew;
    private SemaphoreSlim cacheLock;
    private string certUrl;
    private IClock clock;
    private HttpClientFactory clientFactory;
    private DateTime expirationTime;
    private IReadOnlyList`1<PublicKey> cachedKeys;
    public HttpPublicKeySource(string certUrl, IClock clock, HttpClientFactory clientFactory);
    private static HttpPublicKeySource();
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Jwt.HttpPublicKeySource/<GetPublicKeysAsync>d__8")]
public sealed virtual Task`1<IReadOnlyList`1<PublicKey>> GetPublicKeysAsync(CancellationToken cancellationToken);
    private ErrorHandlingHttpClient`1<FirebaseAuthException> CreateHttpClient();
    private IReadOnlyList`1<PublicKey> ParseKeys(DeserializedResponseInfo`1<Dictionary`2<string, string>> response);
}
internal class FirebaseAdmin.Auth.Jwt.IAMSigner : object {
    private static string SignBlobUrl;
    private static string MetadataServerUrl;
    private ErrorHandlingHttpClient`1<FirebaseAuthException> httpClient;
    private Lazy`1<Task`1<string>> keyId;
    public string Algorithm { get; }
    public IAMSigner(HttpClientFactory clientFactory, GoogleCredential credential, RetryOptions retryOptions);
    public sealed virtual string get_Algorithm();
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Jwt.IAMSigner/<SignDataAsync>d__7")]
public sealed virtual Task`1<Byte[]> SignDataAsync(Byte[] data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Jwt.IAMSigner/<GetKeyIdAsync>d__8")]
public virtual Task`1<string> GetKeyIdAsync(CancellationToken cancellationToken);
    public sealed virtual void Dispose();
    internal static IAMSigner Create(FirebaseApp app);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Jwt.IAMSigner/<DiscoverServiceAccountIdAsync>d__11")]
private static Task`1<string> DiscoverServiceAccountIdAsync(HttpClientFactory clientFactory);
}
internal interface FirebaseAdmin.Auth.Jwt.IPublicKeySource {
    public abstract virtual Task`1<IReadOnlyList`1<PublicKey>> GetPublicKeysAsync(CancellationToken cancellationToken);
}
internal interface FirebaseAdmin.Auth.Jwt.ISigner {
    public string Algorithm { get; }
    public abstract virtual string get_Algorithm();
    public abstract virtual Task`1<string> GetKeyIdAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<Byte[]> SignDataAsync(Byte[] data, CancellationToken cancellationToken);
}
internal static class FirebaseAdmin.Auth.Jwt.JwtUtils : object {
    internal static string AlgorithmRS256;
    public static T Decode(string value);
    internal static string Base64Decode(string input);
    internal static Byte[] Base64DecodeToBytes(string input);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Jwt.JwtUtils/<CreateSignedJwtAsync>d__4")]
internal static Task`1<string> CreateSignedJwtAsync(object header, object payload, ISigner signer, CancellationToken cancellationToken);
    internal static string UrlSafeBase64Encode(Byte[] bytes);
    private static string Encode(object obj);
}
internal class FirebaseAdmin.Auth.Jwt.PublicKey : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private RSA <RSA>k__BackingField;
    public string Id { get; }
    public RSA RSA { get; }
    public PublicKey(string keyId, RSA rsa);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public RSA get_RSA();
}
internal class FirebaseAdmin.Auth.Jwt.ServiceAccountSigner : object {
    private ServiceAccountCredential credential;
    public string Algorithm { get; }
    public ServiceAccountSigner(ServiceAccountCredential credential);
    public sealed virtual string get_Algorithm();
    public sealed virtual Task`1<string> GetKeyIdAsync(CancellationToken cancellationToken);
    public sealed virtual Task`1<Byte[]> SignDataAsync(Byte[] data, CancellationToken cancellationToken);
    public sealed virtual void Dispose();
}
public class FirebaseAdmin.Auth.ListUsersOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PageToken>k__BackingField;
    public Nullable`1<int> PageSize { get; public set; }
    public string PageToken { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_PageSize();
    [CompilerGeneratedAttribute]
public void set_PageSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_PageToken();
    [CompilerGeneratedAttribute]
public void set_PageToken(string value);
}
public class FirebaseAdmin.Auth.Multitenancy.ListTenantsOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PageToken>k__BackingField;
    public Nullable`1<int> PageSize { get; public set; }
    public string PageToken { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_PageSize();
    [CompilerGeneratedAttribute]
public void set_PageSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_PageToken();
    [CompilerGeneratedAttribute]
public void set_PageToken(string value);
}
public class FirebaseAdmin.Auth.Multitenancy.Tenant : object {
    private TenantArgs args;
    public string TenantId { get; }
    public string DisplayName { get; }
    public bool PasswordSignUpAllowed { get; }
    public bool EmailLinkSignInEnabled { get; }
    internal Tenant(TenantArgs args);
    public string get_TenantId();
    public string get_DisplayName();
    public bool get_PasswordSignUpAllowed();
    public bool get_EmailLinkSignInEnabled();
    private string ExtractResourceId(string resourceName);
}
public class FirebaseAdmin.Auth.Multitenancy.TenantArgs : object {
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PasswordSignUpAllowed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <EmailLinkSignInEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyAttribute("displayName")]
public string DisplayName { get; public set; }
    [JsonPropertyAttribute("allowPasswordSignup")]
public Nullable`1<bool> PasswordSignUpAllowed { get; public set; }
    [JsonPropertyAttribute("enableEmailLinkSignin")]
public Nullable`1<bool> EmailLinkSignInEnabled { get; public set; }
    [JsonPropertyAttribute("name")]
internal string Name { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_PasswordSignUpAllowed();
    [CompilerGeneratedAttribute]
public void set_PasswordSignUpAllowed(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_EmailLinkSignInEnabled();
    [CompilerGeneratedAttribute]
public void set_EmailLinkSignInEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
internal string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
}
public class FirebaseAdmin.Auth.Multitenancy.TenantAwareFirebaseAuth : AbstractFirebaseAuth {
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    public string TenantId { get; }
    internal TenantAwareFirebaseAuth(Args args);
    [CompilerGeneratedAttribute]
public string get_TenantId();
    internal static TenantAwareFirebaseAuth Create(FirebaseApp app, string tenantId);
}
public class FirebaseAdmin.Auth.Multitenancy.TenantManager : object {
    private static string IdToolkitUrl;
    private static string ClientVersionHeader;
    private static string ClientVersion;
    private IDictionary`2<string, TenantAwareFirebaseAuth> tenants;
    private object tenantsLock;
    private FirebaseApp app;
    private string baseUrl;
    private ErrorHandlingHttpClient`1<FirebaseAuthException> httpClient;
    private bool disposed;
    [CompilerGeneratedAttribute]
private string <EmulatorHost>k__BackingField;
    internal string EmulatorHost { get; }
    internal TenantManager(Args args);
    private static TenantManager();
    [CompilerGeneratedAttribute]
internal string get_EmulatorHost();
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Multitenancy.TenantManager/<GetTenantAsync>d__13")]
public Task`1<Tenant> GetTenantAsync(string tenantId);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Multitenancy.TenantManager/<GetTenantAsync>d__14")]
public Task`1<Tenant> GetTenantAsync(string tenantId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Multitenancy.TenantManager/<CreateTenantAsync>d__15")]
public Task`1<Tenant> CreateTenantAsync(TenantArgs args);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Multitenancy.TenantManager/<CreateTenantAsync>d__16")]
public Task`1<Tenant> CreateTenantAsync(TenantArgs args, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Multitenancy.TenantManager/<UpdateTenantAsync>d__17")]
public Task`1<Tenant> UpdateTenantAsync(string tenantId, TenantArgs args);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Multitenancy.TenantManager/<UpdateTenantAsync>d__18")]
public Task`1<Tenant> UpdateTenantAsync(string tenantId, TenantArgs args, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Multitenancy.TenantManager/<DeleteTenantAsync>d__19")]
public Task DeleteTenantAsync(string tenantId);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Multitenancy.TenantManager/<DeleteTenantAsync>d__20")]
public Task DeleteTenantAsync(string tenantId, CancellationToken cancellationToken);
    public PagedAsyncEnumerable`2<TenantsPage, Tenant> ListTenantsAsync(ListTenantsOptions options);
    public TenantAwareFirebaseAuth AuthForTenant(string tenantId);
    private sealed virtual override void System.IDisposable.Dispose();
    internal static TenantManager Create(FirebaseApp app);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Multitenancy.TenantManager/<SendAndDeserializeAsync>d__25`1")]
private Task`1<T> SendAndDeserializeAsync(HttpRequestMessage request, CancellationToken cancellationToken);
}
public class FirebaseAdmin.Auth.Multitenancy.TenantsPage : object {
    [CompilerGeneratedAttribute]
private string <NextPageToken>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Tenant> <Tenants>k__BackingField;
    public string NextPageToken { get; internal set; }
    public IEnumerable`1<Tenant> Tenants { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_NextPageToken();
    [CompilerGeneratedAttribute]
internal void set_NextPageToken(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<Tenant> get_Tenants();
    [CompilerGeneratedAttribute]
internal void set_Tenants(IEnumerable`1<Tenant> value);
}
public class FirebaseAdmin.Auth.PhoneIdentifier : UserIdentifier {
    private string phoneNumber;
    public PhoneIdentifier(string phoneNumber);
    public virtual string ToString();
    internal virtual void Populate(GetAccountInfoRequest payload);
    internal virtual bool Matches(UserRecord userRecord);
}
public class FirebaseAdmin.Auth.ProviderIdentifier : UserIdentifier {
    private string providerId;
    private string providerUid;
    public ProviderIdentifier(string providerId, string providerUid);
    public virtual string ToString();
    internal virtual void Populate(GetAccountInfoRequest payload);
    internal virtual bool Matches(UserRecord userRecord);
    [CompilerGeneratedAttribute]
private bool <Matches>b__5_0(IUserInfo userInfo);
}
internal class FirebaseAdmin.Auth.Providers.ApiClient : object {
    private static string IdToolkitUrl;
    private static string ClientVersionHeader;
    private static string ClientVersion;
    private ErrorHandlingHttpClient`1<FirebaseAuthException> httpClient;
    [CompilerGeneratedAttribute]
private string <BaseUrl>k__BackingField;
    internal string BaseUrl { get; }
    internal ApiClient(string projectId, string tenantId, ErrorHandlingHttpClientArgs`1<FirebaseAuthException> args);
    private static ApiClient();
    [CompilerGeneratedAttribute]
internal string get_BaseUrl();
    public sealed virtual void Dispose();
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Providers.ApiClient/<SendAndDeserializeAsync>d__9`1")]
internal Task`1<T> SendAndDeserializeAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Providers.ApiClient/<SendAsync>d__10")]
internal Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
}
public abstract class FirebaseAdmin.Auth.Providers.AuthProviderConfig : object {
    [CompilerGeneratedAttribute]
private string <ProviderId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    public string ProviderId { get; }
    public string DisplayName { get; }
    public bool Enabled { get; }
    internal AuthProviderConfig(Request request);
    [CompilerGeneratedAttribute]
public string get_ProviderId();
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public bool get_Enabled();
}
public abstract class FirebaseAdmin.Auth.Providers.AuthProviderConfigArgs`1 : object {
    [CompilerGeneratedAttribute]
private string <ProviderId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Enabled>k__BackingField;
    public string ProviderId { get; public set; }
    public string DisplayName { get; public set; }
    public Nullable`1<bool> Enabled { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProviderId();
    [CompilerGeneratedAttribute]
public void set_ProviderId(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(Nullable`1<bool> value);
    internal static bool IsWellFormedUriString(string uri);
    internal abstract virtual Request ToCreateRequest();
    internal abstract virtual Request ToUpdateRequest();
    internal abstract virtual ProviderConfigClient`1<T> GetClient();
}
public class FirebaseAdmin.Auth.Providers.AuthProviderConfigs`1 : object {
    [CompilerGeneratedAttribute]
private string <NextPageToken>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<T> <ProviderConfigs>k__BackingField;
    public string NextPageToken { get; internal set; }
    public IEnumerable`1<T> ProviderConfigs { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_NextPageToken();
    [CompilerGeneratedAttribute]
internal void set_NextPageToken(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<T> get_ProviderConfigs();
    [CompilerGeneratedAttribute]
internal void set_ProviderConfigs(IEnumerable`1<T> value);
}
public class FirebaseAdmin.Auth.Providers.ListProviderConfigsOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PageToken>k__BackingField;
    public Nullable`1<int> PageSize { get; public set; }
    public string PageToken { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_PageSize();
    [CompilerGeneratedAttribute]
public void set_PageSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_PageToken();
    [CompilerGeneratedAttribute]
public void set_PageToken(string value);
}
public class FirebaseAdmin.Auth.Providers.OidcProviderConfig : AuthProviderConfig {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Issuer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IdTokenResponseType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CodeResponseType>k__BackingField;
    public string ClientId { get; }
    public string Issuer { get; }
    public string ClientSecret { get; }
    public bool IdTokenResponseType { get; }
    public bool CodeResponseType { get; }
    internal OidcProviderConfig(Request request);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public string get_Issuer();
    [CompilerGeneratedAttribute]
public string get_ClientSecret();
    [CompilerGeneratedAttribute]
public bool get_IdTokenResponseType();
    [CompilerGeneratedAttribute]
public bool get_CodeResponseType();
}
public class FirebaseAdmin.Auth.Providers.OidcProviderConfigArgs : AuthProviderConfigArgs`1<OidcProviderConfig> {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Issuer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IdTokenResponseType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CodeResponseType>k__BackingField;
    public string ClientId { get; public set; }
    public string Issuer { get; public set; }
    public string ClientSecret { get; public set; }
    public Nullable`1<bool> IdTokenResponseType { get; public set; }
    public Nullable`1<bool> CodeResponseType { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_Issuer();
    [CompilerGeneratedAttribute]
public void set_Issuer(string value);
    [CompilerGeneratedAttribute]
public string get_ClientSecret();
    [CompilerGeneratedAttribute]
public void set_ClientSecret(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IdTokenResponseType();
    [CompilerGeneratedAttribute]
public void set_IdTokenResponseType(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_CodeResponseType();
    [CompilerGeneratedAttribute]
public void set_CodeResponseType(Nullable`1<bool> value);
    internal virtual Request ToCreateRequest();
    internal virtual Request ToUpdateRequest();
    internal virtual ProviderConfigClient`1<OidcProviderConfig> GetClient();
}
internal class FirebaseAdmin.Auth.Providers.OidcProviderConfigClient : ProviderConfigClient`1<OidcProviderConfig> {
    internal static OidcProviderConfigClient Instance;
    protected string ResourcePath { get; }
    protected string ProviderIdParam { get; }
    private static OidcProviderConfigClient();
    protected virtual string get_ResourcePath();
    protected virtual string get_ProviderIdParam();
    protected virtual string ValidateProviderId(string providerId);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Providers.OidcProviderConfigClient/<SendAndDeserializeAsync>d__7")]
protected virtual Task`1<OidcProviderConfig> SendAndDeserializeAsync(ApiClient client, HttpRequestMessage request, CancellationToken cancellationToken);
    protected virtual AbstractListRequest<OidcProviderConfig> CreateListRequest(ApiClient client, ListProviderConfigsOptions options);
}
internal abstract class FirebaseAdmin.Auth.Providers.ProviderConfigClient`1 : object {
    protected string ResourcePath { get; }
    protected string ProviderIdParam { get; }
    protected abstract virtual string get_ResourcePath();
    protected abstract virtual string get_ProviderIdParam();
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Providers.ProviderConfigClient`1/<GetProviderConfigAsync>d__4")]
internal Task`1<T> GetProviderConfigAsync(ApiClient client, string providerId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Providers.ProviderConfigClient`1/<CreateProviderConfigAsync>d__5")]
internal Task`1<T> CreateProviderConfigAsync(ApiClient client, AuthProviderConfigArgs`1<T> args, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Providers.ProviderConfigClient`1/<UpdateProviderConfigAsync>d__6")]
internal Task`1<T> UpdateProviderConfigAsync(ApiClient client, AuthProviderConfigArgs`1<T> args, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Providers.ProviderConfigClient`1/<DeleteProviderConfigAsync>d__7")]
internal Task DeleteProviderConfigAsync(ApiClient client, string providerId, CancellationToken cancellationToken);
    internal PagedAsyncEnumerable`2<AuthProviderConfigs`1<T>, T> ListProviderConfigsAsync(ApiClient client, ListProviderConfigsOptions options);
    protected abstract virtual string ValidateProviderId(string providerId);
    protected abstract virtual Task`1<T> SendAndDeserializeAsync(ApiClient client, HttpRequestMessage request, CancellationToken cancellationToken);
    protected abstract virtual AbstractListRequest<T> CreateListRequest(ApiClient client, ListProviderConfigsOptions options);
    private static Uri BuildUri(string path, IDictionary`2<string, object> queryParams);
}
internal class FirebaseAdmin.Auth.Providers.ProviderConfigManager : object {
    private ApiClient apiClient;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    internal string TenantId { get; }
    internal ProviderConfigManager(Args args);
    [CompilerGeneratedAttribute]
internal string get_TenantId();
    public sealed virtual void Dispose();
    internal static ProviderConfigManager Create(FirebaseApp app, string tenantId);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Providers.ProviderConfigManager/<GetOidcProviderConfigAsync>d__7")]
internal Task`1<OidcProviderConfig> GetOidcProviderConfigAsync(string providerId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Providers.ProviderConfigManager/<GetSamlProviderConfigAsync>d__8")]
internal Task`1<SamlProviderConfig> GetSamlProviderConfigAsync(string providerId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Providers.ProviderConfigManager/<CreateProviderConfigAsync>d__9`1")]
internal Task`1<T> CreateProviderConfigAsync(AuthProviderConfigArgs`1<T> args, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Providers.ProviderConfigManager/<UpdateProviderConfigAsync>d__10`1")]
internal Task`1<T> UpdateProviderConfigAsync(AuthProviderConfigArgs`1<T> args, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Providers.ProviderConfigManager/<DeleteProviderConfigAsync>d__11")]
internal Task DeleteProviderConfigAsync(string providerId, CancellationToken cancellationToken);
    internal PagedAsyncEnumerable`2<AuthProviderConfigs`1<OidcProviderConfig>, OidcProviderConfig> ListOidcProviderConfigsAsync(ListProviderConfigsOptions options);
    internal PagedAsyncEnumerable`2<AuthProviderConfigs`1<SamlProviderConfig>, SamlProviderConfig> ListSamlProviderConfigsAsync(ListProviderConfigsOptions options);
}
public class FirebaseAdmin.Auth.Providers.SamlProviderConfig : AuthProviderConfig {
    [CompilerGeneratedAttribute]
private string <IdpEntityId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SsoUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <X509Certificates>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RpEntityId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CallbackUrl>k__BackingField;
    public string IdpEntityId { get; }
    public string SsoUrl { get; }
    public IEnumerable`1<string> X509Certificates { get; }
    public string RpEntityId { get; }
    public string CallbackUrl { get; }
    internal SamlProviderConfig(Request request);
    [CompilerGeneratedAttribute]
public string get_IdpEntityId();
    [CompilerGeneratedAttribute]
public string get_SsoUrl();
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_X509Certificates();
    [CompilerGeneratedAttribute]
public string get_RpEntityId();
    [CompilerGeneratedAttribute]
public string get_CallbackUrl();
}
public class FirebaseAdmin.Auth.Providers.SamlProviderConfigArgs : AuthProviderConfigArgs`1<SamlProviderConfig> {
    [CompilerGeneratedAttribute]
private string <IdpEntityId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SsoUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <X509Certificates>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RpEntityId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CallbackUrl>k__BackingField;
    public string IdpEntityId { get; public set; }
    public string SsoUrl { get; public set; }
    public IEnumerable`1<string> X509Certificates { get; public set; }
    public string RpEntityId { get; public set; }
    public string CallbackUrl { get; public set; }
    [CompilerGeneratedAttribute]
public string get_IdpEntityId();
    [CompilerGeneratedAttribute]
public void set_IdpEntityId(string value);
    [CompilerGeneratedAttribute]
public string get_SsoUrl();
    [CompilerGeneratedAttribute]
public void set_SsoUrl(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_X509Certificates();
    [CompilerGeneratedAttribute]
public void set_X509Certificates(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_RpEntityId();
    [CompilerGeneratedAttribute]
public void set_RpEntityId(string value);
    [CompilerGeneratedAttribute]
public string get_CallbackUrl();
    [CompilerGeneratedAttribute]
public void set_CallbackUrl(string value);
    internal virtual Request ToCreateRequest();
    internal virtual Request ToUpdateRequest();
    internal virtual ProviderConfigClient`1<SamlProviderConfig> GetClient();
    private Request ToRequest();
    private void ValidateIdpConfigForUpdate(IdpConfig idpConfig);
    private void ValidateSpConfigForUpdate(SpConfig spConfig);
}
internal class FirebaseAdmin.Auth.Providers.SamlProviderConfigClient : ProviderConfigClient`1<SamlProviderConfig> {
    internal static SamlProviderConfigClient Instance;
    protected string ResourcePath { get; }
    protected string ProviderIdParam { get; }
    private static SamlProviderConfigClient();
    protected virtual string get_ResourcePath();
    protected virtual string get_ProviderIdParam();
    protected virtual string ValidateProviderId(string providerId);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Providers.SamlProviderConfigClient/<SendAndDeserializeAsync>d__7")]
protected virtual Task`1<SamlProviderConfig> SendAndDeserializeAsync(ApiClient client, HttpRequestMessage request, CancellationToken cancellationToken);
    protected virtual AbstractListRequest<SamlProviderConfig> CreateListRequest(ApiClient client, ListProviderConfigsOptions options);
}
internal class FirebaseAdmin.Auth.ProviderUserInfo : object {
    [CompilerGeneratedAttribute]
private string <Uid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PhoneNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PhotoUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProviderId>k__BackingField;
    public string Uid { get; private set; }
    public string DisplayName { get; private set; }
    public string Email { get; private set; }
    public string PhoneNumber { get; private set; }
    public string PhotoUrl { get; private set; }
    public string ProviderId { get; private set; }
    internal ProviderUserInfo(Provider provider);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Uid();
    [CompilerGeneratedAttribute]
private void set_Uid(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DisplayName();
    [CompilerGeneratedAttribute]
private void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Email();
    [CompilerGeneratedAttribute]
private void set_Email(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_PhoneNumber();
    [CompilerGeneratedAttribute]
private void set_PhoneNumber(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_PhotoUrl();
    [CompilerGeneratedAttribute]
private void set_PhotoUrl(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProviderId();
    [CompilerGeneratedAttribute]
private void set_ProviderId(string value);
}
public class FirebaseAdmin.Auth.SessionCookieOptions : object {
    [CompilerGeneratedAttribute]
private TimeSpan <ExpiresIn>k__BackingField;
    public TimeSpan ExpiresIn { get; public set; }
    [CompilerGeneratedAttribute]
public TimeSpan get_ExpiresIn();
    [CompilerGeneratedAttribute]
public void set_ExpiresIn(TimeSpan value);
    internal SessionCookieOptions CopyAndValidate();
}
public class FirebaseAdmin.Auth.UidIdentifier : UserIdentifier {
    private string uid;
    public UidIdentifier(string uid);
    public virtual string ToString();
    internal virtual void Populate(GetAccountInfoRequest payload);
    internal virtual bool Matches(UserRecord userRecord);
}
public abstract class FirebaseAdmin.Auth.UserIdentifier : object {
    internal abstract virtual void Populate(GetAccountInfoRequest payload);
    internal abstract virtual bool Matches(UserRecord userRecord);
}
public abstract class FirebaseAdmin.Auth.UserImportHash : object {
    private string hashName;
    protected UserImportHash(string hashName);
    internal Dictionary`2<string, object> GetProperties();
    protected abstract virtual IReadOnlyDictionary`2<string, object> GetHashConfiguration();
}
public class FirebaseAdmin.Auth.UserImportOptions : object {
    [CompilerGeneratedAttribute]
private UserImportHash <Hash>k__BackingField;
    public UserImportHash Hash { get; public set; }
    [CompilerGeneratedAttribute]
public UserImportHash get_Hash();
    [CompilerGeneratedAttribute]
public void set_Hash(UserImportHash value);
    internal Dictionary`2<string, object> GetHashProperties();
}
public class FirebaseAdmin.Auth.UserImportResult : object {
    private int users;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<ErrorInfo> <Errors>k__BackingField;
    public IReadOnlyList`1<ErrorInfo> Errors { get; }
    public int SuccessCount { get; }
    public int FailureCount { get; }
    internal UserImportResult(int users, IReadOnlyList`1<ErrorInfo> errors);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<ErrorInfo> get_Errors();
    public int get_SuccessCount();
    public int get_FailureCount();
}
public class FirebaseAdmin.Auth.UserMetadata : object {
    private long creationTimestampMillis;
    private long lastSignInTimestampMillis;
    private Nullable`1<DateTime> lastRefreshTimestamp;
    public Nullable`1<DateTime> CreationTimestamp { get; }
    public Nullable`1<DateTime> LastSignInTimestamp { get; }
    public Nullable`1<DateTime> LastRefreshTimestamp { get; }
    public UserMetadata(long creationTimestamp, long lastSignInTimestamp, Nullable`1<DateTime> lastRefreshTimestamp);
    public Nullable`1<DateTime> get_CreationTimestamp();
    public Nullable`1<DateTime> get_LastSignInTimestamp();
    public Nullable`1<DateTime> get_LastRefreshTimestamp();
    private Nullable`1<DateTime> ToDateTime(long millisFromEpoch);
}
public class FirebaseAdmin.Auth.UserProvider : object {
    [CompilerGeneratedAttribute]
private string <Uid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PhotoUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProviderId>k__BackingField;
    public string Uid { get; public set; }
    public string DisplayName { get; public set; }
    public string Email { get; public set; }
    public string PhotoUrl { get; public set; }
    public string ProviderId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Uid();
    [CompilerGeneratedAttribute]
public void set_Uid(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
public void set_Email(string value);
    [CompilerGeneratedAttribute]
public string get_PhotoUrl();
    [CompilerGeneratedAttribute]
public void set_PhotoUrl(string value);
    [CompilerGeneratedAttribute]
public string get_ProviderId();
    [CompilerGeneratedAttribute]
public void set_ProviderId(string value);
    internal Request ToRequest();
}
public class FirebaseAdmin.Auth.UserRecord : object {
    internal static DateTime UnixEpoch;
    private static string DefaultProviderId;
    private long validSinceTimestampInSeconds;
    [CompilerGeneratedAttribute]
private string <Uid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PhoneNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PhotoUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EmailVerified>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserInfo[] <ProviderData>k__BackingField;
    [CompilerGeneratedAttribute]
private UserMetadata <UserMetaData>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <CustomClaims>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    public string Uid { get; }
    public string DisplayName { get; }
    public string Email { get; }
    public string PhoneNumber { get; }
    public string PhotoUrl { get; }
    public string ProviderId { get; }
    public bool EmailVerified { get; }
    public bool Disabled { get; }
    public IUserInfo[] ProviderData { get; }
    public DateTime TokensValidAfterTimestamp { get; }
    public UserMetadata UserMetaData { get; }
    public IReadOnlyDictionary`2<string, object> CustomClaims { get; }
    public string TenantId { get; }
    internal UserRecord(User user);
    private static UserRecord();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Uid();
    [CompilerGeneratedAttribute]
public sealed virtual string get_DisplayName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Email();
    [CompilerGeneratedAttribute]
public sealed virtual string get_PhoneNumber();
    [CompilerGeneratedAttribute]
public sealed virtual string get_PhotoUrl();
    public sealed virtual string get_ProviderId();
    [CompilerGeneratedAttribute]
public bool get_EmailVerified();
    [CompilerGeneratedAttribute]
public bool get_Disabled();
    [CompilerGeneratedAttribute]
public IUserInfo[] get_ProviderData();
    public DateTime get_TokensValidAfterTimestamp();
    [CompilerGeneratedAttribute]
public UserMetadata get_UserMetaData();
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, object> get_CustomClaims();
    [CompilerGeneratedAttribute]
public string get_TenantId();
    private static IReadOnlyDictionary`2<string, object> ParseCustomClaims(string customClaims);
}
public class FirebaseAdmin.Auth.UserRecordArgs : object {
    private Optional`1<string> displayName;
    private Optional`1<string> photoUrl;
    private Optional`1<string> phoneNumber;
    private Optional`1<IReadOnlyDictionary`2<string, object>> customClaims;
    private Nullable`1<bool> disabled;
    private Nullable`1<bool> emailVerified;
    [CompilerGeneratedAttribute]
private string <Uid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ValidSince>k__BackingField;
    public string Uid { get; public set; }
    public string Email { get; public set; }
    public string PhoneNumber { get; public set; }
    public string DisplayName { get; public set; }
    public bool EmailVerified { get; public set; }
    public string PhotoUrl { get; public set; }
    public bool Disabled { get; public set; }
    public string Password { get; public set; }
    internal Nullable`1<long> ValidSince { get; internal set; }
    internal IReadOnlyDictionary`2<string, object> CustomClaims { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Uid();
    [CompilerGeneratedAttribute]
public void set_Uid(string value);
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
public void set_Email(string value);
    public string get_PhoneNumber();
    public void set_PhoneNumber(string value);
    public string get_DisplayName();
    public void set_DisplayName(string value);
    public bool get_EmailVerified();
    public void set_EmailVerified(bool value);
    public string get_PhotoUrl();
    public void set_PhotoUrl(string value);
    public bool get_Disabled();
    public void set_Disabled(bool value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
internal Nullable`1<long> get_ValidSince();
    [CompilerGeneratedAttribute]
internal void set_ValidSince(Nullable`1<long> value);
    internal IReadOnlyDictionary`2<string, object> get_CustomClaims();
    internal void set_CustomClaims(IReadOnlyDictionary`2<string, object> value);
    internal static string CheckUid(string uid, bool required);
    internal static string CheckEmail(string email, bool required);
    internal static string CheckPhoneNumber(string phoneNumber, bool required);
    internal static void CheckProvider(string providerId, string providerUid, bool required);
    internal static string CheckPhotoUrl(string photoUrl);
    internal static string CheckCustomClaims(IReadOnlyDictionary`2<string, object> claims);
    internal CreateUserRequest ToCreateUserRequest();
    internal UpdateUserRequest ToUpdateUserRequest();
    private static string CheckPassword(string password);
    private Optional`1<T> Wrap(T value);
}
internal class FirebaseAdmin.Auth.Users.BatchDeleteResponse : object {
    [CompilerGeneratedAttribute]
private List`1<ErrorInfo> <Errors>k__BackingField;
    [JsonPropertyAttribute]
public List`1<ErrorInfo> Errors { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<ErrorInfo> get_Errors();
    [CompilerGeneratedAttribute]
public void set_Errors(List`1<ErrorInfo> value);
}
internal class FirebaseAdmin.Auth.Users.DownloadAccountResponse : object {
    [CompilerGeneratedAttribute]
private string <NextPageToken>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<User> <Users>k__BackingField;
    [JsonPropertyAttribute("nextPageToken")]
public string NextPageToken { get; public set; }
    [JsonPropertyAttribute("users")]
public IEnumerable`1<User> Users { get; public set; }
    [CompilerGeneratedAttribute]
public string get_NextPageToken();
    [CompilerGeneratedAttribute]
public void set_NextPageToken(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<User> get_Users();
    [CompilerGeneratedAttribute]
public void set_Users(IEnumerable`1<User> value);
}
internal class FirebaseAdmin.Auth.Users.EmailActionLinkRequest : object {
    private static string VerifyEmail;
    private static string PasswordReset;
    private static string EmailSignIn;
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <HandleCodeInApp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DynamicLinkDomain>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IosBundleId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AndroidPackageName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AndroidMinimumVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AndroidInstallApp>k__BackingField;
    [JsonPropertyAttribute("email")]
internal string Email { get; }
    [JsonPropertyAttribute("requestType")]
internal string RequestType { get; }
    [JsonPropertyAttribute("returnOobLink")]
internal bool ReturnOobLink { get; }
    [JsonPropertyAttribute("continueUrl")]
internal string Url { get; }
    [JsonPropertyAttribute("canHandleCodeInApp")]
internal Nullable`1<bool> HandleCodeInApp { get; }
    [JsonPropertyAttribute("dynamicLinkDomain")]
internal string DynamicLinkDomain { get; }
    [JsonPropertyAttribute("iOSBundleId")]
internal string IosBundleId { get; }
    [JsonPropertyAttribute("androidPackageName")]
internal string AndroidPackageName { get; }
    [JsonPropertyAttribute("androidMinimumVersion")]
internal string AndroidMinimumVersion { get; }
    [JsonPropertyAttribute("androidInstallApp")]
internal Nullable`1<bool> AndroidInstallApp { get; }
    private EmailActionLinkRequest(string type, string email, ActionCodeSettings settings);
    [CompilerGeneratedAttribute]
internal string get_Email();
    [CompilerGeneratedAttribute]
internal string get_RequestType();
    internal bool get_ReturnOobLink();
    [CompilerGeneratedAttribute]
internal string get_Url();
    [CompilerGeneratedAttribute]
internal Nullable`1<bool> get_HandleCodeInApp();
    [CompilerGeneratedAttribute]
internal string get_DynamicLinkDomain();
    [CompilerGeneratedAttribute]
internal string get_IosBundleId();
    [CompilerGeneratedAttribute]
internal string get_AndroidPackageName();
    [CompilerGeneratedAttribute]
internal string get_AndroidMinimumVersion();
    [CompilerGeneratedAttribute]
internal Nullable`1<bool> get_AndroidInstallApp();
    internal static EmailActionLinkRequest EmailVerificationLinkRequest(string email, ActionCodeSettings settings);
    internal static EmailActionLinkRequest PasswordResetLinkRequest(string email, ActionCodeSettings settings);
    internal static EmailActionLinkRequest EmailSignInLinkRequest(string email, ActionCodeSettings settings);
    private void ValidateSettings();
}
internal class FirebaseAdmin.Auth.Users.FirebaseUserManager : object {
    internal static string ClientVersionHeader;
    internal static string ClientVersion;
    private static int MaxGetAccountsBatchSize;
    private static int MaxDeleteAccountsBatchSize;
    private ErrorHandlingHttpClient`1<FirebaseAuthException> httpClient;
    private string baseUrl;
    private IClock clock;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EmulatorHost>k__BackingField;
    internal string ProjectId { get; }
    internal string TenantId { get; }
    internal string EmulatorHost { get; }
    internal FirebaseUserManager(Args args);
    private static FirebaseUserManager();
    [CompilerGeneratedAttribute]
internal string get_ProjectId();
    [CompilerGeneratedAttribute]
internal string get_TenantId();
    [CompilerGeneratedAttribute]
internal string get_EmulatorHost();
    public sealed virtual void Dispose();
    internal static FirebaseUserManager Create(FirebaseApp app, string tenantId);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Users.FirebaseUserManager/<GetUserByIdAsync>d__19")]
internal Task`1<UserRecord> GetUserByIdAsync(string uid, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Users.FirebaseUserManager/<GetUserByEmailAsync>d__20")]
internal Task`1<UserRecord> GetUserByEmailAsync(string email, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Users.FirebaseUserManager/<GetUserByPhoneNumberAsync>d__21")]
internal Task`1<UserRecord> GetUserByPhoneNumberAsync(string phoneNumber, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Users.FirebaseUserManager/<GetAccountInfoByIdentifiersAsync>d__22")]
internal Task`1<GetAccountInfoResponse> GetAccountInfoByIdentifiersAsync(IReadOnlyCollection`1<UserIdentifier> identifiers, CancellationToken cancellationToken);
    internal PagedAsyncEnumerable`2<ExportedUserRecords, ExportedUserRecord> ListUsers(ListUsersOptions options);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Users.FirebaseUserManager/<CreateUserAsync>d__24")]
internal Task`1<string> CreateUserAsync(UserRecordArgs args, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Users.FirebaseUserManager/<ImportUsersAsync>d__25")]
internal Task`1<UserImportResult> ImportUsersAsync(IEnumerable`1<ImportUserRecordArgs> users, UserImportOptions options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Users.FirebaseUserManager/<UpdateUserAsync>d__26")]
internal Task`1<string> UpdateUserAsync(UserRecordArgs args, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Users.FirebaseUserManager/<DeleteUserAsync>d__27")]
internal Task DeleteUserAsync(string uid, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Users.FirebaseUserManager/<DeleteUsersAsync>d__28")]
internal Task`1<DeleteUsersResult> DeleteUsersAsync(IReadOnlyList`1<string> uids, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Users.FirebaseUserManager/<RevokeRefreshTokensAsync>d__29")]
internal Task RevokeRefreshTokensAsync(string uid, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Users.FirebaseUserManager/<GenerateEmailActionLinkAsync>d__30")]
internal Task`1<string> GenerateEmailActionLinkAsync(EmailActionLinkRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Users.FirebaseUserManager/<CreateSessionCookieAsync>d__31")]
internal Task`1<string> CreateSessionCookieAsync(string idToken, SessionCookieOptions options, CancellationToken cancellationToken);
    private static FirebaseAuthException UnexpectedResponseException(string message, Exception inner, HttpResponseMessage resp);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Users.FirebaseUserManager/<GetUserAsync>d__33")]
private Task`1<UserRecord> GetUserAsync(UserQuery query, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Users.FirebaseUserManager/<PostAndDeserializeAsync>d__34`1")]
private Task`1<DeserializedResponseInfo`1<TResult>> PostAndDeserializeAsync(string path, object body, CancellationToken cancellationToken);
}
internal class FirebaseAdmin.Auth.Users.GetAccountInfoRequest : object {
    private IList`1<string> uids;
    private IList`1<string> emails;
    private IList`1<string> phoneNumbers;
    private IList`1<FederatedUserId> federatedUserIds;
    public void AddUid(string uid);
    public void AddEmail(string email);
    public void AddPhoneNumber(string phoneNumber);
    public void AddFederatedUserId(string providerId, string providerUid);
    internal IDictionary`2<string, object> Build();
}
internal class FirebaseAdmin.Auth.Users.GetAccountInfoResponse : object {
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<User> <Users>k__BackingField;
    [JsonPropertyAttribute]
public string Kind { get; public set; }
    [JsonPropertyAttribute]
public List`1<User> Users { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public List`1<User> get_Users();
    [CompilerGeneratedAttribute]
public void set_Users(List`1<User> value);
}
internal class FirebaseAdmin.Auth.Users.ListUsersPageManager : object {
    public sealed virtual void SetPageSize(ListUsersRequest request, int pageSize);
    public sealed virtual void SetPageToken(ListUsersRequest request, string pageToken);
    public sealed virtual IEnumerable`1<ExportedUserRecord> GetResources(ExportedUserRecords response);
    public sealed virtual string GetNextPageToken(ExportedUserRecords response);
}
internal class FirebaseAdmin.Auth.Users.ListUsersRequest : AdaptedListResourcesRequest`2<ExportedUserRecords, FirebaseAuthException> {
    public string RestPath { get; }
    protected string PageSizeParam { get; }
    protected string PageTokenParam { get; }
    protected int MaxResults { get; }
    internal ListUsersRequest(string baseUrl, ListUsersOptions options, ErrorHandlingHttpClient`1<FirebaseAuthException> httpClient);
    public virtual string get_RestPath();
    protected virtual string get_PageSizeParam();
    protected virtual string get_PageTokenParam();
    protected virtual int get_MaxResults();
    public virtual HttpRequestMessage CreateRequest(Nullable`1<bool> overrideGZipEnabled);
    [AsyncStateMachineAttribute("FirebaseAdmin.Auth.Users.ListUsersRequest/<ExecuteAsync>d__10")]
public virtual Task`1<ExportedUserRecords> ExecuteAsync(CancellationToken cancellationToken);
}
internal class FirebaseAdmin.Auth.Users.UserImportRequest : object {
    internal static int MaxImportUsers;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Request> <Users>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <HashProperties>k__BackingField;
    [JsonPropertyAttribute("users")]
internal IEnumerable`1<Request> Users { get; private set; }
    [JsonIgnoreAttribute]
internal int UserCount { get; }
    [JsonExtensionDataAttribute]
internal Dictionary`2<string, object> HashProperties { get; internal set; }
    internal UserImportRequest(IEnumerable`1<ImportUserRecordArgs> usersToImport, UserImportOptions options);
    [CompilerGeneratedAttribute]
internal IEnumerable`1<Request> get_Users();
    [CompilerGeneratedAttribute]
private void set_Users(IEnumerable`1<Request> value);
    internal int get_UserCount();
    [CompilerGeneratedAttribute]
internal Dictionary`2<string, object> get_HashProperties();
    [CompilerGeneratedAttribute]
internal void set_HashProperties(Dictionary`2<string, object> value);
}
internal class FirebaseAdmin.Auth.Utils : object {
    private static string IdToolkitUrl;
    internal static string EmulatorHostFromEnvironment { get; }
    internal static bool IsEmulatorModeFromEnvironment { get; }
    internal static string get_EmulatorHostFromEnvironment();
    internal static bool get_IsEmulatorModeFromEnvironment();
    internal static string BuildAuthUrl(string projectId, UrlOptions options);
    internal static GoogleCredential ResolveCredentials(string emulatorHost, GoogleCredential original);
}
public enum FirebaseAdmin.ErrorCode : Enum {
    public int value__;
    public static ErrorCode InvalidArgument;
    public static ErrorCode FailedPrecondition;
    public static ErrorCode OutOfRange;
    public static ErrorCode Unauthenticated;
    public static ErrorCode PermissionDenied;
    public static ErrorCode NotFound;
    public static ErrorCode Conflict;
    public static ErrorCode Aborted;
    public static ErrorCode AlreadyExists;
    public static ErrorCode ResourceExhausted;
    public static ErrorCode Cancelled;
    public static ErrorCode DataLoss;
    public static ErrorCode Unknown;
    public static ErrorCode Internal;
    public static ErrorCode Unavailable;
    public static ErrorCode DeadlineExceeded;
}
[ExtensionAttribute]
internal static class FirebaseAdmin.Extensions : object {
    private static IReadOnlyList`1<SocketError> NetworkAvailabilityErrors;
    private static Extensions();
    [ExtensionAttribute]
public static ServiceAccountCredential ToServiceAccountCredential(GoogleCredential credential);
    [ExtensionAttribute]
public static ConfigurableHttpClient CreateDefaultHttpClient(HttpClientFactory clientFactory);
    [AsyncStateMachineAttribute("FirebaseAdmin.Extensions/<PostJsonAsync>d__3`1")]
[ExtensionAttribute]
public static Task`1<HttpResponseMessage> PostJsonAsync(HttpClient client, string requestUri, T body, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static HttpContent CreateJsonHttpContent(NewtonsoftJsonSerializer serializer, object body);
    [ExtensionAttribute]
public static long UnixTimestamp(IClock clock);
    [ExtensionAttribute]
public static void DisposeIfCreated(Lazy`1<T> lazy);
    [ExtensionAttribute]
public static IReadOnlyDictionary`2<TKey, TValue> Copy(IEnumerable`1<KeyValuePair`2<TKey, TValue>> source);
    [ExtensionAttribute]
public static FirebaseException ToFirebaseException(HttpRequestException exception);
}
public class FirebaseAdmin.FirebaseApp : object {
    internal static IReadOnlyList`1<string> DefaultScopes;
    private static string DefaultAppName;
    private static Dictionary`2<string, FirebaseApp> Apps;
    private static ILogger Logger;
    private object appLock;
    private AppOptions options;
    private Dictionary`2<string, IFirebaseService> services;
    private bool deleted;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public static FirebaseApp DefaultInstance { get; }
    public AppOptions Options { get; }
    public string Name { get; }
    private FirebaseApp(AppOptions options, string name);
    private static FirebaseApp();
    public static FirebaseApp get_DefaultInstance();
    public AppOptions get_Options();
    [CompilerGeneratedAttribute]
public string get_Name();
    public static FirebaseApp GetInstance(string name);
    public static FirebaseApp Create();
    public static FirebaseApp Create(string name);
    public static FirebaseApp Create(AppOptions options);
    public static FirebaseApp Create(AppOptions options, string name);
    public void Delete();
    internal static void DeleteAll();
    internal static string GetSdkVersion();
    internal T GetOrInit(string id, ServiceFactory`1<T> initializer);
    internal string GetProjectId();
    private static AppOptions GetOptionsFromEnvironment();
}
public class FirebaseAdmin.FirebaseException : Exception {
    [CompilerGeneratedAttribute]
private ErrorCode <ErrorCode>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpResponseMessage <HttpResponse>k__BackingField;
    public ErrorCode ErrorCode { get; private set; }
    public HttpResponseMessage HttpResponse { get; private set; }
    internal FirebaseException(ErrorCode code, string message, Exception inner, HttpResponseMessage response);
    [CompilerGeneratedAttribute]
public ErrorCode get_ErrorCode();
    [CompilerGeneratedAttribute]
private void set_ErrorCode(ErrorCode value);
    [CompilerGeneratedAttribute]
public HttpResponseMessage get_HttpResponse();
    [CompilerGeneratedAttribute]
private void set_HttpResponse(HttpResponseMessage value);
}
internal abstract class FirebaseAdmin.HttpErrorHandler`1 : object {
    private static IReadOnlyDictionary`2<HttpStatusCode, ErrorCode> HttpErrorCodes;
    private static HttpErrorHandler`1();
    public sealed virtual T HandleHttpErrorResponse(HttpResponseMessage response, string body);
    protected virtual FirebaseExceptionArgs<T> CreateExceptionArgs(HttpResponseMessage response, string body);
    protected abstract virtual T CreateException(FirebaseExceptionArgs<T> args);
}
internal interface FirebaseAdmin.IFirebaseService {
    public abstract virtual void Delete();
}
public class FirebaseAdmin.Messaging.Action : object {
    [CompilerGeneratedAttribute]
private string <ActionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Icon>k__BackingField;
    [JsonPropertyAttribute("action")]
public string ActionName { get; public set; }
    [JsonPropertyAttribute("title")]
public string Title { get; public set; }
    [JsonPropertyAttribute("icon")]
public string Icon { get; public set; }
    internal Action(Action action);
    [CompilerGeneratedAttribute]
public string get_ActionName();
    [CompilerGeneratedAttribute]
public void set_ActionName(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Icon();
    [CompilerGeneratedAttribute]
public void set_Icon(string value);
}
public class FirebaseAdmin.Messaging.AndroidConfig : object {
    [CompilerGeneratedAttribute]
private string <CollapseKey>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Priority> <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <TimeToLive>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RestrictedPackageName>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private AndroidNotification <Notification>k__BackingField;
    [CompilerGeneratedAttribute]
private AndroidFcmOptions <FcmOptions>k__BackingField;
    [JsonPropertyAttribute("collapse_key")]
public string CollapseKey { get; public set; }
    [JsonIgnoreAttribute]
public Nullable`1<Priority> Priority { get; public set; }
    [JsonIgnoreAttribute]
public Nullable`1<TimeSpan> TimeToLive { get; public set; }
    [JsonPropertyAttribute("restricted_package_name")]
public string RestrictedPackageName { get; public set; }
    [JsonPropertyAttribute("data")]
public IReadOnlyDictionary`2<string, string> Data { get; public set; }
    [JsonPropertyAttribute("notification")]
public AndroidNotification Notification { get; public set; }
    [JsonPropertyAttribute("fcm_options")]
public AndroidFcmOptions FcmOptions { get; public set; }
    [JsonPropertyAttribute("priority")]
private string PriorityString { get; private set; }
    [JsonPropertyAttribute("ttl")]
private string TtlString { get; private set; }
    [CompilerGeneratedAttribute]
public string get_CollapseKey();
    [CompilerGeneratedAttribute]
public void set_CollapseKey(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<Priority> get_Priority();
    [CompilerGeneratedAttribute]
public void set_Priority(Nullable`1<Priority> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_TimeToLive();
    [CompilerGeneratedAttribute]
public void set_TimeToLive(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public string get_RestrictedPackageName();
    [CompilerGeneratedAttribute]
public void set_RestrictedPackageName(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(IReadOnlyDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public AndroidNotification get_Notification();
    [CompilerGeneratedAttribute]
public void set_Notification(AndroidNotification value);
    [CompilerGeneratedAttribute]
public AndroidFcmOptions get_FcmOptions();
    [CompilerGeneratedAttribute]
public void set_FcmOptions(AndroidFcmOptions value);
    private string get_PriorityString();
    private void set_PriorityString(string value);
    private string get_TtlString();
    private void set_TtlString(string value);
    internal AndroidConfig CopyAndValidate();
}
public class FirebaseAdmin.Messaging.AndroidFcmOptions : object {
    [CompilerGeneratedAttribute]
private string <AnalyticsLabel>k__BackingField;
    [JsonPropertyAttribute("analytics_label")]
public string AnalyticsLabel { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AnalyticsLabel();
    [CompilerGeneratedAttribute]
public void set_AnalyticsLabel(string value);
    internal AndroidFcmOptions CopyAndValidate();
}
public class FirebaseAdmin.Messaging.AndroidNotification : object {
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Body>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Icon>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Color>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Sound>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tag>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ImageUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClickAction>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TitleLocKey>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <TitleLocArgs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BodyLocKey>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <BodyLocArgs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ChannelId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Ticker>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Sticky>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <EventTimestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LocalOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<NotificationPriority> <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private Int64[] <VibrateTimingsMillis>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DefaultVibrateTimings>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DefaultSound>k__BackingField;
    [CompilerGeneratedAttribute]
private LightSettings <LightSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DefaultLightSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<NotificationVisibility> <Visibility>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NotificationCount>k__BackingField;
    [JsonPropertyAttribute("title")]
public string Title { get; public set; }
    [JsonPropertyAttribute("body")]
public string Body { get; public set; }
    [JsonPropertyAttribute("icon")]
public string Icon { get; public set; }
    [JsonPropertyAttribute("color")]
public string Color { get; public set; }
    [JsonPropertyAttribute("sound")]
public string Sound { get; public set; }
    [JsonPropertyAttribute("tag")]
public string Tag { get; public set; }
    [JsonPropertyAttribute("image")]
public string ImageUrl { get; public set; }
    [JsonPropertyAttribute("click_action")]
public string ClickAction { get; public set; }
    [JsonPropertyAttribute("title_loc_key")]
public string TitleLocKey { get; public set; }
    [JsonPropertyAttribute("title_loc_args")]
public IEnumerable`1<string> TitleLocArgs { get; public set; }
    [JsonPropertyAttribute("body_loc_key")]
public string BodyLocKey { get; public set; }
    [JsonPropertyAttribute("body_loc_args")]
public IEnumerable`1<string> BodyLocArgs { get; public set; }
    [JsonPropertyAttribute("channel_id")]
public string ChannelId { get; public set; }
    [JsonPropertyAttribute("ticker")]
public string Ticker { get; public set; }
    [JsonPropertyAttribute("sticky")]
public bool Sticky { get; public set; }
    [JsonIgnoreAttribute]
public DateTime EventTimestamp { get; public set; }
    [JsonPropertyAttribute("local_only")]
public bool LocalOnly { get; public set; }
    [JsonIgnoreAttribute]
public Nullable`1<NotificationPriority> Priority { get; public set; }
    [JsonIgnoreAttribute]
public Int64[] VibrateTimingsMillis { get; public set; }
    [JsonPropertyAttribute("default_vibrate_timings")]
public bool DefaultVibrateTimings { get; public set; }
    [JsonPropertyAttribute("default_sound")]
public bool DefaultSound { get; public set; }
    [JsonPropertyAttribute("light_settings")]
public LightSettings LightSettings { get; public set; }
    [JsonPropertyAttribute("default_light_settings")]
public bool DefaultLightSettings { get; public set; }
    [JsonIgnoreAttribute]
public Nullable`1<NotificationVisibility> Visibility { get; public set; }
    [JsonPropertyAttribute("notification_count")]
public Nullable`1<int> NotificationCount { get; public set; }
    [JsonPropertyAttribute("notification_priority")]
private string PriorityString { get; private set; }
    [JsonPropertyAttribute("visibility")]
private string VisibilityString { get; private set; }
    [JsonPropertyAttribute("vibrate_timings")]
private List`1<string> VibrateTimingsString { get; private set; }
    [JsonPropertyAttribute("event_time")]
private string EventTimeString { get; private set; }
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(string value);
    [CompilerGeneratedAttribute]
public string get_Icon();
    [CompilerGeneratedAttribute]
public void set_Icon(string value);
    [CompilerGeneratedAttribute]
public string get_Color();
    [CompilerGeneratedAttribute]
public void set_Color(string value);
    [CompilerGeneratedAttribute]
public string get_Sound();
    [CompilerGeneratedAttribute]
public void set_Sound(string value);
    [CompilerGeneratedAttribute]
public string get_Tag();
    [CompilerGeneratedAttribute]
public void set_Tag(string value);
    [CompilerGeneratedAttribute]
public string get_ImageUrl();
    [CompilerGeneratedAttribute]
public void set_ImageUrl(string value);
    [CompilerGeneratedAttribute]
public string get_ClickAction();
    [CompilerGeneratedAttribute]
public void set_ClickAction(string value);
    [CompilerGeneratedAttribute]
public string get_TitleLocKey();
    [CompilerGeneratedAttribute]
public void set_TitleLocKey(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_TitleLocArgs();
    [CompilerGeneratedAttribute]
public void set_TitleLocArgs(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_BodyLocKey();
    [CompilerGeneratedAttribute]
public void set_BodyLocKey(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_BodyLocArgs();
    [CompilerGeneratedAttribute]
public void set_BodyLocArgs(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_ChannelId();
    [CompilerGeneratedAttribute]
public void set_ChannelId(string value);
    [CompilerGeneratedAttribute]
public string get_Ticker();
    [CompilerGeneratedAttribute]
public void set_Ticker(string value);
    [CompilerGeneratedAttribute]
public bool get_Sticky();
    [CompilerGeneratedAttribute]
public void set_Sticky(bool value);
    [CompilerGeneratedAttribute]
public DateTime get_EventTimestamp();
    [CompilerGeneratedAttribute]
public void set_EventTimestamp(DateTime value);
    [CompilerGeneratedAttribute]
public bool get_LocalOnly();
    [CompilerGeneratedAttribute]
public void set_LocalOnly(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<NotificationPriority> get_Priority();
    [CompilerGeneratedAttribute]
public void set_Priority(Nullable`1<NotificationPriority> value);
    [CompilerGeneratedAttribute]
public Int64[] get_VibrateTimingsMillis();
    [CompilerGeneratedAttribute]
public void set_VibrateTimingsMillis(Int64[] value);
    [CompilerGeneratedAttribute]
public bool get_DefaultVibrateTimings();
    [CompilerGeneratedAttribute]
public void set_DefaultVibrateTimings(bool value);
    [CompilerGeneratedAttribute]
public bool get_DefaultSound();
    [CompilerGeneratedAttribute]
public void set_DefaultSound(bool value);
    [CompilerGeneratedAttribute]
public LightSettings get_LightSettings();
    [CompilerGeneratedAttribute]
public void set_LightSettings(LightSettings value);
    [CompilerGeneratedAttribute]
public bool get_DefaultLightSettings();
    [CompilerGeneratedAttribute]
public void set_DefaultLightSettings(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<NotificationVisibility> get_Visibility();
    [CompilerGeneratedAttribute]
public void set_Visibility(Nullable`1<NotificationVisibility> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_NotificationCount();
    [CompilerGeneratedAttribute]
public void set_NotificationCount(Nullable`1<int> value);
    private string get_PriorityString();
    private void set_PriorityString(string value);
    private string get_VisibilityString();
    private void set_VisibilityString(string value);
    private List`1<string> get_VibrateTimingsString();
    private void set_VibrateTimingsString(List`1<string> value);
    private string get_EventTimeString();
    private void set_EventTimeString(string value);
    internal AndroidNotification CopyAndValidate();
}
public class FirebaseAdmin.Messaging.ApnsConfig : object {
    private ApnsPayload payload;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private ApnsFcmOptions <FcmOptions>k__BackingField;
    [JsonPropertyAttribute("headers")]
public IReadOnlyDictionary`2<string, string> Headers { get; public set; }
    [JsonPropertyAttribute("fcm_options")]
public ApnsFcmOptions FcmOptions { get; public set; }
    [JsonIgnoreAttribute]
public Aps Aps { get; public set; }
    [JsonIgnoreAttribute]
public IDictionary`2<string, object> CustomData { get; public set; }
    [JsonPropertyAttribute("payload")]
private ApnsPayload Payload { get; private set; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(IReadOnlyDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public ApnsFcmOptions get_FcmOptions();
    [CompilerGeneratedAttribute]
public void set_FcmOptions(ApnsFcmOptions value);
    public Aps get_Aps();
    public void set_Aps(Aps value);
    public IDictionary`2<string, object> get_CustomData();
    public void set_CustomData(IDictionary`2<string, object> value);
    private ApnsPayload get_Payload();
    private void set_Payload(ApnsPayload value);
    internal ApnsConfig CopyAndValidate();
}
public class FirebaseAdmin.Messaging.ApnsFcmOptions : object {
    [CompilerGeneratedAttribute]
private string <AnalyticsLabel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ImageUrl>k__BackingField;
    [JsonPropertyAttribute("analytics_label")]
public string AnalyticsLabel { get; public set; }
    [JsonPropertyAttribute("image")]
public string ImageUrl { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AnalyticsLabel();
    [CompilerGeneratedAttribute]
public void set_AnalyticsLabel(string value);
    [CompilerGeneratedAttribute]
public string get_ImageUrl();
    [CompilerGeneratedAttribute]
public void set_ImageUrl(string value);
    internal ApnsFcmOptions CopyAndValidate();
}
public class FirebaseAdmin.Messaging.Aps : object {
    private static NewtonsoftJsonSerializer Serializer;
    [CompilerGeneratedAttribute]
private ApsAlert <Alert>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AlertString>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Badge>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Sound>k__BackingField;
    [CompilerGeneratedAttribute]
private CriticalSound <CriticalSound>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ContentAvailable>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MutableContent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ThreadId>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <CustomData>k__BackingField;
    [JsonIgnoreAttribute]
public ApsAlert Alert { get; public set; }
    [JsonIgnoreAttribute]
public string AlertString { get; public set; }
    [JsonPropertyAttribute("badge")]
public Nullable`1<int> Badge { get; public set; }
    [JsonIgnoreAttribute]
public string Sound { get; public set; }
    [JsonIgnoreAttribute]
public CriticalSound CriticalSound { get; public set; }
    [JsonIgnoreAttribute]
public bool ContentAvailable { get; public set; }
    [JsonIgnoreAttribute]
public bool MutableContent { get; public set; }
    [JsonPropertyAttribute("category")]
public string Category { get; public set; }
    [JsonPropertyAttribute("thread-id")]
public string ThreadId { get; public set; }
    [JsonExtensionDataAttribute]
public IDictionary`2<string, object> CustomData { get; public set; }
    [JsonPropertyAttribute("alert")]
private object AlertObject { get; private set; }
    [JsonPropertyAttribute("sound")]
private object SoundObject { get; private set; }
    [JsonPropertyAttribute("content-available")]
private Nullable`1<int> ContentAvailableInt { get; private set; }
    [JsonPropertyAttribute("mutable-content")]
private Nullable`1<int> MutableContentInt { get; private set; }
    private static Aps();
    [CompilerGeneratedAttribute]
public ApsAlert get_Alert();
    [CompilerGeneratedAttribute]
public void set_Alert(ApsAlert value);
    [CompilerGeneratedAttribute]
public string get_AlertString();
    [CompilerGeneratedAttribute]
public void set_AlertString(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Badge();
    [CompilerGeneratedAttribute]
public void set_Badge(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Sound();
    [CompilerGeneratedAttribute]
public void set_Sound(string value);
    [CompilerGeneratedAttribute]
public CriticalSound get_CriticalSound();
    [CompilerGeneratedAttribute]
public void set_CriticalSound(CriticalSound value);
    [CompilerGeneratedAttribute]
public bool get_ContentAvailable();
    [CompilerGeneratedAttribute]
public void set_ContentAvailable(bool value);
    [CompilerGeneratedAttribute]
public bool get_MutableContent();
    [CompilerGeneratedAttribute]
public void set_MutableContent(bool value);
    [CompilerGeneratedAttribute]
public string get_Category();
    [CompilerGeneratedAttribute]
public void set_Category(string value);
    [CompilerGeneratedAttribute]
public string get_ThreadId();
    [CompilerGeneratedAttribute]
public void set_ThreadId(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_CustomData();
    [CompilerGeneratedAttribute]
public void set_CustomData(IDictionary`2<string, object> value);
    private object get_AlertObject();
    private void set_AlertObject(object value);
    private object get_SoundObject();
    private void set_SoundObject(object value);
    private Nullable`1<int> get_ContentAvailableInt();
    private void set_ContentAvailableInt(Nullable`1<int> value);
    private Nullable`1<int> get_MutableContentInt();
    private void set_MutableContentInt(Nullable`1<int> value);
    internal Aps CopyAndValidate();
}
public class FirebaseAdmin.Messaging.ApsAlert : object {
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Subtitle>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Body>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LocKey>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <LocArgs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TitleLocKey>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <TitleLocArgs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubtitleLocKey>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <SubtitleLocArgs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActionLocKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LaunchImage>k__BackingField;
    [JsonPropertyAttribute("title")]
public string Title { get; public set; }
    [JsonPropertyAttribute("subtitle")]
public string Subtitle { get; public set; }
    [JsonPropertyAttribute("body")]
public string Body { get; public set; }
    [JsonPropertyAttribute("loc-key")]
public string LocKey { get; public set; }
    [JsonPropertyAttribute("loc-args")]
public IEnumerable`1<string> LocArgs { get; public set; }
    [JsonPropertyAttribute("title-loc-key")]
public string TitleLocKey { get; public set; }
    [JsonPropertyAttribute("title-loc-args")]
public IEnumerable`1<string> TitleLocArgs { get; public set; }
    [JsonPropertyAttribute("subtitle-loc-key")]
public string SubtitleLocKey { get; public set; }
    [JsonPropertyAttribute("subtitle-loc-args")]
public IEnumerable`1<string> SubtitleLocArgs { get; public set; }
    [JsonPropertyAttribute("action-loc-key")]
public string ActionLocKey { get; public set; }
    [JsonPropertyAttribute("launch-image")]
public string LaunchImage { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Subtitle();
    [CompilerGeneratedAttribute]
public void set_Subtitle(string value);
    [CompilerGeneratedAttribute]
public string get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(string value);
    [CompilerGeneratedAttribute]
public string get_LocKey();
    [CompilerGeneratedAttribute]
public void set_LocKey(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_LocArgs();
    [CompilerGeneratedAttribute]
public void set_LocArgs(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_TitleLocKey();
    [CompilerGeneratedAttribute]
public void set_TitleLocKey(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_TitleLocArgs();
    [CompilerGeneratedAttribute]
public void set_TitleLocArgs(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_SubtitleLocKey();
    [CompilerGeneratedAttribute]
public void set_SubtitleLocKey(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_SubtitleLocArgs();
    [CompilerGeneratedAttribute]
public void set_SubtitleLocArgs(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_ActionLocKey();
    [CompilerGeneratedAttribute]
public void set_ActionLocKey(string value);
    [CompilerGeneratedAttribute]
public string get_LaunchImage();
    [CompilerGeneratedAttribute]
public void set_LaunchImage(string value);
    internal ApsAlert CopyAndValidate();
}
public class FirebaseAdmin.Messaging.BatchResponse : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<SendResponse> <Responses>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SuccessCount>k__BackingField;
    public IReadOnlyList`1<SendResponse> Responses { get; }
    public int SuccessCount { get; }
    public int FailureCount { get; }
    internal BatchResponse(IEnumerable`1<SendResponse> responses);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<SendResponse> get_Responses();
    [CompilerGeneratedAttribute]
public int get_SuccessCount();
    public int get_FailureCount();
}
public class FirebaseAdmin.Messaging.CriticalSound : object {
    [CompilerGeneratedAttribute]
private bool <Critical>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Volume>k__BackingField;
    [JsonIgnoreAttribute]
public bool Critical { get; public set; }
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("volume")]
public Nullable`1<double> Volume { get; public set; }
    [JsonPropertyAttribute("critical")]
private Nullable`1<int> CriticalInt { get; private set; }
    [CompilerGeneratedAttribute]
public bool get_Critical();
    [CompilerGeneratedAttribute]
public void set_Critical(bool value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Volume();
    [CompilerGeneratedAttribute]
public void set_Volume(Nullable`1<double> value);
    private Nullable`1<int> get_CriticalInt();
    private void set_CriticalInt(Nullable`1<int> value);
    internal CriticalSound CopyAndValidate();
}
public enum FirebaseAdmin.Messaging.Direction : Enum {
    public int value__;
    public static Direction Auto;
    public static Direction LeftToRight;
    public static Direction RightToLeft;
}
public class FirebaseAdmin.Messaging.ErrorInfo : object {
    private static string UnknownError;
    private static IReadOnlyDictionary`2<string, string> ErrorCodes;
    [CompilerGeneratedAttribute]
private int <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    public int Index { get; private set; }
    public string Reason { get; private set; }
    public ErrorInfo(int index, string reason);
    private static ErrorInfo();
    [CompilerGeneratedAttribute]
public int get_Index();
    [CompilerGeneratedAttribute]
private void set_Index(int value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
private void set_Reason(string value);
}
public class FirebaseAdmin.Messaging.FcmOptions : object {
    [CompilerGeneratedAttribute]
private string <AnalyticsLabel>k__BackingField;
    [JsonPropertyAttribute("analytics_label")]
public string AnalyticsLabel { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AnalyticsLabel();
    [CompilerGeneratedAttribute]
public void set_AnalyticsLabel(string value);
    internal FcmOptions CopyAndValidate();
}
public class FirebaseAdmin.Messaging.FirebaseMessaging : object {
    private FirebaseMessagingClient messagingClient;
    private InstanceIdClient instanceIdClient;
    public static FirebaseMessaging DefaultInstance { get; }
    private FirebaseMessaging(FirebaseApp app);
    public static FirebaseMessaging get_DefaultInstance();
    public static FirebaseMessaging GetMessaging(FirebaseApp app);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessaging/<SendAsync>d__6")]
public Task`1<string> SendAsync(Message message);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessaging/<SendAsync>d__7")]
public Task`1<string> SendAsync(Message message, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessaging/<SendAsync>d__8")]
public Task`1<string> SendAsync(Message message, bool dryRun);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessaging/<SendAsync>d__9")]
public Task`1<string> SendAsync(Message message, bool dryRun, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessaging/<SendEachAsync>d__10")]
public Task`1<BatchResponse> SendEachAsync(IEnumerable`1<Message> messages);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessaging/<SendEachAsync>d__11")]
public Task`1<BatchResponse> SendEachAsync(IEnumerable`1<Message> messages, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessaging/<SendEachAsync>d__12")]
public Task`1<BatchResponse> SendEachAsync(IEnumerable`1<Message> messages, bool dryRun);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessaging/<SendEachAsync>d__13")]
public Task`1<BatchResponse> SendEachAsync(IEnumerable`1<Message> messages, bool dryRun, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessaging/<SendEachForMulticastAsync>d__14")]
public Task`1<BatchResponse> SendEachForMulticastAsync(MulticastMessage message);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessaging/<SendEachForMulticastAsync>d__15")]
public Task`1<BatchResponse> SendEachForMulticastAsync(MulticastMessage message, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessaging/<SendEachForMulticastAsync>d__16")]
public Task`1<BatchResponse> SendEachForMulticastAsync(MulticastMessage message, bool dryRun);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessaging/<SendEachForMulticastAsync>d__17")]
public Task`1<BatchResponse> SendEachForMulticastAsync(MulticastMessage message, bool dryRun, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessaging/<SendAllAsync>d__18")]
[ObsoleteAttribute("Use SendEachAsync(IEnumerable{Message} instead")]
public Task`1<BatchResponse> SendAllAsync(IEnumerable`1<Message> messages);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessaging/<SendAllAsync>d__19")]
[ObsoleteAttribute("Use SendEachAsync(IEnumerable{Message}, CancellationToken) instead")]
public Task`1<BatchResponse> SendAllAsync(IEnumerable`1<Message> messages, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessaging/<SendAllAsync>d__20")]
[ObsoleteAttribute("Use SendEachAsync(IEnumerable{Message}, bool) instead")]
public Task`1<BatchResponse> SendAllAsync(IEnumerable`1<Message> messages, bool dryRun);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessaging/<SendAllAsync>d__21")]
[ObsoleteAttribute("Use SendEachAsync(IEnumerable{Message}, bool, CancellationToken) instead")]
public Task`1<BatchResponse> SendAllAsync(IEnumerable`1<Message> messages, bool dryRun, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessaging/<SendMulticastAsync>d__22")]
[ObsoleteAttribute("Use SendEachForMulticastAsync(MulticastMessage) instead")]
public Task`1<BatchResponse> SendMulticastAsync(MulticastMessage message);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessaging/<SendMulticastAsync>d__23")]
[ObsoleteAttribute("Use SendEachForMulticastAsync(MulticastMessage, CancellationToken) instead")]
public Task`1<BatchResponse> SendMulticastAsync(MulticastMessage message, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessaging/<SendMulticastAsync>d__24")]
[ObsoleteAttribute("Use SendEachForMulticastAsync(MulticastMessage, bool) instead")]
public Task`1<BatchResponse> SendMulticastAsync(MulticastMessage message, bool dryRun);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessaging/<SendMulticastAsync>d__25")]
[ObsoleteAttribute("Use SendEachForMulticastAsync(MulticastMessage, bool, CancellationToken) instead")]
public Task`1<BatchResponse> SendMulticastAsync(MulticastMessage message, bool dryRun, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessaging/<SubscribeToTopicAsync>d__26")]
public Task`1<TopicManagementResponse> SubscribeToTopicAsync(IReadOnlyList`1<string> registrationTokens, string topic);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessaging/<UnsubscribeFromTopicAsync>d__27")]
public Task`1<TopicManagementResponse> UnsubscribeFromTopicAsync(IReadOnlyList`1<string> registrationTokens, string topic);
    private sealed virtual override void FirebaseAdmin.IFirebaseService.Delete();
}
internal class FirebaseAdmin.Messaging.FirebaseMessagingClient : object {
    private static string FcmBaseUrl;
    private static string FcmSendUrl;
    private static string FcmBatchUrl;
    private ErrorHandlingHttpClient`1<FirebaseMessagingException> httpClient;
    private string sendUrl;
    private string restPath;
    private FCMClientService fcmClientService;
    internal static string ClientVersion { get; }
    internal FirebaseMessagingClient(Args args);
    internal static string get_ClientVersion();
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessagingClient/<SendAsync>d__10")]
public Task`1<string> SendAsync(Message message, bool dryRun, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessagingClient/<SendEachAsync>d__11")]
public Task`1<BatchResponse> SendEachAsync(IEnumerable`1<Message> messages, bool dryRun, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessagingClient/<SendAllAsync>d__12")]
public Task`1<BatchResponse> SendAllAsync(IEnumerable`1<Message> messages, bool dryRun, CancellationToken cancellationToken);
    public sealed virtual void Dispose();
    internal static FirebaseMessagingClient Create(FirebaseApp app);
    private static void AddCommonHeaders(HttpRequestMessage request);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessagingClient/<SendBatchRequestAsync>d__16")]
private Task`1<BatchResponse> SendBatchRequestAsync(IEnumerable`1<Message> messages, bool dryRun, CancellationToken cancellationToken);
    private BatchRequest CreateBatchRequest(IEnumerable`1<Message> messages, bool dryRun, OnResponse`1<SingleMessageResponse> callback);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.FirebaseMessagingClient/<SendAsyncForSendResponse>d__18")]
private Task`1<SendResponse> SendAsyncForSendResponse(Message message, bool dryRun, CancellationToken cancellationToken);
}
public class FirebaseAdmin.Messaging.FirebaseMessagingException : FirebaseException {
    [CompilerGeneratedAttribute]
private Nullable`1<MessagingErrorCode> <MessagingErrorCode>k__BackingField;
    public Nullable`1<MessagingErrorCode> MessagingErrorCode { get; private set; }
    internal FirebaseMessagingException(ErrorCode code, string message, Nullable`1<MessagingErrorCode> fcmCode, Exception inner, HttpResponseMessage response);
    [CompilerGeneratedAttribute]
public Nullable`1<MessagingErrorCode> get_MessagingErrorCode();
    [CompilerGeneratedAttribute]
private void set_MessagingErrorCode(Nullable`1<MessagingErrorCode> value);
}
internal class FirebaseAdmin.Messaging.InstanceIdClient : object {
    private static string IidHost;
    private static string IidSubscriberPath;
    private static string IidUnsubscribePath;
    private ErrorHandlingHttpClient`1<FirebaseMessagingException> httpClient;
    internal InstanceIdClient(HttpClientFactory clientFactory, GoogleCredential credential, RetryOptions retryOptions);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.InstanceIdClient/<SubscribeToTopicAsync>d__5")]
public Task`1<TopicManagementResponse> SubscribeToTopicAsync(IReadOnlyList`1<string> registrationTokens, string topic);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.InstanceIdClient/<UnsubscribeFromTopicAsync>d__6")]
public Task`1<TopicManagementResponse> UnsubscribeFromTopicAsync(IReadOnlyList`1<string> registrationTokens, string topic);
    public sealed virtual void Dispose();
    internal static InstanceIdClient Create(FirebaseApp app);
    [AsyncStateMachineAttribute("FirebaseAdmin.Messaging.InstanceIdClient/<SendInstanceIdRequest>d__9")]
private Task`1<TopicManagementResponse> SendInstanceIdRequest(IReadOnlyList`1<string> registrationTokens, string topic, string path);
    private void ValidateRegistrationTokenList(IReadOnlyList`1<string> registrationTokens);
    private string GetPrefixedTopic(string topic);
}
internal class FirebaseAdmin.Messaging.InstanceIdServiceResponse : object {
    [CompilerGeneratedAttribute]
private List`1<InstanceIdServiceResponseElement> <Results>k__BackingField;
    [JsonPropertyAttribute("results")]
public List`1<InstanceIdServiceResponseElement> Results { get; private set; }
    public int ErrorCount { get; }
    public int ResultCount { get; }
    [CompilerGeneratedAttribute]
public List`1<InstanceIdServiceResponseElement> get_Results();
    [CompilerGeneratedAttribute]
private void set_Results(List`1<InstanceIdServiceResponseElement> value);
    public int get_ErrorCount();
    public int get_ResultCount();
}
public class FirebaseAdmin.Messaging.LightSettings : object {
    private LightSettingsColor lightColor;
    [CompilerGeneratedAttribute]
private long <LightOnDurationMillis>k__BackingField;
    [CompilerGeneratedAttribute]
private long <LightOffDurationMillis>k__BackingField;
    [JsonIgnoreAttribute]
public string Color { get; public set; }
    [JsonIgnoreAttribute]
public long LightOnDurationMillis { get; public set; }
    [JsonIgnoreAttribute]
public long LightOffDurationMillis { get; public set; }
    [JsonPropertyAttribute("color")]
private LightSettingsColor LightColor { get; private set; }
    [JsonPropertyAttribute("light_on_duration")]
private string LightOnDurationMillisString { get; private set; }
    [JsonPropertyAttribute("light_off_duration")]
private string LightOffDurationMillisString { get; private set; }
    public string get_Color();
    public void set_Color(string value);
    [CompilerGeneratedAttribute]
public long get_LightOnDurationMillis();
    [CompilerGeneratedAttribute]
public void set_LightOnDurationMillis(long value);
    [CompilerGeneratedAttribute]
public long get_LightOffDurationMillis();
    [CompilerGeneratedAttribute]
public void set_LightOffDurationMillis(long value);
    private LightSettingsColor get_LightColor();
    private void set_LightColor(LightSettingsColor value);
    private string get_LightOnDurationMillisString();
    private void set_LightOnDurationMillisString(string value);
    private string get_LightOffDurationMillisString();
    private void set_LightOffDurationMillisString(string value);
    internal LightSettings CopyAndValidate();
}
public class FirebaseAdmin.Messaging.Message : object {
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Topic>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Condition>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private Notification <Notification>k__BackingField;
    [CompilerGeneratedAttribute]
private AndroidConfig <Android>k__BackingField;
    [CompilerGeneratedAttribute]
private WebpushConfig <Webpush>k__BackingField;
    [CompilerGeneratedAttribute]
private ApnsConfig <Apns>k__BackingField;
    [CompilerGeneratedAttribute]
private FcmOptions <FcmOptions>k__BackingField;
    [JsonPropertyAttribute("token")]
public string Token { get; public set; }
    [JsonIgnoreAttribute]
public string Topic { get; public set; }
    [JsonPropertyAttribute("condition")]
public string Condition { get; public set; }
    [JsonPropertyAttribute("data")]
public IReadOnlyDictionary`2<string, string> Data { get; public set; }
    [JsonPropertyAttribute("notification")]
public Notification Notification { get; public set; }
    [JsonPropertyAttribute("android")]
public AndroidConfig Android { get; public set; }
    [JsonPropertyAttribute("webpush")]
public WebpushConfig Webpush { get; public set; }
    [JsonPropertyAttribute("apns")]
public ApnsConfig Apns { get; public set; }
    [JsonPropertyAttribute("fcm_options")]
public FcmOptions FcmOptions { get; public set; }
    [JsonPropertyAttribute("topic")]
private string UnprefixedTopic { get; private set; }
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    [CompilerGeneratedAttribute]
public string get_Topic();
    [CompilerGeneratedAttribute]
public void set_Topic(string value);
    [CompilerGeneratedAttribute]
public string get_Condition();
    [CompilerGeneratedAttribute]
public void set_Condition(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(IReadOnlyDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Notification get_Notification();
    [CompilerGeneratedAttribute]
public void set_Notification(Notification value);
    [CompilerGeneratedAttribute]
public AndroidConfig get_Android();
    [CompilerGeneratedAttribute]
public void set_Android(AndroidConfig value);
    [CompilerGeneratedAttribute]
public WebpushConfig get_Webpush();
    [CompilerGeneratedAttribute]
public void set_Webpush(WebpushConfig value);
    [CompilerGeneratedAttribute]
public ApnsConfig get_Apns();
    [CompilerGeneratedAttribute]
public void set_Apns(ApnsConfig value);
    [CompilerGeneratedAttribute]
public FcmOptions get_FcmOptions();
    [CompilerGeneratedAttribute]
public void set_FcmOptions(FcmOptions value);
    private string get_UnprefixedTopic();
    private void set_UnprefixedTopic(string value);
    internal Message CopyAndValidate();
}
public enum FirebaseAdmin.Messaging.MessagingErrorCode : Enum {
    public int value__;
    public static MessagingErrorCode ThirdPartyAuthError;
    public static MessagingErrorCode InvalidArgument;
    public static MessagingErrorCode Internal;
    public static MessagingErrorCode QuotaExceeded;
    public static MessagingErrorCode SenderIdMismatch;
    public static MessagingErrorCode Unavailable;
    public static MessagingErrorCode Unregistered;
}
internal class FirebaseAdmin.Messaging.MessagingErrorHandler : PlatformErrorHandler`1<FirebaseMessagingException> {
    internal static MessagingErrorHandler Instance;
    private static string MessagingErrorType;
    private static IReadOnlyDictionary`2<string, MessagingErrorCode> MessagingErrorCodes;
    private static MessagingErrorHandler();
    public sealed virtual FirebaseMessagingException HandleHttpRequestException(HttpRequestException exception);
    public sealed virtual FirebaseMessagingException HandleDeserializeException(Exception exception, ResponseInfo responseInfo);
    protected virtual FirebaseMessagingException CreateException(FirebaseExceptionArgs<FirebaseMessagingException> args);
    private Nullable`1<MessagingErrorCode> GetMessagingErrorCode(string body);
}
public class FirebaseAdmin.Messaging.MulticastMessage : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <Tokens>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private Notification <Notification>k__BackingField;
    [CompilerGeneratedAttribute]
private AndroidConfig <Android>k__BackingField;
    [CompilerGeneratedAttribute]
private WebpushConfig <Webpush>k__BackingField;
    [CompilerGeneratedAttribute]
private ApnsConfig <Apns>k__BackingField;
    public IReadOnlyList`1<string> Tokens { get; public set; }
    public IReadOnlyDictionary`2<string, string> Data { get; public set; }
    public Notification Notification { get; public set; }
    public AndroidConfig Android { get; public set; }
    public WebpushConfig Webpush { get; public set; }
    public ApnsConfig Apns { get; public set; }
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<string> get_Tokens();
    [CompilerGeneratedAttribute]
public void set_Tokens(IReadOnlyList`1<string> value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(IReadOnlyDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Notification get_Notification();
    [CompilerGeneratedAttribute]
public void set_Notification(Notification value);
    [CompilerGeneratedAttribute]
public AndroidConfig get_Android();
    [CompilerGeneratedAttribute]
public void set_Android(AndroidConfig value);
    [CompilerGeneratedAttribute]
public WebpushConfig get_Webpush();
    [CompilerGeneratedAttribute]
public void set_Webpush(WebpushConfig value);
    [CompilerGeneratedAttribute]
public ApnsConfig get_Apns();
    [CompilerGeneratedAttribute]
public void set_Apns(ApnsConfig value);
    internal List`1<Message> GetMessageList();
}
public class FirebaseAdmin.Messaging.Notification : object {
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Body>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ImageUrl>k__BackingField;
    [JsonPropertyAttribute("title")]
public string Title { get; public set; }
    [JsonPropertyAttribute("body")]
public string Body { get; public set; }
    [JsonPropertyAttribute("image")]
public string ImageUrl { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(string value);
    [CompilerGeneratedAttribute]
public string get_ImageUrl();
    [CompilerGeneratedAttribute]
public void set_ImageUrl(string value);
    internal Notification CopyAndValidate();
}
public enum FirebaseAdmin.Messaging.NotificationPriority : Enum {
    public int value__;
    public static NotificationPriority MIN;
    public static NotificationPriority LOW;
    public static NotificationPriority DEFAULT;
    public static NotificationPriority HIGH;
    public static NotificationPriority MAX;
}
public enum FirebaseAdmin.Messaging.NotificationVisibility : Enum {
    public int value__;
    public static NotificationVisibility PRIVATE;
    public static NotificationVisibility PUBLIC;
    public static NotificationVisibility SECRET;
}
public enum FirebaseAdmin.Messaging.Priority : Enum {
    public int value__;
    public static Priority High;
    public static Priority Normal;
}
public class FirebaseAdmin.Messaging.SendResponse : object {
    [CompilerGeneratedAttribute]
private string <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private FirebaseMessagingException <Exception>k__BackingField;
    public string MessageId { get; }
    public FirebaseMessagingException Exception { get; }
    public bool IsSuccess { get; }
    private SendResponse(string messageId);
    private SendResponse(FirebaseMessagingException exception);
    [CompilerGeneratedAttribute]
public string get_MessageId();
    [CompilerGeneratedAttribute]
public FirebaseMessagingException get_Exception();
    public bool get_IsSuccess();
    internal static SendResponse FromMessageId(string messageId);
    internal static SendResponse FromException(FirebaseMessagingException exception);
}
public class FirebaseAdmin.Messaging.TopicManagementResponse : object {
    [CompilerGeneratedAttribute]
private int <SuccessCount>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<ErrorInfo> <Errors>k__BackingField;
    public int SuccessCount { get; private set; }
    public int FailureCount { get; }
    public IReadOnlyList`1<ErrorInfo> Errors { get; private set; }
    internal TopicManagementResponse(InstanceIdServiceResponse instanceIdServiceResponse);
    [CompilerGeneratedAttribute]
public int get_SuccessCount();
    [CompilerGeneratedAttribute]
private void set_SuccessCount(int value);
    public int get_FailureCount();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<ErrorInfo> get_Errors();
    [CompilerGeneratedAttribute]
private void set_Errors(IReadOnlyList`1<ErrorInfo> value);
}
internal static class FirebaseAdmin.Messaging.Util.AnalyticsLabelChecker : object {
    private static string pattern;
    private static AnalyticsLabelChecker();
    public static void ValidateAnalyticsLabel(string analyticsLabel);
}
internal static class FirebaseAdmin.Messaging.Util.TimeConverter : object {
    public static string LongMillisToString(long longMillis);
    public static long StringToLongMillis(string timingString);
}
public class FirebaseAdmin.Messaging.WebpushConfig : object {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private WebpushNotification <Notification>k__BackingField;
    [CompilerGeneratedAttribute]
private WebpushFcmOptions <FcmOptions>k__BackingField;
    [JsonPropertyAttribute("headers")]
public IReadOnlyDictionary`2<string, string> Headers { get; public set; }
    [JsonPropertyAttribute("data")]
public IReadOnlyDictionary`2<string, string> Data { get; public set; }
    [JsonPropertyAttribute("notification")]
public WebpushNotification Notification { get; public set; }
    [JsonPropertyAttribute("fcm_options")]
public WebpushFcmOptions FcmOptions { get; public set; }
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(IReadOnlyDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(IReadOnlyDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public WebpushNotification get_Notification();
    [CompilerGeneratedAttribute]
public void set_Notification(WebpushNotification value);
    [CompilerGeneratedAttribute]
public WebpushFcmOptions get_FcmOptions();
    [CompilerGeneratedAttribute]
public void set_FcmOptions(WebpushFcmOptions value);
    internal WebpushConfig CopyAndValidate();
}
public class FirebaseAdmin.Messaging.WebpushFcmOptions : object {
    [CompilerGeneratedAttribute]
private string <Link>k__BackingField;
    [JsonPropertyAttribute("link")]
public string Link { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Link();
    [CompilerGeneratedAttribute]
public void set_Link(string value);
    internal WebpushFcmOptions CopyAndValidate();
}
public class FirebaseAdmin.Messaging.WebpushNotification : object {
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Body>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Icon>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Badge>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Direction> <Direction>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Image>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Renotify>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <RequireInteraction>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Silent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tag>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <TimestampMillis>k__BackingField;
    [CompilerGeneratedAttribute]
private Int32[] <Vibrate>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Action> <Actions>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <CustomData>k__BackingField;
    [JsonPropertyAttribute("title")]
public string Title { get; public set; }
    [JsonPropertyAttribute("body")]
public string Body { get; public set; }
    [JsonPropertyAttribute("icon")]
public string Icon { get; public set; }
    [JsonPropertyAttribute("badge")]
public string Badge { get; public set; }
    [JsonPropertyAttribute("data")]
public object Data { get; public set; }
    [JsonIgnoreAttribute]
public Nullable`1<Direction> Direction { get; public set; }
    [JsonPropertyAttribute("image")]
public string Image { get; public set; }
    [JsonPropertyAttribute("lang")]
public string Language { get; public set; }
    [JsonPropertyAttribute("renotify")]
public Nullable`1<bool> Renotify { get; public set; }
    [JsonPropertyAttribute("requireInteraction")]
public Nullable`1<bool> RequireInteraction { get; public set; }
    [JsonPropertyAttribute("silent")]
public Nullable`1<bool> Silent { get; public set; }
    [JsonPropertyAttribute("tag")]
public string Tag { get; public set; }
    [JsonPropertyAttribute("timestamp")]
public Nullable`1<long> TimestampMillis { get; public set; }
    [JsonPropertyAttribute("vibrate")]
public Int32[] Vibrate { get; public set; }
    [JsonPropertyAttribute("actions")]
public IEnumerable`1<Action> Actions { get; public set; }
    [JsonExtensionDataAttribute]
public IDictionary`2<string, object> CustomData { get; public set; }
    [JsonPropertyAttribute("dir")]
private string DirectionString { get; private set; }
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(string value);
    [CompilerGeneratedAttribute]
public string get_Icon();
    [CompilerGeneratedAttribute]
public void set_Icon(string value);
    [CompilerGeneratedAttribute]
public string get_Badge();
    [CompilerGeneratedAttribute]
public void set_Badge(string value);
    [CompilerGeneratedAttribute]
public object get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(object value);
    [CompilerGeneratedAttribute]
public Nullable`1<Direction> get_Direction();
    [CompilerGeneratedAttribute]
public void set_Direction(Nullable`1<Direction> value);
    [CompilerGeneratedAttribute]
public string get_Image();
    [CompilerGeneratedAttribute]
public void set_Image(string value);
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
public void set_Language(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Renotify();
    [CompilerGeneratedAttribute]
public void set_Renotify(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_RequireInteraction();
    [CompilerGeneratedAttribute]
public void set_RequireInteraction(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Silent();
    [CompilerGeneratedAttribute]
public void set_Silent(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Tag();
    [CompilerGeneratedAttribute]
public void set_Tag(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_TimestampMillis();
    [CompilerGeneratedAttribute]
public void set_TimestampMillis(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Int32[] get_Vibrate();
    [CompilerGeneratedAttribute]
public void set_Vibrate(Int32[] value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<Action> get_Actions();
    [CompilerGeneratedAttribute]
public void set_Actions(IEnumerable`1<Action> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_CustomData();
    [CompilerGeneratedAttribute]
public void set_CustomData(IDictionary`2<string, object> value);
    private string get_DirectionString();
    private void set_DirectionString(string value);
    internal WebpushNotification CopyAndValidate();
}
internal abstract class FirebaseAdmin.PlatformErrorHandler`1 : HttpErrorHandler`1<T> {
    private static IReadOnlyDictionary`2<string, ErrorCode> PlatformErrorCodes;
    private static PlatformErrorHandler`1();
    protected sealed virtual FirebaseExceptionArgs<T> CreateExceptionArgs(HttpResponseMessage response, string body);
    private PlatformErrorResponse<T> ParseResponseBody(string body);
}
internal class FirebaseAdmin.ServiceFactory`1 : MulticastDelegate {
    public ServiceFactory`1(object object, IntPtr method);
    public virtual TResult Invoke();
    public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object);
    public virtual TResult EndInvoke(IAsyncResult result);
}
internal abstract class FirebaseAdmin.Util.AdaptedListResourcesRequest`2 : ListResourcesRequest`1<TResult> {
    private ErrorHandlingHttpClient`1<TException> httpClient;
    public AdaptedListResourcesRequest`2(string baseUrl, string pageToken, Nullable`1<int> pageSize, ErrorHandlingHttpClient`1<TException> httpClient);
    [AsyncStateMachineAttribute("FirebaseAdmin.Util.AdaptedListResourcesRequest`2/<ExecuteAsStreamAsync>d__2")]
public virtual Task`1<Stream> ExecuteAsStreamAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Util.AdaptedListResourcesRequest`2/<SendAndDeserializeAsync>d__3`1")]
private protected Task`1<T> SendAndDeserializeAsync(CancellationToken cancellationToken);
}
internal class FirebaseAdmin.Util.DeserializedResponseInfo`1 : ResponseInfo {
    [CompilerGeneratedAttribute]
private T <Result>k__BackingField;
    internal T Result { get; private set; }
    internal DeserializedResponseInfo`1(ResponseInfo info, T result);
    [CompilerGeneratedAttribute]
internal T get_Result();
    [CompilerGeneratedAttribute]
private void set_Result(T value);
}
internal class FirebaseAdmin.Util.ErrorHandlingHttpClient`1 : object {
    private HttpClient httpClient;
    private IHttpResponseDeserializer deserializer;
    private IHttpErrorResponseHandler`1<T> errorResponseHandler;
    private IHttpRequestExceptionHandler`1<T> requestExceptionHandler;
    private IDeserializeExceptionHandler`1<T> deserializeExceptionHandler;
    internal ErrorHandlingHttpClient`1(ErrorHandlingHttpClientArgs`1<T> args);
    public sealed virtual void Dispose();
    [AsyncStateMachineAttribute("FirebaseAdmin.Util.ErrorHandlingHttpClient`1/<SendAndDeserializeAsync>d__7`1")]
internal Task`1<DeserializedResponseInfo`1<TResult>> SendAndDeserializeAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("FirebaseAdmin.Util.ErrorHandlingHttpClient`1/<SendAsync>d__8")]
internal Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    private static HttpClient CreateHttpClient(ErrorHandlingHttpClientArgs`1<T> args);
    [AsyncStateMachineAttribute("FirebaseAdmin.Util.ErrorHandlingHttpClient`1/<SendAndReadAsync>d__10")]
private Task`1<ResponseInfo> SendAndReadAsync(HttpRequestMessage request, CancellationToken cancellationToken);
}
internal class FirebaseAdmin.Util.ErrorHandlingHttpClientArgs`1 : object {
    [CompilerGeneratedAttribute]
private HttpClientFactory <HttpClientFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private GoogleCredential <Credential>k__BackingField;
    [CompilerGeneratedAttribute]
private IHttpResponseDeserializer <Deserializer>k__BackingField;
    [CompilerGeneratedAttribute]
private IHttpErrorResponseHandler`1<T> <ErrorResponseHandler>k__BackingField;
    [CompilerGeneratedAttribute]
private IHttpRequestExceptionHandler`1<T> <RequestExceptionHandler>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeserializeExceptionHandler`1<T> <DeserializeExceptionHandler>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    internal HttpClientFactory HttpClientFactory { get; internal set; }
    internal GoogleCredential Credential { get; internal set; }
    internal IHttpResponseDeserializer Deserializer { get; internal set; }
    internal IHttpErrorResponseHandler`1<T> ErrorResponseHandler { get; internal set; }
    internal IHttpRequestExceptionHandler`1<T> RequestExceptionHandler { get; internal set; }
    internal IDeserializeExceptionHandler`1<T> DeserializeExceptionHandler { get; internal set; }
    internal RetryOptions RetryOptions { get; internal set; }
    [CompilerGeneratedAttribute]
internal HttpClientFactory get_HttpClientFactory();
    [CompilerGeneratedAttribute]
internal void set_HttpClientFactory(HttpClientFactory value);
    [CompilerGeneratedAttribute]
internal GoogleCredential get_Credential();
    [CompilerGeneratedAttribute]
internal void set_Credential(GoogleCredential value);
    [CompilerGeneratedAttribute]
internal IHttpResponseDeserializer get_Deserializer();
    [CompilerGeneratedAttribute]
internal void set_Deserializer(IHttpResponseDeserializer value);
    [CompilerGeneratedAttribute]
internal IHttpErrorResponseHandler`1<T> get_ErrorResponseHandler();
    [CompilerGeneratedAttribute]
internal void set_ErrorResponseHandler(IHttpErrorResponseHandler`1<T> value);
    [CompilerGeneratedAttribute]
internal IHttpRequestExceptionHandler`1<T> get_RequestExceptionHandler();
    [CompilerGeneratedAttribute]
internal void set_RequestExceptionHandler(IHttpRequestExceptionHandler`1<T> value);
    [CompilerGeneratedAttribute]
internal IDeserializeExceptionHandler`1<T> get_DeserializeExceptionHandler();
    [CompilerGeneratedAttribute]
internal void set_DeserializeExceptionHandler(IDeserializeExceptionHandler`1<T> value);
    [CompilerGeneratedAttribute]
internal RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
internal void set_RetryOptions(RetryOptions value);
}
internal class FirebaseAdmin.Util.HttpUtils : object {
    internal static HttpMethod Patch;
    private static HttpUtils();
    internal static string EncodeQueryParams(IDictionary`2<string, object> queryParams);
    internal static IList`1<string> CreateUpdateMask(object request);
    private static List`1<string> CreateUpdateMask(JObject dictionary);
}
internal interface FirebaseAdmin.Util.IDeserializeExceptionHandler`1 {
    public abstract virtual T HandleDeserializeException(Exception exception, ResponseInfo responseInfo);
}
internal interface FirebaseAdmin.Util.IHttpErrorResponseHandler`1 {
    public abstract virtual T HandleHttpErrorResponse(HttpResponseMessage response, string body);
}
internal interface FirebaseAdmin.Util.IHttpRequestExceptionHandler`1 {
    public abstract virtual T HandleHttpRequestException(HttpRequestException exception);
}
internal interface FirebaseAdmin.Util.IHttpResponseDeserializer {
    public abstract virtual T Deserialize(string body);
}
internal interface FirebaseAdmin.Util.IWaiter {
    public abstract virtual Task Wait(TimeSpan ts, CancellationToken cancellationToken);
}
internal abstract class FirebaseAdmin.Util.ListResourcesRequest`1 : object {
    private string baseUrl;
    [CompilerGeneratedAttribute]
private IClientService <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IParameter> <RequestParameters>k__BackingField;
    public string MethodName { get; }
    public string HttpMethod { get; }
    public IClientService Service { get; }
    public string RestPath { get; }
    public IDictionary`2<string, IParameter> RequestParameters { get; }
    protected int MaxResults { get; }
    protected string PageSizeParam { get; }
    protected string PageTokenParam { get; }
    public ListResourcesRequest`1(string baseUrl, string pageToken, Nullable`1<int> pageSize);
    public virtual string get_MethodName();
    public virtual string get_HttpMethod();
    [CompilerGeneratedAttribute]
public virtual IClientService get_Service();
    public abstract virtual string get_RestPath();
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, IParameter> get_RequestParameters();
    protected virtual int get_MaxResults();
    protected virtual string get_PageSizeParam();
    protected virtual string get_PageTokenParam();
    [AsyncStateMachineAttribute("FirebaseAdmin.Util.ListResourcesRequest`1/<ExecuteAsync>d__20")]
public sealed virtual Task`1<TResult> ExecuteAsync();
    public sealed virtual TResult Execute();
    public sealed virtual Stream ExecuteAsStream();
    [AsyncStateMachineAttribute("FirebaseAdmin.Util.ListResourcesRequest`1/<ExecuteAsStreamAsync>d__23")]
public sealed virtual Task`1<Stream> ExecuteAsStreamAsync();
    public abstract virtual Task`1<TResult> ExecuteAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<Stream> ExecuteAsStreamAsync(CancellationToken cancellationToken);
    public virtual HttpRequestMessage CreateRequest(Nullable`1<bool> overrideGZipEnabled);
    internal void SetPageSize(Nullable`1<int> pageSize);
    internal void SetPageToken(string pageToken);
    protected void AddOrUpdate(string paramName, string value);
}
internal class FirebaseAdmin.Util.ResponseInfo : object {
    [CompilerGeneratedAttribute]
private HttpResponseMessage <HttpResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Body>k__BackingField;
    internal HttpResponseMessage HttpResponse { get; private set; }
    internal string Body { get; private set; }
    internal ResponseInfo(HttpResponseMessage response, string body);
    internal ResponseInfo(ResponseInfo other);
    [CompilerGeneratedAttribute]
internal HttpResponseMessage get_HttpResponse();
    [CompilerGeneratedAttribute]
private void set_HttpResponse(HttpResponseMessage value);
    [CompilerGeneratedAttribute]
internal string get_Body();
    [CompilerGeneratedAttribute]
private void set_Body(string value);
}
internal class FirebaseAdmin.Util.RetryHttpClientInitializer : object {
    private RetryOptions retryOptions;
    private BackOffHandler backOffHandler;
    internal RetryHttpClientInitializer(RetryOptions retryOptions, IClock clock, IWaiter waiter);
    public sealed virtual void Initialize(ConfigurableHttpClient client);
}
internal class FirebaseAdmin.Util.RetryOptions : object {
    [CompilerGeneratedAttribute]
private int <MaxRetries>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <MaxTimeSpan>k__BackingField;
    [CompilerGeneratedAttribute]
private double <BackOffFactor>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<HttpResponseMessage, bool> <HandleUnsuccessfulResponseFunc>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<Exception, bool> <HandleExceptionFunc>k__BackingField;
    internal static RetryOptions Default { get; }
    internal static RetryOptions NoBackOff { get; }
    internal int MaxRetries { get; internal set; }
    internal TimeSpan MaxTimeSpan { get; internal set; }
    internal double BackOffFactor { get; internal set; }
    internal Func`2<HttpResponseMessage, bool> HandleUnsuccessfulResponseFunc { get; internal set; }
    internal Func`2<Exception, bool> HandleExceptionFunc { get; internal set; }
    internal static RetryOptions get_Default();
    internal static RetryOptions get_NoBackOff();
    [CompilerGeneratedAttribute]
internal int get_MaxRetries();
    [CompilerGeneratedAttribute]
internal void set_MaxRetries(int value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_MaxTimeSpan();
    [CompilerGeneratedAttribute]
internal void set_MaxTimeSpan(TimeSpan value);
    [CompilerGeneratedAttribute]
internal double get_BackOffFactor();
    [CompilerGeneratedAttribute]
internal void set_BackOffFactor(double value);
    [CompilerGeneratedAttribute]
internal Func`2<HttpResponseMessage, bool> get_HandleUnsuccessfulResponseFunc();
    [CompilerGeneratedAttribute]
internal void set_HandleUnsuccessfulResponseFunc(Func`2<HttpResponseMessage, bool> value);
    [CompilerGeneratedAttribute]
internal Func`2<Exception, bool> get_HandleExceptionFunc();
    [CompilerGeneratedAttribute]
internal void set_HandleExceptionFunc(Func`2<Exception, bool> value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
