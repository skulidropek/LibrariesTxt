[StandardModuleAttribute]
[HideModuleNameAttribute]
internal class A.a : object {
    private static A`1<ServerComputer> A;
    private static A`1<WebUser> A;
    private static A`1<AspLog> A;
    [HelpKeywordAttribute("My.Request")]
internal static HttpRequest A { get; }
    [HelpKeywordAttribute("My.Response")]
internal static HttpResponse a { get; }
    private static a();
    internal static ServerComputer A();
    internal static WebUser a();
    [DebuggerHiddenAttribute]
internal static HttpRequest B();
    [DebuggerHiddenAttribute]
internal static HttpResponse b();
    internal static AspLog C();
}
[StandardModuleAttribute]
[GeneratedCodeAttribute("MyTemplate", "11.0.0.0")]
[HideModuleNameAttribute]
internal class A.A : object {
}
[CompilerGeneratedAttribute]
[EditorBrowsableAttribute("2")]
[GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.7.0.0")]
internal class A.b : ApplicationSettingsBase {
    private static b A;
    private static b();
    public static b A();
}
[DebuggerNonUserCodeAttribute]
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
[HideModuleNameAttribute]
[StandardModuleAttribute]
[CompilerGeneratedAttribute]
internal class A.B : object {
    private static ResourceManager A;
    private static CultureInfo A;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager A { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo a { get; internal set; }
    internal static ResourceManager A();
    internal static CultureInfo a();
    internal static void A(CultureInfo );
}
internal class A.c : object {
}
[HideModuleNameAttribute]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
[StandardModuleAttribute]
internal class A.C : object {
    [HelpKeywordAttribute("My.Settings")]
internal static b A { get; }
    internal static b A();
}
[DebuggerAspectGeneratedCodeAttribute]
[CompilerGeneratedAttribute]
internal class A.d : object {
    internal static Telemetry A;
    internal static MethodBase A;
    [DebuggerAspectGeneratedCodeAttribute]
[CompilerGeneratedAttribute]
private static d();
}
internal class A.D : object {
}
[CompilerGeneratedAttribute]
[DebuggerAspectGeneratedCodeAttribute]
internal class A.e : object {
    internal static Telemetry A;
    internal static MethodBase A;
    [CompilerGeneratedAttribute]
[DebuggerAspectGeneratedCodeAttribute]
private static e();
}
[CompilerGeneratedAttribute]
[DebuggerAspectGeneratedCodeAttribute]
internal class A.E : object {
    internal static Telemetry A;
    internal static MethodBase A;
    [CompilerGeneratedAttribute]
[DebuggerAspectGeneratedCodeAttribute]
private static E();
}
[CompilerGeneratedAttribute]
[DebuggerAspectGeneratedCodeAttribute]
internal class A.f : object {
    public static f A;
    public static f();
    public virtual object GetMetadata(int );
}
[DebuggerAspectGeneratedCodeAttribute]
[CompilerGeneratedAttribute]
internal class A.F : object {
    internal static Object[] A;
    private static F();
}
[EditorBrowsableAttribute("1")]
[GeneratedCodeAttribute("MyTemplate", "11.0.0.0")]
internal class A.g : Computer {
}
[GeneratedCodeAttribute("MyTemplate", "11.0.0.0")]
[EditorBrowsableAttribute("1")]
internal class A.G : ApplicationBase {
}
internal class A.h : object {
    public string A;
    private string a;
    private string B;
    private string b;
    private DateTime A;
    private static string C;
    private static h();
    private void A();
    public void a();
    public object A(string , String& );
    public static string A(DataManager , A , b , int , bool , Dictionary`2<string, object> , string );
    private static LicenseProduct A(string );
    public static string A(TimeSpan );
    private static string B();
    public static void A(DataManager , string );
    public bool a(string );
    public bool a(string , String& );
    public bool B(string , String& );
    public bool A(string , string , string , string , String& );
    public bool A(string , string );
    private bool A(Dictionary`2<string, object> );
    private static bool a(Dictionary`2<string, object> );
    private static Dictionary`2<string, object> A(String& );
    private bool b();
    private static bool A(string , BaseCollection );
    private object B(string );
    private DataTable b(string );
}
[HideModuleNameAttribute]
[StandardModuleAttribute]
[GeneratedCodeAttribute("MyTemplate", "11.0.0.0")]
internal class A.H : object {
    private static a`1<g> A;
    private static a`1<G> A;
    private static a`1<User> A;
    private static a`1<A> A;
    [HelpKeywordAttribute("My.Computer")]
internal static g A { get; }
    [HelpKeywordAttribute("My.Application")]
internal static G a { get; }
    [HelpKeywordAttribute("My.User")]
internal static User B { get; }
    [HelpKeywordAttribute("My.WebServices")]
internal static A b { get; }
    private static H();
    [DebuggerHiddenAttribute]
internal static g A();
    [DebuggerHiddenAttribute]
internal static G a();
    [DebuggerHiddenAttribute]
internal static User B();
    [DebuggerHiddenAttribute]
internal static A b();
}
[StandardModuleAttribute]
internal class A.i : object {
    private static int A;
    private static int a;
    private static int B;
    private static char A;
    public static string A(string );
    private static byte A(byte , byte );
    private static string a(string );
    private static Byte[] A();
    public static string B(string );
    private static IEnumerable`1<Byte[]> b(string );
}
[StandardModuleAttribute]
internal class A.I : object {
    public static string A;
}
public class FLEXYGO.AjaxError : object {
    public static Jerror AjaxGenericException(string ErrorTitle, LocalizedException Exception, HttpResponseBase Response);
    public static Jerror AjaxException(string ErrorTitle, Exception Exception, HttpResponseBase Response);
    public static Jerror AjaxMessageException(string ErrorTitle, string ErrorMessage, Exception Exception, HttpResponseBase Response);
    public static Jerror AjaxSecurityException(string ErrorTitle, string Message, HttpResponseBase Response);
    public static Jerror AjaxWarning(string WarningTitle, string Message, Exception Exception, HttpResponseBase Response);
    private static void A(Exception , bool );
}
[ScriptServiceAttribute]
[ToolboxItemAttribute("False")]
[WebServiceBindingAttribute]
[WebServiceAttribute]
public class FLEXYGO.Authentication.LoginService : WebService {
    [WebMethodAttribute]
[BlacklistCheckAttribute]
public SignInStatus PasswordSignIn(string userName, string Password, bool RememberMe, bool shouldLockOut, String& errorMessage);
    public SignInStatus DirectSignIn(string username, bool RememberMe, bool shouldLockOut, String& errorMessage);
    public SignInStatus AccessTokenSignIn(string userName, string bearerToken, bool RememberMe, bool shouldLockOut, String& errorMessage, bool checkIsValid);
    public static bool ChangePasswordProcess(EntityObject Entity, string LastPassword, string NewPassword, string RepeatPassword, ProcessHelper Ret);
    public static bool UnlockUser(EntityObject Entity, string UserId, ProcessHelper Ret);
    public static bool ChangePasswordAdmin(EntityObject Entity, string UserId, string NewPassword, string RepeatPassword, ProcessHelper Ret);
    [WebMethodAttribute]
[BlacklistCheckAttribute]
public IdentityResult changePassword(string currentPassword, string newPassword, bool RememberMe, bool shouldLockOut);
    [WebMethodAttribute]
public void logOut();
    [WebMethodAttribute]
[BlacklistCheckAttribute]
public static bool NewUser(EntityObject Entity, ProcessHelper Ret);
    public static bool NewUserFromAAD(EntityObject Entity, Dictionary`2<string, object> userInfo, ProcessHelper& Ret);
    public static object NewUserFromClave(EntityObject Entity, Dictionary`2<string, object> userInfo, ProcessHelper& Ret);
    [WebMethodAttribute]
[BlacklistCheckAttribute]
public static bool ResendConfirmationToken(EntityObject Entity, ProcessHelper Ret);
    public static bool ResendConfirmationTokens(EntityCollection Entity, ProcessHelper Ret);
    public bool CheckTFAConfiguration(string userName, string password, String& reason);
    public DataRow GetRole(string roleId);
    public bool SendVerificationCode(string provider, String& errorMessage);
    public ApplicationUser GetCurrentVerifiedUser();
    public SignInStatus CheckVerificationCode(string provider, string code, bool RememberMe);
    public bool CheckIPFromUser(string UserName);
}
public class FLEXYGO.Authorize : Page {
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("Links")]
private Links A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("form1")]
private HtmlForm A;
    [AccessedThroughPropertyAttribute("logo")]
[CompilerGeneratedAttribute]
private Panel A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("lblTitle")]
private Label A;
    [AccessedThroughPropertyAttribute("lblSuccess")]
[CompilerGeneratedAttribute]
private Label a;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("hidReturnUrl")]
private HiddenField A;
    [AccessedThroughPropertyAttribute("hidJSONResponse")]
[CompilerGeneratedAttribute]
private HiddenField a;
    [AccessedThroughPropertyAttribute("UserName")]
[CompilerGeneratedAttribute]
private TextBox A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("UserNameRequired")]
private RequiredFieldValidator A;
    [AccessedThroughPropertyAttribute("pnlPassword")]
[CompilerGeneratedAttribute]
private Panel a;
    [AccessedThroughPropertyAttribute("Password")]
[CompilerGeneratedAttribute]
private TextBox a;
    [AccessedThroughPropertyAttribute("PasswordRequired")]
[CompilerGeneratedAttribute]
private RequiredFieldValidator a;
    [AccessedThroughPropertyAttribute("MainButton")]
[CompilerGeneratedAttribute]
private LinkButton A;
    [AccessedThroughPropertyAttribute("btnAuthorize")]
[CompilerGeneratedAttribute]
private LinkButton a;
    protected Links Links { get; protected set; }
    protected HtmlForm form1 { get; protected set; }
    protected Panel logo { get; protected set; }
    protected Label lblTitle { get; protected set; }
    protected Label lblSuccess { get; protected set; }
    protected HiddenField hidReturnUrl { get; protected set; }
    protected HiddenField hidJSONResponse { get; protected set; }
    protected TextBox UserName { get; protected set; }
    protected RequiredFieldValidator UserNameRequired { get; protected set; }
    protected Panel pnlPassword { get; protected set; }
    protected TextBox Password { get; protected set; }
    protected RequiredFieldValidator PasswordRequired { get; protected set; }
    protected LinkButton MainButton { get; protected set; }
    protected LinkButton btnAuthorize { get; protected set; }
    [CompilerGeneratedAttribute]
protected virtual Links get_Links();
    [CompilerGeneratedAttribute]
protected virtual void set_Links(Links WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HtmlForm get_form1();
    [CompilerGeneratedAttribute]
protected virtual void set_form1(HtmlForm WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Panel get_logo();
    [CompilerGeneratedAttribute]
protected virtual void set_logo(Panel WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_lblTitle();
    [CompilerGeneratedAttribute]
protected virtual void set_lblTitle(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_lblSuccess();
    [CompilerGeneratedAttribute]
protected virtual void set_lblSuccess(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HiddenField get_hidReturnUrl();
    [CompilerGeneratedAttribute]
protected virtual void set_hidReturnUrl(HiddenField WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HiddenField get_hidJSONResponse();
    [CompilerGeneratedAttribute]
protected virtual void set_hidJSONResponse(HiddenField WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_UserName();
    [CompilerGeneratedAttribute]
protected virtual void set_UserName(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_UserNameRequired();
    [CompilerGeneratedAttribute]
protected virtual void set_UserNameRequired(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Panel get_pnlPassword();
    [CompilerGeneratedAttribute]
protected virtual void set_pnlPassword(Panel WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_Password();
    [CompilerGeneratedAttribute]
protected virtual void set_Password(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_PasswordRequired();
    [CompilerGeneratedAttribute]
protected virtual void set_PasswordRequired(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_MainButton();
    [CompilerGeneratedAttribute]
protected virtual void set_MainButton(LinkButton WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_btnAuthorize();
    [CompilerGeneratedAttribute]
protected virtual void set_btnAuthorize(LinkButton WithEventsValue);
    protected void Page_Load(object sender, EventArgs e);
    public void checkVisibility();
    public void LaunchError(string errorMsg);
    public bool TranslateLogin(string CultureId);
    public string TranslateLoginMessages(string CultureId, string Message);
    private void A(object , EventArgs );
    private void a(object , EventArgs );
    public void Authorize();
    protected void LogIn();
    public void CheckBlackList(string FunctionName, IDictionary`2<string, object> Params, string Username);
    private void A(SignInStatus , string );
}
public class FLEXYGO.AzureAuth : Page {
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("Links")]
private Links A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("form1")]
private HtmlForm A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("lblText")]
private Label A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("MainButton")]
private LinkButton A;
    protected Links Links { get; protected set; }
    protected HtmlForm form1 { get; protected set; }
    protected Label lblText { get; protected set; }
    protected LinkButton MainButton { get; protected set; }
    [CompilerGeneratedAttribute]
protected virtual Links get_Links();
    [CompilerGeneratedAttribute]
protected virtual void set_Links(Links WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HtmlForm get_form1();
    [CompilerGeneratedAttribute]
protected virtual void set_form1(HtmlForm WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_lblText();
    [CompilerGeneratedAttribute]
protected virtual void set_lblText(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_MainButton();
    [CompilerGeneratedAttribute]
protected virtual void set_MainButton(LinkButton WithEventsValue);
    protected void Page_Load(object sender, EventArgs e);
    protected void LogIn(object sender, EventArgs e);
    public static bool LogOut(EntityObject Entity, ProcessHelper& Ret);
    public static bool ValidateServerCertificate(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors);
    public Dictionary`2<string, object> GetTokenFromCode(string tokenEndpoint, string code, string redirecturl, string clientid, string clientesecret);
    public string getValue(string key, BaseCollection& authParams);
    public void SaveToken(string tokentype, string userid, Dictionary`2<string, object> token);
    public Dictionary`2<string, object> GetUserInfo(string userEndpoint, string bearer);
    public void OpenIdAuth(string code);
    public void LogUser(ApplicationUser user, Dictionary`2<string, object> token);
    public string TranslateLoginMessages(string CultureId, string Message);
}
public class FLEXYGO.BlacklistCheckAttribute : ActionFilterAttribute {
    public virtual void OnActionExecuting(ActionExecutingContext FilterContext);
}
public class FLEXYGO.CalendarToken : Page {
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("TokenText")]
private Label A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("Scope")]
private Label a;
    protected Label TokenText { get; protected set; }
    protected Label Scope { get; protected set; }
    [CompilerGeneratedAttribute]
protected virtual Label get_TokenText();
    [CompilerGeneratedAttribute]
protected virtual void set_TokenText(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_Scope();
    [CompilerGeneratedAttribute]
protected virtual void set_Scope(Label WithEventsValue);
    protected void Page_Load(object sender, EventArgs e);
}
public class FLEXYGO.ClaveAuth : Page {
    [AccessedThroughPropertyAttribute("Links")]
[CompilerGeneratedAttribute]
private Links A;
    [AccessedThroughPropertyAttribute("claveAuthForm")]
[CompilerGeneratedAttribute]
private HtmlForm A;
    [AccessedThroughPropertyAttribute("lblText")]
[CompilerGeneratedAttribute]
private Label A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("MainButton")]
private LinkButton A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("loadingRedirect")]
private HtmlGenericControl A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("forceRedirect")]
private LinkButton a;
    protected Links Links { get; protected set; }
    protected HtmlForm claveAuthForm { get; protected set; }
    protected Label lblText { get; protected set; }
    protected LinkButton MainButton { get; protected set; }
    protected HtmlGenericControl loadingRedirect { get; protected set; }
    protected LinkButton forceRedirect { get; protected set; }
    [CompilerGeneratedAttribute]
protected virtual Links get_Links();
    [CompilerGeneratedAttribute]
protected virtual void set_Links(Links WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HtmlForm get_claveAuthForm();
    [CompilerGeneratedAttribute]
protected virtual void set_claveAuthForm(HtmlForm WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_lblText();
    [CompilerGeneratedAttribute]
protected virtual void set_lblText(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_MainButton();
    [CompilerGeneratedAttribute]
protected virtual void set_MainButton(LinkButton WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HtmlGenericControl get_loadingRedirect();
    [CompilerGeneratedAttribute]
protected virtual void set_loadingRedirect(HtmlGenericControl WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_forceRedirect();
    [CompilerGeneratedAttribute]
protected virtual void set_forceRedirect(LinkButton WithEventsValue);
    protected void Page_Load(object sender, EventArgs e);
    protected void LogIn(object sender, EventArgs e);
    public static bool LogOut(EntityObject Entity, ProcessHelper& Ret);
    public void OpenIdAuth(Citizen info);
    public void LogUser(ApplicationUser user);
    public static string TranslateMessages(string CultureId, string Message);
}
public class FLEXYGO.CompressAttribute : ActionFilterAttribute {
    public virtual void OnActionExecuting(ActionExecutingContext FilterContext);
}
public class FLEXYGO.Confirm : Page {
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("Links")]
private Links A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("form1")]
private HtmlForm A;
    [AccessedThroughPropertyAttribute("PassPanel")]
[CompilerGeneratedAttribute]
private PlaceHolder A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("Password")]
private TextBox A;
    [AccessedThroughPropertyAttribute("PasswordRequired")]
[CompilerGeneratedAttribute]
private RequiredFieldValidator A;
    [AccessedThroughPropertyAttribute("ConfirmPassword")]
[CompilerGeneratedAttribute]
private TextBox a;
    [AccessedThroughPropertyAttribute("ConfirmPasswordRequired")]
[CompilerGeneratedAttribute]
private RequiredFieldValidator a;
    [AccessedThroughPropertyAttribute("ValidatorPassword")]
[CompilerGeneratedAttribute]
private CompareValidator A;
    [AccessedThroughPropertyAttribute("MainButton")]
[CompilerGeneratedAttribute]
private LinkButton A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("GotoLogin")]
private HyperLink A;
    [AccessedThroughPropertyAttribute("successPanel")]
[CompilerGeneratedAttribute]
private PlaceHolder a;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("ThanksMessage")]
private Label A;
    [AccessedThroughPropertyAttribute("loginBtn")]
[CompilerGeneratedAttribute]
private HyperLink a;
    [AccessedThroughPropertyAttribute("errorPanel")]
[CompilerGeneratedAttribute]
private PlaceHolder B;
    protected Links Links { get; protected set; }
    protected HtmlForm form1 { get; protected set; }
    protected PlaceHolder PassPanel { get; protected set; }
    protected TextBox Password { get; protected set; }
    protected RequiredFieldValidator PasswordRequired { get; protected set; }
    protected TextBox ConfirmPassword { get; protected set; }
    protected RequiredFieldValidator ConfirmPasswordRequired { get; protected set; }
    protected CompareValidator ValidatorPassword { get; protected set; }
    protected LinkButton MainButton { get; protected set; }
    protected HyperLink GotoLogin { get; protected set; }
    protected PlaceHolder successPanel { get; protected set; }
    protected Label ThanksMessage { get; protected set; }
    protected HyperLink loginBtn { get; protected set; }
    protected PlaceHolder errorPanel { get; protected set; }
    [CompilerGeneratedAttribute]
protected virtual Links get_Links();
    [CompilerGeneratedAttribute]
protected virtual void set_Links(Links WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HtmlForm get_form1();
    [CompilerGeneratedAttribute]
protected virtual void set_form1(HtmlForm WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual PlaceHolder get_PassPanel();
    [CompilerGeneratedAttribute]
protected virtual void set_PassPanel(PlaceHolder WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_Password();
    [CompilerGeneratedAttribute]
protected virtual void set_Password(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_PasswordRequired();
    [CompilerGeneratedAttribute]
protected virtual void set_PasswordRequired(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_ConfirmPassword();
    [CompilerGeneratedAttribute]
protected virtual void set_ConfirmPassword(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_ConfirmPasswordRequired();
    [CompilerGeneratedAttribute]
protected virtual void set_ConfirmPasswordRequired(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual CompareValidator get_ValidatorPassword();
    [CompilerGeneratedAttribute]
protected virtual void set_ValidatorPassword(CompareValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_MainButton();
    [CompilerGeneratedAttribute]
protected virtual void set_MainButton(LinkButton WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HyperLink get_GotoLogin();
    [CompilerGeneratedAttribute]
protected virtual void set_GotoLogin(HyperLink WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual PlaceHolder get_successPanel();
    [CompilerGeneratedAttribute]
protected virtual void set_successPanel(PlaceHolder WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_ThanksMessage();
    [CompilerGeneratedAttribute]
protected virtual void set_ThanksMessage(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HyperLink get_loginBtn();
    [CompilerGeneratedAttribute]
protected virtual void set_loginBtn(HyperLink WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual PlaceHolder get_errorPanel();
    [CompilerGeneratedAttribute]
protected virtual void set_errorPanel(PlaceHolder WithEventsValue);
    protected void Page_Load(object sender, EventArgs e);
    private void A(object , EventArgs );
    public void CheckBlackList(string FunctionName, IDictionary`2<string, object> Params, string Username);
    public bool TranslateConfirm(string CultureId);
    public string TranslateConfirmMessages(string CultureId, string Message);
}
public class FLEXYGO.ContactsToken : Page {
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("TokenText")]
private Label A;
    protected Label TokenText { get; protected set; }
    [CompilerGeneratedAttribute]
protected virtual Label get_TokenText();
    [CompilerGeneratedAttribute]
protected virtual void set_TokenText(Label WithEventsValue);
    protected void Page_Load(object sender, EventArgs e);
}
public class FLEXYGO.context : object {
    public bool IsReusable { get; }
    public sealed virtual override void ProcessRequest(HttpContext context);
    public sealed virtual override bool get_IsReusable();
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.AIController : FlxController {
    public object RequestChatGPT(ChatGPTSetting Chat, string Messages);
    public object GetChatGPTSetting(string SettingId);
    public object GetSavedTables(string ObjectWhere);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.ChartController : FlxController {
    [CompressAttribute]
[BlacklistCheckAttribute]
[DebugAttribute("Controller")]
public ActionResult GetHTML(string ObjectName, string ObjectWhere, string AdditionalWhere, string ModuleName, string PageName);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetSettings(string ChartSettingName);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.ChatterController : FlxController {
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult GetMessages(string ObjectName, string ObjectId);
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult SetMessage(string DestinationObjectName, string DestinationObjectId, Nullable`1<Guid> DestinationParentMessage, string Content, Attachment[] Attachments, string ContentMarked, string Mentions, string ChatterLink);
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult UpdateMessage(string MessageId, string Content, Attachment[] Attachments, string ContentMarked, string Mentions, string DestinationObjectName, string DestinationObjectId, string ChatterLink);
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult DeleteMessage(string MessageId, string DestinationObjectName, string DestinationObjectId);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult SetMentions(string ObjectName);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.DocumentManagerController : FlxController {
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetDocument(string ObjectId, string ObjectName, string DocGuid, string AdditionalWhere, string CategoryId);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult AppendToDocument(string ObjectName, string ObjectId, string DocumentId, string Base64, bool LastAppend);
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult SetDocument(string ObjectName, string ObjectId, string DocumentName, string DocumentType, string Base64, string CloudId, string CloudLink, string DownloadLink, string DocAction, bool PartialUpload, bool IgnoreIfExists, string CategoryId, string LastProcessName, string LastAfterProcessName, double FileSizeBytes);
    [CompressAttribute]
[BlacklistCheckAttribute]
[DebugAttribute("Controller")]
public void LinkDocument(string ObjectName, string ObjectId, string DocGuid);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult RemoveDocument(string DocGuid, string ObjectName, string ObjectId, string LastProcessName, string LastAfterProcessName);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult UpdateDocument(string DocGuid, string ObjectName, string ObjectId, string Name, string Description, string CategoryId, string LastProcessName, string LastAfterProcessName);
    [BlacklistCheckAttribute]
[DebugAttribute("Controller")]
[CompressAttribute]
public ActionResult GetCategories(string Mode, string Objectname);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetConfig(string ObjectName);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetDriveAccount(string Code);
    [DebugAttribute("Controller")]
[BlacklistCheckAttribute]
[CompressAttribute]
public ActionResult GetDriveToken();
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult DownloadAllDocuments(string ObjectName, string ObjectId, string AdditionalWhere, string CategoryId);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.EasyPieController : FlxController {
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetHTML(string ObjectName, string ObjectWhere, string ModuleName, string PageName);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.EditController : FlxController {
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetEditTemplate(string ObjectName, string ObjectWhere, string ModuleName, KeyValuePairs[] Defaults, string TemplateId, bool Clone);
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult GetReportParamsTemplate(string ObjectName, string ObjectWhere, string ModuleName, string ReportName, KeyValuePairs[] Defaults);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetProcessParamsTemplate(string ObjectName, string ObjectWhere, string ModuleName, string ProcessName, KeyValuePairs[] Defaults);
    [BlacklistCheckAttribute]
[DebugAttribute("Controller")]
[CompressAttribute]
public ActionResult GetComboData(string Mode, string ObjectName, string PropertyName, string CryptedSql, string CryptedFilter, string Value, int Page, string AdditionalWhere);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetComboText(string Mode, string ObjectName, string PropertyName, string CryptedSql, string CryptedFilter, string Value, int Page, string AdditionalWhere, string SQLValueField);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetComboTextByView(string ObjectName, string ViewName, string ValueField, string Value);
    [BlacklistCheckAttribute]
[DebugAttribute("Controller")]
[CompressAttribute]
public ActionResult GetComboDataView(string ObjectName, string ViewName, string DisplayField, string Value, int Page, string PageSize, string AdditionalWhere, string SQLFilter, string CnnString, bool HasSecurityObject);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult ResizeProperties(string Mode, PropertyResize[] Properties);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult InsertSeparator(string Mode, string Name, string PropertyName, int Above);
    [CompressAttribute]
[BlacklistCheckAttribute]
[DebugAttribute("Controller")]
public ActionResult InsertPlaceHolder(string Mode, string Name, string PropertyName, int Above);
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult GetNewProperties(string ObjectName);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public JsonResult AddNewFields(string ObjectName, string FieldName, int FieldType, string TableName);
    [DebugAttribute("Controller")]
[BlacklistCheckAttribute]
[CompressAttribute]
public JsonResult AddNewDetachedProperty(string ObjectName, string PropertyName, string PropertyLabel);
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public JsonResult AddNewProperties(string ObjectName, String[] Properties);
    [CompressAttribute]
[BlacklistCheckAttribute]
[DebugAttribute("Controller")]
public ActionResult ProcessAllDependencies(string ObjectName, string ProcessName, string ReportName, bool IsNew, bool IsView, KeyValuePairs[] Properties);
    [DebugAttribute("Controller")]
[BlacklistCheckAttribute]
[CompressAttribute]
public ActionResult ProcessAllListDependencies(List`1<ObjectRowDependencyHelper> ObjectRowDependency);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult ProcessDependencies(string ObjectName, string ProcessName, string ReportName, string PropertyName, KeyValuePairs[] Properties);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult ProcessFilterDependencies(string SearchId, string ObjectName, string PropertyObjectName, string PropertyName, KeyValuePairs[] Properties);
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public JsonResult ValidateProperty(string ObjectName, string ProcessName, string ReportName, string PropertyName, KeyValuePairs[] Properties);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult SaveDependenciesConfig(string ObjectName, string ProcessName, string ReportName, string PropertyName, DependencyHelper[] Dependencies);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult SaveFilterDependenciesConfig(string SearchId, string ObjectName, string PropertyName, DependencyFilterHelper[] Dependencies);
    [CompressAttribute]
[DebugAttribute("Controller")]
[BlacklistCheckAttribute]
public ActionResult GetEditConfig(string ObjectName);
    [DebugAttribute("Controller")]
[BlacklistCheckAttribute]
[CompressAttribute]
public ActionResult GetProcessParamsConfig(string ProcessName);
    [CompressAttribute]
[BlacklistCheckAttribute]
[DebugAttribute("Controller")]
public ActionResult GetReportParamsConfig(string ReportName);
    [CompressAttribute]
[DebugAttribute("Controller")]
[BlacklistCheckAttribute]
public ActionResult GetPropertyBasicConfig(string ObjectName, string PropertyName);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.EntityController : FlxController {
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult Read(string ObjectName, string ObjectWhere);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult Insert(string ObjectName, KeyValuePairs[] Properties, string LastProcessName, string LastAfterProcessName);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult Update(string ObjectName, string ObjectWhere, KeyValuePairs[] Properties, string LastProcessName, string LastAfterProcessName);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult Delete(string ObjectName, string ObjectWhere, string LastProcessName, string LastAfterProcessName);
    [BlacklistCheckAttribute]
[DebugAttribute("Controller")]
[CompressAttribute]
public ActionResult GetDeleteConfirm(string ObjectName, string ObjectWhere);
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult GetProcesses(string ObjectName, string ObjectWhere, string Options, KeyValuePairs[] Defaults);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetView(string ObjectName, string ObjectWhere, string ViewName, string Page, string PageSize, string Filter, string OrderBy, bool WithDescrips);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetViewCount(string ObjectName, string ObjectWhere, string ViewName, string Filter);
    [CompressAttribute]
[DebugAttribute("Controller")]
[BlacklistCheckAttribute]
public ActionResult GetViewColumnsNames(string ObjectName, string ViewName);
    [CompressAttribute]
[BlacklistCheckAttribute]
[DebugAttribute("Controller")]
public ActionResult GetTemplateByType(string ObjectName, string ObjectWhere, string TemplateType, string Page, string PageSize, string Filter, string OrderBy);
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult GetTemplateById(string ObjectName, string ObjectWhere, string TemplateId, string Page, string PageSize, string Filter, string OrderBy);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult getConfig(string ObjectName);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.FileBrowserController : FlxController {
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult GetData(string ObjectName, string ObjectWhere, string ModuleName, string ActionType, List`1<string> SelectedEntries, string NewFolderName, string Path);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult SetDocument(string ObjectName, string ObjectWhere, string ModuleName, string DocumentName, string DocumentType, string Base64, string DocAction, bool PartialUpload, string CurrentPath);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult AppendToDocument(string ObjectName, string ObjectWhere, string ModuleName, string DocumentName, string CurrentPath, string Base64, bool LastAppend);
    [DebugAttribute("Controller")]
[BlacklistCheckAttribute]
[CompressAttribute]
public ActionResult RemoveDocument(string ObjectName, string ObjectWhere, string ModuleName);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.FileController : FlxController {
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult SaveFile(string Mode, string ObjectName, string PropertyName, string Base64, string Name, KeyValuePairs[] FormValues);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.FunnelController : FlxController {
    [CompressAttribute]
[DebugAttribute("Controller")]
[BlacklistCheckAttribute]
public ActionResult GetHTML(string ObjectName, string ObjectWhere, string AdditionalWhere, string ModuleName, string PageName);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.HtmlController : FlxController {
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetHTML(string ObjectName, string ObjectWhere, string ModuleName, string PageName, KeyValuePairs[] Defaults);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.ImageController : FlxController {
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult SaveFile(string Mode, string ObjectName, string PropertyName, string FileName, string Base64, string CurrentValue, KeyValuePairs[] FormValues, string Name);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.ImageManagerController : FlxController {
    [CompressAttribute]
[DebugAttribute("Controller")]
[BlacklistCheckAttribute]
public ActionResult GetImages(string ObjectId, string ObjectName, string ImageId, string AdditionalWhere, string imageClassId);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult SetImage(string ObjectName, string ObjectId, string Name, string Base64, bool IgnoreIfExists, string imageClassId, string LastProcessName, string LastAfterProcessName);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult RemoveImage(string ImageId, string ObjectName, string LastProcessName, string LastAfterProcessName);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult UpdateImage(string ImageId, bool MainImage, int OrderNumber, string ObjectName);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetClassification();
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult RemoveAllImages(string ObjectName, string ObjectId, string AdditionalWhere, string imageClassId);
    [CompressAttribute]
[DebugAttribute("Controller")]
[BlacklistCheckAttribute]
public ActionResult DownloadAllImages(string ObjectName, string ObjectId, string AdditionalWhere, string imageClassId);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.ImageRecognitionManagerController : FlxController {
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetImages(string ObjectId, string ObjectName, string ImageId, string AdditionalWhere, string imageClassId);
    [CompressAttribute]
[DebugAttribute("Controller")]
[BlacklistCheckAttribute]
public ActionResult SetImage(string ObjectName, string ObjectId, string Name, string Base64, bool IgnoreIfExists, string imageClassId);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult RemoveImage(string ImageId, string ObjectName);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult UpdateImage(string ImageId, bool MainImage, int OrderNumber, string ObjectName);
    [BlacklistCheckAttribute]
[DebugAttribute("Controller")]
[CompressAttribute]
public ActionResult RemoveAllImages(string ObjectName, string ObjectId, string AdditionalWhere, string imageClassId);
    [CompressAttribute]
[DebugAttribute("Controller")]
[BlacklistCheckAttribute]
public ActionResult DownloadAllImages(string ObjectName, string ObjectId, string AdditionalWhere, string imageClassId);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.KanbanController : FlxController {
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetKanban(string ObjectName, string ObjectWhere, string ModuleName, string AdditionalWhere, object searchId, filterHelper[] filterValues);
    [DebugAttribute("Controller")]
[BlacklistCheckAttribute]
[CompressAttribute]
public ActionResult GetKanbanColumn(string ObjectName, string ObjectWhere, string ModuleName, string AdditionalWhere, string ColumnId, object searchId, filterHelper[] filterValues);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.ListController : FlxController {
    [CompressAttribute]
[DebugAttribute("Controller")]
[BlacklistCheckAttribute]
public ActionResult GetList(string ObjectName, string ObjectWhere, string ModuleName, string PageName, int Page, List`1<PropertyOrder> OrderInfo, string AdditionalWhere, string Mode, object SearchId, filterHelper[] FilterValues, string TemplateId, string ViewId, Nullable`1<int> PageSize, string PresetId, Dictionary`2<string, TemplateGroup> GroupsInfo, KeyValuePairs[] Defaults);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetSearch(string ObjectName, string ObjectWhere, string ModuleName, string PageName, int Page, List`1<PropertyOrder> OrderInfo, string AdditionalWhere, string Mode, object SearchId, filterHelper[] FilterValues);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetPageList(string ObjectName, string CryptedSql, int Page, int PageSize, bool RemoveKeys, KeyValuePairs[] Filters, string ModuleName, string PageName);
    [CompressAttribute]
[BlacklistCheckAttribute]
[DebugAttribute("Controller")]
public ActionResult GetCount(string ObjectName, string CryptedSql, KeyValuePairs[] Filters, string ModuleName, string PageName);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetBagPage(string ObjectName, string ObjectWhere, string AdditionalWhere);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult LoadFilters(string CollectionName);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.MailController : FlxController {
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetMailConfig(string ModuleName, string PageName, string ObjectName, string ObjectWhere);
    [DebugAttribute("Controller")]
[BlacklistCheckAttribute]
[CompressAttribute]
public ActionResult GetMailFolders();
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult GetMails(long Uid, int PageSize, string Folder, bool Seen, string MailAddress, string Subject, string Body, object MailDateMin, object MailDateMax);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult DownloadMails(string Folder, int PageSize);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetMailHeaders(int Page, int PageSize, string Folder, bool Seen, string MailAddress, string Subject, string Body, object MailDateMin, object MailDateMax);
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult GetMail(string MessageId, string Mode);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetMailBadgeValue();
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult refreshMailToken();
    [BlacklistCheckAttribute]
[DebugAttribute("Controller")]
[CompressAttribute]
public ActionResult checkMailToken();
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.MapController : FlxController {
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetHTML(string ObjectName, string ObjectWhere, string ModuleName, string PageName);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.MasterTableController : FlxController {
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetSettings(string TableName);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetTableData(string TableName);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult Insert(string TableName, KeyValuePairs[] values);
    [DebugAttribute("Controller")]
[BlacklistCheckAttribute]
[CompressAttribute]
public ActionResult Update(string TableName, KeyValuePairs[] keys, KeyValuePairs[] values);
    [CompressAttribute]
[DebugAttribute("Controller")]
[BlacklistCheckAttribute]
public ActionResult Delete(string TableName, KeyValuePairs[] keys);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.MenuManagerController : FlxController {
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetAppMenus(string AppName);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult AddNew(string AppName);
    [BlacklistCheckAttribute]
[DebugAttribute("Controller")]
[CompressAttribute]
public ActionResult DeleteMenu(string MenuId);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult RelocateMenu(string Id, string Order, string ParentId);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.NavigationController : FlxController {
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetMainNodes();
    [CompressAttribute]
[DebugAttribute("Controller")]
[BlacklistCheckAttribute]
public ActionResult GetNavNodes();
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetNodesById(string ParentId, bool HideAutoSQLNodes);
    [BlacklistCheckAttribute]
[DebugAttribute("Controller")]
[CompressAttribute]
public ActionResult GetAreaNode(string ParentId);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetProcessesNodes(string AreaId, string Source, string Target);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult DeleteNode(string NodeId);
    [CompressAttribute]
[BlacklistCheckAttribute]
[DebugAttribute("Controller")]
public ActionResult RelocateNode(string Id, string ParentId, string Order);
    [BlacklistCheckAttribute]
[DebugAttribute("Controller")]
[CompressAttribute]
public ActionResult RefreshNodes();
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.NetworkController : FlxController {
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult GetData(string ObjectName, string ObjectWhere, string ModuleName, bool Details, int ParentId, int MaxId, string ParentObjectName, string ParentObjectWhere);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.NotifyController : FlxController {
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetNotice(string NoticeId);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult SetNoticeIsRead(string NoticeId);
    [CompressAttribute]
[BlacklistCheckAttribute]
[DebugAttribute("Controller")]
public ActionResult GetBadgeValue();
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.ObjectsRelationsController : FlxController {
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetHTML(string ObjectName, string ObjectWhere, string ModuleName, string PageName, string Mode);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.OrgChartController : FlxController {
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult GetNodes(string ObjectName, string ObjectWhere, string ModuleName, string PageName, KeyValuePairs[] Defaults, string AdditionalWhere);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.PageController : FlxController {
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetPageByName(string PageName, string ObjectName, string ObjectWhere);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetModuleManagerModules(string PageName);
    [CompressAttribute]
[BlacklistCheckAttribute]
[DebugAttribute("Controller")]
public ActionResult GetHelpById(string HelpId);
    [CompressAttribute]
[DebugAttribute("Controller")]
[BlacklistCheckAttribute]
public ActionResult GetPageByObject(string StrType, string ObjectName, string ObjectWhere, bool IsClone);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetPageObjectDefaults(string StrType, string ObjectName, string ObjectWhere);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetPageTabModules(string ObjectName, string ObjectWhere, string ModuleName);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult SavePageConfig(string PageName, string LayoutName, string ObjectName, ConfigModuleHelper[] Modules);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetExternalAuth(string AppName);
    public ActionResult IsObserverModule(string UserId, string ModuleName, string ObjectName, string ObjectWhere, bool RemoveElement);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.PlannerController : FlxController {
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetPlanner(string ObjectName, string ObjectWhere, string ModuleName, string PageName, string AdditionalWhere, string GroupsFilter, string PlannerInitDate, string PlannerInitMode, filterHelper[] FilterValues, object SearchId, string TimeMode, KeyValuePairs[] Defaults);
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult GetCellCards(string PlannerModeId, string CellDay, string CellRowId);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.ProcessController : FlxControllerNew {
    [CompressAttribute]
[DebugAttribute("Controller")]
[BlacklistCheckAttribute]
public ActionResult execProcessByName(string ProcessName, string ObjectName, string ObjectWhere, KeyValuePairs[] ProcessParams, string LastProcessName);
    [CompressAttribute]
[BlacklistCheckAttribute]
[DebugAttribute("Controller")]
public ActionResult getProcessInfoByName(string ProcessName);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.ReportController : FlxController {
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetReportExcel(string ObjectName, string ObjectWhere, string ReportName, string AdditionalWhere);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public object GetExcelExport(string ObjectName, string ObjectWhere, string ModuleName, string AdditionalWhere, String[] InactiveFields, List`1<PropertyOrder> OrderInfo, string ViewId, KeyValuePairs[] Defaults);
    [DebugAttribute("Controller")]
[BlacklistCheckAttribute]
[CompressAttribute]
public ActionResult GetReportConfig(string ReportName, string ObjectName, string ObjectWhere);
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult GetReportPDFBase64(string ObjectName, string ObjectWhere, string ReportName, string ReportWhere, string ReportTypeId, string Params, string Defaults, string HasParams);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.RssController : FlxController {
    [CompressAttribute]
[DebugAttribute("Controller")]
[BlacklistCheckAttribute]
public ActionResult GetHTML(string ObjectName, string ObjectWhere, string ModuleName, string PageName);
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult GetVersionInfo(string ObjectName, string ObjectWhere, string ModuleName, string PageName);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.SchedulerController : FlxController {
    [DebugAttribute("Controller")]
[BlacklistCheckAttribute]
[CompressAttribute]
public ActionResult GetSchedulerTemplate(string ModuleName);
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult GetSchedulerConfig(string Scheduler);
    [CompressAttribute]
[BlacklistCheckAttribute]
[DebugAttribute("Controller")]
public ActionResult GetSchedulerResult(string ObjectName, string ViewName, string Start, string End, string StartDate, string EndDate, string StartTime, string EndTime, string Duration, string DescripTemplate, String[] Keys, string Color, string UserIdField, string Filter, string TextColor, string AdditionalWhere, string TokenDefault, string AllDayField);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.SchedulerViewController : FlxController {
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetSchedulerConfig(string ModuleName);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetSchedulerViewConfig(string ObjName, string ObjectWhere, string ModuleName, string Start, string End, string AdditionalWhere, SchedulerConfigResult[] SchedulerConfig);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.SchedulerYearController : FlxController {
    [CompressAttribute]
[DebugAttribute("Controller")]
[BlacklistCheckAttribute]
public ActionResult GetSchedulerHolidays(string ModuleName, string Init, string End);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetSchedulerYearConfig(string ObjName, string ObjectWhere, string ModuleName, string Start, string End, string AdditionalWhere, string Filter);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetSchedulerCombo(string ModuleName);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.SecurityController : FlxController {
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult SetSecurity(string SecurityType, string SecurityKey, string SecurityKey2, string SecurityItem, string SecurityItemValue, string SecurityId, string SecurityKey3);
    [BlacklistCheckAttribute]
[DebugAttribute("Controller")]
[CompressAttribute]
public ActionResult getObjectKey(string SecurityType, string SecurityKey, string SecurityKey2, string SecurityKey3);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.SparkLineController : FlxController {
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetHTML(string ObjectName, string ObjectWhere, string ModuleName, string PageName);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.SQLFeedController : FlxController {
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult GetHTML(string ObjectName, string ObjectWhere, string ModuleName, string PageName);
}
public class FLEXYGO.Controlers.UI.StorageController : FlxController {
    [CompressAttribute]
[BlacklistCheckAttribute]
[DebugAttribute("Controller")]
public ActionResult Save(KeyValuePairs[] Properties);
    [CompressAttribute]
[BlacklistCheckAttribute]
[DebugAttribute("Controller")]
public ActionResult Load();
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.SysController : FlxController {
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult createObject(KeyValuePairs[] StoredParams);
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult getDBSchema();
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult getSubqueriesColumns(string subqueries, string connStringId);
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult updateObject(KeyValuePairs[] StoredParams);
    [CompressAttribute]
[DebugAttribute("Controller")]
[BlacklistCheckAttribute]
public ActionResult setSkinCacheVars(KeyValuePairs[] VarValues, string SkinId);
    [DebugAttribute("Controller")]
[BlacklistCheckAttribute]
[CompressAttribute]
public ActionResult saveSkinCacheVars(string SkinId);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult resetSkinCacheVars();
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult loadMonacoDefinitions();
    [BlacklistCheckAttribute]
[DebugAttribute("Controller")]
[CompressAttribute]
public ActionResult SearchObjects(string FindString, bool EnableCount, string ObjectName);
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult getUserSearchSettings();
    [CompressAttribute]
[DebugAttribute("Controller")]
[BlacklistCheckAttribute]
public ActionResult saveUserSearchSettingsOrder(KeyValuePairs[] OrderedObjects);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult saveUserSearchSettingsCheck(string SearchId, bool Checked);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult AreParents(string ObjectName1, string ObjectName2);
    [CompressAttribute]
[DebugAttribute("Controller")]
[BlacklistCheckAttribute]
public ActionResult getRelatedObjetsAndProps(string ObjectName);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult getView(string ObjectName, string ViewName);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult getFilters(string ObjectName);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult saveFilter(string SearchId, string FilterName, string ObjectName, string Type, bool Generic, FilterSaveHelper[] Properties);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult saveView(string ObjectName, string ViewName, string Mode, FilterSaveHelper[] Properties, string SQL);
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult validateView(string ObjectName, string SQL);
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public static bool testView(string ObjectName, string SQL);
    [DebugAttribute("Controller")]
[BlacklistCheckAttribute]
[CompressAttribute]
public ActionResult getVersion(bool force);
    [DebugAttribute("Controller")]
[BlacklistCheckAttribute]
[CompressAttribute]
public ActionResult getInstalledVersions();
    [CompressAttribute]
[BlacklistCheckAttribute]
[DebugAttribute("Controller")]
public ActionResult deleteVersion(string version);
    [CompressAttribute]
[BlacklistCheckAttribute]
[DebugAttribute("Controller")]
public ActionResult updateChanges(string version, List`1<VersionPendingChangeHelper> changes);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult setActiveVersion(string version, bool force);
    [CompressAttribute]
[DebugAttribute("Controller")]
[BlacklistCheckAttribute]
public ActionResult updateNewVersion(string Version, bool Force);
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult checkUpdateProgress();
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult IsConnectionAlive();
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult IsObserverModule(string UserId, string ModuleName, string ObjectName, string ObjectWhere);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.TestController : FlxController {
    [CompressAttribute]
[DebugAttribute("Controller")]
[BlacklistCheckAttribute]
public ActionResult ExecuteTest(string TestName, string ClassName, string TestId);
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetTests();
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.TimelineController : FlxController {
    [CompressAttribute]
[BlacklistCheckAttribute]
[DebugAttribute("Controller")]
public ActionResult GetTimeline(string PageName, string ModuleName, string ObjectName, string ObjectWhere, string SearchId, filterHelper[] FilterValues);
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult GetItems();
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.UploadController : FlxController {
    [DebugAttribute("Controller")]
[CompressAttribute]
[BlacklistCheckAttribute]
public ActionResult Upload(string Base64, string Name, string Path, string Mode, string ObjectName, string PropertyName, KeyValuePairs[] FormValues);
    [DebugAttribute("Controller")]
[BlacklistCheckAttribute]
[CompressAttribute]
public ActionResult GetConfig(string ObjectName, string ObjectWhere, string ModuleName, string PageName);
}
[SessionStateAttribute]
public class FLEXYGO.Controlers.UI.ViewController : FlxController {
    [CompressAttribute]
[DebugAttribute("Controller")]
[BlacklistCheckAttribute]
public ActionResult GetViewTemplate(string ObjectName, string ObjectWhere, string ModuleName, string PageName, string TemplateId, KeyValuePairs[] Defaults);
}
[SessionStateAttribute]
public class FLEXYGO.controllers.UI.EasyLineController : FlxController {
    [BlacklistCheckAttribute]
[CompressAttribute]
[DebugAttribute("Controller")]
public ActionResult GetHTML(string ObjectName, string ObjectWhere, string ModuleName, string PageName);
}
public class FLEXYGO.Download : object {
    public bool IsReusable { get; }
    public sealed virtual override void ProcessRequest(HttpContext context);
    public sealed virtual override bool get_IsReusable();
}
public class FLEXYGO.ErrorPage : Page {
    [AccessedThroughPropertyAttribute("DetailedErrorPanel")]
[CompilerGeneratedAttribute]
private Panel A;
    [AccessedThroughPropertyAttribute("InnerMessage")]
[CompilerGeneratedAttribute]
private Label A;
    [AccessedThroughPropertyAttribute("ErrorDetailedMsg")]
[CompilerGeneratedAttribute]
private Label a;
    [AccessedThroughPropertyAttribute("ErrorHandler")]
[CompilerGeneratedAttribute]
private Label B;
    [AccessedThroughPropertyAttribute("InnerTrace")]
[CompilerGeneratedAttribute]
private Label b;
    protected Panel DetailedErrorPanel { get; protected set; }
    protected Label InnerMessage { get; protected set; }
    protected Label ErrorDetailedMsg { get; protected set; }
    protected Label ErrorHandler { get; protected set; }
    protected Label InnerTrace { get; protected set; }
    [CompilerGeneratedAttribute]
protected virtual Panel get_DetailedErrorPanel();
    [CompilerGeneratedAttribute]
protected virtual void set_DetailedErrorPanel(Panel WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_InnerMessage();
    [CompilerGeneratedAttribute]
protected virtual void set_InnerMessage(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_ErrorDetailedMsg();
    [CompilerGeneratedAttribute]
protected virtual void set_ErrorDetailedMsg(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_ErrorHandler();
    [CompilerGeneratedAttribute]
protected virtual void set_ErrorHandler(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_InnerTrace();
    [CompilerGeneratedAttribute]
protected virtual void set_InnerTrace(Label WithEventsValue);
    protected void Page_Load(object sender, EventArgs e);
}
[DebuggerStepThroughAttribute]
[GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
[DataContractAttribute]
public class FLEXYGO.FlexyGoServices.AutoUpdaterCheckInfo : object {
    private ExtensionDataObject A;
    [OptionalFieldAttribute]
private string A;
    [OptionalFieldAttribute]
private string a;
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler A;
    [BrowsableAttribute("False")]
public ExtensionDataObject ExtensionData { get; public set; }
    [DataMemberAttribute]
public string LastVersion { get; public set; }
    [DataMemberAttribute]
public string ReleaseNotes { get; public set; }
    public sealed virtual override ExtensionDataObject get_ExtensionData();
    public sealed virtual override void set_ExtensionData(ExtensionDataObject Value);
    public string get_LastVersion();
    public void set_LastVersion(string Value);
    public string get_ReleaseNotes();
    public void set_ReleaseNotes(string Value);
    [CompilerGeneratedAttribute]
public sealed virtual override void add_PropertyChanged(PropertyChangedEventHandler obj);
    [CompilerGeneratedAttribute]
public sealed virtual override void remove_PropertyChanged(PropertyChangedEventHandler obj);
    protected void RaisePropertyChanged(string propertyName);
}
[DebuggerStepThroughAttribute]
[GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public class FLEXYGO.FlexyGoServices.AutoUpdaterServiceClient : ClientBase`1<IAutoUpdaterService> {
    public AutoUpdaterServiceClient(string endpointConfigurationName);
    public AutoUpdaterServiceClient(string endpointConfigurationName, string remoteAddress);
    public AutoUpdaterServiceClient(string endpointConfigurationName, EndpointAddress remoteAddress);
    public AutoUpdaterServiceClient(Binding binding, EndpointAddress remoteAddress);
    public sealed virtual override void InstallApplication(string projectNamee, string siteName, string physicalPath, string virtualPath, string packageName, string packageRepoUrl, string version, string databaseName, string additionalData, bool forceInstall, bool prereleaseVersions);
    public sealed virtual override Task InstallApplicationAsync(string projectNamee, string siteName, string physicalPath, string virtualPath, string packageName, string packageRepoUrl, string version, string databaseName, string additionalData, bool forceInstall, bool prereleaseVersions);
    public sealed virtual override void UpdateNewVersion(string projectName, string siteName, string currentPhysicalPath, string currentVirtualPath, string packageName, string packageRepoUrl, string currentVersion, string newVersion, bool forceUpdate, bool prereleaseVersions);
    public sealed virtual override Task UpdateNewVersionAsync(string projectName, string siteName, string currentPhysicalPath, string currentVirtualPath, string packageName, string packageRepoUrl, string currentVersion, string newVersion, bool forceUpdate, bool prereleaseVersions);
    public sealed virtual override void deleteVersion(string projectName, string siteName, string currentPhysicalPath, string currentVirtualPath, string packageName, string currentVersion, string deletedVersion);
    public sealed virtual override Task deleteVersionAsync(string projectName, string siteName, string currentPhysicalPath, string currentVirtualPath, string packageName, string currentVersion, string deletedVersion);
    public sealed virtual override void setCurrentVersion(string projectName, string siteName, string currentPhysicalPath, string currentVirtualPath, string packageName, string packageRepoUrl, string currentVersion, string newVersion, bool forceUpdate);
    public sealed virtual override Task setCurrentVersionAsync(string projectName, string siteName, string currentPhysicalPath, string currentVirtualPath, string packageName, string packageRepoUrl, string currentVersion, string newVersion, bool forceUpdate);
    public sealed virtual override AutoUpdaterCheckInfo checkVersion(string packageName, string repositoryUrl, string currentVersion, bool prereleaseVersions);
    public sealed virtual override Task`1<AutoUpdaterCheckInfo> checkVersionAsync(string packageName, string repositoryUrl, string currentVersion, bool prereleaseVersions);
    public sealed virtual override AutoUpdaterUpdateInfo checkUpdateProgress();
    public sealed virtual override Task`1<AutoUpdaterUpdateInfo> checkUpdateProgressAsync();
    public sealed virtual override VersionInfo[] getInstalledVersions(string projectName, string packageName, string repositoryUrl, string currentVersion, string currentSite, string currentVirtualPath, bool prereleaseVersions);
    public sealed virtual override Task`1<VersionInfo[]> getInstalledVersionsAsync(string projectName, string packageName, string repositoryUrl, string currentVersion, string currentSite, string currentVirtualPath, bool prereleaseVersions);
    public sealed virtual override void UninstallApplication(string projectName, string siteName, string physicalPath, string virtualPath, string packageName, string currentVersion);
    public sealed virtual override Task UninstallApplicationAsync(string projectName, string siteName, string physicalPath, string virtualPath, string packageName, string currentVersion);
}
[DataContractAttribute]
[GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
public enum FLEXYGO.FlexyGoServices.AutoUpdaterState : Enum {
    public int value__;
    [EnumMemberAttribute]
public static AutoUpdaterState eStateIdle;
    [EnumMemberAttribute]
public static AutoUpdaterState eStateWorking;
    [EnumMemberAttribute]
public static AutoUpdaterState eStateFinishedOk;
    [EnumMemberAttribute]
public static AutoUpdaterState eStateFinishedError;
    [EnumMemberAttribute]
public static AutoUpdaterState eStateWaitingForResponse;
    [EnumMemberAttribute]
public static AutoUpdaterState eStateServiceRestarted;
}
[DataContractAttribute]
[GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
public enum FLEXYGO.FlexyGoServices.AutoUpdaterStatus : Enum {
    public int value__;
    [EnumMemberAttribute]
public static AutoUpdaterStatus eStatusUpdatingService;
    [EnumMemberAttribute]
public static AutoUpdaterStatus eStatusCheckingPackages;
    [EnumMemberAttribute]
public static AutoUpdaterStatus eStatusDownloadingVersion;
    [EnumMemberAttribute]
public static AutoUpdaterStatus eStatusUpdateDatabase;
    [EnumMemberAttribute]
public static AutoUpdaterStatus eStatusUpdateIIS;
    [EnumMemberAttribute]
public static AutoUpdaterStatus eStatusFinished;
}
[DataContractAttribute]
[DebuggerStepThroughAttribute]
[GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
public class FLEXYGO.FlexyGoServices.AutoUpdaterUpdateInfo : object {
    private ExtensionDataObject A;
    [OptionalFieldAttribute]
private string A;
    [OptionalFieldAttribute]
private int A;
    [OptionalFieldAttribute]
private AutoUpdaterState A;
    [OptionalFieldAttribute]
private AutoUpdaterStatus A;
    [OptionalFieldAttribute]
private string a;
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler A;
    [BrowsableAttribute("False")]
public ExtensionDataObject ExtensionData { get; public set; }
    [DataMemberAttribute]
public string LastError { get; public set; }
    [DataMemberAttribute]
public int Progress { get; public set; }
    [DataMemberAttribute]
public AutoUpdaterState State { get; public set; }
    [DataMemberAttribute]
public AutoUpdaterStatus Status { get; public set; }
    [DataMemberAttribute]
public string StatusText { get; public set; }
    public sealed virtual override ExtensionDataObject get_ExtensionData();
    public sealed virtual override void set_ExtensionData(ExtensionDataObject Value);
    public string get_LastError();
    public void set_LastError(string Value);
    public int get_Progress();
    public void set_Progress(int Value);
    public AutoUpdaterState get_State();
    public void set_State(AutoUpdaterState Value);
    public AutoUpdaterStatus get_Status();
    public void set_Status(AutoUpdaterStatus Value);
    public string get_StatusText();
    public void set_StatusText(string Value);
    [CompilerGeneratedAttribute]
public sealed virtual override void add_PropertyChanged(PropertyChangedEventHandler obj);
    [CompilerGeneratedAttribute]
public sealed virtual override void remove_PropertyChanged(PropertyChangedEventHandler obj);
    protected void RaisePropertyChanged(string propertyName);
}
[ServiceContractAttribute]
[GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface FLEXYGO.FlexyGoServices.IAutoUpdaterService {
    [OperationContractAttribute]
public abstract virtual void InstallApplication(string projectNamee, string siteName, string physicalPath, string virtualPath, string packageName, string packageRepoUrl, string version, string databaseName, string additionalData, bool forceInstall, bool prereleaseVersions);
    [OperationContractAttribute]
public abstract virtual Task InstallApplicationAsync(string projectNamee, string siteName, string physicalPath, string virtualPath, string packageName, string packageRepoUrl, string version, string databaseName, string additionalData, bool forceInstall, bool prereleaseVersions);
    [OperationContractAttribute]
public abstract virtual void UpdateNewVersion(string projectName, string siteName, string currentPhysicalPath, string currentVirtualPath, string packageName, string packageRepoUrl, string currentVersion, string newVersion, bool forceUpdate, bool prereleaseVersions);
    [OperationContractAttribute]
public abstract virtual Task UpdateNewVersionAsync(string projectName, string siteName, string currentPhysicalPath, string currentVirtualPath, string packageName, string packageRepoUrl, string currentVersion, string newVersion, bool forceUpdate, bool prereleaseVersions);
    [OperationContractAttribute]
public abstract virtual void deleteVersion(string projectName, string siteName, string currentPhysicalPath, string currentVirtualPath, string packageName, string currentVersion, string deletedVersion);
    [OperationContractAttribute]
public abstract virtual Task deleteVersionAsync(string projectName, string siteName, string currentPhysicalPath, string currentVirtualPath, string packageName, string currentVersion, string deletedVersion);
    [OperationContractAttribute]
public abstract virtual void setCurrentVersion(string projectName, string siteName, string currentPhysicalPath, string currentVirtualPath, string packageName, string packageRepoUrl, string currentVersion, string newVersion, bool forceUpdate);
    [OperationContractAttribute]
public abstract virtual Task setCurrentVersionAsync(string projectName, string siteName, string currentPhysicalPath, string currentVirtualPath, string packageName, string packageRepoUrl, string currentVersion, string newVersion, bool forceUpdate);
    [OperationContractAttribute]
public abstract virtual AutoUpdaterCheckInfo checkVersion(string packageName, string repositoryUrl, string currentVersion, bool prereleaseVersions);
    [OperationContractAttribute]
public abstract virtual Task`1<AutoUpdaterCheckInfo> checkVersionAsync(string packageName, string repositoryUrl, string currentVersion, bool prereleaseVersions);
    [OperationContractAttribute]
public abstract virtual AutoUpdaterUpdateInfo checkUpdateProgress();
    [OperationContractAttribute]
public abstract virtual Task`1<AutoUpdaterUpdateInfo> checkUpdateProgressAsync();
    [OperationContractAttribute]
public abstract virtual VersionInfo[] getInstalledVersions(string projectName, string packageName, string repositoryUrl, string currentVersion, string currentSite, string currentVirtualPath, bool prereleaseVersions);
    [OperationContractAttribute]
public abstract virtual Task`1<VersionInfo[]> getInstalledVersionsAsync(string projectName, string packageName, string repositoryUrl, string currentVersion, string currentSite, string currentVirtualPath, bool prereleaseVersions);
    [OperationContractAttribute]
public abstract virtual void UninstallApplication(string projectName, string siteName, string physicalPath, string virtualPath, string packageName, string currentVersion);
    [OperationContractAttribute]
public abstract virtual Task UninstallApplicationAsync(string projectName, string siteName, string physicalPath, string virtualPath, string packageName, string currentVersion);
}
[GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface FLEXYGO.FlexyGoServices.IAutoUpdaterServiceChannel {
}
[GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
[DebuggerStepThroughAttribute]
[DataContractAttribute]
public class FLEXYGO.FlexyGoServices.VersionInfo : object {
    private ExtensionDataObject A;
    [OptionalFieldAttribute]
private string A;
    [OptionalFieldAttribute]
private bool A;
    [OptionalFieldAttribute]
private bool a;
    [OptionalFieldAttribute]
private bool B;
    [OptionalFieldAttribute]
private bool b;
    [OptionalFieldAttribute]
private string a;
    [OptionalFieldAttribute]
private string B;
    [OptionalFieldAttribute]
private string b;
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler A;
    [BrowsableAttribute("False")]
public ExtensionDataObject ExtensionData { get; public set; }
    [DataMemberAttribute]
public string DatabaseName { get; public set; }
    [DataMemberAttribute]
public bool IsCurrent { get; public set; }
    [DataMemberAttribute]
public bool IsNew { get; public set; }
    [DataMemberAttribute]
public bool IsOld { get; public set; }
    [DataMemberAttribute]
public bool IsUpdate { get; public set; }
    [DataMemberAttribute]
public string ReleaseNotes { get; public set; }
    [DataMemberAttribute]
public string VersionNumber { get; public set; }
    [DataMemberAttribute]
public string VirtualPath { get; public set; }
    public sealed virtual override ExtensionDataObject get_ExtensionData();
    public sealed virtual override void set_ExtensionData(ExtensionDataObject Value);
    public string get_DatabaseName();
    public void set_DatabaseName(string Value);
    public bool get_IsCurrent();
    public void set_IsCurrent(bool Value);
    public bool get_IsNew();
    public void set_IsNew(bool Value);
    public bool get_IsOld();
    public void set_IsOld(bool Value);
    public bool get_IsUpdate();
    public void set_IsUpdate(bool Value);
    public string get_ReleaseNotes();
    public void set_ReleaseNotes(string Value);
    public string get_VersionNumber();
    public void set_VersionNumber(string Value);
    public string get_VirtualPath();
    public void set_VirtualPath(string Value);
    [CompilerGeneratedAttribute]
public sealed virtual override void add_PropertyChanged(PropertyChangedEventHandler obj);
    [CompilerGeneratedAttribute]
public sealed virtual override void remove_PropertyChanged(PropertyChangedEventHandler obj);
    protected void RaisePropertyChanged(string propertyName);
}
public class FLEXYGO.FlxController : Controller {
    public JsonResult Json(object Data);
}
public class FLEXYGO.FlxControllerNew : Controller {
    public ActionResult Json(object Data);
}
public class FLEXYGO.ForgotPassword : Page {
    [AccessedThroughPropertyAttribute("Links")]
[CompilerGeneratedAttribute]
private Links A;
    [AccessedThroughPropertyAttribute("form1")]
[CompilerGeneratedAttribute]
private HtmlForm A;
    [AccessedThroughPropertyAttribute("loginForm")]
[CompilerGeneratedAttribute]
private PlaceHolder A;
    [AccessedThroughPropertyAttribute("Email")]
[CompilerGeneratedAttribute]
private TextBox A;
    [AccessedThroughPropertyAttribute("EmailRequired")]
[CompilerGeneratedAttribute]
private RequiredFieldValidator A;
    [AccessedThroughPropertyAttribute("MainButton")]
[CompilerGeneratedAttribute]
private LinkButton A;
    [AccessedThroughPropertyAttribute("DisplayEmail")]
[CompilerGeneratedAttribute]
private PlaceHolder a;
    [AccessedThroughPropertyAttribute("GotoLogin")]
[CompilerGeneratedAttribute]
private HyperLink A;
    [CompilerGeneratedAttribute]
private string A;
    protected Links Links { get; protected set; }
    protected HtmlForm form1 { get; protected set; }
    protected PlaceHolder loginForm { get; protected set; }
    protected TextBox Email { get; protected set; }
    protected RequiredFieldValidator EmailRequired { get; protected set; }
    protected LinkButton MainButton { get; protected set; }
    protected PlaceHolder DisplayEmail { get; protected set; }
    protected HyperLink GotoLogin { get; protected set; }
    protected string StatusMessage { get; protected set; }
    [CompilerGeneratedAttribute]
protected virtual Links get_Links();
    [CompilerGeneratedAttribute]
protected virtual void set_Links(Links WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HtmlForm get_form1();
    [CompilerGeneratedAttribute]
protected virtual void set_form1(HtmlForm WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual PlaceHolder get_loginForm();
    [CompilerGeneratedAttribute]
protected virtual void set_loginForm(PlaceHolder WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_Email();
    [CompilerGeneratedAttribute]
protected virtual void set_Email(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_EmailRequired();
    [CompilerGeneratedAttribute]
protected virtual void set_EmailRequired(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_MainButton();
    [CompilerGeneratedAttribute]
protected virtual void set_MainButton(LinkButton WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual PlaceHolder get_DisplayEmail();
    [CompilerGeneratedAttribute]
protected virtual void set_DisplayEmail(PlaceHolder WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HyperLink get_GotoLogin();
    [CompilerGeneratedAttribute]
protected virtual void set_GotoLogin(HyperLink WithEventsValue);
    [CompilerGeneratedAttribute]
protected string get_StatusMessage();
    [CompilerGeneratedAttribute]
protected void set_StatusMessage(string AutoPropertyValue);
    protected void Page_Load(object sender, EventArgs e);
    protected void Forgot(object sender, EventArgs e);
    public void CheckBlackList(string FunctionName, IDictionary`2<string, object> Params, string Username);
    public bool TranslateForgot(string CultureId);
    public string TranslateForgotMessages(string CultureId, string Message);
}
public class FLEXYGO.Global_asax : HttpApplication {
    private static object A;
    private TracerProvider A;
    private TracerProvider a;
    private static Global_asax();
    [ObfuscationAttribute]
public h L();
    [ObfuscationAttribute]
public object LGetValue(string key);
    [ObfuscationAttribute]
public void lCheckValue(DataManager dm, string path);
    public void Application_Start(object sender, EventArgs e);
    public void Session_Start(object sender, EventArgs e);
    public void Application_BeginRequest(object sender, EventArgs e);
    public void Application_Error(object sender, EventArgs e);
    public void Session_End(object sender, EventArgs e);
    public void Application_End(object sender, EventArgs e);
    private static Assembly A(object , ResolveEventArgs );
    private void A(object , EventArgs );
    private string A(string , string );
    private a a(string , string );
}
public class FLEXYGO.Index : Page {
    private void A(object , EventArgs );
}
public class FLEXYGO.Jerror : object {
    public string title;
    public string message;
    public string stackTrace;
    public string innermessage;
    public EajaxExceptionType msgtype;
}
public class FLEXYGO.LicensePage : Page {
    [AccessedThroughPropertyAttribute("Links")]
[CompilerGeneratedAttribute]
private Links A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("form1")]
private HtmlForm A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("lblStatus")]
private Label A;
    [AccessedThroughPropertyAttribute("pnlUnlicensed")]
[CompilerGeneratedAttribute]
private PlaceHolder A;
    [AccessedThroughPropertyAttribute("lblOfflineUnlicensedMsg")]
[CompilerGeneratedAttribute]
private Label a;
    [AccessedThroughPropertyAttribute("lblOnlineUnlicensedMsg")]
[CompilerGeneratedAttribute]
private Label B;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("lblLicenseType")]
private Label b;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("cboLicenseType")]
private DropDownList A;
    [AccessedThroughPropertyAttribute("lblLicenseRate")]
[CompilerGeneratedAttribute]
private Label C;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("cboLicenseRate")]
private DropDownList a;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("lblUsers")]
private Label c;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("txtUsers")]
private TextBox A;
    [AccessedThroughPropertyAttribute("pnlRequestCredentials")]
[CompilerGeneratedAttribute]
private PlaceHolder a;
    [AccessedThroughPropertyAttribute("Label3")]
[CompilerGeneratedAttribute]
private Label D;
    [AccessedThroughPropertyAttribute("txtRequestMail")]
[CompilerGeneratedAttribute]
private TextBox a;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("Label6")]
private Label d;
    [AccessedThroughPropertyAttribute("txtRequestPassword")]
[CompilerGeneratedAttribute]
private TextBox B;
    [AccessedThroughPropertyAttribute("lblRequestCompanyName")]
[CompilerGeneratedAttribute]
private Label E;
    [AccessedThroughPropertyAttribute("txtRequestCompanyName")]
[CompilerGeneratedAttribute]
private TextBox b;
    [AccessedThroughPropertyAttribute("lblRequestPhoneNumber")]
[CompilerGeneratedAttribute]
private Label e;
    [AccessedThroughPropertyAttribute("txtRequestPhoneNumber")]
[CompilerGeneratedAttribute]
private TextBox C;
    [AccessedThroughPropertyAttribute("lblRequest")]
[CompilerGeneratedAttribute]
private Label F;
    [AccessedThroughPropertyAttribute("txtRequest")]
[CompilerGeneratedAttribute]
private TextBox c;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("chkLicenseData")]
private CheckBox A;
    [AccessedThroughPropertyAttribute("btnGotoSetLicense")]
[CompilerGeneratedAttribute]
private LinkButton A;
    [AccessedThroughPropertyAttribute("btnGetLicense")]
[CompilerGeneratedAttribute]
private LinkButton a;
    [AccessedThroughPropertyAttribute("pnlRequested")]
[CompilerGeneratedAttribute]
private PlaceHolder B;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("pnlRequestedOnline")]
private PlaceHolder b;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("btnRefreshLicenseData")]
private LinkButton B;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("pnlRequestedOffline")]
private PlaceHolder C;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("Label7")]
private Label f;
    [AccessedThroughPropertyAttribute("txtLicenseData")]
[CompilerGeneratedAttribute]
private TextBox D;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("btnSetLicenseData")]
private LinkButton b;
    [AccessedThroughPropertyAttribute("notActivatedPanel")]
[CompilerGeneratedAttribute]
private PlaceHolder c;
    [AccessedThroughPropertyAttribute("notRequestedPanel")]
[CompilerGeneratedAttribute]
private PlaceHolder D;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("chkActivationRegistered")]
private CheckBox a;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("pnlActivationNotRegistered")]
private PlaceHolder d;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("Label10")]
private Label G;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("txtActivateMail")]
private TextBox d;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("reqtxtActivateMail")]
private RequiredFieldValidator A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("Label11")]
private Label g;
    [AccessedThroughPropertyAttribute("txtActivatePassword")]
[CompilerGeneratedAttribute]
private TextBox E;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("reqtxtActivatePassword")]
private RequiredFieldValidator a;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("Label12")]
private Label H;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("txtActivateConfirmPassword")]
private TextBox e;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("reqtxtActivateConfirmPassword")]
private RequiredFieldValidator B;
    [AccessedThroughPropertyAttribute("Label13")]
[CompilerGeneratedAttribute]
private Label h;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("txtActivateCompanyName")]
private TextBox F;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("reqtxtActivateCompanyName")]
private RequiredFieldValidator b;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("Label14")]
private Label I;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("txtActivatePhoneNumber")]
private TextBox f;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("reqtxtActivatePhoneNumber")]
private RequiredFieldValidator C;
    [AccessedThroughPropertyAttribute("pnlActivationRegistered")]
[CompilerGeneratedAttribute]
private PlaceHolder E;
    [AccessedThroughPropertyAttribute("Label1")]
[CompilerGeneratedAttribute]
private Label i;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("txtEmail")]
private TextBox G;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("Label5")]
private Label J;
    [AccessedThroughPropertyAttribute("txtPassword")]
[CompilerGeneratedAttribute]
private TextBox g;
    [AccessedThroughPropertyAttribute("requestedPanel")]
[CompilerGeneratedAttribute]
private PlaceHolder e;
    [AccessedThroughPropertyAttribute("lblLicenseId")]
[CompilerGeneratedAttribute]
private Label j;
    [AccessedThroughPropertyAttribute("txtLicenseId")]
[CompilerGeneratedAttribute]
private TextBox H;
    [AccessedThroughPropertyAttribute("lblActivationCode")]
[CompilerGeneratedAttribute]
private Label K;
    [AccessedThroughPropertyAttribute("txtLicenseCode")]
[CompilerGeneratedAttribute]
private TextBox h;
    [AccessedThroughPropertyAttribute("reqLicenseCode")]
[CompilerGeneratedAttribute]
private RequiredFieldValidator c;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("chkActivationCode")]
private CheckBox B;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("btnActivate")]
private LinkButton C;
    [AccessedThroughPropertyAttribute("activatedPanel")]
[CompilerGeneratedAttribute]
private PlaceHolder F;
    [AccessedThroughPropertyAttribute("validPanel")]
[CompilerGeneratedAttribute]
private PlaceHolder f;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("Label2")]
private Label k;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("txtActivatedId")]
private TextBox I;
    [AccessedThroughPropertyAttribute("Label4")]
[CompilerGeneratedAttribute]
private Label L;
    [AccessedThroughPropertyAttribute("txtActivatedCode")]
[CompilerGeneratedAttribute]
private TextBox i;
    [AccessedThroughPropertyAttribute("Label17")]
[CompilerGeneratedAttribute]
private Label l;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("txtActivatedType")]
private TextBox J;
    [AccessedThroughPropertyAttribute("Label16")]
[CompilerGeneratedAttribute]
private Label M;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("txtActivatedUsers")]
private TextBox j;
    [AccessedThroughPropertyAttribute("lblModules")]
[CompilerGeneratedAttribute]
private Label m;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("txtModules")]
private TextBox K;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("pnlActivatedNonEvaluation")]
private PlaceHolder G;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("Label15")]
private Label N;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("txtActivatedRate")]
private TextBox k;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("Label18")]
private Label n;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("txtActivatedEndDate")]
private TextBox L;
    [AccessedThroughPropertyAttribute("invalidPanel")]
[CompilerGeneratedAttribute]
private PlaceHolder g;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("Label19")]
private Label O;
    [AccessedThroughPropertyAttribute("txtInvalidReason")]
[CompilerGeneratedAttribute]
private TextBox l;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("btnModify")]
private LinkButton c;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("btnRefresh")]
private LinkButton D;
    [AccessedThroughPropertyAttribute("btnReturn")]
[CompilerGeneratedAttribute]
private LinkButton d;
    private DataManager A;
    private static string A;
    private static string a;
    private static string B;
    private static string b;
    public static string CURL_LICENSESERVER;
    protected Links Links { get; protected set; }
    protected HtmlForm form1 { get; protected set; }
    protected Label lblStatus { get; protected set; }
    protected PlaceHolder pnlUnlicensed { get; protected set; }
    protected Label lblOfflineUnlicensedMsg { get; protected set; }
    protected Label lblOnlineUnlicensedMsg { get; protected set; }
    protected Label lblLicenseType { get; protected set; }
    protected DropDownList cboLicenseType { get; protected set; }
    protected Label lblLicenseRate { get; protected set; }
    protected DropDownList cboLicenseRate { get; protected set; }
    protected Label lblUsers { get; protected set; }
    protected TextBox txtUsers { get; protected set; }
    protected PlaceHolder pnlRequestCredentials { get; protected set; }
    protected Label Label3 { get; protected set; }
    protected TextBox txtRequestMail { get; protected set; }
    protected Label Label6 { get; protected set; }
    protected TextBox txtRequestPassword { get; protected set; }
    protected Label lblRequestCompanyName { get; protected set; }
    protected TextBox txtRequestCompanyName { get; protected set; }
    protected Label lblRequestPhoneNumber { get; protected set; }
    protected TextBox txtRequestPhoneNumber { get; protected set; }
    protected Label lblRequest { get; protected set; }
    protected TextBox txtRequest { get; protected set; }
    protected CheckBox chkLicenseData { get; protected set; }
    protected LinkButton btnGotoSetLicense { get; protected set; }
    protected LinkButton btnGetLicense { get; protected set; }
    protected PlaceHolder pnlRequested { get; protected set; }
    protected PlaceHolder pnlRequestedOnline { get; protected set; }
    protected LinkButton btnRefreshLicenseData { get; protected set; }
    protected PlaceHolder pnlRequestedOffline { get; protected set; }
    protected Label Label7 { get; protected set; }
    protected TextBox txtLicenseData { get; protected set; }
    protected LinkButton btnSetLicenseData { get; protected set; }
    protected PlaceHolder notActivatedPanel { get; protected set; }
    protected PlaceHolder notRequestedPanel { get; protected set; }
    protected CheckBox chkActivationRegistered { get; protected set; }
    protected PlaceHolder pnlActivationNotRegistered { get; protected set; }
    protected Label Label10 { get; protected set; }
    protected TextBox txtActivateMail { get; protected set; }
    protected RequiredFieldValidator reqtxtActivateMail { get; protected set; }
    protected Label Label11 { get; protected set; }
    protected TextBox txtActivatePassword { get; protected set; }
    protected RequiredFieldValidator reqtxtActivatePassword { get; protected set; }
    protected Label Label12 { get; protected set; }
    protected TextBox txtActivateConfirmPassword { get; protected set; }
    protected RequiredFieldValidator reqtxtActivateConfirmPassword { get; protected set; }
    protected Label Label13 { get; protected set; }
    protected TextBox txtActivateCompanyName { get; protected set; }
    protected RequiredFieldValidator reqtxtActivateCompanyName { get; protected set; }
    protected Label Label14 { get; protected set; }
    protected TextBox txtActivatePhoneNumber { get; protected set; }
    protected RequiredFieldValidator reqtxtActivatePhoneNumber { get; protected set; }
    protected PlaceHolder pnlActivationRegistered { get; protected set; }
    protected Label Label1 { get; protected set; }
    protected TextBox txtEmail { get; protected set; }
    protected Label Label5 { get; protected set; }
    protected TextBox txtPassword { get; protected set; }
    protected PlaceHolder requestedPanel { get; protected set; }
    protected Label lblLicenseId { get; protected set; }
    protected TextBox txtLicenseId { get; protected set; }
    protected Label lblActivationCode { get; protected set; }
    protected TextBox txtLicenseCode { get; protected set; }
    protected RequiredFieldValidator reqLicenseCode { get; protected set; }
    protected CheckBox chkActivationCode { get; protected set; }
    protected LinkButton btnActivate { get; protected set; }
    protected PlaceHolder activatedPanel { get; protected set; }
    protected PlaceHolder validPanel { get; protected set; }
    protected Label Label2 { get; protected set; }
    protected TextBox txtActivatedId { get; protected set; }
    protected Label Label4 { get; protected set; }
    protected TextBox txtActivatedCode { get; protected set; }
    protected Label Label17 { get; protected set; }
    protected TextBox txtActivatedType { get; protected set; }
    protected Label Label16 { get; protected set; }
    protected TextBox txtActivatedUsers { get; protected set; }
    protected Label lblModules { get; protected set; }
    protected TextBox txtModules { get; protected set; }
    protected PlaceHolder pnlActivatedNonEvaluation { get; protected set; }
    protected Label Label15 { get; protected set; }
    protected TextBox txtActivatedRate { get; protected set; }
    protected Label Label18 { get; protected set; }
    protected TextBox txtActivatedEndDate { get; protected set; }
    protected PlaceHolder invalidPanel { get; protected set; }
    protected Label Label19 { get; protected set; }
    protected TextBox txtInvalidReason { get; protected set; }
    protected LinkButton btnModify { get; protected set; }
    protected LinkButton btnRefresh { get; protected set; }
    protected LinkButton btnReturn { get; protected set; }
    public bool Renewing { get; public set; }
    public bool UserHasRegistererd { get; public set; }
    public string LicenseId { get; public set; }
    public bool HasConnection { get; public set; }
    [CompilerGeneratedAttribute]
protected virtual Links get_Links();
    [CompilerGeneratedAttribute]
protected virtual void set_Links(Links WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HtmlForm get_form1();
    [CompilerGeneratedAttribute]
protected virtual void set_form1(HtmlForm WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_lblStatus();
    [CompilerGeneratedAttribute]
protected virtual void set_lblStatus(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual PlaceHolder get_pnlUnlicensed();
    [CompilerGeneratedAttribute]
protected virtual void set_pnlUnlicensed(PlaceHolder WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_lblOfflineUnlicensedMsg();
    [CompilerGeneratedAttribute]
protected virtual void set_lblOfflineUnlicensedMsg(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_lblOnlineUnlicensedMsg();
    [CompilerGeneratedAttribute]
protected virtual void set_lblOnlineUnlicensedMsg(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_lblLicenseType();
    [CompilerGeneratedAttribute]
protected virtual void set_lblLicenseType(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual DropDownList get_cboLicenseType();
    [CompilerGeneratedAttribute]
protected virtual void set_cboLicenseType(DropDownList WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_lblLicenseRate();
    [CompilerGeneratedAttribute]
protected virtual void set_lblLicenseRate(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual DropDownList get_cboLicenseRate();
    [CompilerGeneratedAttribute]
protected virtual void set_cboLicenseRate(DropDownList WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_lblUsers();
    [CompilerGeneratedAttribute]
protected virtual void set_lblUsers(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtUsers();
    [CompilerGeneratedAttribute]
protected virtual void set_txtUsers(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual PlaceHolder get_pnlRequestCredentials();
    [CompilerGeneratedAttribute]
protected virtual void set_pnlRequestCredentials(PlaceHolder WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_Label3();
    [CompilerGeneratedAttribute]
protected virtual void set_Label3(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtRequestMail();
    [CompilerGeneratedAttribute]
protected virtual void set_txtRequestMail(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_Label6();
    [CompilerGeneratedAttribute]
protected virtual void set_Label6(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtRequestPassword();
    [CompilerGeneratedAttribute]
protected virtual void set_txtRequestPassword(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_lblRequestCompanyName();
    [CompilerGeneratedAttribute]
protected virtual void set_lblRequestCompanyName(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtRequestCompanyName();
    [CompilerGeneratedAttribute]
protected virtual void set_txtRequestCompanyName(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_lblRequestPhoneNumber();
    [CompilerGeneratedAttribute]
protected virtual void set_lblRequestPhoneNumber(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtRequestPhoneNumber();
    [CompilerGeneratedAttribute]
protected virtual void set_txtRequestPhoneNumber(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_lblRequest();
    [CompilerGeneratedAttribute]
protected virtual void set_lblRequest(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtRequest();
    [CompilerGeneratedAttribute]
protected virtual void set_txtRequest(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual CheckBox get_chkLicenseData();
    [CompilerGeneratedAttribute]
protected virtual void set_chkLicenseData(CheckBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_btnGotoSetLicense();
    [CompilerGeneratedAttribute]
protected virtual void set_btnGotoSetLicense(LinkButton WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_btnGetLicense();
    [CompilerGeneratedAttribute]
protected virtual void set_btnGetLicense(LinkButton WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual PlaceHolder get_pnlRequested();
    [CompilerGeneratedAttribute]
protected virtual void set_pnlRequested(PlaceHolder WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual PlaceHolder get_pnlRequestedOnline();
    [CompilerGeneratedAttribute]
protected virtual void set_pnlRequestedOnline(PlaceHolder WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_btnRefreshLicenseData();
    [CompilerGeneratedAttribute]
protected virtual void set_btnRefreshLicenseData(LinkButton WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual PlaceHolder get_pnlRequestedOffline();
    [CompilerGeneratedAttribute]
protected virtual void set_pnlRequestedOffline(PlaceHolder WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_Label7();
    [CompilerGeneratedAttribute]
protected virtual void set_Label7(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtLicenseData();
    [CompilerGeneratedAttribute]
protected virtual void set_txtLicenseData(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_btnSetLicenseData();
    [CompilerGeneratedAttribute]
protected virtual void set_btnSetLicenseData(LinkButton WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual PlaceHolder get_notActivatedPanel();
    [CompilerGeneratedAttribute]
protected virtual void set_notActivatedPanel(PlaceHolder WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual PlaceHolder get_notRequestedPanel();
    [CompilerGeneratedAttribute]
protected virtual void set_notRequestedPanel(PlaceHolder WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual CheckBox get_chkActivationRegistered();
    [CompilerGeneratedAttribute]
protected virtual void set_chkActivationRegistered(CheckBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual PlaceHolder get_pnlActivationNotRegistered();
    [CompilerGeneratedAttribute]
protected virtual void set_pnlActivationNotRegistered(PlaceHolder WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_Label10();
    [CompilerGeneratedAttribute]
protected virtual void set_Label10(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtActivateMail();
    [CompilerGeneratedAttribute]
protected virtual void set_txtActivateMail(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_reqtxtActivateMail();
    [CompilerGeneratedAttribute]
protected virtual void set_reqtxtActivateMail(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_Label11();
    [CompilerGeneratedAttribute]
protected virtual void set_Label11(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtActivatePassword();
    [CompilerGeneratedAttribute]
protected virtual void set_txtActivatePassword(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_reqtxtActivatePassword();
    [CompilerGeneratedAttribute]
protected virtual void set_reqtxtActivatePassword(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_Label12();
    [CompilerGeneratedAttribute]
protected virtual void set_Label12(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtActivateConfirmPassword();
    [CompilerGeneratedAttribute]
protected virtual void set_txtActivateConfirmPassword(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_reqtxtActivateConfirmPassword();
    [CompilerGeneratedAttribute]
protected virtual void set_reqtxtActivateConfirmPassword(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_Label13();
    [CompilerGeneratedAttribute]
protected virtual void set_Label13(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtActivateCompanyName();
    [CompilerGeneratedAttribute]
protected virtual void set_txtActivateCompanyName(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_reqtxtActivateCompanyName();
    [CompilerGeneratedAttribute]
protected virtual void set_reqtxtActivateCompanyName(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_Label14();
    [CompilerGeneratedAttribute]
protected virtual void set_Label14(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtActivatePhoneNumber();
    [CompilerGeneratedAttribute]
protected virtual void set_txtActivatePhoneNumber(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_reqtxtActivatePhoneNumber();
    [CompilerGeneratedAttribute]
protected virtual void set_reqtxtActivatePhoneNumber(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual PlaceHolder get_pnlActivationRegistered();
    [CompilerGeneratedAttribute]
protected virtual void set_pnlActivationRegistered(PlaceHolder WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_Label1();
    [CompilerGeneratedAttribute]
protected virtual void set_Label1(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtEmail();
    [CompilerGeneratedAttribute]
protected virtual void set_txtEmail(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_Label5();
    [CompilerGeneratedAttribute]
protected virtual void set_Label5(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtPassword();
    [CompilerGeneratedAttribute]
protected virtual void set_txtPassword(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual PlaceHolder get_requestedPanel();
    [CompilerGeneratedAttribute]
protected virtual void set_requestedPanel(PlaceHolder WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_lblLicenseId();
    [CompilerGeneratedAttribute]
protected virtual void set_lblLicenseId(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtLicenseId();
    [CompilerGeneratedAttribute]
protected virtual void set_txtLicenseId(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_lblActivationCode();
    [CompilerGeneratedAttribute]
protected virtual void set_lblActivationCode(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtLicenseCode();
    [CompilerGeneratedAttribute]
protected virtual void set_txtLicenseCode(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_reqLicenseCode();
    [CompilerGeneratedAttribute]
protected virtual void set_reqLicenseCode(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual CheckBox get_chkActivationCode();
    [CompilerGeneratedAttribute]
protected virtual void set_chkActivationCode(CheckBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_btnActivate();
    [CompilerGeneratedAttribute]
protected virtual void set_btnActivate(LinkButton WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual PlaceHolder get_activatedPanel();
    [CompilerGeneratedAttribute]
protected virtual void set_activatedPanel(PlaceHolder WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual PlaceHolder get_validPanel();
    [CompilerGeneratedAttribute]
protected virtual void set_validPanel(PlaceHolder WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_Label2();
    [CompilerGeneratedAttribute]
protected virtual void set_Label2(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtActivatedId();
    [CompilerGeneratedAttribute]
protected virtual void set_txtActivatedId(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_Label4();
    [CompilerGeneratedAttribute]
protected virtual void set_Label4(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtActivatedCode();
    [CompilerGeneratedAttribute]
protected virtual void set_txtActivatedCode(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_Label17();
    [CompilerGeneratedAttribute]
protected virtual void set_Label17(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtActivatedType();
    [CompilerGeneratedAttribute]
protected virtual void set_txtActivatedType(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_Label16();
    [CompilerGeneratedAttribute]
protected virtual void set_Label16(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtActivatedUsers();
    [CompilerGeneratedAttribute]
protected virtual void set_txtActivatedUsers(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_lblModules();
    [CompilerGeneratedAttribute]
protected virtual void set_lblModules(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtModules();
    [CompilerGeneratedAttribute]
protected virtual void set_txtModules(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual PlaceHolder get_pnlActivatedNonEvaluation();
    [CompilerGeneratedAttribute]
protected virtual void set_pnlActivatedNonEvaluation(PlaceHolder WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_Label15();
    [CompilerGeneratedAttribute]
protected virtual void set_Label15(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtActivatedRate();
    [CompilerGeneratedAttribute]
protected virtual void set_txtActivatedRate(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_Label18();
    [CompilerGeneratedAttribute]
protected virtual void set_Label18(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtActivatedEndDate();
    [CompilerGeneratedAttribute]
protected virtual void set_txtActivatedEndDate(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual PlaceHolder get_invalidPanel();
    [CompilerGeneratedAttribute]
protected virtual void set_invalidPanel(PlaceHolder WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_Label19();
    [CompilerGeneratedAttribute]
protected virtual void set_Label19(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_txtInvalidReason();
    [CompilerGeneratedAttribute]
protected virtual void set_txtInvalidReason(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_btnModify();
    [CompilerGeneratedAttribute]
protected virtual void set_btnModify(LinkButton WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_btnRefresh();
    [CompilerGeneratedAttribute]
protected virtual void set_btnRefresh(LinkButton WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_btnReturn();
    [CompilerGeneratedAttribute]
protected virtual void set_btnReturn(LinkButton WithEventsValue);
    public bool get_Renewing();
    public void set_Renewing(bool value);
    public bool get_UserHasRegistererd();
    public void set_UserHasRegistererd(bool value);
    public string get_LicenseId();
    public void set_LicenseId(string value);
    public bool get_HasConnection();
    public void set_HasConnection(bool value);
    protected void LicensePage_Load(object sender, EventArgs e);
    private void A();
    private void a();
    private void A(object , EventArgs );
    private void B();
    private void b();
    private void a(object , EventArgs );
    private void B(object , EventArgs );
    private void b(object , EventArgs );
    private void C(object , EventArgs );
    private void c(object , EventArgs );
    private void D(object , EventArgs );
    private void d(object , EventArgs );
    private void E(object , EventArgs );
    private void e(object , EventArgs );
    private void F(object , EventArgs );
    private void f(object , EventArgs );
}
public class FLEXYGO.Links : UserControl {
    protected void Page_Load(object sender, EventArgs e);
    protected string getLoginFolder();
    protected string getCustomized();
}
public class FLEXYGO.login1 : Page {
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("Links")]
private Links A;
    [AccessedThroughPropertyAttribute("form1")]
[CompilerGeneratedAttribute]
private HtmlForm A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("loginForm")]
private HtmlGenericControl A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("UserName")]
private TextBox A;
    [AccessedThroughPropertyAttribute("UserNameRequired")]
[CompilerGeneratedAttribute]
private RequiredFieldValidator A;
    [AccessedThroughPropertyAttribute("Password")]
[CompilerGeneratedAttribute]
private TextBox a;
    [AccessedThroughPropertyAttribute("PasswordRequired")]
[CompilerGeneratedAttribute]
private RequiredFieldValidator a;
    [AccessedThroughPropertyAttribute("MainButton")]
[CompilerGeneratedAttribute]
private LinkButton A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("RememberMe")]
private CheckBox A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("RememberMeLabel")]
private Label A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("RegisterHyperLink")]
private HyperLink A;
    [AccessedThroughPropertyAttribute("ForgotPasswordHyperLink")]
[CompilerGeneratedAttribute]
private HyperLink a;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("azureAADLogin")]
private LinkButton a;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("ClaveLogin")]
private LinkButton B;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("loadingRedirect")]
private HtmlGenericControl a;
    [AccessedThroughPropertyAttribute("forceRedirect")]
[CompilerGeneratedAttribute]
private LinkButton b;
    protected string redirectUrl;
    protected Links Links { get; protected set; }
    protected HtmlForm form1 { get; protected set; }
    protected HtmlGenericControl loginForm { get; protected set; }
    protected TextBox UserName { get; protected set; }
    protected RequiredFieldValidator UserNameRequired { get; protected set; }
    protected TextBox Password { get; protected set; }
    protected RequiredFieldValidator PasswordRequired { get; protected set; }
    protected LinkButton MainButton { get; protected set; }
    protected CheckBox RememberMe { get; protected set; }
    protected Label RememberMeLabel { get; protected set; }
    protected HyperLink RegisterHyperLink { get; protected set; }
    protected HyperLink ForgotPasswordHyperLink { get; protected set; }
    protected LinkButton azureAADLogin { get; protected set; }
    protected LinkButton ClaveLogin { get; protected set; }
    protected HtmlGenericControl loadingRedirect { get; protected set; }
    protected LinkButton forceRedirect { get; protected set; }
    [CompilerGeneratedAttribute]
protected virtual Links get_Links();
    [CompilerGeneratedAttribute]
protected virtual void set_Links(Links WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HtmlForm get_form1();
    [CompilerGeneratedAttribute]
protected virtual void set_form1(HtmlForm WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HtmlGenericControl get_loginForm();
    [CompilerGeneratedAttribute]
protected virtual void set_loginForm(HtmlGenericControl WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_UserName();
    [CompilerGeneratedAttribute]
protected virtual void set_UserName(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_UserNameRequired();
    [CompilerGeneratedAttribute]
protected virtual void set_UserNameRequired(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_Password();
    [CompilerGeneratedAttribute]
protected virtual void set_Password(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_PasswordRequired();
    [CompilerGeneratedAttribute]
protected virtual void set_PasswordRequired(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_MainButton();
    [CompilerGeneratedAttribute]
protected virtual void set_MainButton(LinkButton WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual CheckBox get_RememberMe();
    [CompilerGeneratedAttribute]
protected virtual void set_RememberMe(CheckBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_RememberMeLabel();
    [CompilerGeneratedAttribute]
protected virtual void set_RememberMeLabel(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HyperLink get_RegisterHyperLink();
    [CompilerGeneratedAttribute]
protected virtual void set_RegisterHyperLink(HyperLink WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HyperLink get_ForgotPasswordHyperLink();
    [CompilerGeneratedAttribute]
protected virtual void set_ForgotPasswordHyperLink(HyperLink WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_azureAADLogin();
    [CompilerGeneratedAttribute]
protected virtual void set_azureAADLogin(LinkButton WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_ClaveLogin();
    [CompilerGeneratedAttribute]
protected virtual void set_ClaveLogin(LinkButton WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HtmlGenericControl get_loadingRedirect();
    [CompilerGeneratedAttribute]
protected virtual void set_loadingRedirect(HtmlGenericControl WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_forceRedirect();
    [CompilerGeneratedAttribute]
protected virtual void set_forceRedirect(LinkButton WithEventsValue);
    protected void Page_Load(object sender, EventArgs e);
    private void A(string , LoginType );
    protected void azureAADLogin_Click(object sender, EventArgs e);
    protected void claveLogin_Click(object sender, EventArgs e);
    protected void forceLoginRedirect(object sender, EventArgs e);
    public void AzureRedirect();
    public void ClaveRedirect();
    private bool A();
    protected void LogIn(object sender, EventArgs e);
    public void CheckBlackList(string FunctionName, IDictionary`2<string, object> Params, string Username);
    public static void Log_User(SignInStatus result, string Username);
    public bool TranslateLogin(string CultureId);
    public string TranslateLoginMessages(string CultureId, string Message);
}
public class FLEXYGO.MailToken : Page {
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("TokenText")]
private Label A;
    protected Label TokenText { get; protected set; }
    [CompilerGeneratedAttribute]
protected virtual Label get_TokenText();
    [CompilerGeneratedAttribute]
protected virtual void set_TokenText(Label WithEventsValue);
    protected void Page_Load(object sender, EventArgs e);
}
public class FLEXYGO.ManagePassword : Page {
    [AccessedThroughPropertyAttribute("Links")]
[CompilerGeneratedAttribute]
private Links A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("form1")]
private HtmlForm A;
    [AccessedThroughPropertyAttribute("CurrentPassword")]
[CompilerGeneratedAttribute]
private TextBox A;
    [AccessedThroughPropertyAttribute("CurrentpwdRequired")]
[CompilerGeneratedAttribute]
private RequiredFieldValidator A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("NewPassword")]
private TextBox a;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("PasswordRequired")]
private RequiredFieldValidator a;
    [AccessedThroughPropertyAttribute("ConfirmPassword")]
[CompilerGeneratedAttribute]
private TextBox B;
    [AccessedThroughPropertyAttribute("ConfirmPasswordRequired")]
[CompilerGeneratedAttribute]
private RequiredFieldValidator B;
    [AccessedThroughPropertyAttribute("MainButton")]
[CompilerGeneratedAttribute]
private LinkButton A;
    [AccessedThroughPropertyAttribute("GotoLogin")]
[CompilerGeneratedAttribute]
private HyperLink A;
    protected Links Links { get; protected set; }
    protected HtmlForm form1 { get; protected set; }
    protected TextBox CurrentPassword { get; protected set; }
    protected RequiredFieldValidator CurrentpwdRequired { get; protected set; }
    protected TextBox NewPassword { get; protected set; }
    protected RequiredFieldValidator PasswordRequired { get; protected set; }
    protected TextBox ConfirmPassword { get; protected set; }
    protected RequiredFieldValidator ConfirmPasswordRequired { get; protected set; }
    protected LinkButton MainButton { get; protected set; }
    protected HyperLink GotoLogin { get; protected set; }
    [CompilerGeneratedAttribute]
protected virtual Links get_Links();
    [CompilerGeneratedAttribute]
protected virtual void set_Links(Links WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HtmlForm get_form1();
    [CompilerGeneratedAttribute]
protected virtual void set_form1(HtmlForm WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_CurrentPassword();
    [CompilerGeneratedAttribute]
protected virtual void set_CurrentPassword(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_CurrentpwdRequired();
    [CompilerGeneratedAttribute]
protected virtual void set_CurrentpwdRequired(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_NewPassword();
    [CompilerGeneratedAttribute]
protected virtual void set_NewPassword(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_PasswordRequired();
    [CompilerGeneratedAttribute]
protected virtual void set_PasswordRequired(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_ConfirmPassword();
    [CompilerGeneratedAttribute]
protected virtual void set_ConfirmPassword(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_ConfirmPasswordRequired();
    [CompilerGeneratedAttribute]
protected virtual void set_ConfirmPasswordRequired(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_MainButton();
    [CompilerGeneratedAttribute]
protected virtual void set_MainButton(LinkButton WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HyperLink get_GotoLogin();
    [CompilerGeneratedAttribute]
protected virtual void set_GotoLogin(HyperLink WithEventsValue);
    protected void Page_Load(object sender, EventArgs e);
    protected void ChangePassword_Click(object sender, EventArgs e);
    public static void RedirectToAfter(Page aPage, string key, string Path, string MilliSec);
    private void A(IdentityResult );
}
public class FLEXYGO.MyJsonValueProviderFactory : ValueProviderFactory {
    private static void A(Dictionary`2<string, object> , string , object );
    private static object A(ControllerContext );
    public virtual IValueProvider GetValueProvider(ControllerContext controllerContext);
    private static string A(string , int );
    private static string A(string , string );
}
public class FLEXYGO.NewtonsoftJsonResult : JsonResult {
    public virtual void ExecuteResult(ControllerContext context);
}
public class FLEXYGO.RedSys : Page {
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("form1")]
private HtmlForm A;
    [AccessedThroughPropertyAttribute("InfoText")]
[CompilerGeneratedAttribute]
private Label A;
    protected HtmlForm form1 { get; protected set; }
    protected Label InfoText { get; protected set; }
    [CompilerGeneratedAttribute]
protected virtual HtmlForm get_form1();
    [CompilerGeneratedAttribute]
protected virtual void set_form1(HtmlForm WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_InfoText();
    [CompilerGeneratedAttribute]
protected virtual void set_InfoText(Label WithEventsValue);
    protected void Page_Load(object sender, EventArgs e);
    public bool GetRedSysSettings(string ObjectName, DataTable& ObjectInfo);
    public bool GetRedSysLogInfo(string MerchantOrder, string StatusId, DataTable& RedSysLog);
    public bool updateRedSysLog(string transactionId, string responseCode, string StatusId, string ErrorMsg);
}
public class FLEXYGO.Register : Page {
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("Links")]
private Links A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("form1")]
private HtmlForm A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("Name")]
private TextBox A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("RequiredFieldValidator1")]
private RequiredFieldValidator A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("SurName")]
private TextBox a;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("RequiredFieldValidator2")]
private RequiredFieldValidator a;
    [AccessedThroughPropertyAttribute("Email")]
[CompilerGeneratedAttribute]
private TextBox B;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("emailRequired")]
private RequiredFieldValidator B;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("RegularExpressionValidatorEmail")]
private RegularExpressionValidator A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("UserName")]
private TextBox b;
    [AccessedThroughPropertyAttribute("userNameRequired")]
[CompilerGeneratedAttribute]
private RequiredFieldValidator b;
    [AccessedThroughPropertyAttribute("RegularExpressionValidatorUserName")]
[CompilerGeneratedAttribute]
private RegularExpressionValidator a;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("MainButton")]
private LinkButton A;
    [AccessedThroughPropertyAttribute("SuccesMessage")]
[CompilerGeneratedAttribute]
private Label A;
    [AccessedThroughPropertyAttribute("ErrorMessage")]
[CompilerGeneratedAttribute]
private Label a;
    protected Links Links { get; protected set; }
    protected HtmlForm form1 { get; protected set; }
    protected TextBox Name { get; protected set; }
    protected RequiredFieldValidator RequiredFieldValidator1 { get; protected set; }
    protected TextBox SurName { get; protected set; }
    protected RequiredFieldValidator RequiredFieldValidator2 { get; protected set; }
    protected TextBox Email { get; protected set; }
    protected RequiredFieldValidator emailRequired { get; protected set; }
    protected RegularExpressionValidator RegularExpressionValidatorEmail { get; protected set; }
    protected TextBox UserName { get; protected set; }
    protected RequiredFieldValidator userNameRequired { get; protected set; }
    protected RegularExpressionValidator RegularExpressionValidatorUserName { get; protected set; }
    protected LinkButton MainButton { get; protected set; }
    protected Label SuccesMessage { get; protected set; }
    protected Label ErrorMessage { get; protected set; }
    [CompilerGeneratedAttribute]
protected virtual Links get_Links();
    [CompilerGeneratedAttribute]
protected virtual void set_Links(Links WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HtmlForm get_form1();
    [CompilerGeneratedAttribute]
protected virtual void set_form1(HtmlForm WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_Name();
    [CompilerGeneratedAttribute]
protected virtual void set_Name(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_RequiredFieldValidator1();
    [CompilerGeneratedAttribute]
protected virtual void set_RequiredFieldValidator1(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_SurName();
    [CompilerGeneratedAttribute]
protected virtual void set_SurName(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_RequiredFieldValidator2();
    [CompilerGeneratedAttribute]
protected virtual void set_RequiredFieldValidator2(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_Email();
    [CompilerGeneratedAttribute]
protected virtual void set_Email(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_emailRequired();
    [CompilerGeneratedAttribute]
protected virtual void set_emailRequired(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RegularExpressionValidator get_RegularExpressionValidatorEmail();
    [CompilerGeneratedAttribute]
protected virtual void set_RegularExpressionValidatorEmail(RegularExpressionValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_UserName();
    [CompilerGeneratedAttribute]
protected virtual void set_UserName(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_userNameRequired();
    [CompilerGeneratedAttribute]
protected virtual void set_userNameRequired(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RegularExpressionValidator get_RegularExpressionValidatorUserName();
    [CompilerGeneratedAttribute]
protected virtual void set_RegularExpressionValidatorUserName(RegularExpressionValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_MainButton();
    [CompilerGeneratedAttribute]
protected virtual void set_MainButton(LinkButton WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_SuccesMessage();
    [CompilerGeneratedAttribute]
protected virtual void set_SuccesMessage(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_ErrorMessage();
    [CompilerGeneratedAttribute]
protected virtual void set_ErrorMessage(Label WithEventsValue);
    protected void Register(object sender, EventArgs e);
    private void A(object , EventArgs );
}
public class FLEXYGO.Reports : Page {
    [AccessedThroughPropertyAttribute("form1")]
[CompilerGeneratedAttribute]
private HtmlForm A;
    protected HtmlForm form1 { get; protected set; }
    [CompilerGeneratedAttribute]
protected virtual HtmlForm get_form1();
    [CompilerGeneratedAttribute]
protected virtual void set_form1(HtmlForm WithEventsValue);
    private void A(object , EventArgs );
    protected void Page_Load(object sender, EventArgs e);
    public void GenerateCrystal(IEntity reportEntity, string _ReportName, string _ReportSelectionFormula, eReportModes _ReportMode, List`1<KeyValuePairs> _Params, bool _ClearEmptyColumns, bool _ClearEmptyRows);
    public static bool isMobile();
    protected eReportModes getReportMode(string ReportName);
}
public class FLEXYGO.ReportsDesigner : Page {
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("reportDesigner")]
private ASPxReportDesigner A;
    private string A;
    protected ASPxReportDesigner reportDesigner { get; protected set; }
    [CompilerGeneratedAttribute]
protected virtual ASPxReportDesigner get_reportDesigner();
    [CompilerGeneratedAttribute]
protected virtual void set_reportDesigner(ASPxReportDesigner WithEventsValue);
    protected void Page_Load(object sender, EventArgs e);
    private static bool A(string );
}
public class FLEXYGO.ResetPassword : Page {
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("Links")]
private Links A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("form1")]
private HtmlForm A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("Email")]
private TextBox A;
    [AccessedThroughPropertyAttribute("EmailRequired")]
[CompilerGeneratedAttribute]
private RequiredFieldValidator A;
    [AccessedThroughPropertyAttribute("Password")]
[CompilerGeneratedAttribute]
private TextBox a;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("PasswordRequired")]
private RequiredFieldValidator a;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("ConfirmPassword")]
private TextBox B;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("ConfirmPasswordRequired")]
private RequiredFieldValidator B;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("ValidatorPassword")]
private CompareValidator A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("MainButton")]
private LinkButton A;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("GotoLogin")]
private HyperLink A;
    [CompilerGeneratedAttribute]
private string A;
    protected Links Links { get; protected set; }
    protected HtmlForm form1 { get; protected set; }
    protected TextBox Email { get; protected set; }
    protected RequiredFieldValidator EmailRequired { get; protected set; }
    protected TextBox Password { get; protected set; }
    protected RequiredFieldValidator PasswordRequired { get; protected set; }
    protected TextBox ConfirmPassword { get; protected set; }
    protected RequiredFieldValidator ConfirmPasswordRequired { get; protected set; }
    protected CompareValidator ValidatorPassword { get; protected set; }
    protected LinkButton MainButton { get; protected set; }
    protected HyperLink GotoLogin { get; protected set; }
    protected string StatusMessage { get; protected set; }
    [CompilerGeneratedAttribute]
protected virtual Links get_Links();
    [CompilerGeneratedAttribute]
protected virtual void set_Links(Links WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HtmlForm get_form1();
    [CompilerGeneratedAttribute]
protected virtual void set_form1(HtmlForm WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_Email();
    [CompilerGeneratedAttribute]
protected virtual void set_Email(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_EmailRequired();
    [CompilerGeneratedAttribute]
protected virtual void set_EmailRequired(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_Password();
    [CompilerGeneratedAttribute]
protected virtual void set_Password(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_PasswordRequired();
    [CompilerGeneratedAttribute]
protected virtual void set_PasswordRequired(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_ConfirmPassword();
    [CompilerGeneratedAttribute]
protected virtual void set_ConfirmPassword(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_ConfirmPasswordRequired();
    [CompilerGeneratedAttribute]
protected virtual void set_ConfirmPasswordRequired(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual CompareValidator get_ValidatorPassword();
    [CompilerGeneratedAttribute]
protected virtual void set_ValidatorPassword(CompareValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_MainButton();
    [CompilerGeneratedAttribute]
protected virtual void set_MainButton(LinkButton WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HyperLink get_GotoLogin();
    [CompilerGeneratedAttribute]
protected virtual void set_GotoLogin(HyperLink WithEventsValue);
    [CompilerGeneratedAttribute]
protected string get_StatusMessage();
    [CompilerGeneratedAttribute]
protected void set_StatusMessage(string AutoPropertyValue);
    protected void Page_Load(object sender, EventArgs e);
    protected void Reset_Click(object sender, EventArgs e);
    public bool TranslateResetPassword(string CultureId);
    public string TranslateResetPasswordMessages(string CultureId, string Message);
}
[StandardModuleAttribute]
public class FLEXYGO.RouteConfig : object {
    public static void RegisterRoutes(RouteCollection routes);
}
public class FLEXYGO.Startup : object {
    public void ConfigureServices(IServiceCollection services);
    public void Configuration(IAppBuilder app);
    private CorsOptions A(string );
}
public class FLEXYGO.TFA : Page {
    [AccessedThroughPropertyAttribute("Links")]
[CompilerGeneratedAttribute]
private Links A;
    [AccessedThroughPropertyAttribute("authenticationForm")]
[CompilerGeneratedAttribute]
private HtmlForm A;
    [AccessedThroughPropertyAttribute("twoFactorAuthenticationForm")]
[CompilerGeneratedAttribute]
private HtmlGenericControl A;
    [AccessedThroughPropertyAttribute("twoFactorAuthenticationLabel")]
[CompilerGeneratedAttribute]
private Label A;
    [AccessedThroughPropertyAttribute("RequiredFieldValidator1")]
[CompilerGeneratedAttribute]
private RequiredFieldValidator A;
    [AccessedThroughPropertyAttribute("n1")]
[CompilerGeneratedAttribute]
private TextBox A;
    [AccessedThroughPropertyAttribute("numValidator2")]
[CompilerGeneratedAttribute]
private RequiredFieldValidator a;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("n2")]
private TextBox a;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("numValidator3")]
private RequiredFieldValidator B;
    [AccessedThroughPropertyAttribute("n3")]
[CompilerGeneratedAttribute]
private TextBox B;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("numValidator4")]
private RequiredFieldValidator b;
    [AccessedThroughPropertyAttribute("n4")]
[CompilerGeneratedAttribute]
private TextBox b;
    [AccessedThroughPropertyAttribute("numValidator5")]
[CompilerGeneratedAttribute]
private RequiredFieldValidator C;
    [AccessedThroughPropertyAttribute("n5")]
[CompilerGeneratedAttribute]
private TextBox C;
    [AccessedThroughPropertyAttribute("numValidator6")]
[CompilerGeneratedAttribute]
private RequiredFieldValidator c;
    [AccessedThroughPropertyAttribute("n6")]
[CompilerGeneratedAttribute]
private TextBox c;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("VerifyButton")]
private LinkButton A;
    [AccessedThroughPropertyAttribute("TrustCheck")]
[CompilerGeneratedAttribute]
private CheckBox A;
    [AccessedThroughPropertyAttribute("TrustLabel")]
[CompilerGeneratedAttribute]
private Label a;
    [AccessedThroughPropertyAttribute("loadingRedirect")]
[CompilerGeneratedAttribute]
private HtmlGenericControl a;
    [CompilerGeneratedAttribute]
[AccessedThroughPropertyAttribute("forceRedirect")]
private LinkButton a;
    protected Links Links { get; protected set; }
    protected HtmlForm authenticationForm { get; protected set; }
    protected HtmlGenericControl twoFactorAuthenticationForm { get; protected set; }
    protected Label twoFactorAuthenticationLabel { get; protected set; }
    protected RequiredFieldValidator RequiredFieldValidator1 { get; protected set; }
    protected TextBox n1 { get; protected set; }
    protected RequiredFieldValidator numValidator2 { get; protected set; }
    protected TextBox n2 { get; protected set; }
    protected RequiredFieldValidator numValidator3 { get; protected set; }
    protected TextBox n3 { get; protected set; }
    protected RequiredFieldValidator numValidator4 { get; protected set; }
    protected TextBox n4 { get; protected set; }
    protected RequiredFieldValidator numValidator5 { get; protected set; }
    protected TextBox n5 { get; protected set; }
    protected RequiredFieldValidator numValidator6 { get; protected set; }
    protected TextBox n6 { get; protected set; }
    protected LinkButton VerifyButton { get; protected set; }
    protected CheckBox TrustCheck { get; protected set; }
    protected Label TrustLabel { get; protected set; }
    protected HtmlGenericControl loadingRedirect { get; protected set; }
    protected LinkButton forceRedirect { get; protected set; }
    [CompilerGeneratedAttribute]
protected virtual Links get_Links();
    [CompilerGeneratedAttribute]
protected virtual void set_Links(Links WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HtmlForm get_authenticationForm();
    [CompilerGeneratedAttribute]
protected virtual void set_authenticationForm(HtmlForm WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HtmlGenericControl get_twoFactorAuthenticationForm();
    [CompilerGeneratedAttribute]
protected virtual void set_twoFactorAuthenticationForm(HtmlGenericControl WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_twoFactorAuthenticationLabel();
    [CompilerGeneratedAttribute]
protected virtual void set_twoFactorAuthenticationLabel(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_RequiredFieldValidator1();
    [CompilerGeneratedAttribute]
protected virtual void set_RequiredFieldValidator1(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_n1();
    [CompilerGeneratedAttribute]
protected virtual void set_n1(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_numValidator2();
    [CompilerGeneratedAttribute]
protected virtual void set_numValidator2(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_n2();
    [CompilerGeneratedAttribute]
protected virtual void set_n2(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_numValidator3();
    [CompilerGeneratedAttribute]
protected virtual void set_numValidator3(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_n3();
    [CompilerGeneratedAttribute]
protected virtual void set_n3(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_numValidator4();
    [CompilerGeneratedAttribute]
protected virtual void set_numValidator4(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_n4();
    [CompilerGeneratedAttribute]
protected virtual void set_n4(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_numValidator5();
    [CompilerGeneratedAttribute]
protected virtual void set_numValidator5(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_n5();
    [CompilerGeneratedAttribute]
protected virtual void set_n5(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual RequiredFieldValidator get_numValidator6();
    [CompilerGeneratedAttribute]
protected virtual void set_numValidator6(RequiredFieldValidator WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual TextBox get_n6();
    [CompilerGeneratedAttribute]
protected virtual void set_n6(TextBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_VerifyButton();
    [CompilerGeneratedAttribute]
protected virtual void set_VerifyButton(LinkButton WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual CheckBox get_TrustCheck();
    [CompilerGeneratedAttribute]
protected virtual void set_TrustCheck(CheckBox WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual Label get_TrustLabel();
    [CompilerGeneratedAttribute]
protected virtual void set_TrustLabel(Label WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual HtmlGenericControl get_loadingRedirect();
    [CompilerGeneratedAttribute]
protected virtual void set_loadingRedirect(HtmlGenericControl WithEventsValue);
    [CompilerGeneratedAttribute]
protected virtual LinkButton get_forceRedirect();
    [CompilerGeneratedAttribute]
protected virtual void set_forceRedirect(LinkButton WithEventsValue);
    protected void Page_Load(object sender, EventArgs e);
    protected void VerifyCode(object sender, EventArgs e);
    protected void forceLoginRedirect(object sender, EventArgs e);
    public string TranslateAuthenticationMessages(string CultureId, string Message);
}
public class FLEXYGO.Web.UI.Page : Page {
    private StringBuilder A;
    private StringBuilder a;
    private Skin A;
    protected string missingfilesError;
    private void A(object , EventArgs );
    private void A();
    public void loadBundles();
    public string getJsScripts();
    public string getCssScripts();
    public string getProjectName();
    public string getUserMode();
    public string getSkinScripts();
    public string getSkinCss();
    public string getInterfaceScripts();
    public string getInterfaceCss();
    public string getLogo();
    private string A(String[] , Color );
    private void A(Graphics , string , Font , Color , Color , int , PointF );
    private Font A(Graphics , string , SizeF , Font );
    public string getFavIcon();
    public string getMainNavPanel();
    public string getMainMenu();
    public string getInitScripts();
    public string getMissingFiles();
    public string getDatabaseScriptJobErrors();
    public static void DisplayErrorMessage(Page aPage, string key, string Message);
    public static void DisplayWarningMessage(Page aPage, string key, string Message, string Title);
    public static void DisplayConfirmMessage(Page aPage, string key, string Message);
    public static void DisplayAlertMessage(Page aPage, string key, string title, string Message, string successCallBack);
    public static void DisplayAlertMessage(Page aPage, string key, string title, string Message, string successCallBack, string cancelCallBack);
}
public class FLEXYGO.WebApiConfig : object {
    public static void Register(HttpConfiguration config);
}
public class FLEXYGO.WebApiControllers.WA_ApiDefinitionController : ApiController {
    [RouteAttribute("webapi")]
[HttpGetAttribute]
public HttpResponseMessage GetApiGenericDefinition();
}
public class FLEXYGO.WebApiControllers.WA_EntityController : ApiController {
    [a]
[A]
[OnAuthorization]
[HttpGetAttribute]
[RouteAttribute("webapi/list/{ObjectName}")]
public IHttpActionResult GetCollection(string ObjectName, string filter, int page, int pagesize, string orderBy, bool withDescrips, bool IsDefined);
    [HttpGetAttribute]
[A]
[RouteAttribute("webapi/schema/{ObjectName}")]
[OnAuthorization]
[a]
public IHttpActionResult GetEntitySchema(string ObjectName);
    [HttpGetAttribute]
[A]
[RouteAttribute("webapi/schema/{ObjectName}/{ViewName}")]
[OnAuthorization]
[a]
public IHttpActionResult GetViewSchema(string ObjectName, string ViewName);
    [OnAuthorization]
[A]
[HttpGetAttribute]
[a]
[RouteAttribute("webapi/list/{ObjectName}/{ViewName}")]
public IHttpActionResult GetView(string ObjectName, string ViewName, string filter, int page, int pagesize, string orderBy);
    [A]
[RouteAttribute("webapi/object/{ObjectName}/{Id?}")]
[OnAuthorization]
[a]
[HttpGetAttribute]
public IHttpActionResult GetEntity(string ObjectName, string Id, string filter);
    [HttpPostAttribute]
[A]
[RouteAttribute("webapi/object/{ObjectName}")]
[OnAuthorization]
[a]
public IHttpActionResult InsertEntity(string ObjectName, JObject data);
    [OnAuthorization]
[a]
[A]
[HttpPutAttribute]
[RouteAttribute("webapi/object/{ObjectName}/{Id?}")]
public IHttpActionResult UpdateEntity(string ObjectName, JObject data, string Id, string filter);
    [HttpDeleteAttribute]
[A]
[RouteAttribute("webapi/object/{ObjectName}/{Id?}")]
[OnAuthorization]
[a]
public IHttpActionResult DeleteEntity(string ObjectName, string Id, string filter);
    [HttpPostAttribute]
[A]
[RouteAttribute("webapi/exec/{ProcessName}/{ObjectName?}/{Id?}")]
[OnAuthorization]
[a]
public IHttpActionResult ExecProcess(string ProcessName, JObject data, string ObjectName, string Id, string filter);
    [a]
[OnAuthorization]
[HttpGetAttribute]
[A]
[RouteAttribute("webapi/context")]
public IHttpActionResult GetCurrentContext();
}
public class FLEXYGO.WebHooksControllers.WHController : ApiController {
    [HttpGetAttribute]
[HttpPostAttribute]
[HttpPutAttribute]
[A]
[RouteAttribute("webhook/{WebHookID}")]
[OnAuthorization]
public IHttpActionResult SecureWebHook(string WebHookID);
    [RouteAttribute("webhook/guest/{WebHookID}")]
[A]
[HttpPostAttribute]
[HttpGetAttribute]
[HttpPutAttribute]
public IHttpActionResult GuestWebHook(string WebHookID);
}
