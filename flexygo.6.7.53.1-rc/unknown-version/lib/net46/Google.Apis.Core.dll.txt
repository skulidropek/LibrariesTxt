public enum Google.Apis.Discovery.DiscoveryVersion : Enum {
    public int value__;
    public static DiscoveryVersion Version_1_0;
}
public enum Google.Apis.Discovery.Features : Enum {
    public int value__;
    [StringValueAttribute("dataWrapper")]
public static Features LegacyDataResponse;
}
public interface Google.Apis.Discovery.IParameter {
    public string Name { get; }
    public string Pattern { get; }
    public bool IsRequired { get; }
    public string DefaultValue { get; }
    public string ParameterType { get; }
    public abstract virtual string get_Name();
    public abstract virtual string get_Pattern();
    public abstract virtual bool get_IsRequired();
    public abstract virtual string get_DefaultValue();
    public abstract virtual string get_ParameterType();
}
public class Google.Apis.Discovery.Parameter : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParameterType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultValue>k__BackingField;
    public string Name { get; public set; }
    public string Pattern { get; public set; }
    public bool IsRequired { get; public set; }
    public string ParameterType { get; public set; }
    public string DefaultValue { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Pattern();
    [CompilerGeneratedAttribute]
public void set_Pattern(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsRequired();
    [CompilerGeneratedAttribute]
public void set_IsRequired(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ParameterType();
    [CompilerGeneratedAttribute]
public void set_ParameterType(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DefaultValue();
    [CompilerGeneratedAttribute]
public void set_DefaultValue(string value);
}
public class Google.Apis.Http.BackOffHandler : object {
    private static ILogger Logger;
    [CompilerGeneratedAttribute]
private IBackOff <BackOff>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <MaxTimeSpan>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<HttpResponseMessage, bool> <HandleUnsuccessfulResponseFunc>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<Exception, bool> <HandleExceptionFunc>k__BackingField;
    public IBackOff BackOff { get; private set; }
    public TimeSpan MaxTimeSpan { get; private set; }
    public Func`2<HttpResponseMessage, bool> HandleUnsuccessfulResponseFunc { get; private set; }
    public Func`2<Exception, bool> HandleExceptionFunc { get; private set; }
    public BackOffHandler(IBackOff backOff);
    public BackOffHandler(Initializer initializer);
    private static BackOffHandler();
    [CompilerGeneratedAttribute]
public IBackOff get_BackOff();
    [CompilerGeneratedAttribute]
private void set_BackOff(IBackOff value);
    [CompilerGeneratedAttribute]
public TimeSpan get_MaxTimeSpan();
    [CompilerGeneratedAttribute]
private void set_MaxTimeSpan(TimeSpan value);
    [CompilerGeneratedAttribute]
public Func`2<HttpResponseMessage, bool> get_HandleUnsuccessfulResponseFunc();
    [CompilerGeneratedAttribute]
private void set_HandleUnsuccessfulResponseFunc(Func`2<HttpResponseMessage, bool> value);
    [CompilerGeneratedAttribute]
public Func`2<Exception, bool> get_HandleExceptionFunc();
    [CompilerGeneratedAttribute]
private void set_HandleExceptionFunc(Func`2<Exception, bool> value);
    [AsyncStateMachineAttribute("Google.Apis.Http.BackOffHandler/<HandleResponseAsync>d__20")]
public virtual Task`1<bool> HandleResponseAsync(HandleUnsuccessfulResponseArgs args);
    [AsyncStateMachineAttribute("Google.Apis.Http.BackOffHandler/<HandleExceptionAsync>d__21")]
public virtual Task`1<bool> HandleExceptionAsync(HandleExceptionArgs args);
    [AsyncStateMachineAttribute("Google.Apis.Http.BackOffHandler/<HandleAsync>d__22")]
private Task`1<bool> HandleAsync(bool supportsRetry, int currentFailedTry, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Google.Apis.Http.BackOffHandler/<Wait>d__23")]
protected virtual Task Wait(TimeSpan ts, CancellationToken cancellationToken);
}
public class Google.Apis.Http.ConfigurableHttpClient : HttpClient {
    [CompilerGeneratedAttribute]
private ConfigurableMessageHandler <MessageHandler>k__BackingField;
    public ConfigurableMessageHandler MessageHandler { get; private set; }
    public ConfigurableHttpClient(ConfigurableMessageHandler handler);
    public ConfigurableHttpClient(ConfigurableMessageHandler handler, bool disposeHandler);
    [CompilerGeneratedAttribute]
public ConfigurableMessageHandler get_MessageHandler();
    [CompilerGeneratedAttribute]
private void set_MessageHandler(ConfigurableMessageHandler value);
}
public class Google.Apis.Http.ConfigurableMessageHandler : DelegatingHandler {
    private static string QuotaProjectHeaderName;
    private static ILogger Logger;
    [VisibleForTestOnly]
public static int MaxAllowedNumTries;
    public static string UnsuccessfulResponseHandlerKey;
    public static string ExceptionHandlerKey;
    public static string ExecuteInterceptorKey;
    public static string ResponseStreamInterceptorProviderKey;
    public static string CredentialKey;
    private static string ApiVersion;
    private static string UserAgentSuffix;
    private object unsuccessfulResponseHandlersLock;
    private object exceptionHandlersLock;
    private object executeInterceptorsLock;
    private IList`1<IHttpUnsuccessfulResponseHandler> unsuccessfulResponseHandlers;
    private IList`1<IHttpExceptionHandler> exceptionHandlers;
    private IList`1<IHttpExecuteInterceptor> executeInterceptors;
    private int _loggingRequestId;
    private ILogger _instanceLogger;
    private int numTries;
    private int numRedirects;
    [CompilerGeneratedAttribute]
private bool <FollowRedirect>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsLoggingEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private LogEventType <LogEvents>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApplicationName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GoogleApiClientHeader>k__BackingField;
    [CompilerGeneratedAttribute]
private IHttpExecuteInterceptor <Credential>k__BackingField;
    [ObsoleteAttribute("Use AddUnsuccessfulResponseHandler or RemoveUnsuccessfulResponseHandler instead.")]
public IList`1<IHttpUnsuccessfulResponseHandler> UnsuccessfulResponseHandlers { get; }
    [ObsoleteAttribute("Use AddExceptionHandler or RemoveExceptionHandler instead.")]
public IList`1<IHttpExceptionHandler> ExceptionHandlers { get; }
    [ObsoleteAttribute("Use AddExecuteInterceptor or RemoveExecuteInterceptor instead.")]
public IList`1<IHttpExecuteInterceptor> ExecuteInterceptors { get; }
    internal ILogger InstanceLogger { get; internal set; }
    public int NumTries { get; public set; }
    public int NumRedirects { get; public set; }
    public bool FollowRedirect { get; public set; }
    public bool IsLoggingEnabled { get; public set; }
    public LogEventType LogEvents { get; public set; }
    public string ApplicationName { get; public set; }
    public string GoogleApiClientHeader { get; public set; }
    public IHttpExecuteInterceptor Credential { get; public set; }
    public ConfigurableMessageHandler(HttpMessageHandler httpMessageHandler);
    private static ConfigurableMessageHandler();
    public IList`1<IHttpUnsuccessfulResponseHandler> get_UnsuccessfulResponseHandlers();
    public void AddUnsuccessfulResponseHandler(IHttpUnsuccessfulResponseHandler handler);
    public void RemoveUnsuccessfulResponseHandler(IHttpUnsuccessfulResponseHandler handler);
    public IList`1<IHttpExceptionHandler> get_ExceptionHandlers();
    public void AddExceptionHandler(IHttpExceptionHandler handler);
    public void RemoveExceptionHandler(IHttpExceptionHandler handler);
    public IList`1<IHttpExecuteInterceptor> get_ExecuteInterceptors();
    public void AddExecuteInterceptor(IHttpExecuteInterceptor interceptor);
    public void RemoveExecuteInterceptor(IHttpExecuteInterceptor interceptor);
    internal ILogger get_InstanceLogger();
    internal void set_InstanceLogger(ILogger value);
    public int get_NumTries();
    public void set_NumTries(int value);
    public int get_NumRedirects();
    public void set_NumRedirects(int value);
    [CompilerGeneratedAttribute]
public bool get_FollowRedirect();
    [CompilerGeneratedAttribute]
public void set_FollowRedirect(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsLoggingEnabled();
    [CompilerGeneratedAttribute]
public void set_IsLoggingEnabled(bool value);
    [CompilerGeneratedAttribute]
public LogEventType get_LogEvents();
    [CompilerGeneratedAttribute]
public void set_LogEvents(LogEventType value);
    [CompilerGeneratedAttribute]
public string get_ApplicationName();
    [CompilerGeneratedAttribute]
public void set_ApplicationName(string value);
    [CompilerGeneratedAttribute]
public string get_GoogleApiClientHeader();
    [CompilerGeneratedAttribute]
public void set_GoogleApiClientHeader(string value);
    [CompilerGeneratedAttribute]
public IHttpExecuteInterceptor get_Credential();
    [CompilerGeneratedAttribute]
public void set_Credential(IHttpExecuteInterceptor value);
    private void LogHeaders(string initialText, HttpHeaders headers1, HttpHeaders headers2);
    [AsyncStateMachineAttribute("Google.Apis.Http.ConfigurableMessageHandler/<LogBody>d__68")]
private Task LogBody(string fmtText, HttpContent content);
    [AsyncStateMachineAttribute("Google.Apis.Http.ConfigurableMessageHandler/<SendAsync>d__69")]
protected virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    private void CheckValidAfterInterceptors(HttpRequestMessage request);
    [AsyncStateMachineAttribute("Google.Apis.Http.ConfigurableMessageHandler/<CredentialInterceptAsync>d__71")]
private Task CredentialInterceptAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Google.Apis.Http.ConfigurableMessageHandler/<CredentialHandleResponseAsync>d__72")]
private Task`1<bool> CredentialHandleResponseAsync(HandleUnsuccessfulResponseArgs args);
    private IHttpExecuteInterceptor GetEffectiveCredential(HttpRequestMessage request);
    private bool HandleRedirect(HttpResponseMessage message);
    [CompilerGeneratedAttribute]
internal static bool <SendAsync>g__DisposeAndReturnFalse|69_0(IDisposable disposable);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<HttpResponseMessage> <>n__0(HttpRequestMessage request, CancellationToken cancellationToken);
}
public class Google.Apis.Http.CreateHttpClientArgs : object {
    [CompilerGeneratedAttribute]
private bool <GZipEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApplicationName>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IConfigurableHttpClientInitializer> <Initializers>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GoogleApiClientHeader>k__BackingField;
    public bool GZipEnabled { get; public set; }
    public string ApplicationName { get; public set; }
    public IList`1<IConfigurableHttpClientInitializer> Initializers { get; private set; }
    public string GoogleApiClientHeader { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_GZipEnabled();
    [CompilerGeneratedAttribute]
public void set_GZipEnabled(bool value);
    [CompilerGeneratedAttribute]
public string get_ApplicationName();
    [CompilerGeneratedAttribute]
public void set_ApplicationName(string value);
    [CompilerGeneratedAttribute]
public IList`1<IConfigurableHttpClientInitializer> get_Initializers();
    [CompilerGeneratedAttribute]
private void set_Initializers(IList`1<IConfigurableHttpClientInitializer> value);
    [CompilerGeneratedAttribute]
public string get_GoogleApiClientHeader();
    [CompilerGeneratedAttribute]
public void set_GoogleApiClientHeader(string value);
}
public class Google.Apis.Http.ExponentialBackOffInitializer : object {
    [CompilerGeneratedAttribute]
private ExponentialBackOffPolicy <Policy>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<BackOffHandler> <CreateBackOff>k__BackingField;
    private ExponentialBackOffPolicy Policy { get; private set; }
    private Func`1<BackOffHandler> CreateBackOff { get; private set; }
    public ExponentialBackOffInitializer(ExponentialBackOffPolicy policy, Func`1<BackOffHandler> createBackOff);
    [CompilerGeneratedAttribute]
private ExponentialBackOffPolicy get_Policy();
    [CompilerGeneratedAttribute]
private void set_Policy(ExponentialBackOffPolicy value);
    [CompilerGeneratedAttribute]
private Func`1<BackOffHandler> get_CreateBackOff();
    [CompilerGeneratedAttribute]
private void set_CreateBackOff(Func`1<BackOffHandler> value);
    public sealed virtual void Initialize(ConfigurableHttpClient httpClient);
}
[FlagsAttribute]
public enum Google.Apis.Http.ExponentialBackOffPolicy : Enum {
    public int value__;
    public static ExponentialBackOffPolicy None;
    public static ExponentialBackOffPolicy Exception;
    public static ExponentialBackOffPolicy UnsuccessfulResponse503;
}
internal class Google.Apis.Http.GzipDeflateHandler : DelegatingHandler {
    private static string GzipEncoding;
    private static string DeflateEncoding;
    private static StringWithQualityHeaderValue s_gzipAcceptHeader;
    private static StringWithQualityHeaderValue s_deflateAcceptHeader;
    private static Func`2<Stream, Stream> s_gzipReplacement;
    private static Func`2<Stream, Stream> s_deflateReplacement;
    internal GzipDeflateHandler(HttpMessageHandler innerHandler);
    private static GzipDeflateHandler();
    [AsyncStateMachineAttribute("Google.Apis.Http.GzipDeflateHandler/<SendAsync>d__7")]
protected virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<HttpResponseMessage> <>n__0(HttpRequestMessage request, CancellationToken cancellationToken);
}
public class Google.Apis.Http.HandleExceptionArgs : object {
    [CompilerGeneratedAttribute]
private HttpRequestMessage <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalTries>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CurrentFailedTry>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationToken>k__BackingField;
    public HttpRequestMessage Request { get; public set; }
    public Exception Exception { get; public set; }
    public int TotalTries { get; public set; }
    public int CurrentFailedTry { get; public set; }
    public bool SupportsRetry { get; }
    public CancellationToken CancellationToken { get; public set; }
    [CompilerGeneratedAttribute]
public HttpRequestMessage get_Request();
    [CompilerGeneratedAttribute]
public void set_Request(HttpRequestMessage value);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
public void set_Exception(Exception value);
    [CompilerGeneratedAttribute]
public int get_TotalTries();
    [CompilerGeneratedAttribute]
public void set_TotalTries(int value);
    [CompilerGeneratedAttribute]
public int get_CurrentFailedTry();
    [CompilerGeneratedAttribute]
public void set_CurrentFailedTry(int value);
    public bool get_SupportsRetry();
    [CompilerGeneratedAttribute]
public CancellationToken get_CancellationToken();
    [CompilerGeneratedAttribute]
public void set_CancellationToken(CancellationToken value);
}
public class Google.Apis.Http.HandleUnsuccessfulResponseArgs : object {
    [CompilerGeneratedAttribute]
private HttpRequestMessage <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpResponseMessage <Response>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalTries>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CurrentFailedTry>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationToken>k__BackingField;
    public HttpRequestMessage Request { get; public set; }
    public HttpResponseMessage Response { get; public set; }
    public int TotalTries { get; public set; }
    public int CurrentFailedTry { get; public set; }
    public bool SupportsRetry { get; }
    public CancellationToken CancellationToken { get; public set; }
    [CompilerGeneratedAttribute]
public HttpRequestMessage get_Request();
    [CompilerGeneratedAttribute]
public void set_Request(HttpRequestMessage value);
    [CompilerGeneratedAttribute]
public HttpResponseMessage get_Response();
    [CompilerGeneratedAttribute]
public void set_Response(HttpResponseMessage value);
    [CompilerGeneratedAttribute]
public int get_TotalTries();
    [CompilerGeneratedAttribute]
public void set_TotalTries(int value);
    [CompilerGeneratedAttribute]
public int get_CurrentFailedTry();
    [CompilerGeneratedAttribute]
public void set_CurrentFailedTry(int value);
    public bool get_SupportsRetry();
    [CompilerGeneratedAttribute]
public CancellationToken get_CancellationToken();
    [CompilerGeneratedAttribute]
public void set_CancellationToken(CancellationToken value);
}
public class Google.Apis.Http.HttpClientFactory : object {
    [CompilerGeneratedAttribute]
private IWebProxy <Proxy>k__BackingField;
    public IWebProxy Proxy { get; }
    protected HttpClientFactory(IWebProxy proxy);
    public static HttpClientFactory ForProxy(IWebProxy proxy);
    [CompilerGeneratedAttribute]
public IWebProxy get_Proxy();
    public sealed virtual ConfigurableHttpClient CreateHttpClient(CreateHttpClientArgs args);
    protected virtual HttpMessageHandler CreateHandler(CreateHttpClientArgs args);
    private HttpClientHandler CreateAndConfigureClientHandler();
    protected virtual HttpClientHandler CreateClientHandler();
}
public class Google.Apis.Http.HttpClientFromMessageHandlerFactory : object {
    private Func`2<HttpMessageHandlerOptions, ConfiguredHttpMessageHandler> _httpMessageHandlerFactory;
    public HttpClientFromMessageHandlerFactory(Func`2<HttpMessageHandlerOptions, ConfiguredHttpMessageHandler> httpMessageHandlerFactory);
    public sealed virtual ConfigurableHttpClient CreateHttpClient(CreateHttpClientArgs args);
    private HttpMessageHandler CreateHandler(CreateHttpClientArgs args);
}
public static class Google.Apis.Http.HttpConsts : object {
    public static string Get;
    public static string Delete;
    public static string Put;
    public static string Post;
    public static string Patch;
}
[ExtensionAttribute]
public static class Google.Apis.Http.HttpExtenstions : object {
    [ExtensionAttribute]
internal static bool IsRedirectStatusCode(HttpResponseMessage message);
    [ExtensionAttribute]
public static HttpContent SetEmptyContent(HttpRequestMessage request);
}
public interface Google.Apis.Http.IConfigurableHttpClientInitializer {
    public abstract virtual void Initialize(ConfigurableHttpClient httpClient);
}
public interface Google.Apis.Http.IHttpClientFactory {
    public abstract virtual ConfigurableHttpClient CreateHttpClient(CreateHttpClientArgs args);
}
public interface Google.Apis.Http.IHttpExceptionHandler {
    public abstract virtual Task`1<bool> HandleExceptionAsync(HandleExceptionArgs args);
}
public interface Google.Apis.Http.IHttpExecuteInterceptor {
    public abstract virtual Task InterceptAsync(HttpRequestMessage request, CancellationToken cancellationToken);
}
public interface Google.Apis.Http.IHttpUnsuccessfulResponseHandler {
    public abstract virtual Task`1<bool> HandleResponseAsync(HandleUnsuccessfulResponseArgs args);
}
[VisibleForTestOnly]
public class Google.Apis.Http.MaxUrlLengthInterceptor : object {
    private UInt32 maxUrlLength;
    public MaxUrlLengthInterceptor(UInt32 maxUrlLength);
    public sealed virtual Task InterceptAsync(HttpRequestMessage request, CancellationToken cancellationToken);
}
internal class Google.Apis.Http.StreamInterceptionHandler : DelegatingHandler {
    internal StreamInterceptionHandler(HttpMessageHandler handler);
    protected virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Google.Apis.Http.StreamInterceptionHandler/<ReplaceAsync>d__2")]
private Task`1<HttpResponseMessage> ReplaceAsync(Task`1<HttpResponseMessage> responseTask, Func`2<HttpResponseMessage, StreamInterceptor> interceptorProvider);
    internal static Func`2<HttpResponseMessage, StreamInterceptor> GetInterceptorProvider(HttpRequestMessage request);
}
public class Google.Apis.Http.StreamInterceptor : MulticastDelegate {
    public StreamInterceptor(object object, IntPtr method);
    public virtual void Invoke(Byte[] buffer, int offset, int count);
    public virtual IAsyncResult BeginInvoke(Byte[] buffer, int offset, int count, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class Google.Apis.Http.StreamReplacingHttpContent : HttpContent {
    private HttpContent _originalContent;
    private Func`2<Stream, Stream> _replacement;
    private bool _streamCreated;
    internal StreamReplacingHttpContent(HttpContent originalContent, Func`2<Stream, Stream> replacement);
    protected virtual bool TryComputeLength(Int64& length);
    [AsyncStateMachineAttribute("Google.Apis.Http.StreamReplacingHttpContent/<CreateContentReadStreamAsync>d__5")]
protected virtual Task`1<Stream> CreateContentReadStreamAsync();
    [AsyncStateMachineAttribute("Google.Apis.Http.StreamReplacingHttpContent/<SerializeToStreamAsync>d__6")]
protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context);
}
internal class Google.Apis.Http.TwoWayDelegatingHandler : DelegatingHandler {
    private AccessibleDelegatingHandler _alternativeHandler;
    private Func`2<HttpRequestMessage, bool> _useAlternative;
    private bool disposed;
    internal TwoWayDelegatingHandler(HttpMessageHandler normalHandler, HttpMessageHandler alternativeHandler, Func`2<HttpRequestMessage, bool> useAlternative);
    protected virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    protected virtual void Dispose(bool disposing);
}
public interface Google.Apis.ISerializer {
    public string Format { get; }
    public abstract virtual string get_Format();
    public abstract virtual void Serialize(object obj, Stream target);
    public abstract virtual string Serialize(object obj);
    public abstract virtual T Deserialize(string input);
    public abstract virtual object Deserialize(string input, Type type);
    public abstract virtual T Deserialize(Stream input);
}
public class Google.Apis.Json.ExplicitNullConverter : JsonConverter {
    public bool CanRead { get; }
    public virtual bool get_CanRead();
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
public interface Google.Apis.Json.IJsonSerializer {
}
public static class Google.Apis.Json.JsonExplicitNull : object {
    public static IList`1<T> ForIList();
}
[AttributeUsageAttribute("4")]
public class Google.Apis.Json.JsonExplicitNullAttribute : Attribute {
}
public class Google.Apis.Json.NewtonsoftJsonContractResolver : DefaultContractResolver {
    private static JsonConverter DateTimeConverter;
    private static JsonConverter ExplicitNullConverter;
    private static NewtonsoftJsonContractResolver();
    protected virtual JsonContract CreateContract(Type objectType);
}
public class Google.Apis.Json.NewtonsoftJsonSerializer : object {
    private JsonSerializerSettings settings;
    private JsonSerializer serializer;
    [CompilerGeneratedAttribute]
private static NewtonsoftJsonSerializer <Instance>k__BackingField;
    public static NewtonsoftJsonSerializer Instance { get; }
    public string Format { get; }
    public NewtonsoftJsonSerializer(JsonSerializerSettings settings);
    private static NewtonsoftJsonSerializer();
    [CompilerGeneratedAttribute]
public static NewtonsoftJsonSerializer get_Instance();
    public static JsonSerializerSettings CreateDefaultSettings();
    public sealed virtual string get_Format();
    public sealed virtual void Serialize(object obj, Stream target);
    public sealed virtual string Serialize(object obj);
    public sealed virtual T Deserialize(string input);
    public sealed virtual object Deserialize(string input, Type type);
    public sealed virtual T Deserialize(Stream input);
    [AsyncStateMachineAttribute("Google.Apis.Json.NewtonsoftJsonSerializer/<DeserializeAsync>d__15`1")]
public Task`1<T> DeserializeAsync(Stream input, CancellationToken cancellationToken);
}
public class Google.Apis.Json.RFC3339DateTimeConverter : JsonConverter {
    public bool CanRead { get; }
    public virtual bool get_CanRead();
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
public abstract class Google.Apis.Logging.BaseLogger : object {
    private static string DateTimeFormatString;
    private string _loggerForTypeString;
    [CompilerGeneratedAttribute]
private IClock <Clock>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <LoggerForType>k__BackingField;
    [CompilerGeneratedAttribute]
private LogLevel <MinimumLogLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDebugEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsInfoEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsWarningEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsErrorEnabled>k__BackingField;
    public IClock Clock { get; }
    public Type LoggerForType { get; }
    public LogLevel MinimumLogLevel { get; }
    public bool IsDebugEnabled { get; }
    public bool IsInfoEnabled { get; }
    public bool IsWarningEnabled { get; }
    public bool IsErrorEnabled { get; }
    protected BaseLogger(LogLevel minimumLogLevel, IClock clock, Type forType);
    [CompilerGeneratedAttribute]
public IClock get_Clock();
    [CompilerGeneratedAttribute]
public Type get_LoggerForType();
    [CompilerGeneratedAttribute]
public LogLevel get_MinimumLogLevel();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsDebugEnabled();
    [CompilerGeneratedAttribute]
public bool get_IsInfoEnabled();
    [CompilerGeneratedAttribute]
public bool get_IsWarningEnabled();
    [CompilerGeneratedAttribute]
public bool get_IsErrorEnabled();
    protected abstract virtual ILogger BuildNewLogger(Type type);
    public sealed virtual ILogger ForType();
    public sealed virtual ILogger ForType(Type type);
    protected abstract virtual void Log(LogLevel logLevel, string formattedMessage);
    private string FormatLogEntry(string severityString, string message, Object[] formatArgs);
    public sealed virtual void Debug(string message, Object[] formatArgs);
    public sealed virtual void Info(string message, Object[] formatArgs);
    public sealed virtual void Warning(string message, Object[] formatArgs);
    public sealed virtual void Error(Exception exception, string message, Object[] formatArgs);
    public sealed virtual void Error(string message, Object[] formatArgs);
}
public class Google.Apis.Logging.ConsoleLogger : BaseLogger {
    [CompilerGeneratedAttribute]
private bool <LogToStdOut>k__BackingField;
    public bool LogToStdOut { get; }
    public ConsoleLogger(LogLevel minimumLogLevel, bool logToStdOut, IClock clock);
    private ConsoleLogger(LogLevel minimumLogLevel, bool logToStdOut, IClock clock, Type forType);
    [CompilerGeneratedAttribute]
public bool get_LogToStdOut();
    protected virtual ILogger BuildNewLogger(Type type);
    protected virtual void Log(LogLevel logLevel, string formattedMessage);
}
public interface Google.Apis.Logging.ILogger {
    public bool IsDebugEnabled { get; }
    public abstract virtual bool get_IsDebugEnabled();
    public abstract virtual ILogger ForType(Type type);
    public abstract virtual ILogger ForType();
    public abstract virtual void Debug(string message, Object[] formatArgs);
    public abstract virtual void Info(string message, Object[] formatArgs);
    public abstract virtual void Warning(string message, Object[] formatArgs);
    public abstract virtual void Error(Exception exception, string message, Object[] formatArgs);
    public abstract virtual void Error(string message, Object[] formatArgs);
}
public enum Google.Apis.Logging.LogLevel : Enum {
    public int value__;
    public static LogLevel All;
    public static LogLevel Debug;
    public static LogLevel Info;
    public static LogLevel Warning;
    public static LogLevel Error;
    public static LogLevel None;
}
public class Google.Apis.Logging.MemoryLogger : BaseLogger {
    private int _maximumEntryCount;
    private List`1<string> _logEntries;
    [CompilerGeneratedAttribute]
private IList`1<string> <LogEntries>k__BackingField;
    public IList`1<string> LogEntries { get; }
    public MemoryLogger(LogLevel minimumLogLevel, int maximumEntryCount, IClock clock);
    private MemoryLogger(LogLevel minimumLogLevel, int maximumEntryCount, IClock clock, List`1<string> logEntries, Type forType);
    [CompilerGeneratedAttribute]
public IList`1<string> get_LogEntries();
    protected virtual ILogger BuildNewLogger(Type type);
    protected virtual void Log(LogLevel logLevel, string formattedMessage);
}
public class Google.Apis.Logging.NullLogger : object {
    public bool IsDebugEnabled { get; }
    public sealed virtual bool get_IsDebugEnabled();
    public sealed virtual ILogger ForType(Type type);
    public sealed virtual ILogger ForType();
    public sealed virtual void Info(string message, Object[] formatArgs);
    public sealed virtual void Warning(string message, Object[] formatArgs);
    public sealed virtual void Debug(string message, Object[] formatArgs);
    public sealed virtual void Error(Exception exception, string message, Object[] formatArgs);
    public sealed virtual void Error(string message, Object[] formatArgs);
}
[DefaultMemberAttribute("Item")]
public class Google.Apis.Requests.Parameters.ParameterCollection : List`1<KeyValuePair`2<string, string>> {
    public IEnumerable`1<string> Item { get; }
    public ParameterCollection(IEnumerable`1<KeyValuePair`2<string, string>> collection);
    public void Add(string key, string value);
    public bool ContainsKey(string key);
    public bool TryGetValue(string key, String& value);
    public string GetFirstMatch(string key);
    [IteratorStateMachineAttribute("Google.Apis.Requests.Parameters.ParameterCollection/<GetAllMatches>d__6")]
public IEnumerable`1<string> GetAllMatches(string key);
    public IEnumerable`1<string> get_Item(string key);
    public static ParameterCollection FromQueryString(string qs);
    public static ParameterCollection FromDictionary(IDictionary`2<string, object> dictionary);
}
public static class Google.Apis.Requests.Parameters.ParameterUtils : object {
    private static ILogger Logger;
    private static ParameterUtils();
    public static FormUrlEncodedContent CreateFormUrlEncodedContent(object request);
    public static IDictionary`2<string, object> CreateParameterDictionary(object request);
    public static void InitParameters(RequestBuilder builder, object request);
    private static void IterateParameters(object request, Action`3<RequestParameterType, string, object> action);
}
public static class Google.Apis.Requests.Parameters.ParameterValidator : object {
    [VisibleForTestOnly]
[ObsoleteAttribute("Use ValidateParameter instead")]
public static bool ValidateRegex(IParameter param, string paramValue);
    [VisibleForTestOnly]
internal static bool ValidateRegex(IParameter param, string paramValue, String& error);
    [ObsoleteAttribute("Use the overload with error output instead")]
public static bool ValidateParameter(IParameter parameter, string value);
    public static bool ValidateParameter(IParameter parameter, string value, String& error);
}
public class Google.Apis.Requests.RequestBuilder : object {
    private static ILogger Logger;
    private static Regex PathParametersPattern;
    private static IEnumerable`1<string> SupportedMethods;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IList`1<string>> <PathParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<KeyValuePair`2<string, string>> <QueryParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <BaseUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    private string method;
    private static string OPERATORS;
    private IDictionary`2<string, IList`1<string>> PathParameters { get; private set; }
    private List`1<KeyValuePair`2<string, string>> QueryParameters { get; private set; }
    public Uri BaseUri { get; public set; }
    public string Path { get; public set; }
    public string Method { get; public set; }
    private static RequestBuilder();
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IList`1<string>> get_PathParameters();
    [CompilerGeneratedAttribute]
private void set_PathParameters(IDictionary`2<string, IList`1<string>> value);
    [CompilerGeneratedAttribute]
private List`1<KeyValuePair`2<string, string>> get_QueryParameters();
    [CompilerGeneratedAttribute]
private void set_QueryParameters(List`1<KeyValuePair`2<string, string>> value);
    [CompilerGeneratedAttribute]
public Uri get_BaseUri();
    [CompilerGeneratedAttribute]
public void set_BaseUri(Uri value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    public string get_Method();
    public void set_Method(string value);
    public Uri BuildUri();
    private Uri UriJoin(Uri baseUri, string path);
    private StringBuilder BuildRestPath();
    public void AddParameter(RequestParameterType type, string name, string value);
    public HttpRequestMessage CreateRequest();
}
public class Google.Apis.Requests.RequestError : object {
    [CompilerGeneratedAttribute]
private IList`1<SingleError> <Errors>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorResponseContent>k__BackingField;
    public IList`1<SingleError> Errors { get; public set; }
    public int Code { get; public set; }
    public string Message { get; public set; }
    public string ErrorResponseContent { get; public set; }
    internal bool IsOnlyRawContent { get; }
    [CompilerGeneratedAttribute]
public IList`1<SingleError> get_Errors();
    [CompilerGeneratedAttribute]
public void set_Errors(IList`1<SingleError> value);
    [CompilerGeneratedAttribute]
public int get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(int value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorResponseContent();
    [CompilerGeneratedAttribute]
public void set_ErrorResponseContent(string value);
    internal bool get_IsOnlyRawContent();
    public virtual string ToString();
}
public class Google.Apis.Requests.SingleError : object {
    [CompilerGeneratedAttribute]
private string <Domain>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LocationType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Location>k__BackingField;
    public string Domain { get; public set; }
    public string Reason { get; public set; }
    public string Message { get; public set; }
    public string LocationType { get; public set; }
    public string Location { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Domain();
    [CompilerGeneratedAttribute]
public void set_Domain(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_LocationType();
    [CompilerGeneratedAttribute]
public void set_LocationType(string value);
    [CompilerGeneratedAttribute]
public string get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(string value);
    public virtual string ToString();
}
[AttributeUsageAttribute("452")]
public class Google.Apis.Testing.VisibleForTestOnly : Attribute {
}
public class Google.Apis.Util.ExponentialBackOff : object {
    private static int MaxAllowedNumRetries;
    private TimeSpan deltaBackOff;
    private int maxNumOfRetries;
    private Random random;
    public TimeSpan DeltaBackOff { get; }
    public int MaxNumOfRetries { get; }
    public ExponentialBackOff(TimeSpan deltaBackOff, int maximumNumOfRetries);
    public TimeSpan get_DeltaBackOff();
    public sealed virtual int get_MaxNumOfRetries();
    public sealed virtual TimeSpan GetNextBackOff(int currentRetry);
}
public interface Google.Apis.Util.IBackOff {
    public int MaxNumOfRetries { get; }
    public abstract virtual TimeSpan GetNextBackOff(int currentRetry);
    public abstract virtual int get_MaxNumOfRetries();
}
public interface Google.Apis.Util.IClock {
    [ObsoleteAttribute("System local time is almost always inappropriate to use. If you really need this, call UtcNow and then call ToLocalTime on the result")]
public DateTime Now { get; }
    public DateTime UtcNow { get; }
    public abstract virtual DateTime get_Now();
    public abstract virtual DateTime get_UtcNow();
}
public class Google.Apis.Util.Repeatable`1 : object {
    private IList`1<T> values;
    public Repeatable`1(IEnumerable`1<T> enumeration);
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public static Repeatable`1<T> op_Implicit(T elem);
    public static Repeatable`1<T> op_Implicit(T[] elem);
    public static Repeatable`1<T> op_Implicit(List`1<T> elem);
}
[AttributeUsageAttribute("128")]
public class Google.Apis.Util.RequestParameterAttribute : Attribute {
    private string name;
    private RequestParameterType type;
    public string Name { get; }
    public RequestParameterType Type { get; }
    public RequestParameterAttribute(string name);
    public RequestParameterAttribute(string name, RequestParameterType type);
    public string get_Name();
    public RequestParameterType get_Type();
}
public enum Google.Apis.Util.RequestParameterType : Enum {
    public int value__;
    public static RequestParameterType Path;
    public static RequestParameterType Query;
    public static RequestParameterType UserDefinedQueries;
}
public class Google.Apis.Util.StandardResponse`1 : object {
    [CompilerGeneratedAttribute]
private InnerType <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestError <Error>k__BackingField;
    [JsonPropertyAttribute("data")]
public InnerType Data { get; public set; }
    [JsonPropertyAttribute("error")]
public RequestError Error { get; public set; }
    [CompilerGeneratedAttribute]
public InnerType get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(InnerType value);
    [CompilerGeneratedAttribute]
public RequestError get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(RequestError value);
}
public interface Google.Apis.Util.Store.IDataStore {
    public abstract virtual Task StoreAsync(string key, T value);
    public abstract virtual Task DeleteAsync(string key);
    public abstract virtual Task`1<T> GetAsync(string key);
    public abstract virtual Task ClearAsync();
}
[AttributeUsageAttribute("256")]
public class Google.Apis.Util.StringValueAttribute : Attribute {
    private string text;
    public string Text { get; }
    public StringValueAttribute(string text);
    public string get_Text();
}
public class Google.Apis.Util.SystemClock : object {
    public static IClock Default;
    public DateTime Now { get; }
    public DateTime UtcNow { get; }
    private static SystemClock();
    public sealed virtual DateTime get_Now();
    public sealed virtual DateTime get_UtcNow();
}
[ExtensionAttribute]
internal static class Google.Apis.Util.TaskExtensions : object {
    [ExtensionAttribute]
internal static Task`1<T> WithCancellationToken(Task`1<T> task, CancellationToken cancellationToken);
}
public static class Google.Apis.Util.UriPatcher : object {
    public static void PatchUriQuirks();
}
[ExtensionAttribute]
public static class Google.Apis.Util.Utilities : object {
    [VisibleForTestOnly]
public static string GetLibraryVersion();
    [ExtensionAttribute]
public static T ThrowIfNull(T obj, string paramName);
    [ExtensionAttribute]
public static string ThrowIfNullOrEmpty(string str, string paramName);
    [ExtensionAttribute]
internal static bool IsNullOrEmpty(IEnumerable`1<T> coll);
    public static T CheckEnumValue(T value, string paramName);
    public static void CheckArgument(bool condition, string paramName, string format, T1 arg0, T2 arg1);
    [ExtensionAttribute]
public static T GetCustomAttribute(MemberInfo info);
    [ExtensionAttribute]
internal static string GetStringValue(Enum value);
    public static string GetEnumStringValue(Enum value);
    [VisibleForTestOnly]
public static string ConvertToString(object o);
    internal static string ConvertToRFC3339(DateTime date);
    public static Nullable`1<DateTime> GetDateTimeFromString(string raw);
    public static string GetStringFromDateTime(Nullable`1<DateTime> date);
}
public static class Google.ApplicationContext : object {
    private static ILogger logger;
    public static ILogger Logger { get; }
    internal static void Reset();
    public static ILogger get_Logger();
    public static void RegisterLogger(ILogger loggerToRegister);
}
public class Google.GoogleApiException : Exception {
    private bool _hasMessage;
    [CompilerGeneratedAttribute]
private string <ServiceName>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestError <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpStatusCode <HttpStatusCode>k__BackingField;
    public string ServiceName { get; }
    public RequestError Error { get; public set; }
    private string ErrorMessage { get; }
    private string ContentMessage { get; }
    public HttpStatusCode HttpStatusCode { get; public set; }
    private string HttpStatusCodeMessage { get; }
    private string ServiceNameMessage { get; }
    private string CombinedMessage { get; }
    public string Message { get; }
    public GoogleApiException(string serviceName, string message, Exception inner);
    public GoogleApiException(string serviceName, string message);
    public GoogleApiException(string serviceName);
    [CompilerGeneratedAttribute]
public string get_ServiceName();
    [CompilerGeneratedAttribute]
public RequestError get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(RequestError value);
    private string get_ErrorMessage();
    private string get_ContentMessage();
    [CompilerGeneratedAttribute]
public HttpStatusCode get_HttpStatusCode();
    [CompilerGeneratedAttribute]
public void set_HttpStatusCode(HttpStatusCode value);
    private string get_HttpStatusCodeMessage();
    private string get_ServiceNameMessage();
    private string get_CombinedMessage();
    public virtual string get_Message();
    public virtual string ToString();
}
