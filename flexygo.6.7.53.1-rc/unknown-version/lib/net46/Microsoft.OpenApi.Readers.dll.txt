public class Microsoft.OpenApi.Readers.Exceptions.OpenApiReaderException : Exception {
    public OpenApiReaderException(string message);
    public OpenApiReaderException(string message, Exception innerException);
}
public class Microsoft.OpenApi.Readers.Exceptions.OpenApiUnsupportedSpecVersionException : OpenApiReaderException {
    private static string messagePattern;
    [CompilerGeneratedAttribute]
private string <SpecificationVersion>k__BackingField;
    public string SpecificationVersion { get; }
    public OpenApiUnsupportedSpecVersionException(string specificationVersion);
    public OpenApiUnsupportedSpecVersionException(string specificationVersion, Exception innerException);
    [CompilerGeneratedAttribute]
public string get_SpecificationVersion();
}
public interface Microsoft.OpenApi.Readers.Interface.IDiagnostic {
}
public interface Microsoft.OpenApi.Readers.Interface.IOpenApiReader`2 {
    public abstract virtual OpenApiDocument Read(TInput input, TDiagnostic& diagnostic);
}
internal interface Microsoft.OpenApi.Readers.Interface.IOpenApiVersionService {
    public Func`2<MapNode, OpenApiTag> TagLoader { get; }
    public abstract virtual OpenApiReference ConvertToOpenApiReference(string reference, Nullable`1<ReferenceType> type);
    public abstract virtual Func`2<MapNode, OpenApiTag> get_TagLoader();
    public abstract virtual OpenApiDocument LoadDocument(RootNode rootNode);
}
public class Microsoft.OpenApi.Readers.OpenApiDiagnostic : object {
    [CompilerGeneratedAttribute]
private IList`1<OpenApiError> <Errors>k__BackingField;
    [CompilerGeneratedAttribute]
private OpenApiSpecVersion <SpecificationVersion>k__BackingField;
    public IList`1<OpenApiError> Errors { get; public set; }
    public OpenApiSpecVersion SpecificationVersion { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<OpenApiError> get_Errors();
    [CompilerGeneratedAttribute]
public void set_Errors(IList`1<OpenApiError> value);
    [CompilerGeneratedAttribute]
public OpenApiSpecVersion get_SpecificationVersion();
    [CompilerGeneratedAttribute]
public void set_SpecificationVersion(OpenApiSpecVersion value);
}
public class Microsoft.OpenApi.Readers.OpenApiReaderError : OpenApiError {
    public OpenApiReaderError(OpenApiException exception);
    public OpenApiReaderError(SyntaxErrorException exception);
}
public class Microsoft.OpenApi.Readers.OpenApiReaderSettings : object {
    [CompilerGeneratedAttribute]
private ReferenceResolutionSetting <ReferenceResolution>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Func`2<IOpenApiAny, IOpenApiExtension>> <ExtensionParsers>k__BackingField;
    [CompilerGeneratedAttribute]
private ValidationRuleSet <RuleSet>k__BackingField;
    public ReferenceResolutionSetting ReferenceResolution { get; public set; }
    public Dictionary`2<string, Func`2<IOpenApiAny, IOpenApiExtension>> ExtensionParsers { get; public set; }
    public ValidationRuleSet RuleSet { get; public set; }
    [CompilerGeneratedAttribute]
public ReferenceResolutionSetting get_ReferenceResolution();
    [CompilerGeneratedAttribute]
public void set_ReferenceResolution(ReferenceResolutionSetting value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, Func`2<IOpenApiAny, IOpenApiExtension>> get_ExtensionParsers();
    [CompilerGeneratedAttribute]
public void set_ExtensionParsers(Dictionary`2<string, Func`2<IOpenApiAny, IOpenApiExtension>> value);
    [CompilerGeneratedAttribute]
public ValidationRuleSet get_RuleSet();
    [CompilerGeneratedAttribute]
public void set_RuleSet(ValidationRuleSet value);
}
public class Microsoft.OpenApi.Readers.OpenApiStreamReader : object {
    private OpenApiReaderSettings _settings;
    public OpenApiStreamReader(OpenApiReaderSettings settings);
    public sealed virtual OpenApiDocument Read(Stream input, OpenApiDiagnostic& diagnostic);
    internal static YamlDocument LoadYamlDocument(Stream input);
}
public class Microsoft.OpenApi.Readers.OpenApiStringReader : object {
    private OpenApiReaderSettings _settings;
    public OpenApiStringReader(OpenApiReaderSettings settings);
    public sealed virtual OpenApiDocument Read(string input, OpenApiDiagnostic& diagnostic);
}
internal class Microsoft.OpenApi.Readers.ParseNodes.FixedFieldMap`1 : Dictionary`2<string, Action`2<T, ParseNode>> {
}
[ExtensionAttribute]
public static class Microsoft.OpenApi.Readers.ParseNodes.JsonPointerExtensions : object {
    [ExtensionAttribute]
public static YamlNode Find(JsonPointer currentPointer, YamlNode baseYamlNode);
}
internal class Microsoft.OpenApi.Readers.ParseNodes.ListNode : ParseNode {
    private YamlSequenceNode _nodeList;
    public ListNode(ParsingContext context, OpenApiDiagnostic diagnostic, YamlSequenceNode sequenceNode);
    public virtual List`1<T> CreateList(Func`2<MapNode, T> map);
    public virtual List`1<IOpenApiAny> CreateListOfAny();
    public virtual List`1<T> CreateSimpleList(Func`2<ValueNode, T> map);
    public sealed virtual IEnumerator`1<ParseNode> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public virtual IOpenApiAny CreateAny();
    [CompilerGeneratedAttribute]
private IOpenApiAny <CreateListOfAny>b__3_0(YamlNode n);
    [CompilerGeneratedAttribute]
private ParseNode <GetEnumerator>b__5_0(YamlNode n);
}
[DefaultMemberAttribute("Item")]
internal class Microsoft.OpenApi.Readers.ParseNodes.MapNode : ParseNode {
    private YamlMappingNode _node;
    private List`1<PropertyNode> _nodes;
    public PropertyNode Item { get; }
    public MapNode(ParsingContext context, OpenApiDiagnostic diagnostic, string yamlString);
    public MapNode(ParsingContext context, OpenApiDiagnostic diagnostic, YamlMappingNode node);
    public PropertyNode get_Item(string key);
    public virtual Dictionary`2<string, T> CreateMap(Func`2<MapNode, T> map);
    public virtual Dictionary`2<string, T> CreateMapWithReference(ReferenceType referenceType, Func`2<MapNode, T> map);
    public virtual Dictionary`2<string, T> CreateSimpleMap(Func`2<ValueNode, T> map);
    public sealed virtual IEnumerator`1<PropertyNode> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public virtual string GetRaw();
    public T GetReferencedObject(ReferenceType referenceType, string referenceId);
    public string GetReferencePointer();
    public string GetScalarValue(ValueNode key);
    public virtual IOpenApiAny CreateAny();
    [CompilerGeneratedAttribute]
private PropertyNode <.ctor>b__3_0(KeyValuePair`2<YamlNode, YamlNode> kvp);
}
internal abstract class Microsoft.OpenApi.Readers.ParseNodes.ParseNode : object {
    [CompilerGeneratedAttribute]
private ParsingContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private OpenApiDiagnostic <Diagnostic>k__BackingField;
    public ParsingContext Context { get; }
    public OpenApiDiagnostic Diagnostic { get; }
    protected ParseNode(ParsingContext parsingContext, OpenApiDiagnostic diagnostic);
    [CompilerGeneratedAttribute]
public ParsingContext get_Context();
    [CompilerGeneratedAttribute]
public OpenApiDiagnostic get_Diagnostic();
    public MapNode CheckMapNode(string nodeName);
    public static ParseNode Create(ParsingContext context, OpenApiDiagnostic diagnostic, YamlNode node);
    public virtual List`1<T> CreateList(Func`2<MapNode, T> map);
    public virtual Dictionary`2<string, T> CreateMap(Func`2<MapNode, T> map);
    public virtual Dictionary`2<string, T> CreateMapWithReference(ReferenceType referenceType, Func`2<MapNode, T> map);
    public virtual List`1<T> CreateSimpleList(Func`2<ValueNode, T> map);
    public virtual Dictionary`2<string, T> CreateSimpleMap(Func`2<ValueNode, T> map);
    public virtual IOpenApiAny CreateAny();
    public virtual string GetRaw();
    public virtual string GetScalarValue();
    public virtual List`1<IOpenApiAny> CreateListOfAny();
}
internal class Microsoft.OpenApi.Readers.ParseNodes.PatternFieldMap`1 : Dictionary`2<Func`2<string, bool>, Action`3<T, string, ParseNode>> {
}
internal class Microsoft.OpenApi.Readers.ParseNodes.PropertyNode : ParseNode {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ParseNode <Value>k__BackingField;
    public string Name { get; public set; }
    public ParseNode Value { get; public set; }
    public PropertyNode(ParsingContext context, OpenApiDiagnostic diagnostic, string name, YamlNode node);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public ParseNode get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(ParseNode value);
    public void ParseField(T parentInstance, IDictionary`2<string, Action`2<T, ParseNode>> fixedFields, IDictionary`2<Func`2<string, bool>, Action`3<T, string, ParseNode>> patternFields);
    public virtual IOpenApiAny CreateAny();
    [CompilerGeneratedAttribute]
private bool <ParseField>b__9_0(KeyValuePair`2<Func`2<string, bool>, Action`3<T, string, ParseNode>> p);
}
internal class Microsoft.OpenApi.Readers.ParseNodes.RootNode : ParseNode {
    private YamlDocument _yamlDocument;
    public RootNode(ParsingContext context, OpenApiDiagnostic diagnostic, YamlDocument yamlDocument);
    public ParseNode Find(JsonPointer referencePointer);
    public MapNode GetMap();
}
internal class Microsoft.OpenApi.Readers.ParseNodes.ValueNode : ParseNode {
    private YamlScalarNode _node;
    public ValueNode(ParsingContext context, OpenApiDiagnostic diagnostic, YamlScalarNode scalarNode);
    public virtual string GetScalarValue();
    public virtual IOpenApiAny CreateAny();
}
public class Microsoft.OpenApi.Readers.ParsingContext : object {
    private Stack`1<string> _currentLocation;
    private Dictionary`2<string, object> _tempStorage;
    private IOpenApiVersionService _versionService;
    private Dictionary`2<string, Stack`1<string>> _loopStacks;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Func`2<IOpenApiAny, IOpenApiExtension>> <ExtensionParsers>k__BackingField;
    [CompilerGeneratedAttribute]
private RootNode <RootNode>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<OpenApiTag> <Tags>k__BackingField;
    internal Dictionary`2<string, Func`2<IOpenApiAny, IOpenApiExtension>> ExtensionParsers { get; internal set; }
    internal RootNode RootNode { get; internal set; }
    internal List`1<OpenApiTag> Tags { get; private set; }
    internal IOpenApiVersionService VersionService { get; internal set; }
    [CompilerGeneratedAttribute]
internal Dictionary`2<string, Func`2<IOpenApiAny, IOpenApiExtension>> get_ExtensionParsers();
    [CompilerGeneratedAttribute]
internal void set_ExtensionParsers(Dictionary`2<string, Func`2<IOpenApiAny, IOpenApiExtension>> value);
    [CompilerGeneratedAttribute]
internal RootNode get_RootNode();
    [CompilerGeneratedAttribute]
internal void set_RootNode(RootNode value);
    [CompilerGeneratedAttribute]
internal List`1<OpenApiTag> get_Tags();
    [CompilerGeneratedAttribute]
private void set_Tags(List`1<OpenApiTag> value);
    internal OpenApiDocument Parse(YamlDocument yamlDocument, OpenApiDiagnostic diagnostic);
    private static string GetVersion(RootNode rootNode);
    private void ComputeTags(List`1<OpenApiTag> tags, Func`2<MapNode, OpenApiTag> loadTag);
    internal IOpenApiVersionService get_VersionService();
    internal void set_VersionService(IOpenApiVersionService value);
    public void EndObject();
    public string GetLocation();
    public T GetFromTempStorage(string key);
    public void SetTempStorage(string key, object value);
    public void StartObject(string objectName);
    public bool PushLoop(string loopId, string key);
    internal void ClearLoop(string loopid);
    public void PopLoop(string loopid);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.OpenApi.Readers.Properties.SRResource : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string ArgumentNullOrWhiteSpace { get; }
    internal static string CannotResolveRemoteReferencesSynchronously { get; }
    internal static string JsonPointerCannotBeResolved { get; }
    internal static string LoadReferencedObjectFromExternalNotImplmented { get; }
    internal static string ReferenceHasInvalidFormat { get; }
    internal static string ReferenceV2HasInvalidValue { get; }
    internal static string ReferenceV3HasInvalidValue { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_ArgumentNullOrWhiteSpace();
    internal static string get_CannotResolveRemoteReferencesSynchronously();
    internal static string get_JsonPointerCannotBeResolved();
    internal static string get_LoadReferencedObjectFromExternalNotImplmented();
    internal static string get_ReferenceHasInvalidFormat();
    internal static string get_ReferenceV2HasInvalidValue();
    internal static string get_ReferenceV3HasInvalidValue();
}
public enum Microsoft.OpenApi.Readers.ReferenceResolutionSetting : Enum {
    public int value__;
    public static ReferenceResolutionSetting DoNotResolveReferences;
    public static ReferenceResolutionSetting ResolveLocalReferences;
    public static ReferenceResolutionSetting ResolveAllReferences;
}
internal class Microsoft.OpenApi.Readers.Services.OpenApiReferenceResolver : OpenApiVisitorBase {
    private OpenApiDocument _currentDocument;
    private bool _resolveRemoteReferences;
    private List`1<OpenApiError> _errors;
    public IEnumerable`1<OpenApiError> Errors { get; }
    public OpenApiReferenceResolver(OpenApiDocument currentDocument, bool resolveRemoteReferences);
    public IEnumerable`1<OpenApiError> get_Errors();
    public virtual void Visit(OpenApiDocument doc);
    public virtual void Visit(OpenApiComponents components);
    public virtual void Visit(IDictionary`2<string, OpenApiCallback> callbacks);
    public virtual void Visit(OpenApiOperation operation);
    public virtual void Visit(OpenApiMediaType mediaType);
    public virtual void Visit(IDictionary`2<string, OpenApiExample> examples);
    public virtual void Visit(OpenApiResponses responses);
    public virtual void Visit(OpenApiSecurityRequirement securityRequirement);
    public virtual void Visit(IList`1<OpenApiParameter> parameters);
    public virtual void Visit(IDictionary`2<string, OpenApiLink> links);
    public virtual void Visit(OpenApiSchema schema);
    private void ResolveTags(IList`1<OpenApiTag> tags);
    private void ResolveObject(T entity, Action`1<T> assign);
    private void ResolveList(IList`1<T> list);
    private void ResolveMap(IDictionary`2<string, T> map);
    private T ResolveReference(OpenApiReference reference);
    private bool IsUnresolvedReference(IOpenApiReferenceable possibleReference);
}
internal static class Microsoft.OpenApi.Readers.V2.OpenApiV2Deserializer : object {
    private static FixedFieldMap`1<OpenApiContact> _contactFixedFields;
    private static PatternFieldMap`1<OpenApiContact> _contactPatternFields;
    private static FixedFieldMap`1<OpenApiDocument> _openApiFixedFields;
    private static PatternFieldMap`1<OpenApiDocument> _openApiPatternFields;
    private static FixedFieldMap`1<OpenApiExternalDocs> _externalDocsFixedFields;
    private static PatternFieldMap`1<OpenApiExternalDocs> _externalDocsPatternFields;
    private static FixedFieldMap`1<OpenApiHeader> _headerFixedFields;
    private static PatternFieldMap`1<OpenApiHeader> _headerPatternFields;
    private static FixedFieldMap`1<OpenApiInfo> _infoFixedFields;
    private static PatternFieldMap`1<OpenApiInfo> _infoPatternFields;
    private static FixedFieldMap`1<OpenApiLicense> _licenseFixedFields;
    private static PatternFieldMap`1<OpenApiLicense> _licensePatternFields;
    private static FixedFieldMap`1<OpenApiOperation> _operationFixedFields;
    private static PatternFieldMap`1<OpenApiOperation> _operationPatternFields;
    private static FixedFieldMap`1<OpenApiResponses> _responsesFixedFields;
    private static PatternFieldMap`1<OpenApiResponses> _responsesPatternFields;
    private static Nullable`1<ParameterLocation> _in;
    private static FixedFieldMap`1<OpenApiParameter> _parameterFixedFields;
    private static PatternFieldMap`1<OpenApiParameter> _parameterPatternFields;
    private static FixedFieldMap`1<OpenApiPathItem> _pathItemFixedFields;
    private static PatternFieldMap`1<OpenApiPathItem> _pathItemPatternFields;
    private static FixedFieldMap`1<OpenApiPaths> _pathsFixedFields;
    private static PatternFieldMap`1<OpenApiPaths> _pathsPatternFields;
    private static FixedFieldMap`1<OpenApiResponse> _responseFixedFields;
    private static PatternFieldMap`1<OpenApiResponse> _responsePatternFields;
    private static FixedFieldMap`1<OpenApiSchema> _schemaFixedFields;
    private static PatternFieldMap`1<OpenApiSchema> _schemaPatternFields;
    private static string _flowValue;
    private static OpenApiOAuthFlow _flow;
    private static FixedFieldMap`1<OpenApiSecurityScheme> _securitySchemeFixedFields;
    private static PatternFieldMap`1<OpenApiSecurityScheme> _securitySchemePatternFields;
    private static FixedFieldMap`1<OpenApiTag> _tagFixedFields;
    private static PatternFieldMap`1<OpenApiTag> _tagPatternFields;
    private static FixedFieldMap`1<OpenApiXml> _xmlFixedFields;
    private static PatternFieldMap`1<OpenApiXml> _xmlPatternFields;
    private static OpenApiV2Deserializer();
    public static OpenApiContact LoadContact(ParseNode node);
    private static void MakeServers(IList`1<OpenApiServer> servers, ParsingContext context);
    public static OpenApiDocument LoadOpenApi(RootNode rootNode);
    private static void FixRequestBodyReferences(OpenApiDocument doc);
    public static OpenApiExternalDocs LoadExternalDocs(ParseNode node);
    public static OpenApiHeader LoadHeader(ParseNode node);
    private static void LoadStyle(OpenApiHeader header, string style);
    public static OpenApiInfo LoadInfo(ParseNode node);
    public static OpenApiLicense LoadLicense(ParseNode node);
    internal static OpenApiOperation LoadOperation(ParseNode node);
    public static OpenApiResponses LoadResponses(ParseNode node);
    private static OpenApiRequestBody CreateFormBody(ParsingContext context, List`1<OpenApiParameter> formParameters);
    internal static OpenApiRequestBody CreateRequestBody(ParsingContext context, OpenApiParameter bodyParameter);
    private static OpenApiTag LoadTagByReference(ParsingContext context, OpenApiDiagnostic diagnostic, string tagName);
    private static void LoadStyle(OpenApiParameter p, string v);
    private static OpenApiSchema GetOrCreateSchema(OpenApiParameter p);
    private static OpenApiSchema GetOrCreateSchema(OpenApiHeader p);
    private static void ProcessIn(OpenApiParameter o, ParseNode n);
    public static OpenApiParameter LoadParameter(ParseNode node);
    public static OpenApiParameter LoadParameter(ParseNode node, bool evenBody);
    public static OpenApiPathItem LoadPathItem(ParseNode node);
    public static OpenApiPaths LoadPaths(ParseNode node);
    private static void ProcessProduces(OpenApiResponse response, ParsingContext context);
    private static void LoadExamples(OpenApiResponse response, ParseNode node);
    private static void LoadExample(OpenApiResponse response, string mediaType, ParseNode node);
    public static OpenApiResponse LoadResponse(ParseNode node);
    public static OpenApiSchema LoadSchema(ParseNode node);
    public static OpenApiSecurityRequirement LoadSecurityRequirement(ParseNode node);
    private static OpenApiSecurityScheme LoadSecuritySchemeByReference(ParsingContext context, OpenApiDiagnostic diagnostic, string schemeName);
    public static OpenApiSecurityScheme LoadSecurityScheme(ParseNode node);
    public static OpenApiTag LoadTag(ParseNode n);
    private static void ParseMap(MapNode mapNode, T domainObject, FixedFieldMap`1<T> fixedFieldMap, PatternFieldMap`1<T> patternFieldMap, List`1<string> requiredFields);
    private static string LoadString(ParseNode node);
    public static OpenApiXml LoadXml(ParseNode node);
}
internal class Microsoft.OpenApi.Readers.V2.OpenApiV2VersionService : object {
    public Func`2<MapNode, OpenApiTag> TagLoader { get; }
    public sealed virtual Func`2<MapNode, OpenApiTag> get_TagLoader();
    private static OpenApiReference ParseLocalReference(string localReference);
    private static ReferenceType ParseReferenceType(string referenceTypeName);
    private static string GetReferenceTypeV2Name(ReferenceType referenceType);
    public sealed virtual OpenApiReference ConvertToOpenApiReference(string reference, Nullable`1<ReferenceType> type);
    public sealed virtual OpenApiDocument LoadDocument(RootNode rootNode);
}
internal class Microsoft.OpenApi.Readers.V2.RequestBodyReferenceFixer : OpenApiVisitorBase {
    private IDictionary`2<string, OpenApiRequestBody> _requestBodies;
    public RequestBodyReferenceFixer(IDictionary`2<string, OpenApiRequestBody> requestBodies);
    public virtual void Visit(OpenApiOperation operation);
    [CompilerGeneratedAttribute]
private bool <Visit>b__2_0(OpenApiParameter p);
}
internal static class Microsoft.OpenApi.Readers.V2.TempStorageKeys : object {
    public static string ResponseSchema;
    public static string BodyParameter;
    public static string FormParameters;
    public static string OperationProduces;
    public static string OperationConsumes;
    public static string GlobalConsumes;
    public static string GlobalProduces;
}
internal static class Microsoft.OpenApi.Readers.V3.OpenApiV3Deserializer : object {
    private static FixedFieldMap`1<OpenApiCallback> _callbackFixedFields;
    private static PatternFieldMap`1<OpenApiCallback> _callbackPatternFields;
    private static FixedFieldMap`1<OpenApiComponents> _componentsFixedFields;
    private static PatternFieldMap`1<OpenApiComponents> _componentsPatternFields;
    private static FixedFieldMap`1<OpenApiContact> _contactFixedFields;
    private static PatternFieldMap`1<OpenApiContact> _contactPatternFields;
    private static FixedFieldMap`1<OpenApiDiscriminator> _discriminatorFixedFields;
    private static PatternFieldMap`1<OpenApiDiscriminator> _discriminatorPatternFields;
    private static FixedFieldMap`1<OpenApiDocument> _openApiFixedFields;
    private static PatternFieldMap`1<OpenApiDocument> _openApiPatternFields;
    private static FixedFieldMap`1<OpenApiEncoding> _encodingFixedFields;
    private static PatternFieldMap`1<OpenApiEncoding> _encodingPatternFields;
    private static FixedFieldMap`1<OpenApiExample> _exampleFixedFields;
    private static PatternFieldMap`1<OpenApiExample> _examplePatternFields;
    private static FixedFieldMap`1<OpenApiExternalDocs> _externalDocsFixedFields;
    private static PatternFieldMap`1<OpenApiExternalDocs> _externalDocsPatternFields;
    private static FixedFieldMap`1<OpenApiHeader> _headerFixedFields;
    private static PatternFieldMap`1<OpenApiHeader> _headerPatternFields;
    public static FixedFieldMap`1<OpenApiInfo> InfoFixedFields;
    public static PatternFieldMap`1<OpenApiInfo> InfoPatternFields;
    private static FixedFieldMap`1<OpenApiLicense> _licenseFixedFields;
    private static PatternFieldMap`1<OpenApiLicense> _licensePatternFields;
    private static FixedFieldMap`1<OpenApiLink> _linkFixedFields;
    private static PatternFieldMap`1<OpenApiLink> _linkPatternFields;
    private static FixedFieldMap`1<OpenApiMediaType> _mediaTypeFixedFields;
    private static PatternFieldMap`1<OpenApiMediaType> _mediaTypePatternFields;
    private static FixedFieldMap`1<OpenApiOAuthFlow> _oAuthFlowFixedFileds;
    private static PatternFieldMap`1<OpenApiOAuthFlow> _oAuthFlowPatternFields;
    private static FixedFieldMap`1<OpenApiOAuthFlows> _oAuthFlowsFixedFileds;
    private static PatternFieldMap`1<OpenApiOAuthFlows> _oAuthFlowsPatternFields;
    private static FixedFieldMap`1<OpenApiOperation> _operationFixedFields;
    private static PatternFieldMap`1<OpenApiOperation> _operationPatternFields;
    private static FixedFieldMap`1<OpenApiParameter> _parameterFixedFields;
    private static PatternFieldMap`1<OpenApiParameter> _parameterPatternFields;
    private static FixedFieldMap`1<OpenApiPathItem> _pathItemFixedFields;
    private static PatternFieldMap`1<OpenApiPathItem> _pathItemPatternFields;
    private static FixedFieldMap`1<OpenApiPaths> _pathsFixedFields;
    private static PatternFieldMap`1<OpenApiPaths> _pathsPatternFields;
    private static FixedFieldMap`1<OpenApiRequestBody> _requestBodyFixedFields;
    private static PatternFieldMap`1<OpenApiRequestBody> _requestBodyPatternFields;
    private static FixedFieldMap`1<OpenApiResponse> _responseFixedFields;
    private static PatternFieldMap`1<OpenApiResponse> _responsePatternFields;
    public static FixedFieldMap`1<OpenApiResponses> ResponsesFixedFields;
    public static PatternFieldMap`1<OpenApiResponses> ResponsesPatternFields;
    private static FixedFieldMap`1<OpenApiSchema> _schemaFixedFields;
    private static PatternFieldMap`1<OpenApiSchema> _schemaPatternFields;
    private static FixedFieldMap`1<OpenApiSecurityScheme> _securitySchemeFixedFields;
    private static PatternFieldMap`1<OpenApiSecurityScheme> _securitySchemePatternFields;
    private static FixedFieldMap`1<OpenApiServer> _serverFixedFields;
    private static PatternFieldMap`1<OpenApiServer> _serverPatternFields;
    private static FixedFieldMap`1<OpenApiServerVariable> _serverVariableFixedFields;
    private static PatternFieldMap`1<OpenApiServerVariable> _serverVariablePatternFields;
    private static FixedFieldMap`1<OpenApiTag> _tagFixedFields;
    private static PatternFieldMap`1<OpenApiTag> _tagPatternFields;
    private static FixedFieldMap`1<OpenApiXml> _xmlFixedFields;
    private static PatternFieldMap`1<OpenApiXml> _xmlPatternFields;
    private static OpenApiV3Deserializer();
    public static OpenApiCallback LoadCallback(ParseNode node);
    public static OpenApiComponents LoadComponents(ParseNode node);
    public static OpenApiContact LoadContact(ParseNode node);
    public static OpenApiDiscriminator LoadDiscriminator(ParseNode node);
    public static OpenApiDocument LoadOpenApi(RootNode rootNode);
    public static IOpenApiExtension LoadExtension(string name, ParseNode node);
    public static OpenApiEncoding LoadEncoding(ParseNode node);
    public static OpenApiExample LoadExample(ParseNode node);
    public static OpenApiExternalDocs LoadExternalDocs(ParseNode node);
    public static OpenApiHeader LoadHeader(ParseNode node);
    public static OpenApiInfo LoadInfo(ParseNode node);
    internal static OpenApiLicense LoadLicense(ParseNode node);
    public static OpenApiLink LoadLink(ParseNode node);
    public static OpenApiMediaType LoadMediaType(ParseNode node);
    public static OpenApiOAuthFlow LoadOAuthFlow(ParseNode node);
    public static OpenApiOAuthFlows LoadOAuthFlows(ParseNode node);
    internal static OpenApiOperation LoadOperation(ParseNode node);
    private static OpenApiTag LoadTagByReference(ParsingContext context, OpenApiDiagnostic diagnostic, string tagName);
    public static OpenApiParameter LoadParameter(ParseNode node);
    public static OpenApiPathItem LoadPathItem(ParseNode node);
    public static OpenApiPaths LoadPaths(ParseNode node);
    public static OpenApiRequestBody LoadRequestBody(ParseNode node);
    public static OpenApiResponse LoadResponse(ParseNode node);
    public static OpenApiResponses LoadResponses(ParseNode node);
    public static OpenApiSchema LoadSchema(ParseNode node);
    public static OpenApiSecurityRequirement LoadSecurityRequirement(ParseNode node);
    private static OpenApiSecurityScheme LoadSecuritySchemeByReference(ParsingContext context, OpenApiDiagnostic diagnostic, string schemeName);
    public static OpenApiSecurityScheme LoadSecurityScheme(ParseNode node);
    public static OpenApiServer LoadServer(ParseNode node);
    public static OpenApiServerVariable LoadServerVariable(ParseNode node);
    public static OpenApiTag LoadTag(ParseNode n);
    private static void ParseMap(MapNode mapNode, T domainObject, FixedFieldMap`1<T> fixedFieldMap, PatternFieldMap`1<T> patternFieldMap);
    private static RuntimeExpression LoadRuntimeExpression(ParseNode node);
    private static RuntimeExpressionAnyWrapper LoadRuntimeExpressionAnyWrapper(ParseNode node);
    private static string LoadString(ParseNode node);
    public static OpenApiXml LoadXml(ParseNode node);
}
internal class Microsoft.OpenApi.Readers.V3.OpenApiV3VersionService : object {
    public Func`2<MapNode, OpenApiTag> TagLoader { get; }
    public sealed virtual Func`2<MapNode, OpenApiTag> get_TagLoader();
    public sealed virtual OpenApiReference ConvertToOpenApiReference(string reference, Nullable`1<ReferenceType> type);
    public sealed virtual OpenApiDocument LoadDocument(RootNode rootNode);
    private OpenApiReference ParseLocalReference(string localReference);
}
[ExtensionAttribute]
internal static class Microsoft.OpenApi.Readers.YamlHelper : object {
    [ExtensionAttribute]
public static string GetScalarValue(YamlNode node);
    public static YamlNode ParseYamlString(string yamlString);
}
