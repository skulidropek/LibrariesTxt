public class Microsoft.Owin.Builder.AppBuilder : object {
    private static Func`2<IDictionary`2<string, object>, Task> NotFound;
    private IList`1<Tuple`3<Type, Delegate, Object[]>> _middleware;
    private IDictionary`2<Tuple`2<Type, Type>, Delegate> _conversions;
    private IDictionary`2<string, object> _properties;
    [CompilerGeneratedAttribute]
private static Func`3<ParameterInfo, ParameterInfo, bool> CS$<>9__CachedAnonymousMethodDelegate2;
    [CompilerGeneratedAttribute]
private static Func`2<bool, bool> CS$<>9__CachedAnonymousMethodDelegate3;
    [CompilerGeneratedAttribute]
private static Func`2<ParameterInfo, Type> CS$<>9__CachedAnonymousMethodDelegate7;
    [CompilerGeneratedAttribute]
private static Func`2<bool, bool> CS$<>9__CachedAnonymousMethodDelegate8;
    [CompilerGeneratedAttribute]
private static Func`2<ParameterInfo, Type> CS$<>9__CachedAnonymousMethodDelegate10;
    [CompilerGeneratedAttribute]
private static Func`2<bool, bool> CS$<>9__CachedAnonymousMethodDelegate11;
    [CompilerGeneratedAttribute]
private static Func`2<ParameterInfo, Type> CS$<>9__CachedAnonymousMethodDelegate15;
    [CompilerGeneratedAttribute]
private static Func`2<bool, bool> CS$<>9__CachedAnonymousMethodDelegate16;
    [CompilerGeneratedAttribute]
private static Func`2<ParameterInfo, ParameterExpression> CS$<>9__CachedAnonymousMethodDelegate17;
    public IDictionary`2<string, object> Properties { get; }
    internal AppBuilder(IDictionary`2<Tuple`2<Type, Type>, Delegate> conversions, IDictionary`2<string, object> properties);
    private static AppBuilder();
    public sealed virtual IDictionary`2<string, object> get_Properties();
    public sealed virtual IAppBuilder Use(object middleware, Object[] args);
    public sealed virtual IAppBuilder New();
    public sealed virtual object Build(Type returnType);
    private void AddSignatureConversion(Delegate conversion);
    private static Type GetParameterType(Delegate function);
    private object BuildInternal(Type signature);
    private object Convert(Type signature, object app);
    private object ConvertMultiHop(Type signature, object app);
    private object ConvertOneHop(Type signature, object app);
    private static Delegate ToMemberDelegate(Type signature, object app);
    private static Tuple`3<Type, Delegate, Object[]> ToMiddlewareFactory(object middlewareObject, Object[] args);
    private static Tuple`3<Type, Delegate, Object[]> ToInstanceMiddlewareFactory(object middlewareObject, Object[] args);
    private static Tuple`3<Type, Delegate, Object[]> ToGeneratorMiddlewareFactory(object middlewareObject, Object[] args);
    private static Tuple`3<Type, Delegate, Object[]> ToConstructorMiddlewareFactory(object middlewareObject, Object[] args, Delegate& middlewareDelegate);
    private static bool TestArgForParameter(Type parameterType, object arg);
    [CompilerGeneratedAttribute]
private static bool <ToMemberDelegate>b__0(ParameterInfo methodParameter, ParameterInfo signatureParameter);
    [CompilerGeneratedAttribute]
private static bool <ToMemberDelegate>b__1(bool compatible);
    [CompilerGeneratedAttribute]
private static Type <ToInstanceMiddlewareFactory>b__4(ParameterInfo p);
    [CompilerGeneratedAttribute]
private static bool <ToInstanceMiddlewareFactory>b__5(bool x);
    [CompilerGeneratedAttribute]
private static Type <ToGeneratorMiddlewareFactory>b__e(ParameterInfo p);
    [CompilerGeneratedAttribute]
private static bool <ToGeneratorMiddlewareFactory>b__f(bool x);
    [CompilerGeneratedAttribute]
private static Type <ToConstructorMiddlewareFactory>b__12(ParameterInfo p);
    [CompilerGeneratedAttribute]
private static bool <ToConstructorMiddlewareFactory>b__13(bool x);
    [CompilerGeneratedAttribute]
private static ParameterExpression <ToConstructorMiddlewareFactory>b__14(ParameterInfo p);
}
[ExtensionAttribute]
public static class Microsoft.Owin.Builder.AppBuilderExtensions : object {
    [ExtensionAttribute]
public static Func`2<IDictionary`2<string, object>, Task> Build(IAppBuilder builder);
    [ExtensionAttribute]
public static TApp Build(IAppBuilder builder);
    [ExtensionAttribute]
public static void AddSignatureConversion(IAppBuilder builder, Delegate conversion);
    [ExtensionAttribute]
public static void AddSignatureConversion(IAppBuilder builder, Func`2<T1, T2> conversion);
}
internal static class Microsoft.Owin.Builder.Constants : object {
    internal static string BuilderAddConversion;
    internal static string BuilderDefaultApp;
    internal static string Invoke;
    internal static string Initialize;
}
internal class Microsoft.Owin.Builder.NotFound : object {
    private static Task Completed;
    private static NotFound();
    private static Task CreateCompletedTask();
    public Task Invoke(IDictionary`2<string, object> env);
}
public class Microsoft.Owin.BuilderProperties.Address : ValueType {
    private IDictionary`2<string, object> _dictionary;
    public IDictionary`2<string, object> Dictionary { get; }
    public string Scheme { get; public set; }
    public string Host { get; public set; }
    public string Port { get; public set; }
    public string Path { get; public set; }
    public Address(IDictionary`2<string, object> dictionary);
    public Address(string scheme, string host, string port, string path);
    public IDictionary`2<string, object> get_Dictionary();
    public string get_Scheme();
    public void set_Scheme(string value);
    public string get_Host();
    public void set_Host(string value);
    public string get_Port();
    public void set_Port(string value);
    public string get_Path();
    public void set_Path(string value);
    public static Address Create();
    public bool Equals(Address other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(Address left, Address right);
    public static bool op_Inequality(Address left, Address right);
    public T Get(string key);
    public Address Set(string key, object value);
}
[DefaultMemberAttribute("Item")]
public class Microsoft.Owin.BuilderProperties.AddressCollection : ValueType {
    private IList`1<IDictionary`2<string, object>> _list;
    public IList`1<IDictionary`2<string, object>> List { get; }
    public int Count { get; }
    public Address Item { get; public set; }
    public AddressCollection(IList`1<IDictionary`2<string, object>> list);
    public IList`1<IDictionary`2<string, object>> get_List();
    public int get_Count();
    public Address get_Item(int index);
    public void set_Item(int index, Address value);
    public void Add(Address address);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual IEnumerator`1<Address> GetEnumerator();
    public static AddressCollection Create();
    public bool Equals(AddressCollection other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(AddressCollection left, AddressCollection right);
    public static bool op_Inequality(AddressCollection left, AddressCollection right);
}
public class Microsoft.Owin.BuilderProperties.AppProperties : ValueType {
    private IDictionary`2<string, object> _dictionary;
    public string OwinVersion { get; public set; }
    public Func`2<IDictionary`2<string, object>, Task> DefaultApp { get; public set; }
    public Action`1<Delegate> AddSignatureConversionDelegate { get; public set; }
    public string AppName { get; public set; }
    public TextWriter TraceOutput { get; public set; }
    public CancellationToken OnAppDisposing { get; public set; }
    public AddressCollection Addresses { get; public set; }
    public Capabilities Capabilities { get; public set; }
    public IDictionary`2<string, object> Dictionary { get; }
    public AppProperties(IDictionary`2<string, object> dictionary);
    public string get_OwinVersion();
    public void set_OwinVersion(string value);
    public Func`2<IDictionary`2<string, object>, Task> get_DefaultApp();
    public void set_DefaultApp(Func`2<IDictionary`2<string, object>, Task> value);
    public Action`1<Delegate> get_AddSignatureConversionDelegate();
    public void set_AddSignatureConversionDelegate(Action`1<Delegate> value);
    public string get_AppName();
    public void set_AppName(string value);
    public TextWriter get_TraceOutput();
    public void set_TraceOutput(TextWriter value);
    public CancellationToken get_OnAppDisposing();
    public void set_OnAppDisposing(CancellationToken value);
    public AddressCollection get_Addresses();
    public void set_Addresses(AddressCollection value);
    public Capabilities get_Capabilities();
    public void set_Capabilities(Capabilities value);
    public IDictionary`2<string, object> get_Dictionary();
    public bool Equals(AppProperties other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(AppProperties left, AppProperties right);
    public static bool op_Inequality(AppProperties left, AppProperties right);
    public T Get(string key);
    public AppProperties Set(string key, object value);
}
public class Microsoft.Owin.BuilderProperties.Capabilities : ValueType {
    private IDictionary`2<string, object> _dictionary;
    public IDictionary`2<string, object> Dictionary { get; }
    public string SendFileVersion { get; public set; }
    public string WebSocketVersion { get; public set; }
    public Capabilities(IDictionary`2<string, object> dictionary);
    public IDictionary`2<string, object> get_Dictionary();
    public string get_SendFileVersion();
    public void set_SendFileVersion(string value);
    public string get_WebSocketVersion();
    public void set_WebSocketVersion(string value);
    public static Capabilities Create();
    public bool Equals(Capabilities other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(Capabilities left, Capabilities right);
    public static bool op_Inequality(Capabilities left, Capabilities right);
    public T Get(string key);
    public Capabilities Set(string key, object value);
}
public class Microsoft.Owin.CookieOptions : object {
    [CompilerGeneratedAttribute]
private string <Domain>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <Expires>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Secure>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HttpOnly>k__BackingField;
    public string Domain { get; public set; }
    public string Path { get; public set; }
    public Nullable`1<DateTime> Expires { get; public set; }
    public bool Secure { get; public set; }
    public bool HttpOnly { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Domain();
    [CompilerGeneratedAttribute]
public void set_Domain(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_Expires();
    [CompilerGeneratedAttribute]
public void set_Expires(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public bool get_Secure();
    [CompilerGeneratedAttribute]
public void set_Secure(bool value);
    [CompilerGeneratedAttribute]
public bool get_HttpOnly();
    [CompilerGeneratedAttribute]
public void set_HttpOnly(bool value);
}
[ExtensionAttribute]
public static class Microsoft.Owin.Extensions.IntegratedPipelineExtensions : object {
    private static string IntegratedPipelineStageMarker;
    [ExtensionAttribute]
public static IAppBuilder UseStageMarker(IAppBuilder app, string stageName);
    [ExtensionAttribute]
public static IAppBuilder UseStageMarker(IAppBuilder app, PipelineStage stage);
}
public class Microsoft.Owin.Extensions.UseHandlerMiddleware : object {
    private Func`2<IDictionary`2<string, object>, Task> _next;
    private Func`2<IOwinContext, Task> _handler;
    public UseHandlerMiddleware(Func`2<IDictionary`2<string, object>, Task> next, Func`2<IOwinContext, Task> handler);
    public UseHandlerMiddleware(Func`2<IDictionary`2<string, object>, Task> next, Func`3<IOwinContext, Func`1<Task>, Task> handler);
    public Task Invoke(IDictionary`2<string, object> environment);
}
public class Microsoft.Owin.FormCollection : ReadableStringCollection {
    public FormCollection(IDictionary`2<string, String[]> store);
}
[DefaultMemberAttribute("Item")]
public class Microsoft.Owin.HeaderDictionary : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, String[]> <Store>k__BackingField;
    private IDictionary`2<string, String[]> Store { get; private set; }
    public ICollection`1<string> Keys { get; }
    public ICollection`1<String[]> Values { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public string Item { get; public set; }
    private String[] System.Collections.Generic.IDictionary<System.String,System.String[]>.Item { get; private set; }
    public HeaderDictionary(IDictionary`2<string, String[]> store);
    [CompilerGeneratedAttribute]
private IDictionary`2<string, String[]> get_Store();
    [CompilerGeneratedAttribute]
private void set_Store(IDictionary`2<string, String[]> value);
    public sealed virtual ICollection`1<string> get_Keys();
    public sealed virtual ICollection`1<String[]> get_Values();
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual string get_Item(string key);
    public sealed virtual void set_Item(string key, string value);
    private sealed virtual override String[] System.Collections.Generic.IDictionary<System.String,System.String[]>.get_Item(string key);
    private sealed virtual override void System.Collections.Generic.IDictionary<System.String,System.String[]>.set_Item(string key, String[] value);
    public sealed virtual IEnumerator`1<KeyValuePair`2<string, String[]>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual string Get(string key);
    public sealed virtual IList`1<string> GetValues(string key);
    public sealed virtual IList`1<string> GetCommaSeparatedValues(string key);
    public sealed virtual void Append(string key, string value);
    public sealed virtual void AppendValues(string key, String[] values);
    public sealed virtual void AppendCommaSeparatedValues(string key, String[] values);
    public sealed virtual void Set(string key, string value);
    public sealed virtual void SetValues(string key, String[] values);
    public sealed virtual void SetCommaSeparatedValues(string key, String[] values);
    public sealed virtual void Add(string key, String[] value);
    public sealed virtual bool ContainsKey(string key);
    public sealed virtual bool Remove(string key);
    public sealed virtual bool TryGetValue(string key, String[]& value);
    public sealed virtual void Add(KeyValuePair`2<string, String[]> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<string, String[]> item);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int arrayIndex);
    public sealed virtual bool Remove(KeyValuePair`2<string, String[]> item);
}
public static class Microsoft.Owin.Helpers.WebHelpers : object {
    public static IFormCollection ParseForm(string text);
}
public class Microsoft.Owin.HostString : ValueType {
    private string _value;
    public string Value { get; }
    public HostString(string value);
    public string get_Value();
    public virtual string ToString();
    public string ToUriComponent();
    public static HostString FromUriComponent(string uriComponent);
    public static HostString FromUriComponent(Uri uri);
    public sealed virtual bool Equals(HostString other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(HostString left, HostString right);
    public static bool op_Inequality(HostString left, HostString right);
}
public interface Microsoft.Owin.IFormCollection {
}
[DefaultMemberAttribute("Item")]
public interface Microsoft.Owin.IHeaderDictionary {
    public string Item { get; public set; }
    public abstract virtual string get_Item(string key);
    public abstract virtual void set_Item(string key, string value);
    public abstract virtual IList`1<string> GetCommaSeparatedValues(string key);
    public abstract virtual void Append(string key, string value);
    public abstract virtual void AppendValues(string key, String[] values);
    public abstract virtual void AppendCommaSeparatedValues(string key, String[] values);
    public abstract virtual void Set(string key, string value);
    public abstract virtual void SetValues(string key, String[] values);
    public abstract virtual void SetCommaSeparatedValues(string key, String[] values);
}
internal class Microsoft.Owin.Infrastructure.AppFuncTransition : OwinMiddleware {
    private Func`2<IDictionary`2<string, object>, Task> _next;
    public AppFuncTransition(Func`2<IDictionary`2<string, object>, Task> next);
    public virtual Task Invoke(IOwinContext context);
}
public class Microsoft.Owin.Infrastructure.ChunkingCookieManager : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ChunkSize>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ThrowForPartialCookies>k__BackingField;
    public Nullable`1<int> ChunkSize { get; public set; }
    public bool ThrowForPartialCookies { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ChunkSize();
    [CompilerGeneratedAttribute]
public void set_ChunkSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public bool get_ThrowForPartialCookies();
    [CompilerGeneratedAttribute]
public void set_ThrowForPartialCookies(bool value);
    private static int ParseChunksCount(string value);
    public sealed virtual string GetRequestCookie(IOwinContext context, string key);
    public sealed virtual void AppendResponseCookie(IOwinContext context, string key, string value, CookieOptions options);
    public sealed virtual void DeleteCookie(IOwinContext context, string key, CookieOptions options);
    private static bool IsQuoted(string value);
    private static string RemoveQuotes(string value);
    private static string Quote(string value);
}
internal static class Microsoft.Owin.Infrastructure.Constants : object {
    internal static string Https;
    internal static string HttpDateFormat;
}
public class Microsoft.Owin.Infrastructure.CookieManager : object {
    public sealed virtual string GetRequestCookie(IOwinContext context, string key);
    public sealed virtual void AppendResponseCookie(IOwinContext context, string key, string value, CookieOptions options);
    public sealed virtual void DeleteCookie(IOwinContext context, string key, CookieOptions options);
}
[GeneratedCodeAttribute("App_Packages", "")]
internal class Microsoft.Owin.Infrastructure.HeaderSegment : ValueType {
    private StringSegment _formatting;
    private StringSegment _data;
    public StringSegment Formatting { get; }
    public StringSegment Data { get; }
    public HeaderSegment(StringSegment formatting, StringSegment data);
    public StringSegment get_Formatting();
    public StringSegment get_Data();
    public sealed virtual bool Equals(HeaderSegment other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(HeaderSegment left, HeaderSegment right);
    public static bool op_Inequality(HeaderSegment left, HeaderSegment right);
}
[GeneratedCodeAttribute("App_Packages", "")]
internal class Microsoft.Owin.Infrastructure.HeaderSegmentCollection : ValueType {
    private String[] _headers;
    public HeaderSegmentCollection(String[] headers);
    public sealed virtual bool Equals(HeaderSegmentCollection other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(HeaderSegmentCollection left, HeaderSegmentCollection right);
    public static bool op_Inequality(HeaderSegmentCollection left, HeaderSegmentCollection right);
    public Enumerator GetEnumerator();
    private sealed virtual override IEnumerator`1<HeaderSegment> System.Collections.Generic.IEnumerable<Microsoft.Owin.Infrastructure.HeaderSegment>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public interface Microsoft.Owin.Infrastructure.ICookieManager {
    public abstract virtual string GetRequestCookie(IOwinContext context, string key);
    public abstract virtual void AppendResponseCookie(IOwinContext context, string key, string value, CookieOptions options);
    public abstract virtual void DeleteCookie(IOwinContext context, string key, CookieOptions options);
}
public interface Microsoft.Owin.Infrastructure.ISystemClock {
    public DateTimeOffset UtcNow { get; }
    public abstract virtual DateTimeOffset get_UtcNow();
}
internal static class Microsoft.Owin.Infrastructure.OwinHelpers : object {
    private static Action`3<string, string, object> AddCookieCallback;
    private static Char[] SemicolonAndComma;
    private static Action`3<string, string, object> AppendItemCallback;
    private static Char[] AmpersandAndSemicolon;
    [CompilerGeneratedAttribute]
private static Func`2<string, string> CS$<>9__CachedAnonymousMethodDelegate7;
    [CompilerGeneratedAttribute]
private static Func`2<string, string> CS$<>9__CachedAnonymousMethodDelegate9;
    [CompilerGeneratedAttribute]
private static Action`3<string, string, object> CS$<>9__CachedAnonymousMethodDelegated;
    [CompilerGeneratedAttribute]
private static Action`3<string, string, object> CS$<>9__CachedAnonymousMethodDelegatee;
    private static OwinHelpers();
    internal static IDictionary`2<string, string> GetCookies(IOwinRequest request);
    internal static void ParseDelimited(string text, Char[] delimiters, Action`3<string, string, object> callback, object state);
    public static string GetHeader(IDictionary`2<string, String[]> headers, string key);
    public static IEnumerable`1<string> GetHeaderSplit(IDictionary`2<string, String[]> headers, string key);
    private static IEnumerable`1<string> GetHeaderSplitImplementation(String[] values);
    public static String[] GetHeaderUnmodified(IDictionary`2<string, String[]> headers, string key);
    public static void SetHeader(IDictionary`2<string, String[]> headers, string key, string value);
    public static void SetHeaderJoined(IDictionary`2<string, String[]> headers, string key, String[] values);
    private static string QuoteIfNeeded(string value);
    private static string DeQuote(string value);
    public static void SetHeaderUnmodified(IDictionary`2<string, String[]> headers, string key, String[] values);
    public static void SetHeaderUnmodified(IDictionary`2<string, String[]> headers, string key, IEnumerable`1<string> values);
    public static void AppendHeader(IDictionary`2<string, String[]> headers, string key, string values);
    public static void AppendHeaderJoined(IDictionary`2<string, String[]> headers, string key, String[] values);
    public static void AppendHeaderUnmodified(IDictionary`2<string, String[]> headers, string key, String[] values);
    internal static IDictionary`2<string, String[]> GetQuery(IOwinRequest request);
    internal static IFormCollection GetForm(string text);
    internal static string GetJoinedValue(IDictionary`2<string, String[]> store, string key);
    internal static String[] GetUnmodifiedValues(IDictionary`2<string, String[]> store, string key);
    internal static string GetHost(IOwinRequest request);
    [CompilerGeneratedAttribute]
private static string <SetHeaderJoined>b__6(string value);
    [CompilerGeneratedAttribute]
private static string <AppendHeaderJoined>b__8(string value);
    [CompilerGeneratedAttribute]
private static void <.cctor>b__b(string name, string value, object state);
    [CompilerGeneratedAttribute]
private static void <.cctor>b__c(string name, string value, object state);
}
internal class Microsoft.Owin.Infrastructure.OwinMiddlewareTransition : object {
    private OwinMiddleware _next;
    public OwinMiddlewareTransition(OwinMiddleware next);
    public Task Invoke(IDictionary`2<string, object> environment);
}
internal static class Microsoft.Owin.Infrastructure.PathStringHelper : object {
    private static Boolean[] ValidPathChars;
    private static PathStringHelper();
    public static bool IsValidPathChar(char c);
    public static bool IsPercentEncodedChar(string str, int index);
    public static bool IsHexadecimalChar(char c);
}
public static class Microsoft.Owin.Infrastructure.SignatureConversions : object {
    public static void AddConversions(IAppBuilder app);
    private static OwinMiddleware Conversion1(Func`2<IDictionary`2<string, object>, Task> next);
    private static Func`2<IDictionary`2<string, object>, Task> Conversion2(OwinMiddleware next);
}
[GeneratedCodeAttribute("App_Packages", "")]
internal class Microsoft.Owin.Infrastructure.StringSegment : ValueType {
    private string _buffer;
    private int _offset;
    private int _count;
    public string Buffer { get; }
    public int Offset { get; }
    public int Count { get; }
    public string Value { get; }
    public bool HasValue { get; }
    public StringSegment(string buffer, int offset, int count);
    public string get_Buffer();
    public int get_Offset();
    public int get_Count();
    public string get_Value();
    public bool get_HasValue();
    public sealed virtual bool Equals(StringSegment other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(StringSegment left, StringSegment right);
    public static bool op_Inequality(StringSegment left, StringSegment right);
    public bool StartsWith(string text, StringComparison comparisonType);
    public bool EndsWith(string text, StringComparison comparisonType);
    public bool Equals(string text, StringComparison comparisonType);
    public string Substring(int offset, int length);
    public StringSegment Subsegment(int offset, int length);
    public virtual string ToString();
}
public class Microsoft.Owin.Infrastructure.SystemClock : object {
    public DateTimeOffset UtcNow { get; }
    public sealed virtual DateTimeOffset get_UtcNow();
}
public static class Microsoft.Owin.Infrastructure.WebUtilities : object {
    public static string AddQueryString(string uri, string queryString);
    public static string AddQueryString(string uri, string name, string value);
    public static string AddQueryString(string uri, IDictionary`2<string, string> queryString);
}
public interface Microsoft.Owin.IOwinContext {
    public IOwinRequest Request { get; }
    public IOwinResponse Response { get; }
    public IAuthenticationManager Authentication { get; }
    public IDictionary`2<string, object> Environment { get; }
    public TextWriter TraceOutput { get; public set; }
    public abstract virtual IOwinRequest get_Request();
    public abstract virtual IOwinResponse get_Response();
    public abstract virtual IAuthenticationManager get_Authentication();
    public abstract virtual IDictionary`2<string, object> get_Environment();
    public abstract virtual TextWriter get_TraceOutput();
    public abstract virtual void set_TraceOutput(TextWriter value);
    public abstract virtual T Get(string key);
    public abstract virtual IOwinContext Set(string key, T value);
}
public interface Microsoft.Owin.IOwinRequest {
    public IDictionary`2<string, object> Environment { get; }
    public IOwinContext Context { get; }
    public string Method { get; public set; }
    public string Scheme { get; public set; }
    public bool IsSecure { get; }
    public HostString Host { get; public set; }
    public PathString PathBase { get; public set; }
    public PathString Path { get; public set; }
    public QueryString QueryString { get; public set; }
    public IReadableStringCollection Query { get; }
    public Uri Uri { get; }
    public string Protocol { get; public set; }
    public IHeaderDictionary Headers { get; }
    public RequestCookieCollection Cookies { get; }
    public string ContentType { get; public set; }
    public string CacheControl { get; public set; }
    public string MediaType { get; public set; }
    public string Accept { get; public set; }
    public Stream Body { get; public set; }
    public CancellationToken CallCancelled { get; public set; }
    public string LocalIpAddress { get; public set; }
    public Nullable`1<int> LocalPort { get; public set; }
    public string RemoteIpAddress { get; public set; }
    public Nullable`1<int> RemotePort { get; public set; }
    public IPrincipal User { get; public set; }
    public abstract virtual IDictionary`2<string, object> get_Environment();
    public abstract virtual IOwinContext get_Context();
    public abstract virtual string get_Method();
    public abstract virtual void set_Method(string value);
    public abstract virtual string get_Scheme();
    public abstract virtual void set_Scheme(string value);
    public abstract virtual bool get_IsSecure();
    public abstract virtual HostString get_Host();
    public abstract virtual void set_Host(HostString value);
    public abstract virtual PathString get_PathBase();
    public abstract virtual void set_PathBase(PathString value);
    public abstract virtual PathString get_Path();
    public abstract virtual void set_Path(PathString value);
    public abstract virtual QueryString get_QueryString();
    public abstract virtual void set_QueryString(QueryString value);
    public abstract virtual IReadableStringCollection get_Query();
    public abstract virtual Uri get_Uri();
    public abstract virtual string get_Protocol();
    public abstract virtual void set_Protocol(string value);
    public abstract virtual IHeaderDictionary get_Headers();
    public abstract virtual RequestCookieCollection get_Cookies();
    public abstract virtual string get_ContentType();
    public abstract virtual void set_ContentType(string value);
    public abstract virtual string get_CacheControl();
    public abstract virtual void set_CacheControl(string value);
    public abstract virtual string get_MediaType();
    public abstract virtual void set_MediaType(string value);
    public abstract virtual string get_Accept();
    public abstract virtual void set_Accept(string value);
    public abstract virtual Stream get_Body();
    public abstract virtual void set_Body(Stream value);
    public abstract virtual CancellationToken get_CallCancelled();
    public abstract virtual void set_CallCancelled(CancellationToken value);
    public abstract virtual string get_LocalIpAddress();
    public abstract virtual void set_LocalIpAddress(string value);
    public abstract virtual Nullable`1<int> get_LocalPort();
    public abstract virtual void set_LocalPort(Nullable`1<int> value);
    public abstract virtual string get_RemoteIpAddress();
    public abstract virtual void set_RemoteIpAddress(string value);
    public abstract virtual Nullable`1<int> get_RemotePort();
    public abstract virtual void set_RemotePort(Nullable`1<int> value);
    public abstract virtual IPrincipal get_User();
    public abstract virtual void set_User(IPrincipal value);
    public abstract virtual Task`1<IFormCollection> ReadFormAsync();
    public abstract virtual T Get(string key);
    public abstract virtual IOwinRequest Set(string key, T value);
}
public interface Microsoft.Owin.IOwinResponse {
    public IDictionary`2<string, object> Environment { get; }
    public IOwinContext Context { get; }
    public int StatusCode { get; public set; }
    public string ReasonPhrase { get; public set; }
    public string Protocol { get; public set; }
    public IHeaderDictionary Headers { get; }
    public ResponseCookieCollection Cookies { get; }
    public Nullable`1<long> ContentLength { get; public set; }
    public string ContentType { get; public set; }
    public Nullable`1<DateTimeOffset> Expires { get; public set; }
    public string ETag { get; public set; }
    public Stream Body { get; public set; }
    public abstract virtual IDictionary`2<string, object> get_Environment();
    public abstract virtual IOwinContext get_Context();
    public abstract virtual int get_StatusCode();
    public abstract virtual void set_StatusCode(int value);
    public abstract virtual string get_ReasonPhrase();
    public abstract virtual void set_ReasonPhrase(string value);
    public abstract virtual string get_Protocol();
    public abstract virtual void set_Protocol(string value);
    public abstract virtual IHeaderDictionary get_Headers();
    public abstract virtual ResponseCookieCollection get_Cookies();
    public abstract virtual Nullable`1<long> get_ContentLength();
    public abstract virtual void set_ContentLength(Nullable`1<long> value);
    public abstract virtual string get_ContentType();
    public abstract virtual void set_ContentType(string value);
    public abstract virtual Nullable`1<DateTimeOffset> get_Expires();
    public abstract virtual void set_Expires(Nullable`1<DateTimeOffset> value);
    public abstract virtual string get_ETag();
    public abstract virtual void set_ETag(string value);
    public abstract virtual Stream get_Body();
    public abstract virtual void set_Body(Stream value);
    public abstract virtual void OnSendingHeaders(Action`1<object> callback, object state);
    public abstract virtual void Redirect(string location);
    public abstract virtual void Write(string text);
    public abstract virtual void Write(Byte[] data);
    public abstract virtual void Write(Byte[] data, int offset, int count);
    public abstract virtual Task WriteAsync(string text);
    public abstract virtual Task WriteAsync(string text, CancellationToken token);
    public abstract virtual Task WriteAsync(Byte[] data);
    public abstract virtual Task WriteAsync(Byte[] data, CancellationToken token);
    public abstract virtual Task WriteAsync(Byte[] data, int offset, int count, CancellationToken token);
    public abstract virtual T Get(string key);
    public abstract virtual IOwinResponse Set(string key, T value);
}
[DefaultMemberAttribute("Item")]
public interface Microsoft.Owin.IReadableStringCollection {
    public string Item { get; }
    public abstract virtual string get_Item(string key);
    public abstract virtual string Get(string key);
    public abstract virtual IList`1<string> GetValues(string key);
}
[ExtensionAttribute]
public static class Microsoft.Owin.Logging.AppBuilderLoggerExtensions : object {
    [ExtensionAttribute]
public static void SetLoggerFactory(IAppBuilder app, ILoggerFactory loggerFactory);
    [ExtensionAttribute]
public static ILoggerFactory GetLoggerFactory(IAppBuilder app);
    [ExtensionAttribute]
public static ILogger CreateLogger(IAppBuilder app, string name);
    [ExtensionAttribute]
public static ILogger CreateLogger(IAppBuilder app, Type component);
    [ExtensionAttribute]
public static ILogger CreateLogger(IAppBuilder app);
}
internal class Microsoft.Owin.Logging.DiagnosticsLogger : object {
    private TraceSource _traceSource;
    public DiagnosticsLogger(TraceSource traceSource);
    public sealed virtual bool WriteCore(TraceEventType eventType, int eventId, object state, Exception exception, Func`3<object, Exception, string> formatter);
}
public class Microsoft.Owin.Logging.DiagnosticsLoggerFactory : object {
    private static string RootTraceName;
    private SourceSwitch _rootSourceSwitch;
    private TraceListener _rootTraceListener;
    private ConcurrentDictionary`2<string, TraceSource> _sources;
    public DiagnosticsLoggerFactory(SourceSwitch rootSourceSwitch, TraceListener rootTraceListener);
    public sealed virtual ILogger Create(string name);
    private TraceSource GetOrAddTraceSource(string name);
    private TraceSource InitializeTraceSource(string traceSourceName);
    private static string ParentSourceName(string traceSourceName);
    private static bool HasDefaultListeners(TraceSource traceSource);
    private static bool HasDefaultSwitch(TraceSource traceSource);
}
public interface Microsoft.Owin.Logging.ILogger {
    public abstract virtual bool WriteCore(TraceEventType eventType, int eventId, object state, Exception exception, Func`3<object, Exception, string> formatter);
}
public interface Microsoft.Owin.Logging.ILoggerFactory {
    public abstract virtual ILogger Create(string name);
}
[ExtensionAttribute]
public static class Microsoft.Owin.Logging.LoggerExtensions : object {
    private static Func`3<object, Exception, string> TheMessage;
    private static Func`3<object, Exception, string> TheMessageAndError;
    [CompilerGeneratedAttribute]
private static Func`3<object, Exception, string> CS$<>9__CachedAnonymousMethodDelegate2;
    [CompilerGeneratedAttribute]
private static Func`3<object, Exception, string> CS$<>9__CachedAnonymousMethodDelegate3;
    private static LoggerExtensions();
    [ExtensionAttribute]
public static bool IsEnabled(ILogger logger, TraceEventType eventType);
    [ExtensionAttribute]
public static void WriteVerbose(ILogger logger, string data);
    [ExtensionAttribute]
public static void WriteInformation(ILogger logger, string message);
    [ExtensionAttribute]
public static void WriteWarning(ILogger logger, string message, String[] args);
    [ExtensionAttribute]
public static void WriteWarning(ILogger logger, string message, Exception error);
    [ExtensionAttribute]
public static void WriteError(ILogger logger, string message);
    [ExtensionAttribute]
public static void WriteError(ILogger logger, string message, Exception error);
    [ExtensionAttribute]
public static void WriteCritical(ILogger logger, string message);
    [ExtensionAttribute]
public static void WriteCritical(ILogger logger, string message, Exception error);
    [CompilerGeneratedAttribute]
private static string <.cctor>b__0(object message, Exception error);
    [CompilerGeneratedAttribute]
private static string <.cctor>b__1(object message, Exception error);
}
public static class Microsoft.Owin.Logging.LoggerFactory : object {
    [CompilerGeneratedAttribute]
private static ILoggerFactory <Default>k__BackingField;
    public static ILoggerFactory Default { get; public set; }
    private static LoggerFactory();
    [CompilerGeneratedAttribute]
public static ILoggerFactory get_Default();
    [CompilerGeneratedAttribute]
public static void set_Default(ILoggerFactory value);
}
public class Microsoft.Owin.Mapping.MapMiddleware : object {
    private Func`2<IDictionary`2<string, object>, Task> _next;
    private MapOptions _options;
    public MapMiddleware(Func`2<IDictionary`2<string, object>, Task> next, MapOptions options);
    [DebuggerStepThroughAttribute]
[AsyncStateMachineAttribute("Microsoft.Owin.Mapping.MapMiddleware/<Invoke>d__0")]
public Task Invoke(IDictionary`2<string, object> environment);
}
public class Microsoft.Owin.Mapping.MapOptions : object {
    [CompilerGeneratedAttribute]
private PathString <PathMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<IDictionary`2<string, object>, Task> <Branch>k__BackingField;
    public PathString PathMatch { get; public set; }
    public Func`2<IDictionary`2<string, object>, Task> Branch { get; public set; }
    [CompilerGeneratedAttribute]
public PathString get_PathMatch();
    [CompilerGeneratedAttribute]
public void set_PathMatch(PathString value);
    [CompilerGeneratedAttribute]
public Func`2<IDictionary`2<string, object>, Task> get_Branch();
    [CompilerGeneratedAttribute]
public void set_Branch(Func`2<IDictionary`2<string, object>, Task> value);
}
public class Microsoft.Owin.Mapping.MapWhenMiddleware : object {
    private Func`2<IDictionary`2<string, object>, Task> _next;
    private MapWhenOptions _options;
    public MapWhenMiddleware(Func`2<IDictionary`2<string, object>, Task> next, MapWhenOptions options);
    [AsyncStateMachineAttribute("Microsoft.Owin.Mapping.MapWhenMiddleware/<Invoke>d__0")]
[DebuggerStepThroughAttribute]
public Task Invoke(IDictionary`2<string, object> environment);
}
public class Microsoft.Owin.Mapping.MapWhenOptions : object {
    [CompilerGeneratedAttribute]
private Func`2<IOwinContext, bool> <Predicate>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<IOwinContext, Task`1<bool>> <PredicateAsync>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<IDictionary`2<string, object>, Task> <Branch>k__BackingField;
    public Func`2<IOwinContext, bool> Predicate { get; public set; }
    public Func`2<IOwinContext, Task`1<bool>> PredicateAsync { get; public set; }
    public Func`2<IDictionary`2<string, object>, Task> Branch { get; public set; }
    [CompilerGeneratedAttribute]
public Func`2<IOwinContext, bool> get_Predicate();
    [CompilerGeneratedAttribute]
public void set_Predicate(Func`2<IOwinContext, bool> value);
    [CompilerGeneratedAttribute]
public Func`2<IOwinContext, Task`1<bool>> get_PredicateAsync();
    [CompilerGeneratedAttribute]
public void set_PredicateAsync(Func`2<IOwinContext, Task`1<bool>> value);
    [CompilerGeneratedAttribute]
public Func`2<IDictionary`2<string, object>, Task> get_Branch();
    [CompilerGeneratedAttribute]
public void set_Branch(Func`2<IDictionary`2<string, object>, Task> value);
}
internal static class Microsoft.Owin.OwinConstants : object {
    public static string RequestScheme;
    public static string RequestMethod;
    public static string RequestPathBase;
    public static string RequestPath;
    public static string RequestQueryString;
    public static string RequestProtocol;
    public static string RequestHeaders;
    public static string RequestBody;
    public static string ResponseStatusCode;
    public static string ResponseReasonPhrase;
    public static string ResponseProtocol;
    public static string ResponseHeaders;
    public static string ResponseBody;
    public static string CallCancelled;
    public static string OwinVersion;
}
public class Microsoft.Owin.OwinContext : object {
    [CompilerGeneratedAttribute]
private IOwinRequest <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private IOwinResponse <Response>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Environment>k__BackingField;
    public IOwinRequest Request { get; private set; }
    public IOwinResponse Response { get; private set; }
    public IAuthenticationManager Authentication { get; }
    public IDictionary`2<string, object> Environment { get; private set; }
    public TextWriter TraceOutput { get; public set; }
    public OwinContext(IDictionary`2<string, object> environment);
    [CompilerGeneratedAttribute]
public virtual IOwinRequest get_Request();
    [CompilerGeneratedAttribute]
private void set_Request(IOwinRequest value);
    [CompilerGeneratedAttribute]
public virtual IOwinResponse get_Response();
    [CompilerGeneratedAttribute]
private void set_Response(IOwinResponse value);
    public sealed virtual IAuthenticationManager get_Authentication();
    [CompilerGeneratedAttribute]
public virtual IDictionary`2<string, object> get_Environment();
    [CompilerGeneratedAttribute]
private void set_Environment(IDictionary`2<string, object> value);
    public virtual TextWriter get_TraceOutput();
    public virtual void set_TraceOutput(TextWriter value);
    public virtual T Get(string key);
    public virtual IOwinContext Set(string key, T value);
}
public abstract class Microsoft.Owin.OwinMiddleware : object {
    [CompilerGeneratedAttribute]
private OwinMiddleware <Next>k__BackingField;
    protected OwinMiddleware Next { get; protected set; }
    protected OwinMiddleware(OwinMiddleware next);
    [CompilerGeneratedAttribute]
protected OwinMiddleware get_Next();
    [CompilerGeneratedAttribute]
protected void set_Next(OwinMiddleware value);
    public abstract virtual Task Invoke(IOwinContext context);
}
public class Microsoft.Owin.OwinRequest : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Environment>k__BackingField;
    public IDictionary`2<string, object> Environment { get; private set; }
    public IOwinContext Context { get; }
    public string Method { get; public set; }
    public string Scheme { get; public set; }
    public bool IsSecure { get; }
    public HostString Host { get; public set; }
    public PathString PathBase { get; public set; }
    public PathString Path { get; public set; }
    public QueryString QueryString { get; public set; }
    public IReadableStringCollection Query { get; }
    public Uri Uri { get; }
    public string Protocol { get; public set; }
    public IHeaderDictionary Headers { get; }
    private IDictionary`2<string, String[]> RawHeaders { get; }
    public RequestCookieCollection Cookies { get; }
    public string ContentType { get; public set; }
    public string CacheControl { get; public set; }
    public string MediaType { get; public set; }
    public string Accept { get; public set; }
    public Stream Body { get; public set; }
    public CancellationToken CallCancelled { get; public set; }
    public string LocalIpAddress { get; public set; }
    public Nullable`1<int> LocalPort { get; public set; }
    private string LocalPortString { get; private set; }
    public string RemoteIpAddress { get; public set; }
    public Nullable`1<int> RemotePort { get; public set; }
    private string RemotePortString { get; private set; }
    public IPrincipal User { get; public set; }
    public OwinRequest(IDictionary`2<string, object> environment);
    [CompilerGeneratedAttribute]
public virtual IDictionary`2<string, object> get_Environment();
    [CompilerGeneratedAttribute]
private void set_Environment(IDictionary`2<string, object> value);
    public virtual IOwinContext get_Context();
    public virtual string get_Method();
    public virtual void set_Method(string value);
    public virtual string get_Scheme();
    public virtual void set_Scheme(string value);
    public virtual bool get_IsSecure();
    public virtual HostString get_Host();
    public virtual void set_Host(HostString value);
    public virtual PathString get_PathBase();
    public virtual void set_PathBase(PathString value);
    public virtual PathString get_Path();
    public virtual void set_Path(PathString value);
    public virtual QueryString get_QueryString();
    public virtual void set_QueryString(QueryString value);
    public virtual IReadableStringCollection get_Query();
    public virtual Uri get_Uri();
    public virtual string get_Protocol();
    public virtual void set_Protocol(string value);
    public virtual IHeaderDictionary get_Headers();
    private IDictionary`2<string, String[]> get_RawHeaders();
    public sealed virtual RequestCookieCollection get_Cookies();
    public virtual string get_ContentType();
    public virtual void set_ContentType(string value);
    public virtual string get_CacheControl();
    public virtual void set_CacheControl(string value);
    public virtual string get_MediaType();
    public virtual void set_MediaType(string value);
    public virtual string get_Accept();
    public virtual void set_Accept(string value);
    public virtual Stream get_Body();
    public virtual void set_Body(Stream value);
    public virtual CancellationToken get_CallCancelled();
    public virtual void set_CallCancelled(CancellationToken value);
    public virtual string get_LocalIpAddress();
    public virtual void set_LocalIpAddress(string value);
    public virtual Nullable`1<int> get_LocalPort();
    public virtual void set_LocalPort(Nullable`1<int> value);
    private string get_LocalPortString();
    private void set_LocalPortString(string value);
    public virtual string get_RemoteIpAddress();
    public virtual void set_RemoteIpAddress(string value);
    public virtual Nullable`1<int> get_RemotePort();
    public virtual void set_RemotePort(Nullable`1<int> value);
    private string get_RemotePortString();
    private void set_RemotePortString(string value);
    public virtual IPrincipal get_User();
    public virtual void set_User(IPrincipal value);
    [DebuggerStepThroughAttribute]
[AsyncStateMachineAttribute("Microsoft.Owin.OwinRequest/<ReadFormAsync>d__0")]
public sealed virtual Task`1<IFormCollection> ReadFormAsync();
    public virtual T Get(string key);
    public virtual IOwinRequest Set(string key, T value);
}
public class Microsoft.Owin.OwinResponse : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Environment>k__BackingField;
    public IDictionary`2<string, object> Environment { get; private set; }
    public IOwinContext Context { get; }
    public int StatusCode { get; public set; }
    public string ReasonPhrase { get; public set; }
    public string Protocol { get; public set; }
    public IHeaderDictionary Headers { get; }
    private IDictionary`2<string, String[]> RawHeaders { get; }
    public ResponseCookieCollection Cookies { get; }
    public Nullable`1<long> ContentLength { get; public set; }
    public string ContentType { get; public set; }
    public Nullable`1<DateTimeOffset> Expires { get; public set; }
    public string ETag { get; public set; }
    public Stream Body { get; public set; }
    public OwinResponse(IDictionary`2<string, object> environment);
    [CompilerGeneratedAttribute]
public virtual IDictionary`2<string, object> get_Environment();
    [CompilerGeneratedAttribute]
private void set_Environment(IDictionary`2<string, object> value);
    public virtual IOwinContext get_Context();
    public virtual int get_StatusCode();
    public virtual void set_StatusCode(int value);
    public virtual string get_ReasonPhrase();
    public virtual void set_ReasonPhrase(string value);
    public virtual string get_Protocol();
    public virtual void set_Protocol(string value);
    public virtual IHeaderDictionary get_Headers();
    private IDictionary`2<string, String[]> get_RawHeaders();
    public virtual ResponseCookieCollection get_Cookies();
    public virtual Nullable`1<long> get_ContentLength();
    public virtual void set_ContentLength(Nullable`1<long> value);
    public virtual string get_ContentType();
    public virtual void set_ContentType(string value);
    public virtual Nullable`1<DateTimeOffset> get_Expires();
    public virtual void set_Expires(Nullable`1<DateTimeOffset> value);
    public virtual string get_ETag();
    public virtual void set_ETag(string value);
    public virtual Stream get_Body();
    public virtual void set_Body(Stream value);
    public virtual void OnSendingHeaders(Action`1<object> callback, object state);
    public virtual void Redirect(string location);
    public virtual void Write(string text);
    public virtual void Write(Byte[] data);
    public virtual void Write(Byte[] data, int offset, int count);
    public virtual Task WriteAsync(string text);
    public virtual Task WriteAsync(string text, CancellationToken token);
    public virtual Task WriteAsync(Byte[] data);
    public virtual Task WriteAsync(Byte[] data, CancellationToken token);
    public virtual Task WriteAsync(Byte[] data, int offset, int count, CancellationToken token);
    public virtual T Get(string key);
    private T Get(string key, T fallback);
    public virtual IOwinResponse Set(string key, T value);
}
[AttributeUsageAttribute("1")]
public class Microsoft.Owin.OwinStartupAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <FriendlyName>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <StartupType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    public string FriendlyName { get; private set; }
    public Type StartupType { get; private set; }
    public string MethodName { get; private set; }
    public OwinStartupAttribute(Type startupType);
    public OwinStartupAttribute(string friendlyName, Type startupType);
    public OwinStartupAttribute(Type startupType, string methodName);
    public OwinStartupAttribute(string friendlyName, Type startupType, string methodName);
    [CompilerGeneratedAttribute]
public string get_FriendlyName();
    [CompilerGeneratedAttribute]
private void set_FriendlyName(string value);
    [CompilerGeneratedAttribute]
public Type get_StartupType();
    [CompilerGeneratedAttribute]
private void set_StartupType(Type value);
    [CompilerGeneratedAttribute]
public string get_MethodName();
    [CompilerGeneratedAttribute]
private void set_MethodName(string value);
}
public class Microsoft.Owin.PathString : ValueType {
    public static PathString Empty;
    private string _value;
    public string Value { get; }
    public bool HasValue { get; }
    public PathString(string value);
    private static PathString();
    public string get_Value();
    public bool get_HasValue();
    public virtual string ToString();
    public string ToUriComponent();
    public static PathString FromUriComponent(string uriComponent);
    public static PathString FromUriComponent(Uri uri);
    public bool StartsWithSegments(PathString other);
    public bool StartsWithSegments(PathString other, PathString& remaining);
    public PathString Add(PathString other);
    public string Add(QueryString other);
    public sealed virtual bool Equals(PathString other);
    public bool Equals(PathString other, StringComparison comparisonType);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(PathString left, PathString right);
    public static bool op_Inequality(PathString left, PathString right);
    public static PathString op_Addition(PathString left, PathString right);
    public static string op_Addition(PathString left, QueryString right);
}
public class Microsoft.Owin.QueryString : ValueType {
    public static QueryString Empty;
    private string _value;
    public string Value { get; }
    public bool HasValue { get; }
    public QueryString(string value);
    public QueryString(string name, string value);
    private static QueryString();
    public string get_Value();
    public bool get_HasValue();
    public virtual string ToString();
    public string ToUriComponent();
    public static QueryString FromUriComponent(string uriComponent);
    public static QueryString FromUriComponent(Uri uri);
    public sealed virtual bool Equals(QueryString other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(QueryString left, QueryString right);
    public static bool op_Inequality(QueryString left, QueryString right);
}
[DefaultMemberAttribute("Item")]
public class Microsoft.Owin.ReadableStringCollection : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, String[]> <Store>k__BackingField;
    private IDictionary`2<string, String[]> Store { get; private set; }
    public string Item { get; }
    public ReadableStringCollection(IDictionary`2<string, String[]> store);
    [CompilerGeneratedAttribute]
private IDictionary`2<string, String[]> get_Store();
    [CompilerGeneratedAttribute]
private void set_Store(IDictionary`2<string, String[]> value);
    public sealed virtual string get_Item(string key);
    public sealed virtual string Get(string key);
    public sealed virtual IList`1<string> GetValues(string key);
    public sealed virtual IEnumerator`1<KeyValuePair`2<string, String[]>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[DefaultMemberAttribute("Item")]
public class Microsoft.Owin.RequestCookieCollection : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Store>k__BackingField;
    private IDictionary`2<string, string> Store { get; private set; }
    public string Item { get; }
    public RequestCookieCollection(IDictionary`2<string, string> store);
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> get_Store();
    [CompilerGeneratedAttribute]
private void set_Store(IDictionary`2<string, string> value);
    public string get_Item(string key);
    public sealed virtual IEnumerator`1<KeyValuePair`2<string, string>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[CompilerGeneratedAttribute]
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
internal class Microsoft.Owin.Resources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string Exception_ConversionTakesOneParameter { get; }
    internal static string Exception_CookieLimitTooSmall { get; }
    internal static string Exception_ImcompleteChunkedCookie { get; }
    internal static string Exception_MiddlewareNotSupported { get; }
    internal static string Exception_MissingOnSendingHeaders { get; }
    internal static string Exception_NoConstructorFound { get; }
    internal static string Exception_NoConversionExists { get; }
    internal static string Exception_PathMustNotEndWithSlash { get; }
    internal static string Exception_PathMustStartWithSlash { get; }
    internal static string Exception_PathRequired { get; }
    internal static string Exception_QueryStringMustStartWithDelimiter { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_Exception_ConversionTakesOneParameter();
    internal static string get_Exception_CookieLimitTooSmall();
    internal static string get_Exception_ImcompleteChunkedCookie();
    internal static string get_Exception_MiddlewareNotSupported();
    internal static string get_Exception_MissingOnSendingHeaders();
    internal static string get_Exception_NoConstructorFound();
    internal static string get_Exception_NoConversionExists();
    internal static string get_Exception_PathMustNotEndWithSlash();
    internal static string get_Exception_PathMustStartWithSlash();
    internal static string get_Exception_PathRequired();
    internal static string get_Exception_QueryStringMustStartWithDelimiter();
}
public class Microsoft.Owin.ResponseCookieCollection : object {
    [CompilerGeneratedAttribute]
private IHeaderDictionary <Headers>k__BackingField;
    private IHeaderDictionary Headers { get; private set; }
    public ResponseCookieCollection(IHeaderDictionary headers);
    [CompilerGeneratedAttribute]
private IHeaderDictionary get_Headers();
    [CompilerGeneratedAttribute]
private void set_Headers(IHeaderDictionary value);
    public void Append(string key, string value);
    public void Append(string key, string value, CookieOptions options);
    public void Delete(string key);
    public void Delete(string key, CookieOptions options);
}
public class Microsoft.Owin.Security.AuthenticateResult : object {
    [CompilerGeneratedAttribute]
private ClaimsIdentity <Identity>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthenticationProperties <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthenticationDescription <Description>k__BackingField;
    public ClaimsIdentity Identity { get; private set; }
    public AuthenticationProperties Properties { get; private set; }
    public AuthenticationDescription Description { get; private set; }
    public AuthenticateResult(IIdentity identity, AuthenticationProperties properties, AuthenticationDescription description);
    [CompilerGeneratedAttribute]
public ClaimsIdentity get_Identity();
    [CompilerGeneratedAttribute]
private void set_Identity(ClaimsIdentity value);
    [CompilerGeneratedAttribute]
public AuthenticationProperties get_Properties();
    [CompilerGeneratedAttribute]
private void set_Properties(AuthenticationProperties value);
    [CompilerGeneratedAttribute]
public AuthenticationDescription get_Description();
    [CompilerGeneratedAttribute]
private void set_Description(AuthenticationDescription value);
}
public class Microsoft.Owin.Security.AuthenticationDescription : object {
    private static string CaptionPropertyKey;
    private static string AuthenticationTypePropertyKey;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Properties>k__BackingField;
    public IDictionary`2<string, object> Properties { get; private set; }
    public string AuthenticationType { get; public set; }
    public string Caption { get; public set; }
    public AuthenticationDescription(IDictionary`2<string, object> properties);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Properties();
    [CompilerGeneratedAttribute]
private void set_Properties(IDictionary`2<string, object> value);
    public string get_AuthenticationType();
    public void set_AuthenticationType(string value);
    public string get_Caption();
    public void set_Caption(string value);
    private string GetString(string name);
}
internal class Microsoft.Owin.Security.AuthenticationManager : object {
    private IOwinContext _context;
    private IOwinRequest _request;
    [CompilerGeneratedAttribute]
private static Func`2<AuthenticationDescription, bool> CS$<>9__CachedAnonymousMethodDelegate1;
    public ClaimsPrincipal User { get; public set; }
    internal Func`4<String[], Action`4<IIdentity, IDictionary`2<string, string>, IDictionary`2<string, object>, object>, object, Task> AuthenticateDelegate { get; }
    public AuthenticationResponseChallenge AuthenticationResponseChallenge { get; public set; }
    public AuthenticationResponseGrant AuthenticationResponseGrant { get; public set; }
    public AuthenticationResponseRevoke AuthenticationResponseRevoke { get; public set; }
    public Tuple`2<IPrincipal, IDictionary`2<string, string>> SignInEntry { get; public set; }
    public String[] SignOutEntry { get; public set; }
    public IDictionary`2<string, string> SignOutPropertiesEntry { get; public set; }
    public Tuple`2<String[], IDictionary`2<string, string>> ChallengeEntry { get; public set; }
    public AuthenticationManager(IOwinContext context);
    public sealed virtual ClaimsPrincipal get_User();
    public sealed virtual void set_User(ClaimsPrincipal value);
    internal Func`4<String[], Action`4<IIdentity, IDictionary`2<string, string>, IDictionary`2<string, object>, object>, object, Task> get_AuthenticateDelegate();
    public sealed virtual AuthenticationResponseChallenge get_AuthenticationResponseChallenge();
    public sealed virtual void set_AuthenticationResponseChallenge(AuthenticationResponseChallenge value);
    public sealed virtual AuthenticationResponseGrant get_AuthenticationResponseGrant();
    public sealed virtual void set_AuthenticationResponseGrant(AuthenticationResponseGrant value);
    public sealed virtual AuthenticationResponseRevoke get_AuthenticationResponseRevoke();
    public sealed virtual void set_AuthenticationResponseRevoke(AuthenticationResponseRevoke value);
    public sealed virtual IEnumerable`1<AuthenticationDescription> GetAuthenticationTypes();
    public sealed virtual IEnumerable`1<AuthenticationDescription> GetAuthenticationTypes(Func`2<AuthenticationDescription, bool> predicate);
    private Task GetAuthenticationTypes(Action`1<IDictionary`2<string, object>> callback);
    [AsyncStateMachineAttribute("Microsoft.Owin.Security.AuthenticationManager/<AuthenticateAsync>d__8")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<AuthenticateResult> AuthenticateAsync(string authenticationType);
    [DebuggerStepThroughAttribute]
[AsyncStateMachineAttribute("Microsoft.Owin.Security.AuthenticationManager/<AuthenticateAsync>d__b")]
public sealed virtual Task`1<IEnumerable`1<AuthenticateResult>> AuthenticateAsync(String[] authenticationTypes);
    private static void AuthenticateAsyncCallback(IIdentity identity, IDictionary`2<string, string> properties, IDictionary`2<string, object> description, object state);
    public sealed virtual void Challenge(AuthenticationProperties properties, String[] authenticationTypes);
    public sealed virtual void Challenge(String[] authenticationTypes);
    public sealed virtual void SignIn(AuthenticationProperties properties, ClaimsIdentity[] identities);
    public sealed virtual void SignIn(ClaimsIdentity[] identities);
    public sealed virtual void SignOut(AuthenticationProperties properties, String[] authenticationTypes);
    public sealed virtual void SignOut(String[] authenticationTypes);
    [DebuggerStepThroughAttribute]
[AsyncStateMachineAttribute("Microsoft.Owin.Security.AuthenticationManager/<Authenticate>d__1a")]
public Task Authenticate(String[] authenticationTypes, Action`4<IIdentity, IDictionary`2<string, string>, IDictionary`2<string, object>, object> callback, object state);
    public Tuple`2<IPrincipal, IDictionary`2<string, string>> get_SignInEntry();
    public void set_SignInEntry(Tuple`2<IPrincipal, IDictionary`2<string, string>> value);
    public String[] get_SignOutEntry();
    public void set_SignOutEntry(String[] value);
    public IDictionary`2<string, string> get_SignOutPropertiesEntry();
    public void set_SignOutPropertiesEntry(IDictionary`2<string, string> value);
    public Tuple`2<String[], IDictionary`2<string, string>> get_ChallengeEntry();
    public void set_ChallengeEntry(Tuple`2<String[], IDictionary`2<string, string>> value);
    [CompilerGeneratedAttribute]
private static bool <GetAuthenticationTypes>b__0(AuthenticationDescription _);
}
public class Microsoft.Owin.Security.AuthenticationProperties : object {
    internal static string IssuedUtcKey;
    internal static string ExpiresUtcKey;
    internal static string IsPersistentKey;
    internal static string RedirectUriKey;
    internal static string RefreshKey;
    internal static string UtcDateTimeFormat;
    private IDictionary`2<string, string> _dictionary;
    public IDictionary`2<string, string> Dictionary { get; }
    public bool IsPersistent { get; public set; }
    public string RedirectUri { get; public set; }
    public Nullable`1<DateTimeOffset> IssuedUtc { get; public set; }
    public Nullable`1<DateTimeOffset> ExpiresUtc { get; public set; }
    public Nullable`1<bool> AllowRefresh { get; public set; }
    public AuthenticationProperties(IDictionary`2<string, string> dictionary);
    public IDictionary`2<string, string> get_Dictionary();
    public bool get_IsPersistent();
    public void set_IsPersistent(bool value);
    public string get_RedirectUri();
    public void set_RedirectUri(string value);
    public Nullable`1<DateTimeOffset> get_IssuedUtc();
    public void set_IssuedUtc(Nullable`1<DateTimeOffset> value);
    public Nullable`1<DateTimeOffset> get_ExpiresUtc();
    public void set_ExpiresUtc(Nullable`1<DateTimeOffset> value);
    public Nullable`1<bool> get_AllowRefresh();
    public void set_AllowRefresh(Nullable`1<bool> value);
}
public class Microsoft.Owin.Security.AuthenticationResponseChallenge : object {
    [CompilerGeneratedAttribute]
private String[] <AuthenticationTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthenticationProperties <Properties>k__BackingField;
    public String[] AuthenticationTypes { get; private set; }
    public AuthenticationProperties Properties { get; private set; }
    public AuthenticationResponseChallenge(String[] authenticationTypes, AuthenticationProperties properties);
    [CompilerGeneratedAttribute]
public String[] get_AuthenticationTypes();
    [CompilerGeneratedAttribute]
private void set_AuthenticationTypes(String[] value);
    [CompilerGeneratedAttribute]
public AuthenticationProperties get_Properties();
    [CompilerGeneratedAttribute]
private void set_Properties(AuthenticationProperties value);
}
public class Microsoft.Owin.Security.AuthenticationResponseGrant : object {
    [CompilerGeneratedAttribute]
private ClaimsIdentity <Identity>k__BackingField;
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Principal>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthenticationProperties <Properties>k__BackingField;
    public ClaimsIdentity Identity { get; private set; }
    public ClaimsPrincipal Principal { get; private set; }
    public AuthenticationProperties Properties { get; private set; }
    public AuthenticationResponseGrant(ClaimsIdentity identity, AuthenticationProperties properties);
    public AuthenticationResponseGrant(ClaimsPrincipal principal, AuthenticationProperties properties);
    [CompilerGeneratedAttribute]
public ClaimsIdentity get_Identity();
    [CompilerGeneratedAttribute]
private void set_Identity(ClaimsIdentity value);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Principal();
    [CompilerGeneratedAttribute]
private void set_Principal(ClaimsPrincipal value);
    [CompilerGeneratedAttribute]
public AuthenticationProperties get_Properties();
    [CompilerGeneratedAttribute]
private void set_Properties(AuthenticationProperties value);
}
public class Microsoft.Owin.Security.AuthenticationResponseRevoke : object {
    [CompilerGeneratedAttribute]
private String[] <AuthenticationTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthenticationProperties <Properties>k__BackingField;
    public String[] AuthenticationTypes { get; private set; }
    public AuthenticationProperties Properties { get; private set; }
    public AuthenticationResponseRevoke(String[] authenticationTypes);
    public AuthenticationResponseRevoke(String[] authenticationTypes, AuthenticationProperties properties);
    [CompilerGeneratedAttribute]
public String[] get_AuthenticationTypes();
    [CompilerGeneratedAttribute]
private void set_AuthenticationTypes(String[] value);
    [CompilerGeneratedAttribute]
public AuthenticationProperties get_Properties();
    [CompilerGeneratedAttribute]
private void set_Properties(AuthenticationProperties value);
}
public interface Microsoft.Owin.Security.IAuthenticationManager {
    public ClaimsPrincipal User { get; public set; }
    public AuthenticationResponseChallenge AuthenticationResponseChallenge { get; public set; }
    public AuthenticationResponseGrant AuthenticationResponseGrant { get; public set; }
    public AuthenticationResponseRevoke AuthenticationResponseRevoke { get; public set; }
    public abstract virtual ClaimsPrincipal get_User();
    public abstract virtual void set_User(ClaimsPrincipal value);
    public abstract virtual AuthenticationResponseChallenge get_AuthenticationResponseChallenge();
    public abstract virtual void set_AuthenticationResponseChallenge(AuthenticationResponseChallenge value);
    public abstract virtual AuthenticationResponseGrant get_AuthenticationResponseGrant();
    public abstract virtual void set_AuthenticationResponseGrant(AuthenticationResponseGrant value);
    public abstract virtual AuthenticationResponseRevoke get_AuthenticationResponseRevoke();
    public abstract virtual void set_AuthenticationResponseRevoke(AuthenticationResponseRevoke value);
    public abstract virtual IEnumerable`1<AuthenticationDescription> GetAuthenticationTypes();
    public abstract virtual IEnumerable`1<AuthenticationDescription> GetAuthenticationTypes(Func`2<AuthenticationDescription, bool> predicate);
    public abstract virtual Task`1<AuthenticateResult> AuthenticateAsync(string authenticationType);
    public abstract virtual Task`1<IEnumerable`1<AuthenticateResult>> AuthenticateAsync(String[] authenticationTypes);
    public abstract virtual void Challenge(AuthenticationProperties properties, String[] authenticationTypes);
    public abstract virtual void Challenge(String[] authenticationTypes);
    public abstract virtual void SignIn(AuthenticationProperties properties, ClaimsIdentity[] identities);
    public abstract virtual void SignIn(ClaimsIdentity[] identities);
    public abstract virtual void SignOut(AuthenticationProperties properties, String[] authenticationTypes);
    public abstract virtual void SignOut(String[] authenticationTypes);
}
[ExtensionAttribute]
public static class Owin.AppBuilderUseExtensions : object {
    [ExtensionAttribute]
public static IAppBuilder Use(IAppBuilder app, Object[] args);
    [ExtensionAttribute]
public static void Run(IAppBuilder app, Func`2<IOwinContext, Task> handler);
    [ExtensionAttribute]
public static IAppBuilder Use(IAppBuilder app, Func`3<IOwinContext, Func`1<Task>, Task> handler);
}
[ExtensionAttribute]
public static class Owin.MapExtensions : object {
    [ExtensionAttribute]
public static IAppBuilder Map(IAppBuilder app, string pathMatch, Action`1<IAppBuilder> configuration);
    [ExtensionAttribute]
public static IAppBuilder Map(IAppBuilder app, PathString pathMatch, Action`1<IAppBuilder> configuration);
}
[ExtensionAttribute]
public static class Owin.MapWhenExtensions : object {
    [ExtensionAttribute]
public static IAppBuilder MapWhen(IAppBuilder app, Func`2<IOwinContext, bool> predicate, Action`1<IAppBuilder> configuration);
    [ExtensionAttribute]
public static IAppBuilder MapWhenAsync(IAppBuilder app, Func`2<IOwinContext, Task`1<bool>> predicate, Action`1<IAppBuilder> configuration);
}
public enum Owin.PipelineStage : Enum {
    public int value__;
    public static PipelineStage Authenticate;
    public static PipelineStage PostAuthenticate;
    public static PipelineStage Authorize;
    public static PipelineStage PostAuthorize;
    public static PipelineStage ResolveCache;
    public static PipelineStage PostResolveCache;
    public static PipelineStage MapHandler;
    public static PipelineStage PostMapHandler;
    public static PipelineStage AcquireState;
    public static PipelineStage PostAcquireState;
    public static PipelineStage PreHandlerExecute;
}
