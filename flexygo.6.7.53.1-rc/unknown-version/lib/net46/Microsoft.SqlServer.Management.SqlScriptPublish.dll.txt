internal static class Microsoft.SqlServer.Management.Diagnostics.SqlScriptPublishModelTraceHelper : object {
    private static UInt32 TraceLevelAssert;
    private static UInt32 TraceLevelException;
    public static void SetDefaultLevel(string strComponentName, UInt32 level);
    public static void Assert(bool condition);
    public static void Assert(bool condition, string strFormat);
}
internal static class Microsoft.SqlServer.Management.SqlScriptPublish.AssemblyVersionInfo : object {
    public static string VersionString;
    public static int MajorVersion;
}
[TypeConverterAttribute("Microsoft.SqlServer.Management.SqlScriptPublish.LocalizedEnumConverter")]
public enum Microsoft.SqlServer.Management.SqlScriptPublish.DatabaseObjectType : Enum {
    public int value__;
    public static DatabaseObjectType Table;
    public static DatabaseObjectType View;
    public static DatabaseObjectType StoredProcedure;
    public static DatabaseObjectType UserDefinedFunction;
    public static DatabaseObjectType UserDefinedDataType;
    public static DatabaseObjectType User;
    public static DatabaseObjectType Default;
    public static DatabaseObjectType Rule;
    public static DatabaseObjectType DatabaseRole;
    public static DatabaseObjectType ApplicationRole;
    public static DatabaseObjectType SqlAssembly;
    public static DatabaseObjectType DdlTrigger;
    public static DatabaseObjectType Synonym;
    public static DatabaseObjectType XmlSchemaCollection;
    public static DatabaseObjectType Schema;
    public static DatabaseObjectType SecurityPolicy;
    public static DatabaseObjectType PlanGuide;
    public static DatabaseObjectType UserDefinedType;
    public static DatabaseObjectType UserDefinedAggregate;
    public static DatabaseObjectType FullTextCatalog;
    public static DatabaseObjectType UserDefinedTableType;
}
public interface Microsoft.SqlServer.Management.SqlScriptPublish.IScriptPublishOptions {
    public bool ConvertUddtToBaseType { get; }
    public bool DelimitStatements { get; }
    public bool GenerateAnsiPadding { get; }
    public bool IncludeCollation { get; }
    public bool IncludeScriptingParametersHeader { get; }
    public bool IncludeHeaders { get; }
    public bool IncludeIdentity { get; }
    public bool IncludeIfNotExists { get; }
    public bool IncludeVarDecimal { get; }
    public bool SchemaQualify { get; }
    public bool SchemaQualifyForeignKeys { get; }
    public bool ScriptBinding { get; }
    public bool ScriptChangeTracking { get; }
    public bool ScriptCheckConstraints { get; }
    public bool ScriptDataCompressionOptions { get; }
    public bool ScriptXmlCompressionOptions { get; }
    public bool ScriptDefaults { get; }
    public bool ScriptDependentObjects { get; }
    public bool ScriptExtendedProperties { get; }
    public bool ScriptFileGroups { get; }
    public bool ScriptForeignKeys { get; }
    public bool ScriptFullTextCatalogs { get; }
    public bool ScriptFullTextIndexes { get; }
    public bool ScriptIndexes { get; }
    public bool ScriptPartitionSchemes { get; }
    public bool ScriptPermissions { get; }
    public bool ScriptOwner { get; }
    public bool ScriptPrimaryKeys { get; }
    public bool ScriptStatistics { get; }
    public bool ScriptDriIncludeSystemNames { get; }
    public bool ScriptTriggers { get; }
    public bool ScriptUniqueKeys { get; }
    public bool ScriptUseDatabase { get; }
    public bool ScriptViewColumns { get; }
    public string TargetVersion { get; }
    public string BatchSeparator { get; }
    public string TargetDatabaseEngineType { get; }
    public string TargetDatabaseEngineEdition { get; }
    public bool TargetSourceServer { get; }
    public abstract virtual bool get_ConvertUddtToBaseType();
    public abstract virtual bool get_DelimitStatements();
    public abstract virtual bool get_GenerateAnsiPadding();
    public abstract virtual bool get_IncludeCollation();
    public abstract virtual bool get_IncludeScriptingParametersHeader();
    public abstract virtual bool get_IncludeHeaders();
    public abstract virtual bool get_IncludeIdentity();
    public abstract virtual bool get_IncludeIfNotExists();
    public abstract virtual bool get_IncludeVarDecimal();
    public abstract virtual bool get_SchemaQualify();
    public abstract virtual bool get_SchemaQualifyForeignKeys();
    public abstract virtual bool get_ScriptBinding();
    public abstract virtual bool get_ScriptChangeTracking();
    public abstract virtual bool get_ScriptCheckConstraints();
    public abstract virtual bool get_ScriptDataCompressionOptions();
    public abstract virtual bool get_ScriptXmlCompressionOptions();
    public abstract virtual bool get_ScriptDefaults();
    public abstract virtual bool get_ScriptDependentObjects();
    public abstract virtual bool get_ScriptExtendedProperties();
    public abstract virtual bool get_ScriptFileGroups();
    public abstract virtual bool get_ScriptForeignKeys();
    public abstract virtual bool get_ScriptFullTextCatalogs();
    public abstract virtual bool get_ScriptFullTextIndexes();
    public abstract virtual bool get_ScriptIndexes();
    public abstract virtual bool get_ScriptPartitionSchemes();
    public abstract virtual bool get_ScriptPermissions();
    public abstract virtual bool get_ScriptOwner();
    public abstract virtual bool get_ScriptPrimaryKeys();
    public abstract virtual bool get_ScriptStatistics();
    public abstract virtual bool get_ScriptDriIncludeSystemNames();
    public abstract virtual bool get_ScriptTriggers();
    public abstract virtual bool get_ScriptUniqueKeys();
    public abstract virtual bool get_ScriptUseDatabase();
    public abstract virtual bool get_ScriptViewColumns();
    public abstract virtual string get_TargetVersion();
    public abstract virtual string get_BatchSeparator();
    public abstract virtual string get_TargetDatabaseEngineType();
    public abstract virtual string get_TargetDatabaseEngineEdition();
    public abstract virtual ScriptingOptions GetSmoScriptingOptions();
    public abstract virtual bool get_TargetSourceServer();
    public abstract virtual ScriptingOptions GetSmoScriptingOptions(object sourceObject);
}
internal class Microsoft.SqlServer.Management.SqlScriptPublish.LocalizedEnumConverter : EnumConverter {
    private static string srTypeFullName;
    public LocalizedEnumConverter(Type type);
    public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType);
}
public enum Microsoft.SqlServer.Management.SqlScriptPublish.OutputType : Enum {
    public int value__;
    public static OutputType GenerateScript;
}
[TypeConverterAttribute("Microsoft.SqlServer.Management.SqlScriptPublish.LocalizedEnumConverter")]
public enum Microsoft.SqlServer.Management.SqlScriptPublish.ResultType : Enum {
    public int value__;
    public static ResultType None;
    public static ResultType InProgress;
    public static ResultType Success;
    public static ResultType Warning;
    public static ResultType Error;
}
public enum Microsoft.SqlServer.Management.SqlScriptPublish.ScriptDestination : Enum {
    public int value__;
    public static ScriptDestination ToSingleFile;
    public static ScriptDestination ToClipboard;
    public static ScriptDestination ToEditor;
    public static ScriptDestination ToFilePerObject;
    public static ScriptDestination ToNotebook;
    public static ScriptDestination ToCustomWriter;
}
public class Microsoft.SqlServer.Management.SqlScriptPublish.ScriptEventArgs : EventArgs {
    private Urn urn;
    private Exception error;
    private bool continueScripting;
    private bool completed;
    public Urn Urn { get; }
    public Exception Error { get; }
    public bool ContinueScripting { get; public set; }
    public bool Completed { get; }
    public ScriptEventArgs(Urn urn, Exception error);
    public ScriptEventArgs(Urn urn, Exception error, bool completed);
    public Urn get_Urn();
    public Exception get_Error();
    public bool get_ContinueScripting();
    public void set_ContinueScripting(bool value);
    public bool get_Completed();
}
public enum Microsoft.SqlServer.Management.SqlScriptPublish.ScriptFileMode : Enum {
    public int value__;
    public static ScriptFileMode Overwrite;
    public static ScriptFileMode Append;
}
public enum Microsoft.SqlServer.Management.SqlScriptPublish.ScriptFileType : Enum {
    public int value__;
    public static ScriptFileType Unicode;
    public static ScriptFileType Ansi;
    public static ScriptFileType Utf8;
}
public class Microsoft.SqlServer.Management.SqlScriptPublish.ScriptItemsArgs : EventArgs {
    private IEnumerable`1<Urn> urns;
    public IEnumerable`1<Urn> Urns { get; }
    public ScriptItemsArgs(IEnumerable`1<Urn> urns);
    public IEnumerable`1<Urn> get_Urns();
}
public class Microsoft.SqlServer.Management.SqlScriptPublish.ScriptOutputOptions : object {
    [CompilerGeneratedAttribute]
private ScriptDestination <ScriptDestination>k__BackingField;
    [CompilerGeneratedAttribute]
private ScriptFileType <SaveFileType>k__BackingField;
    [CompilerGeneratedAttribute]
private ScriptFileMode <SaveFileMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SaveFileName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Indented>k__BackingField;
    [CompilerGeneratedAttribute]
private ISmoScriptWriter <CustomSmoScriptWriter>k__BackingField;
    public ScriptDestination ScriptDestination { get; public set; }
    public ScriptFileType SaveFileType { get; public set; }
    public ScriptFileMode SaveFileMode { get; public set; }
    public string SaveFileName { get; public set; }
    public bool Indented { get; public set; }
    public ISmoScriptWriter CustomSmoScriptWriter { get; public set; }
    [CompilerGeneratedAttribute]
public ScriptDestination get_ScriptDestination();
    [CompilerGeneratedAttribute]
public void set_ScriptDestination(ScriptDestination value);
    [CompilerGeneratedAttribute]
public ScriptFileType get_SaveFileType();
    [CompilerGeneratedAttribute]
public void set_SaveFileType(ScriptFileType value);
    [CompilerGeneratedAttribute]
public ScriptFileMode get_SaveFileMode();
    [CompilerGeneratedAttribute]
public void set_SaveFileMode(ScriptFileMode value);
    [CompilerGeneratedAttribute]
public string get_SaveFileName();
    [CompilerGeneratedAttribute]
public void set_SaveFileName(string value);
    [CompilerGeneratedAttribute]
public bool get_Indented();
    [CompilerGeneratedAttribute]
public void set_Indented(bool value);
    [CompilerGeneratedAttribute]
public ISmoScriptWriter get_CustomSmoScriptWriter();
    [CompilerGeneratedAttribute]
public void set_CustomSmoScriptWriter(ISmoScriptWriter value);
}
internal class Microsoft.SqlServer.Management.SqlScriptPublish.SqlQueryHandler : object {
    private static QueryInfoCollection dicTypes;
    private SqlScriptPublishModel model;
    private Dictionary`2<DatabaseObjectType, List`1<KeyValuePair`2<string, string>>> cache;
    private static SqlQueryHandler();
    public SqlQueryHandler(SqlScriptPublishModel model);
    public IEnumerable`1<DatabaseObjectType> GetDatabaseObjectTypes();
    public IEnumerable`1<KeyValuePair`2<string, string>> EnumChildrenForDatabaseObjectType(DatabaseObjectType objectType);
    public IEnumerable`1<DatabaseObjectType> InvalidObjectTypesForAzure(DatabaseEngineEdition edition);
    private bool ValidObjectType(QueryInfo info);
    private static void InitializeSupportedObjectTypes();
}
public class Microsoft.SqlServer.Management.SqlScriptPublish.SqlScriptGenerator : object {
    private SqlScriptPublishModel model;
    private SqlScriptOptions scriptOptions;
    private ScriptMaker scriptMaker;
    private List`1<Urn> urnList;
    private string BatchTerminator { get; }
    private bool ScriptBatchTerminator { get; }
    public SqlScriptGenerator(SqlScriptPublishModel model);
    private void SetupScriptMaker();
    internal void GetUrnList();
    internal void DoScript(ScriptOutputOptions outputOptions);
    private void CloseWriter(ScriptOutputOptions outputOptions, ISmoScriptWriter writer);
    private ISmoScriptWriter GetScriptWriter(ScriptOutputOptions outputOptions);
    private string GetScript(StringCollection stringCollection);
    private void OnScriptingError(object sender, ScriptingErrorEventArgs e);
    private void OnScriptingProgress(object sender, ScriptingProgressEventArgs e);
    private void OnObjectScriptingProgress(object sender, ObjectScriptingEventArgs e);
    private void OnRetryRequested(object sender, RetryRequestedEventArgs e);
    private Transfer GetTransfer();
    private IDatabasePrefetch GetDatabasePrefetch();
    private void AddScriptItems();
    private void SetScriptingOptions(ScriptingOptions scriptingOptions);
    private string get_BatchTerminator();
    private bool get_ScriptBatchTerminator();
}
[TypeConverterAttribute("Microsoft.SqlServer.Management.Sdk.Sfc.LocalizableTypeConverter")]
[LocalizedPropertyResourcesAttribute("Microsoft.SqlServer.Management.SqlScriptPublish.SqlScriptOptionsSR")]
public class Microsoft.SqlServer.Management.SqlScriptPublish.SqlScriptOptions : object {
    private BooleanTypeOptions generateScriptForDependentObjects;
    private BooleanTypeOptions includeDescriptiveHeaders;
    private BooleanTypeOptions includeScriptingParametersHeader;
    private BooleanTypeOptions includeVarDecimal;
    private BooleanTypeOptions scriptExtendedProperties;
    private BooleanTypeOptions scriptUseDatabase;
    private BooleanTypeOptions scriptSQLLogins;
    private BooleanTypeOptions scriptObjectLevelPermissions;
    private BooleanTypeOptions scriptOwner;
    private ScriptCreateDropOptions scriptCreateDrop;
    private ScriptCompatibilityOptions compatMode;
    private ScriptDatabaseEngineType engineType;
    private ScriptDatabaseEngineEdition databaseEngineEdition;
    private DatabaseEngineEdition sourceEngineEdition;
    private DatabaseEngineType sourceEngineType;
    private BooleanTypeOptions scriptIndexes;
    private BooleanTypeOptions scriptFullTextIndexes;
    private BooleanTypeOptions scriptTriggers;
    private BooleanTypeOptions scriptPrimaryKeys;
    private BooleanTypeOptions scriptForeignKeys;
    private BooleanTypeOptions uniqueKeys;
    private BooleanTypeOptions scriptCheckConstraints;
    private BooleanTypeOptions schemaQualify;
    private BooleanTypeOptions includeIfNotExists;
    private BooleanTypeOptions collation;
    private BooleanTypeOptions continueScriptingOnError;
    private BooleanTypeOptions appendToFile;
    private BooleanTypeOptions scriptDefaults;
    private BooleanTypeOptions convertUDDTToBaseType;
    private BooleanTypeOptions scriptDriIncludeSystemNames;
    private BooleanTypeOptions scriptAnsiPadding;
    private BooleanTypeOptions scriptChangeTracking;
    private BooleanTypeOptions scriptDataCompressionOptions;
    private BooleanTypeOptions scriptXmlCompressionOptions;
    private BooleanTypeOptions bindings;
    private TypeOfDataToScriptOptions typeOfDataToScript;
    private ScriptStatisticsOptions scriptStatistics;
    private int sqlServerVersion;
    private BooleanTypeOptions scriptUnsupportedStatments;
    private Dictionary`2<string, object> readonlyProperties;
    private Dictionary`2<string, object> originalValues;
    [CompilerGeneratedAttribute]
private EventHandler`1<ReadOnlyPropertyChangedEventArgs> ReadOnlyPropertyChanged;
    [DisplayNameKeyAttribute("ScriptConvertUDDT")]
[DisplayDescriptionKeyAttribute("Generateconvertuddt")]
[DisplayCategoryKeyAttribute("General")]
public BooleanTypeOptions ConvertUDDTToBaseType { get; public set; }
    [DisplayNameKeyAttribute("ScriptUseDatabase")]
[DisplayDescriptionKeyAttribute("Generateusedatabase")]
[DisplayCategoryKeyAttribute("General")]
public BooleanTypeOptions ScriptUseDatabase { get; public set; }
    [DisplayNameKeyAttribute("ScriptLogins")]
[DisplayDescriptionKeyAttribute("Generatescriptfordatabaselogins")]
[DisplayCategoryKeyAttribute("General")]
public BooleanTypeOptions ScriptLogins { get; public set; }
    [DisplayNameKeyAttribute("ScriptCreateDrop")]
[DisplayDescriptionKeyAttribute("ScriptCreateDropDescription")]
[DisplayCategoryKeyAttribute("General")]
public ScriptCreateDropOptions ScriptCreateDrop { get; public set; }
    [DisplayNameKeyAttribute("TypesOfDataToScript")]
[DisplayDescriptionKeyAttribute("TypesOfDataToScriptDesc")]
[DisplayCategoryKeyAttribute("General")]
public TypeOfDataToScriptOptions TypeOfDataToScript { get; public set; }
    [DisplayNameKeyAttribute("ScriptObjectLevelPermissions")]
[DisplayDescriptionKeyAttribute("Generateobjectlevelpermissions")]
[DisplayCategoryKeyAttribute("General")]
public BooleanTypeOptions ScriptObjectLevelPermissions { get; public set; }
    [DisplayNameKeyAttribute("ScriptOwner")]
[DisplayDescriptionKeyAttribute("ScriptOwnerForTheObjects")]
[DisplayCategoryKeyAttribute("General")]
public BooleanTypeOptions ScriptOwner { get; public set; }
    [DisplayNameKeyAttribute("GenerateScriptForDependentObjects")]
[DisplayDescriptionKeyAttribute("Generatescriptfordependentobjectsofeachtablescripted")]
[DisplayCategoryKeyAttribute("General")]
public BooleanTypeOptions GenerateScriptForDependentObjects { get; public set; }
    [DisplayNameKeyAttribute("IncludeDescriptiveHeaders")]
[DisplayDescriptionKeyAttribute("Includedescriptiveheadersforeachtablescripted")]
[DisplayCategoryKeyAttribute("General")]
public BooleanTypeOptions IncludeDescriptiveHeaders { get; public set; }
    [DisplayNameKeyAttribute("IncludeScriptingParametersHeader")]
[DisplayDescriptionKeyAttribute("IncludeScriptingParametersHeaderDescription")]
[DisplayCategoryKeyAttribute("General")]
public BooleanTypeOptions IncludeScriptingParametersHeader { get; public set; }
    [DisplayNameKeyAttribute("IncludeVarDecimal")]
[DisplayDescriptionKeyAttribute("IncludeVarDecimalDescription")]
[DisplayCategoryKeyAttribute("General")]
[BrowsableAttribute("False")]
public BooleanTypeOptions IncludeVarDecimal { get; public set; }
    [DisplayNameKeyAttribute("Bindings")]
[DisplayDescriptionKeyAttribute("BindingsDescription")]
[DisplayCategoryKeyAttribute("General")]
public BooleanTypeOptions Bindings { get; public set; }
    [DisplayNameKeyAttribute("ContinueScriptingOnError")]
[DisplayDescriptionKeyAttribute("Continuescriptifanerroroccuredorotherwisestop")]
[DisplayCategoryKeyAttribute("General")]
public BooleanTypeOptions ContinueScriptingOnError { get; public set; }
    [DisplayNameKeyAttribute("AppendToFile")]
[DisplayDescriptionKeyAttribute("Appendtofilethegeneratedscript")]
[DisplayCategoryKeyAttribute("General")]
public BooleanTypeOptions AppendToFile { get; public set; }
    [DisplayNameKeyAttribute("ScriptExtendedProperties")]
[DisplayDescriptionKeyAttribute("Scriptextendedpropertiesforeachtablescripted")]
[DisplayCategoryKeyAttribute("General")]
public BooleanTypeOptions ScriptExtendedProperties { get; public set; }
    [DisplayNameKeyAttribute("ScriptStatistics")]
[DisplayDescriptionKeyAttribute("generatescriptstatistics")]
[DisplayCategoryKeyAttribute("General")]
public ScriptStatisticsOptions ScriptStatistics { get; public set; }
    [DisplayNameKeyAttribute("ScriptDriIncludeSystemNames")]
[DisplayDescriptionKeyAttribute("generateDriIncludeSystemNames")]
[DisplayCategoryKeyAttribute("General")]
public BooleanTypeOptions ScriptDriIncludeSystemNames { get; public set; }
    [DisplayNameKeyAttribute("ScriptAnsiPadding")]
[DisplayDescriptionKeyAttribute("generateAnsiPadding")]
[DisplayCategoryKeyAttribute("General")]
public BooleanTypeOptions ScriptAnsiPadding { get; public set; }
    [DisplayNameKeyAttribute("SchemaQualify")]
[DisplayDescriptionKeyAttribute("Prefixschemaforobjects")]
[DisplayCategoryKeyAttribute("General")]
public BooleanTypeOptions SchemaQualify { get; public set; }
    internal DatabaseEngineEdition SourceEngineEdition { get; internal set; }
    internal DatabaseEngineType SourceEngineType { get; internal set; }
    [DisplayNameKeyAttribute("IncludeIfNotExists")]
[DisplayDescriptionKeyAttribute("Scriptobjectswithifnotexistoption")]
[DisplayCategoryKeyAttribute("General")]
public BooleanTypeOptions IncludeIfNotExists { get; public set; }
    [DisplayNameKeyAttribute("GenerateScriptCollation")]
[DisplayDescriptionKeyAttribute("Scriptobjectswithcollation")]
[DisplayCategoryKeyAttribute("General")]
public BooleanTypeOptions Collation { get; public set; }
    [DisplayNameKeyAttribute("Default")]
[DisplayDescriptionKeyAttribute("ScriptDefaults")]
[DisplayCategoryKeyAttribute("General")]
public BooleanTypeOptions Default { get; public set; }
    [DisplayNameKeyAttribute("CompatibleFeatures")]
[DisplayDescriptionKeyAttribute("CompatibleFeaturesDescription")]
[DisplayCategoryKeyAttribute("General")]
public ScriptCompatibilityOptions ScriptCompatibilityOption { get; public set; }
    [DisplayNameKeyAttribute("TargetEngineType")]
[DisplayDescriptionKeyAttribute("TargetEngineTypeDescription")]
[DisplayCategoryKeyAttribute("General")]
public ScriptDatabaseEngineType TargetDatabaseEngineType { get; public set; }
    [DisplayNameKeyAttribute("TargetEngineEdition")]
[DisplayDescriptionKeyAttribute("TargetEngineEditionDescription")]
[DisplayCategoryKeyAttribute("General")]
public ScriptDatabaseEngineEdition TargetDatabaseEngineEdition { get; public set; }
    [DisplayNameKeyAttribute("IncludeUnsupportedStatements")]
[DisplayDescriptionKeyAttribute("IncludeUnsupportedStatementsDescription")]
[DisplayCategoryKeyAttribute("General")]
public BooleanTypeOptions IncludeUnsupportedStatements { get; public set; }
    [DisplayNameKeyAttribute("ScriptIndexes")]
[DisplayDescriptionKeyAttribute("Scriptindexesforeachtablescripted")]
[DisplayCategoryKeyAttribute("TableView")]
public BooleanTypeOptions ScriptIndexes { get; public set; }
    [DisplayNameKeyAttribute("ScriptFullTextIndexes")]
[DisplayDescriptionKeyAttribute("Scriptfulltextindexesforeachtablescripted")]
[DisplayCategoryKeyAttribute("TableView")]
public BooleanTypeOptions ScriptFullTextIndexes { get; public set; }
    [DisplayNameKeyAttribute("ScriptTriggers")]
[DisplayDescriptionKeyAttribute("Scripttriggersforeachtablescripted")]
[DisplayCategoryKeyAttribute("TableView")]
public BooleanTypeOptions ScriptTriggers { get; public set; }
    [DisplayNameKeyAttribute("ScriptPrimaryKeys")]
[DisplayDescriptionKeyAttribute("Scriptprimarykeysforeachtablescripted")]
[DisplayCategoryKeyAttribute("TableView")]
public BooleanTypeOptions ScriptPrimaryKeys { get; public set; }
    [DisplayNameKeyAttribute("ScriptUniqueKeys")]
[DisplayDescriptionKeyAttribute("Scriptuniqueskeysforeachtablescripted")]
[DisplayCategoryKeyAttribute("TableView")]
public BooleanTypeOptions UniqueKeys { get; public set; }
    [DisplayNameKeyAttribute("ScriptForeignKeys")]
[DisplayDescriptionKeyAttribute("Scriptforeignkeysforeachtablescripted")]
[DisplayCategoryKeyAttribute("TableView")]
public BooleanTypeOptions ScriptForeignKeys { get; public set; }
    [DisplayNameKeyAttribute("ScriptChangeTracking")]
[DisplayDescriptionKeyAttribute("ScriptChangeTrackingInformation")]
[DisplayCategoryKeyAttribute("TableView")]
public BooleanTypeOptions ScriptChangeTracking { get; public set; }
    [DisplayNameKeyAttribute("ScriptDataCompression")]
[DisplayDescriptionKeyAttribute("ScriptDataCompressionInformation")]
[DisplayCategoryKeyAttribute("TableView")]
public BooleanTypeOptions ScriptDataCompressionOptions { get; public set; }
    [DisplayNameKeyAttribute("ScriptXmlCompression")]
[DisplayDescriptionKeyAttribute("ScriptXmlCompressionInformation")]
[DisplayCategoryKeyAttribute("TableView")]
public BooleanTypeOptions ScriptXmlCompressionOptions { get; public set; }
    [DisplayNameKeyAttribute("ScriptCheckConstraints")]
[DisplayDescriptionKeyAttribute("Scriptcheckconstraintsforeachtablescripted")]
[DisplayCategoryKeyAttribute("TableView")]
public BooleanTypeOptions ScriptCheckConstraints { get; public set; }
    public SqlScriptOptions(Version version);
    public void Copy(SqlScriptOptions source);
    public sealed virtual ICollection ConfigureVisibleEnumFields(ITypeDescriptorContext context, ArrayList values);
    public virtual void LoadShellScriptingOptions(IScriptPublishOptions scriptingOptions, SqlSmoObject smoObject);
    private void LoadDestinationOptions(IScriptPublishOptions scriptingOptions, SqlSmoObject smoObject);
    public virtual BooleanTypeOptions get_ConvertUDDTToBaseType();
    public virtual void set_ConvertUDDTToBaseType(BooleanTypeOptions value);
    public virtual BooleanTypeOptions get_ScriptUseDatabase();
    public virtual void set_ScriptUseDatabase(BooleanTypeOptions value);
    public virtual BooleanTypeOptions get_ScriptLogins();
    public virtual void set_ScriptLogins(BooleanTypeOptions value);
    public virtual ScriptCreateDropOptions get_ScriptCreateDrop();
    public virtual void set_ScriptCreateDrop(ScriptCreateDropOptions value);
    public virtual TypeOfDataToScriptOptions get_TypeOfDataToScript();
    public virtual void set_TypeOfDataToScript(TypeOfDataToScriptOptions value);
    public virtual BooleanTypeOptions get_ScriptObjectLevelPermissions();
    public virtual void set_ScriptObjectLevelPermissions(BooleanTypeOptions value);
    public virtual BooleanTypeOptions get_ScriptOwner();
    public virtual void set_ScriptOwner(BooleanTypeOptions value);
    public virtual BooleanTypeOptions get_GenerateScriptForDependentObjects();
    public virtual void set_GenerateScriptForDependentObjects(BooleanTypeOptions value);
    public virtual BooleanTypeOptions get_IncludeDescriptiveHeaders();
    public virtual void set_IncludeDescriptiveHeaders(BooleanTypeOptions value);
    public virtual BooleanTypeOptions get_IncludeScriptingParametersHeader();
    public virtual void set_IncludeScriptingParametersHeader(BooleanTypeOptions value);
    public virtual BooleanTypeOptions get_IncludeVarDecimal();
    public virtual void set_IncludeVarDecimal(BooleanTypeOptions value);
    public virtual BooleanTypeOptions get_Bindings();
    public virtual void set_Bindings(BooleanTypeOptions value);
    public virtual BooleanTypeOptions get_ContinueScriptingOnError();
    public virtual void set_ContinueScriptingOnError(BooleanTypeOptions value);
    public virtual BooleanTypeOptions get_AppendToFile();
    public virtual void set_AppendToFile(BooleanTypeOptions value);
    public virtual BooleanTypeOptions get_ScriptExtendedProperties();
    public virtual void set_ScriptExtendedProperties(BooleanTypeOptions value);
    public virtual ScriptStatisticsOptions get_ScriptStatistics();
    public virtual void set_ScriptStatistics(ScriptStatisticsOptions value);
    public virtual BooleanTypeOptions get_ScriptDriIncludeSystemNames();
    public virtual void set_ScriptDriIncludeSystemNames(BooleanTypeOptions value);
    public virtual BooleanTypeOptions get_ScriptAnsiPadding();
    public virtual void set_ScriptAnsiPadding(BooleanTypeOptions value);
    public virtual BooleanTypeOptions get_SchemaQualify();
    public virtual void set_SchemaQualify(BooleanTypeOptions value);
    internal virtual DatabaseEngineEdition get_SourceEngineEdition();
    internal virtual void set_SourceEngineEdition(DatabaseEngineEdition value);
    internal virtual DatabaseEngineType get_SourceEngineType();
    internal virtual void set_SourceEngineType(DatabaseEngineType value);
    public virtual BooleanTypeOptions get_IncludeIfNotExists();
    public virtual void set_IncludeIfNotExists(BooleanTypeOptions value);
    public virtual BooleanTypeOptions get_Collation();
    public virtual void set_Collation(BooleanTypeOptions value);
    public virtual BooleanTypeOptions get_Default();
    public virtual void set_Default(BooleanTypeOptions value);
    public virtual ScriptCompatibilityOptions get_ScriptCompatibilityOption();
    public virtual void set_ScriptCompatibilityOption(ScriptCompatibilityOptions value);
    public virtual ScriptDatabaseEngineType get_TargetDatabaseEngineType();
    public virtual void set_TargetDatabaseEngineType(ScriptDatabaseEngineType value);
    public virtual ScriptDatabaseEngineEdition get_TargetDatabaseEngineEdition();
    public virtual void set_TargetDatabaseEngineEdition(ScriptDatabaseEngineEdition value);
    public virtual BooleanTypeOptions get_IncludeUnsupportedStatements();
    public virtual void set_IncludeUnsupportedStatements(BooleanTypeOptions value);
    public virtual BooleanTypeOptions get_ScriptIndexes();
    public virtual void set_ScriptIndexes(BooleanTypeOptions value);
    public virtual BooleanTypeOptions get_ScriptFullTextIndexes();
    public virtual void set_ScriptFullTextIndexes(BooleanTypeOptions value);
    public virtual BooleanTypeOptions get_ScriptTriggers();
    public virtual void set_ScriptTriggers(BooleanTypeOptions value);
    public virtual BooleanTypeOptions get_ScriptPrimaryKeys();
    public virtual void set_ScriptPrimaryKeys(BooleanTypeOptions value);
    public virtual BooleanTypeOptions get_UniqueKeys();
    public virtual void set_UniqueKeys(BooleanTypeOptions value);
    public virtual BooleanTypeOptions get_ScriptForeignKeys();
    public virtual void set_ScriptForeignKeys(BooleanTypeOptions value);
    public BooleanTypeOptions get_ScriptChangeTracking();
    public void set_ScriptChangeTracking(BooleanTypeOptions value);
    public BooleanTypeOptions get_ScriptDataCompressionOptions();
    public void set_ScriptDataCompressionOptions(BooleanTypeOptions value);
    public BooleanTypeOptions get_ScriptXmlCompressionOptions();
    public void set_ScriptXmlCompressionOptions(BooleanTypeOptions value);
    public virtual BooleanTypeOptions get_ScriptCheckConstraints();
    public virtual void set_ScriptCheckConstraints(BooleanTypeOptions value);
    internal static bool ConvertBooleanTypeOptionToBoolean(BooleanTypeOptions option);
    internal static BooleanTypeOptions ConvertBooleanToBooleanTypeOption(bool boolValue);
    [CompilerGeneratedAttribute]
public sealed virtual void add_ReadOnlyPropertyChanged(EventHandler`1<ReadOnlyPropertyChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_ReadOnlyPropertyChanged(EventHandler`1<ReadOnlyPropertyChangedEventArgs> value);
    private sealed virtual override void Microsoft.SqlServer.Management.Sdk.Sfc.IDynamicReadOnly.OverrideReadOnly(IList`1<LocalizablePropertyDescriptor> properties, ITypeDescriptorContext context, object value, Attribute[] attributes);
}
[CompilerGeneratedAttribute]
internal class Microsoft.SqlServer.Management.SqlScriptPublish.SqlScriptOptionsSR : object {
    public static CultureInfo Culture { get; public set; }
    public static string General { get; }
    public static string TableView { get; }
    public static string OptionsLabel { get; }
    public static string PublishingOptions { get; }
    public static string TrueText { get; }
    public static string FalseText { get; }
    public static string ScriptUseDatabase { get; }
    public static string Generateusedatabase { get; }
    public static string ScriptLogins { get; }
    public static string Generatescriptfordatabaselogins { get; }
    public static string ScriptObjectLevelPermissions { get; }
    public static string Generateobjectlevelpermissions { get; }
    public static string PublishObjectLevelPermissions { get; }
    public static string PublishDObjectLevelPermissions { get; }
    public static string ScriptCreate { get; }
    public static string ScriptDrop { get; }
    public static string ScriptCreateDrop { get; }
    public static string ScriptCreateDropDescription { get; }
    public static string TypesOfDataToScriptDesc { get; }
    public static string TypesOfDataToScript { get; }
    public static string DataOnly { get; }
    public static string SchemaOnly { get; }
    public static string SchemaAndData { get; }
    public static string CreateMode { get; }
    public static string DropMode { get; }
    public static string GenerateScriptForDependentObjects { get; }
    public static string Generatescriptfordependentobjectsofeachtablescripted { get; }
    public static string PublishForDependentObjects { get; }
    public static string Publishfordependentobjectsofeachtablescripted { get; }
    public static string IncludeDescriptiveHeaders { get; }
    public static string Includedescriptiveheadersforeachtablescripted { get; }
    public static string IncludeScriptingParametersHeader { get; }
    public static string IncludeScriptingParametersHeaderDescription { get; }
    public static string ContinueScriptingOnError { get; }
    public static string Continuescriptifanerroroccuredorotherwisestop { get; }
    public static string AppendToFile { get; }
    public static string Appendtofilethegeneratedscript { get; }
    public static string ScriptExtendedProperties { get; }
    public static string Scriptextendedpropertiesforeachtablescripted { get; }
    public static string PublishExtendedProperties { get; }
    public static string Publishextendedpropertiesforeachtablescripted { get; }
    public static string ScriptOwnerForTheObjects { get; }
    public static string ScriptOwner { get; }
    public static string Prefixschemaforobjects { get; }
    public static string SchemaQualify { get; }
    public static string IncludeIfNotExists { get; }
    public static string Scriptobjectswithifnotexistoption { get; }
    public static string GenerateScriptCollation { get; }
    public static string Scriptobjectswithcollation { get; }
    public static string PublishCollation { get; }
    public static string Publishobjectswithcollation { get; }
    public static string Default { get; }
    public static string ScriptChangeTracking { get; }
    public static string ScriptChangeTrackingInformation { get; }
    public static string ScriptDefaults { get; }
    public static string ScriptDataCompression { get; }
    public static string ScriptXmlCompression { get; }
    public static string ScriptDataCompressionInformation { get; }
    public static string ScriptXmlCompressionInformation { get; }
    public static string PublishDefault { get; }
    public static string PublishDefaults { get; }
    public static string Onlyscript70compatiblefeaturesforeachtablescripted { get; }
    public static string ScriptIndexes { get; }
    public static string Scriptindexesforeachtablescripted { get; }
    public static string PublishIndexes { get; }
    public static string Publishindexesforeachtablescripted { get; }
    public static string ScriptFullTextIndexes { get; }
    public static string Scriptfulltextindexesforeachtablescripted { get; }
    public static string PublishFullTextIndexes { get; }
    public static string Publishfulltextindexesforeachtablescripted { get; }
    public static string ScriptTriggers { get; }
    public static string Scripttriggersforeachtablescripted { get; }
    public static string PublishTriggers { get; }
    public static string Publishtriggersforeachtablescripted { get; }
    public static string ScriptPrimaryKeys { get; }
    public static string Scriptprimarykeysforeachtablescripted { get; }
    public static string PublishPrimaryKeys { get; }
    public static string Publishprimarykeysforeachtablescripted { get; }
    public static string ScriptUniqueKeys { get; }
    public static string Scriptuniqueskeysforeachtablescripted { get; }
    public static string PublishUniqueKeys { get; }
    public static string Publishuniqueskeysforeachtablescripted { get; }
    public static string ScriptForeignKeys { get; }
    public static string Scriptforeignkeysforeachtablescripted { get; }
    public static string PublishForeignKeys { get; }
    public static string Publishforeignkeysforeachtablescripted { get; }
    public static string ScriptCheckConstraints { get; }
    public static string Scriptcheckconstraintsforeachtablescripted { get; }
    public static string PublishCheckConstraints { get; }
    public static string Publishcheckconstraintsforeachtablescripted { get; }
    public static string ScriptConvertUDDT { get; }
    public static string Generateconvertuddt { get; }
    public static string ScriptStatistics { get; }
    public static string generatescriptstatistics { get; }
    public static string ScriptStatisticsNone { get; }
    public static string ScriptStatisticsDDL { get; }
    public static string ScriptStatisticsAll { get; }
    public static string PublishStatistics { get; }
    public static string Publishgeneratescriptstatistics { get; }
    public static string PublishStatisticsNone { get; }
    public static string PublishStatisticsDDL { get; }
    public static string PublishStatisticsAll { get; }
    public static string IncludeVarDecimal { get; }
    public static string IncludeVarDecimalDescription { get; }
    public static string Bindings { get; }
    public static string BindingsDescription { get; }
    public static string PublishIncludeVarDecimal { get; }
    public static string PublishIncludeVarDecimalDescription { get; }
    public static string ScriptDriIncludeSystemNames { get; }
    public static string generateDriIncludeSystemNames { get; }
    public static string ScriptAnsiPadding { get; }
    public static string generateAnsiPadding { get; }
    public static string ScriptDatabaseCreate { get; }
    public static string genreatescriptdatabasecreate { get; }
    public static string UseTransactionForPublish { get; }
    public static string UseTransactionForPublishDesc { get; }
    public static string GenerateCreateCommand { get; }
    public static string GenerateDropCommand { get; }
    public static string CompatibleFeatures { get; }
    public static string CompatibleFeaturesDescription { get; }
    public static string PublishCompatibleFeatures { get; }
    public static string PublishCompatibleFeaturesDescription { get; }
    public static string OnlyScript90CompatibleFeatures { get; }
    public static string OnlyScript100CompatibleFeatures { get; }
    public static string OnlyScript105CompatibleFeatures { get; }
    public static string OnlyScript110CompatibleFeatures { get; }
    public static string OnlyScript120CompatibleFeatures { get; }
    public static string OnlyScript130CompatibleFeatures { get; }
    public static string OnlyScript140CompatibleFeatures { get; }
    public static string OnlyScript150CompatibleFeatures { get; }
    public static string OnlyScript160CompatibleFeatures { get; }
    public static string TargetEngineType { get; }
    public static string TargetEngineTypeDescription { get; }
    public static string TargetEngineEdition { get; }
    public static string TargetEngineEditionDescription { get; }
    public static string SingleInstanceEngineType { get; }
    public static string SqlAzureEngineType { get; }
    public static string PersonalEdition { get; }
    public static string StandardEdition { get; }
    public static string EnterpriseEdition { get; }
    public static string ExpressEdition { get; }
    public static string SqlAzureDatabaseEdition { get; }
    public static string SqlDataWarehouseEdition { get; }
    public static string StretchEdition { get; }
    public static string SqlServerManagedInstanceEdition { get; }
    public static string SqlServerOnDemandEdition { get; }
    public static string SqlDatabaseEdgeEdition { get; }
    public static string SqlAzureArcManagedInstanceEdition { get; }
    public static string IncludeUnsupportedStatements { get; }
    public static string IncludeUnsupportedStatementsDescription { get; }
    public static string GenerateScriptProgressTitle { get; }
    public static string PublishProgressTitle { get; }
    public static string GenerateScriptTable { get; }
    public static string GenerateScriptView { get; }
    public static string GenerateScriptSP { get; }
    public static string GenerateScriptUdf { get; }
    public static string GenerateScriptUddt { get; }
    public static string GenerateScriptUdtt { get; }
    public static string GenerateScriptDefault { get; }
    public static string GenerateScriptRule { get; }
    public static string GenerateScriptAppRole { get; }
    public static string GenerateScriptAssembly { get; }
    public static string GenerateScriptDatabaseTrigger { get; }
    public static string GenerateScriptDatabaseRole { get; }
    public static string GenerateScriptSynonym { get; }
    public static string GenerateScriptUser { get; }
    public static string GenerateScriptXMLSchema { get; }
    public static string GenerateScriptSchema { get; }
    public static string GenerateScriptDatabase { get; }
    public static string GenerateScriptPlanGuide { get; }
    public static string GenerateScriptUserDefinedType { get; }
    public static string GenerateScriptFullTextCatalog { get; }
    public static string GenerateScriptUserDefinedAggregate { get; }
    public static string GenerateScriptStatsWarning { get; }
    public static string ProviderListTitle { get; }
    public static string ConfiguredProviders { get; }
    public static string MSAAConfiguredProviders { get; }
    public static string ProviderName { get; }
    public static string WebServiceAddress { get; }
    public static string NewText { get; }
    public static string EditText { get; }
    public static string TestText { get; }
    public static string DeleteText { get; }
    public static string MSAANewText { get; }
    public static string MSAAEditText { get; }
    public static string MSAATestText { get; }
    public static string MSAADeleteText { get; }
    public static string ProviderDeleteMessage { get; }
    public static string ProviderDeleteTitle { get; }
    public static string TestTitleSuccess { get; }
    public static string TestSuccessMessage { get; }
    public static string TestTitleFailure { get; }
    public static string TestFailureMessage { get; }
    public static string TestFailureUsernamePasswordMessage { get; }
    public static string ProviderListSaveChangeMessage { get; }
    public static string ProviderListSaveChangeTitle { get; }
    public static string ERROR_SaveFailedTitle { get; }
    public static string ERROR_DeleteFailedTitle { get; }
    public static string MSAAButtonPanel { get; }
    public static string ProviderDetailTitle { get; }
    public static string ProviderDetailProviderName { get; }
    public static string MSAAProviderDetailProviderName { get; }
    public static string ProviderDetailWebAdd { get; }
    public static string MSAAProviderDetailWebAdd { get; }
    public static string ProviderDetailWebSerAuth { get; }
    public static string ProviderDetailWebSerUser { get; }
    public static string ProviderDetailWebSerPassword { get; }
    public static string ProviderDetailWebSerSavePassword { get; }
    public static string ProviderDetailDatabaseGroup { get; }
    public static string SetAsDefaultText { get; }
    public static string MSAAProviderDetailWebSerUser { get; }
    public static string MSAAProviderDetailWebSerPassword { get; }
    public static string MSAAProviderDetailWebSerSavePassword { get; }
    public static string MSAAProviderDetailDatabaseGroup { get; }
    public static string MSAASetAsDefaultText { get; }
    public static string DownloadConfigurationsText { get; }
    public static string ProviderDetailDeleteMessage { get; }
    public static string ProviderDetailDeleteTitle { get; }
    public static string ProviderDetailConfirmDownloadTitle { get; }
    public static string ProviderDetailConfirmDownloadText { get; }
    public static string ProviderDetailDownloadSucceedTitle { get; }
    public static string ProviderDetailDownloadSucceedText { get; }
    public static string ProviderDetailDownloadFailedTitle { get; }
    public static string ProviderDetailDownloadFailedNotConfigured { get; }
    public static string ProviderDetailDownloadFailedCannotConnect { get; }
    public static string ProviderDetailDownloadFailedUserPassword { get; }
    public static string ProviderDetailSaveChangeMessage { get; }
    public static string ProviderDetailSaveChangeTitle { get; }
    public static string ProviderDetailEmptyProviderNameMessage { get; }
    public static string ProviderDetailEmptyProviderNameMessageTitle { get; }
    public static string ProviderDetailNewProvider { get; }
    public static string DatabaseDetailTitle { get; }
    public static string DatabaseDetailDatabaseName { get; }
    public static string DatabaseDetailServerName { get; }
    public static string MSAADatabaseDetailDatabaseName { get; }
    public static string MSAADatabaseDetailServerName { get; }
    public static string DatabaseDetailAuthentication { get; }
    public static string DatabaseDetailUserName { get; }
    public static string DatabaseDetailPassword { get; }
    public static string DatabaseDetailSavePassword { get; }
    public static string MSAADatabaseDetailUserName { get; }
    public static string MSAADatabaseDetailPassword { get; }
    public static string MSAADatabaseDetailSavePassword { get; }
    public static string DatabaseDetailSaveChangeMessage { get; }
    public static string DatabaseDetailSaveChangeTitle { get; }
    public static string DatabaseDetailEmptyDatabaseNameMessage { get; }
    public static string DatabaseDetailEmptyDatabaseNameMessageTitle { get; }
    public static string DatabaseDetailNewDatabase { get; }
    public static string RemoteCreditDialogTitle { get; }
    public static string RemoteCreditSubTitle { get; }
    public static string RemoteCreditProviderGroupText { get; }
    public static string RemoteCreditDatabaseGroupText { get; }
    public static string RemoteCreditProviderName { get; }
    public static string RemoteCreditWebAdd { get; }
    public static string RemoteCreditWebSerUser { get; }
    public static string RemoteCreditWebSerPassword { get; }
    public static string MSAARemoteCreditWebSerUser { get; }
    public static string MSAARemoteCreditWebSerPassword { get; }
    public static string RemoteCreditDatabaseName { get; }
    public static string RemoteCreditServerName { get; }
    public static string RemoteCreditUserName { get; }
    public static string RemoteCreditPassword { get; }
    public static string MSAARemoteCreditUserName { get; }
    public static string MSAARemoteCreditPassword { get; }
    public static string PublishOutputOptionTitle { get; }
    public static string PublishOutputOptionSubTitle { get; }
    public static CultureInfo get_Culture();
    public static void set_Culture(CultureInfo value);
    public static string get_General();
    public static string get_TableView();
    public static string get_OptionsLabel();
    public static string get_PublishingOptions();
    public static string get_TrueText();
    public static string get_FalseText();
    public static string get_ScriptUseDatabase();
    public static string get_Generateusedatabase();
    public static string get_ScriptLogins();
    public static string get_Generatescriptfordatabaselogins();
    public static string get_ScriptObjectLevelPermissions();
    public static string get_Generateobjectlevelpermissions();
    public static string get_PublishObjectLevelPermissions();
    public static string get_PublishDObjectLevelPermissions();
    public static string get_ScriptCreate();
    public static string get_ScriptDrop();
    public static string get_ScriptCreateDrop();
    public static string get_ScriptCreateDropDescription();
    public static string get_TypesOfDataToScriptDesc();
    public static string get_TypesOfDataToScript();
    public static string get_DataOnly();
    public static string get_SchemaOnly();
    public static string get_SchemaAndData();
    public static string get_CreateMode();
    public static string get_DropMode();
    public static string get_GenerateScriptForDependentObjects();
    public static string get_Generatescriptfordependentobjectsofeachtablescripted();
    public static string get_PublishForDependentObjects();
    public static string get_Publishfordependentobjectsofeachtablescripted();
    public static string get_IncludeDescriptiveHeaders();
    public static string get_Includedescriptiveheadersforeachtablescripted();
    public static string get_IncludeScriptingParametersHeader();
    public static string get_IncludeScriptingParametersHeaderDescription();
    public static string get_ContinueScriptingOnError();
    public static string get_Continuescriptifanerroroccuredorotherwisestop();
    public static string get_AppendToFile();
    public static string get_Appendtofilethegeneratedscript();
    public static string get_ScriptExtendedProperties();
    public static string get_Scriptextendedpropertiesforeachtablescripted();
    public static string get_PublishExtendedProperties();
    public static string get_Publishextendedpropertiesforeachtablescripted();
    public static string get_ScriptOwnerForTheObjects();
    public static string get_ScriptOwner();
    public static string get_Prefixschemaforobjects();
    public static string get_SchemaQualify();
    public static string get_IncludeIfNotExists();
    public static string get_Scriptobjectswithifnotexistoption();
    public static string get_GenerateScriptCollation();
    public static string get_Scriptobjectswithcollation();
    public static string get_PublishCollation();
    public static string get_Publishobjectswithcollation();
    public static string get_Default();
    public static string get_ScriptChangeTracking();
    public static string get_ScriptChangeTrackingInformation();
    public static string get_ScriptDefaults();
    public static string get_ScriptDataCompression();
    public static string get_ScriptXmlCompression();
    public static string get_ScriptDataCompressionInformation();
    public static string get_ScriptXmlCompressionInformation();
    public static string get_PublishDefault();
    public static string get_PublishDefaults();
    public static string get_Onlyscript70compatiblefeaturesforeachtablescripted();
    public static string get_ScriptIndexes();
    public static string get_Scriptindexesforeachtablescripted();
    public static string get_PublishIndexes();
    public static string get_Publishindexesforeachtablescripted();
    public static string get_ScriptFullTextIndexes();
    public static string get_Scriptfulltextindexesforeachtablescripted();
    public static string get_PublishFullTextIndexes();
    public static string get_Publishfulltextindexesforeachtablescripted();
    public static string get_ScriptTriggers();
    public static string get_Scripttriggersforeachtablescripted();
    public static string get_PublishTriggers();
    public static string get_Publishtriggersforeachtablescripted();
    public static string get_ScriptPrimaryKeys();
    public static string get_Scriptprimarykeysforeachtablescripted();
    public static string get_PublishPrimaryKeys();
    public static string get_Publishprimarykeysforeachtablescripted();
    public static string get_ScriptUniqueKeys();
    public static string get_Scriptuniqueskeysforeachtablescripted();
    public static string get_PublishUniqueKeys();
    public static string get_Publishuniqueskeysforeachtablescripted();
    public static string get_ScriptForeignKeys();
    public static string get_Scriptforeignkeysforeachtablescripted();
    public static string get_PublishForeignKeys();
    public static string get_Publishforeignkeysforeachtablescripted();
    public static string get_ScriptCheckConstraints();
    public static string get_Scriptcheckconstraintsforeachtablescripted();
    public static string get_PublishCheckConstraints();
    public static string get_Publishcheckconstraintsforeachtablescripted();
    public static string get_ScriptConvertUDDT();
    public static string get_Generateconvertuddt();
    public static string get_ScriptStatistics();
    public static string get_generatescriptstatistics();
    public static string get_ScriptStatisticsNone();
    public static string get_ScriptStatisticsDDL();
    public static string get_ScriptStatisticsAll();
    public static string get_PublishStatistics();
    public static string get_Publishgeneratescriptstatistics();
    public static string get_PublishStatisticsNone();
    public static string get_PublishStatisticsDDL();
    public static string get_PublishStatisticsAll();
    public static string get_IncludeVarDecimal();
    public static string get_IncludeVarDecimalDescription();
    public static string get_Bindings();
    public static string get_BindingsDescription();
    public static string get_PublishIncludeVarDecimal();
    public static string get_PublishIncludeVarDecimalDescription();
    public static string get_ScriptDriIncludeSystemNames();
    public static string get_generateDriIncludeSystemNames();
    public static string get_ScriptAnsiPadding();
    public static string get_generateAnsiPadding();
    public static string get_ScriptDatabaseCreate();
    public static string get_genreatescriptdatabasecreate();
    public static string get_UseTransactionForPublish();
    public static string get_UseTransactionForPublishDesc();
    public static string get_GenerateCreateCommand();
    public static string get_GenerateDropCommand();
    public static string get_CompatibleFeatures();
    public static string get_CompatibleFeaturesDescription();
    public static string get_PublishCompatibleFeatures();
    public static string get_PublishCompatibleFeaturesDescription();
    public static string get_OnlyScript90CompatibleFeatures();
    public static string get_OnlyScript100CompatibleFeatures();
    public static string get_OnlyScript105CompatibleFeatures();
    public static string get_OnlyScript110CompatibleFeatures();
    public static string get_OnlyScript120CompatibleFeatures();
    public static string get_OnlyScript130CompatibleFeatures();
    public static string get_OnlyScript140CompatibleFeatures();
    public static string get_OnlyScript150CompatibleFeatures();
    public static string get_OnlyScript160CompatibleFeatures();
    public static string get_TargetEngineType();
    public static string get_TargetEngineTypeDescription();
    public static string get_TargetEngineEdition();
    public static string get_TargetEngineEditionDescription();
    public static string get_SingleInstanceEngineType();
    public static string get_SqlAzureEngineType();
    public static string get_PersonalEdition();
    public static string get_StandardEdition();
    public static string get_EnterpriseEdition();
    public static string get_ExpressEdition();
    public static string get_SqlAzureDatabaseEdition();
    public static string get_SqlDataWarehouseEdition();
    public static string get_StretchEdition();
    public static string get_SqlServerManagedInstanceEdition();
    public static string get_SqlServerOnDemandEdition();
    public static string get_SqlDatabaseEdgeEdition();
    public static string get_SqlAzureArcManagedInstanceEdition();
    public static string get_IncludeUnsupportedStatements();
    public static string get_IncludeUnsupportedStatementsDescription();
    public static string get_GenerateScriptProgressTitle();
    public static string get_PublishProgressTitle();
    public static string get_GenerateScriptTable();
    public static string get_GenerateScriptView();
    public static string get_GenerateScriptSP();
    public static string get_GenerateScriptUdf();
    public static string get_GenerateScriptUddt();
    public static string get_GenerateScriptUdtt();
    public static string get_GenerateScriptDefault();
    public static string get_GenerateScriptRule();
    public static string get_GenerateScriptAppRole();
    public static string get_GenerateScriptAssembly();
    public static string get_GenerateScriptDatabaseTrigger();
    public static string get_GenerateScriptDatabaseRole();
    public static string get_GenerateScriptSynonym();
    public static string get_GenerateScriptUser();
    public static string get_GenerateScriptXMLSchema();
    public static string get_GenerateScriptSchema();
    public static string get_GenerateScriptDatabase();
    public static string get_GenerateScriptPlanGuide();
    public static string get_GenerateScriptUserDefinedType();
    public static string get_GenerateScriptFullTextCatalog();
    public static string get_GenerateScriptUserDefinedAggregate();
    public static string get_GenerateScriptStatsWarning();
    public static string get_ProviderListTitle();
    public static string get_ConfiguredProviders();
    public static string get_MSAAConfiguredProviders();
    public static string get_ProviderName();
    public static string get_WebServiceAddress();
    public static string get_NewText();
    public static string get_EditText();
    public static string get_TestText();
    public static string get_DeleteText();
    public static string get_MSAANewText();
    public static string get_MSAAEditText();
    public static string get_MSAATestText();
    public static string get_MSAADeleteText();
    public static string get_ProviderDeleteMessage();
    public static string get_ProviderDeleteTitle();
    public static string get_TestTitleSuccess();
    public static string get_TestSuccessMessage();
    public static string get_TestTitleFailure();
    public static string get_TestFailureMessage();
    public static string get_TestFailureUsernamePasswordMessage();
    public static string get_ProviderListSaveChangeMessage();
    public static string get_ProviderListSaveChangeTitle();
    public static string get_ERROR_SaveFailedTitle();
    public static string get_ERROR_DeleteFailedTitle();
    public static string get_MSAAButtonPanel();
    public static string get_ProviderDetailTitle();
    public static string get_ProviderDetailProviderName();
    public static string get_MSAAProviderDetailProviderName();
    public static string get_ProviderDetailWebAdd();
    public static string get_MSAAProviderDetailWebAdd();
    public static string get_ProviderDetailWebSerAuth();
    public static string get_ProviderDetailWebSerUser();
    public static string get_ProviderDetailWebSerPassword();
    public static string get_ProviderDetailWebSerSavePassword();
    public static string get_ProviderDetailDatabaseGroup();
    public static string get_SetAsDefaultText();
    public static string get_MSAAProviderDetailWebSerUser();
    public static string get_MSAAProviderDetailWebSerPassword();
    public static string get_MSAAProviderDetailWebSerSavePassword();
    public static string get_MSAAProviderDetailDatabaseGroup();
    public static string get_MSAASetAsDefaultText();
    public static string get_DownloadConfigurationsText();
    public static string get_ProviderDetailDeleteMessage();
    public static string get_ProviderDetailDeleteTitle();
    public static string get_ProviderDetailConfirmDownloadTitle();
    public static string get_ProviderDetailConfirmDownloadText();
    public static string get_ProviderDetailDownloadSucceedTitle();
    public static string get_ProviderDetailDownloadSucceedText();
    public static string get_ProviderDetailDownloadFailedTitle();
    public static string get_ProviderDetailDownloadFailedNotConfigured();
    public static string get_ProviderDetailDownloadFailedCannotConnect();
    public static string get_ProviderDetailDownloadFailedUserPassword();
    public static string get_ProviderDetailSaveChangeMessage();
    public static string get_ProviderDetailSaveChangeTitle();
    public static string get_ProviderDetailEmptyProviderNameMessage();
    public static string get_ProviderDetailEmptyProviderNameMessageTitle();
    public static string get_ProviderDetailNewProvider();
    public static string get_DatabaseDetailTitle();
    public static string get_DatabaseDetailDatabaseName();
    public static string get_DatabaseDetailServerName();
    public static string get_MSAADatabaseDetailDatabaseName();
    public static string get_MSAADatabaseDetailServerName();
    public static string get_DatabaseDetailAuthentication();
    public static string get_DatabaseDetailUserName();
    public static string get_DatabaseDetailPassword();
    public static string get_DatabaseDetailSavePassword();
    public static string get_MSAADatabaseDetailUserName();
    public static string get_MSAADatabaseDetailPassword();
    public static string get_MSAADatabaseDetailSavePassword();
    public static string get_DatabaseDetailSaveChangeMessage();
    public static string get_DatabaseDetailSaveChangeTitle();
    public static string get_DatabaseDetailEmptyDatabaseNameMessage();
    public static string get_DatabaseDetailEmptyDatabaseNameMessageTitle();
    public static string get_DatabaseDetailNewDatabase();
    public static string get_RemoteCreditDialogTitle();
    public static string get_RemoteCreditSubTitle();
    public static string get_RemoteCreditProviderGroupText();
    public static string get_RemoteCreditDatabaseGroupText();
    public static string get_RemoteCreditProviderName();
    public static string get_RemoteCreditWebAdd();
    public static string get_RemoteCreditWebSerUser();
    public static string get_RemoteCreditWebSerPassword();
    public static string get_MSAARemoteCreditWebSerUser();
    public static string get_MSAARemoteCreditWebSerPassword();
    public static string get_RemoteCreditDatabaseName();
    public static string get_RemoteCreditServerName();
    public static string get_RemoteCreditUserName();
    public static string get_RemoteCreditPassword();
    public static string get_MSAARemoteCreditUserName();
    public static string get_MSAARemoteCreditPassword();
    public static string get_PublishOutputOptionTitle();
    public static string get_PublishOutputOptionSubTitle();
    public static string GenerateScriptProgressDiscovery(string databaseName);
    public static string GenerateScriptDBNotFound(string databaseName);
    public static string GenerateScriptNoObjects(string databaseName);
    public static string GenerateScriptFileExists(string fileName);
    public static string GenerateScriptInvalidDirectory(string directoryName);
    public static string GenarateScriptInvalidFile(string filename);
}
public class Microsoft.SqlServer.Management.SqlScriptPublish.SqlScriptPublishException : Exception {
    public SqlScriptPublishException(string message);
    public SqlScriptPublishException(string message, Exception innerException);
}
public class Microsoft.SqlServer.Management.SqlScriptPublish.SqlScriptPublishModel : object {
    [CompilerGeneratedAttribute]
private bool <AllowSystemObjects>k__BackingField;
    [CompilerGeneratedAttribute]
private EventHandler`1<ScriptEventArgs> ScriptProgress;
    [CompilerGeneratedAttribute]
private EventHandler`1<ScriptEventArgs> ScriptError;
    [CompilerGeneratedAttribute]
private EventHandler`1<ScriptItemsArgs> ScriptItemsCollected;
    internal static string ComponentName;
    private SqlQueryHandler sqlQueryHandler;
    private Server smoServer;
    private string databaseName;
    private UrnCollection selectedObjects;
    private bool scriptAllObjects;
    private bool skipCreateDatabase;
    private string rawScript;
    private OutputType outputType;
    private IScriptPublishOptions shellScriptingOptions;
    private SqlScriptOptions scriptAdvancedOptions;
    private Dictionary`2<Urn, int> urnItemCount;
    private HashSet`1<Urn> erroredItems;
    private int step;
    public string ServerName { get; }
    public string DatabaseName { get; }
    public UrnCollection SelectedObjects { get; }
    public bool ScriptAllObjects { get; public set; }
    public bool SkipCreateDatabase { get; public set; }
    public OutputType OutputType { get; public set; }
    public SqlScriptOptions AdvancedOptions { get; }
    public string RawScript { get; public set; }
    public bool AllowSystemObjects { get; public set; }
    internal Server Server { get; }
    internal IScriptPublishOptions ShellScriptingOptions { get; }
    public SqlScriptPublishModel(SqlConnectionInfo sqlConnectionInfo, string databaseName, IScriptPublishOptions shellScriptingOptions);
    public SqlScriptPublishModel(string connectionString);
    private void InitServer();
    public string get_ServerName();
    public string get_DatabaseName();
    public UrnCollection get_SelectedObjects();
    public bool get_ScriptAllObjects();
    public void set_ScriptAllObjects(bool value);
    public bool get_SkipCreateDatabase();
    public void set_SkipCreateDatabase(bool value);
    public OutputType get_OutputType();
    public void set_OutputType(OutputType value);
    public SqlScriptOptions get_AdvancedOptions();
    public string get_RawScript();
    public void set_RawScript(string value);
    [CompilerGeneratedAttribute]
public bool get_AllowSystemObjects();
    [CompilerGeneratedAttribute]
public void set_AllowSystemObjects(bool value);
    public void GenerateScript(ScriptOutputOptions outputOptions);
    public IEnumerable`1<DatabaseObjectType> GetDatabaseObjectTypes();
    public IEnumerable`1<KeyValuePair`2<string, string>> EnumChildrenForDatabaseObjectType(DatabaseObjectType objectType);
    [CompilerGeneratedAttribute]
public void add_ScriptProgress(EventHandler`1<ScriptEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_ScriptProgress(EventHandler`1<ScriptEventArgs> value);
    [CompilerGeneratedAttribute]
public void add_ScriptError(EventHandler`1<ScriptEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_ScriptError(EventHandler`1<ScriptEventArgs> value);
    [CompilerGeneratedAttribute]
public void add_ScriptItemsCollected(EventHandler`1<ScriptItemsArgs> value);
    [CompilerGeneratedAttribute]
public void remove_ScriptItemsCollected(EventHandler`1<ScriptItemsArgs> value);
    internal Server get_Server();
    internal IScriptPublishOptions get_ShellScriptingOptions();
    public void RefreshDatabaseCache();
    internal void OnScriptError(object sender, ScriptingErrorEventArgs e);
    internal void OnScriptingProgress(object sender, ScriptingProgressEventArgs e);
    internal void OnObjectScriptingProgress(object sender, ObjectScriptingEventArgs e);
    private SqlScriptOptions GetAdvancedScriptingOptions();
    private void ValidateUrnList(IEnumerable`1<Urn> urnList);
    private Urn GetSelectedItem(Urn urn);
}
[TypeConverterAttribute("Microsoft.SqlServer.Management.Sdk.Sfc.LocalizableTypeConverter")]
[LocalizedPropertyResourcesAttribute("Microsoft.SqlServer.Management.SqlScriptPublish.SqlScriptOptionsSR")]
internal class Microsoft.SqlServer.Management.SqlScriptPublish.SqlTransferOptions : SqlScriptOptions {
    private BooleanTypeOptions scriptDatabaseCreate;
    [DisplayNameKeyAttribute("ScriptDatabaseCreate")]
[DisplayDescriptionKeyAttribute("genreatescriptdatabasecreate")]
[DisplayCategoryKeyAttribute("General")]
[BrowsableAttribute("False")]
public BooleanTypeOptions ScriptDatabaseCreate { get; public set; }
    public SqlTransferOptions(Version version);
    public BooleanTypeOptions get_ScriptDatabaseCreate();
    public void set_ScriptDatabaseCreate(BooleanTypeOptions value);
}
[CompilerGeneratedAttribute]
internal class Microsoft.SqlServer.Management.SqlScriptPublish.SR : object {
    public static CultureInfo Culture { get; public set; }
    public static string Table { get; }
    public static string View { get; }
    public static string StoredProcedure { get; }
    public static string UserDefinedFunction { get; }
    public static string UserDefinedDataType { get; }
    public static string UserDefinedTableType { get; }
    public static string SecurityPolicy { get; }
    public static string Default { get; }
    public static string Rule { get; }
    public static string ApplicationRole { get; }
    public static string SqlAssembly { get; }
    public static string DdlTrigger { get; }
    public static string DatabaseRole { get; }
    public static string Synonym { get; }
    public static string User { get; }
    public static string XmlSchemaCollection { get; }
    public static string Schema { get; }
    public static string PlanGuide { get; }
    public static string UserDefinedType { get; }
    public static string UserDefinedAggregate { get; }
    public static string FullTextCatalog { get; }
    public static string None { get; }
    public static string InProgress { get; }
    public static string Success { get; }
    public static string Warning { get; }
    public static string Error { get; }
    public static string ERROR_ScriptingFailed { get; }
    public static string InvalidScriptPreText { get; }
    public static string InvalidScriptPostText { get; }
    public static string ERROR_PublishDataInternalError { get; }
    public static string ERROR_PublishDataUdtError { get; }
    public static string ERROR_RowExceedsMaxRequestSize { get; }
    public static string ERROR_PublishScriptFailed { get; }
    public static CultureInfo get_Culture();
    public static void set_Culture(CultureInfo value);
    public static string get_Table();
    public static string get_View();
    public static string get_StoredProcedure();
    public static string get_UserDefinedFunction();
    public static string get_UserDefinedDataType();
    public static string get_UserDefinedTableType();
    public static string get_SecurityPolicy();
    public static string get_Default();
    public static string get_Rule();
    public static string get_ApplicationRole();
    public static string get_SqlAssembly();
    public static string get_DdlTrigger();
    public static string get_DatabaseRole();
    public static string get_Synonym();
    public static string get_User();
    public static string get_XmlSchemaCollection();
    public static string get_Schema();
    public static string get_PlanGuide();
    public static string get_UserDefinedType();
    public static string get_UserDefinedAggregate();
    public static string get_FullTextCatalog();
    public static string get_None();
    public static string get_InProgress();
    public static string get_Success();
    public static string get_Warning();
    public static string get_Error();
    public static string get_ERROR_ScriptingFailed();
    public static string get_InvalidScriptPreText();
    public static string get_InvalidScriptPostText();
    public static string get_ERROR_PublishDataInternalError();
    public static string get_ERROR_PublishDataUdtError();
    public static string get_ERROR_RowExceedsMaxRequestSize();
    public static string get_ERROR_PublishScriptFailed();
    public static string UnableToConnect(string server);
    public static string UnableToFind(string object);
    public static string ValueIsNull(string str);
    public static string ValueIsNullOrEmpty(string str);
    public static string InvalidObjectType(string typeName);
    public static string InvalidObjectTypeForVersion(string name, string type);
    public static string ERROR_UnsupportedDatabaseEngineEditionAndDatabaseEngineTypeOptionCombination(string databaseEngineEdition, string databaseEngineType);
    public static string ERROR_UnexpectedDatabaseEngineTypeDetected(string databaseEngineType);
    public static string ERROR_UnexpectedDatabaseEngineEditionDetected(string databaseEngineEdition);
}
internal class Microsoft.SqlServer.Management.SqlScriptPublish.TableSelectStatement : object {
    private Table table;
    private bool hasWritableColumns;
    private bool hasUserDefinedType;
    private string columnNames;
    private string tableName;
    internal bool HasUserDefinedType { get; }
    internal bool HasWritableColumns { get; }
    internal string TableName { get; }
    public TableSelectStatement(Table table);
    internal bool get_HasUserDefinedType();
    internal bool get_HasWritableColumns();
    internal string get_TableName();
    internal string GetSelectStatement();
}
