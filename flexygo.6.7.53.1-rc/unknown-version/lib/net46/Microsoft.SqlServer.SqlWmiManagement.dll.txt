public class Microsoft.SqlServer.Management.Smo.Wmi.ClientProtocol : ProtocolBase {
    private NetLibInfo netLibInfo;
    public ManagedComputer Parent { get; }
    public string DisplayName { get; }
    public bool IsEnabled { get; public set; }
    public string NetworkLibrary { get; }
    public int Order { get; public set; }
    internal static string UrnSuffix { get; }
    public NetLibInfo NetLibInfo { get; }
    internal ClientProtocol(WmiCollectionBase parentColl, string name);
    public ManagedComputer get_Parent();
    internal virtual PropertyMetadataProvider GetPropertyMetadataProvider();
    public string get_DisplayName();
    public bool get_IsEnabled();
    public void set_IsEnabled(bool value);
    public string get_NetworkLibrary();
    public int get_Order();
    public void set_Order(int value);
    internal static string get_UrnSuffix();
    protected virtual ManagementObject GetManagementObject();
    protected virtual ManagementObject GetPropertyManagementObject(ProtocolProperty pp);
    protected virtual ProtocolPropertyCollection CreateProtocolPropertyCollection();
    protected virtual ProtocolProperty GetPropertyObject(PropertyCollection properties, DataRow dr, object propValue);
    public NetLibInfo get_NetLibInfo();
    internal bool RefreshNetLibInfo();
    public virtual void Refresh();
}
[DefaultMemberAttribute("Item")]
public class Microsoft.SqlServer.Management.Smo.Wmi.ClientProtocolCollection : WmiCollectionBase {
    public ClientProtocol Item { get; }
    public ClientProtocol Item { get; }
    public int Count { get; }
    internal ClientProtocolCollection(WmiSmoObject parentInstance);
    public bool Contains(string key);
    public ClientProtocol get_Item(int index);
    internal ClientProtocol GetObjectByIndex(int index);
    public ClientProtocol get_Item(string name);
    internal ClientProtocol GetObjectByName(string name);
    internal object InitializeChildObject(string name);
    internal void InitializeChildCollection();
    public sealed virtual int get_Count();
    public void CopyTo(ClientProtocol[] array, int index);
    private sealed virtual override void System.Collections.ICollection.CopyTo(Array array, int index);
    public sealed virtual IEnumerator GetEnumerator();
}
public class Microsoft.SqlServer.Management.Smo.Wmi.ClientProtocolProperty : ProtocolProperty {
    private UInt32 index;
    internal UInt32 Index { get; internal set; }
    internal ClientProtocolProperty(Property p);
    internal UInt32 get_Index();
    internal void set_Index(UInt32 value);
}
public class Microsoft.SqlServer.Management.Smo.Wmi.ClientProtocolPropertyCollection : ProtocolPropertyCollection {
    internal virtual void Add(ProtocolProperty property);
}
public class Microsoft.SqlServer.Management.Smo.Wmi.IPAddressProperty : ProtocolProperty {
    internal IPAddressProperty(Property p);
}
public class Microsoft.SqlServer.Management.Smo.Wmi.IPAddressPropertyCollection : ProtocolPropertyCollection {
    internal virtual void Add(ProtocolProperty property);
}
public class Microsoft.SqlServer.Management.Smo.Wmi.ManagedComputer : WmiSmoObject {
    private IList`1<ManagementPath> managementPaths;
    private WmiConnectionInfo m_WmiConnectionInfo;
    private ManagementScope m_ManagementScope;
    private ServiceCollection m_Services;
    private ClientProtocolCollection m_ClientProtocols;
    private ServerInstanceCollection serverInstances;
    private ServerAliasCollection m_ServerAliases;
    public WmiConnectionInfo ConnectionSettings { get; }
    internal static string UrnSuffix { get; }
    internal ManagementScope ManagementScope { get; }
    public ServiceCollection Services { get; }
    public ClientProtocolCollection ClientProtocols { get; }
    public ServerInstanceCollection ServerInstances { get; }
    public ServerAliasCollection ServerAliases { get; }
    public ManagedComputer(string machineName);
    public ManagedComputer(string machineName, string userName, string password);
    public ManagedComputer(string machineName, string userName, string password, ProviderArchitecture providerArchitecture);
    internal static IList`1<ManagementPath> GetPossibleManagementPaths(string machineName);
    internal virtual PropertyMetadataProvider GetPropertyMetadataProvider();
    private void Init(string machineName);
    public WmiConnectionInfo get_ConnectionSettings();
    internal static string get_UrnSuffix();
    public WmiSmoObject GetSmoObject(Urn urn);
    private WmiSmoObject GetSmoObjectRec(Urn urn);
    internal ManagementScope get_ManagementScope();
    private Exception TryConnectUsingPath(ManagementPath path, Boolean& unrecoverableException);
    private void TryConnect();
    public ServiceCollection get_Services();
    public ClientProtocolCollection get_ClientProtocols();
    public ServerInstanceCollection get_ServerInstances();
    public ServerAliasCollection get_ServerAliases();
}
public class Microsoft.SqlServer.Management.Smo.Wmi.NetLibInfo : object {
    internal string fileName;
    internal string version;
    internal DateTime date;
    internal int size;
    public string FileName { get; }
    public string Version { get; }
    public DateTime Date { get; }
    public int Size { get; }
    public string get_FileName();
    public string get_Version();
    public DateTime get_Date();
    public int get_Size();
}
public abstract class Microsoft.SqlServer.Management.Smo.Wmi.ProtocolBase : WmiSmoObject {
    internal ProtocolPropertyCollection m_protocolProperties;
    public ProtocolPropertyCollection ProtocolProperties { get; }
    internal ProtocolBase(WmiCollectionBase parentColl, string name);
    protected abstract virtual ManagementObject GetManagementObject();
    public sealed virtual void Alter();
    internal virtual void AlterImplWorker();
    public ProtocolPropertyCollection get_ProtocolProperties();
    public virtual void Refresh();
}
public class Microsoft.SqlServer.Management.Smo.Wmi.ProtocolProperty : Property {
    private UInt32 propertyType;
    internal UInt32 PropertyType { get; internal set; }
    internal ProtocolProperty(Property p);
    internal UInt32 get_PropertyType();
    internal void set_PropertyType(UInt32 value);
}
[DefaultMemberAttribute("Item")]
public abstract class Microsoft.SqlServer.Management.Smo.Wmi.ProtocolPropertyCollection : object {
    internal SortedList sl;
    public int Count { get; }
    public bool IsSynchronized { get; }
    public object SyncRoot { get; }
    public ProtocolProperty Item { get; }
    public ProtocolProperty Item { get; }
    public void CopyTo(ProtocolProperty[] array, int index);
    private sealed virtual override void System.Collections.ICollection.CopyTo(Array array, int index);
    public sealed virtual IEnumerator GetEnumerator();
    internal abstract virtual void Add(ProtocolProperty property);
    internal void Remove(string name);
    public bool Contains(string name);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsSynchronized();
    public sealed virtual object get_SyncRoot();
    internal void SetAllDirty(bool bVal);
    internal void SetAllRetrieved(bool bVal);
    internal void Update(string propName, object value);
    internal void Clear();
    internal bool ExistAndDirty(string propname);
    internal object GetIfDirty(string propname);
    internal ProtocolProperty LookupName(string name);
    public ProtocolProperty get_Item(string name);
    public ProtocolProperty get_Item(int index);
}
public enum Microsoft.SqlServer.Management.Smo.Wmi.ProviderArchitecture : Enum {
    public int value__;
    public static ProviderArchitecture Default;
    public static ProviderArchitecture Use32bit;
    public static ProviderArchitecture Use64bit;
}
public class Microsoft.SqlServer.Management.Smo.Wmi.ServerAlias : WmiSmoObject {
    public ManagedComputer Parent { get; public set; }
    public string ConnectionString { get; public set; }
    public string ProtocolName { get; public set; }
    public string ServerName { get; public set; }
    internal static string UrnSuffix { get; }
    internal ServerAlias(WmiCollectionBase parentColl, string name);
    public ServerAlias(ManagedComputer managedComputer, string name);
    public ManagedComputer get_Parent();
    public void set_Parent(ManagedComputer value);
    internal virtual PropertyMetadataProvider GetPropertyMetadataProvider();
    public string get_ConnectionString();
    public void set_ConnectionString(string value);
    public string get_ProtocolName();
    public void set_ProtocolName(string value);
    public string get_ServerName();
    public void set_ServerName(string value);
    internal static string get_UrnSuffix();
    public sealed virtual void Create();
    private void CreateImplWorker();
    private void SetMOProp(ManagementObject mo, string moPropName, string propName);
    public sealed virtual void Drop();
    private void DropImplWorker();
}
[DefaultMemberAttribute("Item")]
public class Microsoft.SqlServer.Management.Smo.Wmi.ServerAliasCollection : WmiCollectionBase {
    public ServerAlias Item { get; }
    public ServerAlias Item { get; }
    public int Count { get; }
    internal ServerAliasCollection(WmiSmoObject parentInstance);
    public bool Contains(string key);
    public ServerAlias get_Item(int index);
    internal ServerAlias GetObjectByIndex(int index);
    public ServerAlias get_Item(string name);
    internal ServerAlias GetObjectByName(string name);
    internal object InitializeChildObject(string name);
    internal void InitializeChildCollection();
    public sealed virtual int get_Count();
    public void CopyTo(ServerAlias[] array, int index);
    private sealed virtual override void System.Collections.ICollection.CopyTo(Array array, int index);
    public sealed virtual IEnumerator GetEnumerator();
}
public class Microsoft.SqlServer.Management.Smo.Wmi.ServerInstance : WmiSmoObject {
    private ServerProtocolCollection m_ServerProtocols;
    public ManagedComputer Parent { get; }
    internal static string UrnSuffix { get; }
    public ServerProtocolCollection ServerProtocols { get; }
    internal ServerInstance(WmiCollectionBase parentColl, string name);
    public ManagedComputer get_Parent();
    internal virtual PropertyMetadataProvider GetPropertyMetadataProvider();
    internal static string get_UrnSuffix();
    public ServerProtocolCollection get_ServerProtocols();
}
[DefaultMemberAttribute("Item")]
public class Microsoft.SqlServer.Management.Smo.Wmi.ServerInstanceCollection : WmiCollectionBase {
    public ServerInstance Item { get; }
    public ServerInstance Item { get; }
    public int Count { get; }
    internal ServerInstanceCollection(WmiSmoObject parentInstance);
    public bool Contains(string key);
    public ServerInstance get_Item(int index);
    internal ServerInstance GetObjectByIndex(int index);
    public ServerInstance get_Item(string name);
    internal ServerInstance GetObjectByName(string name);
    internal object InitializeChildObject(string name);
    internal void InitializeChildCollection();
    public sealed virtual int get_Count();
    public void CopyTo(ServerInstance[] array, int index);
    private sealed virtual override void System.Collections.ICollection.CopyTo(Array array, int index);
    public sealed virtual IEnumerator GetEnumerator();
}
public class Microsoft.SqlServer.Management.Smo.Wmi.ServerIPAddress : WmiSmoObject {
    internal IPAddressPropertyCollection m_protocolProperties;
    public ServerProtocol Parent { get; }
    internal static string UrnSuffix { get; }
    public IPAddressPropertyCollection IPAddressProperties { get; }
    public IPAddress IPAddress { get; }
    internal ServerIPAddress(WmiCollectionBase parentColl, string name);
    public ServerProtocol get_Parent();
    internal virtual PropertyMetadataProvider GetPropertyMetadataProvider();
    internal static string get_UrnSuffix();
    public IPAddressPropertyCollection get_IPAddressProperties();
    public IPAddress get_IPAddress();
    protected virtual ProtocolPropertyCollection CreateProtocolPropertyCollection();
    protected virtual ProtocolProperty GetPropertyObject(PropertyCollection properties, DataRow dr, object propValue);
    protected virtual ManagementObject GetPropertyManagementObject(ProtocolProperty pp);
    internal void AlterImplWorker();
}
[DefaultMemberAttribute("Item")]
public class Microsoft.SqlServer.Management.Smo.Wmi.ServerIPAddressCollection : WmiCollectionBase {
    public ServerIPAddress Item { get; }
    public ServerIPAddress Item { get; }
    public int Count { get; }
    internal ServerIPAddressCollection(WmiSmoObject parentInstance);
    public bool Contains(string key);
    public ServerIPAddress get_Item(int index);
    internal ServerIPAddress GetObjectByIndex(int index);
    public ServerIPAddress get_Item(string name);
    internal ServerIPAddress GetObjectByName(string name);
    internal object InitializeChildObject(string name);
    internal void InitializeChildCollection();
    public sealed virtual int get_Count();
    public void CopyTo(ServerIPAddress[] array, int index);
    private sealed virtual override void System.Collections.ICollection.CopyTo(Array array, int index);
    public sealed virtual IEnumerator GetEnumerator();
}
public class Microsoft.SqlServer.Management.Smo.Wmi.ServerProtocol : ProtocolBase {
    private ServerIPAddressCollection ipAddressCollection;
    public ServerInstance Parent { get; }
    public string DisplayName { get; }
    public bool HasMultiIPAddresses { get; }
    public bool IsEnabled { get; public set; }
    internal static string UrnSuffix { get; }
    public ServerIPAddressCollection IPAddresses { get; }
    internal ServerProtocol(WmiCollectionBase parentColl, string name);
    public ServerInstance get_Parent();
    internal virtual PropertyMetadataProvider GetPropertyMetadataProvider();
    public string get_DisplayName();
    public bool get_HasMultiIPAddresses();
    public bool get_IsEnabled();
    public void set_IsEnabled(bool value);
    internal static string get_UrnSuffix();
    public ServerIPAddressCollection get_IPAddresses();
    protected virtual ManagementObject GetManagementObject();
    protected virtual ManagementObject GetPropertyManagementObject(ProtocolProperty pp);
    protected virtual ProtocolPropertyCollection CreateProtocolPropertyCollection();
    protected virtual ProtocolProperty GetPropertyObject(PropertyCollection properties, DataRow dr, object propValue);
    internal virtual void AlterImplWorker();
}
[DefaultMemberAttribute("Item")]
public class Microsoft.SqlServer.Management.Smo.Wmi.ServerProtocolCollection : WmiCollectionBase {
    public ServerProtocol Item { get; }
    public ServerProtocol Item { get; }
    public int Count { get; }
    internal ServerProtocolCollection(WmiSmoObject parentInstance);
    public bool Contains(string key);
    public ServerProtocol get_Item(int index);
    internal ServerProtocol GetObjectByIndex(int index);
    public ServerProtocol get_Item(string name);
    internal ServerProtocol GetObjectByName(string name);
    protected sealed virtual void Add(WmiSmoObject wmiObj);
    protected sealed virtual void Remove(string objname);
    internal object InitializeChildObject(string name);
    internal void InitializeChildCollection();
    public sealed virtual int get_Count();
    public void CopyTo(ServerProtocol[] array, int index);
    private sealed virtual override void System.Collections.ICollection.CopyTo(Array array, int index);
    public sealed virtual IEnumerator GetEnumerator();
}
public class Microsoft.SqlServer.Management.Smo.Wmi.ServerProtocolProperty : ProtocolProperty {
    internal ServerProtocolProperty(Property p);
}
public class Microsoft.SqlServer.Management.Smo.Wmi.ServerProtocolPropertyCollection : ProtocolPropertyCollection {
    internal virtual void Add(ProtocolProperty property);
}
public class Microsoft.SqlServer.Management.Smo.Wmi.Service : WmiSmoObject {
    [CompilerGeneratedAttribute]
private CompletedEventHandler ManagementStateChange;
    internal StringCollection dependencies;
    internal PropertyCollection advancedProperties;
    public ManagedComputer Parent { get; }
    public bool AcceptsPause { get; }
    public bool AcceptsStop { get; }
    public string Description { get; }
    public string DisplayName { get; }
    public ServiceErrorControl ErrorControl { get; }
    public int ExitCode { get; }
    public string PathName { get; }
    public int ProcessId { get; }
    public string ServiceAccount { get; }
    public ServiceState ServiceState { get; }
    public ServiceStartMode StartMode { get; public set; }
    public ManagedServiceType Type { get; }
    internal static string UrnSuffix { get; }
    public bool IsHadrEnabled { get; }
    public string StartupParameters { get; public set; }
    public StringCollection Dependencies { get; }
    public PropertyCollection AdvancedProperties { get; }
    internal Service(WmiCollectionBase parentColl, string name);
    public ManagedComputer get_Parent();
    internal virtual PropertyMetadataProvider GetPropertyMetadataProvider();
    public bool get_AcceptsPause();
    public bool get_AcceptsStop();
    public string get_Description();
    public string get_DisplayName();
    public ServiceErrorControl get_ErrorControl();
    public int get_ExitCode();
    public string get_PathName();
    public int get_ProcessId();
    public string get_ServiceAccount();
    public ServiceState get_ServiceState();
    public ServiceStartMode get_StartMode();
    public void set_StartMode(ServiceStartMode value);
    public ManagedServiceType get_Type();
    internal PropertyMetadataProvider GetPropertyMetadataProviderAdvanced();
    internal static string get_UrnSuffix();
    [CompilerGeneratedAttribute]
public void add_ManagementStateChange(CompletedEventHandler value);
    [CompilerGeneratedAttribute]
public void remove_ManagementStateChange(CompletedEventHandler value);
    public sealed virtual void Alter();
    private void AlterImplWorker();
    private ManagementObject GetManagementObject();
    private void InvokeServiceMethod(string methodName);
    public void Start();
    public void Stop();
    public void Pause();
    public void Resume();
    public void ChangeHadrServiceSetting(bool enable);
    public bool get_IsHadrEnabled();
    private ManagementObject GetHADRManagementObject();
    public void SetServiceAccount(string userName, string password);
    public void ChangePassword(string oldPassword, string newPassword);
    internal void OnCompletedMessage(object sender, CompletedEventArgs e);
    private ManagementObject GetPropertyManagementObject(string propertyName);
    public string get_StartupParameters();
    public void set_StartupParameters(string value);
    public StringCollection get_Dependencies();
    private StringCollection GetDependencies();
    public PropertyCollection get_AdvancedProperties();
    private PropertyCollection GetAdvancedProperties();
    public virtual void Refresh();
}
[DefaultMemberAttribute("Item")]
public class Microsoft.SqlServer.Management.Smo.Wmi.ServiceCollection : WmiCollectionBase {
    public Service Item { get; }
    public Service Item { get; }
    public int Count { get; }
    internal ServiceCollection(WmiSmoObject parentInstance);
    public bool Contains(string key);
    public Service get_Item(int index);
    internal Service GetObjectByIndex(int index);
    public Service get_Item(string name);
    internal Service GetObjectByName(string name);
    internal object InitializeChildObject(string name);
    internal void InitializeChildCollection();
    public sealed virtual int get_Count();
    public void CopyTo(Service[] array, int index);
    private sealed virtual override void System.Collections.ICollection.CopyTo(Array array, int index);
    public sealed virtual IEnumerator GetEnumerator();
}
public abstract class Microsoft.SqlServer.Management.Smo.Wmi.WmiCollectionBase : object {
    private WmiSmoObject parentInstance;
    protected internal SortedList innerColl;
    protected internal bool initialized;
    public bool IsSynchronized { get; }
    public object SyncRoot { get; }
    internal WmiSmoObject ParentInstance { get; }
    internal WmiCollectionBase(WmiSmoObject parentInstance);
    public sealed virtual bool get_IsSynchronized();
    public sealed virtual object get_SyncRoot();
    internal WmiSmoObject get_ParentInstance();
    protected virtual void Add(WmiSmoObject wmiObj);
    internal void AddInternal(WmiSmoObject wmiObj);
    protected virtual void Remove(string objname);
    internal void RemoveInternal(string key);
}
public class Microsoft.SqlServer.Management.Smo.Wmi.WmiConnectionInfo : object {
    private ProviderArchitecture m_ProviderArchitecture;
    private ManagementScope managementScope;
    private ManagedComputer parent;
    internal ConnectionOptions Options { get; }
    public TimeSpan Timeout { get; public set; }
    public string MachineName { get; public set; }
    public string Username { get; public set; }
    public ProviderArchitecture ProviderArchitecture { get; public set; }
    internal WmiConnectionInfo(ManagementScope scope, ManagedComputer parent);
    internal ConnectionOptions get_Options();
    public TimeSpan get_Timeout();
    public void set_Timeout(TimeSpan value);
    public string get_MachineName();
    public void set_MachineName(string value);
    public string get_Username();
    public void set_Username(string value);
    public void SetPassword(string password);
    public ProviderArchitecture get_ProviderArchitecture();
    public void set_ProviderArchitecture(ProviderArchitecture value);
}
internal class Microsoft.SqlServer.Management.Smo.Wmi.WMIProxy : object {
    private Enumerator m_EnumProxy;
    private ManagementScope m_scope;
    internal WMIProxy(ManagementScope scope);
    internal DataSet ProcessRequest(Request req);
    private object ExecProcess(object request);
}
public abstract class Microsoft.SqlServer.Management.Smo.Wmi.WmiSmoObject : SmoObjectBase {
    private WmiCollectionBase parentColl;
    private ManagedComputer m_ManagedComputer;
    private string name;
    internal PropertyCollection m_properties;
    private WMIProxy proxy;
    internal WmiCollectionBase ParentColl { get; }
    public Urn Urn { get; }
    public string Name { get; public set; }
    public PropertyCollection Properties { get; }
    internal WMIProxy Proxy { get; }
    protected internal WmiSmoObject(WmiCollectionBase parentColl, string name);
    protected internal WmiSmoObject(string name);
    internal virtual PropertyMetadataProvider GetPropertyMetadataProvider();
    private void Init();
    internal WmiCollectionBase get_ParentColl();
    internal ManagedComputer GetManagedComputer();
    public virtual Urn get_Urn();
    public string get_Name();
    public void set_Name(string value);
    protected internal void SetParentImpl(WmiSmoObject newParent);
    protected void UpdateObjectState();
    protected internal void SetName(string name);
    internal virtual object OnPropertyMissing(string propname, bool useDefaultValue);
    public bool Initialize();
    protected virtual bool ImplInitialize(String[] fields, OrderBy[] orderby);
    internal void AddObjectProps(DataColumnCollection columns, DataRow dr);
    public PropertyCollection get_Properties();
    protected internal bool IsObjectInitialized();
    public virtual void Refresh();
    protected void CheckObjectState();
    internal WMIProxy get_Proxy();
    internal void EnumChildren(string childTypeName, WmiCollectionBase coll);
    internal static void Trace(string traceText);
    protected void InvokeMgmtMethod(ManagementObject mo, string methodName, Object[] parameters);
    protected void InvokeMgmtMethod(ManagementObject mo, ManagementOperationObserver observer, string methodName, Object[] parameters);
    protected virtual ProtocolPropertyCollection CreateProtocolPropertyCollection();
    protected virtual ProtocolProperty GetPropertyObject(PropertyCollection properties, DataRow dr, object propValue);
    protected ProtocolPropertyCollection GetProtocolPropertyCollection();
    protected virtual ManagementObject GetPropertyManagementObject(ProtocolProperty pp);
    protected void AlterProtocolProperties(ProtocolPropertyCollection protocolProperties);
}
[CompilerGeneratedAttribute]
internal class Microsoft.SqlServer.Management.Smo.WmiMgmtImpl : object {
    public static CultureInfo Culture { get; public set; }
    public static string LoginPropertyNotSet { get; }
    public static string LoginEnable { get; }
    public static string LoginDisable { get; }
    public static string CannotEnableViewTrigger { get; }
    public static string MissingBackupDevices { get; }
    public static string MissingBackupDeviceType { get; }
    public static string UnknownShrinkType { get; }
    public static string CannotChangePrimary { get; }
    public static string OnlyOnePrimaryFile { get; }
    public static string MustSpecifyGrowth { get; }
    public static string WrongPercentageGrowth { get; }
    public static string WrongSize { get; }
    public static string TooFewFiles { get; }
    public static string UnknownChild { get; }
    public static string InvalidGranteeList { get; }
    public static string DatabaseAlreadyExists { get; }
    public static string ReasonTextIsEncrypted { get; }
    public static string ReasonPropertyIsNotSupportedOnCurrentServerVersion { get; }
    public static string SqlInnerException { get; }
    public static string InnerException { get; }
    public static string InnerWmiException { get; }
    public static string UnknownError { get; }
    public static string OneFilePageSupported { get; }
    public static string SupportedOnlyBelow90 { get; }
    public static string SupportedOnlyOn90 { get; }
    public static string SupportedOnlyOn80 { get; }
    public static string MustSpecifyOneParameter { get; }
    public static string NeedPSParams { get; }
    public static string ViewCannotHaveKeys { get; }
    public static string InvalidAcctName { get; }
    public static string OperationOnlyInPendingState { get; }
    public static string OperationNotInPendingState { get; }
    public static string NotXmlIndexOnView { get; }
    public static string OneColumnInXmlIndex { get; }
    public static string NoXmlIndexUnique { get; }
    public static string NoXmlIndexClustered { get; }
    public static string Version80SP3Only { get; }
    public static string CantSetDefaultFalse { get; }
    public static string TimeoutMustBePositive { get; }
    public static string ViewColumnsCannotBeModified { get; }
    public static string SystemMessageReadOnly { get; }
    public static string ViewFragInfoNotInV7 { get; }
    public static string DtsNotInstalled { get; }
    public static string NSNotInstalled { get; }
    public static string InvalidNSOperation { get; }
    public static string NSNotConnectedToServer { get; }
    public static string InvalidThreadPoolSize { get; }
    public static string InvalidQuantumLimit { get; }
    public static string InvalidQuantumDuration { get; }
    public static string InvalidThrottle { get; }
    public static string InvalidFailuresBeforeLoggingEvent { get; }
    public static string InvalidFailuresBeforeAbort { get; }
    public static string InvalidMulticastRecipientLimit { get; }
    public static string InvalidNotificationClassBatchSize { get; }
    public static string StartTimeGreaterThanADay { get; }
    public static string NoPermissions { get; }
    public static string PrimaryFgMustHaveFiles { get; }
    public static string NeedToSetParent { get; }
    public static string ErrorInCreatingState { get; }
    public static string BackupFailed { get; }
    public static string RestoreFailed { get; }
    public static string SetPasswordError { get; }
    public static string PassPhraseAndIdentityNotSpecified { get; }
    public static string PassPhraseNotSpecified { get; }
    public static string NotEnoughRights { get; }
    public static string NoUrnSuffix { get; }
    public static string GetParentFailed { get; }
    public static string ParentNull { get; }
    public static string ExecutionContextPrincipalIsNotSpecified { get; }
    public static string ServiceError0 { get; }
    public static string ServiceError1 { get; }
    public static string ServiceError2 { get; }
    public static string ServiceError3 { get; }
    public static string ServiceError4 { get; }
    public static string ServiceError5 { get; }
    public static string ServiceError6 { get; }
    public static string ServiceError7 { get; }
    public static string ServiceError8 { get; }
    public static string ServiceError9 { get; }
    public static string ServiceError10 { get; }
    public static string ServiceError11 { get; }
    public static string ServiceError12 { get; }
    public static string ServiceError13 { get; }
    public static string ServiceError14 { get; }
    public static string ServiceError15 { get; }
    public static string ServiceError16 { get; }
    public static string ServiceError17 { get; }
    public static string ServiceError18 { get; }
    public static string ServiceError19 { get; }
    public static string ServiceError20 { get; }
    public static string ServiceError21 { get; }
    public static string ServiceError22 { get; }
    public static string ServiceError23 { get; }
    public static string ServiceError24 { get; }
    public static string UnsupportedFeatureSqlAgent { get; }
    public static string UnsupportedFeatureSqlMail { get; }
    public static string UnsupportedFeatureServiceBroker { get; }
    public static string UnsupportedFeatureFullText { get; }
    public static string CannotSubscribe { get; }
    public static string CannotStartSubscription { get; }
    public static string InnerRegSvrException { get; }
    public static string SqlServerTypeName { get; }
    public static string ColumnsMustBeSpecified { get; }
    public static string PasswdModiOnlyForStandardLogin { get; }
    public static string DenyLoginModiNotForStandardLogin { get; }
    public static string CannotCreateExtendedPropertyWithoutSchema { get; }
    public static string InvalidSchema { get; }
    public static string FailedToChangeSchema { get; }
    public static string InvalidUrnServerLevel { get; }
    public static string ServerLevelMustBePresent { get; }
    public static string OperationInProgress { get; }
    public static string CannotChangePassword { get; }
    public static string OperationNotSupportedWhenPartOfAUDF { get; }
    public static string ReasonIntextMode { get; }
    public static string ReasonNotIntextMode { get; }
    public static string CollectionCannotBeModified { get; }
    public static string KeyOptionsIncorrect { get; }
    public static string TableOrViewParentForUpdateStatistics { get; }
    public static string ServerSphinx { get; }
    public static string ServerShiloh { get; }
    public static string ServerYukon { get; }
    public static string PropertyAvailable { get; }
    public static string ServerPropertyMustBeSetForOlap { get; }
    public static string InvalidInstanceName { get; }
    public static string TransferCtorErr { get; }
    public static string UnsupportedVersionException { get; }
    public static string FailedOperationMessageNotSupportedTempdb { get; }
    public static string SetAccount { get; }
    public static string Create { get; }
    public static string Alter { get; }
    public static string Drop { get; }
    public static string Rename { get; }
    public static string Script { get; }
    public static string Grant { get; }
    public static string Revoke { get; }
    public static string Deny { get; }
    public static string GrantWithGrant { get; }
    public static string Bind { get; }
    public static string Unbind { get; }
    public static string AddDefaultConstraint { get; }
    public static string TestMailProfile { get; }
    public static string TestNetSend { get; }
    public static string SetState { get; }
    public static string DropAndMove { get; }
    public static string GetSmoObject { get; }
    public static string AdvancedProperties { get; }
    public static string AddCollection { get; }
    public static string RemoveCollection { get; }
    public static string This { get; }
    public static string Abort { get; }
    public static string AddMember { get; }
    public static string DropMember { get; }
    public static string EnumMembers { get; }
    public static string EnumPermissions { get; }
    public static string AddMemberServer { get; }
    public static string EnumMemberServers { get; }
    public static string RemoveMemberServer { get; }
    public static string ResetOccurrenceCount { get; }
    public static string AddNotification { get; }
    public static string RemoveNotification { get; }
    public static string UpdateNotification { get; }
    public static string EnumNotifications { get; }
    public static string ApplyToTargetServer { get; }
    public static string ApplyToTargetServerGroup { get; }
    public static string EnumAlerts { get; }
    public static string EnumHistory { get; }
    public static string EnumJobStepOutputLogs { get; }
    public static string EnumTargetServers { get; }
    public static string EnumJobSteps { get; }
    public static string Invoke { get; }
    public static string PurgeHistory { get; }
    public static string AddSharedSchedule { get; }
    public static string RemoveSharedSchedule { get; }
    public static string RemoveAllJobSchedules { get; }
    public static string RemoveAllJobSteps { get; }
    public static string RemoveFromTargetServer { get; }
    public static string RemoveFromTargetServerGroup { get; }
    public static string Start { get; }
    public static string Stop { get; }
    public static string SetPassword { get; }
    public static string ChangePassword { get; }
    public static string EnumDatabaseMappings { get; }
    public static string GetDatabaseUser { get; }
    public static string AddToRole { get; }
    public static string AttachDatabase { get; }
    public static string DetachDatabase { get; }
    public static string EnumCollations { get; }
    public static string EnumPerformanceCounters { get; }
    public static string EnumErrorLogs { get; }
    public static string EnumDatabaseMirrorWitnessRoles { get; }
    public static string ReadErrorLog { get; }
    public static string KillDatabase { get; }
    public static string KillProcess { get; }
    public static string GetActiveDBConnectionCount { get; }
    public static string DropAllActiveDBConnections { get; }
    public static string EnumDirectories { get; }
    public static string EnumLocks { get; }
    public static string AddPrivateKey { get; }
    public static string ExportCertificate { get; }
    public static string ChangePrivateKeyPassword { get; }
    public static string RemovePrivateKey { get; }
    public static string AddKeyEncryption { get; }
    public static string DropKeyEncryption { get; }
    public static string SymmetricKeyOpen { get; }
    public static string SymmetricKeyClose { get; }
    public static string EnumLogins { get; }
    public static string EnumWindowsDomainGroups { get; }
    public static string EnumProcesses { get; }
    public static string EnumStartupProcedures { get; }
    public static string EnumWindowsUserInfo { get; }
    public static string EnumWindowsGroupInfo { get; }
    public static string EnumAvailableMedia { get; }
    public static string EnumServerAttributes { get; }
    public static string DeleteBackupHistory { get; }
    public static string Refresh { get; }
    public static string EnumBoundColumns { get; }
    public static string EnumBoundDataTypes { get; }
    public static string CheckAllocations { get; }
    public static string CheckCatalog { get; }
    public static string CheckIdentityValues { get; }
    public static string CheckTables { get; }
    public static string CheckTable { get; }
    public static string Shrink { get; }
    public static string RecalculateSpaceUsage { get; }
    public static string PrefetchObjects { get; }
    public static string EnumTransactions { get; }
    public static string GetTransactionCount { get; }
    public static string ImportXmlSchema { get; }
    public static string ExtendXmlSchema { get; }
    public static string RemoveFullTextCatalogs { get; }
    public static string SetDefaultFullTextCatalog { get; }
    public static string SetDefaultFileGroup { get; }
    public static string CheckFileGroup { get; }
    public static string CheckIndex { get; }
    public static string Checkpoint { get; }
    public static string Cleanup { get; }
    public static string UpdateLanguageResources { get; }
    public static string EnumLanguages { get; }
    public static string ClearHostLoginAccount { get; }
    public static string SetProxyAccount { get; }
    public static string ClearProxyAccount { get; }
    public static string SetMsxAccount { get; }
    public static string ClearMsxAccount { get; }
    public static string CycleErrorLog { get; }
    public static string EnumJobHistory { get; }
    public static string EnumJobs { get; }
    public static string MoreThanOneProxyAccountIsNotSupported { get; }
    public static string AddSubSystems { get; }
    public static string DeleteJobStepLogs { get; }
    public static string RemoveSubSystems { get; }
    public static string EnumSubSystems { get; }
    public static string AddMailAccountToProfile { get; }
    public static string RemoveMailAccountFromProfile { get; }
    public static string EnumMailAccountsForProfile { get; }
    public static string AddPrincipalToMailProfile { get; }
    public static string RemovePrincipalFromMailProfile { get; }
    public static string EnumPrincipalsForMailProfile { get; }
    public static string AddLoginToProxyAccount { get; }
    public static string RemoveLoginFromProxyAccount { get; }
    public static string EnumLoginsOfProxyAccount { get; }
    public static string AddServerRoleToProxyAccount { get; }
    public static string RemoveServerRoleFromProxyAccount { get; }
    public static string EnumServerRolesOfProxyAccount { get; }
    public static string AddMSDBRoleToProxyAccount { get; }
    public static string RemoveMSDBRoleFromProxyAccount { get; }
    public static string EnumMSDBRolesOfProxyAccount { get; }
    public static string MsxDefect { get; }
    public static string MsxEnlist { get; }
    public static string PurgeJobHistory { get; }
    public static string ReassignJobsByLogin { get; }
    public static string DropJobsByLogin { get; }
    public static string StartMonitor { get; }
    public static string StopMonitor { get; }
    public static string EnumProxies { get; }
    public static string DropJobsByServer { get; }
    public static string CompareUrn { get; }
    public static string Disable { get; }
    public static string DisableAllIndexes { get; }
    public static string EnableAllIndexes { get; }
    public static string DiscoverDependencies { get; }
    public static string DropBackupHistory { get; }
    public static string ChangeMirroringState { get; }
    public static string IsMember { get; }
    public static string Recreate { get; }
    public static string Enable { get; }
    public static string EnumColumns { get; }
    public static string EnumForeignKeys { get; }
    public static string EnumIndexes { get; }
    public static string EnumFragmentation { get; }
    public static string EnumReferences { get; }
    public static string SetOffline { get; }
    public static string SetOwner { get; }
    public static string StartPopulation { get; }
    public static string StopPopulation { get; }
    public static string Rebuild { get; }
    public static string Reorganize { get; }
    public static string UpdateStatistics { get; }
    public static string SetHostLoginAccount { get; }
    public static string SetMailServerAccount { get; }
    public static string SetMailServerPassword { get; }
    public static string EnumLastStatisticsUpdates { get; }
    public static string RebuildIndexes { get; }
    public static string ReCompileReferences { get; }
    public static string TruncateData { get; }
    public static string TruncateLog { get; }
    public static string SwitchPartition { get; }
    public static string MergeHashPartition { get; }
    public static string MergeRangePartition { get; }
    public static string SplitHashPartition { get; }
    public static string SplitRangePartition { get; }
    public static string GetRangeValues { get; }
    public static string ResetNextUsed { get; }
    public static string GetFileGroups { get; }
    public static string GetDefaultInitFields { get; }
    public static string SetDefaultInitFields { get; }
    public static string GetPropertyNames { get; }
    public static string SetParent { get; }
    public static string SetName { get; }
    public static string SetNamespace { get; }
    public static string SetSchema { get; }
    public static string ExecuteNonQuery { get; }
    public static string SetSnapshotIsolation { get; }
    public static string EnumNamespaces { get; }
    public static string EnumTypes { get; }
    public static string AddSchemaDocument { get; }
    public static string ScriptTransfer { get; }
    public static string SetIdentityPhrase { get; }
    public static string SetEncryptionOptions { get; }
    public static string EnumStatistics { get; }
    public static string GetJobByID { get; }
    public static string RemoveJobByID { get; }
    public static string RemoveJobsByLogin { get; }
    public static string EnumCandidateKeys { get; }
    public static string ExecuteWithResults { get; }
    public static string UpdateIndexStatistics { get; }
    public static string EnumMatchingSPs { get; }
    public static string EnumObjects { get; }
    public static string ReadBackupHeader { get; }
    public static string ReadMediaHeader { get; }
    public static string DetachedDatabaseInfo { get; }
    public static string IsDetachedPrimaryFile { get; }
    public static string IsWindowsGroupMember { get; }
    public static string EnumDetachedDatabaseFiles { get; }
    public static string EnumDetachedLogFiles { get; }
    public static string ServerEnumMembers { get; }
    public static string Contains { get; }
    public static string PingSqlServerVersion { get; }
    public static string SetServiceAccount { get; }
    public static string ChangeServicePassword { get; }
    public static string ServerActiveDirectoryRegister { get; }
    public static string ServerActiveDirectoryUpdateRegistration { get; }
    public static string ServerActiveDirectoryUnregister { get; }
    public static string DatabaseActiveDirectoryRegister { get; }
    public static string DatabaseActiveDirectoryUpdateRegistration { get; }
    public static string DatabaseActiveDirectoryUnregister { get; }
    public static string RecoverMasterKey { get; }
    public static string RegenerateMasterKey { get; }
    public static string ImportMasterKey { get; }
    public static string ExportMasterKey { get; }
    public static string ChangeAcctMasterKey { get; }
    public static string AddEncryptionMasterKey { get; }
    public static string DropEncryptionMasterKey { get; }
    public static string Close { get; }
    public static string Open { get; }
    public static string EnumKeyEncryptions { get; }
    public static string Compare { get; }
    public static string Insert { get; }
    public static string AddRange { get; }
    public static string SetRange { get; }
    public static string AddDevice { get; }
    public static string SetMirrors { get; }
    public static string SetDatabase { get; }
    public static string SqlManagement { get; }
    public static string Table { get; }
    public static string View { get; }
    public static string Server { get; }
    public static string Database { get; }
    public static string ExtendedProperty { get; }
    public static string DatabaseOptions { get; }
    public static string Synonym { get; }
    public static string FullTextIndex { get; }
    public static string FullTextIndexColumn { get; }
    public static string Check { get; }
    public static string ForeignKey { get; }
    public static string ForeignKeyColumn { get; }
    public static string PartitionSchemeParameter { get; }
    public static string Trigger { get; }
    public static string Index { get; }
    public static string IndexedColumn { get; }
    public static string Statistic { get; }
    public static string StatisticColumn { get; }
    public static string Column { get; }
    public static string DefaultConstraint { get; }
    public static string StoredProcedure { get; }
    public static string StoredProcedureParameter { get; }
    public static string SqlAssembly { get; }
    public static string SqlAssemblyFile { get; }
    public static string UserDefinedType { get; }
    public static string UserDefinedAggregate { get; }
    public static string UserDefinedAggregateParameter { get; }
    public static string FullTextCatalog { get; }
    public static string ExtendedStoredProcedure { get; }
    public static string UserDefinedFunction { get; }
    public static string UserDefinedFunctionParameter { get; }
    public static string User { get; }
    public static string Schema { get; }
    public static string DatabaseRole { get; }
    public static string ApplicationRole { get; }
    public static string LogFile { get; }
    public static string FileGroup { get; }
    public static string DataFile { get; }
    public static string Default { get; }
    public static string Rule { get; }
    public static string UserDefinedDataType { get; }
    public static string PartitionFunction { get; }
    public static string PartitionScheme { get; }
    public static string DatabaseActiveDirectory { get; }
    public static string Language { get; }
    public static string Login { get; }
    public static string ServerRole { get; }
    public static string LinkedServer { get; }
    public static string LinkedServerLogin { get; }
    public static string SystemDataType { get; }
    public static string JobServer { get; }
    public static string Category { get; }
    public static string AlertSystem { get; }
    public static string Alert { get; }
    public static string Operator { get; }
    public static string TargetServer { get; }
    public static string TargetServerGroup { get; }
    public static string Job { get; }
    public static string JobStep { get; }
    public static string JobSchedule { get; }
    public static string Settings { get; }
    public static string Information { get; }
    public static string UserOptions { get; }
    public static string BackupDevice { get; }
    public static string FullTextService { get; }
    public static string ServerActiveDirectory { get; }
    public static string HttpEndpoint { get; }
    public static string SoapConfiguration { get; }
    public static string SoapMethod { get; }
    public static string ServerAlias { get; }
    public static string ManagedComputer { get; }
    public static string Service { get; }
    public static string XmlSchemaCollection { get; }
    public static string Restore { get; }
    public static string RestoreAsync { get; }
    public static string EnumAvailableSqlServers { get; }
    public static string GetDataType { get; }
    public static string SetDataType { get; }
    public static string Backup { get; }
    public static CultureInfo get_Culture();
    public static void set_Culture(CultureInfo value);
    public static string get_LoginPropertyNotSet();
    public static string get_LoginEnable();
    public static string get_LoginDisable();
    public static string get_CannotEnableViewTrigger();
    public static string get_MissingBackupDevices();
    public static string get_MissingBackupDeviceType();
    public static string get_UnknownShrinkType();
    public static string get_CannotChangePrimary();
    public static string get_OnlyOnePrimaryFile();
    public static string get_MustSpecifyGrowth();
    public static string get_WrongPercentageGrowth();
    public static string get_WrongSize();
    public static string get_TooFewFiles();
    public static string get_UnknownChild();
    public static string get_InvalidGranteeList();
    public static string get_DatabaseAlreadyExists();
    public static string get_ReasonTextIsEncrypted();
    public static string get_ReasonPropertyIsNotSupportedOnCurrentServerVersion();
    public static string get_SqlInnerException();
    public static string get_InnerException();
    public static string get_InnerWmiException();
    public static string get_UnknownError();
    public static string get_OneFilePageSupported();
    public static string get_SupportedOnlyBelow90();
    public static string get_SupportedOnlyOn90();
    public static string get_SupportedOnlyOn80();
    public static string get_MustSpecifyOneParameter();
    public static string get_NeedPSParams();
    public static string get_ViewCannotHaveKeys();
    public static string get_InvalidAcctName();
    public static string get_OperationOnlyInPendingState();
    public static string get_OperationNotInPendingState();
    public static string get_NotXmlIndexOnView();
    public static string get_OneColumnInXmlIndex();
    public static string get_NoXmlIndexUnique();
    public static string get_NoXmlIndexClustered();
    public static string get_Version80SP3Only();
    public static string get_CantSetDefaultFalse();
    public static string get_TimeoutMustBePositive();
    public static string get_ViewColumnsCannotBeModified();
    public static string get_SystemMessageReadOnly();
    public static string get_ViewFragInfoNotInV7();
    public static string get_DtsNotInstalled();
    public static string get_NSNotInstalled();
    public static string get_InvalidNSOperation();
    public static string get_NSNotConnectedToServer();
    public static string get_InvalidThreadPoolSize();
    public static string get_InvalidQuantumLimit();
    public static string get_InvalidQuantumDuration();
    public static string get_InvalidThrottle();
    public static string get_InvalidFailuresBeforeLoggingEvent();
    public static string get_InvalidFailuresBeforeAbort();
    public static string get_InvalidMulticastRecipientLimit();
    public static string get_InvalidNotificationClassBatchSize();
    public static string get_StartTimeGreaterThanADay();
    public static string get_NoPermissions();
    public static string get_PrimaryFgMustHaveFiles();
    public static string get_NeedToSetParent();
    public static string get_ErrorInCreatingState();
    public static string get_BackupFailed();
    public static string get_RestoreFailed();
    public static string get_SetPasswordError();
    public static string get_PassPhraseAndIdentityNotSpecified();
    public static string get_PassPhraseNotSpecified();
    public static string get_NotEnoughRights();
    public static string get_NoUrnSuffix();
    public static string get_GetParentFailed();
    public static string get_ParentNull();
    public static string get_ExecutionContextPrincipalIsNotSpecified();
    public static string get_ServiceError0();
    public static string get_ServiceError1();
    public static string get_ServiceError2();
    public static string get_ServiceError3();
    public static string get_ServiceError4();
    public static string get_ServiceError5();
    public static string get_ServiceError6();
    public static string get_ServiceError7();
    public static string get_ServiceError8();
    public static string get_ServiceError9();
    public static string get_ServiceError10();
    public static string get_ServiceError11();
    public static string get_ServiceError12();
    public static string get_ServiceError13();
    public static string get_ServiceError14();
    public static string get_ServiceError15();
    public static string get_ServiceError16();
    public static string get_ServiceError17();
    public static string get_ServiceError18();
    public static string get_ServiceError19();
    public static string get_ServiceError20();
    public static string get_ServiceError21();
    public static string get_ServiceError22();
    public static string get_ServiceError23();
    public static string get_ServiceError24();
    public static string get_UnsupportedFeatureSqlAgent();
    public static string get_UnsupportedFeatureSqlMail();
    public static string get_UnsupportedFeatureServiceBroker();
    public static string get_UnsupportedFeatureFullText();
    public static string get_CannotSubscribe();
    public static string get_CannotStartSubscription();
    public static string get_InnerRegSvrException();
    public static string get_SqlServerTypeName();
    public static string get_ColumnsMustBeSpecified();
    public static string get_PasswdModiOnlyForStandardLogin();
    public static string get_DenyLoginModiNotForStandardLogin();
    public static string get_CannotCreateExtendedPropertyWithoutSchema();
    public static string get_InvalidSchema();
    public static string get_FailedToChangeSchema();
    public static string get_InvalidUrnServerLevel();
    public static string get_ServerLevelMustBePresent();
    public static string get_OperationInProgress();
    public static string get_CannotChangePassword();
    public static string get_OperationNotSupportedWhenPartOfAUDF();
    public static string get_ReasonIntextMode();
    public static string get_ReasonNotIntextMode();
    public static string get_CollectionCannotBeModified();
    public static string get_KeyOptionsIncorrect();
    public static string get_TableOrViewParentForUpdateStatistics();
    public static string get_ServerSphinx();
    public static string get_ServerShiloh();
    public static string get_ServerYukon();
    public static string get_PropertyAvailable();
    public static string get_ServerPropertyMustBeSetForOlap();
    public static string get_InvalidInstanceName();
    public static string get_TransferCtorErr();
    public static string get_UnsupportedVersionException();
    public static string get_FailedOperationMessageNotSupportedTempdb();
    public static string get_SetAccount();
    public static string get_Create();
    public static string get_Alter();
    public static string get_Drop();
    public static string get_Rename();
    public static string get_Script();
    public static string get_Grant();
    public static string get_Revoke();
    public static string get_Deny();
    public static string get_GrantWithGrant();
    public static string get_Bind();
    public static string get_Unbind();
    public static string get_AddDefaultConstraint();
    public static string get_TestMailProfile();
    public static string get_TestNetSend();
    public static string get_SetState();
    public static string get_DropAndMove();
    public static string get_GetSmoObject();
    public static string get_AdvancedProperties();
    public static string get_AddCollection();
    public static string get_RemoveCollection();
    public static string get_This();
    public static string get_Abort();
    public static string get_AddMember();
    public static string get_DropMember();
    public static string get_EnumMembers();
    public static string get_EnumPermissions();
    public static string get_AddMemberServer();
    public static string get_EnumMemberServers();
    public static string get_RemoveMemberServer();
    public static string get_ResetOccurrenceCount();
    public static string get_AddNotification();
    public static string get_RemoveNotification();
    public static string get_UpdateNotification();
    public static string get_EnumNotifications();
    public static string get_ApplyToTargetServer();
    public static string get_ApplyToTargetServerGroup();
    public static string get_EnumAlerts();
    public static string get_EnumHistory();
    public static string get_EnumJobStepOutputLogs();
    public static string get_EnumTargetServers();
    public static string get_EnumJobSteps();
    public static string get_Invoke();
    public static string get_PurgeHistory();
    public static string get_AddSharedSchedule();
    public static string get_RemoveSharedSchedule();
    public static string get_RemoveAllJobSchedules();
    public static string get_RemoveAllJobSteps();
    public static string get_RemoveFromTargetServer();
    public static string get_RemoveFromTargetServerGroup();
    public static string get_Start();
    public static string get_Stop();
    public static string get_SetPassword();
    public static string get_ChangePassword();
    public static string get_EnumDatabaseMappings();
    public static string get_GetDatabaseUser();
    public static string get_AddToRole();
    public static string get_AttachDatabase();
    public static string get_DetachDatabase();
    public static string get_EnumCollations();
    public static string get_EnumPerformanceCounters();
    public static string get_EnumErrorLogs();
    public static string get_EnumDatabaseMirrorWitnessRoles();
    public static string get_ReadErrorLog();
    public static string get_KillDatabase();
    public static string get_KillProcess();
    public static string get_GetActiveDBConnectionCount();
    public static string get_DropAllActiveDBConnections();
    public static string get_EnumDirectories();
    public static string get_EnumLocks();
    public static string get_AddPrivateKey();
    public static string get_ExportCertificate();
    public static string get_ChangePrivateKeyPassword();
    public static string get_RemovePrivateKey();
    public static string get_AddKeyEncryption();
    public static string get_DropKeyEncryption();
    public static string get_SymmetricKeyOpen();
    public static string get_SymmetricKeyClose();
    public static string get_EnumLogins();
    public static string get_EnumWindowsDomainGroups();
    public static string get_EnumProcesses();
    public static string get_EnumStartupProcedures();
    public static string get_EnumWindowsUserInfo();
    public static string get_EnumWindowsGroupInfo();
    public static string get_EnumAvailableMedia();
    public static string get_EnumServerAttributes();
    public static string get_DeleteBackupHistory();
    public static string get_Refresh();
    public static string get_EnumBoundColumns();
    public static string get_EnumBoundDataTypes();
    public static string get_CheckAllocations();
    public static string get_CheckCatalog();
    public static string get_CheckIdentityValues();
    public static string get_CheckTables();
    public static string get_CheckTable();
    public static string get_Shrink();
    public static string get_RecalculateSpaceUsage();
    public static string get_PrefetchObjects();
    public static string get_EnumTransactions();
    public static string get_GetTransactionCount();
    public static string get_ImportXmlSchema();
    public static string get_ExtendXmlSchema();
    public static string get_RemoveFullTextCatalogs();
    public static string get_SetDefaultFullTextCatalog();
    public static string get_SetDefaultFileGroup();
    public static string get_CheckFileGroup();
    public static string get_CheckIndex();
    public static string get_Checkpoint();
    public static string get_Cleanup();
    public static string get_UpdateLanguageResources();
    public static string get_EnumLanguages();
    public static string get_ClearHostLoginAccount();
    public static string get_SetProxyAccount();
    public static string get_ClearProxyAccount();
    public static string get_SetMsxAccount();
    public static string get_ClearMsxAccount();
    public static string get_CycleErrorLog();
    public static string get_EnumJobHistory();
    public static string get_EnumJobs();
    public static string get_MoreThanOneProxyAccountIsNotSupported();
    public static string get_AddSubSystems();
    public static string get_DeleteJobStepLogs();
    public static string get_RemoveSubSystems();
    public static string get_EnumSubSystems();
    public static string get_AddMailAccountToProfile();
    public static string get_RemoveMailAccountFromProfile();
    public static string get_EnumMailAccountsForProfile();
    public static string get_AddPrincipalToMailProfile();
    public static string get_RemovePrincipalFromMailProfile();
    public static string get_EnumPrincipalsForMailProfile();
    public static string get_AddLoginToProxyAccount();
    public static string get_RemoveLoginFromProxyAccount();
    public static string get_EnumLoginsOfProxyAccount();
    public static string get_AddServerRoleToProxyAccount();
    public static string get_RemoveServerRoleFromProxyAccount();
    public static string get_EnumServerRolesOfProxyAccount();
    public static string get_AddMSDBRoleToProxyAccount();
    public static string get_RemoveMSDBRoleFromProxyAccount();
    public static string get_EnumMSDBRolesOfProxyAccount();
    public static string get_MsxDefect();
    public static string get_MsxEnlist();
    public static string get_PurgeJobHistory();
    public static string get_ReassignJobsByLogin();
    public static string get_DropJobsByLogin();
    public static string get_StartMonitor();
    public static string get_StopMonitor();
    public static string get_EnumProxies();
    public static string get_DropJobsByServer();
    public static string get_CompareUrn();
    public static string get_Disable();
    public static string get_DisableAllIndexes();
    public static string get_EnableAllIndexes();
    public static string get_DiscoverDependencies();
    public static string get_DropBackupHistory();
    public static string get_ChangeMirroringState();
    public static string get_IsMember();
    public static string get_Recreate();
    public static string get_Enable();
    public static string get_EnumColumns();
    public static string get_EnumForeignKeys();
    public static string get_EnumIndexes();
    public static string get_EnumFragmentation();
    public static string get_EnumReferences();
    public static string get_SetOffline();
    public static string get_SetOwner();
    public static string get_StartPopulation();
    public static string get_StopPopulation();
    public static string get_Rebuild();
    public static string get_Reorganize();
    public static string get_UpdateStatistics();
    public static string get_SetHostLoginAccount();
    public static string get_SetMailServerAccount();
    public static string get_SetMailServerPassword();
    public static string get_EnumLastStatisticsUpdates();
    public static string get_RebuildIndexes();
    public static string get_ReCompileReferences();
    public static string get_TruncateData();
    public static string get_TruncateLog();
    public static string get_SwitchPartition();
    public static string get_MergeHashPartition();
    public static string get_MergeRangePartition();
    public static string get_SplitHashPartition();
    public static string get_SplitRangePartition();
    public static string get_GetRangeValues();
    public static string get_ResetNextUsed();
    public static string get_GetFileGroups();
    public static string get_GetDefaultInitFields();
    public static string get_SetDefaultInitFields();
    public static string get_GetPropertyNames();
    public static string get_SetParent();
    public static string get_SetName();
    public static string get_SetNamespace();
    public static string get_SetSchema();
    public static string get_ExecuteNonQuery();
    public static string get_SetSnapshotIsolation();
    public static string get_EnumNamespaces();
    public static string get_EnumTypes();
    public static string get_AddSchemaDocument();
    public static string get_ScriptTransfer();
    public static string get_SetIdentityPhrase();
    public static string get_SetEncryptionOptions();
    public static string get_EnumStatistics();
    public static string get_GetJobByID();
    public static string get_RemoveJobByID();
    public static string get_RemoveJobsByLogin();
    public static string get_EnumCandidateKeys();
    public static string get_ExecuteWithResults();
    public static string get_UpdateIndexStatistics();
    public static string get_EnumMatchingSPs();
    public static string get_EnumObjects();
    public static string get_ReadBackupHeader();
    public static string get_ReadMediaHeader();
    public static string get_DetachedDatabaseInfo();
    public static string get_IsDetachedPrimaryFile();
    public static string get_IsWindowsGroupMember();
    public static string get_EnumDetachedDatabaseFiles();
    public static string get_EnumDetachedLogFiles();
    public static string get_ServerEnumMembers();
    public static string get_Contains();
    public static string get_PingSqlServerVersion();
    public static string get_SetServiceAccount();
    public static string get_ChangeServicePassword();
    public static string get_ServerActiveDirectoryRegister();
    public static string get_ServerActiveDirectoryUpdateRegistration();
    public static string get_ServerActiveDirectoryUnregister();
    public static string get_DatabaseActiveDirectoryRegister();
    public static string get_DatabaseActiveDirectoryUpdateRegistration();
    public static string get_DatabaseActiveDirectoryUnregister();
    public static string get_RecoverMasterKey();
    public static string get_RegenerateMasterKey();
    public static string get_ImportMasterKey();
    public static string get_ExportMasterKey();
    public static string get_ChangeAcctMasterKey();
    public static string get_AddEncryptionMasterKey();
    public static string get_DropEncryptionMasterKey();
    public static string get_Close();
    public static string get_Open();
    public static string get_EnumKeyEncryptions();
    public static string get_Compare();
    public static string get_Insert();
    public static string get_AddRange();
    public static string get_SetRange();
    public static string get_AddDevice();
    public static string get_SetMirrors();
    public static string get_SetDatabase();
    public static string get_SqlManagement();
    public static string get_Table();
    public static string get_View();
    public static string get_Server();
    public static string get_Database();
    public static string get_ExtendedProperty();
    public static string get_DatabaseOptions();
    public static string get_Synonym();
    public static string get_FullTextIndex();
    public static string get_FullTextIndexColumn();
    public static string get_Check();
    public static string get_ForeignKey();
    public static string get_ForeignKeyColumn();
    public static string get_PartitionSchemeParameter();
    public static string get_Trigger();
    public static string get_Index();
    public static string get_IndexedColumn();
    public static string get_Statistic();
    public static string get_StatisticColumn();
    public static string get_Column();
    public static string get_DefaultConstraint();
    public static string get_StoredProcedure();
    public static string get_StoredProcedureParameter();
    public static string get_SqlAssembly();
    public static string get_SqlAssemblyFile();
    public static string get_UserDefinedType();
    public static string get_UserDefinedAggregate();
    public static string get_UserDefinedAggregateParameter();
    public static string get_FullTextCatalog();
    public static string get_ExtendedStoredProcedure();
    public static string get_UserDefinedFunction();
    public static string get_UserDefinedFunctionParameter();
    public static string get_User();
    public static string get_Schema();
    public static string get_DatabaseRole();
    public static string get_ApplicationRole();
    public static string get_LogFile();
    public static string get_FileGroup();
    public static string get_DataFile();
    public static string get_Default();
    public static string get_Rule();
    public static string get_UserDefinedDataType();
    public static string get_PartitionFunction();
    public static string get_PartitionScheme();
    public static string get_DatabaseActiveDirectory();
    public static string get_Language();
    public static string get_Login();
    public static string get_ServerRole();
    public static string get_LinkedServer();
    public static string get_LinkedServerLogin();
    public static string get_SystemDataType();
    public static string get_JobServer();
    public static string get_Category();
    public static string get_AlertSystem();
    public static string get_Alert();
    public static string get_Operator();
    public static string get_TargetServer();
    public static string get_TargetServerGroup();
    public static string get_Job();
    public static string get_JobStep();
    public static string get_JobSchedule();
    public static string get_Settings();
    public static string get_Information();
    public static string get_UserOptions();
    public static string get_BackupDevice();
    public static string get_FullTextService();
    public static string get_ServerActiveDirectory();
    public static string get_HttpEndpoint();
    public static string get_SoapConfiguration();
    public static string get_SoapMethod();
    public static string get_ServerAlias();
    public static string get_ManagedComputer();
    public static string get_Service();
    public static string get_XmlSchemaCollection();
    public static string get_Restore();
    public static string get_RestoreAsync();
    public static string get_EnumAvailableSqlServers();
    public static string get_GetDataType();
    public static string get_SetDataType();
    public static string get_Backup();
    public static string CannotSetPrivilege(string privName);
    public static string CollectionNotAvailable(string objectname, string serverversion);
    public static string TriggerNotSupported(string serverversion);
    public static string UnknownRecoveryModel(string modelname);
    public static string UnknownUserAccess(string modelname);
    public static string CannotRenameObject(string objectname, string serverversion);
    public static string PropertyNotSet(string propname, string objtype);
    public static string ColumnAlreadyHasDefault(string name);
    public static string ColumnHasNoDefault(string colname, string defname);
    public static string MismatchingServerName(string srvname, string urnsrvname);
    public static string MismatchingNumberOfMirrors(int i1, int i2);
    public static string BackupToPipesNotSupported(string serverversion);
    public static string LoginHasUser(string name, string dbname);
    public static string LoginHasAlias(string name);
    public static string InvalidLogin(string loginname);
    public static string InvalidShrinkMethod(string name);
    public static string ObjectRefsNonexCol(string objname, string key, string col);
    public static string CannotAddObject(string typename, string objectName);
    public static string UnknownObjectType(string name);
    public static string UnknownProperty(string name, string typename);
    public static string ObjectNotUnderServer(string name);
    public static string UnknownChildCollection(string objtypename, string childname);
    public static string CantCreateType(string name);
    public static string ObjectAlreadyExists(string type, string name);
    public static string NoSqlGen(string objname);
    public static string InvalidType(string typename);
    public static string WrongUrn(string objectType, string urn);
    public static string NoDepForSysObjects(string objUrn);
    public static string UrnMissing(string urn);
    public static string ObjectWithNoChildren(string objectName, string childName);
    public static string ColumnBeforeNotExisting(string colname);
    public static string PropNotModifiable(string propName, string objectType);
    public static string UnsupportedLoginMode(string loginmode);
    public static string CannotSetDefInitFlds(string typename);
    public static string InvalidPathChildCollectionNotFound(string child, string parent);
    public static string WMIException(string errorCode);
    public static string CallingInitChildLevelWithWrongUrn(string urn);
    public static string UnsupportedBackupDeviceType(string name);
    public static string UnsupportedVersion(string version);
    public static string ObjectDoesNotExist(string type, string name);
    public static string UnsupportedFeature(string type);
    public static string NoObjectWithoutColumns(string objName);
    public static string ConflictingScriptingOptions(string opt1, string opt2);
    public static string EmptyInputParam(string paramName, string paramKind);
    public static string MutuallyExclusiveProperties(string prop1, string prop2);
    public static string IndexMustBeClustered(string tableName, string indexName);
    public static string ParentMustExist(string objectType, string objectName);
    public static string OperationNotInPendingState1(string prop1);
    public static string OperationNotInPendingState2(string prop1, string prop2);
    public static string OperationNotInPendingState3(string prop1, string prop2, string prop3);
    public static string NoPropertyChangeForDotNet(string propertyName);
    public static string ClrNotSupported(string propName, string version);
    public static string InvalidPropertyNumberRange(string propName, string numberMin, string numberMax);
    public static string WrongPropertyValueException(string PropName, string PropValue);
    public static string InvalidCollation(string name);
    public static string NeedToPassObject(string objtype);
    public static string InexistentDir(string dir);
    public static string CantCreateTempFile(string dir);
    public static string UnknownFilter(string filter);
    public static string MessageIDTooSmall(int id);
    public static string DataTypeUnsupported(string dt);
    public static string CantSetTypeName(string type);
    public static string CantSetTypeSchema(string type);
    public static string UnknownSqlDataType(string type);
    public static string NeedExistingObjForDataType(string objName);
    public static string NoPendingObjForDataType(string state);
    public static string InvalidOptionForVersion(string method, string optionName, string SqlVersionName);
    public static string InvalidParamForVersion(string method, string paramName, string SqlVersionName);
    public static string InvalidPropertyValueForVersion(string typeName, string propertyName, string value, string sqlVersionName);
    public static string UnknownLanguageId(string langid);
    public static string UnknownEnumeration(string type);
    public static string MissingConfigVariable(string fnName, string varName);
    public static string ThreadPoolSizeNotValidForEdition(string componentName, int threadPoolSize);
    public static string InvalidPropertySetForExistingObject(string propertyName);
    public static string InvalidEncryptArgumentsAndArgumentKey(string EncryptArguments, string ArgumentKey);
    public static string RequiredChildMissingFromParent(string requiredChildType, string parentName, string parentType);
    public static string WrongParent(string objectName);
    public static string VerifyFailed(string database, string backupType);
    public static string VerifyFailed0(string database);
    public static string InvalidVersion(string version);
    public static string ConflictingSwitches(string prop1, string prop2);
    public static string BadCompatLevel(string level);
    public static string IncludeHeader(string objectType, string name, string dateString);
    public static string FullPropertyBag(string propName);
    public static string MultipleRowsForUrn(string urnName);
    public static string CouldNotFindKey(string keyName);
    public static string UnsupportedUrnFilter(string attrib, string functionType);
    public static string UnsupportedUrnAttrib(string attrib);
    public static string MappingObjectIdMissing(string typename, int id);
    public static string EmptyMapping(string parent, string mappingname);
    public static string UnknownCategoryName(string name);
    public static string UnknownCategoryType(string typename);
    public static string UnknownOperator(string name);
    public static string InvalidServerUrn(string serverName);
    public static string InvalidUrn(string type);
    public static string WMIProviderNotInstalled(string machineName);
    public static string PropertyCannotBeChangedAfterConnection(string propertyName);
    public static string CouldNotFindManagementObject(string type, string name);
    public static string NotSupportedNotification(string className, string eventType);
    public static string MissingObjectExceptionText(string parentName, string objectName, string serverVersion);
    public static string PropertyNotSetExceptionText(string propertyName);
    public static string WrongPropertyValueExceptionText(string propName, string propValue);
    public static string PropertyTypeMismatchExceptionText(string propname, string received, string expected);
    public static string MissingPropertyExceptionText(string propertyName, string serverVersion);
    public static string UnknownPropertyExceptionText(string propertyName);
    public static string PropertyReadOnlyExceptionText(string name);
    public static string InvalidSmoOperationExceptionText(string opName, string state);
    public static string PropertyCannotBeRetrievedExceptionText(string objType, string propname, string objName);
    public static string ObjectDroppedExceptionText(string type, string name);
    public static string UnsupportedObjectNameExceptionText(string objectType);
    public static string FailedtoInitialize(string urn);
    public static string PropertyMustBeSpecifiedInUrn(string propName, string nodeType);
    public static string InvalidScanType(string scanType);
    public static string TempTablesNotSupported(string tableName);
    public static string TypeSchemaMustBeDbo(string prop, string value);
    public static string UnssuportedPermission(string permName);
    public static string InvalidVersionSmoOperation(string version);
    public static string FailedToWriteProperty(string propName, string objectType, string objectName, string reason);
    public static string SyntaxErrorInTextHeader(string objectType, string objectName);
    public static string IncorrectTextHeader(string objectType, string objectName, string propNameSmall, string propName);
    public static string PropertyIsInvalidInUrn(string propName, string nodeType);
    public static string ReasonObjectAlreadyCreated(string objName);
    public static string CantScriptObject(string urn);
    public static string FailedOperationExceptionText(string opName, string objType, string objName);
    public static string FailedOperationExceptionText2(string opName);
    public static string FailedOperationExceptionText3(string opName, string objType, string objName, string Reason);
    public static string FailedOperationExceptionTextColl(string opName, string coll, string objType, string parent);
    public static string FailedOperationExceptionTextScript(string objType, string objName);
}
internal static class Microsoft.SqlServer.SqlWmiManagement.AssemblyVersionInfo : object {
    public static string VersionString;
    public static int MajorVersion;
}
