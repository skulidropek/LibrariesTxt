[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
public interface OpenTelemetry.IOpenTelemetryBuilder {
    public IServiceCollection Services { get; }
    public abstract virtual IServiceCollection get_Services();
}
[NullableContextAttribute("1")]
internal interface OpenTelemetry.Logs.IConfigureLoggerProviderBuilder {
    public abstract virtual void ConfigureBuilder(IServiceProvider serviceProvider, LoggerProviderBuilder loggerProviderBuilder);
}
[NullableContextAttribute("2")]
internal interface OpenTelemetry.Logs.ILoggerProviderBuilder {
    public LoggerProvider Provider { get; }
    public abstract virtual LoggerProvider get_Provider();
    [NullableContextAttribute("1")]
public abstract virtual LoggerProviderBuilder ConfigureServices(Action`1<IServiceCollection> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class OpenTelemetry.Logs.LoggerProviderServiceCollectionBuilder : LoggerProviderBuilder {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IServiceCollection <Services>k__BackingField;
    [NullableAttribute("2")]
public IServiceCollection Services { get; public set; }
    [NullableAttribute("2")]
public LoggerProvider Provider { get; }
    public LoggerProviderServiceCollectionBuilder(IServiceCollection services);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public IServiceCollection get_Services();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Services(IServiceCollection value);
    [NullableContextAttribute("2")]
public sealed virtual LoggerProvider get_Provider();
    public virtual LoggerProviderBuilder AddInstrumentation(Func`1<TInstrumentation> instrumentationFactory);
    public sealed virtual LoggerProviderBuilder ConfigureServices(Action`1<IServiceCollection> configure);
    public LoggerProviderBuilder ConfigureBuilder(Action`2<IServiceProvider, LoggerProviderBuilder> configure);
    private sealed virtual override LoggerProviderBuilder OpenTelemetry.Logs.IDeferredLoggerProviderBuilder.Configure(Action`2<IServiceProvider, LoggerProviderBuilder> configure);
    private LoggerProviderServiceCollectionBuilder ConfigureBuilderInternal(Action`2<IServiceProvider, LoggerProviderBuilder> configure);
    private LoggerProviderServiceCollectionBuilder ConfigureServicesInternal(Action`1<IServiceCollection> configure);
    [CompilerGeneratedAttribute]
private void <.ctor>b__0_0(IServiceProvider sp, LoggerProviderBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class OpenTelemetry.Logs.OpenTelemetryDependencyInjectionLoggerProviderBuilderExtensions : object {
    [ExtensionAttribute]
public static LoggerProviderBuilder AddInstrumentation(LoggerProviderBuilder loggerProviderBuilder);
    [ExtensionAttribute]
public static LoggerProviderBuilder AddInstrumentation(LoggerProviderBuilder loggerProviderBuilder, T instrumentation);
    [ExtensionAttribute]
public static LoggerProviderBuilder AddInstrumentation(LoggerProviderBuilder loggerProviderBuilder, Func`2<IServiceProvider, T> instrumentationFactory);
    [ExtensionAttribute]
public static LoggerProviderBuilder AddInstrumentation(LoggerProviderBuilder loggerProviderBuilder, Func`3<IServiceProvider, LoggerProvider, T> instrumentationFactory);
    [ExtensionAttribute]
public static LoggerProviderBuilder ConfigureServices(LoggerProviderBuilder loggerProviderBuilder, Action`1<IServiceCollection> configure);
    [ExtensionAttribute]
internal static LoggerProviderBuilder ConfigureBuilder(LoggerProviderBuilder loggerProviderBuilder, Action`2<IServiceProvider, LoggerProviderBuilder> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class OpenTelemetry.Logs.OpenTelemetryDependencyInjectionLoggingServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection ConfigureOpenTelemetryLoggerProvider(IServiceCollection services, Action`1<LoggerProviderBuilder> configure);
    [ExtensionAttribute]
public static IServiceCollection ConfigureOpenTelemetryLoggerProvider(IServiceCollection services, Action`2<IServiceProvider, LoggerProviderBuilder> configure);
}
[NullableContextAttribute("1")]
internal interface OpenTelemetry.Metrics.IConfigureMeterProviderBuilder {
    public abstract virtual void ConfigureBuilder(IServiceProvider serviceProvider, MeterProviderBuilder meterProviderBuilder);
}
[NullableContextAttribute("2")]
internal interface OpenTelemetry.Metrics.IMeterProviderBuilder {
    public MeterProvider Provider { get; }
    public abstract virtual MeterProvider get_Provider();
    [NullableContextAttribute("1")]
public abstract virtual MeterProviderBuilder ConfigureServices(Action`1<IServiceCollection> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class OpenTelemetry.Metrics.MeterProviderServiceCollectionBuilder : MeterProviderBuilder {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IServiceCollection <Services>k__BackingField;
    [NullableAttribute("2")]
public IServiceCollection Services { get; public set; }
    [NullableAttribute("2")]
public MeterProvider Provider { get; }
    public MeterProviderServiceCollectionBuilder(IServiceCollection services);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public IServiceCollection get_Services();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Services(IServiceCollection value);
    [NullableContextAttribute("2")]
public sealed virtual MeterProvider get_Provider();
    public virtual MeterProviderBuilder AddInstrumentation(Func`1<TInstrumentation> instrumentationFactory);
    public virtual MeterProviderBuilder AddMeter(String[] names);
    public sealed virtual MeterProviderBuilder ConfigureServices(Action`1<IServiceCollection> configure);
    public MeterProviderBuilder ConfigureBuilder(Action`2<IServiceProvider, MeterProviderBuilder> configure);
    private sealed virtual override MeterProviderBuilder OpenTelemetry.Metrics.IDeferredMeterProviderBuilder.Configure(Action`2<IServiceProvider, MeterProviderBuilder> configure);
    private MeterProviderServiceCollectionBuilder ConfigureBuilderInternal(Action`2<IServiceProvider, MeterProviderBuilder> configure);
    private MeterProviderServiceCollectionBuilder ConfigureServicesInternal(Action`1<IServiceCollection> configure);
    [CompilerGeneratedAttribute]
private void <.ctor>b__0_0(IServiceProvider sp, MeterProviderBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class OpenTelemetry.Metrics.OpenTelemetryDependencyInjectionMeterProviderBuilderExtensions : object {
    [ExtensionAttribute]
public static MeterProviderBuilder AddInstrumentation(MeterProviderBuilder meterProviderBuilder);
    [ExtensionAttribute]
public static MeterProviderBuilder AddInstrumentation(MeterProviderBuilder meterProviderBuilder, T instrumentation);
    [ExtensionAttribute]
public static MeterProviderBuilder AddInstrumentation(MeterProviderBuilder meterProviderBuilder, Func`2<IServiceProvider, T> instrumentationFactory);
    [ExtensionAttribute]
public static MeterProviderBuilder AddInstrumentation(MeterProviderBuilder meterProviderBuilder, Func`3<IServiceProvider, MeterProvider, T> instrumentationFactory);
    [ExtensionAttribute]
public static MeterProviderBuilder ConfigureServices(MeterProviderBuilder meterProviderBuilder, Action`1<IServiceCollection> configure);
    [ExtensionAttribute]
internal static MeterProviderBuilder ConfigureBuilder(MeterProviderBuilder meterProviderBuilder, Action`2<IServiceProvider, MeterProviderBuilder> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class OpenTelemetry.Metrics.OpenTelemetryDependencyInjectionMetricsServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection ConfigureOpenTelemetryMeterProvider(IServiceCollection services, Action`1<MeterProviderBuilder> configure);
    [ExtensionAttribute]
public static IServiceCollection ConfigureOpenTelemetryMeterProvider(IServiceCollection services, Action`2<IServiceProvider, MeterProviderBuilder> configure);
}
[NullableContextAttribute("1")]
internal interface OpenTelemetry.Trace.IConfigureTracerProviderBuilder {
    public abstract virtual void ConfigureBuilder(IServiceProvider serviceProvider, TracerProviderBuilder tracerProviderBuilder);
}
[NullableContextAttribute("2")]
internal interface OpenTelemetry.Trace.ITracerProviderBuilder {
    public TracerProvider Provider { get; }
    public abstract virtual TracerProvider get_Provider();
    [NullableContextAttribute("1")]
public abstract virtual TracerProviderBuilder ConfigureServices(Action`1<IServiceCollection> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class OpenTelemetry.Trace.OpenTelemetryDependencyInjectionTracerProviderBuilderExtensions : object {
    [ExtensionAttribute]
public static TracerProviderBuilder AddInstrumentation(TracerProviderBuilder tracerProviderBuilder);
    [ExtensionAttribute]
public static TracerProviderBuilder AddInstrumentation(TracerProviderBuilder tracerProviderBuilder, T instrumentation);
    [ExtensionAttribute]
public static TracerProviderBuilder AddInstrumentation(TracerProviderBuilder tracerProviderBuilder, Func`2<IServiceProvider, T> instrumentationFactory);
    [ExtensionAttribute]
public static TracerProviderBuilder AddInstrumentation(TracerProviderBuilder tracerProviderBuilder, Func`3<IServiceProvider, TracerProvider, T> instrumentationFactory);
    [ExtensionAttribute]
public static TracerProviderBuilder ConfigureServices(TracerProviderBuilder tracerProviderBuilder, Action`1<IServiceCollection> configure);
    [ExtensionAttribute]
internal static TracerProviderBuilder ConfigureBuilder(TracerProviderBuilder tracerProviderBuilder, Action`2<IServiceProvider, TracerProviderBuilder> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class OpenTelemetry.Trace.OpenTelemetryDependencyInjectionTracingServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection ConfigureOpenTelemetryTracerProvider(IServiceCollection services, Action`1<TracerProviderBuilder> configure);
    [ExtensionAttribute]
public static IServiceCollection ConfigureOpenTelemetryTracerProvider(IServiceCollection services, Action`2<IServiceProvider, TracerProviderBuilder> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class OpenTelemetry.Trace.TracerProviderServiceCollectionBuilder : TracerProviderBuilder {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IServiceCollection <Services>k__BackingField;
    [NullableAttribute("2")]
public IServiceCollection Services { get; public set; }
    [NullableAttribute("2")]
public TracerProvider Provider { get; }
    public TracerProviderServiceCollectionBuilder(IServiceCollection services);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public IServiceCollection get_Services();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Services(IServiceCollection value);
    [NullableContextAttribute("2")]
public sealed virtual TracerProvider get_Provider();
    public virtual TracerProviderBuilder AddInstrumentation(Func`1<TInstrumentation> instrumentationFactory);
    public virtual TracerProviderBuilder AddSource(String[] names);
    public virtual TracerProviderBuilder AddLegacySource(string operationName);
    public sealed virtual TracerProviderBuilder ConfigureServices(Action`1<IServiceCollection> configure);
    public TracerProviderBuilder ConfigureBuilder(Action`2<IServiceProvider, TracerProviderBuilder> configure);
    private sealed virtual override TracerProviderBuilder OpenTelemetry.Trace.IDeferredTracerProviderBuilder.Configure(Action`2<IServiceProvider, TracerProviderBuilder> configure);
    private TracerProviderServiceCollectionBuilder ConfigureBuilderInternal(Action`2<IServiceProvider, TracerProviderBuilder> configure);
    private TracerProviderServiceCollectionBuilder ConfigureServicesInternal(Action`1<IServiceCollection> configure);
    [CompilerGeneratedAttribute]
private void <.ctor>b__0_0(IServiceProvider sp, TracerProviderBuilder builder);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
