[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal class OpenTelemetry.Instrumentation.AspNet.AspNetInstrumentation : object {
    [NullableAttribute("1")]
private HttpInListener httpInListener;
    [NullableContextAttribute("1")]
public AspNetInstrumentation(AspNetTraceInstrumentationOptions options);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class OpenTelemetry.Instrumentation.AspNet.AspNetMetrics : object {
    internal static Assembly Assembly;
    internal static AssemblyName AssemblyName;
    internal static string InstrumentationName;
    internal static string InstrumentationVersion;
    private Meter meter;
    private HttpInMetricsListener httpInMetricsListener;
    public AspNetMetrics(AspNetMetricsInstrumentationOptions options);
    private static AspNetMetrics();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class OpenTelemetry.Instrumentation.AspNet.AspNetMetricsInstrumentationOptions : object {
    [CompilerGeneratedAttribute]
private EnrichFunc <Enrich>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableServerAttributesForRequestDuration>k__BackingField;
    public EnrichFunc Enrich { get; public set; }
    internal bool EnableServerAttributesForRequestDuration { get; internal set; }
    [CompilerGeneratedAttribute]
public EnrichFunc get_Enrich();
    [CompilerGeneratedAttribute]
public void set_Enrich(EnrichFunc value);
    [CompilerGeneratedAttribute]
internal bool get_EnableServerAttributesForRequestDuration();
    [CompilerGeneratedAttribute]
internal void set_EnableServerAttributesForRequestDuration(bool value);
}
public class OpenTelemetry.Instrumentation.AspNet.AspNetTraceInstrumentationOptions : object {
    [NullableAttribute("1")]
private static string DisableQueryRedactionEnvVar;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<HttpContext, bool> <Filter>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`3<Activity, string, object> <Enrich>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RecordException>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableUrlQueryRedaction>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<HttpContext, bool> Filter { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`3<Activity, string, object> Enrich { get; public set; }
    public bool RecordException { get; public set; }
    internal bool DisableUrlQueryRedaction { get; internal set; }
    [CompilerGeneratedAttribute]
public Func`2<HttpContext, bool> get_Filter();
    [CompilerGeneratedAttribute]
public void set_Filter(Func`2<HttpContext, bool> value);
    [CompilerGeneratedAttribute]
public Action`3<Activity, string, object> get_Enrich();
    [CompilerGeneratedAttribute]
public void set_Enrich(Action`3<Activity, string, object> value);
    [CompilerGeneratedAttribute]
public bool get_RecordException();
    [CompilerGeneratedAttribute]
public void set_RecordException(bool value);
    [CompilerGeneratedAttribute]
internal bool get_DisableUrlQueryRedaction();
    [CompilerGeneratedAttribute]
internal void set_DisableUrlQueryRedaction(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[EventSourceAttribute]
internal class OpenTelemetry.Instrumentation.AspNet.Implementation.AspNetInstrumentationEventSource : EventSource {
    public static AspNetInstrumentationEventSource Log;
    private static AspNetInstrumentationEventSource();
    [NonEventAttribute]
public void RequestFilterException(string operationName, Exception ex);
    [NonEventAttribute]
public void EnrichmentException(string eventName, Exception ex);
    [NonEventAttribute]
public void FailedToReadEnvironmentVariable(string envVarName, Exception ex);
    [EventAttribute("1")]
public void RequestIsFilteredOut(string operationName);
    [EventAttribute("2")]
public void RequestFilterException(string operationName, string exception);
    [EventAttribute("3")]
public void EnrichmentException(string eventName, string exception);
    [EventAttribute("4")]
public void FailedToReadEnvironmentVariable(string envVarName, string exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class OpenTelemetry.Instrumentation.AspNet.Implementation.HttpInListener : object {
    private HttpRequestRouteHelper routeHelper;
    private AspNetTraceInstrumentationOptions options;
    private RequestDataHelper requestDataHelper;
    public HttpInListener(AspNetTraceInstrumentationOptions options);
    public sealed virtual void Dispose();
    private void OnStartActivity(Activity activity, HttpContext context);
    private void OnStopActivity(Activity activity, HttpContext context);
    private void OnException(Activity activity, HttpContext context, Exception exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class OpenTelemetry.Instrumentation.AspNet.Implementation.HttpInMetricsListener : object {
    private HttpRequestRouteHelper routeHelper;
    private RequestDataHelper requestDataHelper;
    private Histogram`1<double> httpServerDuration;
    private AspNetMetricsInstrumentationOptions options;
    public HttpInMetricsListener(Meter meter, AspNetMetricsInstrumentationOptions options);
    public sealed virtual void Dispose();
    private void OnStopActivity(Activity activity, HttpContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class OpenTelemetry.Instrumentation.AspNet.Implementation.HttpRequestRouteHelper : object {
    private PropertyFetcher`1<object> routeFetcher;
    private PropertyFetcher`1<string> routeTemplateFetcher;
    internal string GetRouteTemplate(HttpRequest request);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class OpenTelemetry.Instrumentation.AspNet.Implementation.RequestDataHelper : object {
    private static string KnownHttpMethodsEnvironmentVariable;
    private static string OtherHttpMethod;
    private static Char[] SplitChars;
    private Dictionary`2<string, string> knownHttpMethods;
    private static RequestDataHelper();
    public static string GetHttpProtocolVersion(HttpRequest request);
    public void SetHttpMethodTag(Activity activity, string originalHttpMethod);
    public string GetNormalizedHttpMethod(string method);
    internal static string GetHttpProtocolVersion(string protocol);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class OpenTelemetry.Instrumentation.PropertyFetcher`1 : object {
    private string propertyName;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private PropertyFetch<T> innerFetcher;
    public int NumberOfInnerFetchers { get; }
    public PropertyFetcher`1(string propertyName);
    public int get_NumberOfInnerFetchers();
    [NullableContextAttribute("2")]
public bool TryFetch(object obj, T& value);
    [NullableContextAttribute("2")]
private static bool TryFetchRare(object obj, string propertyName, PropertyFetch& destination, T& value);
}
[ExtensionAttribute]
internal static class OpenTelemetry.Internal.AssemblyVersionExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static string GetPackageVersion(Assembly assembly);
}
[ExtensionAttribute]
internal static class OpenTelemetry.Internal.ExceptionExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static string ToInvariantString(Exception exception);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal static class OpenTelemetry.Internal.Guard : object {
    [DebuggerHiddenAttribute]
public static void ThrowIfNull(object value, string paramName);
    [DebuggerHiddenAttribute]
public static void ThrowIfNullOrEmpty(string value, string paramName);
    [DebuggerHiddenAttribute]
public static void ThrowIfNullOrWhitespace(string value, string paramName);
    [NullableContextAttribute("1")]
[DebuggerHiddenAttribute]
public static void ThrowIfZero(int value, string message, string paramName);
    [DebuggerHiddenAttribute]
public static void ThrowIfInvalidTimeout(int value, string paramName);
    [DebuggerHiddenAttribute]
public static void ThrowIfOutOfRange(int value, string paramName, int min, int max, string minName, string maxName, string message);
    [DebuggerHiddenAttribute]
public static void ThrowIfOutOfRange(double value, string paramName, double min, double max, string minName, string maxName, string message);
    [DebuggerHiddenAttribute]
public static T ThrowIfNotOfType(object value, string paramName);
    [NullableContextAttribute("1")]
[DebuggerHiddenAttribute]
private static void Range(T value, string paramName, T min, T max, string minName, string maxName, string message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class OpenTelemetry.Internal.RedactionHelper : object {
    private static string RedactedText;
    public static string GetRedactedQueryString(string query);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class OpenTelemetry.Metrics.MeterProviderBuilderExtensions : object {
    [ExtensionAttribute]
public static MeterProviderBuilder AddAspNetInstrumentation(MeterProviderBuilder builder);
    [ExtensionAttribute]
public static MeterProviderBuilder AddAspNetInstrumentation(MeterProviderBuilder builder, Action`1<AspNetMetricsInstrumentationOptions> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class OpenTelemetry.Trace.SemanticConventions : object {
    public static string AttributeNetTransport;
    public static string AttributeNetPeerIp;
    public static string AttributeNetPeerPort;
    public static string AttributeNetPeerName;
    public static string AttributeNetHostIp;
    public static string AttributeNetHostPort;
    public static string AttributeNetHostName;
    public static string AttributeEnduserId;
    public static string AttributeEnduserRole;
    public static string AttributeEnduserScope;
    public static string AttributePeerService;
    public static string AttributeHttpMethod;
    public static string AttributeHttpUrl;
    public static string AttributeHttpTarget;
    public static string AttributeHttpHost;
    public static string AttributeHttpScheme;
    public static string AttributeHttpStatusCode;
    public static string AttributeHttpStatusText;
    public static string AttributeHttpFlavor;
    public static string AttributeHttpServerName;
    public static string AttributeHttpRoute;
    public static string AttributeHttpClientIP;
    public static string AttributeHttpUserAgent;
    public static string AttributeHttpRequestContentLength;
    public static string AttributeHttpRequestContentLengthUncompressed;
    public static string AttributeHttpResponseContentLength;
    public static string AttributeHttpResponseContentLengthUncompressed;
    public static string AttributeDbSystem;
    public static string AttributeDbConnectionString;
    public static string AttributeDbUser;
    public static string AttributeDbMsSqlInstanceName;
    public static string AttributeDbJdbcDriverClassName;
    public static string AttributeDbName;
    public static string AttributeDbStatement;
    public static string AttributeDbOperation;
    public static string AttributeDbInstance;
    public static string AttributeDbUrl;
    public static string AttributeDbCassandraKeyspace;
    public static string AttributeDbHBaseNamespace;
    public static string AttributeDbRedisDatabaseIndex;
    public static string AttributeDbMongoDbCollection;
    public static string AttributeRpcSystem;
    public static string AttributeRpcService;
    public static string AttributeRpcMethod;
    public static string AttributeRpcGrpcStatusCode;
    public static string AttributeMessageType;
    public static string AttributeMessageId;
    public static string AttributeMessageCompressedSize;
    public static string AttributeMessageUncompressedSize;
    public static string AttributeFaasTrigger;
    public static string AttributeFaasExecution;
    public static string AttributeFaasDocumentCollection;
    public static string AttributeFaasDocumentOperation;
    public static string AttributeFaasDocumentTime;
    public static string AttributeFaasDocumentName;
    public static string AttributeFaasTime;
    public static string AttributeFaasCron;
    public static string AttributeMessagingSystem;
    public static string AttributeMessagingDestination;
    public static string AttributeMessagingDestinationKind;
    public static string AttributeMessagingTempDestination;
    public static string AttributeMessagingProtocol;
    public static string AttributeMessagingProtocolVersion;
    public static string AttributeMessagingUrl;
    public static string AttributeMessagingMessageId;
    public static string AttributeMessagingConversationId;
    public static string AttributeMessagingPayloadSize;
    public static string AttributeMessagingPayloadCompressedSize;
    public static string AttributeMessagingOperation;
    public static string AttributeExceptionEventName;
    public static string AttributeExceptionType;
    public static string AttributeExceptionMessage;
    public static string AttributeExceptionStacktrace;
    public static string AttributeErrorType;
    public static string AttributeHttpRequestMethod;
    public static string AttributeHttpRequestMethodOriginal;
    public static string AttributeHttpResponseStatusCode;
    public static string AttributeUrlScheme;
    public static string AttributeUrlPath;
    public static string AttributeUrlQuery;
    public static string AttributeNetworkProtocolVersion;
    public static string AttributeServerAddress;
    public static string AttributeServerPort;
    public static string AttributeUserAgentOriginal;
}
internal static class OpenTelemetry.Trace.SpanHelper : object {
    public static ActivityStatusCode ResolveActivityStatusForHttpStatusCode(ActivityKind kind, int httpStatusCode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class OpenTelemetry.Trace.TracerProviderBuilderExtensions : object {
    [ExtensionAttribute]
public static TracerProviderBuilder AddAspNetInstrumentation(TracerProviderBuilder builder);
    [ExtensionAttribute]
public static TracerProviderBuilder AddAspNetInstrumentation(TracerProviderBuilder builder, Action`1<AspNetTraceInstrumentationOptions> configure);
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2048")]
internal class System.Runtime.CompilerServices.CallerArgumentExpressionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public CallerArgumentExpressionAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
