internal static class FxResources.System.Text.Encoding.CodePages.SR : object {
}
internal static class Interop : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal class Microsoft.Win32.SafeHandles.SafeAllocHHandle : SafeBuffer {
    internal static SafeAllocHHandle InvalidHandle { get; }
    internal SafeAllocHHandle(IntPtr handle);
    internal static SafeAllocHHandle get_InvalidHandle();
    protected virtual bool ReleaseHandle();
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[AttributeUsageAttribute("10368")]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.NullablePublicOnlyAttribute : Attribute {
    public bool IncludesInternals;
    public NullablePublicOnlyAttribute(bool );
}
internal abstract class System.Runtime.Versioning.OSPlatformAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <PlatformName>k__BackingField;
    public string PlatformName { get; }
    private protected OSPlatformAttribute(string platformName);
    [CompilerGeneratedAttribute]
public string get_PlatformName();
}
[AttributeUsageAttribute("2047")]
internal class System.Runtime.Versioning.SupportedOSPlatformAttribute : OSPlatformAttribute {
    public SupportedOSPlatformAttribute(string platformName);
}
[AttributeUsageAttribute("448")]
internal class System.Runtime.Versioning.SupportedOSPlatformGuardAttribute : OSPlatformAttribute {
    public SupportedOSPlatformGuardAttribute(string platformName);
}
[AttributeUsageAttribute("1")]
internal class System.Runtime.Versioning.TargetPlatformAttribute : OSPlatformAttribute {
    public TargetPlatformAttribute(string platformName);
}
[AttributeUsageAttribute("2047")]
internal class System.Runtime.Versioning.UnsupportedOSPlatformAttribute : OSPlatformAttribute {
    public UnsupportedOSPlatformAttribute(string platformName);
}
[AttributeUsageAttribute("448")]
internal class System.Runtime.Versioning.UnsupportedOSPlatformGuardAttribute : OSPlatformAttribute {
    public UnsupportedOSPlatformGuardAttribute(string platformName);
}
internal static class System.SR : object {
    private static bool s_usingResourceKeys;
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string ArgumentNull_Array { get; }
    internal static string ArgumentOutOfRange_NeedNonNegNum { get; }
    internal static string ArgumentOutOfRange_IndexCount { get; }
    internal static string ArgumentOutOfRange_IndexCountBuffer { get; }
    internal static string NotSupported_NoCodepageData { get; }
    internal static string Argument_EncodingConversionOverflowBytes { get; }
    internal static string Argument_InvalidCharSequenceNoIndex { get; }
    internal static string ArgumentOutOfRange_GetByteCountOverflow { get; }
    internal static string Argument_EncodingConversionOverflowChars { get; }
    internal static string ArgumentOutOfRange_GetCharCountOverflow { get; }
    internal static string Argument_EncoderFallbackNotEmpty { get; }
    internal static string Argument_RecursiveFallback { get; }
    internal static string Argument_RecursiveFallbackBytes { get; }
    internal static string ArgumentOutOfRange_Range { get; }
    internal static string Argument_CodepageNotSupported { get; }
    internal static string ArgumentOutOfRange_Index { get; }
    internal static string MissingEncodingNameResource { get; }
    internal static string Globalization_cp_37 { get; }
    internal static string Globalization_cp_437 { get; }
    internal static string Globalization_cp_500 { get; }
    internal static string Globalization_cp_708 { get; }
    internal static string Globalization_cp_720 { get; }
    internal static string Globalization_cp_737 { get; }
    internal static string Globalization_cp_775 { get; }
    internal static string Globalization_cp_850 { get; }
    internal static string Globalization_cp_852 { get; }
    internal static string Globalization_cp_855 { get; }
    internal static string Globalization_cp_857 { get; }
    internal static string Globalization_cp_858 { get; }
    internal static string Globalization_cp_860 { get; }
    internal static string Globalization_cp_861 { get; }
    internal static string Globalization_cp_862 { get; }
    internal static string Globalization_cp_863 { get; }
    internal static string Globalization_cp_864 { get; }
    internal static string Globalization_cp_865 { get; }
    internal static string Globalization_cp_866 { get; }
    internal static string Globalization_cp_869 { get; }
    internal static string Globalization_cp_870 { get; }
    internal static string Globalization_cp_874 { get; }
    internal static string Globalization_cp_875 { get; }
    internal static string Globalization_cp_932 { get; }
    internal static string Globalization_cp_936 { get; }
    internal static string Globalization_cp_949 { get; }
    internal static string Globalization_cp_950 { get; }
    internal static string Globalization_cp_1026 { get; }
    internal static string Globalization_cp_1047 { get; }
    internal static string Globalization_cp_1140 { get; }
    internal static string Globalization_cp_1141 { get; }
    internal static string Globalization_cp_1142 { get; }
    internal static string Globalization_cp_1143 { get; }
    internal static string Globalization_cp_1144 { get; }
    internal static string Globalization_cp_1145 { get; }
    internal static string Globalization_cp_1146 { get; }
    internal static string Globalization_cp_1147 { get; }
    internal static string Globalization_cp_1148 { get; }
    internal static string Globalization_cp_1149 { get; }
    internal static string Globalization_cp_1250 { get; }
    internal static string Globalization_cp_1251 { get; }
    internal static string Globalization_cp_1252 { get; }
    internal static string Globalization_cp_1253 { get; }
    internal static string Globalization_cp_1254 { get; }
    internal static string Globalization_cp_1255 { get; }
    internal static string Globalization_cp_1256 { get; }
    internal static string Globalization_cp_1257 { get; }
    internal static string Globalization_cp_1258 { get; }
    internal static string Globalization_cp_1361 { get; }
    internal static string Globalization_cp_10000 { get; }
    internal static string Globalization_cp_10001 { get; }
    internal static string Globalization_cp_10002 { get; }
    internal static string Globalization_cp_10003 { get; }
    internal static string Globalization_cp_10004 { get; }
    internal static string Globalization_cp_10005 { get; }
    internal static string Globalization_cp_10006 { get; }
    internal static string Globalization_cp_10007 { get; }
    internal static string Globalization_cp_10008 { get; }
    internal static string Globalization_cp_10010 { get; }
    internal static string Globalization_cp_10017 { get; }
    internal static string Globalization_cp_10021 { get; }
    internal static string Globalization_cp_10029 { get; }
    internal static string Globalization_cp_10079 { get; }
    internal static string Globalization_cp_10081 { get; }
    internal static string Globalization_cp_10082 { get; }
    internal static string Globalization_cp_20000 { get; }
    internal static string Globalization_cp_20001 { get; }
    internal static string Globalization_cp_20002 { get; }
    internal static string Globalization_cp_20003 { get; }
    internal static string Globalization_cp_20004 { get; }
    internal static string Globalization_cp_20005 { get; }
    internal static string Globalization_cp_20105 { get; }
    internal static string Globalization_cp_20106 { get; }
    internal static string Globalization_cp_20107 { get; }
    internal static string Globalization_cp_20108 { get; }
    internal static string Globalization_cp_20261 { get; }
    internal static string Globalization_cp_20269 { get; }
    internal static string Globalization_cp_20273 { get; }
    internal static string Globalization_cp_20277 { get; }
    internal static string Globalization_cp_20278 { get; }
    internal static string Globalization_cp_20280 { get; }
    internal static string Globalization_cp_20284 { get; }
    internal static string Globalization_cp_20285 { get; }
    internal static string Globalization_cp_20290 { get; }
    internal static string Globalization_cp_20297 { get; }
    internal static string Globalization_cp_20420 { get; }
    internal static string Globalization_cp_20423 { get; }
    internal static string Globalization_cp_20424 { get; }
    internal static string Globalization_cp_20833 { get; }
    internal static string Globalization_cp_20838 { get; }
    internal static string Globalization_cp_20866 { get; }
    internal static string Globalization_cp_20871 { get; }
    internal static string Globalization_cp_20880 { get; }
    internal static string Globalization_cp_20905 { get; }
    internal static string Globalization_cp_20924 { get; }
    internal static string Globalization_cp_20932 { get; }
    internal static string Globalization_cp_20936 { get; }
    internal static string Globalization_cp_20949 { get; }
    internal static string Globalization_cp_21025 { get; }
    internal static string Globalization_cp_21027 { get; }
    internal static string Globalization_cp_21866 { get; }
    internal static string Globalization_cp_28592 { get; }
    internal static string Globalization_cp_28593 { get; }
    internal static string Globalization_cp_28594 { get; }
    internal static string Globalization_cp_28595 { get; }
    internal static string Globalization_cp_28596 { get; }
    internal static string Globalization_cp_28597 { get; }
    internal static string Globalization_cp_28598 { get; }
    internal static string Globalization_cp_28599 { get; }
    internal static string Globalization_cp_28603 { get; }
    internal static string Globalization_cp_28605 { get; }
    internal static string Globalization_cp_29001 { get; }
    internal static string Globalization_cp_38598 { get; }
    internal static string Globalization_cp_50000 { get; }
    internal static string Globalization_cp_50220 { get; }
    internal static string Globalization_cp_50221 { get; }
    internal static string Globalization_cp_50222 { get; }
    internal static string Globalization_cp_50225 { get; }
    internal static string Globalization_cp_50227 { get; }
    internal static string Globalization_cp_50229 { get; }
    internal static string Globalization_cp_50930 { get; }
    internal static string Globalization_cp_50931 { get; }
    internal static string Globalization_cp_50933 { get; }
    internal static string Globalization_cp_50935 { get; }
    internal static string Globalization_cp_50937 { get; }
    internal static string Globalization_cp_50939 { get; }
    internal static string Globalization_cp_51932 { get; }
    internal static string Globalization_cp_51936 { get; }
    internal static string Globalization_cp_51949 { get; }
    internal static string Globalization_cp_52936 { get; }
    internal static string Globalization_cp_54936 { get; }
    internal static string Globalization_cp_57002 { get; }
    internal static string Globalization_cp_57003 { get; }
    internal static string Globalization_cp_57004 { get; }
    internal static string Globalization_cp_57005 { get; }
    internal static string Globalization_cp_57006 { get; }
    internal static string Globalization_cp_57007 { get; }
    internal static string Globalization_cp_57008 { get; }
    internal static string Globalization_cp_57009 { get; }
    internal static string Globalization_cp_57010 { get; }
    internal static string Globalization_cp_57011 { get; }
    private static SR();
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey);
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2, object p3);
    internal static string Format(IFormatProvider provider, string resourceFormat, Object[] args);
    internal static ResourceManager get_ResourceManager();
    internal static string get_ArgumentNull_Array();
    internal static string get_ArgumentOutOfRange_NeedNonNegNum();
    internal static string get_ArgumentOutOfRange_IndexCount();
    internal static string get_ArgumentOutOfRange_IndexCountBuffer();
    internal static string get_NotSupported_NoCodepageData();
    internal static string get_Argument_EncodingConversionOverflowBytes();
    internal static string get_Argument_InvalidCharSequenceNoIndex();
    internal static string get_ArgumentOutOfRange_GetByteCountOverflow();
    internal static string get_Argument_EncodingConversionOverflowChars();
    internal static string get_ArgumentOutOfRange_GetCharCountOverflow();
    internal static string get_Argument_EncoderFallbackNotEmpty();
    internal static string get_Argument_RecursiveFallback();
    internal static string get_Argument_RecursiveFallbackBytes();
    internal static string get_ArgumentOutOfRange_Range();
    internal static string get_Argument_CodepageNotSupported();
    internal static string get_ArgumentOutOfRange_Index();
    internal static string get_MissingEncodingNameResource();
    internal static string get_Globalization_cp_37();
    internal static string get_Globalization_cp_437();
    internal static string get_Globalization_cp_500();
    internal static string get_Globalization_cp_708();
    internal static string get_Globalization_cp_720();
    internal static string get_Globalization_cp_737();
    internal static string get_Globalization_cp_775();
    internal static string get_Globalization_cp_850();
    internal static string get_Globalization_cp_852();
    internal static string get_Globalization_cp_855();
    internal static string get_Globalization_cp_857();
    internal static string get_Globalization_cp_858();
    internal static string get_Globalization_cp_860();
    internal static string get_Globalization_cp_861();
    internal static string get_Globalization_cp_862();
    internal static string get_Globalization_cp_863();
    internal static string get_Globalization_cp_864();
    internal static string get_Globalization_cp_865();
    internal static string get_Globalization_cp_866();
    internal static string get_Globalization_cp_869();
    internal static string get_Globalization_cp_870();
    internal static string get_Globalization_cp_874();
    internal static string get_Globalization_cp_875();
    internal static string get_Globalization_cp_932();
    internal static string get_Globalization_cp_936();
    internal static string get_Globalization_cp_949();
    internal static string get_Globalization_cp_950();
    internal static string get_Globalization_cp_1026();
    internal static string get_Globalization_cp_1047();
    internal static string get_Globalization_cp_1140();
    internal static string get_Globalization_cp_1141();
    internal static string get_Globalization_cp_1142();
    internal static string get_Globalization_cp_1143();
    internal static string get_Globalization_cp_1144();
    internal static string get_Globalization_cp_1145();
    internal static string get_Globalization_cp_1146();
    internal static string get_Globalization_cp_1147();
    internal static string get_Globalization_cp_1148();
    internal static string get_Globalization_cp_1149();
    internal static string get_Globalization_cp_1250();
    internal static string get_Globalization_cp_1251();
    internal static string get_Globalization_cp_1252();
    internal static string get_Globalization_cp_1253();
    internal static string get_Globalization_cp_1254();
    internal static string get_Globalization_cp_1255();
    internal static string get_Globalization_cp_1256();
    internal static string get_Globalization_cp_1257();
    internal static string get_Globalization_cp_1258();
    internal static string get_Globalization_cp_1361();
    internal static string get_Globalization_cp_10000();
    internal static string get_Globalization_cp_10001();
    internal static string get_Globalization_cp_10002();
    internal static string get_Globalization_cp_10003();
    internal static string get_Globalization_cp_10004();
    internal static string get_Globalization_cp_10005();
    internal static string get_Globalization_cp_10006();
    internal static string get_Globalization_cp_10007();
    internal static string get_Globalization_cp_10008();
    internal static string get_Globalization_cp_10010();
    internal static string get_Globalization_cp_10017();
    internal static string get_Globalization_cp_10021();
    internal static string get_Globalization_cp_10029();
    internal static string get_Globalization_cp_10079();
    internal static string get_Globalization_cp_10081();
    internal static string get_Globalization_cp_10082();
    internal static string get_Globalization_cp_20000();
    internal static string get_Globalization_cp_20001();
    internal static string get_Globalization_cp_20002();
    internal static string get_Globalization_cp_20003();
    internal static string get_Globalization_cp_20004();
    internal static string get_Globalization_cp_20005();
    internal static string get_Globalization_cp_20105();
    internal static string get_Globalization_cp_20106();
    internal static string get_Globalization_cp_20107();
    internal static string get_Globalization_cp_20108();
    internal static string get_Globalization_cp_20261();
    internal static string get_Globalization_cp_20269();
    internal static string get_Globalization_cp_20273();
    internal static string get_Globalization_cp_20277();
    internal static string get_Globalization_cp_20278();
    internal static string get_Globalization_cp_20280();
    internal static string get_Globalization_cp_20284();
    internal static string get_Globalization_cp_20285();
    internal static string get_Globalization_cp_20290();
    internal static string get_Globalization_cp_20297();
    internal static string get_Globalization_cp_20420();
    internal static string get_Globalization_cp_20423();
    internal static string get_Globalization_cp_20424();
    internal static string get_Globalization_cp_20833();
    internal static string get_Globalization_cp_20838();
    internal static string get_Globalization_cp_20866();
    internal static string get_Globalization_cp_20871();
    internal static string get_Globalization_cp_20880();
    internal static string get_Globalization_cp_20905();
    internal static string get_Globalization_cp_20924();
    internal static string get_Globalization_cp_20932();
    internal static string get_Globalization_cp_20936();
    internal static string get_Globalization_cp_20949();
    internal static string get_Globalization_cp_21025();
    internal static string get_Globalization_cp_21027();
    internal static string get_Globalization_cp_21866();
    internal static string get_Globalization_cp_28592();
    internal static string get_Globalization_cp_28593();
    internal static string get_Globalization_cp_28594();
    internal static string get_Globalization_cp_28595();
    internal static string get_Globalization_cp_28596();
    internal static string get_Globalization_cp_28597();
    internal static string get_Globalization_cp_28598();
    internal static string get_Globalization_cp_28599();
    internal static string get_Globalization_cp_28603();
    internal static string get_Globalization_cp_28605();
    internal static string get_Globalization_cp_29001();
    internal static string get_Globalization_cp_38598();
    internal static string get_Globalization_cp_50000();
    internal static string get_Globalization_cp_50220();
    internal static string get_Globalization_cp_50221();
    internal static string get_Globalization_cp_50222();
    internal static string get_Globalization_cp_50225();
    internal static string get_Globalization_cp_50227();
    internal static string get_Globalization_cp_50229();
    internal static string get_Globalization_cp_50930();
    internal static string get_Globalization_cp_50931();
    internal static string get_Globalization_cp_50933();
    internal static string get_Globalization_cp_50935();
    internal static string get_Globalization_cp_50937();
    internal static string get_Globalization_cp_50939();
    internal static string get_Globalization_cp_51932();
    internal static string get_Globalization_cp_51936();
    internal static string get_Globalization_cp_51949();
    internal static string get_Globalization_cp_52936();
    internal static string get_Globalization_cp_54936();
    internal static string get_Globalization_cp_57002();
    internal static string get_Globalization_cp_57003();
    internal static string get_Globalization_cp_57004();
    internal static string get_Globalization_cp_57005();
    internal static string get_Globalization_cp_57006();
    internal static string get_Globalization_cp_57007();
    internal static string get_Globalization_cp_57008();
    internal static string get_Globalization_cp_57009();
    internal static string get_Globalization_cp_57010();
    internal static string get_Globalization_cp_57011();
}
internal abstract class System.Text.BaseCodePageEncoding : EncodingNLS {
    internal static string CODE_PAGE_DATA_FILE_NAME;
    protected int dataTableCodePage;
    protected int iExtraBytes;
    protected Char[] arrayUnicodeBestFit;
    protected Char[] arrayBytesBestFit;
    private static int CODEPAGE_DATA_FILE_HEADER_SIZE;
    private static int CODEPAGE_HEADER_SIZE;
    private static Byte[] s_codePagesDataHeader;
    protected static Stream s_codePagesEncodingDataStream;
    protected static object s_streamLock;
    protected Byte[] m_codePageHeader;
    protected int m_firstDataWordOffset;
    protected int m_dataSize;
    protected SafeAllocHHandle safeNativeMemoryHandle;
    internal BaseCodePageEncoding(int codepage);
    internal BaseCodePageEncoding(int codepage, int dataCodePage);
    internal BaseCodePageEncoding(int codepage, int dataCodePage, EncoderFallback enc, DecoderFallback dec);
    private static BaseCodePageEncoding();
    private sealed virtual override void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context);
    internal static void ReadCodePageDataFileHeader(Stream stream, Byte[] codePageDataFileHeader);
    internal static void ReadCodePageIndex(Stream stream, Byte[] codePageIndex);
    internal static void ReadCodePageHeader(Stream stream, Byte[] codePageHeader);
    internal static Stream GetEncodingDataStream(string tableName);
    private void LoadCodePageTables();
    private bool FindCodePage(int codePage);
    internal static int GetCodePageByteSize(int codePage);
    protected abstract virtual void LoadManagedCodePage();
    protected Byte* GetNativeMemory(int iSize);
    protected abstract virtual void ReadBestFitTable();
    internal Char[] GetBestFitUnicodeToBytesData();
    internal Char[] GetBestFitBytesToUnicodeData();
    internal void CheckMemorySection();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.Text.CodePagesEncodingProvider : EncodingProvider {
    private static EncodingProvider s_singleton;
    private Dictionary`2<int, Encoding> _encodings;
    private ReaderWriterLockSlim _cacheLock;
    private static int ISCIIAssemese;
    private static int ISCIIBengali;
    private static int ISCIIDevanagari;
    private static int ISCIIGujarathi;
    private static int ISCIIKannada;
    private static int ISCIIMalayalam;
    private static int ISCIIOriya;
    private static int ISCIIPanjabi;
    private static int ISCIITamil;
    private static int ISCIITelugu;
    private static int ISOKorean;
    private static int ChineseHZ;
    private static int ISO2022JP;
    private static int ISO2022JPESC;
    private static int ISO2022JPSISO;
    private static int ISOSimplifiedCN;
    private static int EUCJP;
    private static int CodePageMacGB2312;
    private static int CodePageMacKorean;
    private static int CodePageGB2312;
    private static int CodePageDLLKorean;
    private static int GB18030;
    private static int DuplicateEUCCN;
    private static int EUCKR;
    private static int EUCCN;
    private static int ISO_8859_8I;
    private static int ISO_8859_8_Visual;
    public static EncodingProvider Instance { get; }
    private static int SystemDefaultCodePage { get; }
    private static CodePagesEncodingProvider();
    public static EncodingProvider get_Instance();
    [NullableContextAttribute("2")]
public virtual Encoding GetEncoding(int codepage);
    public virtual Encoding GetEncoding(string name);
    private static Encoding GetEncodingRare(int codepage);
    private static int get_SystemDefaultCodePage();
}
internal class System.Text.DBCSCodePageEncoding : BaseCodePageEncoding {
    protected Char* mapBytesToUnicode;
    protected UInt16* mapUnicodeToBytes;
    protected static char UNKNOWN_CHAR_FLAG;
    protected static char UNICODE_REPLACEMENT_CHAR;
    protected static char LEAD_BYTE_CHAR;
    private ushort _bytesUnknown;
    private int _byteCountUnknown;
    protected char charUnknown;
    private static object s_InternalSyncObject;
    private static object InternalSyncObject { get; }
    public DBCSCodePageEncoding(int codePage);
    internal DBCSCodePageEncoding(int codePage, int dataCodePage);
    internal DBCSCodePageEncoding(int codePage, int dataCodePage, EncoderFallback enc, DecoderFallback dec);
    internal static char ReadChar(Char* pChar);
    protected virtual void LoadManagedCodePage();
    protected virtual bool CleanUpBytes(Int32& bytes);
    protected virtual void CleanUpEndBytes(Char* chars);
    private static object get_InternalSyncObject();
    protected virtual void ReadBestFitTable();
    public virtual int GetByteCount(Char* chars, int count, EncoderNLS encoder);
    public virtual int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount, EncoderNLS encoder);
    public virtual int GetCharCount(Byte* bytes, int count, DecoderNLS baseDecoder);
    public virtual int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount, DecoderNLS baseDecoder);
    public virtual int GetMaxByteCount(int charCount);
    public virtual int GetMaxCharCount(int byteCount);
    public virtual Decoder GetDecoder();
}
internal class System.Text.DecoderFallbackBufferHelper : ValueType {
    internal Byte* byteStart;
    internal Char* charEnd;
    private DecoderFallbackBuffer _fallbackBuffer;
    public DecoderFallbackBufferHelper(DecoderFallbackBuffer fallbackBuffer);
    internal void InternalReset();
    internal void InternalInitialize(Byte* _byteStart, Char* _charEnd);
    internal bool InternalFallback(Byte[] bytes, Byte* pBytes, Char*& chars);
    internal int InternalFallback(Byte[] bytes, Byte* pBytes);
}
internal class System.Text.DecoderNLS : Decoder {
    protected EncodingNLS m_encoding;
    protected bool m_mustFlush;
    internal bool m_throwOnOverflow;
    internal int m_bytesUsed;
    internal DecoderFallback m_fallback;
    internal DecoderFallbackBuffer m_fallbackBuffer;
    internal DecoderFallback Fallback { get; }
    internal bool InternalHasFallbackBuffer { get; }
    public DecoderFallbackBuffer FallbackBuffer { get; }
    public bool MustFlush { get; }
    internal bool HasState { get; }
    internal DecoderNLS(EncodingNLS encoding);
    private sealed virtual override void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context);
    internal DecoderFallback get_Fallback();
    internal bool get_InternalHasFallbackBuffer();
    public DecoderFallbackBuffer get_FallbackBuffer();
    public virtual void Reset();
    public virtual int GetCharCount(Byte[] bytes, int index, int count);
    public virtual int GetCharCount(Byte[] bytes, int index, int count, bool flush);
    public virtual int GetCharCount(Byte* bytes, int count, bool flush);
    public virtual int GetChars(Byte[] bytes, int byteIndex, int byteCount, Char[] chars, int charIndex);
    public virtual int GetChars(Byte[] bytes, int byteIndex, int byteCount, Char[] chars, int charIndex, bool flush);
    public virtual int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount, bool flush);
    public virtual void Convert(Byte[] bytes, int byteIndex, int byteCount, Char[] chars, int charIndex, int charCount, bool flush, Int32& bytesUsed, Int32& charsUsed, Boolean& completed);
    public virtual void Convert(Byte* bytes, int byteCount, Char* chars, int charCount, bool flush, Int32& bytesUsed, Int32& charsUsed, Boolean& completed);
    public bool get_MustFlush();
    internal virtual bool get_HasState();
    internal void ClearMustFlush();
}
internal class System.Text.EncoderFallbackBufferHelper : ValueType {
    internal Char* charStart;
    internal Char* charEnd;
    internal EncoderNLS encoder;
    internal bool setEncoder;
    internal bool bUsedEncoder;
    internal bool bFallingBack;
    internal int iRecursionCount;
    private static int iMaxRecursion;
    private EncoderFallbackBuffer _fallbackBuffer;
    public EncoderFallbackBufferHelper(EncoderFallbackBuffer fallbackBuffer);
    internal void InternalReset();
    internal void InternalInitialize(Char* _charStart, Char* _charEnd, EncoderNLS _encoder, bool _setEncoder);
    internal char InternalGetNextChar();
    internal bool InternalFallback(char ch, Char*& chars);
    internal void ThrowLastCharRecursive(int charRecursive);
}
internal class System.Text.EncoderNLS : Encoder {
    internal char charLeftOver;
    protected EncodingNLS m_encoding;
    protected bool m_mustFlush;
    internal bool m_throwOnOverflow;
    internal int m_charsUsed;
    internal EncoderFallback m_fallback;
    internal EncoderFallbackBuffer m_fallbackBuffer;
    internal EncoderFallback Fallback { get; }
    internal bool InternalHasFallbackBuffer { get; }
    public EncoderFallbackBuffer FallbackBuffer { get; }
    public Encoding Encoding { get; }
    public bool MustFlush { get; }
    internal bool HasState { get; }
    internal EncoderNLS(EncodingNLS encoding);
    private sealed virtual override void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context);
    internal EncoderFallback get_Fallback();
    internal bool get_InternalHasFallbackBuffer();
    public EncoderFallbackBuffer get_FallbackBuffer();
    public virtual void Reset();
    public virtual int GetByteCount(Char[] chars, int index, int count, bool flush);
    public virtual int GetByteCount(Char* chars, int count, bool flush);
    public virtual int GetBytes(Char[] chars, int charIndex, int charCount, Byte[] bytes, int byteIndex, bool flush);
    public virtual int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount, bool flush);
    public virtual void Convert(Char[] chars, int charIndex, int charCount, Byte[] bytes, int byteIndex, int byteCount, bool flush, Int32& charsUsed, Int32& bytesUsed, Boolean& completed);
    public virtual void Convert(Char* chars, int charCount, Byte* bytes, int byteCount, bool flush, Int32& charsUsed, Int32& bytesUsed, Boolean& completed);
    public Encoding get_Encoding();
    public bool get_MustFlush();
    internal virtual bool get_HasState();
    internal void ClearMustFlush();
}
internal class System.Text.EncodingByteBuffer : object {
    private Byte* _bytes;
    private Byte* _byteStart;
    private Byte* _byteEnd;
    private Char* _chars;
    private Char* _charStart;
    private Char* _charEnd;
    private int _byteCountResult;
    private EncodingNLS _enc;
    private EncoderNLS _encoder;
    internal EncoderFallbackBuffer fallbackBuffer;
    internal EncoderFallbackBufferHelper fallbackBufferHelper;
    internal bool MoreData { get; }
    internal int CharsUsed { get; }
    internal int Count { get; }
    internal EncodingByteBuffer(EncodingNLS inEncoding, EncoderNLS inEncoder, Byte* inByteStart, int inByteCount, Char* inCharStart, int inCharCount);
    internal bool AddByte(byte b, int moreBytesExpected);
    internal bool AddByte(byte b1);
    internal bool AddByte(byte b1, byte b2);
    internal bool AddByte(byte b1, byte b2, int moreBytesExpected);
    internal bool AddByte(byte b1, byte b2, byte b3);
    internal bool AddByte(byte b1, byte b2, byte b3, int moreBytesExpected);
    internal bool AddByte(byte b1, byte b2, byte b3, byte b4);
    internal void MovePrevious(bool bThrow);
    internal bool Fallback(char charFallback);
    internal bool get_MoreData();
    internal char GetNextChar();
    internal int get_CharsUsed();
    internal int get_Count();
}
internal class System.Text.EncodingCharBuffer : object {
    private Char* _chars;
    private Char* _charStart;
    private Char* _charEnd;
    private int _charCountResult;
    private EncodingNLS _enc;
    private DecoderNLS _decoder;
    private Byte* _byteStart;
    private Byte* _byteEnd;
    private Byte* _bytes;
    private DecoderFallbackBuffer _fallbackBuffer;
    private DecoderFallbackBufferHelper _fallbackBufferHelper;
    internal bool MoreData { get; }
    internal int BytesUsed { get; }
    internal int Count { get; }
    internal EncodingCharBuffer(EncodingNLS enc, DecoderNLS decoder, Char* charStart, int charCount, Byte* byteStart, int byteCount);
    internal bool AddChar(char ch, int numBytes);
    internal bool AddChar(char ch);
    internal bool AddChar(char ch1, char ch2, int numBytes);
    internal void AdjustBytes(int count);
    internal bool get_MoreData();
    internal bool EvenMoreData(int count);
    internal byte GetNextByte();
    internal int get_BytesUsed();
    internal bool Fallback(byte fallbackByte);
    internal bool Fallback(byte byte1, byte byte2);
    internal bool Fallback(byte byte1, byte byte2, byte byte3, byte byte4);
    internal bool Fallback(Byte[] byteBuffer);
    internal int get_Count();
}
internal abstract class System.Text.EncodingNLS : Encoding {
    private string _encodingName;
    private string _webName;
    public string EncodingName { get; }
    public string WebName { get; }
    public string HeaderName { get; }
    public string BodyName { get; }
    protected EncodingNLS(int codePage);
    protected EncodingNLS(int codePage, EncoderFallback enc, DecoderFallback dec);
    public abstract virtual int GetByteCount(Char* chars, int count, EncoderNLS encoder);
    public abstract virtual int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount, EncoderNLS encoder);
    public abstract virtual int GetCharCount(Byte* bytes, int count, DecoderNLS decoder);
    public abstract virtual int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount, DecoderNLS decoder);
    public virtual int GetByteCount(Char[] chars, int index, int count);
    public virtual int GetByteCount(string s);
    public virtual int GetByteCount(Char* chars, int count);
    public virtual int GetBytes(string s, int charIndex, int charCount, Byte[] bytes, int byteIndex);
    public virtual int GetBytes(Char[] chars, int charIndex, int charCount, Byte[] bytes, int byteIndex);
    public virtual int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount);
    public virtual int GetCharCount(Byte[] bytes, int index, int count);
    public virtual int GetCharCount(Byte* bytes, int count);
    public virtual int GetChars(Byte[] bytes, int byteIndex, int byteCount, Char[] chars, int charIndex);
    public virtual int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount);
    public virtual string GetString(Byte[] bytes, int index, int count);
    public virtual Decoder GetDecoder();
    public virtual Encoder GetEncoder();
    internal void ThrowBytesOverflow(EncoderNLS encoder, bool nothingEncoded);
    internal void ThrowCharsOverflow(DecoderNLS decoder, bool nothingDecoded);
    [DoesNotReturnAttribute]
internal void ThrowBytesOverflow();
    [DoesNotReturnAttribute]
internal void ThrowCharsOverflow();
    public virtual string get_EncodingName();
    internal static string GetLocalizedEncodingNameResource(int codePage);
    public virtual string get_WebName();
    public virtual string get_HeaderName();
    public virtual string get_BodyName();
}
internal static class System.Text.EncodingTable : object {
    private static Dictionary`2<string, int> s_nameToCodePageCache;
    private static Dictionary`2<int, string> s_codePageToWebNameCache;
    private static Dictionary`2<int, string> s_codePageToEnglishNameCache;
    private static ReaderWriterLockSlim s_cacheLock;
    private static string s_encodingNames;
    private static Int32[] s_encodingNameIndices;
    private static UInt16[] s_codePagesByName;
    private static UInt16[] s_mappedCodePages;
    private static string s_webNames;
    private static Int32[] s_webNameIndices;
    private static string s_englishNames;
    private static Int32[] s_englishNameIndices;
    private static EncodingTable();
    internal static int GetCodePageFromName(string name);
    private static int InternalGetCodePageFromName(string name);
    private static int CompareOrdinal(string s1, string s2, int index, int length);
    internal static string GetWebNameFromCodePage(int codePage);
    internal static string GetEnglishNameFromCodePage(int codePage);
    private static string GetNameFromCodePage(int codePage, string names, Int32[] indices, Dictionary`2<int, string> cache);
}
internal class System.Text.EUCJPEncoding : DBCSCodePageEncoding {
    protected virtual bool CleanUpBytes(Int32& bytes);
    protected virtual void CleanUpEndBytes(Char* chars);
}
internal class System.Text.GB18030Encoding : DBCSCodePageEncoding {
    private static int GBLast4ByteCode;
    internal Char* map4BytesToUnicode;
    internal Byte* mapUnicodeTo4BytesFlags;
    private static int GB18030;
    private static int GBSurrogateOffset;
    private static int GBLastSurrogateOffset;
    private UInt16[] _tableUnicodeToGBDiffs;
    protected virtual void LoadManagedCodePage();
    internal bool Is4Byte(char charTest);
    public virtual int GetByteCount(Char* chars, int count, EncoderNLS encoder);
    public virtual int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount, EncoderNLS encoder);
    internal bool IsGBLeadByte(short ch);
    internal bool IsGBTwoByteTrailing(short ch);
    internal bool IsGBFourByteTrailing(short ch);
    internal int GetFourBytesOffset(short offset1, short offset2, short offset3, short offset4);
    public virtual int GetCharCount(Byte* bytes, int count, DecoderNLS baseDecoder);
    public virtual int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount, DecoderNLS baseDecoder);
    public virtual int GetMaxByteCount(int charCount);
    public virtual int GetMaxCharCount(int byteCount);
    public virtual Decoder GetDecoder();
}
internal class System.Text.InternalDecoderBestFitFallback : DecoderFallback {
    internal BaseCodePageEncoding encoding;
    internal Char[] arrayBestFit;
    internal char cReplacement;
    public int MaxCharCount { get; }
    internal InternalDecoderBestFitFallback(BaseCodePageEncoding _encoding);
    public virtual DecoderFallbackBuffer CreateFallbackBuffer();
    public virtual int get_MaxCharCount();
    public virtual bool Equals(object value);
    public virtual int GetHashCode();
}
internal class System.Text.InternalDecoderBestFitFallbackBuffer : DecoderFallbackBuffer {
    internal char cBestFit;
    internal int iCount;
    internal int iSize;
    private InternalDecoderBestFitFallback _oFallback;
    private static object s_InternalSyncObject;
    private static object InternalSyncObject { get; }
    public int Remaining { get; }
    public InternalDecoderBestFitFallbackBuffer(InternalDecoderBestFitFallback fallback);
    private static object get_InternalSyncObject();
    public virtual bool Fallback(Byte[] bytesUnknown, int index);
    public virtual char GetNextChar();
    public virtual bool MovePrevious();
    public virtual int get_Remaining();
    public virtual void Reset();
    internal int InternalFallback(Byte[] bytes, Byte* pBytes);
    private char TryBestFit(Byte[] bytesCheck);
}
internal class System.Text.InternalEncoderBestFitFallback : EncoderFallback {
    internal BaseCodePageEncoding encoding;
    internal Char[] arrayBestFit;
    public int MaxCharCount { get; }
    internal InternalEncoderBestFitFallback(BaseCodePageEncoding _encoding);
    public virtual EncoderFallbackBuffer CreateFallbackBuffer();
    public virtual int get_MaxCharCount();
    public virtual bool Equals(object value);
    public virtual int GetHashCode();
}
internal class System.Text.InternalEncoderBestFitFallbackBuffer : EncoderFallbackBuffer {
    private char _cBestFit;
    private InternalEncoderBestFitFallback _oFallback;
    private int _iCount;
    private int _iSize;
    private static object s_InternalSyncObject;
    private static object InternalSyncObject { get; }
    public int Remaining { get; }
    public InternalEncoderBestFitFallbackBuffer(InternalEncoderBestFitFallback fallback);
    private static object get_InternalSyncObject();
    public virtual bool Fallback(char charUnknown, int index);
    public virtual bool Fallback(char charUnknownHigh, char charUnknownLow, int index);
    public virtual char GetNextChar();
    public virtual bool MovePrevious();
    public virtual int get_Remaining();
    public virtual void Reset();
    private char TryBestFit(char cUnknown);
}
internal class System.Text.ISCIIEncoding : EncodingNLS {
    private static int CodeDevanagari;
    private static int CodePunjabi;
    private static int MultiByteBegin;
    private static int IndicBegin;
    private static int IndicEnd;
    private static byte ControlATR;
    private static byte ControlCodePageStart;
    private static byte Virama;
    private static byte Nukta;
    private static byte DevenagariExt;
    private static char ZWNJ;
    private static char ZWJ;
    private int _defaultCodePage;
    private static Int32[] s_UnicodeToIndicChar;
    private static Byte[] s_SecondIndicByte;
    private static Int32[] s_IndicMappingIndex;
    private static Char[0...,0...,0...] s_IndicMapping;
    public ISCIIEncoding(int codePage);
    private static ISCIIEncoding();
    private sealed virtual override void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context);
    public virtual int GetMaxByteCount(int charCount);
    public virtual int GetMaxCharCount(int byteCount);
    public virtual int GetByteCount(Char* chars, int count, EncoderNLS baseEncoder);
    public virtual int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount, EncoderNLS baseEncoder);
    public virtual int GetCharCount(Byte* bytes, int count, DecoderNLS baseDecoder);
    public virtual int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount, DecoderNLS baseDecoder);
    public virtual Decoder GetDecoder();
    public virtual Encoder GetEncoder();
    public virtual int GetHashCode();
}
internal class System.Text.ISO2022Encoding : DBCSCodePageEncoding {
    private static byte SHIFT_OUT;
    private static byte SHIFT_IN;
    private static byte ESCAPE;
    private static byte LEADBYTE_HALFWIDTH;
    private static Int32[] s_tableBaseCodePages;
    private static UInt16[] s_HalfToFullWidthKanaTable;
    internal ISO2022Encoding(int codePage);
    private static ISO2022Encoding();
    protected virtual bool CleanUpBytes(Int32& bytes);
    public virtual int GetByteCount(Char* chars, int count, EncoderNLS baseEncoder);
    public virtual int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount, EncoderNLS baseEncoder);
    public virtual int GetCharCount(Byte* bytes, int count, DecoderNLS baseDecoder);
    public virtual int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount, DecoderNLS baseDecoder);
    private int GetBytesCP5022xJP(Char* chars, int charCount, Byte* bytes, int byteCount, ISO2022Encoder encoder);
    private int GetBytesCP50225KR(Char* chars, int charCount, Byte* bytes, int byteCount, ISO2022Encoder encoder);
    private int GetBytesCP52936(Char* chars, int charCount, Byte* bytes, int byteCount, ISO2022Encoder encoder);
    private int GetCharsCP5022xJP(Byte* bytes, int byteCount, Char* chars, int charCount, ISO2022Decoder decoder);
    private ISO2022Modes CheckEscapeSequenceJP(Byte[] bytes, int escapeCount);
    private byte DecrementEscapeBytes(Byte[]& bytes, Int32& count);
    private int GetCharsCP50225KR(Byte* bytes, int byteCount, Char* chars, int charCount, ISO2022Decoder decoder);
    private ISO2022Modes CheckEscapeSequenceKR(Byte[] bytes, int escapeCount);
    private int GetCharsCP52936(Byte* bytes, int byteCount, Char* chars, int charCount, ISO2022Decoder decoder);
    public virtual int GetMaxByteCount(int charCount);
    public virtual int GetMaxCharCount(int byteCount);
    public virtual Encoder GetEncoder();
    public virtual Decoder GetDecoder();
}
internal class System.Text.SBCSCodePageEncoding : BaseCodePageEncoding {
    private Char* _mapBytesToUnicode;
    private Byte* _mapUnicodeToBytes;
    private static char UNKNOWN_CHAR;
    private byte _byteUnknown;
    private char _charUnknown;
    private static object s_InternalSyncObject;
    private static object InternalSyncObject { get; }
    public bool IsSingleByte { get; }
    public SBCSCodePageEncoding(int codePage);
    public SBCSCodePageEncoding(int codePage, int dataCodePage);
    internal static ushort ReadUInt16(Byte* pByte);
    protected virtual void LoadManagedCodePage();
    private static object get_InternalSyncObject();
    protected virtual void ReadBestFitTable();
    public virtual int GetByteCount(Char* chars, int count, EncoderNLS encoder);
    public virtual int GetBytes(Char* chars, int charCount, Byte* bytes, int byteCount, EncoderNLS encoder);
    public virtual int GetCharCount(Byte* bytes, int count, DecoderNLS decoder);
    public virtual int GetChars(Byte* bytes, int byteCount, Char* chars, int charCount, DecoderNLS decoder);
    public virtual int GetMaxByteCount(int charCount);
    public virtual int GetMaxCharCount(int byteCount);
    public virtual bool get_IsSingleByte();
}
