public class FLEXYGO.Environment.DefaultTemplate : object {
    public string TemplateType;
    public string Body;
    public string Header;
    public string Footer;
    public string Description;
    public bool UserDefinedGroups;
}
public class FLEXYGO.Environment.DefaultTemplates : ClassCollection`1<DefaultTemplate> {
    private string A;
    private eDBType A;
    public DefaultTemplates(string ConfConnstr, eDBType ConfDBType);
    public void Reload();
    private void A();
}
public class FLEXYGO.Environment.EnvironmentSettings : MarshalByRefObject {
    private string A;
    private eDBType A;
    private UserSecurityConfig A;
    private DefaultTemplates A;
    public DefaultTemplates DefaultTemplates { get; }
    public EnvironmentSettings(string ConfConnString, eDBType ConfDBType, UserSecurityConfig UserSecurity);
    protected EnvironmentSettings(SerializationInfo info, StreamingContext context);
    protected virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public string ToJson();
    public ModuleDefinition GetModule(string ModuleName, KeyValuePairs[] Defaults);
    public HelpPage GetHelpPage(string HelpId);
    public Page GetPage(string PageName);
    public Page FindPage(ePageType Type, string ObjectName, string CollectionName, string InterfaceName, UserSecurityConfig UserSecurity);
    public DefaultTemplates get_DefaultTemplates();
}
public enum FLEXYGO.Environment.ePageType : Enum {
    public int value__;
    [StringValueAttribute("view")]
public static ePageType View;
    [StringValueAttribute("edit")]
public static ePageType Edit;
    [StringValueAttribute("list")]
public static ePageType List;
    [StringValueAttribute("edit_table")]
public static ePageType EditTable;
    [StringValueAttribute("generic")]
public static ePageType Generic;
    [StringValueAttribute("process_params")]
public static ePageType ProcessParams;
    [StringValueAttribute("report_params")]
public static ePageType ReportParams;
    [StringValueAttribute("search")]
public static ePageType Search;
}
public class FLEXYGO.Environment.HelpPage : object {
    internal string A;
    internal string a;
    internal string B;
    internal string b;
    internal string C;
    internal int A;
    internal string c;
    internal string D;
    public string HelpId { get; }
    public string Title { get; }
    public string HTMLText { get; }
    public string TargetId { get; }
    public string ExternalUrl { get; }
    public int Order { get; }
    public string IconClass { get; }
    public string ImagePath { get; }
    public string get_HelpId();
    public string get_Title();
    public string get_HTMLText();
    public string get_TargetId();
    public string get_ExternalUrl();
    public int get_Order();
    public string get_IconClass();
    public string get_ImagePath();
}
public class FLEXYGO.Environment.HelpPageCollection : ClassCollection`1<HelpPage> {
    public HelpPageCollection(string ConfConnStr, eDBType ConfDBType, string HelpId);
    internal void A(string , eDBType , string );
}
public class FLEXYGO.Environment.LessFile : object {
    public string FileName;
    public string CssId;
    public string SkinId;
    public bool InBundle;
}
public class FLEXYGO.Environment.LessVariable : object {
    public string VarValue;
    public string VarName;
    public string VarType;
}
public class FLEXYGO.Environment.MasterTable : object {
    private string A;
    private MasterTableFields A;
    private string a;
    private bool A;
    private UserSecurityConfig A;
    private bool a;
    private string B;
    public MasterTableSettings GetSettings { get; }
    public MasterTableFields GetSchema { get; }
    public MasterTable(string TableName, UserSecurityConfig UserSecurity);
    public MasterTableSettings get_GetSettings();
    public MasterTableFields get_GetSchema();
    private MasterTableFields A();
    private bool a();
    private string B();
    public string GetConnStringId();
    public List`1<BaseCollection> GetData();
    public List`1<BaseCollection> GetData(int StartPage, int PageSize);
    public List`1<BaseCollection> GetData(string Where);
    public bool Insert(MasterTableProperties values, BaseCollection& returnRow);
    public bool Update(MasterTableProperties keys, MasterTableProperties values, BaseCollection& returnRow);
    public bool Delete(MasterTableProperties keys);
    private void b();
    private string A(MasterTableProperties );
    private string a(MasterTableProperties );
    private string B(MasterTableProperties );
    private void A(MasterTableField );
}
public class FLEXYGO.Environment.ModuleDefinition : object {
    public string ModuleName;
    public string TypeId;
    public string ClassId;
    public string ObjectName;
    public string ObjectFilter;
    public string Descrip;
    public string Title;
    public bool CollapsibleButton;
    public bool FullScreenButton;
    public bool RefreshButton;
    public bool SearchButton;
    public string ContainerTemplate;
    public string ContainerClass;
    public string SQLSentence;
    public string Header;
    public string HTMLText;
    public string Footer;
    public string Empty;
    public string CssText;
    public string ScriptText;
    public string ChartTypeId;
    public string ChartSettingName;
    public string Params;
    public string JsonOptions;
    public string Path;
    public string TransformFilePath;
    public bool ManualInit;
    public string HTMLInit;
    public bool ModuleViewers;
    public string IconClass;
    public ModulePager Pager;
    public int PageSize;
    public string ConnStringID;
    public ModuleToolbar Toolbar;
    public ModuleToolbar GridBar;
    public string TemplateId;
    public string HeaderClass;
    public string ModuleClass;
    public string Series;
    public string Labels;
    public string ChartValues;
    public bool Searcher;
    public string SchedulerName;
    public string ChartBackground;
    public string ChartBorder;
    public string KanbanSettingsName;
    public string TimelineSettingName;
    public string PlannerSettings;
    public int Cache;
    public string PresetName;
    public bool RemovePreset;
    public string MixedChartTypes;
    public string MixedChartLabels;
    public bool ChartLineBorderDash;
    public bool ChartLineFill;
    internal Dictionary`2<string, string> A;
    public string GetPageFilter(string PageName);
}
public class FLEXYGO.Environment.ModuleEvent : object {
    public string PageName;
    public string ModuleName;
    public string ModuleEventId;
    public string EventClass;
    public string EventType;
    public string EventAction;
    public string ProcessName;
    public string ObjectFilter;
    public string PropertyFilter;
    public string ProcessFilter;
    public string ModuleFilter;
    public string PageFilter;
    public string MethodFilter;
}
public class FLEXYGO.Environment.ModuleEvents : ClassCollection`1<ModuleEvent> {
}
public class FLEXYGO.Environment.ModulePager : object {
    public string PagerId;
    public string Descrip;
    public int NumButtons;
    public string Template;
    public string Position;
}
public class FLEXYGO.Environment.ModulePagers : ClassCollection`1<ModulePager> {
    public ModulePagers(string ConfConnstr, eDBType ConfDBType);
    public ModulePagers(string ConfConnstr, eDBType ConfDBType, string ModulePagerId);
    private void A(string , eDBType , string );
    public bool Add(ModulePager aModulePager);
    public bool Remove(ModulePager aModulePager);
    public bool Contains(string PagerId);
}
public class FLEXYGO.Environment.Modules : ClassCollection`1<ModuleDefinition> {
    public Modules(string ConfConnstr, eDBType ConfDBType, UserSecurityConfig securityConfig, string ModuleName, KeyValuePairs[] Defaults);
    private void A(string , eDBType , string , UserSecurityConfig , KeyValuePairs[] );
    public bool Add(ModuleDefinition aModule);
    public bool Remove(ModuleDefinition aModule);
    public bool Contains(string ModuleName);
}
public class FLEXYGO.Environment.ModuleToolbar : ClassCollection`1<ToolBarButton> {
    public ModuleToolbar(string ToolbarName, string ConfConnstr, eDBType ConfDBType, UserSecurityConfig securityConfig, KeyValuePairs[] Defaults);
    private void A(string , string , eDBType , UserSecurityConfig , KeyValuePairs[] );
    public static bool _checkToolbarButtonSqlDisable(ToolBarButton toolBarButton, UserSecurityConfig aUserSecurityConfig, KeyValuePairs[] Defaults);
    public bool Add(ToolBarButton aToolBarButton);
    public bool Set(Dictionary`2<string, ToolBarButton> toolbar);
    public void checkParentButtonsVisibility();
    public bool Remove(ToolBarButton aToolBarButton);
    public bool Contains(string ButtonId);
}
public class FLEXYGO.Environment.Page : object {
    public string PageName;
    public ePageType Type;
    public string ObjectName;
    public string InterfaceName;
    public string LayoutName;
    public string Name;
    public string IconCssClass;
    public string IconName;
    public string Descrip;
    public string OriginalDescrip;
    public string UrlRewrite;
    public string Script;
    public bool ScriptActive;
    public string Style;
    public bool Generic;
    public int RefreshInterval;
    public string LayoutTemplate;
    public string BodyCssClass;
    public PageModules Modules;
    public string PageWindowDescrip;
    public string StrType { get; }
    public string get_StrType();
}
public class FLEXYGO.Environment.PageModule : object {
    public string PageName;
    public string ModuleName;
    public string LayoutPositionId;
    public string RelationWhere;
    public string ContainerTemplate;
    public string WebComponent;
    public string ContainerClass;
    public string Title;
    public bool CanCollapse;
    public bool CanEnlarge;
    public bool CanRefresh;
    public string IconName;
    public string IconClass;
    public string IconImage;
    public string Params;
    public int Order;
    public string HeaderClass;
    public string ModuleClass;
    public string JSAfterLoad;
    public string TabName;
    public string SQLEnabled;
    public string ConnStringID;
    public bool ManualInit;
    public int TabOrder;
    public bool ShowWhenNew;
    public bool InitHidden;
    public string ModuleObjectName;
    public BaseCollection ObjectDefaults;
    public ModuleEvents Events;
    public string PresetName;
    public string PresetText;
    public string PresetIcon;
    public bool RemovePreset;
    public string HTMLInit;
    public bool ModuleViewers;
    public bool Active;
    public ArrayList PropsEventDependant;
    public string Skeleton;
}
public class FLEXYGO.Environment.PageModules : ClassCollection`1<PageModule> {
}
public class FLEXYGO.Environment.Pages : ClassCollection`1<Page> {
    public Pages(string ConfConnStr, eDBType ConfDBType, UserSecurityConfig UserSecurity, ePageType PageType, string ObjectName);
    public Pages(string ConfConnStr, eDBType ConfDBType, UserSecurityConfig UserSecurity, string PageName);
    public Pages(string ConfConnStr, eDBType ConfDBType, UserSecurityConfig UserSecurity);
    private void A(string , eDBType , ePageType , UserSecurityConfig , string , string );
    public static PageModules LoadPageTabModules(string ConfConnStr, eDBType ConfDBType, string TabName, UserSecurityConfig UserSecurity);
    public bool Add(Page Page);
    public bool Remove(Page Page);
    public bool Contains(string PageName);
}
public class FLEXYGO.Environment.Sentinel : object {
    public static void logBlackListErrors(string ActionName, IDictionary`2<string, object> ActionParameters, eErrorSeverity Severity, string UserName, string UserId, string MoreInfo);
    public static void logObjectErrors(Exception exc, eErrorSeverity Severity, int typeCode, eDBAction ActionType, string ObjectName, string ObjectWhere, string ConnStringId, string ProcessName, string UserName, string UserId, string MoreInfo);
    public static void logProcessErrors(Exception exc, eErrorSeverity Severity, int typeCode, string ProcessName, BaseCollection ProcessParams, string ObjectName, string ObjectWhere, string ConnStringId, string UserName, string UserId, string MoreInfo);
    public static void logControllerErrors(Exception exc, eErrorSeverity Severity, string ControllerName, string ObjectName, string ObjectWhere, string ConnStringId, string ProcessName, string UserName, string UserId, string MoreInfo);
    private static void A(Exception , eErrorSeverity , eErrorLevel , string , IDictionary`2<string, object> , string , string , string , string , string , eDBAction , string , string );
}
public class FLEXYGO.Environment.Skin : object {
    internal string A;
    internal string a;
    public List`1<LessFile> CssFiles;
    internal List`1<LessFile> A;
    internal SkinVariables A;
    internal string B;
    internal eDBType A;
    internal string b;
    internal string C;
    public string SkinId { get; }
    public string Descrip { get; }
    public SkinVariables Variables { get; }
    public string CssOverrides { get; }
    public string ScriptOverrides { get; }
    public string get_SkinId();
    public string get_Descrip();
    internal List`1<LessFile> A();
    public SkinVariables get_Variables();
    public string get_CssOverrides();
    public string get_ScriptOverrides();
    public bool updateCachedVars(string ConfConnstr, eDBType ConfDBType);
}
public class FLEXYGO.Environment.Skins : ClassCollection`1<Skin> {
    public Skins(string ConfConnstr, eDBType ConfDBType);
    public bool Add(Skin Skin);
    public bool Remove(Skin Skin);
    public bool Contains(string SkinId);
    private void A(string , eDBType );
    private LessFile A(List`1<LessFile> , string );
}
public class FLEXYGO.Environment.SkinVariables : ClassCollection`1<LessVariable> {
}
public class FLEXYGO.Environment.TemplateToolbar : object {
    public string ToolbarId;
    public ModuleToolbar Toolbar;
}
public class FLEXYGO.Environment.TemplateToolbarCollection : ClassCollection`1<TemplateToolbar> {
    public bool Add(TemplateToolbar aTemplateToolbar);
    public bool Remove(TemplateToolbar aTemplateToolbar);
    public bool Contains(string ToolbarId);
}
public class FLEXYGO.Environment.ToolBarButton : object {
    public string ButtonId;
    public string ParentButtonId;
    public int Order;
    public string Text;
    public string ToolTip;
    public string TypeId;
    public bool HideText;
    public string CssClass;
    public string SQlSentence;
    public string ProcessName;
    public string TargetId;
    public string ReportName;
    public string HelpId;
    public string SettingId;
    public bool Disabled;
    public string PositionId;
    public string IconClass;
    public string ImagePath;
    public string ObjectName;
    public string ObjectWhere;
    public bool ReportHasParams;
    public bool BagOnly;
    public string BagObject;
    public string SQLEnabledDescrip;
    public string SQLEnabled;
    public string ConnStringId;
    public bool ExcludeHist;
}
