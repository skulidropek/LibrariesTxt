public interface FLEXYGO.flxCrystal.ICrystalReportDocument {
    public string ReportDescrip { get; public set; }
    public abstract virtual void Dispose();
    public abstract virtual string get_ReportDescrip();
    public abstract virtual void set_ReportDescrip(string value);
    public abstract virtual Stream GetReportStream();
}
public interface FLEXYGO.flxCrystal.ICrystalReportDocumentProvider {
    public abstract virtual ICrystalReportDocument CrystalReportDocument(string ReportPath, string ConnString, eReportModes ReportMode, IEnumerable`1<IKeyValuePairs> ReportParams, string ObjectTableName, string ObjSQLFilter, string ReportSelectionFormula, bool FilterReportReplacingSentence, ArrayList KeyCollection, bool UseTLS1_2);
}
public static class FLEXYGO.flxCrystal.ReportMode : object {
    public static eReportModes getReportMode(string mode);
}
public enum FLEXYGO.flxDataManager.eDBType : Enum {
    public int value__;
    public static eDBType SQL;
    public static eDBType OLEDB;
    public static eDBType MYSQL;
    public static eDBType ORACLE;
}
public interface FLEXYGO.flxGlobals.IGlobalVars {
    [DynamicAttribute]
public object ConfTokenInterface { get; public set; }
    public abstract virtual object get_ConfTokenInterface();
    public abstract virtual void set_ConfTokenInterface(object value);
}
public interface FLEXYGO.Interfaces.Datamanager.IConnectionString {
    public string ConnectionString { get; public set; }
    public string Name { get; public set; }
    public string ProviderName { get; public set; }
    public abstract virtual string get_ConnectionString();
    public abstract virtual void set_ConnectionString(string value);
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_ProviderName();
    public abstract virtual void set_ProviderName(string value);
}
public interface FLEXYGO.Interfaces.Embedded.IEmbedded {
    public abstract virtual string getAssemblyLocation();
}
public interface FLEXYGO.Interfaces.Push.IPush {
    public abstract virtual string sendMessage(String[] sToken, string sPlatform, string sNotId, string sTitle, string sMessage, string sJavaFunction, bool sCausesSync, string sPushToken, long sExpiryTime, bool sAllUsers);
}
public class FLEXYGO.Interfaces.SignalR.Events.eEventClass : object {
    private string A;
    public static eEventClass Entity;
    public static eEventClass Process;
    public static eEventClass Push;
    public static eEventClass Message;
    public static eEventClass Gipe;
    public static eEventClass Sentinel;
    private eEventClass(string );
    protected eEventClass(SerializationInfo info, StreamingContext context);
    private static eEventClass();
    public virtual string ToString();
    public static bool op_Equality(eEventClass a, eEventClass b);
    public static bool op_Inequality(eEventClass a, eEventClass b);
    public static string op_Implicit(eEventClass u);
    public static eEventClass op_Explicit(string s);
    public sealed virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class FLEXYGO.Interfaces.SignalR.Events.eEventType : object {
    private string A;
    public static eEventType Inserted;
    public static eEventType Updated;
    public static eEventType Deleted;
    public static eEventType Executed;
    public static eEventType Notify;
    public static eEventType Generic;
    public static eEventType Success;
    public static eEventType Warning;
    public static eEventType Error;
    public static eEventType Info;
    public static eEventType Exception;
    public static eEventType AskParams;
    public static eEventType AskEntity;
    public static eEventType AskYesNo;
    public static eEventType DebugStep;
    public static eEventType JSReturn;
    public static eEventType Start;
    public static eEventType Finish;
    public static eEventType Sentinel;
    private eEventType(string );
    protected eEventType(SerializationInfo info, StreamingContext context);
    private static eEventType();
    public virtual string ToString();
    public static bool op_Equality(eEventType a, eEventType b);
    public static bool op_Inequality(eEventType a, eEventType b);
    public static string op_Implicit(eEventType u);
    public static eEventType op_Explicit(string s);
    public sealed virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
public class FLEXYGO.Interfaces.SignalR.Events.EventHelper : object {
    [CompilerGeneratedAttribute]
private eEventClass A;
    [CompilerGeneratedAttribute]
private eEventType A;
    [CompilerGeneratedAttribute]
private object A;
    [CompilerGeneratedAttribute]
private string A;
    [CompilerGeneratedAttribute]
private string a;
    [CompilerGeneratedAttribute]
private string B;
    public eEventClass EventClass { get; public set; }
    public eEventType EventType { get; public set; }
    public object sender { get; public set; }
    public string masterIdentity { get; public set; }
    public string detailIdentity { get; public set; }
    public string firedBy { get; public set; }
    public EventHelper(eEventClass lEventClass, eEventType lEventType);
    [CompilerGeneratedAttribute]
public sealed virtual eEventClass get_EventClass();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EventClass(eEventClass value);
    [CompilerGeneratedAttribute]
public sealed virtual eEventType get_EventType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EventType(eEventType value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_sender();
    [CompilerGeneratedAttribute]
public sealed virtual void set_sender(object value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_masterIdentity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_masterIdentity(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_detailIdentity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_detailIdentity(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_firedBy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_firedBy(string value);
}
public interface FLEXYGO.Interfaces.SignalR.Events.IEventHelper {
    public eEventClass EventClass { get; public set; }
    public eEventType EventType { get; public set; }
    public object sender { get; public set; }
    public string masterIdentity { get; public set; }
    public string detailIdentity { get; public set; }
    public string firedBy { get; public set; }
    public abstract virtual eEventClass get_EventClass();
    public abstract virtual void set_EventClass(eEventClass value);
    public abstract virtual eEventType get_EventType();
    public abstract virtual void set_EventType(eEventType value);
    public abstract virtual object get_sender();
    public abstract virtual void set_sender(object value);
    public abstract virtual string get_masterIdentity();
    public abstract virtual void set_masterIdentity(string value);
    public abstract virtual string get_detailIdentity();
    public abstract virtual void set_detailIdentity(string value);
    public abstract virtual string get_firedBy();
    public abstract virtual void set_firedBy(string value);
}
public interface FLEXYGO.Interfaces.SignalR.Events.IOnlineUser {
    public string Username { get; public set; }
    public string ConnectionId { get; public set; }
    public string UserId { get; public set; }
    public string RoleName { get; public set; }
    public string CultureId { get; public set; }
    public string Email { get; public set; }
    public string FullName { get; public set; }
    public bool IsAdministrator { get; public set; }
    public bool IsDesigner { get; public set; }
    public string Reference { get; public set; }
    public string Subreference { get; public set; }
    public string ProfileName { get; public set; }
    public abstract virtual string get_Username();
    public abstract virtual void set_Username(string value);
    public abstract virtual string get_ConnectionId();
    public abstract virtual void set_ConnectionId(string value);
    public abstract virtual string get_UserId();
    public abstract virtual void set_UserId(string value);
    public abstract virtual string get_RoleName();
    public abstract virtual void set_RoleName(string value);
    public abstract virtual string get_CultureId();
    public abstract virtual void set_CultureId(string value);
    public abstract virtual string get_Email();
    public abstract virtual void set_Email(string value);
    public abstract virtual string get_FullName();
    public abstract virtual void set_FullName(string value);
    public abstract virtual bool get_IsAdministrator();
    public abstract virtual void set_IsAdministrator(bool value);
    public abstract virtual bool get_IsDesigner();
    public abstract virtual void set_IsDesigner(bool value);
    public abstract virtual string get_Reference();
    public abstract virtual void set_Reference(string value);
    public abstract virtual string get_Subreference();
    public abstract virtual void set_Subreference(string value);
    public abstract virtual string get_ProfileName();
    public abstract virtual void set_ProfileName(string value);
}
public interface FLEXYGO.Interfaces.SignalR.Events.ISignalRProvider {
    public IDictionary`2<string, IOnlineUser> OnlineUsers { get; }
    public abstract virtual IDictionary`2<string, IOnlineUser> get_OnlineUsers();
    public abstract virtual void FireGenericUserEvent(EventHelper eventInfo, string UserName);
    public abstract virtual void FireGenericUserIDEvent(EventHelper eventInfo, string UserId);
    public abstract virtual void FireGenericAllUserEvent(EventHelper eventInfo);
}
public static class FLEXYGO.ServiceProvider : object {
    public static IServiceProvider Provider;
}
public interface FLEXYGO.Utilities.Cryptography.IEncryption {
    public abstract virtual string DeCrypt(string aData);
    public abstract virtual string DeCrypt(string aData, string aKey);
    public abstract virtual string DeCryptHTML(string aData);
    public abstract virtual string DeCryptHTML(string aData, string aKey);
    public abstract virtual string Encrypt(string aData);
    public abstract virtual string Encrypt(string aData, string aKey);
    public abstract virtual string EncryptHTML(string aData);
    public abstract virtual string EncryptHTML(string aData, string aKey);
    public abstract virtual bool IsEncrypted(string aData);
}
public interface FLEXYGO.Utilities.General.IClassCollection {
    public string ToJSon { get; }
    public abstract virtual string get_ToJSon();
}
public interface FLEXYGO.Utilities.General.IKeyValuePairs {
    public string Key { get; public set; }
    public object Value { get; public set; }
    public abstract virtual string get_Key();
    public abstract virtual void set_Key(string value);
    public abstract virtual object get_Value();
    public abstract virtual void set_Value(object value);
    public abstract virtual string StringValue();
}
public interface IApplication {
    public IDictionary`2<string, IConnectionString> ConnectionStrings { get; }
    public abstract virtual IDictionary`2<string, IConnectionString> get_ConnectionStrings();
}
public interface ICurrent {
    public string Username { get; }
    public string Language { get; }
    public string AppPath { get; }
    public string AppFullPath { get; }
    public string UrlWithoutReferer { get; }
    public string UserAgent { get; }
    public string UserBrowser { get; }
    public string UserVersion { get; }
    public string UserIp { get; }
    public bool IsLoggedIn { get; }
    public bool IsMockContext { get; }
    public NameValueCollection Headers { get; }
    public object Request { get; }
    public string ResponseContentType { get; public set; }
    public int ResponseStatusCode { get; public set; }
    public string OfficePath { get; }
    public string FullUrl { get; }
    public string BaseUrl { get; }
    public string AbsoluteUri { get; }
    public bool IsTest { get; }
    public abstract virtual string get_Username();
    public abstract virtual string get_Language();
    public abstract virtual string get_AppPath();
    public abstract virtual string get_AppFullPath();
    public abstract virtual string get_UrlWithoutReferer();
    public abstract virtual string get_UserAgent();
    public abstract virtual string get_UserBrowser();
    public abstract virtual string get_UserVersion();
    public abstract virtual string get_UserIp();
    public abstract virtual bool get_IsLoggedIn();
    public abstract virtual bool get_IsMockContext();
    public abstract virtual string MapPath(string relativePath);
    public abstract virtual NameValueCollection get_Headers();
    public abstract virtual object get_Request();
    public abstract virtual void ResponseWrite(string userAgent);
    public abstract virtual string get_ResponseContentType();
    public abstract virtual void set_ResponseContentType(string value);
    public abstract virtual int get_ResponseStatusCode();
    public abstract virtual void set_ResponseStatusCode(int value);
    public abstract virtual void ResponseEnd();
    public abstract virtual string get_OfficePath();
    public abstract virtual void lCheckValue(string path);
    public abstract virtual object LGetValue(string key);
    public abstract virtual string LGetCurrentLicenseRate();
    public abstract virtual string LGetCurrentLicense();
    public abstract virtual string LGetCurrentProduct();
    public abstract virtual string getCurrentProjectName();
    public abstract virtual string getCurrentFlexygoVersion();
    public abstract virtual string getCurrentProductVersion();
    public abstract virtual ISettings getCurrentSettings();
    public abstract virtual string get_FullUrl();
    public abstract virtual string get_BaseUrl();
    public abstract virtual string get_AbsoluteUri();
    public abstract virtual bool get_IsTest();
}
public interface ISetting {
    public string SettingName { get; public set; }
    public string Value { get; public set; }
    public abstract virtual string get_SettingName();
    public abstract virtual void set_SettingName(string value);
    public abstract virtual string get_Value();
    public abstract virtual void set_Value(string value);
}
public interface ISettings {
    public abstract virtual bool Add(ISetting Setting);
    public abstract virtual bool Contains(string SettingName);
    public abstract virtual void Reload();
    public abstract virtual bool Remove(ISetting Setting);
}
