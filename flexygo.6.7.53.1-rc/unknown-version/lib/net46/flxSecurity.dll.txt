internal enum A.A : Enum {
    public int value__;
    public static A A;
    public static A a;
    public static A B;
}
public class BlackList : object {
    private string A;
    public string LastError;
    private static object A;
    public BlackList(string _tablename);
    private static BlackList();
    private DataView A();
    public CheckData GetChekData(DataView dv, string Method, string Param);
    public bool Check(string Method, IDictionary`2<string, object> Params);
}
public class FLEXYGO.Objects.Security.UserObjectPropertySecurity : object {
    internal string A;
    internal string a;
    internal bool A;
    internal bool a;
    internal string A();
}
public class FLEXYGO.Objects.Security.UserObjectPropertySecurityCollection : ClassCollection`1<UserObjectPropertySecurity> {
    public bool Add(UserObjectPropertySecurity UserObjectPropertySecurity);
    public bool Remove(UserObjectPropertySecurity UserObjectPropertySecurity);
    public bool Remove(string ObjectName, string PropertyName);
    public bool Contains(string ObjectName, string PropertyName);
    public UserObjectPropertySecurity GetProperty(string ObjectName, string PropertyName);
}
public class FLEXYGO.Objects.Security.UserObjectSecurity : object {
    internal string A;
    public bool _CanUpdate;
    public bool _CanInsert;
    public bool _CanDelete;
    public bool _Visible;
    public bool _Printable;
    public bool _CollectionVisible;
    internal string a;
    internal string B;
    internal string b;
    internal string C;
    internal string c;
}
public class FLEXYGO.Objects.Security.UserObjectSecurityCollection : ClassCollection`1<UserObjectSecurity> {
    public bool Add(UserObjectSecurity UserObjectSecurity);
    public bool Remove(UserObjectSecurity UserObjectSecurity);
    public bool Contains(string ObjectName);
}
public class FLEXYGO.Objects.Security.UserProcessSecurity : object {
    internal string A;
    internal string a;
    internal bool A;
    internal string B;
    internal string A();
}
public class FLEXYGO.Objects.Security.UserProcessSecurityCollection : ClassCollection`1<UserProcessSecurity> {
    public bool Add(UserProcessSecurity UserProcessSecurity);
    public bool Remove(UserProcessSecurity UserProcessSecurity);
    public bool Remove(string ObjectName, string ProcessName);
    public bool Contains(string ObjectName, string ProcessName);
    public UserProcessSecurity GetProcess(string ObjectName, string ProcessName);
}
public class FLEXYGO.Objects.Security.UserReportSecurity : object {
    internal string A;
    internal bool A;
}
public class FLEXYGO.Objects.Security.UserReportSecurityCollection : ClassCollection`1<UserReportSecurity> {
    public bool Add(UserReportSecurity UserReportSecurity);
    public bool Remove(UserReportSecurity UserReportSecurity);
    public bool Remove(string ReportName);
    public bool Contains(string ReportName);
    public UserReportSecurity GetReport(string ReportName);
}
public interface FLEXYGO.Objects.Settings.IObjectSettings {
    public string ObjectName { get; }
    public bool IsCollection { get; }
    public string Where { get; }
    public string TableName { get; }
    public string Schema { get; }
    public string ConnStringId { get; }
    public bool CanView { get; }
    public abstract virtual string get_ObjectName();
    public abstract virtual bool get_IsCollection();
    public abstract virtual string get_Where();
    public abstract virtual string get_TableName();
    public abstract virtual string get_Schema();
    public abstract virtual string get_ConnStringId();
    public abstract virtual bool get_CanView();
}
public class FLEXYGO.Security.EmailAccount : object {
    [CompilerGeneratedAttribute]
private string A;
    [CompilerGeneratedAttribute]
private string a;
    [CompilerGeneratedAttribute]
private string B;
    [CompilerGeneratedAttribute]
private string b;
    [CompilerGeneratedAttribute]
private string C;
    [CompilerGeneratedAttribute]
private string c;
    [CompilerGeneratedAttribute]
private string D;
    [CompilerGeneratedAttribute]
private int A;
    [CompilerGeneratedAttribute]
private int a;
    [CompilerGeneratedAttribute]
private bool A;
    [CompilerGeneratedAttribute]
private bool a;
    [CompilerGeneratedAttribute]
private bool B;
    [CompilerGeneratedAttribute]
private string d;
    [CompilerGeneratedAttribute]
private string E;
    public string MailAccountId { get; public set; }
    public string Account { get; public set; }
    public string UserName { get; public set; }
    public string VisibleName { get; public set; }
    public string PopImapHost { get; public set; }
    public string SMTPHost { get; public set; }
    public string MailPassword { get; public set; }
    public int SMTPPort { get; public set; }
    public int PopImapPort { get; public set; }
    public bool UseSSL { get; public set; }
    public bool UseTLS { get; public set; }
    public bool UseSTARTTLS { get; public set; }
    public string MailAccountEndpointId { get; public set; }
    public string AuthTypeId { get; public set; }
    public EmailAccount(string MailAccountId);
    [CompilerGeneratedAttribute]
public string get_MailAccountId();
    [CompilerGeneratedAttribute]
public void set_MailAccountId(string value);
    [CompilerGeneratedAttribute]
public string get_Account();
    [CompilerGeneratedAttribute]
public void set_Account(string value);
    [CompilerGeneratedAttribute]
public string get_UserName();
    [CompilerGeneratedAttribute]
public void set_UserName(string value);
    [CompilerGeneratedAttribute]
public string get_VisibleName();
    [CompilerGeneratedAttribute]
public void set_VisibleName(string value);
    [CompilerGeneratedAttribute]
public string get_PopImapHost();
    [CompilerGeneratedAttribute]
public void set_PopImapHost(string value);
    [CompilerGeneratedAttribute]
public string get_SMTPHost();
    [CompilerGeneratedAttribute]
public void set_SMTPHost(string value);
    [CompilerGeneratedAttribute]
public string get_MailPassword();
    [CompilerGeneratedAttribute]
public void set_MailPassword(string value);
    [CompilerGeneratedAttribute]
public int get_SMTPPort();
    [CompilerGeneratedAttribute]
public void set_SMTPPort(int value);
    [CompilerGeneratedAttribute]
public int get_PopImapPort();
    [CompilerGeneratedAttribute]
public void set_PopImapPort(int value);
    [CompilerGeneratedAttribute]
public bool get_UseSSL();
    [CompilerGeneratedAttribute]
public void set_UseSSL(bool value);
    [CompilerGeneratedAttribute]
public bool get_UseTLS();
    [CompilerGeneratedAttribute]
public void set_UseTLS(bool value);
    [CompilerGeneratedAttribute]
public bool get_UseSTARTTLS();
    [CompilerGeneratedAttribute]
public void set_UseSTARTTLS(bool value);
    [CompilerGeneratedAttribute]
public string get_MailAccountEndpointId();
    [CompilerGeneratedAttribute]
public void set_MailAccountEndpointId(string value);
    [CompilerGeneratedAttribute]
public string get_AuthTypeId();
    [CompilerGeneratedAttribute]
public void set_AuthTypeId(string value);
}
public class FLEXYGO.Security.Impersonate : object {
    private int A;
    private int a;
    public static bool LogonUser(string lpszUsername, string lpszDomain, string lpszPassword, int dwLogonType, int dwLogonProvider, SafeAccessTokenHandle& phToken);
    public object startImpersonation(Func`1<object> func);
    public object startImpersonation(string userName, string domain, string password, Func`1<object> func);
}
public class FLEXYGO.Security.IPLockout : object {
    private static object A;
    private static IPLockout();
    private static DataView A();
    public static bool IsIPBlocked(string IP);
}
public class FLEXYGO.Security.UserMasterTableSecurity : object {
    internal string A;
    internal bool A;
    internal bool a;
    internal bool B;
    internal bool b;
    internal bool C;
    public bool CanView { get; }
    public bool CanInsert { get; }
    public bool CanUpdate { get; }
    public bool CanDelete { get; }
    public bool CanPrint { get; }
    public bool get_CanView();
    public bool get_CanInsert();
    public bool get_CanUpdate();
    public bool get_CanDelete();
    public bool get_CanPrint();
}
public class FLEXYGO.Security.UserMasterTableSecurityCollection : ClassCollection`1<UserMasterTableSecurity> {
    public bool Add(UserMasterTableSecurity UserMasterTableSecurity);
    public bool Remove(UserMasterTableSecurity UserMasterTableSecurity);
    public bool Remove(string TableName);
    public bool Contains(string TableName);
}
public class FLEXYGO.Security.UserModuleSecurity : object {
    internal string A;
    internal bool A;
    internal string a;
    public bool CanView { get; }
    public string ViewFilter { get; }
    public bool get_CanView();
    public string get_ViewFilter();
}
public class FLEXYGO.Security.UserModuleSecurityCollection : ClassCollection`1<UserModuleSecurity> {
    public bool Add(UserModuleSecurity UserModuleSecurity);
    public bool Remove(UserModuleSecurity UserModuleSecurity);
    public bool Remove(string ModuleName);
    public bool Contains(string ModuleName);
}
public class FLEXYGO.Security.UserNodeSecurity : object {
    internal string A;
    internal bool A;
}
public class FLEXYGO.Security.UserNodeSecurityCollection : ClassCollection`1<UserNodeSecurity> {
    public bool Add(UserNodeSecurity UserNodeSecurity);
    public bool Remove(UserNodeSecurity UserNodeSecurity);
    public bool Remove(string NodeId);
    public bool Contains(string NodeId);
}
public class FLEXYGO.Security.UserPageSecurity : object {
    internal string A;
    internal bool A;
    public bool CanView { get; }
    public bool get_CanView();
}
public class FLEXYGO.Security.UserPageSecurityCollection : ClassCollection`1<UserPageSecurity> {
    public bool Add(UserPageSecurity UserPageSecurity);
    public bool Remove(UserPageSecurity UserPageSecurity);
    public bool Remove(string PageName);
    public bool Contains(string PageName);
}
[DefaultMemberAttribute("Item")]
public class FLEXYGO.Security.UserSecurityConfig : object {
    private string A;
    private string a;
    private string B;
    private string b;
    private string C;
    private string c;
    private string D;
    private bool A;
    private UserProfile A;
    private string d;
    private bool a;
    private bool B;
    private bool b;
    private string E;
    private string e;
    private string F;
    private BaseCollection A;
    private UserConnectionCollection A;
    private bool C;
    private UserObjectSecurityCollection A;
    private bool c;
    private UserObjectPropertySecurityCollection A;
    private bool D;
    private UserProcessSecurityCollection A;
    private bool d;
    private UserReportSecurityCollection A;
    private bool E;
    private UserNodeSecurityCollection A;
    private bool e;
    private UserMasterTableSecurityCollection A;
    private bool F;
    private bool f;
    private bool G;
    private UserModuleSecurityCollection A;
    private UserFilterPropertySecurityCollection A;
    private BaseCollection a;
    private bool g;
    private UserPageSecurityCollection A;
    private string f;
    private eDBType A;
    public bool WebAPIAuthorized;
    public EmailAccount EmailAccountSettings;
    private static object A;
    private static object a;
    private static object B;
    private static object b;
    private static object C;
    private static object c;
    private static object D;
    private static object d;
    private static object E;
    private static object e;
    public string UserId { get; }
    public string UserName { get; }
    public string UserFullName { get; }
    public UserProfile Profile { get; }
    public bool IsAdministrator { get; }
    public bool IsLocked { get; }
    public bool IsDesigner { get; }
    public string RoleName { get; }
    public string CultureId { get; }
    public string Email { get; }
    public string RoleId { get; }
    public string Item { get; }
    public BaseCollection DefaultVars { get; }
    public UserConnectionCollection ConnectionStrings { get; }
    public string Reference { get; }
    public string SubReference { get; }
    public string Mode { get; }
    public UserObjectSecurityCollection ObjectSecurity { get; }
    public UserMasterTableSecurityCollection MasterTablesSecurity { get; }
    protected UserSecurityConfig(SerializationInfo info, StreamingContext context);
    public UserSecurityConfig(UserConnectionCollection ConnectionStrings, string UserName);
    private static UserSecurityConfig();
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public string ToJson();
    public string get_UserId();
    public string get_UserName();
    public string get_UserFullName();
    public UserProfile get_Profile();
    public void ChangeProfile(string NewProfile);
    public bool get_IsAdministrator();
    public bool get_IsLocked();
    public bool get_IsDesigner();
    public string get_RoleName();
    public string get_CultureId();
    public string get_Email();
    public string get_RoleId();
    public string get_Item(string aVariable);
    public BaseCollection get_DefaultVars();
    public UserConnectionCollection get_ConnectionStrings();
    public string get_Reference();
    public string get_SubReference();
    public string get_Mode();
    public UserObjectSecurityCollection get_ObjectSecurity();
    public void Reload();
    internal UserObjectPropertySecurityCollection A();
    internal UserProcessSecurityCollection a();
    internal UserReportSecurityCollection B();
    internal UserNodeSecurityCollection b();
    public UserMasterTableSecurityCollection get_MasterTablesSecurity();
    internal UserModuleSecurityCollection C();
    internal UserFilterPropertySecurityCollection c();
    internal BaseCollection D();
    internal UserPageSecurityCollection d();
    public string ParseDefaultVars(string str);
    public string ParseKeyPairsValues(string str, KeyValuePairs[] KValues);
    public string ContextVarsToXML();
    public bool CanViewPage(string PageName);
    public bool CanViewModule(string ModuleName);
    public bool CanViewObjectModule(IObjectSettings ObjectSettings, string ObjectWhere, string ModuleName, DataManager lDm);
    public bool CanViewTemplate(string TemplateId);
    public bool CanViewFilterProperty(string SearchId, string ObjectName, string PropertyName);
    public bool CanUpdateObject(IObjectSettings ObjectSettings, string ObjectWhere, DataManager lDm);
    public bool ContainsUpdateSecurityFilter(string ObjectName);
    public bool CanInsertObject(IObjectSettings ObjectSettings, string ObjectWhere, DataManager lDm, string dataSentence);
    public bool CanDeleteObject(IObjectSettings ObjectSettings, string ObjectWhere, DataManager lDm);
    public bool CanViewObject(IObjectSettings ObjectSettings, string ObjectWhere, DataManager lDm);
    public string GetObjectViewFilterx(IObjectSettings SecurityObjectSettings);
    public bool CanViewCollection(string ObjectName);
    public bool CanPrintObject(IObjectSettings ObjectSettings);
    public bool CanViewMasterTable(string TableName);
    public bool CanEditMasterTable(string TableName);
    public bool CanInsertMasterTable(string TableName);
    public bool CanDeleteMasterTable(string TableName);
    public bool CanPrintMasterTable(string TableName);
    public string GetCollectionVisibleFilter(string ChildObjectName);
    public bool CanViewProperty(string objectName, string PropertyName);
    public bool CanEditProperty(string objectName, string PropertyName);
    public bool CanRunProcess(IObjectSettings ObjectSettings, string ProcessName);
    public bool CanPrintReport(string ReportName);
    public bool SetSecurity(string SecurityType, string SecurityKey, string SecurityKey2, string SecurityItem, string SecurityItemValue, string SecurityId, string SecurityKey3);
    private void E();
    private void A(string , bool , string , bool , string , bool , string , bool , string , bool , string , bool );
    private void e();
    private void A(string , string , bool , bool );
    private void F();
    private void A(string , string , bool , string );
    private void f();
    private void A(string , bool );
    private void G();
    private void a(string , bool );
    private void g();
    private void H();
    private void A(string , bool , string );
    private void h();
    private void A(string , string , string , bool );
    private void I();
    private void B(string , bool );
    private void i();
    private void b(string , bool );
    private bool A(string , IObjectSettings , string , DataManager , string );
    private string A(string , IObjectSettings , string );
    private bool A(string , IObjectSettings , DataManager );
    public string ReplaceVars(string Str);
    private BaseCollection A(UserConnectionCollection );
    public void RefreshCustomContextVars(BaseCollection& lRetVal, UserConnectionCollection ConnectionStrings);
    private void A(BaseCollection& , UserConnectionCollection );
    private void A(string );
}
public class FLEXYGO.Security.UserTemplateSecurity : object {
    internal string A;
    internal bool A;
    public bool CanView { get; }
    public bool get_CanView();
}
public class FLEXYGO.User.Interface.UserNavigateNodes : object {
}
public class FLEXYGO.User.Interface.UserProfile : object {
    private string A;
    private UserInterface A;
    private UserInterface a;
    private string a;
    private static Dictionary`2<string, bool> A;
    public UserInterface WebInterface { get; }
    public UserInterface MobileInterface { get; }
    public UserProfile(string ProfileName, UserSecurityConfig aUserSecurityConfig);
    protected UserProfile(SerializationInfo info, StreamingContext context);
    private static UserProfile();
    public UserInterface get_WebInterface();
    public UserInterface get_MobileInterface();
    public UserInterface ActiveInterface();
    public string DefaultStartUpPageName();
    public string ToJson();
    protected virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    private void A(UserSecurityConfig );
    private void A(A , DataManager );
    private void A(DataManager );
    public bool IsMobile(string useragent);
}
public class Security.UserFilterPropertySecurity : object {
    internal string A;
    internal string a;
    internal string B;
    internal bool A;
    public bool CanView { get; }
    public bool get_CanView();
    internal string A();
}
public class Security.UserFilterPropertySecurityCollection : ClassCollection`1<UserFilterPropertySecurity> {
    public bool Add(UserFilterPropertySecurity UserFilterPropertySecurity);
    public bool Remove(UserFilterPropertySecurity UserFilterPropertySecurity);
    public bool Remove(string SearchId, string ObjectName, string PropertyName);
    public bool Contains(string SearchId, string ObjectName, string PropertyName);
}
