[ExtensionAttribute]
public static class FluentEmail.Smtp.SendMailEx : object {
    [ExtensionAttribute]
public static Task SendMailExAsync(SmtpClient this, MailMessage message, CancellationToken token);
    [AsyncStateMachineAttribute("FluentEmail.Smtp.SendMailEx/<SendMailExImplAsync>d__1")]
private static Task SendMailExImplAsync(SmtpClient client, MailMessage message, CancellationToken token);
}
public class FluentEmail.Smtp.SmtpSender : object {
    private Func`1<SmtpClient> _clientFactory;
    private SmtpClient _smtpClient;
    public SmtpSender(Func`1<SmtpClient> clientFactory);
    public SmtpSender(SmtpClient smtpClient);
    public sealed virtual SendResponse Send(IFluentEmail email, Nullable`1<CancellationToken> token);
    [AsyncStateMachineAttribute("FluentEmail.Smtp.SmtpSender/<SendAsync>d__6")]
public sealed virtual Task`1<SendResponse> SendAsync(IFluentEmail email, Nullable`1<CancellationToken> token);
    private MailMessage CreateMailMessage(IFluentEmail email);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.FluentEmailSmtpBuilderExtensions : object {
    [ExtensionAttribute]
public static FluentEmailServicesBuilder AddSmtpSender(FluentEmailServicesBuilder builder, SmtpClient smtpClient);
    [ExtensionAttribute]
public static FluentEmailServicesBuilder AddSmtpSender(FluentEmailServicesBuilder builder, string host, int port);
    [ExtensionAttribute]
public static FluentEmailServicesBuilder AddSmtpSender(FluentEmailServicesBuilder builder, string host, int port, string username, string password);
    [ExtensionAttribute]
public static FluentEmailServicesBuilder AddSmtpSender(FluentEmailServicesBuilder builder, Func`1<SmtpClient> clientFactory);
}
