internal class FluentMigrator.Builders.Create.Index.CreateIndexExpressionNonKeyBuilder : object {
    [CompilerGeneratedAttribute]
private ICreateIndexOnColumnSyntax <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private ISupportAdditionalFeatures <SupportAdditionalFeatures>k__BackingField;
    public ICreateIndexOnColumnSyntax Expression { get; }
    public ISupportAdditionalFeatures SupportAdditionalFeatures { get; }
    public CreateIndexExpressionNonKeyBuilder(ICreateIndexOnColumnSyntax expression, ISupportAdditionalFeatures supportAdditionalFeatures);
    [CompilerGeneratedAttribute]
public ICreateIndexOnColumnSyntax get_Expression();
    [CompilerGeneratedAttribute]
public ISupportAdditionalFeatures get_SupportAdditionalFeatures();
    public sealed virtual ICreateIndexNonKeyColumnSyntax Include(string columnName);
}
public interface FluentMigrator.Builders.Create.Index.ICreateIndexNonKeyColumnSyntax {
    public abstract virtual ICreateIndexNonKeyColumnSyntax Include(string columnName);
}
public class FluentMigrator.Model.IndexIncludeDefinition : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [RequiredAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(string value);
    public sealed virtual object Clone();
    [IteratorStateMachineAttribute("FluentMigrator.Model.IndexIncludeDefinition/<Validate>d__5")]
public sealed virtual IEnumerable`1<ValidationResult> Validate(ValidationContext validationContext);
}
public class FluentMigrator.SqlServer.DataCompressionType : object {
    public static DataCompressionType None;
    public static DataCompressionType Row;
    public static DataCompressionType Page;
    private string _typeString;
    internal DataCompressionType(string typeString);
    private static DataCompressionType();
    public virtual string ToString();
}
[ExtensionAttribute]
public static class FluentMigrator.SqlServer.SqlServerExtensions : object {
    public static string IdentityInsert;
    public static string IdentitySeed;
    public static string IdentityIncrement;
    public static string ConstraintType;
    public static string IncludesList;
    public static string OnlineIndex;
    public static string IndexFilter;
    public static string RowGuidColumn;
    public static string IndexColumnNullsDistinct;
    public static string SchemaAuthorization;
    public static string SparseColumn;
    public static string UniqueConstraintFilter;
    public static string UniqueConstraintIncludesList;
    public static string DataCompression;
    private static SqlServerExtensions();
    [ExtensionAttribute]
public static IInsertDataSyntax WithIdentityInsert(IInsertDataSyntax expression);
    private static void SetConstraintType(ICreateConstraintOptionsSyntax expression, SqlServerConstraintType type);
    [ExtensionAttribute]
public static ICreateConstraintOptionsSyntax Clustered(ICreateConstraintOptionsSyntax expression);
    [ExtensionAttribute]
public static ICreateConstraintOptionsSyntax NonClustered(ICreateConstraintOptionsSyntax expression);
    [ExtensionAttribute]
public static ICreateTableColumnOptionOrWithColumnSyntax RowGuid(ICreateTableColumnOptionOrWithColumnSyntax expression);
    [ExtensionAttribute]
public static ICreateTableColumnOptionOrWithColumnSyntax Sparse(ICreateTableColumnOptionOrWithColumnSyntax expression);
    private static string UnsupportedMethodMessage(object methodName, string interfaceName);
    [ExtensionAttribute]
public static ICreateIndexOptionsSyntax WithDataCompression(ICreateIndexOptionsSyntax expression, DataCompressionType dataCompressionType);
    [ExtensionAttribute]
public static ICreateIndexOptionsSyntax Filter(ICreateIndexOptionsSyntax expression, string filter);
    [ExtensionAttribute]
public static ICreateConstraintOptionsSyntax Filter(ICreateConstraintOptionsSyntax expression, string filter);
    [ExtensionAttribute]
public static TNext Identity(IColumnOptionSyntax`2<TNext, TNextFk> expression, int seed, int increment);
    [ExtensionAttribute]
public static TNext Identity(IColumnOptionSyntax`2<TNext, TNextFk> expression, long seed, int increment);
    private static TNext SetIdentity(IColumnOptionSyntax`2<TNext, TNextFk> expression, object seed, int increment, ISupportAdditionalFeatures castColumn);
    private static ISupportAdditionalFeatures GetColumn(IColumnOptionSyntax`2<TNext, TNextFk> expression);
    [ExtensionAttribute]
public static ICreateIndexOptionsSyntax Include(ICreateIndexOptionsSyntax expression, string columnName);
    [ExtensionAttribute]
public static ICreateIndexNonKeyColumnSyntax Include(ICreateIndexOnColumnSyntax expression, string columnName);
    [ExtensionAttribute]
internal static void CreateIndexInclude(ISupportAdditionalFeatures additionalFeatures, string columnName);
    [ExtensionAttribute]
public static ICreateConstraintOptionsSyntax Include(ICreateConstraintOptionsSyntax expression, string columnName);
    [ExtensionAttribute]
internal static void CreateUniqueConstraintInclude(ISupportAdditionalFeatures additionalFeatures, string columnName);
    [ExtensionAttribute]
public static ICreateIndexColumnUniqueOptionsSyntax NullsNotDistinct(ICreateIndexColumnUniqueOptionsSyntax expression);
    [ExtensionAttribute]
public static ICreateIndexColumnUniqueOptionsSyntax NullsDistinct(ICreateIndexColumnUniqueOptionsSyntax expression, bool nullsAreDistinct);
    [ExtensionAttribute]
public static ICreateIndexOnColumnSyntax NullsNotDistinct(ICreateIndexMoreColumnOptionsSyntax expression);
    [ExtensionAttribute]
public static ICreateIndexOnColumnSyntax NullsDistinct(ICreateIndexMoreColumnOptionsSyntax expression, bool nullsAreDistinct);
    [ExtensionAttribute]
public static ICreateIndexOnColumnSyntax UniqueNullsNotDistinct(ICreateIndexOptionsSyntax expression);
    [ExtensionAttribute]
public static ICreateIndexOnColumnSyntax UniqueNullsDistinct(ICreateIndexOptionsSyntax expression, bool nullsAreDistinct);
    [ExtensionAttribute]
public static IDeleteIndexOptionsSyntax Online(IDeleteIndexOptionsSyntax expression, bool active);
    [ExtensionAttribute]
public static IDeleteConstraintInSchemaOptionsSyntax Online(IDeleteConstraintInSchemaOptionsSyntax expression, bool active);
    [ExtensionAttribute]
public static ICreateIndexOptionsSyntax Online(ICreateIndexOptionsSyntax expression, bool active);
    [ExtensionAttribute]
public static ICreateConstraintOptionsSyntax Online(ICreateConstraintOptionsSyntax expression, bool active);
    [ExtensionAttribute]
public static ICreateSchemaOptionsSyntax Authorization(ICreateSchemaOptionsSyntax expression, string owner);
}
public enum FluentMigrator.SqlServerConstraintType : Enum {
    public int value__;
    public static SqlServerConstraintType Clustered;
    public static SqlServerConstraintType NonClustered;
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
