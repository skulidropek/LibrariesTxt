[AttributeUsageAttribute("2048")]
public class FluentValidation.WebApi.CustomizeValidatorAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <RuleSet>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Interceptor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Skip>k__BackingField;
    public string RuleSet { get; public set; }
    public string Properties { get; public set; }
    public Type Interceptor { get; public set; }
    public bool Skip { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RuleSet();
    [CompilerGeneratedAttribute]
public void set_RuleSet(string value);
    [CompilerGeneratedAttribute]
public string get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(string value);
    [CompilerGeneratedAttribute]
public Type get_Interceptor();
    [CompilerGeneratedAttribute]
public void set_Interceptor(Type value);
    [CompilerGeneratedAttribute]
public bool get_Skip();
    [CompilerGeneratedAttribute]
public void set_Skip(bool value);
    public IValidatorSelector ToValidatorSelector();
    protected virtual IValidatorSelector CreateRulesetValidatorSelector(String[] ruleSets);
    protected virtual IValidatorSelector CreateMemberNameValidatorSelector(String[] properties);
    protected virtual IValidatorSelector CreateDefaultValidatorSelector();
    public IValidatorInterceptor GetInterceptor();
}
public class FluentValidation.WebApi.FluentValidationBodyModelValidator : DefaultBodyModelValidator {
    [CompilerGeneratedAttribute]
private bool <ImplicitlyValidateChildProperties>k__BackingField;
    private bool ImplicitlyValidateChildProperties { get; private set; }
    public FluentValidationBodyModelValidator(bool implicitlyValidateChildProperties);
    [CompilerGeneratedAttribute]
private bool get_ImplicitlyValidateChildProperties();
    [CompilerGeneratedAttribute]
private void set_ImplicitlyValidateChildProperties(bool value);
    private sealed virtual override bool System.Web.Http.Validation.IBodyModelValidator.Validate(object model, Type type, ModelMetadataProvider metadataProvider, HttpActionContext actionContext, string keyPrefix);
    protected virtual bool ValidateNodeAndChildren(ModelMetadata metadata, BodyModelValidatorContext validationContext, object container, IEnumerable`1<ModelValidator> validators);
    private IEnumerable`1<ModelValidator> ApplyCustomizationsToValidators(IEnumerable`1<ModelValidator> validators, CustomizeValidatorAttribute customizations, HttpActionContext ctx);
    private static IEnumerable`1<ModelValidator> GetValidators(HttpActionContext actionContext, ModelMetadata metadata, IModelValidatorCache validatorCache);
    protected virtual bool ShallowValidate(ModelMetadata metadata, BodyModelValidatorContext validationContext, object container, IEnumerable`1<ModelValidator> validators);
    private object GetModel(ModelMetadata meta);
    private bool HasAlreadyBeenValidated(BodyModelValidatorContext validationContext, object model);
    private HashSet`1<object> GetProgress(BodyModelValidatorContext context);
}
public class FluentValidation.WebApi.FluentValidationModelValidationFactory : MulticastDelegate {
    public FluentValidationModelValidationFactory(object object, IntPtr method);
    public virtual ModelValidator Invoke(ModelMetadata metadata, IEnumerable`1<ModelValidatorProvider> validatorProviders, PropertyRule rule, IPropertyValidator validator);
    public virtual IAsyncResult BeginInvoke(ModelMetadata metadata, IEnumerable`1<ModelValidatorProvider> validatorProviders, PropertyRule rule, IPropertyValidator validator, AsyncCallback callback, object object);
    public virtual ModelValidator EndInvoke(IAsyncResult result);
}
public class FluentValidation.WebApi.FluentValidationModelValidator : ModelValidator {
    private IValidator _validator;
    [CompilerGeneratedAttribute]
private CustomizeValidatorAttribute <Customizations>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpActionContext <ActionContext>k__BackingField;
    internal CustomizeValidatorAttribute Customizations { get; private set; }
    internal HttpActionContext ActionContext { get; private set; }
    public FluentValidationModelValidator(IEnumerable`1<ModelValidatorProvider> validatorProviders, IValidator validator);
    [CompilerGeneratedAttribute]
internal CustomizeValidatorAttribute get_Customizations();
    [CompilerGeneratedAttribute]
private void set_Customizations(CustomizeValidatorAttribute value);
    [CompilerGeneratedAttribute]
internal HttpActionContext get_ActionContext();
    [CompilerGeneratedAttribute]
private void set_ActionContext(HttpActionContext value);
    public virtual IEnumerable`1<ModelValidationResult> Validate(ModelMetadata metadata, object container);
    protected virtual IEnumerable`1<ModelValidationResult> ConvertValidationResultToModelValidationResults(ValidationResult result);
    public FluentValidationModelValidator CloneWithCustomizations(CustomizeValidatorAttribute customizations, HttpActionContext context);
}
public class FluentValidation.WebApi.FluentValidationModelValidatorProvider : ModelValidatorProvider {
    [CompilerGeneratedAttribute]
private IValidatorFactory <ValidatorFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ImplicitlyValidateChildProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableDiscoveryOfPropertyValidators>k__BackingField;
    public IValidatorFactory ValidatorFactory { get; public set; }
    public bool ImplicitlyValidateChildProperties { get; public set; }
    public bool DisableDiscoveryOfPropertyValidators { get; public set; }
    public FluentValidationModelValidatorProvider(IValidatorFactory validatorFactory);
    [CompilerGeneratedAttribute]
public IValidatorFactory get_ValidatorFactory();
    [CompilerGeneratedAttribute]
public void set_ValidatorFactory(IValidatorFactory value);
    [CompilerGeneratedAttribute]
public bool get_ImplicitlyValidateChildProperties();
    [CompilerGeneratedAttribute]
public void set_ImplicitlyValidateChildProperties(bool value);
    [CompilerGeneratedAttribute]
public bool get_DisableDiscoveryOfPropertyValidators();
    [CompilerGeneratedAttribute]
public void set_DisableDiscoveryOfPropertyValidators(bool value);
    public static void Configure(HttpConfiguration configuration, Action`1<FluentValidationModelValidatorProvider> configurationExpression);
    [IteratorStateMachineAttribute("FluentValidation.WebApi.FluentValidationModelValidatorProvider/<GetValidators>d__14")]
public virtual IEnumerable`1<ModelValidator> GetValidators(ModelMetadata metadata, IEnumerable`1<ModelValidatorProvider> validatorProviders);
    protected virtual bool IsValidatingProperty(ModelMetadata metadata);
}
public interface FluentValidation.WebApi.IValidatorInterceptor {
    public abstract virtual ValidationContext BeforeMvcValidation(HttpActionContext actionContext, ValidationContext validationContext);
    public abstract virtual ValidationResult AfterMvcValidation(HttpActionContext actionContext, ValidationContext validationContext, ValidationResult result);
}
[ExtensionAttribute]
public static class FluentValidation.WebApi.ValidationResultExtension : object {
    [ExtensionAttribute]
public static void AddToModelState(ValidationResult result, ModelStateDictionary modelState, string prefix);
}
