[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class AssemblyExtensions : object {
    [ExtensionAttribute]
public static string GetVersion(Assembly assembly);
    private static TAttibute GetAssemblyAttribute(Assembly assembly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class AssemblyResolver : object {
    private Dictionary`2<string, string> referenceDictionary;
    private ILogger logger;
    private Dictionary`2<string, AssemblyDefinition> assemblyDefinitionCache;
    public AssemblyResolver(ILogger logger, IEnumerable`1<string> splitReferences);
    private string GetAssemblyName(string filePath);
    private AssemblyDefinition GetAssembly(string file, ReaderParameters parameters);
    public virtual AssemblyDefinition Resolve(AssemblyNameReference assemblyNameReference);
    [NullableContextAttribute("2")]
public virtual AssemblyDefinition Resolve(AssemblyNameReference assemblyNameReference, ReaderParameters parameters);
    public virtual void Dispose();
}
[ExtensionAttribute]
public static class AssemblyResolverHelper : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static AssemblyDefinition Resolve(IAssemblyResolver resolver, string assemblyName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class DelegateBuilder : object {
    private static Dictionary`2<RuntimeTypeHandle, Func`1<BaseModuleWeaver>> weaverDelegates;
    private static DelegateBuilder();
    [ExtensionAttribute]
public static bool InheritsFromBaseWeaver(Type weaverType);
    [ExtensionAttribute]
public static Func`1<BaseModuleWeaver> GetDelegateHolderFromCache(Type weaverType);
    [ExtensionAttribute]
public static Func`1<BaseModuleWeaver> BuildDelegateHolder(Type weaverType);
    [ExtensionAttribute]
public static Func`1<BaseModuleWeaver> BuildConstructorDelegate(Type weaverType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class ExceptionExtensions : object {
    [ExtensionAttribute]
public static string GetLoaderMessages(ReflectionTypeLoadException exception);
    [ExtensionAttribute]
internal static void LogException(ILogger logger, Exception exception);
    private static SequencePoint GetSequencePoint(Exception exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class FodyVersion : object {
    public static Version Version;
    public static int Major;
    private static FodyVersion();
    public static bool WeaverRequiresUpdate(Assembly assembly, Int32& referencedVersion);
    public static AssemblyName FindFodyHelpersReference(Assembly assembly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class InnerWeaver : MarshalByRefObject {
    private static Dictionary`2<string, Assembly> assemblies;
    public List`1<string> SplitReferences;
    public TypeSystem TypeSystem;
    [CompilerGeneratedAttribute]
private string <ProjectDirectoryPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectFilePath>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <DocumentationFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssemblyFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SolutionDirectoryPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <References>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<WeaverEntry> <Weavers>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <KeyFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SignAssembly>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DelaySign>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntermediateDirectoryPath>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <ReferenceCopyLocalPaths>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <RuntimeCopyLocalPaths>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <DefineConstants>k__BackingField;
    private bool cancelRequested;
    private List`1<WeaverHolder> weaverInstances;
    [NullableAttribute("2")]
private Action cancelDelegate;
    public IAssemblyResolver assemblyResolver;
    public TypeCache TypeCache;
    public ModuleDefinition ModuleDefinition;
    private bool hasSymbols;
    [NullableAttribute("2")]
public StrongNameKeyPair StrongNameKeyPair;
    [NullableAttribute("2")]
public Byte[] PublicKey;
    public string ProjectDirectoryPath { get; public set; }
    public string ProjectFilePath { get; public set; }
    [NullableAttribute("2")]
public string DocumentationFilePath { get; public set; }
    public string AssemblyFilePath { get; public set; }
    public string SolutionDirectoryPath { get; public set; }
    public string References { get; public set; }
    public List`1<WeaverEntry> Weavers { get; public set; }
    [NullableAttribute("2")]
public string KeyFilePath { get; public set; }
    public bool SignAssembly { get; public set; }
    public bool DelaySign { get; public set; }
    public ILogger Logger { get; public set; }
    public string IntermediateDirectoryPath { get; public set; }
    public List`1<string> ReferenceCopyLocalPaths { get; public set; }
    public List`1<string> RuntimeCopyLocalPaths { get; public set; }
    public List`1<string> DefineConstants { get; public set; }
    private static InnerWeaver();
    public Assembly LoadWeaverAssembly(string assemblyPath);
    private Assembly LoadFromFile(string assemblyPath);
    public virtual void SplitUpReferences();
    private void InitialiseTypeSystem();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProjectDirectoryPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProjectDirectoryPath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProjectFilePath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProjectFilePath(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_DocumentationFilePath();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void set_DocumentationFilePath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AssemblyFilePath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AssemblyFilePath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SolutionDirectoryPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SolutionDirectoryPath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_References();
    [CompilerGeneratedAttribute]
public sealed virtual void set_References(string value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<WeaverEntry> get_Weavers();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Weavers(List`1<WeaverEntry> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_KeyFilePath();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void set_KeyFilePath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_SignAssembly();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SignAssembly(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_DelaySign();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DelaySign(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual ILogger get_Logger();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Logger(ILogger value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_IntermediateDirectoryPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IntermediateDirectoryPath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<string> get_ReferenceCopyLocalPaths();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ReferenceCopyLocalPaths(List`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<string> get_RuntimeCopyLocalPaths();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RuntimeCopyLocalPaths(List`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<string> get_DefineConstants();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DefineConstants(List`1<string> value);
    private Assembly CurrentDomain_AssemblyResolve(object sender, ResolveEventArgs args);
    public sealed virtual void Execute();
    public sealed virtual void Cancel();
    private void InitialiseWeavers();
    private WeaverHolder InitialiseWeaver(WeaverEntry weaverConfig);
    private void ExecuteWeavers();
    private void AddWeavingInfo();
    private string GetWeavingInfoClassName();
    private void AddVersionField(Assembly assembly, string name, TypeDefinition typeDefinition);
    private void ExecuteAfterWeavers();
    private void DisposeWeavers();
    [NullableContextAttribute("2")]
public sealed virtual object InitializeLifetimeService();
    public sealed virtual void Dispose();
    public void ReadModule();
    public static ValueTuple`2<ModuleDefinition, bool> ReadModule(string assemblyFilePath, IAssemblyResolver assemblyResolver);
    public virtual void WriteModule();
    private static void ValidatePackageReferenceSettings(IList`1<WeaverHolder> weaverInstances, ILogger logger);
    [IteratorStateMachineAttribute("InnerWeaver/<GetPackageReferenceValidationErrors>d__91")]
public static IEnumerable`1<string> GetPackageReferenceValidationErrors(WeaverEntry weaver);
    public virtual void FindStrongNameKey();
    [NullableContextAttribute("2")]
private string GetKeyFilePath();
    public virtual void SetProperties(WeaverEntry weaverEntry, BaseModuleWeaver weaverInstance);
    private void LogWarningPoint(string message, SequencePoint point);
    private void LogErrorPoint(string message, SequencePoint point);
    [CompilerGeneratedAttribute]
private void <SetProperties>b__96_0(string message);
    [CompilerGeneratedAttribute]
private void <SetProperties>b__96_1(string message);
    [CompilerGeneratedAttribute]
private void <SetProperties>b__96_2(string message, MessageImportance importance);
    [CompilerGeneratedAttribute]
private void <SetProperties>b__96_3(string s);
    [CompilerGeneratedAttribute]
private AssemblyDefinition <SetProperties>b__96_4(string assemblyName);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[ExtensionAttribute]
public static class TypeFinder : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static Type FindType(Assembly readAssembly, string typeName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WeaverHolder : object {
    [CompilerGeneratedAttribute]
private BaseModuleWeaver <Instance>k__BackingField;
    [CompilerGeneratedAttribute]
private WeaverEntry <Config>k__BackingField;
    public bool IsUsingOldFodyVersion;
    public int FodyVersion;
    public BaseModuleWeaver Instance { get; }
    public WeaverEntry Config { get; }
    public WeaverHolder(BaseModuleWeaver instance, WeaverEntry config);
    [CompilerGeneratedAttribute]
public BaseModuleWeaver get_Instance();
    [CompilerGeneratedAttribute]
public WeaverEntry get_Config();
}
