[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class BuildLogger : MarshalByRefObject {
    [CompilerGeneratedAttribute]
private IBuildEngine <BuildEngine>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TreatWarningsAsErrors>k__BackingField;
    [NullableAttribute("2")]
private string currentWeaverName;
    [CompilerGeneratedAttribute]
private bool <ErrorOccurred>k__BackingField;
    public IBuildEngine BuildEngine { get; public set; }
    public bool TreatWarningsAsErrors { get; public set; }
    public bool ErrorOccurred { get; private set; }
    [CompilerGeneratedAttribute]
public IBuildEngine get_BuildEngine();
    [CompilerGeneratedAttribute]
public void set_BuildEngine(IBuildEngine value);
    [CompilerGeneratedAttribute]
public bool get_TreatWarningsAsErrors();
    [CompilerGeneratedAttribute]
public void set_TreatWarningsAsErrors(bool value);
    public virtual void SetCurrentWeaverName(string weaverName);
    public virtual void ClearWeaverName();
    public virtual void LogMessage(string message, int level);
    public virtual void LogDebug(string message);
    public virtual void LogInfo(string message);
    public virtual void LogWarning(string message, string code);
    [NullableContextAttribute("2")]
public virtual void LogWarning(string message, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string code);
    public virtual void LogError(string message);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_ErrorOccurred();
    [CompilerGeneratedAttribute]
private void set_ErrorOccurred(bool value);
    public virtual void LogError(string message, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber);
    private string GetIndent();
    private string PrependMessage(string message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class ConfigFileFinder : object {
    private static string FodyWeaversConfigFileName;
    private static XNamespace schemaNamespace;
    private static XNamespace schemaInstanceNamespace;
    private static XAttribute[] SchemaInstanceAttributes { get; }
    private static ConfigFileFinder();
    [IteratorStateMachineAttribute("ConfigFileFinder/<FindWeaverConfigFiles>d__3")]
public static IEnumerable`1<WeaverConfigFile> FindWeaverConfigFiles(string weaverConfiguration, string solutionDirectoryPath, string projectDirectory, ILogger logger);
    public static Dictionary`2<string, WeaverConfigEntry> ParseWeaverConfigEntries(IEnumerable`1<WeaverConfigFile> configFiles);
    public static WeaverConfigFile GenerateDefault(string projectDirectory, List`1<WeaverEntry> weaverEntries, bool generateXsd);
    private static void CreateSchemaForConfig(string projectConfigFilePath, IEnumerable`1<WeaverEntry> weavers);
    private static XElement CreateItemFragment(WeaverEntry weaver);
    public static void EnsureSchemaIsUpToDate(string projectDirectory, IEnumerable`1<WeaverEntry> weavers, bool defaultGenerateXsd);
    private static bool ShouldGenerateXsd(XDocument doc, bool defaultGenerateXsd);
    private static XAttribute[] get_SchemaInstanceAttributes();
}
public static class DomainAssemblyResolver : object {
    public static void Connect();
    [NullableContextAttribute("1")]
public static Assembly GetAssembly(string name);
}
[ExtensionAttribute]
public static class ExceptionExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void LogException(ILogger logger, Exception exception);
}
[ExtensionAttribute]
internal static class ExtractConstants : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static List`1<string> GetConstants(string input);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Fody.AssemblyPathSet : object {
    private HashSet`1<string> assemblyPaths;
    private int hashCode;
    public IReadOnlyCollection`1<string> AssemblyPaths { get; }
    public AssemblyPathSet(IEnumerable`1<string> paths);
    public IReadOnlyCollection`1<string> get_AssemblyPaths();
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(AssemblyPathSet other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("Not for public use")]
public static class Fody.Guard : object {
    public static void AgainstNull(string argumentName, object value);
    public static void AgainstNullAndEmpty(string argumentName, string value);
    public static void FileExists(string argumentName, string path);
}
public enum Fody.MessageImportance : Enum {
    public int value__;
    public static MessageImportance High;
    public static MessageImportance Normal;
    public static MessageImportance Low;
}
public static class Fody.MessageImportanceDefaults : object {
    public static MessageImportance Debug;
    public static MessageImportance Info;
    private static MessageImportanceDefaults();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Fody.PeVerifier : object {
    public static bool FoundPeVerify;
    [NullableAttribute("2")]
private static string peverifyPath;
    private static PeVerifier();
    public static bool Verify(string assemblyPath, IEnumerable`1<string> ignoreCodes, String& output, string workingDirectory);
    public static bool Verify(string beforeAssemblyPath, string afterAssemblyPath, IEnumerable`1<string> ignoreCodes, String& beforeOutput, String& afterOutput, string workingDirectory);
    public static void ThrowIfDifferent(string beforeAssemblyPath, string afterAssemblyPath, string workingDirectory);
    public static void ThrowIfDifferent(string beforeAssemblyPath, string afterAssemblyPath, IEnumerable`1<string> ignoreCodes, string workingDirectory);
    public static string TrimLineNumbers(string input);
    private static bool InnerVerify(string assemblyPath, List`1<string> ignoreCodes, String& output, string workingDirectory);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Fody.Properties.Resources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string FodyWeavers_SchemaTemplate { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_FodyWeavers_SchemaTemplate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Fody.UpdateCopyLocalTask : Task {
    [CompilerGeneratedAttribute]
private ITaskItem[] <CopyLocalFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <UpdatedCopyLocalFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntermediateCopyLocalFilesCache>k__BackingField;
    [RequiredAttribute]
public ITaskItem[] CopyLocalFiles { get; public set; }
    [OutputAttribute]
public ITaskItem[] UpdatedCopyLocalFiles { get; public set; }
    [RequiredAttribute]
public string IntermediateCopyLocalFilesCache { get; public set; }
    [CompilerGeneratedAttribute]
public ITaskItem[] get_CopyLocalFiles();
    [CompilerGeneratedAttribute]
public void set_CopyLocalFiles(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_UpdatedCopyLocalFiles();
    [CompilerGeneratedAttribute]
public void set_UpdatedCopyLocalFiles(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public string get_IntermediateCopyLocalFilesCache();
    [CompilerGeneratedAttribute]
public void set_IntermediateCopyLocalFilesCache(string value);
    public virtual bool Execute();
    private void InnerExecute();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Fody.VerifyTask : Task {
    [CompilerGeneratedAttribute]
private string <NCrunchOriginalSolutionDirectory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SolutionDirectory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefineConstants>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <ProjectDirectory>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <TargetPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WeaverConfiguration>k__BackingField;
    public string NCrunchOriginalSolutionDirectory { get; public set; }
    public string SolutionDirectory { get; public set; }
    public string DefineConstants { get; public set; }
    [NullableAttribute("1")]
[RequiredAttribute]
public string ProjectDirectory { get; public set; }
    [NullableAttribute("1")]
[RequiredAttribute]
public string TargetPath { get; public set; }
    public string WeaverConfiguration { get; public set; }
    [CompilerGeneratedAttribute]
public string get_NCrunchOriginalSolutionDirectory();
    [CompilerGeneratedAttribute]
public void set_NCrunchOriginalSolutionDirectory(string value);
    [CompilerGeneratedAttribute]
public string get_SolutionDirectory();
    [CompilerGeneratedAttribute]
public void set_SolutionDirectory(string value);
    [CompilerGeneratedAttribute]
public string get_DefineConstants();
    [CompilerGeneratedAttribute]
public void set_DefineConstants(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_ProjectDirectory();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_ProjectDirectory(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_TargetPath();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_TargetPath(string value);
    [CompilerGeneratedAttribute]
public string get_WeaverConfiguration();
    [CompilerGeneratedAttribute]
public void set_WeaverConfiguration(string value);
    public virtual bool Execute();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Fody.WeavingTask : Task {
    private Processor processor;
    [CompilerGeneratedAttribute]
private string <AssemblyFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntermediateDirectory>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <KeyOriginatorFile>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <AssemblyOriginatorKeyFile>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SignAssembly>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DelaySign>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectDirectory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectFile>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <DocumentationFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <References>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <ReferenceCopyLocalFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <RuntimeCopyLocalFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <WeaverFiles>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <WeaverConfiguration>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ITaskItem[] <PackageReferences>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <NCrunchOriginalSolutionDirectory>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <SolutionDirectory>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <DefineConstants>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExecutedWeavers>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntermediateCopyLocalFilesCache>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RuntimeCopyLocalFilesCache>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <GenerateXsd>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TreatWarningsAsErrors>k__BackingField;
    [RequiredAttribute]
public string AssemblyFile { get; public set; }
    [RequiredAttribute]
public string IntermediateDirectory { get; public set; }
    [NullableAttribute("2")]
public string KeyOriginatorFile { get; public set; }
    [NullableAttribute("2")]
public string AssemblyOriginatorKeyFile { get; public set; }
    public bool SignAssembly { get; public set; }
    public bool DelaySign { get; public set; }
    [RequiredAttribute]
public string ProjectDirectory { get; public set; }
    [RequiredAttribute]
public string ProjectFile { get; public set; }
    [NullableAttribute("2")]
public string DocumentationFile { get; public set; }
    [RequiredAttribute]
public string References { get; public set; }
    [RequiredAttribute]
public ITaskItem[] ReferenceCopyLocalFiles { get; public set; }
    [RequiredAttribute]
public ITaskItem[] RuntimeCopyLocalFiles { get; public set; }
    [RequiredAttribute]
public ITaskItem[] WeaverFiles { get; public set; }
    [NullableAttribute("2")]
public string WeaverConfiguration { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ITaskItem[] PackageReferences { get; public set; }
    [NullableAttribute("2")]
public string NCrunchOriginalSolutionDirectory { get; public set; }
    [NullableAttribute("2")]
public string SolutionDirectory { get; public set; }
    [NullableAttribute("2")]
public string DefineConstants { get; public set; }
    [OutputAttribute]
public string ExecutedWeavers { get; private set; }
    [RequiredAttribute]
public string IntermediateCopyLocalFilesCache { get; public set; }
    [RequiredAttribute]
public string RuntimeCopyLocalFilesCache { get; public set; }
    public bool GenerateXsd { get; public set; }
    public bool TreatWarningsAsErrors { get; public set; }
    [CompilerGeneratedAttribute]
public void set_AssemblyFile(string value);
    [CompilerGeneratedAttribute]
public string get_AssemblyFile();
    [CompilerGeneratedAttribute]
public string get_IntermediateDirectory();
    [CompilerGeneratedAttribute]
public void set_IntermediateDirectory(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_KeyOriginatorFile();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_KeyOriginatorFile(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_AssemblyOriginatorKeyFile();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_AssemblyOriginatorKeyFile(string value);
    [CompilerGeneratedAttribute]
public bool get_SignAssembly();
    [CompilerGeneratedAttribute]
public void set_SignAssembly(bool value);
    [CompilerGeneratedAttribute]
public bool get_DelaySign();
    [CompilerGeneratedAttribute]
public void set_DelaySign(bool value);
    [CompilerGeneratedAttribute]
public string get_ProjectDirectory();
    [CompilerGeneratedAttribute]
public void set_ProjectDirectory(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectFile();
    [CompilerGeneratedAttribute]
public void set_ProjectFile(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_DocumentationFile();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_DocumentationFile(string value);
    [CompilerGeneratedAttribute]
public string get_References();
    [CompilerGeneratedAttribute]
public void set_References(string value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_ReferenceCopyLocalFiles();
    [CompilerGeneratedAttribute]
public void set_ReferenceCopyLocalFiles(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_RuntimeCopyLocalFiles();
    [CompilerGeneratedAttribute]
public void set_RuntimeCopyLocalFiles(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_WeaverFiles();
    [CompilerGeneratedAttribute]
public void set_WeaverFiles(ITaskItem[] value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_WeaverConfiguration();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_WeaverConfiguration(string value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_PackageReferences();
    [CompilerGeneratedAttribute]
public void set_PackageReferences(ITaskItem[] value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_NCrunchOriginalSolutionDirectory();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_NCrunchOriginalSolutionDirectory(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_SolutionDirectory();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_SolutionDirectory(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_DefineConstants();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_DefineConstants(string value);
    [CompilerGeneratedAttribute]
public string get_ExecutedWeavers();
    [CompilerGeneratedAttribute]
private void set_ExecutedWeavers(string value);
    [CompilerGeneratedAttribute]
public string get_IntermediateCopyLocalFilesCache();
    [CompilerGeneratedAttribute]
public void set_IntermediateCopyLocalFilesCache(string value);
    [CompilerGeneratedAttribute]
public string get_RuntimeCopyLocalFilesCache();
    [CompilerGeneratedAttribute]
public void set_RuntimeCopyLocalFilesCache(string value);
    [CompilerGeneratedAttribute]
public bool get_GenerateXsd();
    [CompilerGeneratedAttribute]
public void set_GenerateXsd(bool value);
    [CompilerGeneratedAttribute]
public bool get_TreatWarningsAsErrors();
    [CompilerGeneratedAttribute]
public void set_TreatWarningsAsErrors(bool value);
    public virtual bool Execute();
    public List`1<WeaverEntry> GetWeaversFromProps();
    private static IEnumerable`1<string> GetConfiguredClassNames(ITaskItem taskItem);
    private ITaskItem GetPackageReference(ITaskItem weaverFileItem);
    public sealed virtual void Cancel();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private <>f__AnonymousType0`3<string, IEnumerable`1<string>, ITaskItem> <GetWeaversFromProps>b__94_0(ITaskItem taskItem);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Processor : object {
    public string AssemblyFilePath;
    public string IntermediateDirectory;
    [NullableAttribute("2")]
public string KeyFilePath;
    public bool SignAssembly;
    public bool DelaySign;
    public string ProjectDirectory;
    public string ProjectFilePath;
    [NullableAttribute("2")]
public string DocumentationFilePath;
    public string References;
    public string SolutionDirectory;
    public List`1<WeaverEntry> Weavers;
    [NullableAttribute("2")]
public string WeaverConfiguration;
    public List`1<string> ReferenceCopyLocalPaths;
    public List`1<string> RuntimeCopyLocalPaths;
    public List`1<string> DefineConstants;
    public List`1<WeaverConfigFile> ConfigFiles;
    public Dictionary`2<string, WeaverConfigEntry> ConfigEntries;
    public bool GenerateXsd;
    [NullableAttribute("2")]
private IInnerWeaver innerWeaver;
    private static Dictionary`2<AssemblyPathSet, IsolatedAssemblyLoadContext> loadContexts;
    public ILogger Logger;
    private static object mutex;
    private static Processor();
    public virtual void ValidateAssemblyPath();
    public virtual bool Execute();
    private void Inner();
    private void ExecuteInOwnAssemblyLoadContext();
    private IsolatedAssemblyLoadContext GetLoadContext();
    private IsolatedAssemblyLoadContext CreateAssemblyLoadContext();
    public void Cancel();
    public virtual void ValidateProjectPath();
    public virtual void ValidateSolutionPath();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <Inner>b__25_0(WeaverConfigEntry entry);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class SdkToolFinder : object {
    private static string windowsSdkDirectory;
    private static bool foundToolsDirectory;
    private static SdkToolFinder();
    public static bool TryFindTool(string tool, String& path);
}
public class SolutionDirectoryFinder : object {
    [NullableContextAttribute("1")]
public static string Find(string solutionDir, string nCrunchOriginalSolutionDir, string projectDirectory);
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Verifier : object {
    public ILogger Logger;
    public string SolutionDirectory;
    [NullableAttribute("2")]
public string WeaverConfiguration;
    public List`1<string> DefineConstants;
    public string ProjectDirectory;
    public string TargetPath;
    public bool Verify();
    private bool InnerVerify();
    public bool ReadShouldVerifyAssembly(List`1& ignoreCodes);
    public static bool ExtractVerifyAssemblyFromConfigs(IEnumerable`1<WeaverConfigFile> weaverConfigs);
    [IteratorStateMachineAttribute("Verifier/<ExtractVerifyIgnoreCodesConfigs>d__10")]
public static IEnumerable`1<string> ExtractVerifyIgnoreCodesConfigs(IEnumerable`1<WeaverConfigFile> weaverConfigs);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WeaverConfigEntry : object {
    [CompilerGeneratedAttribute]
private WeaverConfigFile <ConfigFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ElementName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ExecutionOrder>k__BackingField;
    public WeaverConfigFile ConfigFile { get; }
    public string ElementName { get; }
    public string Content { get; }
    public int ExecutionOrder { get; }
    public WeaverConfigEntry(WeaverConfigFile configFile, string elementName, string content, int executionOrder);
    [CompilerGeneratedAttribute]
public WeaverConfigFile get_ConfigFile();
    [CompilerGeneratedAttribute]
public string get_ElementName();
    [CompilerGeneratedAttribute]
public string get_Content();
    [CompilerGeneratedAttribute]
public int get_ExecutionOrder();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WeaverConfigFile : object {
    public bool AllowExtraEntries;
    [NullableAttribute("2")]
public string FilePath;
    public XDocument Document;
    public WeaverConfigFile(string filePath, bool allowExtraEntries);
    public WeaverConfigFile(XDocument document);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class WeaversHistory : object {
    public static Dictionary`2<string, DateTime> TimeStamps;
    private static WeaversHistory();
    public static bool HasChanged(IEnumerable`1<string> weaverPaths);
}
internal class WeavingException : Exception {
    [NullableContextAttribute("1")]
public WeavingException(string message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class XmlExtensions : object {
    [ExtensionAttribute]
public static void StripNamespace(XDocument document);
    private static IEnumerable`1<XAttribute> GetAttributes(XElement xElement);
    [ExtensionAttribute]
public static bool TryReadBool(XElement config, string nodeName, Boolean& value);
}
