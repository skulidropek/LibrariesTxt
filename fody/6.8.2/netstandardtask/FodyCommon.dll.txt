public static class AssemblyLocation : object {
    [NullableAttribute("1")]
public static string CurrentDirectory;
    private static AssemblyLocation();
}
[ExtensionAttribute]
public static class ExceptionExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static string ToFriendlyString(Exception exception);
}
public static class FileEx : object {
    [NullableContextAttribute("1")]
public static FileStream OpenRead(string path);
}
[NullableContextAttribute("1")]
public interface IInnerWeaver {
    public string AssemblyFilePath { get; public set; }
    public string References { get; public set; }
    [NullableAttribute("2")]
public string KeyFilePath { get; public set; }
    public bool SignAssembly { get; public set; }
    public bool DelaySign { get; public set; }
    public List`1<WeaverEntry> Weavers { get; public set; }
    public ILogger Logger { get; public set; }
    public string IntermediateDirectoryPath { get; public set; }
    public string SolutionDirectoryPath { get; public set; }
    public List`1<string> ReferenceCopyLocalPaths { get; public set; }
    public List`1<string> RuntimeCopyLocalPaths { get; public set; }
    public List`1<string> DefineConstants { get; public set; }
    public string ProjectDirectoryPath { get; public set; }
    public string ProjectFilePath { get; public set; }
    [NullableAttribute("2")]
public string DocumentationFilePath { get; public set; }
    public IsolatedAssemblyLoadContext LoadContext { get; public set; }
    public abstract virtual string get_AssemblyFilePath();
    public abstract virtual void set_AssemblyFilePath(string value);
    public abstract virtual string get_References();
    public abstract virtual void set_References(string value);
    [NullableContextAttribute("2")]
public abstract virtual string get_KeyFilePath();
    [NullableContextAttribute("2")]
public abstract virtual void set_KeyFilePath(string value);
    public abstract virtual bool get_SignAssembly();
    public abstract virtual void set_SignAssembly(bool value);
    public abstract virtual bool get_DelaySign();
    public abstract virtual void set_DelaySign(bool value);
    public abstract virtual List`1<WeaverEntry> get_Weavers();
    public abstract virtual void set_Weavers(List`1<WeaverEntry> value);
    public abstract virtual ILogger get_Logger();
    public abstract virtual void set_Logger(ILogger value);
    public abstract virtual string get_IntermediateDirectoryPath();
    public abstract virtual void set_IntermediateDirectoryPath(string value);
    public abstract virtual string get_SolutionDirectoryPath();
    public abstract virtual void set_SolutionDirectoryPath(string value);
    public abstract virtual List`1<string> get_ReferenceCopyLocalPaths();
    public abstract virtual void set_ReferenceCopyLocalPaths(List`1<string> value);
    public abstract virtual List`1<string> get_RuntimeCopyLocalPaths();
    public abstract virtual void set_RuntimeCopyLocalPaths(List`1<string> value);
    public abstract virtual List`1<string> get_DefineConstants();
    public abstract virtual void set_DefineConstants(List`1<string> value);
    public abstract virtual string get_ProjectDirectoryPath();
    public abstract virtual void set_ProjectDirectoryPath(string value);
    public abstract virtual string get_ProjectFilePath();
    public abstract virtual void set_ProjectFilePath(string value);
    [NullableContextAttribute("2")]
public abstract virtual string get_DocumentationFilePath();
    [NullableContextAttribute("2")]
public abstract virtual void set_DocumentationFilePath(string value);
    public abstract virtual IsolatedAssemblyLoadContext get_LoadContext();
    public abstract virtual void set_LoadContext(IsolatedAssemblyLoadContext value);
    public abstract virtual void Execute();
    public abstract virtual void Cancel();
}
[NullableContextAttribute("1")]
public interface ILogger {
    public bool ErrorOccurred { get; }
    public abstract virtual void SetCurrentWeaverName(string weaverName);
    public abstract virtual void ClearWeaverName();
    public abstract virtual void LogDebug(string message);
    public abstract virtual void LogInfo(string message);
    public abstract virtual void LogMessage(string message, int level);
    public abstract virtual void LogWarning(string message, string code);
    [NullableContextAttribute("2")]
public abstract virtual void LogWarning(string message, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string code);
    public abstract virtual void LogError(string message, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber);
    public abstract virtual void LogError(string message);
    public abstract virtual bool get_ErrorOccurred();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class IsolatedAssemblyLoadContext : AssemblyLoadContext {
    protected virtual Assembly Load(AssemblyName assemblyName);
    public IInnerWeaver CreateInstanceFromAndUnwrap();
    public Assembly LoadNotLocked(string assemblyPath);
    public void Unload();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WeaverEntry : object {
    private static string FodyFileNameSuffix;
    public static IEqualityComparer`1<WeaverEntry> NameComparer;
    public int ExecutionOrder;
    [NullableAttribute("2")]
public string Element;
    [NullableAttribute("2")]
public string ConfigurationSource;
    public string AssemblyPath;
    [NullableAttribute("2")]
public string ConfiguredTypeName;
    [NullableAttribute("2")]
public string PrivateAssets;
    [NullableAttribute("2")]
public string IncludeAssets;
    public string ElementName { get; }
    public string WeaverName { get; }
    private string AssemblyBaseName { get; }
    public string TypeName { get; }
    public bool HasPackageReference { get; }
    private static WeaverEntry();
    public string get_ElementName();
    public string get_WeaverName();
    private string get_AssemblyBaseName();
    public string get_TypeName();
    public bool get_HasPackageReference();
    private static string ExtractAssemblyBaseName(string assemblyPath);
}
internal class WeavingException : Exception {
    [NullableContextAttribute("1")]
public WeavingException(string message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class XDocumentEx : object {
    public static XDocument Load(string path);
    public static XDocument Parse(string text);
}
