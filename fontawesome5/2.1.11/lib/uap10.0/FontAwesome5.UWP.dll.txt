public enum FontAwesome5.EFlipOrientation : Enum {
    public int value__;
    public static EFlipOrientation Normal;
    public static EFlipOrientation Horizontal;
    public static EFlipOrientation Vertical;
}
[ExtensionAttribute]
public static class FontAwesome5.Extensions.ControlExtensions : object {
    private static string SpinnerStoryBoardName;
    private static string PulseStoryBoardName;
    private static ControlExtensions();
    [ExtensionAttribute]
public static void BeginSpin(T control);
    [ExtensionAttribute]
public static void StopSpin(T control);
    [ExtensionAttribute]
public static void BeginPulse(T control);
    [ExtensionAttribute]
public static void StopPulse(T control);
    [ExtensionAttribute]
public static void SetRotation(T control);
    [ExtensionAttribute]
public static void SetFlipOrientation(T control);
}
[ExtensionAttribute]
public static class FontAwesome5.Extensions.EFontAwesomeIconExtensions : object {
    [ExtensionAttribute]
public static FontFamily GetFontFamily(EFontAwesomeIcon icon);
}
public class FontAwesome5.FontAwesome : FontIcon {
    public static DependencyProperty IconProperty;
    public static DependencyProperty SpinProperty;
    public static DependencyProperty SpinDurationProperty;
    public static DependencyProperty PulseProperty;
    public static DependencyProperty PulseDurationProperty;
    public static DependencyProperty RotationProperty;
    public static DependencyProperty FlipOrientationProperty;
    public EFontAwesomeIcon Icon { get; public set; }
    public bool Spin { get; public set; }
    public double SpinDuration { get; public set; }
    public bool Pulse { get; public set; }
    public double PulseDuration { get; public set; }
    public double Rotation { get; public set; }
    public EFlipOrientation FlipOrientation { get; public set; }
    private static FontAwesome();
    private static void Icon_PropertyChangedCallback(DependencyObject dependencyObject, DependencyPropertyChangedEventArgs e);
    public EFontAwesomeIcon get_Icon();
    public void set_Icon(EFontAwesomeIcon value);
    public sealed virtual bool get_Spin();
    public sealed virtual void set_Spin(bool value);
    private static void OnSpinPropertyChanged(DependencyObject d, DependencyPropertyChangedEventArgs e);
    public sealed virtual double get_SpinDuration();
    public sealed virtual void set_SpinDuration(double value);
    private static void SpinDurationChanged(DependencyObject d, DependencyPropertyChangedEventArgs e);
    public sealed virtual bool get_Pulse();
    public sealed virtual void set_Pulse(bool value);
    private static void OnPulsePropertyChanged(DependencyObject d, DependencyPropertyChangedEventArgs e);
    public sealed virtual double get_PulseDuration();
    public sealed virtual void set_PulseDuration(double value);
    private static void PulseDurationChanged(DependencyObject d, DependencyPropertyChangedEventArgs e);
    public sealed virtual double get_Rotation();
    public sealed virtual void set_Rotation(double value);
    private static void RotationChanged(DependencyObject d, DependencyPropertyChangedEventArgs e);
    public sealed virtual EFlipOrientation get_FlipOrientation();
    public sealed virtual void set_FlipOrientation(EFlipOrientation value);
    private static void FlipOrientationChanged(DependencyObject d, DependencyPropertyChangedEventArgs e);
}
public static class FontAwesome5.Fonts : object {
    public static FontFamily RegularFontFamily;
    public static FontFamily SolidFontFamily;
    public static FontFamily BrandsFontFamily;
    private static Fonts();
}
public interface FontAwesome5.IFlippable {
    public EFlipOrientation FlipOrientation { get; public set; }
    public abstract virtual EFlipOrientation get_FlipOrientation();
    public abstract virtual void set_FlipOrientation(EFlipOrientation value);
}
public interface FontAwesome5.IPulsable {
    public bool Pulse { get; public set; }
    public double PulseDuration { get; public set; }
    public abstract virtual bool get_Pulse();
    public abstract virtual void set_Pulse(bool value);
    public abstract virtual double get_PulseDuration();
    public abstract virtual void set_PulseDuration(double value);
}
public interface FontAwesome5.IRotatable {
    public double Rotation { get; public set; }
    public abstract virtual double get_Rotation();
    public abstract virtual void set_Rotation(double value);
}
public interface FontAwesome5.ISpinable {
    public bool Spin { get; public set; }
    public double SpinDuration { get; public set; }
    public abstract virtual bool get_Spin();
    public abstract virtual void set_Spin(bool value);
    public abstract virtual double get_SpinDuration();
    public abstract virtual void set_SpinDuration(double value);
}
