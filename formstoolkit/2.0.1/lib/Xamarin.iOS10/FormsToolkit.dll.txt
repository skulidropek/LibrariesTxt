public class FormsToolkit.BooleanToObjectConverter`1 : object {
    [CompilerGeneratedAttribute]
private T <FalseObject>k__BackingField;
    [CompilerGeneratedAttribute]
private T <TrueObject>k__BackingField;
    public T FalseObject { get; public set; }
    public T TrueObject { get; public set; }
    public static void Init();
    [CompilerGeneratedAttribute]
public void set_FalseObject(T value);
    [CompilerGeneratedAttribute]
public T get_FalseObject();
    [CompilerGeneratedAttribute]
public void set_TrueObject(T value);
    [CompilerGeneratedAttribute]
public T get_TrueObject();
    public sealed virtual object Convert(object value, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture);
}
public class FormsToolkit.EmailValidatorBehavior : Behavior`1<Entry> {
    private bool colorSet;
    private Color color;
    private static string emailRegex;
    public static BindableProperty TextColorInvalidProperty;
    private static BindablePropertyKey IsValidPropertyKey;
    public static BindableProperty IsValidProperty;
    public Color TextColorInvalid { get; public set; }
    public bool IsValid { get; private set; }
    private static EmailValidatorBehavior();
    public static void Init();
    public Color get_TextColorInvalid();
    public void set_TextColorInvalid(Color value);
    public bool get_IsValid();
    private void set_IsValid(bool value);
    protected virtual void OnAttachedTo(Entry bindable);
    private void HandleTextChanged(object sender, TextChangedEventArgs e);
    protected virtual void OnDetachingFrom(Entry bindable);
}
public class FormsToolkit.EmptyValidatorBehavior : Behavior`1<Entry> {
    private static BindablePropertyKey IsValidPropertyKey;
    public static BindableProperty IsValidProperty;
    public bool IsValid { get; private set; }
    private static EmptyValidatorBehavior();
    public static void Init();
    public bool get_IsValid();
    private void set_IsValid(bool value);
    protected virtual void OnAttachedTo(Entry bindable);
    private void HandleTextChanged(object sender, TextChangedEventArgs e);
    protected virtual void OnDetachingFrom(Entry bindable);
}
public class FormsToolkit.EntryLine : Entry {
    public static BindableProperty BorderColorProperty;
    public static BindableProperty FontSizeProperty;
    public static BindableProperty PlaceholderColorProperty;
    public Color BorderColor { get; public set; }
    public double FontSize { get; public set; }
    public Color PlaceholderColor { get; public set; }
    private static EntryLine();
    public Color get_BorderColor();
    public void set_BorderColor(Color value);
    public double get_FontSize();
    public void set_FontSize(double value);
    public Color get_PlaceholderColor();
    public void set_PlaceholderColor(Color value);
}
public class FormsToolkit.HasDataConverter : object {
    public static void Init();
    public sealed virtual object Convert(object value, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture);
}
public class FormsToolkit.HexToColorConverter : object {
    private static Color defaultColor;
    private static HexToColorConverter();
    public static void Init();
    public sealed virtual object Convert(object value, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture);
}
public interface FormsToolkit.IMessagingService {
    public abstract virtual void Subscribe(string message, Action`1<IMessagingService> callback);
    public abstract virtual void Subscribe(string message, Action`2<IMessagingService, TArgs> callback);
    public abstract virtual void SendMessage(string message);
    public abstract virtual void SendMessage(string message, TArgs args);
    public abstract virtual void Unsubscribe(string message);
    public abstract virtual void Unsubscribe(string message);
}
public class FormsToolkit.InvertedBooleanConverter : object {
    public static void Init();
    public sealed virtual object Convert(object value, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture);
}
public class FormsToolkit.ListViewGrouped : ListView {
}
public class FormsToolkit.LowerTextConverter : object {
    public static void Init();
    public sealed virtual object Convert(object value, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture);
}
public class FormsToolkit.MessagingService : object {
    private static MessagingService instance;
    public static MessagingService Current { get; }
    private static MessagingService();
    public static void Init();
    public sealed virtual void Subscribe(string message, Action`1<IMessagingService> callback);
    public sealed virtual void Subscribe(string message, Action`2<IMessagingService, TArgs> callback);
    public sealed virtual void SendMessage(string message);
    public sealed virtual void SendMessage(string message, TArgs args);
    public sealed virtual void Unsubscribe(string message);
    public sealed virtual void Unsubscribe(string message);
    public static MessagingService get_Current();
}
public class FormsToolkit.MessagingServiceAlert : object {
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Cancel>k__BackingField;
    [CompilerGeneratedAttribute]
private Action <OnCompleted>k__BackingField;
    public string Title { get; public set; }
    public string Message { get; public set; }
    public string Cancel { get; public set; }
    public Action OnCompleted { get; public set; }
    public static void Init();
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Cancel();
    [CompilerGeneratedAttribute]
public void set_Cancel(string value);
    [CompilerGeneratedAttribute]
public Action get_OnCompleted();
    [CompilerGeneratedAttribute]
public void set_OnCompleted(Action value);
}
public class FormsToolkit.MessagingServiceChoice : object {
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Cancel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Destruction>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<string> <OnCompleted>k__BackingField;
    public string Title { get; public set; }
    public string Cancel { get; public set; }
    public string Destruction { get; public set; }
    public String[] Items { get; public set; }
    public Action`1<string> OnCompleted { get; public set; }
    public static void Init();
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Cancel();
    [CompilerGeneratedAttribute]
public void set_Cancel(string value);
    [CompilerGeneratedAttribute]
public string get_Destruction();
    [CompilerGeneratedAttribute]
public void set_Destruction(string value);
    [CompilerGeneratedAttribute]
public String[] get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(String[] value);
    [CompilerGeneratedAttribute]
public Action`1<string> get_OnCompleted();
    [CompilerGeneratedAttribute]
public void set_OnCompleted(Action`1<string> value);
}
public class FormsToolkit.MessagingServiceQuestion : object {
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Question>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Positive>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Negative>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<bool> <OnCompleted>k__BackingField;
    public string Title { get; public set; }
    public string Question { get; public set; }
    public string Positive { get; public set; }
    public string Negative { get; public set; }
    public Action`1<bool> OnCompleted { get; public set; }
    public static void Init();
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Question();
    [CompilerGeneratedAttribute]
public void set_Question(string value);
    [CompilerGeneratedAttribute]
public string get_Positive();
    [CompilerGeneratedAttribute]
public void set_Positive(string value);
    [CompilerGeneratedAttribute]
public string get_Negative();
    [CompilerGeneratedAttribute]
public void set_Negative(string value);
    [CompilerGeneratedAttribute]
public Action`1<bool> get_OnCompleted();
    [CompilerGeneratedAttribute]
public void set_OnCompleted(Action`1<bool> value);
}
public class FormsToolkit.NavigationPageNoLine : NavigationPage {
    public NavigationPageNoLine(Page root);
}
public class FormsToolkit.Standard.Class1 : object {
}
public class FormsToolkit.UpperTextConverter : object {
    public static void Init();
    public sealed virtual object Convert(object value, Type targetType, object parameter, CultureInfo culture);
    public sealed virtual object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture);
}
