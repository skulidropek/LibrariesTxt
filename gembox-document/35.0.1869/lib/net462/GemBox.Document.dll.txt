internal class  : object {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerHiddenAttribute]
public ( ,  ,  ,  ,  ,  ,  ,    );
    public  ();
    public  ();
    public  ();
    public  ();
    public  ();
    public  ();
    public  ();
    public    ();
    [DebuggerHiddenAttribute]
public virtual bool Equals(object );
    [DebuggerHiddenAttribute]
public virtual int GetHashCode();
    [DebuggerHiddenAttribute]
public virtual string ToString();
}
internal enum  : Enum {
    public int value__;
    public static  Group;
    public static  Text;
    public static  Path;
    public static  Image;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    [   ("S")]
public static  Solid;
    [   ("D")]
public static  Dashed;
    [   ("B")]
public static  Beveled;
    [   ("I")]
public static  Inset;
    [   ("U")]
public static  Underlined;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  DecimalArabic;
    public static  UppercaseRoman;
    public static  LowercaseRoman;
    public static  UppercaseLetter;
    public static  LowercaseLetter;
}
internal enum  : Enum {
    public int value__;
    public static  Global;
    public static  Local;
}
[FlagsAttribute]
internal enum  : Enum {
    public int value__;
    public static  CLASSIC;
    public static  NORTC;
    public static  NOEOL;
    public static  BYTEALIGN;
    public static  WORDALIGN;
    public static  CLASSF;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : object {
    private [] ;
    private Int32[] ;
    private Byte[] ;
    private Byte[] ;
    private    ;
    private bool ;
    public (   );
    public void (Byte[][][] , int , Byte[][][] , int );
    public bool ();
    private void (int , Byte[][] , int , Byte[][] , int );
    private void (int , Byte[][] , int , Byte[][] , int );
    private void (int , Byte[][] , int , Byte[][] , int );
    private void (int , Byte[][] , int , Byte[][] , int );
    private void (int , Byte[][] , int , Byte[][] , int );
    private void (int , Byte[][] , int , Byte[][] , int );
    private static void (Byte[][] , int , int , int , int );
}
internal enum  : Enum {
    public int value__;
    public static  Start;
    public static  End;
    public static  Point;
}
internal enum  : Enum {
    public int value__;
    public static  DocOpen;
    public static  EFOpen;
}
internal enum  : Enum {
    public int value__;
    public static  Unknown;
    public static  CompositeFamily;
    public static  TrueTypeOpenCollection;
    public static  TrueType;
    public static  OpenType;
    public static  Bitmap;
    public static  BitmapApple;
    public static  Type1;
    public static  CFF;
}
internal enum  : Enum {
    public int value__;
    public static  IMAGE;
    public static  REDUCEDIMAGE;
    public static  PAGE;
}
internal enum  : Enum {
    public int value__;
    public static  BodyText;
    public static  Level1;
    public static  Level2;
    public static  Level3;
    public static  Level4;
    public static  Level5;
    public static  Level6;
    public static  Level7;
    public static  Level8;
    public static  Level9;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  ReadOnly;
    public static  Required;
    public static  NoExport;
    public static  Multiline;
    public static  Password;
    public static  NoToggleToOff;
    public static  Radio;
    public static  Pushbutton;
    public static  Combo;
    public static  Edit;
    public static  Sort;
    public static  FileSelect;
    public static  MultiSelect;
    public static  DoNotSpellCheck;
    public static  DoNotScroll;
    public static  Comb;
    public static  RadiosInUnison;
    public static  RichText;
    public static  CommitOnSelChange;
}
internal enum  : Enum {
    public int value__;
    [XEnumAttribute("none")]
public static  None;
    [XEnumAttribute("small")]
public static  Small;
    [XEnumAttribute("all")]
public static  All;
}
internal enum  : Enum {
    public int value__;
    public static  Inline;
    public static  Run;
    public static  Block;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  :  ​ {
    private  ​ ;
    private    ;
    public ( ​ ,    );
    public sealed virtual void   ​ (DocumentProperties );
    private void (DocumentProperties );
    private static void (XmlWriter , DocumentProperties );
    private static bool (DocumentProperties , String& );
    private static string (ushort );
}
internal enum  : Enum {
    public int value__;
    public static  Single;
    public static  Double;
    public static  Wavy;
    public static  WavyDouble;
}
internal enum  : Enum {
    public int value__;
    [XEnumAttribute("tint")]
public static  Tint;
    [XEnumAttribute("shade")]
public static  Shade;
    [XEnumAttribute("comp")]
public static  Comp;
    [XEnumAttribute("inv")]
public static  Inv;
    [XEnumAttribute("gray")]
public static  Gray;
    [XEnumAttribute("alpha")]
public static  Alpha;
    [XEnumAttribute("alphaOff")]
public static  AlphaOff;
    [XEnumAttribute("alphaMod")]
public static  AlphaMod;
    [XEnumAttribute("hue")]
public static  Hue;
    [XEnumAttribute("hueOff")]
public static  HueOff;
    [XEnumAttribute("hueMod")]
public static  HueMod;
    [XEnumAttribute("sat")]
public static  Sat;
    [XEnumAttribute("satOff")]
public static  SatOff;
    [XEnumAttribute("satMod")]
public static  SatMod;
    [XEnumAttribute("lum")]
public static  Lum;
    [XEnumAttribute("lumOff")]
public static  LumOff;
    [XEnumAttribute("lumMod")]
public static  LumMod;
    [XEnumAttribute("red")]
public static  Red;
    [XEnumAttribute("redOff")]
public static  RedOff;
    [XEnumAttribute("redMod")]
public static  RedMod;
    [XEnumAttribute("green")]
public static  Green;
    [XEnumAttribute("greenOff")]
public static  GreenOff;
    [XEnumAttribute("greenMod")]
public static  GreenMod;
    [XEnumAttribute("blue")]
public static  Blue;
    [XEnumAttribute("blueOff")]
public static  BlueOff;
    [XEnumAttribute("blueMod")]
public static  BlueMod;
    [XEnumAttribute("gamma")]
public static  Gamma;
    [XEnumAttribute("invGamma")]
public static  InvGamma;
}
internal enum  : Enum {
    public int value__;
    public static  CustomXml;
    public static  SmartTag;
    public static  StructuredDocumentTag;
    public static  Ins;
    public static  Del;
    public static  MoveFrom;
    public static  MoveTo;
}
internal enum  : Enum {
    public int value__;
    public static  STGTY_INVALID;
    public static  STGTY_STORAGE;
    public static  STGTY_STREAM;
    public static  STGTY_LOCKBYTES;
    public static  STGTY_PROPERTY;
    public static  STGTY_ROOT;
}
internal enum  : Enum {
    public int value__;
    public static  Fix;
    public static  ReportInvalid;
    public static  ThrowException;
}
internal enum  : Enum {
    public int value__;
    [DescriptionAttribute("None")]
[XEnumAttribute("")]
public static  None;
    [DescriptionAttribute("Straight Connector")]
[XEnumAttribute("line")]
public static  Line;
    [DescriptionAttribute("Elbow Connector")]
[XEnumAttribute("bentConnector3")]
public static  ElbowConnector;
    [DescriptionAttribute("Curved Connector")]
[XEnumAttribute("curvedConnector3")]
public static  CurvedConnector;
    [DescriptionAttribute("Rectangle")]
[XEnumAttribute("rect")]
public static  Rectangle;
    [DescriptionAttribute("Rounded Rectangle")]
[XEnumAttribute("roundRect")]
public static  RoundedRectangle;
    [DescriptionAttribute("Snip Single Corner Rectangle")]
[XEnumAttribute("snip1Rect")]
public static  SnipSingleCornerRectangle;
    [DescriptionAttribute("Snip Same Side Corner Rectangle")]
[XEnumAttribute("snip2SameRect")]
public static  SnipSameSideCornerRectangle;
    [DescriptionAttribute("Snip Diagonal Corner Rectangle")]
[XEnumAttribute("snip2DiagRect")]
public static  SnipDiagonalCornerRectangle;
    [DescriptionAttribute("Snip and Round Single Corner Rectangle")]
[XEnumAttribute("snipRoundRect")]
public static  SnipAndRoundSingleCornerRectangle;
    [DescriptionAttribute("Round Single Corner Rectangle")]
[XEnumAttribute("round1Rect")]
public static  RoundSingleCornerRectangle;
    [DescriptionAttribute("Round Same Side Corner Rectangle")]
[XEnumAttribute("round2SameRect")]
public static  RoundSameSideCornerRectangle;
    [DescriptionAttribute("Round Diagonal Corner Rectangle")]
[XEnumAttribute("round2DiagRect")]
public static  RoundDiagonalCornerRectangle;
    [DescriptionAttribute("Oval")]
[XEnumAttribute("ellipse")]
public static  Oval;
    [DescriptionAttribute("Isosceles Triangle")]
[XEnumAttribute("triangle")]
public static  IsoscelesTriangle;
    [DescriptionAttribute("Right Triangle")]
[XEnumAttribute("rtTriangle")]
public static  RightTriangle;
    [DescriptionAttribute("Parallelogram")]
[XEnumAttribute("parallelogram")]
public static  Parallelogram;
    [DescriptionAttribute("Trapezoid")]
[XEnumAttribute("trapezoid")]
public static  Trapezoid;
    [DescriptionAttribute("Diamond")]
[XEnumAttribute("diamond")]
public static  Diamond;
    [DescriptionAttribute("Regular Pentagon")]
[XEnumAttribute("pentagon")]
public static  RegularPentagon;
    [DescriptionAttribute("Hexagon")]
[XEnumAttribute("hexagon")]
public static  Hexagon;
    [DescriptionAttribute("Heptagon")]
[XEnumAttribute("heptagon")]
public static  Heptagon;
    [DescriptionAttribute("Octagon")]
[XEnumAttribute("octagon")]
public static  Octagon;
    [DescriptionAttribute("Decagon")]
[XEnumAttribute("decagon")]
public static  Decagon;
    [DescriptionAttribute("Dodecagon")]
[XEnumAttribute("dodecagon")]
public static  Dodecagon;
    [DescriptionAttribute("Pie")]
[XEnumAttribute("pie")]
public static  Pie;
    [DescriptionAttribute("Chord")]
[XEnumAttribute("chord")]
public static  Chord;
    [DescriptionAttribute("Teardrop")]
[XEnumAttribute("teardrop")]
public static  Teardrop;
    [DescriptionAttribute("Frame")]
[XEnumAttribute("frame")]
public static  Frame;
    [DescriptionAttribute("Half Frame")]
[XEnumAttribute("halfFrame")]
public static  HalfFrame;
    [DescriptionAttribute("L-Shape")]
[XEnumAttribute("corner")]
public static  LShape;
    [DescriptionAttribute("Diagonal Stripe")]
[XEnumAttribute("diagStripe")]
public static  DiagonalStripe;
    [DescriptionAttribute("Cross")]
[XEnumAttribute("plus")]
public static  Cross;
    [DescriptionAttribute("Plaque")]
[XEnumAttribute("plaque")]
public static  Plaque;
    [DescriptionAttribute("Can")]
[XEnumAttribute("can")]
public static  Can;
    [DescriptionAttribute("Cube")]
[XEnumAttribute("cube")]
public static  Cube;
    [DescriptionAttribute("Bevel")]
[XEnumAttribute("bevel")]
public static  Bevel;
    [DescriptionAttribute("Donut")]
[XEnumAttribute("donut")]
public static  Donut;
    [DescriptionAttribute(""No" Symbol")]
[XEnumAttribute("noSmoking")]
public static  NoSymbol;
    [DescriptionAttribute("Block Arc")]
[XEnumAttribute("blockArc")]
public static  BlockArc;
    [DescriptionAttribute("Folded Corner")]
[XEnumAttribute("foldedCorner")]
public static  FoldedCorner;
    [DescriptionAttribute("Smiley Face")]
[XEnumAttribute("smileyFace")]
public static  SmileyFace;
    [DescriptionAttribute("Heart")]
[XEnumAttribute("heart")]
public static  Heart;
    [DescriptionAttribute("Lightning Bolt")]
[XEnumAttribute("lightningBolt")]
public static  LightningBolt;
    [DescriptionAttribute("Sun")]
[XEnumAttribute("sun")]
public static  Sun;
    [DescriptionAttribute("Moon")]
[XEnumAttribute("moon")]
public static  Moon;
    [DescriptionAttribute("Cloud")]
[XEnumAttribute("cloud")]
public static  Cloud;
    [DescriptionAttribute("Arc")]
[XEnumAttribute("arc")]
public static  Arc;
    [DescriptionAttribute("Double Bracket")]
[XEnumAttribute("bracketPair")]
public static  DoubleBracket;
    [DescriptionAttribute("Double Brace")]
[XEnumAttribute("bracePair")]
public static  DoubleBrace;
    [DescriptionAttribute("Left Bracket")]
[XEnumAttribute("leftBracket")]
public static  LeftBracket;
    [DescriptionAttribute("Right Bracket")]
[XEnumAttribute("rightBracket")]
public static  RightBracket;
    [DescriptionAttribute("Left Brace")]
[XEnumAttribute("leftBrace")]
public static  LeftBrace;
    [DescriptionAttribute("Right Brace")]
[XEnumAttribute("rightBrace")]
public static  RightBrace;
    [DescriptionAttribute("Right Arrow")]
[XEnumAttribute("rightArrow")]
public static  RightArrow;
    [DescriptionAttribute("Left Arrow")]
[XEnumAttribute("leftArrow")]
public static  LeftArrow;
    [DescriptionAttribute("Up Arrow")]
[XEnumAttribute("upArrow")]
public static  UpArrow;
    [DescriptionAttribute("Down Arrow")]
[XEnumAttribute("downArrow")]
public static  DownArrow;
    [DescriptionAttribute("Left-Right Arrow")]
[XEnumAttribute("leftRightArrow")]
public static  LeftRightArrow;
    [DescriptionAttribute("Up-Down Arrow")]
[XEnumAttribute("upDownArrow")]
public static  UpDownArrow;
    [DescriptionAttribute("Quad Arrow")]
[XEnumAttribute("quadArrow")]
public static  QuadArrow;
    [DescriptionAttribute("Left-Right-Up Arrow")]
[XEnumAttribute("leftRightUpArrow")]
public static  LeftRightUpArrow;
    [DescriptionAttribute("Bent Arrow")]
[XEnumAttribute("bentArrow")]
public static  BentArrow;
    [DescriptionAttribute("U-Turn Arrow")]
[XEnumAttribute("uturnArrow")]
public static  UTurnArrow;
    [DescriptionAttribute("Left-Up Arrow")]
[XEnumAttribute("leftUpArrow")]
public static  LeftUpArrow;
    [DescriptionAttribute("Bent-Up Arrow")]
[XEnumAttribute("bentUpArrow")]
public static  BentUpArrow;
    [DescriptionAttribute("Curved Right Arrow")]
[XEnumAttribute("curvedRightArrow")]
public static  CurvedRightArrow;
    [DescriptionAttribute("Curved Left Arrow")]
[XEnumAttribute("curvedLeftArrow")]
public static  CurvedLeftArrow;
    [DescriptionAttribute("Curved Up Arrow")]
[XEnumAttribute("curvedUpArrow")]
public static  CurvedUpArrow;
    [DescriptionAttribute("Curved Down Arrow")]
[XEnumAttribute("curvedDownArrow")]
public static  CurvedDownArrow;
    [DescriptionAttribute("Striped Right Arrow")]
[XEnumAttribute("stripedRightArrow")]
public static  StripedRightArrow;
    [DescriptionAttribute("Notched Right Arrow")]
[XEnumAttribute("notchedRightArrow")]
public static  NotchedRightArrow;
    [DescriptionAttribute("Pentagon")]
[XEnumAttribute("homePlate")]
public static  Pentagon;
    [DescriptionAttribute("Chevron")]
[XEnumAttribute("chevron")]
public static  Chevron;
    [DescriptionAttribute("Right Arrow Callout")]
[XEnumAttribute("rightArrowCallout")]
public static  RightArrowCallout;
    [DescriptionAttribute("Down Arrow Callout")]
[XEnumAttribute("downArrowCallout")]
public static  DownArrowCallout;
    [DescriptionAttribute("Left Arrow Callout")]
[XEnumAttribute("leftArrowCallout")]
public static  LeftArrowCallout;
    [DescriptionAttribute("Up Arrow Callout")]
[XEnumAttribute("upArrowCallout")]
public static  UpArrowCallout;
    [DescriptionAttribute("Left-Right Arrow Callout")]
[XEnumAttribute("leftRightArrowCallout")]
public static  LeftRightArrowCallout;
    [DescriptionAttribute("Quad Arrow Callout")]
[XEnumAttribute("quadArrowCallout")]
public static  QuadArrowCallout;
    [DescriptionAttribute("Circular Arrow")]
[XEnumAttribute("circularArrow")]
public static  CircularArrow;
    [DescriptionAttribute("Plus")]
[XEnumAttribute("mathPlus")]
public static  Plus;
    [DescriptionAttribute("Minus")]
[XEnumAttribute("mathMinus")]
public static  Minus;
    [DescriptionAttribute("Multiply")]
[XEnumAttribute("mathMultiply")]
public static  Multiply;
    [DescriptionAttribute("Division")]
[XEnumAttribute("mathDivide")]
public static  Division;
    [DescriptionAttribute("Equal")]
[XEnumAttribute("mathEqual")]
public static  Equal;
    [DescriptionAttribute("Not Equal")]
[XEnumAttribute("mathNotEqual")]
public static  NotEqual;
    [DescriptionAttribute("Flowchart: Process")]
[XEnumAttribute("flowChartProcess")]
public static  FlowchartProcess;
    [DescriptionAttribute("Flowchart: Alternate Process")]
[XEnumAttribute("flowChartAlternateProcess")]
public static  FlowchartAlternateProcess;
    [DescriptionAttribute("Flowchart: Decision")]
[XEnumAttribute("flowChartDecision")]
public static  FlowchartDecision;
    [DescriptionAttribute("Flowchart: Data")]
[XEnumAttribute("flowChartInputOutput")]
public static  FlowchartData;
    [DescriptionAttribute("Flowchart: Predefined Process")]
[XEnumAttribute("flowChartPredefinedProcess")]
public static  FlowchartPredefinedProcess;
    [DescriptionAttribute("Flowchart: Internal Storage")]
[XEnumAttribute("flowChartInternalStorage")]
public static  FlowchartInternalStorage;
    [DescriptionAttribute("Flowchart: Document")]
[XEnumAttribute("flowChartDocument")]
public static  FlowchartDocument;
    [DescriptionAttribute("Flowchart: Multidocument")]
[XEnumAttribute("flowChartMultidocument")]
public static  FlowchartMultidocument;
    [DescriptionAttribute("Flowchart: Terminator")]
[XEnumAttribute("flowChartTerminator")]
public static  FlowchartTerminator;
    [DescriptionAttribute("Flowchart: Preparation")]
[XEnumAttribute("flowChartPreparation")]
public static  FlowchartPreparation;
    [DescriptionAttribute("Flowchart: Manual Input")]
[XEnumAttribute("flowChartManualInput")]
public static  FlowchartManualInput;
    [DescriptionAttribute("Flowchart: Manual Operation")]
[XEnumAttribute("flowChartManualOperation")]
public static  FlowchartManualOperation;
    [DescriptionAttribute("Flowchart: Connector")]
[XEnumAttribute("flowChartConnector")]
public static  FlowchartConnector;
    [DescriptionAttribute("Flowchart: Off-page Connector")]
[XEnumAttribute("flowChartOffpageConnector")]
public static  FlowchartOffPageConnector;
    [DescriptionAttribute("Flowchart: Card")]
[XEnumAttribute("flowChartPunchedCard")]
public static  FlowchartCard;
    [DescriptionAttribute("Flowchart: Punched Tape")]
[XEnumAttribute("flowChartPunchedTape")]
public static  FlowchartPunchedTape;
    [DescriptionAttribute("Flowchart: Summing Junction")]
[XEnumAttribute("flowChartSummingJunction")]
public static  FlowchartSummingJunction;
    [DescriptionAttribute("Flowchart: Or")]
[XEnumAttribute("flowChartOr")]
public static  FlowchartOr;
    [DescriptionAttribute("Flowchart: Collate")]
[XEnumAttribute("flowChartCollate")]
public static  FlowchartCollate;
    [DescriptionAttribute("Flowchart: Sort")]
[XEnumAttribute("flowChartSort")]
public static  FlowchartSort;
    [DescriptionAttribute("Flowchart: Extract")]
[XEnumAttribute("flowChartExtract")]
public static  FlowchartExtract;
    [DescriptionAttribute("Flowchart: Merge")]
[XEnumAttribute("flowChartMerge")]
public static  FlowchartMerge;
    [DescriptionAttribute("Flowchart: Stored Data")]
[XEnumAttribute("flowChartOnlineStorage")]
public static  FlowchartStoredData;
    [DescriptionAttribute("Flowchart: Delay")]
[XEnumAttribute("flowChartDelay")]
public static  FlowchartDelay;
    [DescriptionAttribute("Flowchart: Sequential Access Storage")]
[XEnumAttribute("flowChartMagneticTape")]
public static  FlowchartSequentialAccessStorage;
    [DescriptionAttribute("Flowchart: Magnetic Disk")]
[XEnumAttribute("flowChartMagneticDisk")]
public static  FlowchartMagneticDisk;
    [DescriptionAttribute("Flowchart: Direct Access Storage")]
[XEnumAttribute("flowChartMagneticDrum")]
public static  FlowchartDirectAccessStorage;
    [DescriptionAttribute("Flowchart: Display")]
[XEnumAttribute("flowChartDisplay")]
public static  FlowchartDisplay;
    [DescriptionAttribute("Explosion 1")]
[XEnumAttribute("irregularSeal1")]
public static  Explosion1;
    [DescriptionAttribute("Explosion 2")]
[XEnumAttribute("irregularSeal2")]
public static  Explosion2;
    [DescriptionAttribute("4-Point Star")]
[XEnumAttribute("star4")]
public static  Star4Point;
    [DescriptionAttribute("5-Point Star")]
[XEnumAttribute("star5")]
public static  Star5Point;
    [DescriptionAttribute("6-Point Star")]
[XEnumAttribute("star6")]
public static  Star6Point;
    [DescriptionAttribute("7-Point Star")]
[XEnumAttribute("star7")]
public static  Star7Point;
    [DescriptionAttribute("8-Point Star")]
[XEnumAttribute("star8")]
public static  Star8Point;
    [DescriptionAttribute("10-Point Star")]
[XEnumAttribute("star10")]
public static  Star10Point;
    [DescriptionAttribute("12-Point Star")]
[XEnumAttribute("star12")]
public static  Star12Point;
    [DescriptionAttribute("16-Point Star")]
[XEnumAttribute("star16")]
public static  Star16Point;
    [DescriptionAttribute("24-Point Star")]
[XEnumAttribute("star24")]
public static  Star24Point;
    [DescriptionAttribute("32-Point Star")]
[XEnumAttribute("star32")]
public static  Star32Point;
    [DescriptionAttribute("Up Ribbon")]
[XEnumAttribute("ribbon2")]
public static  UpRibbon;
    [DescriptionAttribute("Down Ribbon")]
[XEnumAttribute("ribbon")]
public static  DownRibbon;
    [DescriptionAttribute("Curved Up Ribbon")]
[XEnumAttribute("ellipseRibbon2")]
public static  CurvedUpRibbon;
    [DescriptionAttribute("Curved Down Ribbon")]
[XEnumAttribute("ellipseRibbon")]
public static  CurvedDownRibbon;
    [DescriptionAttribute("Vertical Scroll")]
[XEnumAttribute("verticalScroll")]
public static  VerticalScroll;
    [DescriptionAttribute("Horizontal Scroll")]
[XEnumAttribute("horizontalScroll")]
public static  HorizontalScroll;
    [DescriptionAttribute("Wave")]
[XEnumAttribute("wave")]
public static  Wave;
    [DescriptionAttribute("Double Wave")]
[XEnumAttribute("doubleWave")]
public static  DoubleWave;
    [DescriptionAttribute("Rectangular Callout")]
[XEnumAttribute("wedgeRectCallout")]
public static  RectangularCallout;
    [DescriptionAttribute("Rounded Rectangular Callout")]
[XEnumAttribute("wedgeRoundRectCallout")]
public static  RoundedRectangularCallout;
    [DescriptionAttribute("Oval Callout")]
[XEnumAttribute("wedgeEllipseCallout")]
public static  OvalCallout;
    [DescriptionAttribute("Cloud Callout")]
[XEnumAttribute("cloudCallout")]
public static  CloudCallout;
    [DescriptionAttribute("Line Callout 1")]
[XEnumAttribute("borderCallout1")]
public static  LineCallout1;
    [DescriptionAttribute("Line Callout 2")]
[XEnumAttribute("borderCallout2")]
public static  LineCallout2;
    [DescriptionAttribute("Line Callout 3")]
[XEnumAttribute("borderCallout3")]
public static  LineCallout3;
    [DescriptionAttribute("Line Callout 1 (Accent Bar)")]
[XEnumAttribute("accentCallout1")]
public static  LineCallout1AccentBar;
    [DescriptionAttribute("Line Callout 2 (Accent Bar)")]
[XEnumAttribute("accentCallout2")]
public static  LineCallout2AccentBar;
    [DescriptionAttribute("Line Callout 3 (Accent Bar)")]
[XEnumAttribute("accentCallout3")]
public static  LineCallout3AccentBar;
    [DescriptionAttribute("Line Callout 1 (No Border)")]
[XEnumAttribute("callout1")]
public static  LineCallout1NoBorder;
    [DescriptionAttribute("Line Callout 2 (No Border)")]
[XEnumAttribute("callout2")]
public static  LineCallout2NoBorder;
    [DescriptionAttribute("Line Callout 3 (No Border)")]
[XEnumAttribute("callout3")]
public static  LineCallout3NoBorder;
    [DescriptionAttribute("Line Callout 1 (Border and Accent Bar)")]
[XEnumAttribute("accentBorderCallout1")]
public static  LineCallout1BorderAndAccentBar;
    [DescriptionAttribute("Line Callout 2 (Border and Accent Bar)")]
[XEnumAttribute("accentBorderCallout2")]
public static  LineCallout2BorderAndAccentBar;
    [DescriptionAttribute("Line Callout 3 (Border and Accent Bar)")]
[XEnumAttribute("accentBorderCallout3")]
public static  LineCallout3BorderAndAccentBar;
    [DescriptionAttribute("Action Button: Back or Previous")]
[XEnumAttribute("actionButtonBackPrevious")]
public static  ActionButtonBackOrPrevious;
    [DescriptionAttribute("Action Button: Forward or Next")]
[XEnumAttribute("actionButtonForwardNext")]
public static  ActionButtonForwardOrNext;
    [DescriptionAttribute("Action Button: Beginning")]
[XEnumAttribute("actionButtonBeginning")]
public static  ActionButtonBeginning;
    [DescriptionAttribute("Action Button: End")]
[XEnumAttribute("actionButtonEnd")]
public static  ActionButtonEnd;
    [DescriptionAttribute("Action Button: Home")]
[XEnumAttribute("actionButtonHome")]
public static  ActionButtonHome;
    [DescriptionAttribute("Action Button: Information")]
[XEnumAttribute("actionButtonInformation")]
public static  ActionButtonInformation;
    [DescriptionAttribute("Action Button: Return")]
[XEnumAttribute("actionButtonReturn")]
public static  ActionButtonReturn;
    [DescriptionAttribute("Action Button: Movie")]
[XEnumAttribute("actionButtonMovie")]
public static  ActionButtonMovie;
    [DescriptionAttribute("Action Button: Document")]
[XEnumAttribute("actionButtonDocument")]
public static  ActionButtonDocument;
    [DescriptionAttribute("Action Button: Sound")]
[XEnumAttribute("actionButtonSound")]
public static  ActionButtonSound;
    [DescriptionAttribute("Action Button: Help")]
[XEnumAttribute("actionButtonHelp")]
public static  ActionButtonHelp;
    [DescriptionAttribute("Action Button: Custom")]
[XEnumAttribute("actionButtonBlank")]
public static  ActionButtonCustom;
    [DescriptionAttribute("Curved Connector 2")]
[XEnumAttribute("curvedConnector2")]
public static  CurvedConnector2;
    [DescriptionAttribute("Curved Connector 4")]
[XEnumAttribute("curvedConnector4")]
public static  CurvedConnector4;
    [DescriptionAttribute("Curved Connector 5")]
[XEnumAttribute("curvedConnector5")]
public static  CurvedConnector5;
    [DescriptionAttribute("Bent Connector 2")]
[XEnumAttribute("bentConnector2")]
public static  ElbowConnector2;
    [DescriptionAttribute("Bent Connector 4")]
[XEnumAttribute("bentConnector4")]
public static  ElbowConnector4;
    [DescriptionAttribute("Bent Connector 5")]
[XEnumAttribute("bentConnector5")]
public static  ElbowConnector5;
    [DescriptionAttribute("Line Inverse")]
[XEnumAttribute("lineInv")]
public static  LineInverse;
    [DescriptionAttribute("Straight Connector")]
[XEnumAttribute("straightConnector1")]
public static  StraightConnector;
    [DescriptionAttribute("Chart Plus")]
[XEnumAttribute("chartPlus")]
public static  ChartPlus;
    [DescriptionAttribute("Chart Star")]
[XEnumAttribute("chartStar")]
public static  ChartStar;
    [DescriptionAttribute("Chart X")]
[XEnumAttribute("chartX")]
public static  ChartX;
    [DescriptionAttribute("Corner Tabs")]
[XEnumAttribute("cornerTabs")]
public static  CornerTabs;
    [DescriptionAttribute("Funnel")]
[XEnumAttribute("funnel")]
public static  Funnel;
    [DescriptionAttribute("Gear 6")]
[XEnumAttribute("gear6")]
public static  Gear6;
    [DescriptionAttribute("Gear 9")]
[XEnumAttribute("gear9")]
public static  Gear9;
    [DescriptionAttribute("Non-Isosceles Trapezoid")]
[XEnumAttribute("nonIsoscelesTrapezoid")]
public static  NonIsoscelesTrapezoid;
    [DescriptionAttribute("Pie Wedge")]
[XEnumAttribute("pieWedge")]
public static  PieWedge;
    [DescriptionAttribute("Plaque Tabs")]
[XEnumAttribute("plaqueTabs")]
public static  PlaqueTabs;
    [DescriptionAttribute("Square Tabs")]
[XEnumAttribute("squareTabs")]
public static  SquareTabs;
    [DescriptionAttribute("Left Circular Arrow")]
[XEnumAttribute("leftCircularArrow")]
public static  LeftCircularArrow;
    [DescriptionAttribute("Left-Right Circular Arrow")]
[XEnumAttribute("leftRightCircularArrow")]
public static  LeftRightCircularArrow;
    [DescriptionAttribute("Swoosh Arrow")]
[XEnumAttribute("swooshArrow")]
public static  SwooshArrow;
    [DescriptionAttribute("Up-Down Arrow Callout")]
[XEnumAttribute("upDownArrowCallout")]
public static  UpDownArrowCallout;
    [DescriptionAttribute("Flowchart: Off-line Storage")]
[XEnumAttribute("flowChartOfflineStorage")]
public static  FlowchartOfflineStorage;
    [DescriptionAttribute("Left-Right Ribbon")]
[XEnumAttribute("leftRightRibbon")]
public static  LeftRightRibbon;
    [DescriptionAttribute("Custom")]
[XEnumAttribute("custom")]
public static  Custom;
}
internal enum  : Enum {
    public byte value__;
    public static  None;
    public static  Sub;
    public static  Up;
    public static  Average;
    public static  Paeth;
}
internal enum  : Enum {
    public int value__;
    public static  Left;
    public static  Top;
    public static  Right;
    public static  Bottom;
    public static  DiagonalUp;
    public static  DiagonalDown;
    public static  Horizontal;
    public static  Vertical;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    [   ("Adobe-GB1-UCS2")]
[   ("GemBox.Pdf.Resources.mapping-resources-pdf-master.zip", "pdf2unicode/Adobe-GB1-UCS2")]
public static  Adobe_GB1_UCS2;
    [   ("Adobe-CNS1-UCS2")]
[   ("GemBox.Pdf.Resources.mapping-resources-pdf-master.zip", "pdf2unicode/Adobe-CNS1-UCS2")]
public static  Adobe_CNS1_UCS2;
    [   ("Adobe-Japan1-UCS2")]
[   ("GemBox.Pdf.Resources.mapping-resources-pdf-master.zip", "pdf2unicode/Adobe-Japan1-UCS2")]
public static  Adobe_Japan1_UCS2;
    [   ("Adobe-Korea1-UCS2")]
[   ("GemBox.Pdf.Resources.mapping-resources-pdf-master.zip", "pdf2unicode/Adobe-Korea1-UCS2")]
public static  Adobe_Korea1_UCS2;
}
internal enum  : Enum {
    public int value__;
    [XEnumAttribute("sq")]
public static  Square;
    [XEnumAttribute("rnd")]
public static  Round;
    [XEnumAttribute("flat")]
public static  Flat;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Uppercase;
    public static  Lowercase;
    public static  FirstCapital;
    public static  TitleCase;
}
internal enum  : Enum {
    public int value__;
    public static  UNSPECIFIED;
    public static  UPCA;
    public static  UPCE;
    public static  UPC_SUPPLEMENTAL_2DIGIT;
    public static  UPC_SUPPLEMENTAL_5DIGIT;
    public static  EAN13;
    public static  EAN8;
    public static  Interleaved2of5;
    public static  Interleaved2of5_Mod10;
    public static  Standard2of5;
    public static  Standard2of5_Mod10;
    public static  Industrial2of5;
    public static  Industrial2of5_Mod10;
    public static  CODE39;
    public static  CODE39Extended;
    public static  CODE39_Mod43;
    public static  Codabar;
    public static  PostNet;
    public static  BOOKLAND;
    public static  ISBN;
    public static  JAN8;
    public static  JAN13;
    public static  MSI_Mod10;
    public static  MSI_2Mod10;
    public static  MSI_Mod11;
    public static  MSI_Mod11_Mod10;
    public static  Modified_Plessey;
    public static  CODE11;
    public static  USD8;
    public static  UCC12;
    public static  UCC13;
    public static  LOGMARS;
    public static  CODE128;
    public static  CODE128A;
    public static  CODE128B;
    public static  CODE128C;
    public static  ITF14;
    public static  CODE93;
    public static  TELEPEN;
    public static  FIM;
    public static  PHARMACODE;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  DisableFormatting;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  PAdES_B_B;
    public static  PAdES_B_T;
    public static  PAdES_B_LT;
    public static  PAdES_B_LTA;
}
internal enum  : Enum {
    public int value__;
    public static  Break;
    public static  Continue;
}
internal enum  : Enum {
    public int value__;
    public static  Undefined;
    public static  Left;
    public static  Right;
    public static  Center;
    public static  Top;
    public static  Bottom;
    public static  Inside;
    public static  Outside;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Left;
    public static  Right;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  InternalOnly;
    public static  Unique;
}
internal enum  : Enum {
    public int value__;
    public static  Literal;
    public static  Hexadecimal;
}
internal enum  : Enum {
    public int value__;
    public static  EvenOdd;
    public static  Nonzero;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : object {
    private Dictionary`2<string, > ;
    private int ;
    private int ;
    private int ;
    private int ;
    private int ;
    private    ;
    [NullableAttribute("2")]
private     ;
    private bool  ;
    private     ;
    private Dictionary`2<int,   >  ;
    private Dictionary`2<,   >  ;
    private Dictionary`2<,   >  ;
    private Dictionary`2<, bool>  ;
    private Dictionary`2<, bool>  ;
    private Dictionary`2<,   >  ;
    private Dictionary`2<,   >  ;
    private HashSet`1< ​>  ;
    private     ;
    private Dictionary`2<int,   >  ;
    private Dictionary`2<int, object>  ;
    private  ​  ;
    private Dictionary`2<int, List`1< ​>>  ;
    private  ​  ;
    private bool  ;
    private int  ;
    private int  ;
    private     ;
    internal ( ​ ,    );
    public int ();
    private  ();
    public int ();
    private sealed virtual override    ​ ();
    private sealed virtual override    ​ ();
    internal void ();
    public bool  ();
    private   ();
    private   ();
    private double (IDictionary`2<,   > );
    private double (IDictionary`2<,   > , IDictionary`2<,   > , IDictionary`2<, bool> );
    private double  ();
    private double  ();
    [NullableContextAttribute("2")]
private static bool ( ​ );
    private static bool ( ​ );
    private static bool (   );
    private static bool ( ​ );
    private void  ();
    private    ( ​ ,    );
    private    ( ​ ,    );
    private void (   );
    private static void (   , double );
    private void  ();
    private void  ();
    internal  ​[] (int );
    internal bool (int );
    internal    (int );
    internal    (int );
    private static    (   , int );
    internal    (int );
    private static    (   , int );
    private  ​ ( ​ ,  );
    public     (int );
    public bool  ();
    public void  ();
    public bool  ();
    public bool  ();
    private sealed virtual override  ​ ​  ();
    private static void (   ,    , double , double , Boolean& , Boolean& );
    private     ();
    private  ​ ( ​ ,   [] , bool );
    private double ( ​ ,   [] );
    private double ( ​ ,   [] );
    private void ( ​ );
    private sealed virtual override  ​ ​  ();
    private void  ();
    private sealed virtual override void ​ (IList`1< ​> );
    private     (int );
    private bool  ();
    private void  ();
    internal int ();
    internal bool (int );
    internal     (int );
    private sealed virtual override  ​ (   );
    internal bool (int );
    internal bool (string , & );
}
internal enum  : Enum {
    public int value__;
    public static  JPEG;
    public static  TIFF;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    public static  Ear;
    [   ("Mic")]
public static  Microphone;
    [   ("Speaker")]
public static  Sound;
}
internal enum  : Enum {
    public int value__;
    [   ("1.0")]
public static  PDF_1_0;
    [   ("1.1")]
public static  PDF_1_1;
    [   ("1.2")]
public static  PDF_1_2;
    [   ("1.3")]
public static  PDF_1_3;
    [   ("1.4")]
public static  PDF_1_4;
    [   ("1.5")]
public static  PDF_1_5;
    [   ("1.6")]
public static  PDF_1_6;
    [   ("1.7")]
public static  PDF_1_7;
    [   ("2.0")]
public static  PDF_2_0;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : ValueType {
    [DebuggerBrowsableAttribute("0")]
public static  ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    public (double , double , double , double , double , double );
    private static ();
    public static Matrix op_Implicit( );
    public static  op_Implicit(Matrix );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public bool  ();
    public bool  ();
    public double ();
    public     (    );
    private void (   & );
    private void (   & );
    private void (   & );
    public void (   & );
    public void (   [] );
    public void ( );
    public void ( );
    public void (double , double );
    public void (double , double );
    public void (double , double );
    public void (double , double );
    public void (double );
    public void  (double );
    public void (double , double , double );
    public void  ();
    public static  (double , double );
    public static  (double , double );
    public static  (double , double , double );
    private void (double , double , double , double , double , double ,  );
    private void (   & );
    [ConditionalAttribute("DEBUG")]
private void  ();
    public virtual int GetHashCode();
    public sealed virtual bool Equals( );
    public virtual bool Equals(object );
    public virtual string ToString();
    public sealed virtual string ToString(string , IFormatProvider );
    public static bool op_Equality( ,  );
    public static bool op_Inequality( ,  );
    public static  op_Multiply( ,  );
    internal static void (   & , & );
    private static void (& , & );
    public bool (   & ,    & , Double& , & );
    public static SKMatrix op_Implicit( );
    public static  op_Implicit(SKMatrix );
    public static Matrix op_Implicit( );
    public static  op_Implicit(Matrix );
    public static Transform op_Explicit( );
    public static  op_Explicit(Transform );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  :    {
    private static   [] ;
    private  ;
    private int ;
    private int ;
    private    ;
    private    ;
    private    ;
    private bool  ;
    private bool  ;
    private   ;
    public ( ,  , string );
    private static ();
    public void (   );
    public void ();
    public virtual bool   ​ ();
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ ();
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool ​ ();
    public virtual bool ​ (Byte[] , int , int , short );
    public virtual bool ​ (Byte[] , int , int , short );
    public virtual bool ​ (Byte[] , int , int , short );
    public virtual bool ​ ();
    public virtual bool ​ (Byte[] , int , int , short );
    public virtual bool ​ (Byte[] , int , int , short );
    public virtual bool ​ (Byte[] , int , int , short );
    public  ();
    public void ( );
    public     ();
    private void (Byte[] , int , int );
    private void (Byte[] , int , int );
    private void (Byte[] , int , int );
    private void (Byte[] , int , int );
    private void (Byte[] , int , int );
    private void (Byte[] , int , int );
    private void (Byte[] , int , int );
    private void  (Byte[] , int , int );
    private void  (Byte[] , int , int );
    private void  (Byte[] , int , int );
    private void  (Byte[] , int , int );
    private bool (Byte[] , int , int , short );
    private bool  (Byte[] , int , int , short );
    private bool  (Byte[] , int , int , short );
    private bool  (Byte[] , int , int , short );
    private bool ();
    private bool ();
    private bool ();
}
internal enum  : Enum {
    public int value__;
    public static  Normal;
    public static  Mini;
    public static  FAT;
    public static  DIFAT;
    public static  RangeLockSector;
    public static  Directory;
}
internal enum  : Enum {
    public int value__;
    public static  Alpha;
    public static  Whitespace;
    public static  Atom;
    public static  Word;
    public static  HeaderName;
    public static  HeaderParameter;
    public static  EncodedWordParameter;
    public static  DigestToken;
    public static  ImapAtom;
    public static  Boundary;
    public static  DotAtom;
    public static  SpacedDotAtom;
    public static  Phrase;
    public static  InternationalPhrase;
    public static  UnquotedHeaderParameter;
    public static  InternationalDotAtom;
    public static  InternationalSpacedDotAtom;
}
internal enum  : Enum {
    public int value__;
    public static  Initialized;
    public static  Reading;
    public static  Writing;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class  : object {
    protected ContentRange ;
    protected Element ;
    private  ;
    protected (ContentRange );
    public void ();
    protected bool (Element );
    protected bool (Element );
    private void (Element );
    protected virtual void ​ (Element );
    protected virtual void ​ (Element );
    private bool (ElementCollection );
    public virtual void    ​ (DocumentModel );
    public virtual void    ​ (Section );
    public virtual void    ​ (HeaderFooter );
    public virtual void    ​ (Paragraph );
    public virtual void    ​ (Table );
    public virtual void    ​ (TableRow );
    public virtual void    ​ (TableCell );
    public virtual void    ​ (BookmarkStart );
    public virtual void    ​ (BookmarkEnd );
    public virtual void    ​ (Field );
    public virtual void    ​ (Hyperlink );
    public virtual void    ​ (PreservedDrawingElement );
    public virtual void    ​ (Group );
    public virtual void    ​ (Shape );
    public virtual void    ​ (TextBox );
    public virtual void    ​ (Picture );
    public virtual void    ​ (Run );
    public virtual void    ​ (SpecialCharacter );
    public virtual void    ​ (PreservedInline );
    public virtual void    ​ (TableOfEntries );
    public virtual void    ​ (Note );
    public virtual void    ​ (BlockContentControl );
    public virtual void    ​ (InlineContentControl );
    public virtual void    ​ (Chart );
    public virtual void    ​ (CommentStart );
    public virtual void    ​ (CommentEnd );
    public virtual void    ​ (Comment );
    public sealed virtual void    ​ (MoveRangeSeparator );
    public sealed virtual void    ​ (AlignmentTab );
}
internal enum  : Enum {
    public int value__;
    public static  Margin;
    public static  Indent;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Ordered;
    public static  FloydSteinberg;
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class  :    <> {
    [DebuggerBrowsableAttribute("0")]
public static ​   ;
    [DebuggerBrowsableAttribute("0")]
public static  ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    private static ();
    protected virtual     ​ ();
    public ​   ();
    public void (​   );
    public ​   ();
    public void (​   );
    public ​   ();
    public void (​   );
    public bool ();
    public void (bool );
    public ​   ();
    public void (​   );
    public bool ( );
    public bool ( );
    public void ( );
    protected virtual bool    ​ ( );
    protected virtual void    ​ (   & );
    protected virtual void    ​ (    );
}
internal class  : object {
    [NullableAttribute("1")]
private static [][] ;
    [NullableAttribute("1")]
private static  ​  ;
    private   <int> ;
    private bool ;
    private bool ;
    private bool ;
    private int ;
    private int  ;
    private int  ;
    private   ;
    private   ;
    private static ();
    private static  (int );
    public void (  <int> );
    [IteratorStateMachineAttribute("/")]
[NullableContextAttribute("1")]
public IEnumerable`1<int> (bool );
    private static  ( );
    private static  ( );
    private  ();
    private Nullable`1<bool> ();
    private bool ( );
    public int (& );
    [IteratorStateMachineAttribute("/")]
[NullableContextAttribute("1")]
public IEnumerable`1<int> ();
}
internal enum  : Enum {
    public int value__;
    public static  OperatorAddSub;
    public static  OperatorMulDiv;
    public static  OperatorPowMod;
    public static  OperatorCompare;
    public static  OperatorConcat;
    public static  GroupOpen;
    public static  GroupClose;
    public static  ArrayOpen;
    public static  ArrayClose;
    public static  MultiDimensionalArraySeparator;
    public static  ParameterSeparator;
    public static  Literal;
    public static  Identifier;
    public static  RangeOperator;
    public static  ExpressionEnd;
}
internal enum  : Enum {
    public int value__;
    public static  JDCT_ISLOW;
    public static  JDCT_IFAST;
    public static  JDCT_FLOAT;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Explicit;
    public static  Implicit;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Print;
    public static  ChangeContent;
    public static  CopyContent;
    public static  CommentAndFillForm;
    public static  FillForm;
    public static  CopyContentForAccessibility;
    public static  AssembleDocument;
    public static  PrintHighResolution;
}
internal enum  : Enum {
    public byte value__;
    public static  None;
    public static  UnsafeToBreak;
}
internal enum  : Enum {
    public int value__;
    public static  BILEVEL;
    public static  HALFTONE;
    public static  ERRORDIFFUSE;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​ :   {
    protected ​(SerializationInfo , StreamingContext );
    public ​(string );
    public ​(string , Exception );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​​ : object {
    private    ;
    private    ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal   [] ;
    internal Nullable`1<double> ;
    private    ;
    public ​​(   ,    ,    );
    public    ();
    internal    ();
    public  ​[] ( ​ , double ,    );
    public  ​[] ( ​ ,     ,  ​ , Nullable`1<bool> ,    );
    public  ​[] ( ​ ,     ,  ​ , Nullable`1<bool> ,    ,  ​& );
    public  ​[] ( ​ ,  ​ ,  ​ , Nullable`1<bool> ,    ,  ​& );
    public static bool ( ​ ,  ​ );
    public void ( ​ , double ,    , Double& , Double& , Boolean& );
    public void ( ​ , double , double ,    ,  ​ , Double& , Double& , Boolean&  );
    private static bool ( ​[] );
    internal void (    ,  ​[] ,     ,     , Nullable`1<   > ,  ,  , bool  , bool  , bool  ,     );
    private static void (    ,     ,     , Nullable`1<   > , bool , bool , double , double  , double  ,      , Action`2<double, double>  );
    private static     (    ,     , bool , Double& );
    private static void (    ,     , Double& , Double& );
    private static double (double ,     ,  , bool );
    private static     (    , double ,  ,     , Double& );
}
internal class  : object {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerHiddenAttribute]
public ( ,  );
    public  ();
    public  ();
    [DebuggerHiddenAttribute]
public virtual bool Equals(object );
    [DebuggerHiddenAttribute]
public virtual int GetHashCode();
    [DebuggerHiddenAttribute]
public virtual string ToString();
}
internal enum  : Enum {
    public int value__;
    public static  Start;
    public static  Center;
    public static  End;
    public static  Justify;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    public static  Graph;
    public static  Paperclip;
    [   ("PushPin")]
public static  Attachment;
    public static  Tag;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  None;
    public static  CryptFilterDecodeParms;
    public static  ObjStm;
    public static  XRef;
    public static  Catalog;
    public static  Pages;
    public static  Page;
    public static  Outlines;
    public static  Metadata;
    public static  XML;
    public static  EmbeddedFile;
    public static  Font;
    public static  Type0;
    public static  Type1;
    public static  MMType1;
    public static  Type3;
    public static  TrueType;
    public static  CIDFontType0;
    public static  CIDFontType2;
    public static  FontDescriptor;
    public static  Type1C;
    public static  CIDFontType0C;
    public static  OpenType;
    public static  Encoding;
    public static  CMap;
    public static  ExtGState;
    public static  Pattern;
    public static  XObject;
    public static  Image;
    public static  Form;
    public static  PS;
    public static  CryptFilter;
    public static  Filespec;
    public static  Sig;
    public static  DocTimeStamp;
    public static  OCG;
    public static  OCMD;
    public static  Transparency;
    public static  Alpha;
    public static  Luminosity;
}
internal enum  : Enum {
    public int value__;
    public static  Unspecified;
    public static  NotDispose;
    public static  RestoreToBackground;
    public static  RestoreToPrevious;
}
[FlagsAttribute]
internal enum  : Enum {
    public int value__;
    public static  REDUCEDIMAGE;
    public static  PAGE;
    public static  MASK;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : object {
    private static Int32[] ;
    private static Byte[][] ;
    private  ;
    private    ;
    private Byte[][] ;
    private int ;
    private Byte[][] ;
    private Int32[]  ;
    private bool  ;
    private Int32[]  ;
    private int  ;
    private Int32[][][]  ;
    private Int16[][]  ;
    private bool  ;
    public (   );
    private static ();
    public virtual void   ​ (bool );
    public virtual void   ​ (Byte[][] , int , Byte[][] , int , int );
    public virtual void   ​ ();
    public virtual void   ​ ();
    private void (Byte[][] , int , Byte[][] , int , int );
    private void (Byte[][] , int , Byte[][] , int , int );
    private void (Byte[][] , int , Byte[][] , int , int );
    private void (Byte[][] , int , Byte[][] , int , int );
    private void (Byte[][] , int , Byte[][] , int , int );
    private void ();
    private void ();
    private void ();
    private void ();
    private static int (int , int );
    private static int (int , int );
    private int (Int32[] );
    private static Int32[][] (int );
}
internal enum  : Enum {
    public int value__;
    public static  Identity;
    public static  Translation;
    public static  Scaling;
    public static  TranslationScaling;
    public static  Unknown;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    public static  None;
    public static  V2;
    public static  AESV2;
    public static  AESV3;
}
internal enum  : Enum {
    public int value__;
    public static  Copyright;
    public static  Win32FamilyName;
    public static  Win32FaceName;
    public static  VersionString;
    public static  PostScriptName;
    public static  Trademark;
    public static  ManufacturerName;
    public static  DesignerName;
    public static  Description;
    public static  VendorUrl;
    public static  DesignerUrl;
    public static  LicenseDescription;
    public static  FamilyName;
    public static  FaceName;
    public static  SampleText;
    public static  WWSFamilyName;
    public static  WWSFaceName;
}
internal enum  : Enum {
    public int value__;
    public static  TOPLEFT;
    public static  TOPRIGHT;
    public static  BOTRIGHT;
    public static  BOTLEFT;
    public static  LEFTTOP;
    public static  RIGHTTOP;
    public static  RIGHTBOT;
    public static  LEFTBOT;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  DownThenOver;
    public static  OverThenDown;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  None;
    [   ("Btn")]
public static  Button;
    [   ("Tx")]
public static  Text;
    [   ("Ch")]
public static  Choice;
    [   ("Sig")]
public static  Signature;
}
internal enum  : Enum {
    public int value__;
    [XEnumAttribute("noStrike")]
public static  None;
    [XEnumAttribute("sngStrike")]
public static  Single;
    [XEnumAttribute("dblStrike")]
public static  Double;
}
internal enum  : Enum {
    public int value__;
    public static  Ascii;
    public static  EastAsian;
    public static  HAnsi;
    public static  ComplexScript;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  :  ​ {
    private int ;
    private int ;
    private XmlElement ;
    private XmlElement ;
    private XmlElement ;
    private List`1<short> ;
    private Int16[] ;
    private short  ;
    private CellWidthType  ;
    private TC80  ;
    private BorderCode  ;
    private BorderCode  ;
    private BorderCode  ;
    private BorderCode  ;
    private BorderCode  ;
    private BorderCode  ;
    private int  ;
    public (XmlWriter , List`1<short> , int , int );
    public int ();
    public sealed virtual void   ​ (TablePropertyExceptions );
    private void (Byte[] , int );
    private int (List`1<SinglePropertyModifier> );
    private static void (BorderCode& , Byte[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class  :    <> {
    [DebuggerBrowsableAttribute("0")]
public static  ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    private static ();
    internal     (    );
    protected virtual     ​ ();
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public      ();
    public void (    );
    public double ();
    public void (double );
    public   ();
    public void ( );
    public double ();
    public void (double );
    public bool  ();
    public void (bool );
    public     (Double& );
    private double (double );
    public double ();
    private double  (double );
    public double  ();
    public double (   & );
    public      ();
    public bool ( );
    public bool ( );
    public void ( );
    protected virtual bool    ​ ( );
    protected virtual void    ​ (   & );
    public virtual     ​  (    );
    protected virtual void    ​ (    );
}
internal enum  : Enum {
    public int value__;
    public static  Emu;
    public static  Twip;
    public static  Point;
    public static  Pixel;
    public static  Millimeter;
    public static  Pica;
    public static  Centimeter;
    public static  Inch;
    public static  DevicePixel;
    [ObsoleteAttribute("Use GemBox.Spreadsheet column width methods instead.")]
public static  ZeroCharacterWidth256thPart;
    [ObsoleteAttribute("Use GemBox.Spreadsheet column width methods instead.")]
public static  ZeroCharacterWidth;
    [ObsoleteAttribute("Use GemBox.Spreadsheet column width methods instead.")]
public static  CharacterWidth;
}
internal enum  : Enum {
    public int value__;
    public static  Default;
    public static  Lines;
    public static  LinesAndChars;
    public static  SnapToChars;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  :  ​ {
    private WordDocument ;
    private XmlElement ;
    private ushort ;
    private  ;
    private bool ;
    private ParagraphPropertyExceptions ;
    private List`1<CharacterPropertyExceptions> ;
    public (XmlWriter , WordDocument ,  , ParagraphPropertyExceptions , bool );
    public (XmlElement , WordDocument ,  , ParagraphPropertyExceptions , bool );
    public sealed virtual void   ​ (CharacterPropertyExceptions );
    private void (List`1<SinglePropertyModifier> , XmlElement );
    protected virtual void  ​​ (XmlElement , SinglePropertyModifier , string , bool );
    private List`1<CharacterPropertyExceptions> (StyleSheet , ushort );
    private bool (SinglePropertyModifier );
    private bool (bool , byte );
}
internal enum  : Enum {
    public int value__;
    public static  InvalidNumberOfOperands;
    public static  InvalidOperandType;
    public static  InvalidOperation;
    public static  InvalidOperandValue;
    public static  MissingOperator;
}
internal enum  : Enum {
    public int value__;
    public static  Unknown;
    public static  MultiplyDivide;
    public static  AddSubtract;
    public static  AddDivide;
    public static  IfElse;
    public static  AbsoluteValue;
    public static  ArcTan;
    public static  CosineArcTan;
    public static  Cosine;
    public static  MaximumValue;
    public static  MinimumValue;
    public static  Modulo;
    public static  PinTo;
    public static  SineArcTan;
    public static  Sine;
    public static  SquareRoot;
    public static  Tangent;
    public static  LiteralValue;
}
internal enum  : Enum {
    public int value__;
    public static  NotSupported;
    public static  NotAvailable;
    public static  Error;
    public static  Success;
}
internal enum  : Enum {
    public int value__;
    public static  BreakNextPage;
    public static  BreakEvenPage;
    public static  BreakOddPage;
    public static  Continuous;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    public static  MacRomanEncoding;
    public static  MacExpertEncoding;
    public static  WinAnsiEncoding;
}
internal enum  : Enum {
    public int value__;
    [XEnumAttribute("sng")]
public static  Single;
    [XEnumAttribute("dbl")]
public static  Double;
    [XEnumAttribute("thickThin")]
public static  ThickThin;
    [XEnumAttribute("thinThick")]
public static  ThinThick;
    [XEnumAttribute("tri")]
public static  Triple;
}
internal enum  : Enum {
    public int value__;
    public static  HybridMultiLevel;
    public static  MultiLevel;
    public static  SingleLevel;
}
internal enum  : Enum {
    public int value__;
    public static  L;
    public static  M;
    public static  Q;
    public static  H;
}
internal enum  : Enum {
    public int value__;
    public static  Attachment;
    public static  Inline;
    public static  Unknown;
}
internal enum  : Enum {
    public int value__;
    public static  All;
    public static  Include;
    public static  Exclude;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  FirstCellInMergeRange;
    public static  MergedWithPrecedingCell;
}
internal enum  : Enum {
    public int value__;
    public static  Square;
    public static  TopBottom;
    public static  None;
    public static  InFrontOfText;
}
internal enum  : Enum {
    public int value__;
    public static  Subject;
    public static  Clip;
}
internal enum  : Enum {
    public int value__;
    public static  Return;
    public static  Skip;
    public static  ReturnChildren;
}
internal enum  : Enum {
    public int value__;
    public static  Optional;
    public static  Required;
    public static  Direct;
    public static  Indirect;
    public static  SetExistingIndirect;
}
internal enum  : Enum {
    public int value__;
    public static  LeftToRight;
    public static  RightToLeft;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  RenderHeader;
    public static  RenderFooter;
    public static  RenderContent;
    public static  RenderDefaultBackground;
    public static  All;
    public static  AllExceptDefaultBackground;
}
internal enum  : Enum {
    public int value__;
    public static  Unknown;
    public static  DotsInch;
    public static  DotsCm;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    public static  Approved;
    public static  Experimental;
    public static  NotApproved;
    public static  AsIs;
    public static  Expired;
    public static  NotForPublicRelease;
    public static  Confidential;
    public static  Final;
    public static  Sold;
    public static  Departmental;
    public static  ForComment;
    public static  TopSecret;
    public static  Draft;
    public static  ForPublicRelease;
    [   ("SBApproved")]
public static  StandardBusinessApproved;
    [   ("SBNotApproved")]
public static  StandardBusinessNotApproved;
    [   ("SBDraft")]
public static  StandardBusinessDraft;
    [   ("SBFinal")]
public static  StandardBusinessFinal;
    [   ("SBCompleted")]
public static  StandardBusinessCompleted;
    [   ("SBConfidential")]
public static  StandardBusinessConfidential;
    [   ("SBForPublicRelease")]
public static  StandardBusinessForPublicRelease;
    [   ("SBNotForPublicRelease")]
public static  StandardBusinessNotForPublicRelease;
    [   ("SBForComment")]
public static  StandardBusinessForComment;
    [   ("SBVoid")]
public static  StandardBusinessVoid;
    [   ("SBPreliminaryResults")]
public static  StandardBusinessPreliminaryResults;
    [   ("SBInformationOnly")]
public static  StandardBusinessInformationOnly;
    [   ("SHWitness")]
public static  SignHereWitness;
    [   ("SHInitialHere")]
public static  SignHereInitialHere;
    [   ("SHSignHere")]
public static  SignHereSignHere;
    [   ("SHAccepted")]
public static  SignHereAccepted;
    [   ("SBRejected")]
public static  SignHereRejected;
    [   ("#DRevised")]
public static  DynamicRevised;
    [   ("#DReviewed")]
public static  DynamicReviewed;
    [   ("#DReceived")]
public static  DynamicReceived;
    [   ("#DApproved")]
public static  DynamicApproved;
    [   ("#DConfidential")]
public static  DynamicConfidential;
}
internal enum  : Enum {
    public int value__;
    public static  Default;
    public static  Bgr101010;
    public static  Bgr24;
    public static  Bgr32;
    public static  Bgr555;
    public static  Bgr565;
    public static  Bgra32;
    public static  BlackWhite;
    public static  Cmyk32;
    public static  Gray16;
    public static  Gray2;
    public static  Gray32Float;
    public static  Gray4;
    public static  Gray8;
    public static  Pbgra32;
    public static  Prgba128Float;
    public static  Prgba64;
    public static  Rgb128Float;
    public static  Rgb24;
    public static  Rgb48;
    public static  Rgba128Float;
    public static  Rgba64;
}
[DefaultMemberAttribute(" ")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : object {
    [DebuggerBrowsableAttribute("0")]
private [] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private    [] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   >  ;
    [DebuggerBrowsableAttribute("0")]
private    { get; }
    public static GraphicsPath op_Implicit( );
    public static  op_Implicit(GraphicsPath );
    private static bool (PathPointType , PathPointType );
    public bool ();
    public  ();
    private void ( );
    public  ();
    private void ( );
    public  ();
    private void ( );
    internal bool ();
    internal void (bool );
    public  ();
    public   ();
    private sealed virtual override IEnumerator`1< > ​  ();
    private sealed virtual override IEnumerator ​  ();
    private int  ();
    private  (int );
    internal     (int );
    public      ();
    public     (bool );
    private     (bool , double );
    public     (   & , bool , double );
    public  (bool , double , double );
    private bool (   & , bool ,    & );
    private static void (double , Double& , Double& );
    public  ( );
    internal void (Nullable`1& , Nullable`1& );
    public static  ( ,  ,  ,  , double );
    public SKPath (bool );
    public static SKPath op_Implicit( );
    public static  op_Implicit(SKPath );
    public Geometry (bool );
    public static Geometry op_Implicit( );
    public static  op_Implicit(Geometry );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  :    {
    private static   [] ;
    internal UInt32 ;
    internal UInt32 ;
    internal byte ;
    internal bool ;
    internal bool ;
    internal byte ;
    internal byte  ;
    internal byte  ;
    internal byte  ;
    internal byte  ;
    internal UInt32[]  ;
    internal UInt32[]  ;
    internal UInt32[]  ;
    internal ushort  ;
    internal     ;
    private     ;
    private     ;
    private UInt32  ;
    private UInt32  ;
    private UInt32  ;
    private UInt32  ;
    private UInt32  ;
    private UInt32  ;
    private byte  ;
    private byte  ;
    private byte  ;
    private bool  ;
    private bool  ;
    private Byte[][]  ;
    private Byte[][]  ;
    private Byte[][]  ;
    private byte  ;
    private bool  ;
    private byte  ;
    private UInt32  ;
    private UInt32  ;
    private Byte[]  ;
    private Byte[]  ;
    private Byte[]  ;
    private Byte[]  ;
    private Byte[]  ;
    private []  ;
    private bool  ;
    private bool  ;
    private short  ;
    private UInt32  ;
    private bool  ;
    private byte  ;
    private    ​;
    private    ​;
    private bool ​;
    private UInt32 ​;
    private UInt32 ​;
    private UInt32 ​;
    private UInt32 ​;
    private Byte[][]  ;
    private Byte[][]  ;
    private Byte[][]  ;
    private Byte[][][]  ;
    private UInt32  ;
    private UInt32  ;
    private UInt32  ;
    private UInt32  ;
    private   ;
    private UInt32  ;
    private UInt32  ;
    private UInt32  ;
    private bool  ;
    private UInt32  ;
    private ushort  ;
    private int  ;
    private Byte[]  ;
    private   ;
    private Byte[]  ;
    private Byte[]  ;
    private bool  ;
    public ( ,  , string );
    private static ();
    private void ();
    public virtual bool   ​ ();
    public virtual bool   ​ ();
    public virtual bool   ​ ();
    public   ();
    public virtual bool   ​ ();
    public virtual bool   ​ (short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ ();
    public virtual bool   ​ (short );
    public virtual bool   ​ ();
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual void   ​  ();
    internal void (bool );
    private bool ();
    private bool (short );
    private bool (Byte[] , int , int , short );
    private bool ();
    private void ();
    private bool  ();
    private bool  ();
    private bool (Byte[] , int , int );
    private bool (Byte[] , int , int );
    public void ();
    private bool  ();
    private bool (short );
    private bool  ();
    private void ();
    private bool  ();
    private bool  ();
    private bool  ();
    private bool  ();
    private bool (byte );
    private bool  ();
    private bool  ();
    private bool  ();
    private bool  ();
    private bool  ();
    private bool (Byte& );
    public bool (Byte& );
    private void ();
    private bool (UInt16& );
    public bool (ushort , Byte[] , int );
    private void (ushort );
    internal bool (Byte[]& , UInt32& );
    private void (Byte[]& , UInt32& );
    private void (byte , Byte[]& , UInt32& );
    private void (byte , Byte[]& , UInt32& );
    private void (byte , Byte[]& , UInt32& );
    private void (Byte[]& , UInt32& );
    private void (Byte[]& , UInt32& );
    private void (Byte[]& , UInt32& );
    private bool (Byte[]& , UInt32& );
    private void (Byte[]& , UInt32& );
    private void  (Byte[]& , UInt32& );
    private bool  ();
    private  (bool );
    private bool  ();
    private int (Byte[] , int );
    private int (int );
}
internal enum  : Enum {
    public int value__;
    public static  Red;
    public static  Black;
}
internal enum  : Enum {
    public int value__;
    public static  Default;
    public static  EncodedText;
    public static  EncodedPhrase;
}
internal enum  : Enum {
    public int value__;
    public static  Null;
    public static  Boolean;
    public static  Number;
    public static  Name;
    public static  String;
    public static  Array;
    public static  Dictionary;
    public static  Stream;
    public static  IndirectObject;
}
internal enum  : Enum {
    public int value__;
    public static  DrawingML_VML;
    public static  DrawingML;
    public static  VML;
}
internal enum  : Enum {
    public int value__;
    public static  Auto;
    public static  AtLeast;
    public static  Exact;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : object {
    public static string ;
    public    ;
    public    ;
    private    ;
    private    ;
    private    ;
    private    ;
    private     ;
    private     ;
    public (   ,    ,    );
    private static ();
    public virtual Byte[] ​ ();
    public virtual  ​ ();
    public virtual    ​ ();
    public virtual int ​ ();
    public virtual bool ​ ();
    public static string (string , StringBuilder );
    public static string (string , string );
    protected internal void ();
    public virtual int ​ (int );
    public virtual  ​  ();
    public virtual int ​ (int );
    public virtual int ​ (int , int );
    public virtual bool ​ (int );
    public virtual string ToString();
    public virtual bool ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class  :    <> {
    [DebuggerBrowsableAttribute("0")]
public static  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    private static ();
    protected virtual     ​ ();
    public     ();
    public void (    );
    public     ();
    public void (    );
    public double ();
    public void (double );
    public     ();
    public void (    );
    public bool ();
    public bool ( );
    public bool ( );
    public void ( );
    protected virtual bool    ​ ( );
    protected virtual void    ​ (   & );
    protected virtual void    ​ (    );
}
internal enum  : Enum {
    public byte value__;
    [ ​ ("Left_To_Right")]
public static  L;
    [ ​ ("Right_To_Left")]
public static  R;
    [ ​ ("Arabic_Letter")]
public static  AL;
    [ ​ ("European_Number")]
public static  EN;
    [ ​ ("European_Separator")]
public static  ES;
    [ ​ ("European_Terminator")]
public static  ET;
    [ ​ ("Arabic_Number")]
public static  AN;
    [ ​ ("Common_Separator")]
public static  CS;
    [ ​ ("Nonspacing_Mark")]
public static  NSM;
    [ ​ ("Boundary_Neutral")]
public static  BN;
    [ ​ ("Paragraph_Separator")]
public static  B;
    [ ​ ("Segment_Separator")]
public static  S;
    [ ​ ("White_Space")]
public static  WS;
    [ ​ ("Other_Neutral")]
public static  ON;
    [ ​ ("Left_To_Right_Embedding")]
public static  LRE;
    [ ​ ("Left_To_Right_Override")]
public static  LRO;
    [ ​ ("Right_To_Left_Embedding")]
public static  RLE;
    [ ​ ("Right_To_Left_Override")]
public static  RLO;
    [ ​ ("Pop_Directional_Format")]
public static  PDF;
    [ ​ ("Left_To_Right_Isolate")]
public static  LRI;
    [ ​ ("Right_To_Left_Isolate")]
public static  RLI;
    [ ​ ("First_Strong_Isolate")]
public static  FSI;
    [ ​ ("Pop_Directional_Isolate")]
public static  PDI;
}
internal enum  : Enum {
    public int value__;
    public static  Equal;
    public static  NotEqual;
    public static  Greater;
    public static  GreaterOrEqual;
    public static  Less;
    public static  LessOrEqual;
    public static  Add;
    public static  Subtract;
    public static  Multiply;
    public static  Divide;
    public static  Modulo;
    public static  Power;
    public static  Concat;
}
internal enum  : Enum {
    public int value__;
    public static  JDITHER_NONE;
    public static  JDITHER_ORDERED;
    public static  JDITHER_FS;
}
internal enum  : Enum {
    public int value__;
    public static  Text;
    public static  Path;
    public static  Image;
    public static  Form;
    public static  Shading;
    public static  Group;
    public static  Mark;
}
internal enum  : Enum {
    public int value__;
    public static  Default;
    public static  None;
    public static  Ccitt3;
    public static  Ccitt4;
    public static  Lzw;
    public static  Rle;
    public static  Zip;
}
internal enum  : Enum {
    public int value__;
    public static  BreakRestrained;
    public static  BreakPossible;
    public static  BreakDesired;
    public static  BreakAlways;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : object {
    [DebuggerBrowsableAttribute("0")]
private static    ;
    [DebuggerBrowsableAttribute("0")]
private static  ;
    [DebuggerBrowsableAttribute("0")]
private static   [] ;
    [DebuggerBrowsableAttribute("0")]
private static   [] ;
    [DebuggerBrowsableAttribute("0")]
private ulong ;
    [DebuggerBrowsableAttribute("0")]
internal static Encoding ;
    [DebuggerBrowsableAttribute("0")]
internal string ;
    [DebuggerBrowsableAttribute("0")]
internal int  ;
    [DebuggerBrowsableAttribute("0")]
internal   ;
    [DebuggerBrowsableAttribute("0")]
internal ulong  ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
internal int  ;
    [DebuggerBrowsableAttribute("0")]
internal int  ;
    [DebuggerBrowsableAttribute("0")]
internal int  ;
    [DebuggerBrowsableAttribute("0")]
internal int  ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
internal int  ;
    [DebuggerBrowsableAttribute("0")]
internal Byte[]  ;
    [DebuggerBrowsableAttribute("0")]
internal int  ;
    [DebuggerBrowsableAttribute("0")]
internal int  ;
    [DebuggerBrowsableAttribute("0")]
internal int  ;
    [DebuggerBrowsableAttribute("0")]
internal object  ;
    [DebuggerBrowsableAttribute("0")]
internal   ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
private ulong  ;
    [DebuggerBrowsableAttribute("0")]
private UInt64[]  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private short  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private Int32[]  ;
    [DebuggerBrowsableAttribute("0")]
private UInt32[]  ;
    [DebuggerBrowsableAttribute("0")]
private short  ;
    [DebuggerBrowsableAttribute("0")]
private ulong  ;
    [DebuggerBrowsableAttribute("0")]
private ulong  ;
    [DebuggerBrowsableAttribute("0")]
private short  ;
    [DebuggerBrowsableAttribute("0")]
private ulong  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private   []  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private   []  ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private Stream  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private static UInt32[]  ;
    [DebuggerBrowsableAttribute("0")]
private static Int32[] ​;
    [DebuggerBrowsableAttribute("0")]
private static Int32[] ​;
    [DebuggerBrowsableAttribute("0")]
private static String[] ​;
    [DebuggerBrowsableAttribute("0")]
private static String[] ​;
    [DebuggerBrowsableAttribute("0")]
private static Byte[] ​;
    [DebuggerBrowsableAttribute("0")]
private static Byte[] ​;
    private static ();
    private static  (string , string ,    );
    private static  (string , string ,    ,  );
    private static  (string , string , object ,    ,    );
    private static  (string , string , object ,    ,    ,  );
    private static    (   );
    private static  ( );
    private static    ( );
    private static bool (   );
    private static void (   );
    internal static ulong (Byte[] , int );
    internal static int (Byte[] , int );
    internal static void (int , Byte[] , int );
    internal static void (ulong , Byte[] , int );
    internal static short (Byte[] , int );
    internal static void (Stream , string , Object[] );
    private static string (byte );
    private void ();
    internal static bool ( );
    private bool ( );
    private static int (int );
    private bool ( );
    private void ();
    private bool (UInt64& , Int64& );
    private void (string );
    internal static void (String& , string );
    internal static void (Int16[]& , Int16[] , int );
    internal static void (Int32[]& , Int32[] , int );
    internal static void (Int64[]& , Int64[] , int );
    internal static void (Single[]& , Single[] , int );
    internal bool (int );
    internal void  (int );
    internal void  (int );
    private static   [] (Int32& );
    private static   [] (Int32& );
    private void (  [] , int );
    private   ();
    private static    ( ,  );
    internal static int ( );
    private long (   );
    private bool (   );
    private static int (int );
    private bool (  [] , long );
    private void (string );
    private int (   );
    private static long (  [] , ulong ,  );
    private bool (ulong );
    private ulong (ulong ,   []& , UInt64& );
    private bool (   );
    private bool (   , int );
    private int (   , Byte[] );
    private int (   , String& );
    private bool (   , int , int , Single& );
    private bool (   , UInt32 , UInt32 , Single& );
    private float (   );
    private float  (   );
    private bool (   , Byte[] );
    private bool (   , Int16[] );
    private bool (   );
    private bool (   , UInt32[] );
    private bool (   , Int32[] );
    private bool (   , Int64[] );
    private bool (   , Single[] );
    private bool (   , Single[] );
    private bool (   , Double[] );
    private bool (   , Double[] );
    private bool (   );
    private bool (   , Int16& );
    private bool (   , Int32& );
    private bool (   , Double& );
    private bool (   , int , Int64[]& );
    private bool (   , int , UInt64[]& );
    private bool (   );
    private void ();
    internal static int (int , int );
    internal static int (int , int );
    internal static ulong (ulong , ulong );
    private ulong  ();
    private void (ulong );
    private ulong ( , int );
    private static void (Int32[] , short );
    private static bool (Int32[] , short );
    private bool ( ,  ,   & , float );
    private bool (  [] , int ,  ,  , float ,  , float );
    private bool (bool );
    private bool  ();
    private bool (  & ,    );
    private void ( ,   & , int );
    private void ( ,   & , short );
    private bool ( ,   & );
    private bool ( ,  ,   & );
    private bool ( ,   & );
    private bool ( ,   & , int , Int16[][] );
    private bool (  & , Byte[] );
    private bool (  & , Int16[] );
    private bool (  & , Int32[] );
    private bool (  & , UInt32[] );
    private bool (  & , Int64[] );
    private bool (  & , UInt64[] );
    private bool (  & , Single[] );
    private bool (  & , Single[] );
    private bool (  & , Double[] );
    private bool ( ,  ,   & , int , Double[] );
    private bool (  & );
    private bool (  & );
    private bool (  & , Byte[] , int );
    private bool (  & , Int16[] , int );
    private bool (  & , Int64[] , int );
    private bool (  & , Int32[] , int );
    private bool (  & , Single[] , int );
    private bool (  & , Double[] , int );
    private void ();
    private bool  ();
    private void (bool );
    private bool (Int64& );
    internal static void (UInt32& );
    internal static UInt64[] (UInt64[] , int , int );
    internal static   [] (  [] , int , int );
    internal static   [] (  [] , int , int );
    internal bool ( );
    private void (Byte[] , int , int );
    private void  (int );
    private static int (string , string , FileMode& , FileAccess& );
    private static void (Stream ,    , int , object );
    private static bool (Stream ,  , int , object );
    private static void (Stream , string );
    private int (Byte[] , int , int );
    private long (long , SeekOrigin );
    private long  ();
    private bool (Byte[] , int );
    private bool (Int16& );
    private bool (UInt64& , bool );
    private bool (UInt32& );
    private bool (UInt64& );
    private bool (Int64& );
    private bool (Int32& );
    private bool (  [] , ulong , bool );
    private static void (  [] , ulong , Byte[] , int , bool );
    private bool (  & );
    private bool (  & );
    private bool (long );
    private bool (int , short );
    private int (int , Byte[] , int , int , string );
    private int (int , Byte[] , int , int , string );
    private bool  (int );
    private bool  (int );
    private bool (bool );
    private static void (Byte[] , int , int );
    private static void (Byte[] , int , int );
    private static void (Byte[] , int , int );
    private static void (Byte[] , int , int );
    internal bool  (int );
    internal bool  (int );
    private int (int , int , string );
    private int (int , int , string );
    internal int  ();
    internal int  ();
    private bool (string );
    private bool (string );
    private void ();
    private bool  (Byte[] , int , int );
    private bool (   );
    private bool (  [] , long , bool );
    private bool (short );
    private bool (long , bool );
    private bool (long , bool );
    private bool  (int );
    private bool (long );
    private bool  (int );
    private bool  (int );
    private bool (int , Byte[] , int , long );
    internal bool  ();
    public static string  ();
    public static string  ();
    public static int (int );
    public static int (int );
    public static int (int );
    public static int (int );
    public    ( );
    public void (   );
    public void (   );
    public bool ( );
    public   []  ();
    public static Byte[] (Byte[] , int );
    public static Int32[] (Int32[] , int );
    public static int (Int16[] , Int16[] , int );
    public static  (string , string );
    public static  (string , string , object ,    );
    public void ();
    public sealed virtual void Dispose();
    public int  ();
    public int  (int );
    public void (  [] , int );
    public    ( ,  );
    public    (string ,  );
    public    ( );
    public    (string );
    public     ();
    public    (   );
    public object (string );
    public void (object , string );
    public bool  ();
    public bool  ();
    public   [] ( );
    public   [] ( );
    public bool  ();
    public bool (long ,   [] , int );
    public bool (long );
    public int  ();
    public int  ();
    public int  (int );
    public int  ();
    public int  (int );
    public long  (int );
    public int (int , short );
    public int  ();
    public void (Int32& , Int32& );
    public int  ();
    public int  (int );
    public long  (int );
    public int  ();
    public int (int , int , int , short );
    public bool (int , int , int , short );
    public int  ();
    public object  ();
    public object (object );
    public int  ();
    public int  (int );
    public bool  ();
    public bool  ();
    public bool  ();
    public bool  ();
    public bool  ();
    public     ();
    public int  ();
    public short  ();
    public short ​();
    public long  ();
    public int  ();
    public int  ();
    public void  (Byte[] , int );
    public void  (Byte[] , int );
    public bool  ();
    public bool (bool , string );
    public void ();
    public void  ();
    public bool  ();
    public bool (short );
    public bool (long );
    public bool (short );
    public bool ( , Object[] );
    public bool  ();
    public bool  ();
    public bool  ();
    public void (Stream );
    public void (Stream ,  );
    public bool (Byte[] , int );
    public bool (Byte[] , int , short );
    public bool (Byte[] , int , int , short );
    public bool (Byte[] , int );
    public bool (Byte[] , int , short );
    public bool (Byte[] , int , int , short );
    public bool (int , int , Int32[] );
    public bool (int , int , Int32[] , bool );
    public bool (int , int , Int32[] ,  );
    public bool (int , int , Int32[] ,  , bool );
    public bool (int , Int32[] );
    public bool (int , int , Int32[] );
    public bool (String& );
    public string ​();
    public string (string );
    public static void ( , string , string , Object[] );
    public static void (string , string , Object[] );
    public static void ( , object , string , string , Object[] );
    public static void (object , string , string , Object[] );
    public static void ( , string , string , Object[] );
    public static void (string , string , Object[] );
    public static void ( , object , string , string , Object[] );
    public static void (object , string , string , Object[] );
    public static    (   );
    public static  ( );
    public int (Byte[] , int , int , int , int , short );
    public int (int , Byte[] , int , int );
    public int (int , Byte[] , int , int );
    public int (Byte[] , int , int , int , short );
    public int (Byte[] , int , int , int , int , short );
    public int (int , Byte[] , int , int );
    public int (int , Byte[] , int , int );
    public int (int , Byte[] , int );
    public int (int , Byte[] , int , int );
    public int (int , Byte[] , int );
    public int (int , Byte[] , int , int );
    public int (int , Byte[] , int );
    public int (int , Byte[] , int , int );
    public int (int , Byte[] , int );
    public int  (int , Byte[] , int , int );
    public void (long );
    public static int ( );
    public static void (Int16& );
    public static void (Int32& );
    private static void (UInt64& );
    private static void (UInt64& , bool , bool );
    public static void (Double& );
    public static void (Int16[] , int );
    public static void (Int16[] , int , int );
    public static void  (Byte[] , int );
    public static void (Byte[] , int , int );
    public static void (Int32[] , int );
    public static void (Int64[] , int );
    public static void (Int32[] , int , int );
    public static void (Int64[] , int , int );
    public static void (Double[] , int );
    public static void (Double[] , int , int );
    public static void  (Byte[] , int );
    public static void  (Byte[] , int , int );
    public static Byte[] (bool );
    public static Int32[]  (Byte[] , int , int );
    public static Int64[]  (Byte[] , int , int );
    public static void (Int64[] , int , int , Byte[] , int );
    public static void (Int32[] , int , int , Byte[] , int );
    public static Int16[]  (Byte[] , int , int );
    public static void (Int16[] , int , int , Byte[] , int );
    private static Int64[] (Int32[] );
    private static UInt32[] (UInt64[] );
    private static Int32[] (Int64[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​ : ​ {
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    internal ​(​ ,   );
    internal  ​ ();
    private  ​ (int );
    public ​ (string );
    public ​ (string );
    public bool (string , ​& );
    public ​ (string );
    public ​ (string );
    public ​ (string );
    public bool (string , ​& );
    public ​ (string );
    public void (Action`1<​> , bool );
    public void (string );
    public void (string , string );
}
[NullableContextAttribute("1")]
internal interface ​​ {
    public abstract virtual  ​ ​​​ ();
    public abstract virtual  ​ ​​​ ();
    public abstract virtual    ​​​ ();
    public abstract virtual    ​​​ ();
    public abstract virtual  ​​​ (   );
    public abstract virtual void ​​​ (IList`1< ​> );
}
internal class  : object {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerHiddenAttribute]
public ( ,  );
    public  ();
    public  ();
    [DebuggerHiddenAttribute]
public virtual bool Equals(object );
    [DebuggerHiddenAttribute]
public virtual int GetHashCode();
    [DebuggerHiddenAttribute]
public virtual string ToString();
}
internal enum  : Enum {
    public int value__;
    public static  Multiple;
    public static  Exactly;
    public static  AtLeast;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    public static  None;
    [   ("OpenArrow")]
public static  Open;
    [   ("ClosedArrow")]
public static  Closed;
    [   ("ROpenArrow")]
public static  OpenReverse;
    [   ("RClosedArrow")]
public static  ClosedReverse;
    public static  Butt;
    public static  Diamond;
    [   ("Circle")]
public static  Round;
    public static  Square;
    public static  Slash;
}
internal enum  : Enum {
    public int value__;
    public static  MediaBox;
    public static  CropBox;
    public static  BleedBox;
    public static  TrimBox;
    public static  ArtBox;
}
internal enum  : Enum {
    public byte value__;
    [DescriptionAttribute("Entropy-coded data segment")]
public static  EntropyCodedDataSegment;
    [DescriptionAttribute("JPEG 2000 Start of codestream")]
public static  SOC;
    [DescriptionAttribute("JPEG 2000 Start of tile-part")]
public static  SOT;
    [DescriptionAttribute("JPEG 2000 Start of data")]
public static  SOD;
    [DescriptionAttribute("JPEG 2000 Image and tile size")]
public static  SIZ;
    [DescriptionAttribute("JPEG 2000 Coding style default")]
public static  COD;
    [DescriptionAttribute("JPEG 2000 Coding style component")]
public static  COC;
    [DescriptionAttribute("JPEG 2000 Quantization default")]
public static  QCD;
    [DescriptionAttribute("JPEG 2000 Quantization component")]
public static  QCC;
    [DescriptionAttribute("JPEG 2000 Region-of-interest")]
public static  RGN;
    [DescriptionAttribute("JPEG 2000 Progression order change")]
public static  POC;
    [DescriptionAttribute("JPEG 2000 Packed packet headers, tile-part header")]
public static  TLM;
    [DescriptionAttribute("JPEG 2000 Tile-part lengths")]
public static  PLM;
    [DescriptionAttribute("JPEG 2000 Packet length, main header")]
public static  PLT;
    [DescriptionAttribute("JPEG 2000 Packet length, tile-part header")]
public static  PPM;
    [DescriptionAttribute("JPEG 2000 Packed packet headers, main header")]
public static  PPT;
    [DescriptionAttribute("JPEG 2000 Component registration")]
public static  CRG;
    [DescriptionAttribute("JPEG 2000 Comment")]
public static  COM_JPEG2000;
    [DescriptionAttribute("JPEG 2000 Start of packet")]
public static  SOP;
    [DescriptionAttribute("JPEG 2000 End of packet header")]
public static  EPH;
    [DescriptionAttribute("JPEG 2000 extension Quantization default, precinct")]
public static  QPD;
    [DescriptionAttribute("JPEG 2000 extension Quantization component, precinct")]
public static  QPC;
    [DescriptionAttribute("JPEG 2000 extension Variable DC offset")]
public static  DCO;
    [DescriptionAttribute("Visual masking")]
public static  VMS;
    [DescriptionAttribute("JPEG 2000 extension Downsampling factor style")]
public static  DFS;
    [DescriptionAttribute("JPEG 2000 extension Arbitrary decomposition style")]
public static  ADS;
    [DescriptionAttribute("JPEG 2000 extension Multiple component transformation definition")]
public static  MCT;
    [DescriptionAttribute("JPEG 2000 extension Multiple component collection")]
public static  MCC;
    [DescriptionAttribute("JPEG 2000 extension Non-linearity point transformation")]
public static  NLT;
    [DescriptionAttribute("JPEG 2000 extension Multiple component transformation ordering")]
public static  MCO;
    [DescriptionAttribute("JPEG 2000 extension Component bit depth")]
public static  CBD;
    [DescriptionAttribute("JPEG 2000 extension Arbitrary transformation kernels")]
public static  ATK;
    [DescriptionAttribute("JPEG 2000 extension Precinct length, tile-part header")]
public static  RLT;
    [DescriptionAttribute("For temporary private use in arithmetic coding")]
public static  TEM;
    [DescriptionAttribute("Baseline DCT")]
public static  SOF0;
    [DescriptionAttribute("Extended sequential DCT, Huffman coding")]
public static  SOF1;
    [DescriptionAttribute("Progressive DCT, Huffman coding")]
public static  SOF2;
    [DescriptionAttribute("Lossless (sequential), Huffman coding")]
public static  SOF3;
    [DescriptionAttribute("Define Huffman table(s)")]
public static  DHT;
    [DescriptionAttribute("Differential sequential DCT, Huffman coding")]
public static  SOF5;
    [DescriptionAttribute("Differential progressive DCT, Huffman coding")]
public static  SOF6;
    [DescriptionAttribute("Differential lossless (sequential), Huffman coding")]
public static  SOF7;
    [DescriptionAttribute("Reserved for JPEG extensions")]
public static  JPG;
    [DescriptionAttribute("Extended sequential DCT, arithmetic coding")]
public static  SOF9;
    [DescriptionAttribute("Progressive DCT, arithmetic coding")]
public static  SOF10;
    [DescriptionAttribute("Lossless (sequential), arithmetic coding")]
public static  SOF11;
    [DescriptionAttribute("Define arithmetic coding conditioning(s)")]
public static  DAC;
    [DescriptionAttribute("Differential sequential DCT, arithmetic coding")]
public static  SOF13;
    [DescriptionAttribute("Differential progressive DCT, arithmetic coding")]
public static  SOF14;
    [DescriptionAttribute("Differential lossless (sequential), arithmetic coding")]
public static  SOF15;
    [DescriptionAttribute("Restart with modulo 8 count "0"")]
public static  RST0;
    [DescriptionAttribute("Restart with modulo 8 count "1"")]
public static  RST1;
    [DescriptionAttribute("Restart with modulo 8 count "2"")]
public static  RST2;
    [DescriptionAttribute("Restart with modulo 8 count "3"")]
public static  RST3;
    [DescriptionAttribute("Restart with modulo 8 count "4"")]
public static  RST4;
    [DescriptionAttribute("Restart with modulo 8 count "5"")]
public static  RST5;
    [DescriptionAttribute("Restart with modulo 8 count "6"")]
public static  RST6;
    [DescriptionAttribute("Restart with modulo 8 count "7"")]
public static  RST7;
    [DescriptionAttribute("Start of image")]
public static  SOI;
    [DescriptionAttribute("End of image")]
public static  EOI;
    [DescriptionAttribute("Start of scan")]
public static  SOS;
    [DescriptionAttribute("Define quantization table(s)")]
public static  DQT;
    [DescriptionAttribute("Define number of lines")]
public static  DNL;
    [DescriptionAttribute("Define restart interval")]
public static  DRI;
    [DescriptionAttribute("Define hierarchical progression")]
public static  DHP;
    [DescriptionAttribute("Expand reference component(s)")]
public static  EXP;
    [DescriptionAttribute("Reserved for application segments 0")]
public static  APP0;
    [DescriptionAttribute("Reserved for application segments 1")]
public static  APP1;
    [DescriptionAttribute("Reserved for application segments 2")]
public static  APP2;
    [DescriptionAttribute("Reserved for application segments 3")]
public static  APP3;
    [DescriptionAttribute("Reserved for application segments 4")]
public static  APP4;
    [DescriptionAttribute("Reserved for application segments 5")]
public static  APP5;
    [DescriptionAttribute("Reserved for application segments 6")]
public static  APP6;
    [DescriptionAttribute("Reserved for application segments 7")]
public static  APP7;
    [DescriptionAttribute("Reserved for application segments 8")]
public static  APP8;
    [DescriptionAttribute("Reserved for application segments 9")]
public static  APP9;
    [DescriptionAttribute("Reserved for application segments 10")]
public static  APP10;
    [DescriptionAttribute("Reserved for application segments 11")]
public static  APP11;
    [DescriptionAttribute("Reserved for application segments 12")]
public static  APP12;
    [DescriptionAttribute("Reserved for application segments 13")]
public static  APP13;
    [DescriptionAttribute("Reserved for application segments 14")]
public static  APP14;
    [DescriptionAttribute("Reserved for application segments 15")]
public static  APP15;
    [DescriptionAttribute("Reserved for JPEG extensions 9")]
public static  JPG9;
    [DescriptionAttribute("Reserved for JPEG extensions 10")]
public static  JPG10;
    [DescriptionAttribute("Reserved for JPEG extensions 11")]
public static  JPG11;
    [DescriptionAttribute("Reserved for JPEG extensions 12")]
public static  JPG12;
    [DescriptionAttribute("Reserved for JPEG extensions 13")]
public static  JPG13;
    [DescriptionAttribute("Comment")]
public static  COM;
    [DescriptionAttribute("JPEG Version 1 extension Version")]
public static  VER;
    [DescriptionAttribute("JPEG Version 1 extension Define tiled image")]
public static  DTI;
    [DescriptionAttribute("JPEG Version 1 extension Define tile")]
public static  DTT;
    [DescriptionAttribute("JPEG Version 1 extension Selectively refined frame")]
public static  SRF;
    [DescriptionAttribute("JPEG Version 1 extension Selectively refined scan")]
public static  SRS;
    [DescriptionAttribute("JPEG Version 1 extension Define component registration")]
public static  DCR;
    [DescriptionAttribute("JPEG Version 1 extension Define quantizer scale selection")]
public static  DQS;
    [DescriptionAttribute("JPEG-LS Start of Frame")]
public static  SOF55;
    [DescriptionAttribute("JPEG-LS preset parameters")]
public static  LSE;
}
internal enum  : Enum {
    public int value__;
    public static  GRU10S;
    public static  GRU100S;
    public static  GRU1000S;
    public static  GRU10000S;
    public static  GRU100000S;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : ​  {
    private    ;
    private   [] ;
    private Int32[] ;
    private [] ;
    private int ;
    private int ;
    private int ;
    private int  ;
    private Int32[]  ;
    private Byte[]  ;
    private Byte[]  ;
    public (   );
    public virtual void ​ ​ ();
    public virtual void ​ ​ (  [] , Int32& , int , Byte[][] , Int32& , int );
    private void (   );
    private static void ();
    private void (   );
    private void (   );
    private void (   );
    private void (   );
}
internal enum  : Enum {
    public int value__;
    public static  Tiling;
    public static  Shading;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  EncryptContent;
    public static  EncryptEmbeddedFiles;
    public static  EncryptMetadata;
    public static  EncryptAll;
}
internal enum  : Enum {
    public UInt32 value__;
    public static  _0x00010000;
    public static  OTTO;
    public static  true;
    public static  ttcf;
}
internal enum  : Enum {
    public int value__;
    public static  UNKNOWN;
    public static  CONTIG;
    public static  SEPARATE;
}
internal enum  : Enum {
    public int value__;
    public static  Code128;
    public static  Code39;
    public static  EAN8;
    public static  EAN13;
    public static  JAN8;
    public static  JAN13;
    public static  UPCA;
    public static  UPCE;
    public static  Codabar;
    public static  ITF14;
    public static  QR;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  IncludeExclude;
    public static  IncludeNoValueFields;
    public static  ExportFormat;
    public static  GetMethod;
    public static  SubmitCoordinates;
    public static  XFDF;
    public static  IncludeAppendSaves;
    public static  IncludeAnnotations;
    public static  SubmitPDF;
    public static  CanonicalFormat;
    public static  ExclNonUserAnnots;
    public static  ExclFKey;
    public static  EmbedForm;
}
internal enum  : Enum {
    public int value__;
    public static  Rule;
    public static  Group;
    public static  Instruction;
}
internal enum  : Enum {
    public byte value__;
    public static  None;
    public static  ASCII;
    public static  HighANSI;
    public static  EastAsian;
    public static  HighANSIOrEastAsianIfHintEastAsia;
    public static  HighANSIOrEastAsianIfHintEastAsiaAndEastAsiaLangZH;
    public static  HighANSIOrEastAsianIfHintEastAsiaAndEastAsiaLangZHOrEastAsianCharSetIsBig5OrGB2312;
}
internal enum  : Enum {
    public int value__;
    public static  RED;
    public static  BLACK;
}
internal enum  : Enum {
    public int value__;
    public static  Content;
    public static  Reading;
}
internal enum  : Enum {
    public int value__;
    [XEnumAttribute("")]
public static  Linear;
    [XEnumAttribute("circle")]
public static  Radial;
    [XEnumAttribute("rect")]
public static  Rectangular;
    [XEnumAttribute("shape")]
public static  Path;
}
internal enum  : Enum {
    public int value__;
    public static  Small;
    public static  Medium;
    public static  Large;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  :  ​ {
    private XmlElement ;
    private  ;
    public (XmlWriter ,  );
    public (XmlElement ,  );
    public sealed virtual void   ​ (LanguageId );
    private string (LanguageId );
}
internal enum  : Enum {
    public int value__;
    public static  Miter;
    public static  Round;
    public static  Bevel;
}
[DefaultMemberAttribute(" ")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : object {
    [DebuggerBrowsableAttribute("0")]
private static Int32[] ;
    [DebuggerBrowsableAttribute("0")]
private [] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private    [] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<>  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private    { get; }
    private static ();
    public long ();
    private void (long );
    public long ();
    private void (long );
    public Nullable`1<> ();
    private void (Nullable`1<> );
    public bool ();
    private void (bool );
    public bool ();
    private void (bool );
    public  (    ,     );
    public  ();
    public  ();
    private sealed virtual override IEnumerator`1<> ​  ();
    private sealed virtual override IEnumerator ​  ();
    private int  ();
    private  (int );
    private     (int );
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Created;
    public static  Approved;
    public static  CreatedAndApproved;
}
internal enum  : Enum {
    public int value__;
    public static  Days;
    public static  Months;
    public static  Years;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    public static  Identity;
    public static  StdCF;
}
internal enum  : Enum {
    public int value__;
    public static  Round;
    public static  Bevel;
    public static  Miter;
}
internal enum  : Enum {
    public int value__;
    public static  Top;
    public static  Right;
    public static  Bottom;
    public static  Left;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : object {
    [DebuggerBrowsableAttribute("0")]
private static Char[] ;
    [DebuggerBrowsableAttribute("0")]
private static Int32[] ;
    [DebuggerBrowsableAttribute("0")]
private static Int32[] ;
    [DebuggerBrowsableAttribute("0")]
private static Int32[] ;
    [DebuggerBrowsableAttribute("0")]
private static Int32[] ;
    [DebuggerBrowsableAttribute("0")]
private static List`1< > ;
    [DebuggerBrowsableAttribute("0")]
private static List`1< > ;
    [DebuggerBrowsableAttribute("0")]
private static List`1< >  ;
    [DebuggerBrowsableAttribute("0")]
private static List`1< >  ;
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<char, int>  ;
    private static ();
    public  (string ,  , bool , bool ,  , int );
    public  (Byte[] ,  );
    public static  (string ,  , bool , bool ,  , int );
    public static  (Byte[] ,  );
    private static  (string ,  , int );
    private static string ( , int );
    private static string (int );
    private static List`1<string> (string ,   );
    private static   (  );
    private static   (  );
    private static int (int ,  ,  );
    private static  (string , bool );
    private static bool (char , char , char );
    private static   (string );
    private static   (int );
    private static List`1<string> (string );
    private static List`1<int> (List`1<string> );
    private static int (string );
    private static string (int );
    private static string (int , int );
    private static int (int ,  );
    private static int ( , string , string , bool );
    private static bool ( , string , bool );
    private static bool (string );
    private static string (string ,  ,  , bool , bool );
    private static string (string );
    private static string (string );
    private string (string );
    private static string (string , string );
    private static string (string ,  , bool , bool );
    private static   (  ,   );
    private static   (  ,   , int );
    private static   (  ,   );
    private static int (int );
    private static int (int );
    private static int (int );
    private static Dictionary`2<char, int> ();
    private static List`1< > ();
    private static List`1< > ();
    private static List`1< > ();
    private static List`1< > ();
    public sealed virtual void Dispose();
}
internal enum  : Enum {
    public int value__;
    public static  Custom;
    public static  Extension;
    public static  Version;
    public static  Date;
    public static  From;
    public static  Sender;
    public static  To;
    public static  Cc;
    public static  Bcc;
    public static  MessageId;
    public static  ResentDate;
    public static  ResentFrom;
    public static  ResentSender;
    public static  ResentTo;
    public static  ResentCc;
    public static  ResentBcc;
    public static  ResentMessageId;
    public static  ReplyTo;
    public static  InReplyTo;
    public static  References;
    public static  Subject;
    public static  Comments;
    public static  Keywords;
    public static  ReturnPath;
    public static  Received;
    public static  ContentType;
    public static  ContentDisposition;
    public static  ContentTransferEncoding;
    public static  ContentDescription;
    public static  ContentId;
}
internal enum  : Enum {
    public int value__;
    public static  Unknown;
    public static  Sampled;
    public static  ExponentialInterpolation;
    public static  Stitching;
    public static  PostScriptCalculator;
}
internal enum  : Enum {
    public int value__;
    public static  Twips;
    public static  HalfPts;
    public static  QuarterPts;
    public static  Lines;
    public static  EMU;
    public static  CharUnit100;
    public static  Undefined;
}
internal enum  : Enum {
    public int value__;
    public static  Left;
    public static  Top;
    public static  Right;
    public static  Bottom;
}
internal enum  : Enum {
    public int value__;
    public static  IsOn;
    public static  IsInside;
    public static  IsOutside;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Invisible;
    public static  Hidden;
    public static  Print;
    public static  NoZoom;
    public static  NoRotate;
    public static  NoView;
    public static  ReadOnly;
    public static  Locked;
    public static  ToggleNoView;
    public static  LockedContents;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Custom;
    public static  Source;
    public static  Data;
    public static  Supplement;
    public static  EncryptedPayload;
    public static  FormData;
    public static  Schema;
    public static  Unspecified;
}
internal enum  : Enum {
    public int value__;
    public static  LinearAngle;
    public static  LinearVector;
}
internal enum  : Enum {
    public int value__;
    public static  CLEAN;
    public static  REGENERATED;
    public static  UNCLEAN;
}
internal class  : object {
    [NullableAttribute("1")]
private    ;
    private bool ;
    private bool ;
    private  ;
    private int ;
    private int ;
    private int ;
    [NullableContextAttribute("1")]
public (   , bool );
    public void ();
    public void ();
    public void ();
    public bool  ();
    public bool  ();
    private void ();
    private bool  ();
    private void ();
    private void ();
    private void ();
}
internal enum  : Enum {
    public int value__;
    public static  TextOnly;
    public static  IconOnly;
    public static  TextBelowIcon;
    public static  TextAboveIcon;
    public static  TextRightOfIcon;
    public static  TextLeftOfIcon;
    public static  TextOverIcon;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    [   ("H")]
public static  Horizontal;
    [   ("V")]
public static  Vertical;
    [   ("N")]
public static  None;
}
internal enum  : Enum {
    public int value__;
    public static  Flat;
    public static  Round;
    public static  Square;
}
internal enum  : Enum {
    public int value__;
    public static  MSB2LSB;
    public static  LSB2MSB;
    public static  FILLORDER;
    public static  DIRTYDIRECT;
    public static  BUFFERSETUP;
    public static  CODERSETUP;
    public static  BEENWRITING;
    public static  SWAB;
    public static  NOBITREV;
    public static  MYBUFFER;
    public static  ISTILED;
    public static  POSTENCODE;
    public static  INSUBIFD;
    public static  UPSAMPLED;
    public static  STRIPCHOP;
    public static  HEADERONLY;
    public static  NOREADRAW;
    public static  ISBIGTIFF;
    public static  NOBIGTIFF;
}
internal enum  : Enum {
    public int value__;
    public static  Polygon;
    public static  Joined;
    public static  Butt;
    public static  Square;
    public static  Round;
}
internal enum  : Enum {
    public int value__;
    public static  Plain;
    public static  Quoted;
    public static  Encoded;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Shallow;
    public static  Deep;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : object {
    private DocumentModel ;
    private     ;
    private Stack`1<> ;
    private Stack`1<> ;
    private StringBuilder ;
    private     ;
    private CharacterFormat ;
    private IList`1<Inline>  ;
    private   ;
    private Random  ;
    private Paragraph  ;
    private List`1<Inline>  ;
    private Stack`1<Hyperlink>  ;
    public (DocumentModel ,     );
    public int ();
    public int ();
    public Paragraph ();
    public Inline (int );
    public Inline ();
    public void (CharacterFormat );
    private bool (CharacterFormat );
    private void ();
    private void (CharacterFormat );
    public void (string );
    public void (char );
    public void (string );
    public bool (Inline , bool );
    private int (string );
    private void (InlineCollection );
    public void ();
    public void  ();
    public void (Inline );
    public void (Hyperlink );
    public void  ();
    private void  ();
    public void (string , string );
    public void (SpecialCharacterType );
    public void  ();
    private void ( , IList`1<Inline> );
    private void  ();
    public Paragraph ();
    private static bool (Field );
    private Paragraph (Field );
    public void  ();
    public void  ();
    public void (InlineCollection );
    public void  ();
    public void (bool , bool , FormFieldData , string );
    private static bool (IList`1<Inline> , String& , Int32& , Int32& );
    private static Field (DocumentModel , IList`1<Inline> ,  , BookmarkStart& );
    private static BookmarkStart (IList`1<Inline> );
    private Field (BookmarkStart& );
    private Field  ();
    public void  ();
    public void  ();
    public void  ();
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Single;
    public static  Words;
    public static  Dotted;
    public static  Dash;
    public static  DotDash;
    public static  DotDotDash;
    public static  Double;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  :    {
    private  ;
    private string ;
    public ( ,    , int );
    public virtual string   ​ ();
    internal virtual bool   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual void   ​ (string );
    public virtual string   ​ ();
}
internal enum  : Enum {
    public int value__;
    public static  Installable;
    public static  RestrictedLicense;
    public static  PreviewAndPrint;
    public static  Editable;
    public static  NoSubsetting;
    public static  BitmapsOnly;
}
internal enum  : Enum {
    public int value__;
    [ ​ ("CR")]
public static  CR;
    [ ​ ("LF")]
public static  LF;
    [ ​ ("Control")]
public static  CN;
    [ ​ ("Extend")]
public static  EX;
    [ ​ ("ZWJ")]
public static  ZWJ;
    [ ​ ("Regional_Indicator")]
public static  RI;
    [ ​ ("Prepend")]
public static  PP;
    [ ​ ("SpacingMark")]
public static  SM;
    [ ​ ("L")]
public static  L;
    [ ​ ("V")]
public static  V;
    [ ​ ("T")]
public static  T;
    [ ​ ("LV")]
public static  LV;
    [ ​ ("LVT")]
public static  LVT;
    [ObsoleteAttribute("This value is obsolete and unused.")]
[ ​ ("E_Base")]
public static  EB;
    [ObsoleteAttribute("This value is obsolete and unused.")]
[ ​ ("E_Modifier")]
public static  EM;
    [ObsoleteAttribute("This value is obsolete and unused.")]
[ ​ ("Glue_After_Zwj")]
public static  GAZ;
    [ObsoleteAttribute("This value is obsolete and unused.")]
[ ​ ("E_Base_GAZ")]
public static  EBG;
    [ ​ ("Other")]
public static  XX;
    public static  Extended_Pictographic;
    public static  Extended_Pictographic_Extend_star_ZWJ;
    public static  sot;
    public static  eot;
}
internal enum  : Enum {
    public int value__;
    public static  Positive;
    public static  Negative;
    public static  Percentage;
}
internal enum  : Enum {
    public int value__;
    public static  JPEG_SUSPENDED;
    public static  JPEG_HEADER_OK;
    public static  JPEG_HEADER_TABLES_ONLY;
    public static  JPEG_REACHED_SOS;
    public static  JPEG_REACHED_EOI;
    public static  JPEG_ROW_COMPLETED;
    public static  JPEG_SCAN_COMPLETED;
}
internal enum  : Enum {
    public int value__;
    public static  Execute;
    public static  Postpone;
    public static  Report;
    public static  Skip;
}
internal enum  : Enum {
    public int value__;
    public static  Procedural;
    public static  Document;
    public static  Class;
    public static  Designer;
}
internal enum  : Enum {
    public int value__;
    public static  Glyphs;
    public static  EmbeddedObject;
}
internal enum  : Enum {
    public int value__;
    public static  IGNORE;
    public static  SUBFILETYPE;
    public static  OSUBFILETYPE;
    public static  IMAGEWIDTH;
    public static  IMAGELENGTH;
    public static  BITSPERSAMPLE;
    public static  COMPRESSION;
    public static  PHOTOMETRIC;
    public static  THRESHHOLDING;
    public static  CELLWIDTH;
    public static  CELLLENGTH;
    public static  FILLORDER;
    public static  DOCUMENTNAME;
    public static  IMAGEDESCRIPTION;
    public static  MAKE;
    public static  MODEL;
    public static  STRIPOFFSETS;
    public static  ORIENTATION;
    public static  SAMPLESPERPIXEL;
    public static  ROWSPERSTRIP;
    public static  STRIPBYTECOUNTS;
    public static  MINSAMPLEVALUE;
    public static  MAXSAMPLEVALUE;
    public static  XRESOLUTION;
    public static  YRESOLUTION;
    public static  PLANARCONFIG;
    public static  PAGENAME;
    public static  XPOSITION;
    public static  YPOSITION;
    public static  FREEOFFSETS;
    public static  FREEBYTECOUNTS;
    public static  GRAYRESPONSEUNIT;
    public static  GRAYRESPONSECURVE;
    public static  GROUP3OPTIONS;
    public static  T4OPTIONS;
    public static  GROUP4OPTIONS;
    public static  T6OPTIONS;
    public static  RESOLUTIONUNIT;
    public static  PAGENUMBER;
    public static  COLORRESPONSEUNIT;
    public static  TRANSFERFUNCTION;
    public static  SOFTWARE;
    public static  DATETIME;
    public static  ARTIST;
    public static  HOSTCOMPUTER;
    public static  PREDICTOR;
    public static  WHITEPOINT;
    public static  PRIMARYCHROMATICITIES;
    public static  COLORMAP;
    public static  HALFTONEHINTS;
    public static  TILEWIDTH;
    public static  TILELENGTH;
    public static  TILEOFFSETS;
    public static  TILEBYTECOUNTS;
    public static  BADFAXLINES;
    public static  CLEANFAXDATA;
    public static  CONSECUTIVEBADFAXLINES;
    public static  SUBIFD;
    public static  INKSET;
    public static  INKNAMES;
    public static  NUMBEROFINKS;
    public static  DOTRANGE;
    public static  TARGETPRINTER;
    public static  EXTRASAMPLES;
    public static  SAMPLEFORMAT;
    public static  SMINSAMPLEVALUE;
    public static  SMAXSAMPLEVALUE;
    public static  CLIPPATH;
    public static  XCLIPPATHUNITS;
    public static  YCLIPPATHUNITS;
    public static  INDEXED;
    public static  JPEGTABLES;
    public static  OPIPROXY;
    public static  JPEGPROC;
    public static  JPEGIFOFFSET;
    public static  JPEGIFBYTECOUNT;
    public static  JPEGRESTARTINTERVAL;
    public static  JPEGLOSSLESSPREDICTORS;
    public static  JPEGPOINTTRANSFORM;
    public static  JPEGQTABLES;
    public static  JPEGDCTABLES;
    public static  JPEGACTABLES;
    public static  YCBCRCOEFFICIENTS;
    public static  YCBCRSUBSAMPLING;
    public static  YCBCRPOSITIONING;
    public static  REFERENCEBLACKWHITE;
    public static  XMLPACKET;
    public static  OPIIMAGEID;
    public static  REFPTS;
    public static  REGIONTACKPOINT;
    public static  REGIONWARPCORNERS;
    public static  REGIONAFFINE;
    public static  MATTEING;
    public static  DATATYPE;
    public static  IMAGEDEPTH;
    public static  TILEDEPTH;
    public static  PIXAR_IMAGEFULLWIDTH;
    public static  PIXAR_IMAGEFULLLENGTH;
    public static  PIXAR_TEXTUREFORMAT;
    public static  PIXAR_WRAPMODES;
    public static  PIXAR_FOVCOT;
    public static  PIXAR_MATRIX_WORLDTOSCREEN;
    public static  PIXAR_MATRIX_WORLDTOCAMERA;
    public static  WRITERSERIALNUMBER;
    public static  COPYRIGHT;
    public static  RICHTIFFIPTC;
    public static  IT8SITE;
    public static  IT8COLORSEQUENCE;
    public static  IT8HEADER;
    public static  IT8RASTERPADDING;
    public static  IT8BITSPERRUNLENGTH;
    public static  IT8BITSPEREXTENDEDRUNLENGTH;
    public static  IT8COLORTABLE;
    public static  IT8IMAGECOLORINDICATOR;
    public static  IT8BKGCOLORINDICATOR;
    public static  IT8IMAGECOLORVALUE;
    public static  IT8BKGCOLORVALUE;
    public static  IT8PIXELINTENSITYRANGE;
    public static  IT8TRANSPARENCYINDICATOR;
    public static  IT8COLORCHARACTERIZATION;
    public static  IT8HCUSAGE;
    public static  IT8TRAPINDICATOR;
    public static  IT8CMYKEQUIVALENT;
    public static  FRAMECOUNT;
    public static  PHOTOSHOP;
    public static  EXIFIFD;
    public static  ICCPROFILE;
    public static  JBIGOPTIONS;
    public static  GPSIFD;
    public static  FAXRECVPARAMS;
    public static  FAXSUBADDRESS;
    public static  FAXRECVTIME;
    public static  FAXDCS;
    public static  STONITS;
    public static  FEDEX_EDR;
    public static  INTEROPERABILITYIFD;
    public static  DNGVERSION;
    public static  DNGBACKWARDVERSION;
    public static  UNIQUECAMERAMODEL;
    public static  LOCALIZEDCAMERAMODEL;
    public static  CFAPLANECOLOR;
    public static  CFALAYOUT;
    public static  LINEARIZATIONTABLE;
    public static  BLACKLEVELREPEATDIM;
    public static  BLACKLEVEL;
    public static  BLACKLEVELDELTAH;
    public static  BLACKLEVELDELTAV;
    public static  WHITELEVEL;
    public static  DEFAULTSCALE;
    public static  DEFAULTCROPORIGIN;
    public static  DEFAULTCROPSIZE;
    public static  COLORMATRIX1;
    public static  COLORMATRIX2;
    public static  CAMERACALIBRATION1;
    public static  CAMERACALIBRATION2;
    public static  REDUCTIONMATRIX1;
    public static  REDUCTIONMATRIX2;
    public static  ANALOGBALANCE;
    public static  ASSHOTNEUTRAL;
    public static  ASSHOTWHITEXY;
    public static  BASELINEEXPOSURE;
    public static  BASELINENOISE;
    public static  BASELINESHARPNESS;
    public static  BAYERGREENSPLIT;
    public static  LINEARRESPONSELIMIT;
    public static  CAMERASERIALNUMBER;
    public static  LENSINFO;
    public static  CHROMABLURRADIUS;
    public static  ANTIALIASSTRENGTH;
    public static  SHADOWSCALE;
    public static  DNGPRIVATEDATA;
    public static  MAKERNOTESAFETY;
    public static  CALIBRATIONILLUMINANT1;
    public static  CALIBRATIONILLUMINANT2;
    public static  BESTQUALITYSCALE;
    public static  RAWDATAUNIQUEID;
    public static  ORIGINALRAWFILENAME;
    public static  ORIGINALRAWFILEDATA;
    public static  ACTIVEAREA;
    public static  MASKEDAREAS;
    public static  ASSHOTICCPROFILE;
    public static  ASSHOTPREPROFILEMATRIX;
    public static  CURRENTICCPROFILE;
    public static  CURRENTPREPROFILEMATRIX;
    public static  DCSHUESHIFTVALUES;
    public static  FAXMODE;
    public static  JPEGQUALITY;
    public static  JPEGCOLORMODE;
    public static  JPEGTABLESMODE;
    public static  FAXFILLFUNC;
    public static  PIXARLOGDATAFMT;
    public static  DCSIMAGERTYPE;
    public static  DCSINTERPMODE;
    public static  DCSBALANCEARRAY;
    public static  DCSCORRECTMATRIX;
    public static  DCSGAMMA;
    public static  DCSTOESHOULDERPTS;
    public static  DCSCALIBRATIONFD;
    public static  ZIPQUALITY;
    public static  PIXARLOGQUALITY;
    public static  DCSCLIPRECTANGLE;
    public static  SGILOGDATAFMT;
    public static  SGILOGENCODE;
    public static  EXIF_EXPOSURETIME;
    public static  EXIF_FNUMBER;
    public static  EXIF_EXPOSUREPROGRAM;
    public static  EXIF_SPECTRALSENSITIVITY;
    public static  EXIF_ISOSPEEDRATINGS;
    public static  EXIF_OECF;
    public static  EXIF_EXIFVERSION;
    public static  EXIF_DATETIMEORIGINAL;
    public static  EXIF_DATETIMEDIGITIZED;
    public static  EXIF_COMPONENTSCONFIGURATION;
    public static  EXIF_COMPRESSEDBITSPERPIXEL;
    public static  EXIF_SHUTTERSPEEDVALUE;
    public static  EXIF_APERTUREVALUE;
    public static  EXIF_BRIGHTNESSVALUE;
    public static  EXIF_EXPOSUREBIASVALUE;
    public static  EXIF_MAXAPERTUREVALUE;
    public static  EXIF_SUBJECTDISTANCE;
    public static  EXIF_METERINGMODE;
    public static  EXIF_LIGHTSOURCE;
    public static  EXIF_FLASH;
    public static  EXIF_FOCALLENGTH;
    public static  EXIF_SUBJECTAREA;
    public static  EXIF_MAKERNOTE;
    public static  EXIF_USERCOMMENT;
    public static  EXIF_SUBSECTIME;
    public static  EXIF_SUBSECTIMEORIGINAL;
    public static  EXIF_SUBSECTIMEDIGITIZED;
    public static  EXIF_FLASHPIXVERSION;
    public static  EXIF_COLORSPACE;
    public static  EXIF_PIXELXDIMENSION;
    public static  EXIF_PIXELYDIMENSION;
    public static  EXIF_RELATEDSOUNDFILE;
    public static  EXIF_FLASHENERGY;
    public static  EXIF_SPATIALFREQUENCYRESPONSE;
    public static  EXIF_FOCALPLANEXRESOLUTION;
    public static  EXIF_FOCALPLANEYRESOLUTION;
    public static  EXIF_FOCALPLANERESOLUTIONUNIT;
    public static  EXIF_SUBJECTLOCATION;
    public static  EXIF_EXPOSUREINDEX;
    public static  EXIF_SENSINGMETHOD;
    public static  EXIF_FILESOURCE;
    public static  EXIF_SCENETYPE;
    public static  EXIF_CFAPATTERN;
    public static  EXIF_CUSTOMRENDERED;
    public static  EXIF_EXPOSUREMODE;
    public static  EXIF_WHITEBALANCE;
    public static  EXIF_DIGITALZOOMRATIO;
    public static  EXIF_FOCALLENGTHIN35MMFILM;
    public static  EXIF_SCENECAPTURETYPE;
    public static  EXIF_GAINCONTROL;
    public static  EXIF_CONTRAST;
    public static  EXIF_SATURATION;
    public static  EXIF_SHARPNESS;
    public static  EXIF_DEVICESETTINGDESCRIPTION;
    public static  EXIF_SUBJECTDISTANCERANGE;
    public static  EXIF_IMAGEUNIQUEID;
    public static  GEOTIFF_MODELPIXELSCALETAG;
    public static  GEOTIFF_MODELTIEPOINTTAG;
    public static  GEOTIFF_MODELTRANSFORMATIONTAG;
    public static  GEOTIFF_GEOKEYDIRECTORYTAG;
    public static  GEOTIFF_GEODOUBLEPARAMSTAG;
    public static  GEOTIFF_GEOASCIIPARAMSTAG;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​ : object {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
internal Stream  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
internal bool  ;
    [DebuggerBrowsableAttribute("0")]
internal int  ;
    [DebuggerBrowsableAttribute("0")]
internal bool  ;
    [DebuggerBrowsableAttribute("0")]
private ​  ;
    [DebuggerBrowsableAttribute("0")]
private List`1<int>  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private object  ;
    [DebuggerBrowsableAttribute("0")]
private List`1< >  ;
    public ​( ,  );
    public ​(string );
    public ​(string ,  ,  );
    public ​(Stream ,  ,  );
    public ​(Stream );
    public   ();
    internal int  ();
    private void ();
    public bool  ();
    public void ();
    public void (bool );
    private void (Stream );
    private void (  );
    private void (string );
    private void (Stream );
    public bool  ();
    private void (List`1< > );
    private void (List`1< > );
    internal void (​ );
    private void (List`1< > , bool );
    private void (List`1< > , int , bool );
    private void (List`1< > , bool );
    private void (List`1< > , int , bool );
    private void (List`1< > );
    private void (List`1< > );
    private void ();
    private void (List`1< > );
    private void (List`1< > );
    private List`1< >  ();
    private void (int , HashSet`1<int> );
    private List`1< >  ();
    private List`1< > (int );
    private List`1< > (int );
    internal List`1< > (int ,  );
    public ​  ();
    public   ();
    internal void (int );
    internal  ​  ();
    internal  ​ (int );
    private  ​ (  );
    private void ( ​ ,   );
    private void (  );
    private void ( ​ ,   );
    private void ( ​ ,   );
    private bool (int );
    private void ();
    private void ();
    public void (string );
    public void (string );
    public void (Stream );
    internal Queue`1< > ( );
    internal void (​ , Byte[] );
    internal void (​ , long );
    internal void (​ , long , Byte[] );
    internal void (​ , Byte[] , long , int , int );
    internal void (​ , Byte[] );
    private void ();
    internal int (​ , long , Byte[] , int );
    internal int (​ , long , Byte[] , int , int );
    internal Byte[] (​ );
    public Byte[]  (int );
    public Guid  (int );
    public Guid  (int );
    private static int (double );
    private static int  (int );
    internal void (int );
    internal void (int );
    public void ();
    public void (bool );
    private sealed virtual override void ​​  ();
    protected virtual void ​​ (bool );
    internal bool  ();
    internal IList`1< >  ();
    internal    ();
    private IList`1< > (string );
    public IList`1<​> (string );
    public int  ();
    public string  (int );
    public StgType  (int );
    public static void (Stream );
    public static void (string );
    private static void (​ , ​ );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal abstract class ​​ : ​​ {
    [DebuggerBrowsableAttribute("0")]
internal  ;
    [DebuggerBrowsableAttribute("0")]
internal  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private protected  ​<>  { get; }
    [NullableContextAttribute("1")]
private protected abstract virtual  ​<> ​​​ ();
    public  ();
    public  ();
}
internal class  : object {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerHiddenAttribute]
public ( ,  );
    public  ();
    public  ();
    [DebuggerHiddenAttribute]
public virtual bool Equals(object );
    [DebuggerHiddenAttribute]
public virtual int GetHashCode();
    [DebuggerHiddenAttribute]
public virtual string ToString();
}
internal static class  : object {
    [NullableAttribute("1")]
private static [] ;
    private static ();
    [NullableContextAttribute("1")]
public static  ( ,  ,  ,  , double , int );
}
internal enum  : Enum {
    public int value__;
    public static  Normal;
    public static  Rollover;
    public static  Down;
}
internal enum  : Enum {
    public int value__;
    [   ("XYZ")]
public static  LeftTopZoom;
    [   ("Fit")]
public static  FitPage;
    [   ("FitH")]
public static  FitPageHorizontal;
    [   ("FitV")]
public static  FitPageVertical;
    [   ("FitR")]
public static  FitRectangle;
    [   ("FitB")]
public static  FitContent;
    [   ("FitBH")]
public static  FitContentHorizontal;
    [   ("FitBV")]
public static  FitContentVertical;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Palettized;
    public static  HasAlpha;
    public static  Premultiplied;
    public static  Has16BitChannels;
    public static  RgbOrder;
}
internal enum  : Enum {
    public int value__;
    public static  UNSPECIFIED;
    public static  ASSOCALPHA;
    public static  UNASSALPHA;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : object {
    private  ;
    private    ;
    private   <byte> ;
    private Byte[][] ;
    private int ;
    private int ;
    private int ;
    public (   , bool );
    public void ( );
    public void (  [] , Int32& , int , Byte[][] , Int32& , int );
    private void (  [] , Int32& , int , Byte[][] , Int32& , int );
    private void (  [] , Int32& , int , Int32& );
    private void (Byte[][] , Int32& , int );
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    public static  OC;
    public static  Artifact;
    public static  TagSuspect;
    public static  ReversedChars;
    public static  Span;
    public static  Clip;
    public static  AF;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  PdfA1a;
    public static  PdfA1b;
    public static  PdfA2a;
    public static  PdfA2b;
    public static  PdfA2u;
    public static  PdfA3a;
    public static  PdfA3b;
    public static  PdfA3u;
}
internal enum  : Enum {
    public int value__;
    public static  Unknown;
    public static  Serif;
    public static  SansSerif;
    public static  Monospace;
    public static  Cursive;
    public static  Fantasy;
}
[FlagsAttribute]
internal enum  : Enum {
    public int value__;
    public static  NONE;
    public static  QUANT;
    public static  HUFF;
}
internal enum  : Enum {
    public int value__;
    public static  Multiple;
    public static  AtLeast;
    public static  Exactly;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    public static  None;
    public static  TIFF2;
    public static  PNGNoneOnAllRows;
    public static  PNGSubOnAllRows;
    public static  PNGUpOnAllRows;
    public static  PNGAverageOnAllRows;
    public static  PNGPaethOnAllRows;
    public static  PNGOptimum;
}
internal enum  : Enum {
    public int value__;
    [XEnumAttribute("none")]
public static  None;
    [XEnumAttribute("x")]
public static  Horizontal;
    [XEnumAttribute("y")]
public static  Vertical;
    [XEnumAttribute("xy")]
public static  Both;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Continue;
    public static  Restart;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  :  ​ {
    private XmlElement ;
    private int ;
    private  ​ ;
    private  ;
    private int ;
    private List`1<short> ;
    private List`1<short> ;
    private short  ;
    private short  ;
    private short  ;
    public (XmlWriter ,  ​ , int );
    public (XmlElement ,  ​ , int );
    public sealed virtual void   ​ (SectionPropertyExceptions );
    private void (XmlElement , string , string , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class  :    <> {
    [DebuggerBrowsableAttribute("0")]
public static  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    private static ();
    protected virtual     ​ ();
    public     ();
    public void (    );
    public     ();
    public void (    );
    public double ();
    public void (double );
    public  ();
    public void ( );
    public  ();
    public void ( );
    public double ();
    public void (double );
    public      ();
    public void (    );
    public bool  ();
    public void (bool );
    public double ();
    public void (double );
    public      ();
    public void (    );
    public bool  ();
    public bool ( );
    public bool ( );
    public void ( );
    protected virtual bool    ​ ( );
    protected virtual void    ​ (   & );
    protected virtual void    ​ (    );
}
internal enum  : Enum {
    public int value__;
    [XEnumAttribute("scrgbClr")]
public static  RgbPercent;
    [XEnumAttribute("srgbClr")]
public static  RgbHex;
    [XEnumAttribute("hslClr")]
public static  Hsl;
    [XEnumAttribute("sysClr")]
public static  System;
    [XEnumAttribute("schemeClr")]
public static  Scheme;
    [XEnumAttribute("prstClr")]
public static  Preset;
}
[FlagsAttribute]
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Start;
    public static  End;
    public static  Complete;
}
internal enum  : Enum {
    public int value__;
    public static  DE_RED;
    public static  DE_BLACK;
}
internal enum  : Enum {
    public int value__;
    public static  Thin;
    public static  ExtraLight;
    public static  Light;
    public static  Normal;
    public static  Medium;
    public static  SemiBold;
    public static  Bold;
    public static  ExtraBold;
    public static  Black;
}
internal enum  : Enum {
    public int value__;
    public static  Single;
    public static  Double;
    public static  Wavy;
    public static  WavyDouble;
}
internal class  : object {
    [NullableAttribute("1")]
protected static Byte[] ;
    protected int ;
    protected int ;
    protected int ;
    [NullableAttribute("1")]
protected ArrayList ;
    protected int ;
    protected int ;
    [NullableAttribute("1")]
protected ArrayList  ;
    [NullableAttribute("1")]
protected MemoryStream  ;
    protected int  ;
    protected int  ;
    protected int  ;
    protected int  ;
    protected int  ;
    protected int  ;
    protected int  ;
    private static ();
    public static int (int , int );
    public static int (int , int );
}
internal enum  : Enum {
    public int value__;
    public static  Empty;
    public static  None;
    public static  Single;
    public static  Dot;
    public static  DashSmallGap;
    public static  DashLargeGap;
    public static  DashDot;
    public static  DashDotDot;
    public static  Double;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    [   ("GB-EUC-H")]
[   ("Adobe-GB1-0")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-GB1-5/CMap/GB-EUC-H")]
public static  GB_EUC_H;
    [   ("GB-EUC-V")]
[   ("Adobe-GB1-0")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-GB1-5/CMap/GB-EUC-V")]
public static  GB_EUC_V;
    [   ("GBpc-EUC-H")]
[   ("Adobe-GB1-0")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-GB1-5/CMap/GBpc-EUC-H")]
public static  GBpc_EUC_H;
    [   ("GBpc-EUC-V")]
[   ("", "Adobe-GB1-0", "Adobe-GB1-0", "Adobe-GB1-0")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-GB1-5/CMap/GBpc-EUC-V")]
public static  GBpc_EUC_V;
    [   ("GBK-EUC-H")]
[   ("", "Adobe-GB1-2", "Adobe-GB1-2", "Adobe-GB1-2")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-GB1-5/CMap/GBK-EUC-H")]
public static  GBK_EUC_H;
    [   ("GBK-EUC-V")]
[   ("", "Adobe-GB1-2", "Adobe-GB1-2", "Adobe-GB1-2")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-GB1-5/CMap/GBK-EUC-V")]
public static  GBK_EUC_V;
    [   ("GBKp-EUC-H")]
[   ("", "", "Adobe-GB1-2", "Adobe-GB1-2")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-GB1-5/CMap/GBKp-EUC-H")]
public static  GBKp_EUC_H;
    [   ("GBKp-EUC-V")]
[   ("", "", "Adobe-GB1-2", "Adobe-GB1-2")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-GB1-5/CMap/GBKp-EUC-V")]
public static  GBKp_EUC_V;
    [   ("GBK2K-H")]
[   ("", "", "Adobe-GB1-4", "Adobe-GB1-4")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-GB1-5/CMap/GBK2K-H")]
public static  GBK2K_H;
    [   ("GBK2K-V")]
[   ("", "", "Adobe-GB1-4", "Adobe-GB1-4")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-GB1-5/CMap/GBK2K-V")]
public static  GBK2K_V;
    [   ("UniGB-UCS2-H")]
[   ("", "Adobe-GB1-2", "Adobe-GB1-4", "Adobe-GB1-4")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-GB1-5/CMap/UniGB-UCS2-H")]
public static  UniGB_UCS2_H;
    [   ("UniGB-UCS2-V")]
[   ("", "Adobe-GB1-2", "Adobe-GB1-4", "Adobe-GB1-4")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-GB1-5/CMap/UniGB-UCS2-V")]
public static  UniGB_UCS2_V;
    [   ("UniGB-UTF16-H")]
[   ("", "", "", "Adobe-GB1-4")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-GB1-5/CMap/UniGB-UTF16-H")]
public static  UniGB_UTF16_H;
    [   ("UniGB-UTF16-V")]
[   ("", "", "", "Adobe-GB1-4")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-GB1-5/CMap/UniGB-UTF16-V")]
public static  UniGB_UTF16_V;
    [   ("B5pc-H")]
[   ("Adobe-CNS1-0")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-CNS1-7/CMap/B5pc-H")]
public static  B5pc_H;
    [   ("B5pc-V")]
[   ("Adobe-CNS1-0")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-CNS1-7/CMap/B5pc-V")]
public static  B5pc_V;
    [   ("HKscs-B5-H")]
[   ("", "", "Adobe-CNS1-3", "Adobe-CNS1-3")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-CNS1-7/CMap/HKscs-B5-H")]
public static  HKscs_B5_H;
    [   ("HKscs-B5-V")]
[   ("", "", "Adobe-CNS1-3", "Adobe-CNS1-3")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-CNS1-7/CMap/HKscs-B5-V")]
public static  HKscs_B5_V;
    [   ("ETen-B5-H")]
[   ("Adobe-CNS1-0")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-CNS1-7/CMap/ETen-B5-H")]
public static  ETen_B5_H;
    [   ("ETen-B5-V")]
[   ("Adobe-CNS1-0")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-CNS1-7/CMap/ETen-B5-V")]
public static  ETen_B5_V;
    [   ("ETenms-B5-H")]
[   ("", "Adobe-CNS1-0", "Adobe-CNS1-0", "Adobe-CNS1-0")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-CNS1-7/CMap/ETenms-B5-H")]
public static  ETenms_B5_H;
    [   ("ETenms-B5-V")]
[   ("", "Adobe-CNS1-0", "Adobe-CNS1-0", "Adobe-CNS1-0")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-CNS1-7/CMap/ETenms-B5-V")]
public static  ETenms_B5_V;
    [   ("CNS-EUC-H")]
[   ("Adobe-CNS1-0")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-CNS1-7/CMap/CNS-EUC-H")]
public static  CNS_EUC_H;
    [   ("CNS-EUC-V")]
[   ("Adobe-CNS1-0")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-CNS1-7/CMap/CNS-EUC-V")]
public static  CNS_EUC_V;
    [   ("UniCNS-UCS2-H")]
[   ("", "Adobe-CNS1-0", "Adobe-CNS1-3", "Adobe-CNS1-3")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-CNS1-7/CMap/UniCNS-UCS2-H")]
public static  UniCNS_UCS2_H;
    [   ("UniCNS-UCS2-V")]
[   ("", "Adobe-CNS1-0", "Adobe-CNS1-3", "Adobe-CNS1-3")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-CNS1-7/CMap/UniCNS-UCS2-V")]
public static  UniCNS_UCS2_V;
    [   ("UniCNS-UTF16-H")]
[   ("", "", "", "Adobe-CNS1-4")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-CNS1-7/CMap/UniCNS-UTF16-H")]
public static  UniCNS_UTF16_H;
    [   ("UniCNS-UTF16-V")]
[   ("", "", "", "Adobe-CNS1-4")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-CNS1-7/CMap/UniCNS-UTF16-V")]
public static  UniCNS_UTF16_V;
    [   ("83pv-RKSJ-H")]
[   ("Adobe-Japan1-1")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Japan1-6/CMap/83pv-RKSJ-H")]
public static  _83pv_RKSJ_H;
    [   ("90ms-RKSJ-H")]
[   ("Adobe-Japan1-2")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Japan1-6/CMap/90ms-RKSJ-H")]
public static  _90ms_RKSJ_H;
    [   ("90ms-RKSJ-V")]
[   ("Adobe-Japan1-2")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Japan1-6/CMap/90ms-RKSJ-V")]
public static  _90ms_RKSJ_V;
    [   ("90msp-RKSJ-H")]
[   ("", "Adobe-Japan1-2", "Adobe-Japan1-2", "Adobe-Japan1-2")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Japan1-6/CMap/90msp-RKSJ-H")]
public static  _90msp_RKSJ_H;
    [   ("90msp-RKSJ-V")]
[   ("", "Adobe-Japan1-2", "Adobe-Japan1-2", "Adobe-Japan1-2")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Japan1-6/CMap/90msp-RKSJ-V")]
public static  _90msp_RKSJ_V;
    [   ("90pv-RKSJ-H")]
[   ("Adobe-Japan1-1")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Japan1-6/CMap/90pv-RKSJ-H")]
public static  _90pv_RKSJ_H;
    [   ("Add-RKSJ-H")]
[   ("Adobe-Japan1-1")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Japan1-6/CMap/Add-RKSJ-H")]
public static  Add_RKSJ_H;
    [   ("Add-RKSJ-V")]
[   ("Adobe-Japan1-1")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Japan1-6/CMap/Add-RKSJ-V")]
public static  Add_RKSJ_V;
    [   ("EUC-H")]
[   ("", "Adobe-Japan1-1", "Adobe-Japan1-1", "Adobe-Japan1-1")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Japan1-6/CMap/EUC-H")]
public static  EUC_H;
    [   ("EUC-V")]
[   ("", "Adobe-Japan1-1", "Adobe-Japan1-1", "Adobe-Japan1-1")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Japan1-6/CMap/EUC-V")]
public static  EUC_V;
    [   ("Ext-RKSJ-H")]
[   ("Adobe-Japan1-2")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Japan1-6/CMap/Ext-RKSJ-H")]
public static  Ext_RKSJ_H;
    [   ("Ext-RKSJ-V")]
[   ("Adobe-Japan1-2")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Japan1-6/CMap/Ext-RKSJ-V")]
public static  Ext_RKSJ_V;
    [   ("H")]
[   ("Adobe-Japan1-1")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Japan1-6/CMap/H")]
public static  H;
    [   ("V")]
[   ("Adobe-Japan1-1")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Japan1-6/CMap/V")]
public static  V;
    [   ("UniJIS-UCS2-H")]
[   ("", "Adobe-Japan1-2", "Adobe-Japan1-4", "Adobe-Japan1-4")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Japan1-6/CMap/UniJIS-UCS2-H")]
public static  UniJIS_UCS2_H;
    [   ("UniJIS-UCS2-V")]
[   ("", "Adobe-Japan1-2", "Adobe-Japan1-4", "Adobe-Japan1-4")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Japan1-6/CMap/UniJIS-UCS2-V")]
public static  UniJIS_UCS2_V;
    [   ("UniJIS-UCS2-HW-H")]
[   ("", "Adobe-Japan1-2", "Adobe-Japan1-4", "Adobe-Japan1-4")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Japan1-6/CMap/UniJIS-UCS2-HW-H")]
public static  UniJIS_UCS2_HW_H;
    [   ("UniJIS-UCS2-HW-V")]
[   ("", "Adobe-Japan1-2", "Adobe-Japan1-4", "Adobe-Japan1-4")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Japan1-6/CMap/UniJIS-UCS2-HW-V")]
public static  UniJIS_UCS2_HW_V;
    [   ("UniJIS-UTF16-H")]
[   ("Adobe-Japan1-5")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Japan1-6/CMap/UniJIS-UTF16-H")]
public static  UniJIS_UTF16_H;
    [   ("UniJIS-UTF16-V")]
[   ("Adobe-Japan1-5")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Japan1-6/CMap/UniJIS-UTF16-V")]
public static  UniJIS_UTF16_V;
    [   ("KSC-EUC-H")]
[   ("Adobe-Korea1-0")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Korea1-2/CMap/KSC-EUC-H")]
public static  KSC_EUC_H;
    [   ("KSC-EUC-V")]
[   ("Adobe-Korea1-0")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Korea1-2/CMap/KSC-EUC-V")]
public static  KSC_EUC_V;
    [   ("KSCms-UHC-H")]
[   ("Adobe-Korea1-1")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Korea1-2/CMap/KSCms-UHC-H")]
public static  KSCms_UHC_H;
    [   ("KSCms-UHC-V")]
[   ("Adobe-Korea1-1")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Korea1-2/CMap/KSCms-UHC-V")]
public static  KSCms_UHC_V;
    [   ("KSCms-UHC-HW-H")]
[   ("", "Adobe-Korea1-1", "Adobe-Korea1-1", "Adobe-Korea1-1")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Korea1-2/CMap/KSCms-UHC-HW-H")]
public static  KSCms_UHC_HW_H;
    [   ("KSCms-UHC-HW-V")]
[   ("", "Adobe-Korea1-1", "Adobe-Korea1-1", "Adobe-Korea1-1")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Korea1-2/CMap/KSCms-UHC-HW-V")]
public static  KSCms_UHC_HW_V;
    [   ("KSCpc-EUC-H")]
[   ("Adobe-Korea1-0")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Korea1-2/CMap/KSCpc-EUC-H")]
public static  KSCpc_EUC_H;
    [   ("UniKS-UCS2-H")]
[   ("", "Adobe-Korea1-1", "Adobe-Korea1-1", "Adobe-Korea1-1")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Korea1-2/CMap/UniKS-UCS2-H")]
public static  UniKS_UCS2_H;
    [   ("UniKS-UCS2-V")]
[   ("", "Adobe-Korea1-1", "Adobe-Korea1-1", "Adobe-Korea1-1")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Korea1-2/CMap/UniKS-UCS2-V")]
public static  UniKS_UCS2_V;
    [   ("UniKS-UTF16-H")]
[   ("Adobe-Korea1-2")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Korea1-2/CMap/UniKS-UTF16-H")]
public static  UniKS_UTF16_H;
    [   ("UniKS-UTF16-V")]
[   ("Adobe-Korea1-2")]
[   ("GemBox.Pdf.Resources.cmap-resources-master.zip", "Adobe-Korea1-2/CMap/UniKS-UTF16-V")]
public static  UniKS_UTF16_V;
    [   ("Identity-H")]
[   ("Adobe-Identity-0")]
public static  Identity_H;
    [   ("Identity-V")]
[   ("Adobe-Identity-0")]
public static  Identity_V;
}
internal enum  : Enum {
    public int value__;
    [XEnumAttribute("none")]
public static  NoArrow;
    [XEnumAttribute("triangle")]
public static  Arrow;
    [XEnumAttribute("arrow")]
public static  OpenArrow;
    [XEnumAttribute("stealth")]
public static  StealthArrow;
    [XEnumAttribute("diamond")]
public static  DiamondArrow;
    [XEnumAttribute("oval")]
public static  OvalArrow;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  DateTime;
    public static  Numeric;
    public static  General;
    public static  FieldSpecific;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  :   {
    private static Hashtable ;
    private  ;
    private  ;
    private int ;
    private int ;
    public (string );
    private static ();
    private string ();
    private void (string , String& );
    private void (string , String& );
    private void (String& );
    private char (int );
    private void ();
    private void ();
    protected virtual string  ​ ();
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Important;
    public static  Default;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    [ObsoleteAttribute("PKCS#1 signatures are deprecated with PDF 2.0. Use PKCS7 or CAdES instead.")]
[   ("adbe.x509.rsa_sha1")]
public static  PKCS1;
    [   ("adbe.pkcs7.detached")]
public static  PKCS7;
    [ObsoleteAttribute("PKCS#7 SHA-1 signatures are deprecated with PDF 2.0. Use PKCS7 or CAdES instead.")]
[   ("adbe.pkcs7.sha1")]
public static  PKCS7_SHA1;
    [   ("ETSI.CAdES.detached")]
public static  CAdES;
    [   ("ETSI.RFC3161")]
public static  RFC3161;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : object {
    private DocumentModel ;
    private Stack`1<> ;
    private StringBuilder ;
    private     ;
    private     ;
    private IList`1<Inline> ;
    private  ;
    private Paragraph  ;
    private bool  ;
    private bool  ;
    private FormFieldData  ;
    private string  ;
    private      ;
    private Random  ;
    public (DocumentModel ,     ,     );
    public void ();
    public void (string );
    public void (char );
    public void (Inline );
    public void ();
    public Paragraph  ();
    public void ();
    public void (bool );
    public void (bool , bool );
    public bool  ();
    public void ();
    private void (Field );
    public void (FormFieldData );
    private void ( , IList`1<Inline> );
    private void ();
    private void ();
    private void ();
    private Field  ();
    private Field (BookmarkStart& );
    private static bool (IList`1<Inline> , String& , Int32& , Int32& );
    private static BookmarkStart (IList`1<Inline> );
    internal     (int , NumberStyle , int );
}
internal enum  : Enum {
    public int value__;
    public static  Line;
    public static  Margin;
    public static  Page;
    public static  Paragraph;
    public static  TopMargin;
    public static  BottomMargin;
    public static  InsideMargin;
    public static  OutsideMargin;
}
internal enum  : Enum {
    public int value__;
    public static  Miter;
    public static  Square;
    public static  Bevel;
    public static  Round;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : object {
    private ushort ;
    private ushort ;
    private  ;
    private UInt32 ;
    private  ;
    private  ;
    private int ;
    private   ;
    private int  ;
    private Byte[]  ;
    private Byte[]  ;
    private int  ;
    private Byte[]  ;
    private Byte[]  ;
    private Byte[]  ;
    private static Byte[]  ;
    private static ();
    private MemoryStream (Stream , string );
    private Byte[] (Stream , string );
    private Byte[] (   , string );
    private static MemoryStream (MemoryStream );
    private Byte[] ();
    private Byte[] ();
    private Byte[] (Byte[] , Byte[] );
    private void (MemoryStream , string , Byte[]& , Byte[]& );
    private void (Byte[] );
    private Byte[] (string );
    private Byte[] (string , Byte[] , Byte[] );
    internal static bool (Stream );
    public static Stream (Stream , string , Func`2<Stream, bool> );
    public static MemoryStream (Stream , string );
    public static void (MemoryStream , Stream , string );
}
internal enum  : Enum {
    public int value__;
    public static  Decoded;
    public static  Encoded;
}
internal enum  : Enum {
    public int value__;
    public static  Gray;
    public static  Indexed;
    public static  Rgb;
    public static  Cmyk;
    public static  Gradient;
}
internal enum  : Enum {
    public int value__;
    public static  Inline;
    public static  BothSides;
    public static  Left;
    public static  Right;
    public static  Largest;
    public static  TopBottom;
    public static  None;
    public static  InFrontOfText;
}
internal enum  : Enum {
    public int value__;
    public static  Text;
    public static  Rectangle;
    public static  Image;
    public static  Line;
    public static  Paragraph;
    public static  Page;
    public static  Section;
    public static  Cluster;
    public static  Segment;
    public static  Block;
    public static  Table;
    public static  TableColumn;
    public static  TableRow;
    public static  TableCell;
    public static  BorderLine;
    public static  SingleBorder;
    public static  MultipleBorders;
}
internal enum  : Enum {
    public int value__;
    [   ("A")]
public static  Always;
    [   ("B")]
public static  ContentTooBig;
    [   ("S")]
public static  ContentTooSmall;
    [   ("N")]
public static  Never;
}
internal enum  : Enum {
    public int value__;
    public static  Left;
    public static  Right;
    public static  Center;
    public static  Justify;
}
internal enum  : Enum {
    public byte value__;
    public static  Greyscale;
    public static  Truecolor;
    public static  Indexed;
    public static  GreyscaleWithAlpha;
    public static  TruecolorWithAlpha;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  :    {
    private static Int32[] ;
    private static Int32[] ;
    private static Int32[] ;
    private static Int16[] ;
    private static Int16[] ;
    private static  ;
    private static  ;
    private static []  ;
    private static Int32[]  ;
    private static Byte[]  ;
    private static Byte[]  ;
    private static Byte[]  ;
    internal   ;
    internal   ;
    internal   ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal string  ;
    internal int  ;
    internal string  ;
    internal   ;
    private static   []  ;
    private static   []  ;
    private static   []  ;
    private     ;
    private     ;
    private int  ;
    private int  ;
    private int  ;
    private   ;
    private Byte[]  ;
    private int  ;
    private int  ;
    private int  ;
    private Int32[]  ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    private   ;
    private bool  ;
    private Byte[]  ;
    private int  ;
    private int  ;
    private int  ;
    private Byte[] ​;
    private int ​;
    public ( ,  , string );
    private static ();
    private void ();
    public virtual bool   ​ ();
    public virtual bool   ​ ();
    public virtual bool   ​ ();
    public virtual bool   ​ ();
    public virtual bool   ​ (short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ ();
    public virtual bool   ​ (short );
    public virtual bool   ​ ();
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual void   ​ ();
    public virtual void   ​  ();
    private bool ();
    private void (Int32& );
    private static void (Int32& , Int32& );
    private static bool (int );
    private static bool (int );
    private static void (int , Byte[] , Int32& , byte );
    private static void (Byte[] , int , Int32[] , int , int , int );
    private static int (Byte[] , int , int , int );
    private static int (Byte[] , int , int , int );
    private static int (Byte[] , int , int , int , int );
    private static int (Byte[] , int , int , int , int );
    private bool ();
    private int (int );
    private void (int );
    private bool (int );
    private bool (int );
    private bool (& , int );
    private bool (& , int , bool );
    private bool ();
    private bool  ();
    private bool  ();
    private void (string );
    private void (string );
    private void (string );
    private void (string );
    private bool (Byte[] , int , int );
    private bool (Byte[] , int , int );
    private bool  ();
    private bool  ();
    private static int (Byte[] , int , int );
    private bool (Byte[] , int , int );
    private bool  ();
    private void ();
    private bool  ();
    private void ();
    private void (int , int );
    private void ( );
    private void (int , bool );
    private void ();
    private void (int );
    private void (string );
    private void (string );
    private bool (string );
    private bool (string , int );
    private bool  ();
    private bool  ();
    private bool (Byte[] , int , int );
    private bool  ();
    private bool (Byte[] , int , int );
    private bool (Byte[] , int , int );
    private bool  ();
}
internal enum  : Enum {
    public int value__;
    public static  Ver_3;
    public static  Ver_4;
}
internal enum  : Enum {
    public int value__;
    public static  Address;
    public static  MailboxList;
    public static  AddressList;
}
internal enum  : Enum {
    public byte value__;
    public static  Undefined;
    public static  Free;
    public static  Table;
    public static  Stream;
}
internal enum  : Enum {
    public int value__;
    public static  WriteFullTxtDocument;
    public static  WritePartialTxtDocument;
    public static  InsertSpecialFindCharacters;
}
internal enum  : Enum {
    public int value__;
    public static  Spaces;
    public static  Dots;
    public static  Dashes;
    public static  Lines;
    public static  Heavy;
    public static  MiddleDot;
}
internal enum  : Enum {
    public int value__;
    public static  IntegerSlow;
    public static  IntegerFast;
    public static  Float;
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class  :    <> {
    [DebuggerBrowsableAttribute("0")]
public static  ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​    ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   >  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    private static ();
    protected virtual     ​ ();
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public int ();
    public void (int );
    public ​   ();
    public void (​   );
    public ​   ();
    public void (​   );
    public ​   ();
    public void (​   );
    public ​   ();
    public void (​   );
    public Nullable`1<   >  ();
    public void (Nullable`1<   > );
    public double  ();
    public void (double );
    public double  ();
    public void (double );
    public bool ( );
    public bool ( );
    public void ( );
    protected virtual bool    ​ ( );
    protected virtual void    ​ (   & );
    protected virtual void    ​ (    );
}
internal enum  : Enum {
    public int value__;
    public static  Never;
    public static  Can;
    public static  Must;
}
internal enum  : Enum {
    public int value__;
    public static  Full;
    public static  IgnoreString;
    public static  NumbersOnly;
    public static  NumbersOnlyZero;
}
internal enum  : Enum {
    public int value__;
    public static  JCT_NONE;
    public static  JCT_SUBTRACT_GREEN;
}
internal enum  : Enum {
    public int value__;
    [DescriptionAttribute("Page description level")]
public static  PageDescriptionLevel;
    [DescriptionAttribute("Type 3 font header")]
public static  Type3FontHeader;
    [DescriptionAttribute("Text object")]
public static  TextObject;
    [DescriptionAttribute("Path object")]
public static  PathObject;
    [DescriptionAttribute("Clipping path object")]
public static  ClippingPathObject;
}
internal enum  : Enum {
    public int value__;
    public static  NotSet;
    public static  Invalid;
    public static  InvalidEncoding;
    public static  Correct;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : ​   {
    [DebuggerBrowsableAttribute("0")]
private [] ;
    [DebuggerBrowsableAttribute("0")]
private [] ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
internal static Char[] ;
    [DebuggerBrowsableAttribute("0")]
internal static Dictionary`2<char, int> ;
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<ushort, object> ;
    internal (string , bool );
    private static ();
    internal static ​   ();
    public virtual UInt32 ​  ​ ();
    internal bool ( , bool , string );
    internal bool ( , string );
    private bool ( , string );
    internal virtual void ​  ​ (​​  , UInt32 );
    internal virtual UInt32 ​  ​ (​​  , Nullable`1& );
    internal virtual ​   ​  ​ (ICollection`1<ushort> );
    internal virtual void ​  ​ (​   , ICollection`1<ushort> );
    [IteratorStateMachineAttribute("/")]
internal IEnumerable`1<KeyValuePair`2<CultureInfo, string>> ( );
    private CultureInfo (ushort , ushort );
    private string (ushort , ushort , ushort , ushort );
    private static Dictionary`2<ushort, object> ();
    private static bool (Dictionary`2<ushort, object> , ushort , CultureInfo& );
}
internal enum  : Enum {
    public int value__;
    public static  UINT;
    public static  INT;
    public static  IEEEFP;
    public static  VOID;
    public static  COMPLEXINT;
    public static  COMPLEXIEEEFP;
}
internal class ​ : object {
    [NullableContextAttribute("1")]
public sealed virtual int Compare(​ , ​ );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class ​​ : ​​< ​,  ​,  ​> {
    public virtual    ​​​ ();
    public virtual void ( ​ ,  ​ );
    public virtual void ​​​ (    );
}
internal class  : object {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerHiddenAttribute]
public ( ,  );
    public  ();
    public  ();
    [DebuggerHiddenAttribute]
public virtual bool Equals(object );
    [DebuggerHiddenAttribute]
public virtual int GetHashCode();
    [DebuggerHiddenAttribute]
public virtual string ToString();
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  OpenStart;
    public static  OpenEnd;
    public static  LocalMax;
    public static  LocalMin;
}
internal enum  : Enum {
    public int value__;
    public static  Unknown;
    public static  StickyNoteCheckmark;
    public static  StickyNoteInsertTextCheckmark;
    public static  StickyNoteCircle;
    public static  StickyNoteComment;
    public static  StickyNoteCross;
    public static  StickyNoteCrossHairs;
    public static  StickyNoteHelp;
    public static  StickyNoteInsertText;
    public static  StickyNoteKey;
    public static  StickyNoteNewParagraph;
    public static  StickyNoteTextNote;
    public static  StickyNoteParagraph;
    public static  StickyNoteRightArrow;
    public static  StickyNoteRightPointer;
    public static  StickyNoteStar;
    public static  StickyNoteUpArrow;
    public static  StickyNoteUpLeftArrow;
    public static  FileAttachmentGraph;
    public static  FileAttachmentPaperclip;
    public static  FileAttachmentAttachment;
    public static  FileAttachmentTag;
    public static  SoundEar;
    public static  SoundMicrophone;
    public static  SoundSound;
    public static  StampApproved;
    public static  StampExperimental;
    public static  StampNotApproved;
    public static  StampAsIs;
    public static  StampExpired;
    public static  StampNotForPublicRelease;
    public static  StampConfidential;
    public static  StampFinal;
    public static  StampSold;
    public static  StampDepartmental;
    public static  StampForComment;
    public static  StampTopSecret;
    public static  StampDraft;
    public static  StampForPublicRelease;
    public static  StampStandardBusinessApproved;
    public static  StampStandardBusinessNotApproved;
    public static  StampStandardBusinessDraft;
    public static  StampStandardBusinessFinal;
    public static  StampStandardBusinessCompleted;
    public static  StampStandardBusinessConfidential;
    public static  StampStandardBusinessForPublicRelease;
    public static  StampStandardBusinessNotForPublicRelease;
    public static  StampStandardBusinessForComment;
    public static  StampStandardBusinessVoid;
    public static  StampStandardBusinessPreliminaryResults;
    public static  StampStandardBusinessInformationOnly;
    public static  StampSignHereWitness;
    public static  StampSignHereInitialHere;
    public static  StampSignHereSignHere;
    public static  StampSignHereAccepted;
    public static  StampSignHereRejected;
    public static  StampDynamicRevised;
    public static  StampDynamicReviewed;
    public static  StampDynamicReceived;
    public static  StampDynamicApproved;
    public static  StampDynamicConfidential;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal ​   ;
    internal ​   Source { get; }
    [NullableAttribute("2")]
public       { get; public set; }
    internal (​   );
    private static ();
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    internal static  ();
    internal static  (​   );
    [NullableContextAttribute("2")]
internal static  (​   ,     );
    internal static  (​   );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    public  ();
    private void ( );
    public Nullable`1<double> ();
    public void (Nullable`1<double> );
    public Nullable`1<double> ();
    public void (Nullable`1<double> );
    public Nullable`1<double> ();
    public void (Nullable`1<double> );
    public Nullable`1<double>  ();
    public void (Nullable`1<double> );
    public Nullable`1<double>  ();
    public void (Nullable`1<double> );
    public void ( , Nullable`1[] );
    public virtual string ToString();
    private Nullable`1<double> ( );
    private void ( , Nullable`1<double> );
    private static int ( );
    private static int ( ,  );
    private static string ( );
}
internal enum  : Enum {
    public int value__;
    public static  Default;
    public static  BlackWhite;
    public static  Gray2;
    public static  Gray4;
    public static  Gray8;
    public static  Gray16;
    public static  Indexed1;
    public static  Indexed2;
    public static  Indexed4;
    public static  Indexed8;
    public static  Rgb24;
    public static  Bgra32;
    public static  Pbgra32;
    public static  Rgb48;
    public static  Rgba64;
    public static  Prgba64;
    public static  Cmyk32;
}
internal enum  : Enum {
    public int value__;
    public static  NONE;
    public static  CCITTRLE;
    public static  CCITTFAX3;
    public static  CCITT_T4;
    public static  CCITTFAX4;
    public static  CCITT_T6;
    public static  LZW;
    public static  OJPEG;
    public static  JPEG;
    public static  NEXT;
    public static  CCITTRLEW;
    public static  PACKBITS;
    public static  THUNDERSCAN;
    public static  IT8CTPAD;
    public static  IT8LW;
    public static  IT8MP;
    public static  IT8BL;
    public static  PIXARFILM;
    public static  PIXARLOG;
    public static  DEFLATE;
    public static  ADOBE_DEFLATE;
    public static  DCS;
    public static  JBIG;
    public static  SGILOG;
    public static  SGILOG24;
    public static  JP2000;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : object {
    private  ;
    private    ;
    private Byte[][][] ;
    private bool ;
    private int ;
    private Int32[][][] ;
    private Int32[] ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    public (   );
    public void ( );
    public void (Byte[][] , Int32& , int );
    private void (Byte[][] , Int32& , int );
    private void (Byte[][] , Int32& , int );
    private void (Byte[][] , Int32& , int );
    private void ();
    private void ();
    private void ();
    private void ();
}
internal enum  : Enum {
    public int value__;
    public static  DeviceGray;
    public static  DeviceRGB;
    public static  DeviceCMYK;
    public static  CalGray;
    public static  CalRGB;
    public static  Lab;
    public static  ICCBased;
    public static  Indexed;
    public static  Pattern;
    public static  Separation;
    public static  DeviceN;
}
internal enum  : Enum {
    public int value__;
    public static  Auto;
    public static  Landscape;
    public static  Portrait;
    public static  ReverseLandscape;
    public static  ReversePortrait;
}
[FlagsAttribute]
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  BoldSimulation;
    public static  ItalicSimulation;
    public static  BoldItalicSimulation;
}
internal enum  : Enum {
    public int value__;
    public static  BASELINE;
    public static  LOSSLESS;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Continuous;
    public static  NewPage;
    public static  NewSection;
}
internal enum  : Enum {
    public int value__;
    public static  AHx;
    public static  A85;
    public static  LZW;
    public static  Fl;
    public static  RL;
    public static  CCF;
    public static  DCT;
}
internal enum  : Enum {
    public int value__;
    [DescriptionAttribute("Cross")]
[XEnumAttribute("cross")]
public static  Cross;
    [DescriptionAttribute("Dashed downward diagonal")]
[XEnumAttribute("dashDnDiag")]
public static  DashedDownwardDiagonal;
    [DescriptionAttribute("Dashed horizontal")]
[XEnumAttribute("dashHorz")]
public static  DashedHorizontal;
    [DescriptionAttribute("Dashed upward diagonal")]
[XEnumAttribute("dashUpDiag")]
public static  DashedUpwardDiagonal;
    [DescriptionAttribute("Dashed vertical")]
[XEnumAttribute("dashVert")]
public static  DashedVertical;
    [DescriptionAttribute("Diagonal brick")]
[XEnumAttribute("diagBrick")]
public static  DiagonalBrick;
    [DescriptionAttribute("Diagonal cross")]
[XEnumAttribute("diagCross")]
public static  DiagonalCross;
    [DescriptionAttribute("Divot")]
[XEnumAttribute("divot")]
public static  Divot;
    [DescriptionAttribute("Dark downward diagonal")]
[XEnumAttribute("dkDnDiag")]
public static  DarkDownwardDiagonal;
    [DescriptionAttribute("Dark horizontal")]
[XEnumAttribute("dkHorz")]
public static  DarkHorizontal;
    [DescriptionAttribute("Dark upward diagonal")]
[XEnumAttribute("dkUpDiag")]
public static  DarkUpwardDiagonal;
    [DescriptionAttribute("Dark vertical")]
[XEnumAttribute("dkVert")]
public static  DarkVertical;
    [DescriptionAttribute("Downward diagonal")]
[XEnumAttribute("dnDiag")]
public static  DownwardDiagonal;
    [DescriptionAttribute("Dotted diamond")]
[XEnumAttribute("dotDmnd")]
public static  DottedDiamond;
    [DescriptionAttribute("Dotted grid")]
[XEnumAttribute("dotGrid")]
public static  DottedGrid;
    [DescriptionAttribute("Horizontal")]
[XEnumAttribute("horz")]
public static  Horizontal;
    [DescriptionAttribute("Horizontal brick")]
[XEnumAttribute("horzBrick")]
public static  HorizontalBrick;
    [DescriptionAttribute("Large checker board")]
[XEnumAttribute("lgCheck")]
public static  LargeCheckerBoard;
    [DescriptionAttribute("Large confetti")]
[XEnumAttribute("lgConfetti")]
public static  LargeConfetti;
    [DescriptionAttribute("Large grid")]
[XEnumAttribute("lgGrid")]
public static  LargeGrid;
    [DescriptionAttribute("Light downward diagonal")]
[XEnumAttribute("ltDnDiag")]
public static  LightDownwardDiagonal;
    [DescriptionAttribute("Light horizontal")]
[XEnumAttribute("ltHorz")]
public static  LightHorizontal;
    [DescriptionAttribute("Light upward diagonal")]
[XEnumAttribute("ltUpDiag")]
public static  LightUpwardDiagonal;
    [DescriptionAttribute("Light vertical")]
[XEnumAttribute("ltVert")]
public static  LightVertical;
    [DescriptionAttribute("Narrow horizontal")]
[XEnumAttribute("narHorz")]
public static  NarrowHorizontal;
    [DescriptionAttribute("Narrow vertical")]
[XEnumAttribute("narVert")]
public static  NarrowVertical;
    [DescriptionAttribute("Outlined diamond")]
[XEnumAttribute("openDmnd")]
public static  OutlinedDiamond;
    [DescriptionAttribute("10%")]
[XEnumAttribute("pct10")]
public static  Percent10;
    [DescriptionAttribute("20%")]
[XEnumAttribute("pct20")]
public static  Percent20;
    [DescriptionAttribute("25%")]
[XEnumAttribute("pct25")]
public static  Percent25;
    [DescriptionAttribute("30%")]
[XEnumAttribute("pct30")]
public static  Percent30;
    [DescriptionAttribute("40%")]
[XEnumAttribute("pct40")]
public static  Percent40;
    [DescriptionAttribute("5%")]
[XEnumAttribute("pct5")]
public static  Percent5;
    [DescriptionAttribute("50%")]
[XEnumAttribute("pct50")]
public static  Percent50;
    [DescriptionAttribute("60%")]
[XEnumAttribute("pct60")]
public static  Percent60;
    [DescriptionAttribute("70%")]
[XEnumAttribute("pct70")]
public static  Percent70;
    [DescriptionAttribute("75%")]
[XEnumAttribute("pct75")]
public static  Percent75;
    [DescriptionAttribute("80%")]
[XEnumAttribute("pct80")]
public static  Percent80;
    [DescriptionAttribute("90%")]
[XEnumAttribute("pct90")]
public static  Percent90;
    [DescriptionAttribute("Plaid")]
[XEnumAttribute("plaid")]
public static  Plaid;
    [DescriptionAttribute("Shingle")]
[XEnumAttribute("shingle")]
public static  Shingle;
    [DescriptionAttribute("Small checker board")]
[XEnumAttribute("smCheck")]
public static  SmallCheckerBoard;
    [DescriptionAttribute("Small confetti")]
[XEnumAttribute("smConfetti")]
public static  SmallConfetti;
    [DescriptionAttribute("Small grid")]
[XEnumAttribute("smGrid")]
public static  SmallGrid;
    [DescriptionAttribute("Solid diamond")]
[XEnumAttribute("solidDmnd")]
public static  SolidDiamond;
    [DescriptionAttribute("Sphere")]
[XEnumAttribute("sphere")]
public static  Sphere;
    [DescriptionAttribute("Trellis")]
[XEnumAttribute("trellis")]
public static  Trellis;
    [DescriptionAttribute("Upward diagonal")]
[XEnumAttribute("upDiag")]
public static  UpwardDiagonal;
    [DescriptionAttribute("Vertical")]
[XEnumAttribute("vert")]
public static  Vertical;
    [DescriptionAttribute("Wave")]
[XEnumAttribute("wave")]
public static  Wave;
    [DescriptionAttribute("Wide downward diagonal")]
[XEnumAttribute("wdDnDiag")]
public static  WideDownwardDiagonal;
    [DescriptionAttribute("Wide upward diagonal")]
[XEnumAttribute("wdUpDiag")]
public static  WideUpwardDiagonal;
    [DescriptionAttribute("Weave")]
[XEnumAttribute("weave")]
public static  Weave;
    [DescriptionAttribute("Zig zag")]
[XEnumAttribute("zigZag")]
public static  ZigZag;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : object {
    private DocumentModel ;
    private     ;
    private Stack`1<> ;
    private Stack`1<> ;
    private Stack`1<> ;
    private StringBuilder ;
    private  ​  ;
    private CharacterFormat  ;
    private bool  ;
    private IList`1<Inline>  ;
    private   ;
    private Random  ;
    private Paragraph  ;
    private List`1<Inline>  ;
    private Stack`1<Hyperlink>  ;
    private Stack`1<>  ;
    public (DocumentModel ,  ​  );
    private  ();
    public int ();
    public int ();
    public Paragraph ();
    public Inline (int );
    public Inline ();
    public void (CharacterFormat );
    private bool (CharacterFormat );
    private void ();
    private void (CharacterFormat );
    public void (string );
    public void (char );
    public void (string );
    public bool (Inline , bool );
    private int (string );
    private void (InlineCollection );
    public void  ();
    public void  ();
    public void (Inline );
    public void (Hyperlink );
    public void  ();
    private void  ();
    public void (string , string );
    public void (SpecialCharacterType ,  );
    public void (AlignmentTab );
    public void (Note );
    public void  ();
    private void ( , IList`1<Inline> );
    private void  ();
    public Paragraph ();
    private bool  ();
    private static bool (Field );
    private Paragraph (Field );
    public void  ();
    public void  ();
    public void (InlineCollection );
    public void  ();
    public void (bool , bool , FormFieldData , string );
    private static bool (IList`1<Inline> , String& , Int32& , Int32& );
    private static Field (DocumentModel , IList`1<Inline> ,  , BookmarkStart& );
    private static BookmarkStart (IList`1<Inline> );
    private Field (BookmarkStart& );
    private Field  ();
    public void  ();
    public void  ();
    public void (PreservedInline );
    public void  ();
    public void (Revision );
    public void  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : object {
    public DateAndTime ;
    public short ;
    public  ;
    public List`1<SinglePropertyModifier> ;
    public int ;
    public int ;
    public int ;
    public (CharacterPropertyExceptions );
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Fill;
    public static  Stroke;
    public static  Clip;
}
internal enum  : Enum {
    public int value__;
    [XEnumAttribute("ctr")]
public static  Center;
    [XEnumAttribute("t")]
public static  Top;
    [XEnumAttribute("b")]
public static  Bottom;
    [XEnumAttribute("l")]
public static  Left;
    [XEnumAttribute("r")]
public static  Right;
    [XEnumAttribute("tl")]
public static  TopLeft;
    [XEnumAttribute("tr")]
public static  TopRight;
    [XEnumAttribute("bl")]
public static  BottomLeft;
    [XEnumAttribute("br")]
public static  BottomRight;
}
internal enum  : Enum {
    public int value__;
    public static  Hyphen;
    public static  Period;
    public static  Colon;
    public static  EmDash;
    public static  EnDash;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class  :    {
    [DebuggerBrowsableAttribute("0")]
protected Stream ;
    [DebuggerBrowsableAttribute("0")]
protected Dictionary`2<string, string> ;
    [DebuggerBrowsableAttribute("0")]
protected Dictionary`2<string, string> ;
    [DebuggerBrowsableAttribute("0")]
protected    ;
    [DebuggerBrowsableAttribute("0")]
protected    ;
    [DebuggerBrowsableAttribute("0")]
protected    ;
    [DebuggerBrowsableAttribute("0")]
protected int ;
    [DebuggerBrowsableAttribute("0")]
protected int  ;
    [DebuggerBrowsableAttribute("0")]
protected int  ;
    protected (Stream );
    public sealed virtual void Dispose();
    public virtual void ​ ();
    public    ();
    public void (   );
    public    ();
    public    ();
    public void (   );
    public    ();
    public    ();
    public void (   );
    public    ();
    internal void (string , string );
    internal void (string , string );
    internal int  ();
    internal int  ();
    internal int  ();
    protected void (   );
}
internal enum  : Enum {
    public int value__;
    public static  Normal;
    public static  Oblique;
    public static  Italic;
}
internal enum  : Enum {
    public int value__;
    public static  Left;
    public static  Right;
    public static  Center;
    public static  Justify;
}
internal enum  : Enum {
    public int value__;
    public static  Add;
    public static  Remove;
    public static  Refresh;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Page;
    public static  Column;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  FixedPitch;
    public static  Serif;
    public static  Symbolic;
    public static  Script;
    public static  Nonsymbolic;
    public static  Italic;
    public static  AllCap;
    public static  SmallCap;
    public static  ForceBold;
}
internal enum  : Enum {
    public int value__;
    public static  Size1;
    public static  Size2;
    public static  Size3;
    public static  Size4;
    public static  Size5;
    public static  Size6;
    public static  Size7;
    public static  Size8;
    public static  Size9;
}
internal enum  : Enum {
    public int value__;
    public static  Small;
    public static  Medium;
    public static  Large;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  :   {
    private String[] ;
    public (string );
    public string ();
    protected virtual string  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : object {
    private static String[] ;
    private static String[] ;
    private static String[] ;
    private static String[] ;
    private  ​  ;
    private  ​  ;
    private int ;
    private   ;
    private  ​   ;
    public ( ​  );
    public ( ​  ,  ​  );
    private static ();
    private void ( ​  , ICollection`1< ​ > );
    private void ( ​  , String[] );
    private static String[] ( );
    private void ( ​  ,  ,  );
    private void ( ​  );
    private void ( ​  );
    private void ( ​  );
    private void ( ​  );
    private void ( ​  );
    private void ( ​  );
    private void ( ​  , ICollection`1< ​ > );
    private void ( ​  , ICollection`1< ​ > );
    private void ( ​  ,  );
    public void ();
    private  ​  ();
    private  ​  ();
    private  ​  ();
    private  ​  ();
    private  ​  ();
    private  ​  ();
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  SignaturesExist;
    public static  AppendOnly;
}
internal enum  : Enum {
    public ulong value__;
    public static  None;
    public static  NotSupported;
    public static  HeaderInformation;
    public static  FontTable;
    public static  FileTable;
    public static  ColorTable;
    public static  StyleSheet;
    public static  ListTable;
    public static  ListOverrideTable;
    public static  HeaderTables;
    public static  HeaderArea;
    public static  DocumentFormat;
    public static  SectionFormat;
    public static  HeadersAndFooters;
    public static  PreservedInline;
    public static  ParagraphTextFormat;
    public static  ParagraphBorders;
    public static  ParagraphTabs;
    public static  Borders;
    public static  ParagraphNumberingFormat;
    public static  ParagraphNumberingFontFormat;
    public static  ParagraphNumberingUnderlineStyle;
    public static  ParagraphNumberingCharacterFormat;
    public static  ParagraphNumbering;
    public static  ParagraphLists;
    public static  BulletsAndNumbering;
    public static  ParagraphFormat;
    public static  TableFormat;
    public static  TablePositioning;
    public static  TableFormatOrPositioning;
    public static  TableRowFormat;
    public static  TableCellFormat;
    public static  TableDefinitions;
    public static  FontFormat;
    public static  UnderlineStyle;
    public static  CharacterFormat;
    public static  SpecialCharacter;
    public static  TextSpecialCharacter;
    public static  Pictures;
    public static  Shapes;
    public static  Fields;
    public static  Bookmarks;
    public static  Footnotes;
    public static  Objects;
    public static  Unknown;
    public static  ParagraphOrCharacterFormat;
    public static  SectionOrParagraphFormat;
    public static  DocumentContent;
    public static  DocumentArea;
}
internal enum  : Enum {
    public int value__;
    public static  Character;
    public static  Column;
    public static  Margin;
    public static  Page;
    public static  LeftMargin;
    public static  RightMargin;
    public static  InsideMargin;
    public static  OutsideMargin;
}
internal enum  : Enum {
    public int value__;
    public static  Bottom;
    public static  Middle;
    public static  Top;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Reserved1;
    public static  Reserved2;
    public static  fCryptoAPI;
    public static  fDocProps;
    public static  fExternal;
    public static  fAES;
    public static  fAgile;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Default;
    public static  ReadToMemory;
    public static  CacheDecoded;
}
internal enum  : Enum {
    public int value__;
    public static  Absolute;
    public static  RelativeToBoundingBox;
}
internal enum  : Enum {
    public int value__;
    public static  Auto;
    public static  Point;
    public static  Percent;
}
internal enum  : Enum {
    public int value__;
    public static  SingleLinkage;
    public static  CompleteLinkage;
    public static  AverageLinkage;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    [   ("R")]
public static  Reply;
    public static  Group;
}
internal enum  : Enum {
    public int value__;
    public static  UseNone;
    public static  UseOutlines;
    public static  UseThumbs;
    public static  FullScreen;
    public static  UseOC;
    public static  UseAttachments;
}
internal enum  : Enum {
    public int value__;
    public static  RotateNoneFlipNone;
    public static  Rotate180FlipXY;
    public static  Rotate90FlipNone;
    public static  Rotate270FlipXY;
    public static  Rotate180FlipNone;
    public static  RotateNoneFlipXY;
    public static  Rotate270FlipNone;
    public static  Rotate90FlipXY;
    public static  RotateNoneFlipX;
    public static  Rotate180FlipY;
    public static  Rotate90FlipX;
    public static  Rotate270FlipY;
    public static  RotateNoneFlipY;
    public static  Rotate180FlipX;
    public static  Rotate90FlipY;
    public static  Rotate270FlipX;
}
internal enum  : Enum {
    public int value__;
    public static  CMYK;
    public static  MULTIINK;
}
internal enum  : Enum {
    public int value__;
    public static  ReadOnly;
    public static  Update;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class  : object {
    private static [] ;
    public static Byte[] ;
    public static Byte[] ;
    public static Byte[] ;
    private static ();
    private static void (string ,  );
    private static void (string ,  );
    private static bool (int ,  );
    private static void (    , StringBuilder ,  , bool , bool , bool );
    public static bool (int , byte );
    public static int ( );
    public static void ();
    public static void ();
    public static bool (int );
    public static bool (int );
    public static bool (int );
    public static bool (int );
    public static bool (int );
    public static bool (int );
    public static bool (int );
    public static string (Byte[] , bool );
    public static bool (char );
    public static string (Byte[] , int , int , bool );
    public static void (    , StringBuilder ,  , bool , bool );
    public static bool (Byte[] , Int32& );
    public static void (    , bool , Int32& );
    public static bool (    );
    public static void (    , bool );
    public static void (    , bool );
    public static void (    , bool );
    public static void (    , bool );
    public static void (    , StringBuilder , bool , bool );
    public static string (string ,  , bool );
    public static void (string ,  , bool , StringBuilder );
    public static void (    , StringBuilder , bool );
    public static void (    , char , Predicate`1<char> , StringBuilder , bool , bool , bool );
}
internal enum  : Enum {
    public int value__;
    public static  Bmp;
    public static  Gif;
    public static  Jpeg;
    public static  Png;
    public static  Tiff;
    public static  Wmp;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : object {
    protected ContentRange ;
    private string ;
    private TextWriter ;
    private     ;
    private  ;
    private bool ;
    private    ;
    private   ;
    private List`1<ContentRange>  ;
    private Element  ;
    private      ;
    public (ContentRange , string , TextWriter ,  );
    public IEnumerable`1<ContentRange> ();
    public void ();
    protected bool (Element );
    private bool (Element );
    private void (Element );
    private bool (ElementCollection );
    private void (T , Layout , Action`1<T> );
    private static char (ElementType );
    public virtual void    ​ (DocumentModel );
    private void ();
    private void (Note );
    private void ();
    private void (SectionCollection );
    public virtual void    ​ (Section );
    public virtual void    ​ (HeaderFooter );
    public virtual void    ​ (Paragraph );
    public virtual void    ​ (Table );
    public virtual void    ​ (TableRow );
    public virtual void    ​ (TableCell );
    public virtual void    ​ (PreservedDrawingElement );
    public virtual void    ​ (Shape );
    public sealed virtual void    ​ (Group );
    public virtual void    ​ (TextBox );
    public virtual void    ​ (Picture );
    public virtual void    ​ (BookmarkStart );
    public virtual void    ​ (BookmarkEnd );
    public virtual void    ​ (Field );
    public virtual void    ​ (Hyperlink );
    public virtual void    ​ (Run );
    public virtual void    ​ (SpecialCharacter );
    public virtual void    ​ (PreservedInline );
    public virtual void    ​ (TableOfEntries );
    public virtual void    ​ (Note );
    public sealed virtual void    ​ (BlockContentControl );
    public sealed virtual void    ​ (InlineContentControl );
    public virtual void    ​ (Chart );
    public sealed virtual void    ​ (CommentStart );
    public sealed virtual void    ​ (CommentEnd );
    public sealed virtual void    ​ (Comment );
    public sealed virtual void    ​ (MoveRangeSeparator );
    public sealed virtual void    ​ (AlignmentTab );
    public static string (ContentRange );
    private static bool (Element );
}
internal enum  : Enum {
    public int value__;
    public static  Left;
    public static  Center;
    public static  Right;
    public static  Decimal;
}
internal enum  : Enum {
    public int value__;
    public static  Unknown;
    public static  Grayscale;
    public static  RGB;
    public static  YCbCr;
    public static  CMYK;
    public static  YCCK;
}
internal enum  : Enum {
    public int value__;
    public static  GeneralGraphicsState;
    public static  SpecialGraphicsState;
    public static  PathConstruction;
    public static  PathPainting;
    public static  ClippingPaths;
    public static  TextObjects;
    public static  TextState;
    public static  TextPositioning;
    public static  TextShowing;
    public static  Type3Fonts;
    public static  Color;
    public static  ShadingPatterns;
    public static  InlineImages;
    public static  XObjects;
    public static  MarkedContent;
    public static  Compatibility;
}
internal enum  : Enum {
    public UInt32 value__;
    [DescriptionAttribute("Access All Alternates")]
public static  aalt;
    [DescriptionAttribute("Above-base Forms")]
public static  abvf;
    [DescriptionAttribute("Above-base Mark Positioning")]
public static  abvm;
    [DescriptionAttribute("Above-base Substitutions")]
public static  abvs;
    [DescriptionAttribute("Alternative Fractions")]
public static  afrc;
    [DescriptionAttribute("Akhands")]
public static  akhn;
    [DescriptionAttribute("Below-base Forms")]
public static  blwf;
    [DescriptionAttribute("Below-base Mark Positioning")]
public static  blwm;
    [DescriptionAttribute("Below-base Substitutions")]
public static  blws;
    [DescriptionAttribute("Contextual Alternates")]
public static  calt;
    [DescriptionAttribute("Case-Sensitive Forms")]
public static  case;
    [DescriptionAttribute("Glyph Composition / Decomposition")]
public static  ccmp;
    [DescriptionAttribute("Conjunct Form After Ro")]
public static  cfar;
    [DescriptionAttribute("Conjunct Forms")]
public static  cjct;
    [DescriptionAttribute("Contextual Ligatures")]
public static  clig;
    [DescriptionAttribute("Centered CJK Punctuation")]
public static  cpct;
    [DescriptionAttribute("Capital Spacing")]
public static  cpsp;
    [DescriptionAttribute("Contextual Swash")]
public static  cswh;
    [DescriptionAttribute("Cursive Positioning")]
public static  curs;
    [DescriptionAttribute("Character Variant 1")]
public static  cv01;
    [DescriptionAttribute("Character Variant 99")]
public static  cv99;
    [DescriptionAttribute("Petite Capitals From Capitals")]
public static  c2pc;
    [DescriptionAttribute("Small Capitals From Capitals")]
public static  c2sc;
    [DescriptionAttribute("Distances")]
public static  dist;
    [DescriptionAttribute("Discretionary Ligatures")]
public static  dlig;
    [DescriptionAttribute("Denominators")]
public static  dnom;
    [DescriptionAttribute("Dotless Forms")]
public static  dtls;
    [DescriptionAttribute("Expert Forms")]
public static  expt;
    [DescriptionAttribute("Final Glyph on Line Alternates")]
public static  falt;
    [DescriptionAttribute("Terminal Forms #2")]
public static  fin2;
    [DescriptionAttribute("Terminal Forms #3")]
public static  fin3;
    [DescriptionAttribute("Terminal Forms")]
public static  fina;
    [DescriptionAttribute("Flattened accent forms")]
public static  flac;
    [DescriptionAttribute("Fractions")]
public static  frac;
    [DescriptionAttribute("Full Widths")]
public static  fwid;
    [DescriptionAttribute("Half Forms")]
public static  half;
    [DescriptionAttribute("Halant Forms")]
public static  haln;
    [DescriptionAttribute("Alternate Half Widths")]
public static  halt;
    [DescriptionAttribute("Historical Forms")]
public static  hist;
    [DescriptionAttribute("Horizontal Kana Alternates")]
public static  hkna;
    [DescriptionAttribute("Historical Ligatures")]
public static  hlig;
    [DescriptionAttribute("Hangul")]
[ObsoleteAttribute("DEPRECATED in 2016")]
public static  hngl;
    [DescriptionAttribute("Hojo Kanji Forms (JIS X 0212-1990 Kanji Forms)")]
public static  hojo;
    [DescriptionAttribute("Half Widths")]
public static  hwid;
    [DescriptionAttribute("Initial Forms")]
public static  init;
    [DescriptionAttribute("Isolated Forms")]
public static  isol;
    [DescriptionAttribute("Italics")]
public static  ital;
    [DescriptionAttribute("Justification Alternates")]
public static  jalt;
    [DescriptionAttribute("JIS78 Forms")]
public static  jp78;
    [DescriptionAttribute("JIS83 Forms")]
public static  jp83;
    [DescriptionAttribute("JIS90 Forms")]
public static  jp90;
    [DescriptionAttribute("JIS2004 Forms")]
public static  jp04;
    [DescriptionAttribute("Kerning")]
public static  kern;
    [DescriptionAttribute("Left Bounds")]
public static  lfbd;
    [DescriptionAttribute("Standard Ligatures")]
public static  liga;
    [DescriptionAttribute("Leading Jamo Forms")]
public static  ljmo;
    [DescriptionAttribute("Lining Figures")]
public static  lnum;
    [DescriptionAttribute("Localized Forms")]
public static  locl;
    [DescriptionAttribute("Left-to-right alternates")]
public static  ltra;
    [DescriptionAttribute("Left-to-right mirrored forms")]
public static  ltrm;
    [DescriptionAttribute("Mark Positioning")]
public static  mark;
    [DescriptionAttribute("Medial Forms #2")]
public static  med2;
    [DescriptionAttribute("Medial Forms")]
public static  medi;
    [DescriptionAttribute("Mathematical Greek")]
public static  mgrk;
    [DescriptionAttribute("Mark to Mark Positioning")]
public static  mkmk;
    [DescriptionAttribute("Mark Positioning via Substitution")]
public static  mset;
    [DescriptionAttribute("Alternate Annotation Forms")]
public static  nalt;
    [DescriptionAttribute("NLC Kanji Forms")]
public static  nlck;
    [DescriptionAttribute("Nukta Forms")]
public static  nukt;
    [DescriptionAttribute("Numerators")]
public static  numr;
    [DescriptionAttribute("Oldstyle Figures")]
public static  onum;
    [DescriptionAttribute("Optical Bounds")]
public static  opbd;
    [DescriptionAttribute("Ordinals")]
public static  ordn;
    [DescriptionAttribute("Ornaments")]
public static  ornm;
    [DescriptionAttribute("Proportional Alternate Widths")]
public static  palt;
    [DescriptionAttribute("Petite Capitals")]
public static  pcap;
    [DescriptionAttribute("Proportional Kana")]
public static  pkna;
    [DescriptionAttribute("Proportional Figures")]
public static  pnum;
    [DescriptionAttribute("Pre-Base Forms")]
public static  pref;
    [DescriptionAttribute("Pre-base Substitutions")]
public static  pres;
    [DescriptionAttribute("Post-base Forms")]
public static  pstf;
    [DescriptionAttribute("Post-base Substitutions")]
public static  psts;
    [DescriptionAttribute("Proportional Widths")]
public static  pwid;
    [DescriptionAttribute("Quarter Widths")]
public static  qwid;
    [DescriptionAttribute("Randomize")]
public static  rand;
    [DescriptionAttribute("Required Contextual Alternates")]
public static  rclt;
    [DescriptionAttribute("Rakar Forms")]
public static  rkrf;
    [DescriptionAttribute("Required Ligatures")]
public static  rlig;
    [DescriptionAttribute("Reph Forms")]
public static  rphf;
    [DescriptionAttribute("Right Bounds")]
public static  rtbd;
    [DescriptionAttribute("Right-to-left alternates")]
public static  rtla;
    [DescriptionAttribute("Right-to-left mirrored forms")]
public static  rtlm;
    [DescriptionAttribute("Ruby Notation Forms")]
public static  ruby;
    [DescriptionAttribute("Required Variation Alternates")]
public static  rvrn;
    [DescriptionAttribute("Stylistic Alternates")]
public static  salt;
    [DescriptionAttribute("Scientific Inferiors")]
public static  sinf;
    [DescriptionAttribute("Optical size")]
public static  size;
    [DescriptionAttribute("Small Capitals")]
public static  smcp;
    [DescriptionAttribute("Simplified Forms")]
public static  smpl;
    [DescriptionAttribute("Stylistic Set 1")]
public static  ss01;
    [DescriptionAttribute("Stylistic Set 2")]
public static  ss02;
    [DescriptionAttribute("Stylistic Set 3")]
public static  ss03;
    [DescriptionAttribute("Stylistic Set 4")]
public static  ss04;
    [DescriptionAttribute("Stylistic Set 5")]
public static  ss05;
    [DescriptionAttribute("Stylistic Set 6")]
public static  ss06;
    [DescriptionAttribute("Stylistic Set 7")]
public static  ss07;
    [DescriptionAttribute("Stylistic Set 8")]
public static  ss08;
    [DescriptionAttribute("Stylistic Set 9")]
public static  ss09;
    [DescriptionAttribute("Stylistic Set 10")]
public static  ss10;
    [DescriptionAttribute("Stylistic Set 11")]
public static  ss11;
    [DescriptionAttribute("Stylistic Set 12")]
public static  ss12;
    [DescriptionAttribute("Stylistic Set 13")]
public static  ss13;
    [DescriptionAttribute("Stylistic Set 14")]
public static  ss14;
    [DescriptionAttribute("Stylistic Set 15")]
public static  ss15;
    [DescriptionAttribute("Stylistic Set 16")]
public static  ss16;
    [DescriptionAttribute("Stylistic Set 17")]
public static  ss17;
    [DescriptionAttribute("Stylistic Set 18")]
public static  ss18;
    [DescriptionAttribute("Stylistic Set 19")]
public static  ss19;
    [DescriptionAttribute("Stylistic Set 20")]
public static  ss20;
    [DescriptionAttribute("Math script style alternates")]
public static  ssty;
    [DescriptionAttribute("Stretching Glyph Decomposition")]
public static  stch;
    [DescriptionAttribute("Subscript")]
public static  subs;
    [DescriptionAttribute("Superscript")]
public static  sups;
    [DescriptionAttribute("Swash")]
public static  swsh;
    [DescriptionAttribute("Titling")]
public static  titl;
    [DescriptionAttribute("Trailing Jamo Forms")]
public static  tjmo;
    [DescriptionAttribute("Traditional Name Forms")]
public static  tnam;
    [DescriptionAttribute("Tabular Figures")]
public static  tnum;
    [DescriptionAttribute("Traditional Forms")]
public static  trad;
    [DescriptionAttribute("Third Widths")]
public static  twid;
    [DescriptionAttribute("Unicase")]
public static  unic;
    [DescriptionAttribute("Alternate Vertical Metrics")]
public static  valt;
    [DescriptionAttribute("Vattu Variants")]
public static  vatu;
    [DescriptionAttribute("Vertical Writing")]
public static  vert;
    [DescriptionAttribute("Alternate Vertical Half Metrics")]
public static  vhal;
    [DescriptionAttribute("Vowel Jamo Forms")]
public static  vjmo;
    [DescriptionAttribute("Vertical Kana Alternates")]
public static  vkna;
    [DescriptionAttribute("Vertical Kerning")]
public static  vkrn;
    [DescriptionAttribute("Proportional Alternate Vertical Metrics")]
public static  vpal;
    [DescriptionAttribute("Vertical Alternates and Rotation")]
public static  vrt2;
    [DescriptionAttribute("Vertical Alternates for Rotation")]
public static  vrtr;
    [DescriptionAttribute("Slashed Zero")]
public static  zero;
}
internal enum  : Enum {
    public int value__;
    public static  CENTERED;
    public static  COSITED;
}
internal enum  : Enum {
    public int value__;
    public static  JCS_UNKNOWN;
    public static  JCS_GRAYSCALE;
    public static  JCS_RGB;
    public static  JCS_YCbCr;
    public static  JCS_CMYK;
    public static  JCS_YCCK;
    public static  JCS_BG_RGB;
    public static  JCS_BG_YCC;
    public static  JCS_NCHANNEL;
}
internal enum  : Enum {
    public byte value__;
    public static  Defined;
    public static  Undefined;
    public static  Invalid;
}
internal enum  : Enum {
    public int value__;
    public static  Pkcs1;
    public static  Pss;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : ​   {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
internal [] ;
    [DebuggerBrowsableAttribute("0")]
internal List`1<ushort> ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    internal static ​   ();
    public virtual UInt32 ​  ​ ();
    protected virtual bool ​  ​ ();
    [IteratorStateMachineAttribute("/")]
public virtual IEnumerable`1<UInt32> ​  ​ ();
    public     ();
    internal virtual void ​  ​ (​​  , UInt32 );
    internal virtual UInt32 ​  ​ (​​  , Nullable`1& );
    internal UInt32 (Array , Stream , ​​  , Nullable`1& );
    internal virtual ​   ​  ​ (ICollection`1<ushort> );
    internal virtual void ​  ​ (​   , ICollection`1<ushort> );
}
internal enum  : Enum {
    public int value__;
    public static  NONE;
    public static  INCH;
    public static  CENTIMETER;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​ : object {
    [DebuggerBrowsableAttribute("0")]
private ​ ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    protected ​(​ );
    protected ​ ();
    protected void ();
    internal   ();
    internal void (  );
    internal int (​ );
    public int (object );
    public static bool op_Equality(​ , ​ );
    public static bool op_Inequality(​ , ​ );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public string ();
    public long ();
    public bool ();
    public bool ();
    public bool  ();
    public DateTime  ();
    public void (DateTime );
    public DateTime  ();
    public void (DateTime );
    public Guid  ();
    public void (Guid );
    private sealed virtual override int ​​ (​ );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​​ : ​​ {
    private  ;
    private  ;
    public  ();
    private void ( );
    public  ();
    protected void ( );
    protected sealed virtual  ​ ​​​ ();
    protected sealed virtual void ​​​ ( ​ );
    protected sealed virtual  ​ ​​​ ();
    protected sealed virtual void ​​​ ( ​ );
    protected sealed virtual void ​​​ ( ​ ,  ​ );
    public abstract virtual void ( ​ ,  );
}
internal class  : object {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerHiddenAttribute]
public ( ,  );
    public  ();
    public  ();
    [DebuggerHiddenAttribute]
public virtual bool Equals(object );
    [DebuggerHiddenAttribute]
public virtual int GetHashCode();
    [DebuggerHiddenAttribute]
public virtual string ToString();
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Single;
    public static  Double;
    public static  Triple;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    [   ("N")]
public static  None;
    [   ("I")]
public static  Invert;
    [   ("O")]
public static  Outline;
    [   ("P")]
public static  Push;
    [   ("T")]
public static  Toggle;
}
internal enum  : Enum {
    public int value__;
    public static  Screen;
    public static  Printer;
}
internal enum  : Enum {
    public int value__;
    public static  Jpeg;
    public static  Png;
    public static  Tiff;
    public static  Gif;
    public static  Emf;
    public static  Wmf;
    public static  Bmp;
    public static  Exif;
    public static  Ico;
    public static  Svg;
}
internal enum  : Enum {
    public int value__;
    public static  MSB2LSB;
    public static  LSB2MSB;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : object {
    private  ;
    private bool ;
    private    ;
    private Byte[][] ;
    private int ;
    private UInt16[][] ;
    private bool ;
    private Int16[]  ;
    private bool  ;
    private Int32[]  ;
    public (   );
    public virtual void   ​ (bool );
    public virtual void   ​ (Byte[][] , int , Byte[][] , int , int );
    public virtual void   ​ ();
    public virtual void   ​ ();
    private void (Byte[][] , int , int );
    private void (Byte[][] , int , Byte[][] , int , int );
    private void (Byte[][] , int , Byte[][] , int , int );
    private void ();
    private void ([] , int , int );
    private void (int );
    private int ([] , int , int );
    private static int ([] , int );
    private static int ([] , int );
    private void ([] , int );
    private void ();
    private int (int , int , int , Byte[] );
    private void (int , int , int , int , Byte[] , Byte[] );
    private void (int , int , int );
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Edge1;
    public static  Edge2;
    public static  Edge3;
}
internal enum  : Enum {
    public int value__;
    public static  RC4;
    public static  AES;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : object {
    private double ;
    private bool ;
    private  ;
    private ​   ;
    private     ;
    private ushort ;
    private Action`1<Stream> ;
    private Action`3<Stream, bool, ICollection`1<int>>  ;
    private string  ;
    private   ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    private string  ;
    private Nullable`1<   >  ;
    private Nullable`1<   >  ;
    private Nullable`1<int>  ;
    private Nullable`1<int>  ;
    private Nullable`1<int>  ;
    private Nullable`1<int>  ;
    private Nullable`1<int>  ;
    private Nullable`1<int>  ;
    private int  ;
    public ( , bool , ​   , int ,     , ushort , Action`1<Stream> , Action`3<Stream, bool, ICollection`1<int>>  , string  ,   , int  , int  , int  , int  , int  , int  , int  , int  , int  , string  , Nullable`1<   >  , Nullable`1<   >  , Nullable`1<int>  , Nullable`1<int>  , Nullable`1<int>  , Nullable`1<int>  , Nullable`1<int>  , Nullable`1<int>  , int  );
    public double ();
    public bool ();
    public  ();
    public ​   ();
    public     ();
    public ushort ();
    public string ();
    public   ();
    public int  ();
    public int  ();
    public int  ();
    public int  ();
    public int  ();
    public int  ();
    public int  ();
    public int  ();
    public int  ();
    public string  ();
    public Nullable`1<   >  ();
    public Nullable`1<   >  ();
    public Nullable`1<int>  ();
    public Nullable`1<int>  ();
    public Nullable`1<int>  ();
    public Nullable`1<int>  ();
    public Nullable`1<int>  ();
    public Nullable`1<int>  ();
    public int  ();
    public void (Stream );
    public void (Stream , bool , ICollection`1<int> );
    internal int (double );
}
internal enum  : Enum {
    public int value__;
    public static  MINISWHITE;
    public static  MINISBLACK;
    public static  RGB;
    public static  PALETTE;
    public static  MASK;
    public static  SEPARATED;
    public static  YCBCR;
    public static  CIELAB;
    public static  ICCLAB;
    public static  ITULAB;
    public static  LOGL;
    public static  LOGLUV;
}
internal enum  : Enum {
    public int value__;
    public static  Left;
    public static  Center;
    public static  Right;
    public static  Justify;
}
internal enum  : Enum {
    public int value__;
    public static  Unknown;
    public static  Button;
    public static  CheckBox;
    public static  RadioButton;
    public static  Text;
    public static  ListBox;
    public static  Dropdown;
    public static  Signature;
}
internal enum  : Enum {
    public int value__;
    [XEnumAttribute("none")]
public static  None;
    [XEnumAttribute("sng")]
public static  Single;
    [XEnumAttribute("dbl")]
public static  Double;
    [XEnumAttribute("heavy")]
public static  Heavy;
    [XEnumAttribute("dotted")]
public static  Dotted;
    [XEnumAttribute("dottedHeavy")]
public static  DottedHeavy;
    [XEnumAttribute("dash")]
public static  Dash;
    [XEnumAttribute("dashHeavy")]
public static  DashHeavy;
    [XEnumAttribute("dashLong")]
public static  DashLong;
    [XEnumAttribute("dashLongHeavy")]
public static  DashLongHeavy;
    [XEnumAttribute("dotDash")]
public static  DotDash;
    [XEnumAttribute("dotDashHeavy")]
public static  DotDashHeavy;
    [XEnumAttribute("dotDotDash")]
public static  DotDotDash;
    [XEnumAttribute("dotDotDashHeavy")]
public static  DotDotDashHeavy;
    [XEnumAttribute("wavy")]
public static  Wavy;
    [XEnumAttribute("wavyHeavy")]
public static  WavyHeavy;
    [XEnumAttribute("wavyDbl")]
public static  WavyDouble;
    [XEnumAttribute("words")]
public static  Words;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  HintEastAsia;
    public static  EastAsiaLangZH;
    public static  EastAsianCharSetIsBig5OrGB2312;
    public static  ComplexScript;
    public static  RightToLeft;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  :  ​ {
    private XmlElement ;
    private XmlElement ;
    private XmlElement ;
    private StyleSheet ;
    private List`1<short> ;
    private BorderCode ;
    private BorderCode ;
    private BorderCode  ;
    private BorderCode  ;
    private BorderCode  ;
    private BorderCode  ;
    public (XmlWriter , StyleSheet , List`1<short> );
    public sealed virtual void   ​ (TablePropertyExceptions );
    private static string (int );
    private static string (int );
}
internal enum  : Enum {
    public int value__;
    public static  Default;
    public static  WPF;
    public static  WPFDisplay;
    public static  HarfBuzz;
}
internal enum  : Enum {
    public int value__;
    [XEnumAttribute("noFill")]
public static  None;
    [XEnumAttribute("solidFill")]
public static  Solid;
    [XEnumAttribute("gradFill")]
public static  Gradient;
    [XEnumAttribute("blipFill")]
public static  Picture;
    [XEnumAttribute("pattFill")]
public static  Pattern;
    [XEnumAttribute("grpFill")]
public static  Group;
}
internal enum  : Enum {
    public int value__;
    public static  Default;
    public static  Empty;
    public static  SolidColor;
    public static  Preserved;
    public static  GroupFill;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  :    {
    public ( ​ ,    );
    public sealed virtual void   ​ (StringTable );
    private static string (byte );
}
internal enum  : Enum {
    public int value__;
    public static  Butt;
    public static  Round;
    public static  Square;
}
internal enum  : Enum {
    public int value__;
    public static  XY;
    public static  Polar;
}
internal enum  : Enum {
    public int value__;
    public static  Plain;
    public static  Standard;
}
internal enum  : Enum {
    public int value__;
    public static  Zero;
    public static  Gap;
    public static  Span;
}
internal enum  : Enum {
    public int value__;
    public static  TimesNewRoman;
    [   ("TimesNewRoman,Bold")]
public static  TimesNewRomanBold;
    [   ("TimesNewRoman,Italic")]
public static  TimesNewRomanItalic;
    [   ("TimesNewRoman,BoldItalic")]
public static  TimesNewRomanBoldItalic;
    public static  Arial;
    [   ("Arial,Bold")]
public static  ArialBold;
    [   ("Arial,Italic")]
public static  ArialItalic;
    [   ("Arial,BoldItalic")]
public static  ArialBoldItalic;
    public static  CourierNew;
    [   ("CourierNew,Bold")]
public static  CourierNewBold;
    [   ("CourierNew,Italic")]
public static  CourierNewItalic;
    [   ("CourierNew,BoldItalic")]
public static  CourierNewBoldItalic;
}
internal enum  : Enum {
    public int value__;
    [XEnumAttribute("solid")]
public static  Solid;
    [XEnumAttribute("dot")]
public static  Dot;
    [XEnumAttribute("dash")]
public static  Dash;
    [XEnumAttribute("dashDot")]
public static  DashDot;
    [XEnumAttribute("lgDash")]
public static  LongDash;
    [XEnumAttribute("lgDashDot")]
public static  LongDashDot;
    [XEnumAttribute("lgDashDotDot")]
public static  LongDashDotDot;
    [XEnumAttribute("sysDot")]
public static  RoundDot;
    [XEnumAttribute("sysDash")]
public static  SquareDot;
    [XEnumAttribute("sysDashDot")]
public static  SystemDashDot;
    [XEnumAttribute("sysDashDotDot")]
public static  SystemDashDotDot;
    [XEnumAttribute("")]
public static  Custom;
}
internal class  : object {
    private double ;
    private double ;
    private double ;
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    [NullableContextAttribute("1")]
public static  (string );
    public BorderStyle (double , MultipleBorderTypes );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : object {
    private List`1<BitArray> ;
    private int ;
    public (int );
    public (Byte[] ,  );
    public List`1<BitArray> ();
    public void (List`1<BitArray> );
    private static void (Stream , Stream );
    public Byte[] ( );
    public int ();
    private void (int );
    private static int (int );
}
internal enum  : Enum {
    public int value__;
    public static  Unknown;
    public static  SHA1;
    public static  SHA256;
    public static  SHA384;
    public static  SHA512;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    public static  DocMDP;
    public static  FieldMDP;
    public static  UR;
    public static  UR3;
    public static  Identity;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  ControlWord;
    public static  ControlSymbol;
    public static  IgnorableDestination;
    public static  Text;
    public static  BinaryData;
    public static  Eof;
    public static  GroupStart;
    public static  GroupEnd;
    public static  Separator;
}
internal enum  : Enum {
    public int value__;
    public static  Both;
    public static  Left;
    public static  Right;
    public static  Largest;
}
internal enum  : Enum {
    public int value__;
    public static  Inside;
    public static  Outside;
    public static  OnEdge;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    [   ("GoTo")]
public static  GoToPageView;
    [   ("Launch")]
public static  OpenFile;
    [   ("Thread")]
public static  ReadArticle;
    [   ("URI")]
public static  OpenWebLink;
    [   ("Sound")]
public static  PlaySound;
    [   ("Hide")]
public static  ShowHideField;
    [   ("Named")]
public static  ExecuteMenuItem;
    public static  SubmitForm;
    public static  ResetForm;
    [   ("ImportData")]
public static  ImportFormData;
    [   ("SetOCGState")]
public static  SetLayerVisibility;
    public static  GoTo3DView;
    [   ("JavaScript")]
public static  RunJavaScript;
    [   ("RichMediaExecute")]
public static  MultimediaOperation;
}
internal enum  : Enum {
    public int value__;
    public static  Null;
    public static  Boolean;
    public static  Number;
    public static  Name;
    public static  String;
    public static  Array;
    public static  Dictionary;
    public static  Stream;
    public static  Various;
    public static  NullOrVarious;
}
internal enum  : Enum {
    public int value__;
    public static  Installable;
    public static  InstallableButNoSubsetting;
    public static  InstallableButWithBitmapsOnly;
    public static  InstallableButNoSubsettingAndWithBitmapsOnly;
    public static  RestrictedLicense;
    public static  PreviewAndPrint;
    public static  PreviewAndPrintButNoSubsetting;
    public static  PreviewAndPrintButWithBitmapsOnly;
    public static  PreviewAndPrintButNoSubsettingAndWithBitmapsOnly;
    public static  Editable;
    public static  EditableButNoSubsetting;
    public static  EditableButWithBitmapsOnly;
    public static  EditableButNoSubsettingAndWithBitmapsOnly;
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class  : ​​<  ,   ,   > {
    private  ​ ;
    private double ;
    private double ;
    private int ;
    private bool ;
    private int ;
    private bool ;
    private bool  ;
    private bool  ;
    private double  ;
    private double  ;
    private   ;
    private bool  ;
    private bool  ;
    private double  ;
    private int  ;
    private bool  ;
    private bool  ;
    private bool  ;
    private double  ;
    private int  ;
    private double  ;
    private bool  ;
    private bool  ;
    private     ;
    private     ;
    private     ;
    private  ​  ;
    private double  ;
    private double  ;
    private double  ;
    private double  ;
    private  ​  ;
    private  ​  ;
    private  ​  ;
    private bool  ;
    private bool  ;
    private double  ;
    private IDictionary`2<  ,   >  ;
    private List`1<  >  ;
    private IList`1<  >  ;
    private  ​  ;
    private bool  ;
    private double  ;
    private bool  ;
    private bool  ;
    private double  ;
    private double  ;
    private double  ;
    private bool ​;
    private bool ​;
    private bool ​;
    private bool ​;
    private bool ​;
    private bool ​;
    private    ​;
    private int  ;
    private bool  ;
    private     ;
    private     ;
    private int  ;
    private     ;
    private      ;
    private double  ;
    private double  ;
    private  ​  ;
    private      ;
    private bool  ;
    private double  ;
    private double  ;
    private double  ;
    private  ​ ();
    private void ( ​ );
    public virtual    ​​​ ();
    protected virtual void ​​​ (   );
    protected virtual void ​​​ (   ,    );
    public virtual void ​​​ (    );
    internal string ( ​ );
    private string  ();
    private  ( ​ );
    private static bool ( ​ );
    private bool ( ​ );
    internal bool (   );
    private static bool ( ​ );
    private static bool (   );
    private static bool (   );
    private double (double ,  , Boolean& );
    private double (double , Boolean& );
    private void ( ​& ,  ​& , Int32& , Int32& , Double& , Double& , Double& , Double&  , Double&  , Double&  , Double&  , Boolean&  ,   &  ,   &  );
    private void ( ​ ,  ​ , int , int , double , double , double , double  , double  , double  , double  , bool  ,     ,     );
    private bool  ();
    private bool (Nullable`1& );
    private bool (double , double , Nullable`1<  > );
    private     ();
    private double  ();
    private double ( ​ );
    private double ( ​ );
    private     ( ​ , double );
    private void (    );
    private void (    ,    );
    private void (    ,    );
    private void (    ,    );
    private void (    );
    private void (    ,    , int );
    private List`1<> (   );
    private static List`1<> (List`1<> , bool );
    private static Nullable`1<> (List`1<> , int , bool , [] );
    private static   ( ​ );
    private double (double , Double& );
    private    (   );
    private double  ();
    private double  ();
    private bool  ();
    internal void (    ,    );
    internal void (    ,  ​ );
    internal void (    ,  ​ );
    internal void (    ,  ​ );
    internal void (    ,  ​ );
    private void (    );
    private void (    );
    private void (    );
    private void (    ,    );
    private double (    , double ,  ​ );
    private     ( ​ );
    private     ();
    private bool  ();
    private void (    );
    private void (    );
    internal void (    ,    );
    private void (    , string );
    private void (    ,     ,     , double );
    private bool (double );
    private void (    ,     , double );
    private void (    , double , double ,    );
    private void (    , double , double );
    internal static void (    ,    ,    );
    private void (    , double );
    private double  ();
    private double (double , double , Nullable`1<bool> ,     );
    private      ();
    private void ();
    private void ( ​ );
    private bool ( ​ ,    );
    private double  ();
    private double  ();
    public virtual void ( ​ ,    );
    private void (bool ,  ​ );
    private  (   ,  ​& , Boolean& , Boolean& );
    private  ( ​ ,    , Boolean& ,  ​ , int );
    [IteratorStateMachineAttribute("/")]
private static IEnumerable`1< ​> ( ​ ,    );
    private static bool ( ​ );
    private void (bool );
    private double  ();
    private void (double );
    internal  ( ​ );
    internal  (   );
    private  (   );
    private   ();
    private bool ( ​ );
    private bool  ( ​ );
    internal  ( ​ );
    internal  ( ​ );
    private  (string );
    private bool  ();
    public bool  ();
    public bool  ();
    private  (double , bool );
    private     ();
    private void  (    );
    private void  (    );
    internal double (   );
    internal double ( ​ );
    internal double (   );
    private double (string );
    private bool  ();
    private void  (    );
    internal  ( ​ );
    private   ();
    private   ();
    private   ();
    private   ();
    internal  (   );
    private bool (   ,    );
    private void ();
    private void ();
    private bool  ();
    private void (bool );
    private  ​ ();
    private double  ();
    private bool  ();
    private double  ();
    private void (  & ,   & );
    private void ();
    private    (bool ,   & );
    [NullableContextAttribute("2")]
private    (double );
    private  ​  ();
    private      ();
    private  ​  ();
    private     ( ​ );
    private bool  ();
    private static bool ( ​ );
    private bool (Nullable`1& , bool );
    private void (    , double , bool );
    private     (bool , Boolean& , Double& );
    private void ();
    private void (    , double );
    private     ();
    private double  ();
    private double  ();
    private void (   , & );
}
internal enum  : Enum {
    public int value__;
    public static  JBUF_PASS_THRU;
    public static  JBUF_SAVE_SOURCE;
    public static  JBUF_CRANK_DEST;
    public static  JBUF_SAVE_AND_PASS;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    [   ("Check")]
public static  Checkmark;
    [   ("Checkmark")]
public static  InsertTextCheckmark;
    public static  Circle;
    public static  Comment;
    public static  Cross;
    public static  CrossHairs;
    public static  Help;
    [   ("Insert")]
public static  InsertText;
    public static  Key;
    public static  NewParagraph;
    [   ("Note")]
public static  TextNote;
    public static  Paragraph;
    public static  RightArrow;
    public static  RightPointer;
    public static  Star;
    public static  UpArrow;
    public static  UpLeftArrow;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    [   ("S")]
public static  String;
    [   ("D")]
public static  Date;
    [   ("N")]
public static  Number;
    [   ("F")]
public static  Name;
    [   ("Desc")]
public static  Description;
    [   ("ModDate")]
public static  ModificationDate;
    public static  CreationDate;
    public static  Size;
    public static  CompressedSize;
    [   ("AFRelationship")]
public static  AssociatedRelationship;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Normal;
    public static  Lighten;
    public static  LightenLess;
    public static  Darken;
    public static  DarkenLess;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  :    {
    private int ;
    public ( ,  , string );
    public virtual bool   ​ ();
    public virtual bool   ​ ();
    public virtual bool   ​ ();
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    private bool (short );
    private bool (Byte[] , int , int , short );
    private bool (Byte[] , int , int , short );
    private bool (Byte[] , int , int , short );
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Intersection;
    public static  Union;
    public static  Difference;
    public static  Xor;
}
internal enum  : Enum {
    public int value__;
    public static  Ascii;
    public static  Latin;
    public static  Default;
    public static  Custom;
}
[DefaultMemberAttribute(" ")]
[DebuggerTypeProxyAttribute("GemBox.Pdf.Objects.PdfDictionaryDebugView")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : ​   {
    [DebuggerBrowsableAttribute("0")]
internal static  ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static  ;
    [DebuggerBrowsableAttribute("0")]
private Int32[] ;
    [DebuggerBrowsableAttribute("0")]
private [] ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private    ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public ​     { get; }
    public int Count { get; }
    public ​   Item { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal ​     { get; internal set; }
    private (int );
    private static ();
    private static  ();
    public static  ();
    internal static  (int );
    public static  (int );
    public static  (IEnumerable`1<​  > );
    public static  (​  [] );
    public virtual  ​  ​ ();
    [NullableContextAttribute("2")]
public ​   ();
    internal ​   ();
    internal ​   ();
    internal bool ();
    public sealed virtual int get_Count();
    private protected virtual int ​  ​ ();
    internal ​    ();
    internal void (​   );
    private ​    ();
    private ​    ();
    public   ();
    public    ();
    public sealed virtual ​   get_Item(​   );
    public sealed virtual void set_Item(​   , ​   );
    private void (int );
    private void ();
    private void (int , bool );
    private int (​   );
    private int (​   , Int32& , Int32& );
    private bool (​   , ​   ,  , int );
    private void (int , ​   , ​   );
    private protected virtual IEnumerator`1<​  > ​  ​ (bool );
    public  (Func`2<​  , ​  > );
    internal  (Func`2<​  , ​  > , Func`2<​  , bool> );
    public  (bool );
    private protected virtual ​   ​  ​ (Func`2<​  , ​  > );
    private protected virtual void ​  ​ (​   );
    public sealed virtual bool TryGetValue(​   , ​  & );
    internal void (​   );
    public sealed virtual void Add(​   , ​   );
    public sealed virtual bool Remove(​   );
    private void (& , int , int , int );
    public sealed virtual void Clear();
    public sealed virtual bool ContainsKey(​   );
    private bool (​   );
    internal void (T[] , int , Func`3<​  , ​  , T> );
    public   ();
    public virtual string ToString();
    private protected virtual void ​  ​ (Array , int );
    private protected virtual IEnumerator ​  ​ ();
    internal Nullable`1<bool> (​   , ​   , bool );
    internal Nullable`1<int> (​   , IEnumerable`1<​  > , bool );
    internal ​   (​   );
    internal void (​   , ​   );
    internal ​   (​   );
    internal virtual ​   ​  ​ (​   );
    internal void (IEnumerable`1<​  > );
    private protected virtual int ​  ​ (Predicate`1<​  > );
    internal virtual int ​  ​ (Func`2<​  , ​  > , bool );
    internal void ( );
    private sealed virtual override bool ​  ();
    private sealed virtual override ICollection`1<​  > ​  ();
    private sealed virtual override ICollection`1<​  > ​  ();
    private sealed virtual override ICollection ​  ();
    private sealed virtual override ICollection ​  ();
    private sealed virtual override object ​ (object );
    private sealed virtual override void ​ (object , object );
    private sealed virtual override IEnumerator`1<​  > ​  ();
    private sealed virtual override void ​ (KeyValuePair`2<​  , ​  > );
    private sealed virtual override bool ​ (KeyValuePair`2<​  , ​  > );
    private sealed virtual override bool ​ (KeyValuePair`2<​  , ​  > );
    private sealed virtual override void ​ (KeyValuePair`2[] , int );
    private sealed virtual override IEnumerator`1<KeyValuePair`2<​  , ​  >> ​  ();
    private sealed virtual override void ​ (object , object );
    private sealed virtual override void ​ (object );
    private sealed virtual override bool ​ (object );
    private sealed virtual override IDictionaryEnumerator ​  ();
    private sealed virtual override IEnumerable`1<​  > ​  ();
    private sealed virtual override IEnumerable`1<​  > ​  ();
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Continue;
    public static  Restart;
}
internal enum  : Enum {
    public int value__;
    public static  LeftToRight;
    public static  TopToBottom;
    public static  BottomToTop;
    public static  TopToBottomEastAsian;
    public static  TopToBottomEastAsianLeft;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class  : object {
    public static bool ;
    private static  ;
    private static ();
    public static  ();
    public static void ( );
    private static void (string ,  );
    public static void (string , Object[] );
    public static void (string , Object[] );
    public static void (string , Object[] );
    public static void (string , Object[] );
    public static void (string , Object[] );
    public static void (string , Object[] );
}
internal enum  : Enum {
    public int value__;
    public static  NonzeroWindingNumber;
    public static  EvenOdd;
}
internal enum  : Enum {
    public byte value__;
    [ ​ ("None")]
public static  n;
    [ ​ ("Open")]
public static  o;
    [ ​ ("Close")]
public static  c;
}
internal enum  : Enum {
    public int value__;
    public static  Literal;
    public static  Unary;
    public static  Binary;
    public static  Group;
    public static  Array;
    public static  Function;
    public static  Reference;
    public static  TwoDimensionalArray;
    public static  Range;
    public static  Intersection;
}
internal enum  : Enum {
    public int value__;
    public static  JMSG_NOMESSAGE;
    public static  JERR_BAD_BUFFER_MODE;
    public static  JERR_BAD_COMPONENT_ID;
    public static  JERR_BAD_CROP_SPEC;
    public static  JERR_BAD_DCT_COEF;
    public static  JERR_BAD_DCTSIZE;
    public static  JERR_BAD_DROP_SAMPLING;
    public static  JERR_BAD_HUFF_TABLE;
    public static  JERR_BAD_IN_COLORSPACE;
    public static  JERR_BAD_J_COLORSPACE;
    public static  JERR_BAD_LENGTH;
    public static  JERR_BAD_MCU_SIZE;
    public static  JERR_BAD_PRECISION;
    public static  JERR_BAD_PROGRESSION;
    public static  JERR_BAD_PROG_SCRIPT;
    public static  JERR_BAD_SAMPLING;
    public static  JERR_BAD_SCAN_SCRIPT;
    public static  JERR_BAD_STATE;
    public static  JERR_BAD_VIRTUAL_ACCESS;
    public static  JERR_BUFFER_SIZE;
    public static  JERR_CANT_SUSPEND;
    public static  JERR_CCIR601_NOTIMPL;
    public static  JERR_COMPONENT_COUNT;
    public static  JERR_CONVERSION_NOTIMPL;
    public static  JERR_DAC_INDEX;
    public static  JERR_DAC_VALUE;
    public static  JERR_DHT_INDEX;
    public static  JERR_DQT_INDEX;
    public static  JERR_EMPTY_IMAGE;
    public static  JERR_EOI_EXPECTED;
    public static  JERR_FILE_WRITE;
    public static  JERR_FRACT_SAMPLE_NOTIMPL;
    public static  JERR_HUFF_CLEN_OVERFLOW;
    public static  JERR_HUFF_MISSING_CODE;
    public static  JERR_IMAGE_TOO_BIG;
    public static  JERR_INPUT_EMPTY;
    public static  JERR_INPUT_EOF;
    public static  JERR_MISMATCHED_QUANT_TABLE;
    public static  JERR_MISSING_DATA;
    public static  JERR_MODE_CHANGE;
    public static  JERR_NOTIMPL;
    public static  JERR_NOT_COMPILED;
    public static  JERR_NO_ARITH_TABLE;
    public static  JERR_NO_HUFF_TABLE;
    public static  JERR_NO_IMAGE;
    public static  JERR_NO_QUANT_TABLE;
    public static  JERR_NO_SOI;
    public static  JERR_OUT_OF_MEMORY;
    public static  JERR_QUANT_COMPONENTS;
    public static  JERR_QUANT_FEW_COLORS;
    public static  JERR_QUANT_MANY_COLORS;
    public static  JERR_SOF_BEFORE;
    public static  JERR_SOF_DUPLICATE;
    public static  JERR_SOF_NO_SOS;
    public static  JERR_SOF_UNSUPPORTED;
    public static  JERR_SOI_DUPLICATE;
    public static  JERR_SOS_NO_SOF;
    public static  JERR_TOO_LITTLE_DATA;
    public static  JERR_UNKNOWN_MARKER;
    public static  JERR_WIDTH_OVERFLOW;
    public static  JTRC_16BIT_TABLES;
    public static  JTRC_ADOBE;
    public static  JTRC_APP0;
    public static  JTRC_APP14;
    public static  JTRC_DAC;
    public static  JTRC_DHT;
    public static  JTRC_DQT;
    public static  JTRC_DRI;
    public static  JTRC_EOI;
    public static  JTRC_HUFFBITS;
    public static  JTRC_JFIF;
    public static  JTRC_JFIF_BADTHUMBNAILSIZE;
    public static  JTRC_JFIF_EXTENSION;
    public static  JTRC_JFIF_THUMBNAIL;
    public static  JTRC_MISC_MARKER;
    public static  JTRC_PARMLESS_MARKER;
    public static  JTRC_QUANTVALS;
    public static  JTRC_QUANT_3_NCOLORS;
    public static  JTRC_QUANT_NCOLORS;
    public static  JTRC_QUANT_SELECTED;
    public static  JTRC_RECOVERY_ACTION;
    public static  JTRC_RST;
    public static  JTRC_SMOOTH_NOTIMPL;
    public static  JTRC_SOF;
    public static  JTRC_SOF_COMPONENT;
    public static  JTRC_SOI;
    public static  JTRC_SOS;
    public static  JTRC_SOS_COMPONENT;
    public static  JTRC_SOS_PARAMS;
    public static  JTRC_THUMB_JPEG;
    public static  JTRC_THUMB_PALETTE;
    public static  JTRC_THUMB_RGB;
    public static  JTRC_UNKNOWN_IDS;
    public static  JWRN_ADOBE_XFORM;
    public static  JWRN_ARITH_BAD_CODE;
    public static  JWRN_BOGUS_PROGRESSION;
    public static  JWRN_EXTRANEOUS_DATA;
    public static  JWRN_HIT_MARKER;
    public static  JWRN_HUFF_BAD_CODE;
    public static  JWRN_JFIF_MAJOR;
    public static  JWRN_JPEG_EOF;
    public static  JWRN_MUST_RESYNC;
    public static  JWRN_NOT_SEQUENTIAL;
    public static  JWRN_TOO_MUCH_DATA;
    public static  JMSG_UNKNOWNMSGCODE;
    public static  JMSG_LASTMSGCODE;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Opacity;
    public static  Fill;
    public static  Stroke;
    public static  Text;
    public static  DeviceIndependent;
    public static  DeviceDependent;
    public static  Device;
    public static  All;
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class  :    <> {
    private static <ushort> ;
    private static <UInt32> ;
    private  ;
    private static ();
    public  ();
    public void ( );
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
    public static  ();
    public virtual     ​ ();
}
internal enum  : Enum {
    public int value__;
    public static  Default;
    public static  WPF;
    public static  WPFDisplay;
    public static  HarfBuzz;
}
internal enum  : Enum {
    public int value__;
    public static  NONE;
    public static  STRIPS;
    public static  CURVES;
    public static  COLORMAP;
    public static  JPEGQTABLES;
    public static  JPEGACTABLES;
    public static  JPEGDCTABLES;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​ : ​ {
    internal ​(​ ,   );
    public void (Byte[] );
    public void (Byte[] , long );
    internal void (Byte[] , long , int , int );
    public void (Byte[] );
    public Byte[] ();
    public int (Byte[] , long , int );
    internal int (Byte[] , long , int , int );
    public void (Stream );
    public void (long );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​​ : object {
    private  ​ ;
    private protected abstract virtual  ​ ​​​ ();
    public  ​ ();
    public  ​ ();
    public void ( ​ );
    public T ();
}
internal class  : object {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerHiddenAttribute]
public ( ,  );
    public  ();
    public  ();
    [DebuggerHiddenAttribute]
public virtual bool Equals(object );
    [DebuggerHiddenAttribute]
public virtual int GetHashCode();
    [DebuggerHiddenAttribute]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : object {
    protected    ;
    protected   ;
    protected   ;
    protected    ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected List`1< > ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected List`1[] ;
    protected int ;
    internal (   );
    internal   (  , bool );
    private static bool (  ,   );
    private static bool ( ,  ,   ,   ,   );
    private static bool ( ,  );
    private static bool ( ,  );
    private static  ( , bool );
    private static   (  );
    private static   (  );
    private static UInt32 (  ,    );
    private static bool (  ,   , int );
    private static bool (  ,   ,   ,   );
    private static bool (  ,   ,   ,   );
    private static void (List`1< > ,   );
    private static void (  );
    private static void (  , int );
    private void ( ,  );
    private void (& , bool );
    protected static bool (   ,   , & );
    private static bool (  ,   );
    private static bool (  ,   ,   ,   ,  & );
    protected static bool (  ,   ,   , & ,  & );
    protected void (  , & , Int32& , int );
    private void (  );
    public   (  );
    private void ();
    private void (int , List`1< > , List`1< > );
    private   (  );
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    public static  Text;
    public static  Link;
    public static  FreeText;
    public static  Line;
    public static  Square;
    public static  Circle;
    public static  Polygon;
    public static  PolyLine;
    public static  Highlight;
    public static  Underline;
    public static  Squiggly;
    public static  StrikeOut;
    public static  Caret;
    public static  Stamp;
    public static  Ink;
    public static  Popup;
    public static  FileAttachment;
    public static  Sound;
    public static  Movie;
    public static  Widget;
    public static  Screen;
    public static  PrinterMark;
    public static  TrapNet;
    public static  Watermark;
    [   ("3D")]
public static  ThreeD;
    public static  Redact;
    public static  Projection;
    public static  RichMedia;
}
internal enum  : Enum {
    public int value__;
    public static  Table;
    public static  Stream;
}
internal enum  : Enum {
    public int value__;
    public static  Unknown;
    public static  Bmp;
    public static  Gif;
    public static  Icon;
    public static  Jpeg;
    public static  Png;
    public static  Tiff;
    public static  Wmp;
    public static  Jpeg2000;
    public static  Wmf;
    public static  Emf;
    public static  Svg;
}
internal enum  : Enum {
    public int value__;
    public static  CRU10S;
    public static  CRU100S;
    public static  CRU1000S;
    public static  CRU10000S;
    public static  CRU100000S;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  : object {
    private    ;
    private bool ;
    private  ;
    private int ;
    private int ;
    private int ;
    private   [] ;
    private   []  ;
    private   []  ;
    private Int32[]  ;
    private int  ;
    public (   , bool );
    public void ();
    public  ();
    public void ();
    public  (  [] );
    public   [] ();
    private  (  [] );
    private  (  [] );
    private  (  [] );
    private bool ();
    private void ();
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    public static  AbsoluteColorimetric;
    public static  RelativeColorimetric;
    public static  Saturation;
    public static  Perceptual;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Custom;
    [   ("D")]
public static  Details;
    [   ("T")]
public static  Tile;
    [   ("H")]
public static  Hidden;
    public static  FilmStrip;
    public static  FreeForm;
    public static  Linear;
    public static  Tree;
}
internal enum  : Enum {
    public int value__;
    public static  Miter;
    public static  Round;
    public static  Bevel;
}
internal enum  : Enum {
    public int value__;
    public static  RAW;
    public static  RGB;
}
internal enum  : Enum {
    public int value__;
    public static  Local;
    public static  Bookmark;
    public static  Web;
    public static  Url;
    public static  File;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    public static  ASCIIHexDecode;
    public static  ASCII85Decode;
    public static  LZWDecode;
    public static  FlateDecode;
    public static  RunLengthDecode;
    public static  CCITTFaxDecode;
    public static  JBIG2Decode;
    public static  DCTDecode;
    public static  JPXDecode;
    public static  Crypt;
}
internal enum  : Enum {
    public int value__;
    [XEnumAttribute("ctr")]
public static  Center;
    [XEnumAttribute("in")]
public static  Inset;
}
internal enum  : Enum {
    public int value__;
    public static  DrawingML_VML;
    public static  DrawingML;
    public static  VML;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  :    {
    private  ​ ;
    private WordDocument ;
    public ( ​ , WordDocument );
    public sealed virtual void   ​ (ListTable );
    private void (ListLevel , int , ListData );
    public static int (List`1<ListData> , int );
    private string (string );
    public static string (int );
    private string (string );
}
internal enum  : Enum {
    public int value__;
    public static  Fill;
    public static  Stroke;
    public static  FillStroke;
    public static  None;
    public static  FillClip;
    public static  StrokeClip;
    public static  FillStrokeClip;
    public static  Clip;
}
internal enum  : Enum {
    public int value__;
    [XEnumAttribute("none")]
public static  None;
    [XEnumAttribute("norm")]
public static  Normal;
    [XEnumAttribute("lighten")]
public static  Lighten;
    [XEnumAttribute("lightenLess")]
public static  LightenLess;
    [XEnumAttribute("darken")]
public static  Darken;
    [XEnumAttribute("darkenLess")]
public static  DarkenLess;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Left;
    public static  Right;
    public static  All;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  :    {
    protected  ;
    private string ;
    internal ( ,    , int );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual void   ​ (string );
    public virtual string   ​ ();
}
internal enum  : Enum {
    public int value__;
    public static  UltraCondensed;
    public static  ExtraCondensed;
    public static  Condensed;
    public static  SemiCondensed;
    public static  Normal;
    public static  SemiExpanded;
    public static  Expanded;
    public static  ExtraExpanded;
    public static  UltraExpanded;
}
internal enum  : Enum {
    public int value__;
    [ ​ ("Mandatory_Break")]
public static  BK;
    [ ​ ("Carriage_Return")]
public static  CR;
    [ ​ ("Line_Feed")]
public static  LF;
    [ ​ ("Combining_Mark")]
public static  CM;
    [ ​ ("Next_Line")]
public static  NL;
    [ ​ ("Surrogate")]
public static  SG;
    [ ​ ("Word_Joiner")]
public static  WJ;
    [ ​ ("ZWSpace")]
public static  ZW;
    [ ​ ("Glue")]
public static  GL;
    [ ​ ("Space")]
public static  SP;
    [ ​ ("ZWJ")]
public static  ZWJ;
    [ ​ ("Break_Both")]
public static  B2;
    [ ​ ("Break_After")]
public static  BA;
    [ ​ ("Break_Before")]
public static  BB;
    [ ​ ("Hyphen")]
public static  HY;
    [ ​ ("Contingent_Break")]
public static  CB;
    [ ​ ("Close_Punctuation")]
public static  CL;
    [ ​ ("Close_Parenthesis")]
public static  CP;
    [ ​ ("Exclamation")]
public static  EX;
    [ ​ ("Inseparable")]
public static  IN;
    [ ​ ("Nonstarter")]
public static  NS;
    [ ​ ("Open_Punctuation")]
public static  OP;
    [ ​ ("Quotation")]
public static  QU;
    [ ​ ("Infix_Numeric")]
public static  IS;
    [ ​ ("Numeric")]
public static  NU;
    [ ​ ("Postfix_Numeric")]
public static  PO;
    [ ​ ("Prefix_Numeric")]
public static  PR;
    [ ​ ("Break_Symbols")]
public static  SY;
    [ ​ ("Ambiguous")]
public static  AI;
    [ ​ ("Alphabetic")]
public static  AL;
    [ ​ ("Conditional_Japanese_Starter")]
public static  CJ;
    [ ​ ("E_Base")]
public static  EB;
    [ ​ ("E_Modifier")]
public static  EM;
    [ ​ ("H2")]
public static  H2;
    [ ​ ("H3")]
public static  H3;
    [ ​ ("Hebrew_Letter")]
public static  HL;
    [ ​ ("Ideographic")]
public static  ID;
    [ ​ ("JL")]
public static  JL;
    [ ​ ("JV")]
public static  JV;
    [ ​ ("JT")]
public static  JT;
    [ ​ ("Regional_Indicator")]
public static  RI;
    [ ​ ("Complex_Context")]
public static  SA;
    [ ​ ("Unknown")]
public static  XX;
}
internal enum  : Enum {
    public int value__;
    public static  LeftToRight;
    public static  RightToLeft;
    public static  ArabicLetter;
    public static  EuropeanNumber;
    public static  EuropeanSeparator;
    public static  EuropeanTerminator;
    public static  ArabicNumber;
    public static  CommonSeparator;
    public static  NonspacingMark;
    public static  BoundaryNeutral;
    public static  ParagraphSeparator;
    public static  SegmentSeparator;
    public static  WhiteSpace;
    public static  OtherNeutral;
    public static  LeftToRightEmbedding;
    public static  LeftToRightOverride;
    public static  RightToLeftEmbedding;
    public static  RightToLeftOverride;
    public static  PopDirectionalFormat;
    public static  LeftToRightIsolate;
    public static  RightToLeftIsolate;
    public static  FirstStrongIsolate;
    public static  PopDirectionalIsolate;
}
internal enum  : Enum {
    public int value__;
    public static  LeftAssigned;
    public static  RightAssigned;
    public static  ColorAssigned;
    public static  ParentAssigned;
    public static  ValueAssigned;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Space;
    public static  NewLine;
    public static  Blank;
}
internal enum  : Enum {
    public int value__;
    [XEnumAttribute("none")]
public static  None;
    [XEnumAttribute("email")]
public static  Email;
    [XEnumAttribute("hqprint")]
public static  HighQualityPrint;
    [XEnumAttribute("print")]
public static  Print;
    [XEnumAttribute("screen")]
public static  Screen;
}
internal enum  : Enum {
    public int value__;
    public static  None;
    public static  Arrow;
    public static  Diamond;
    public static  Oval;
    public static  Stealth;
    public static  Triangle;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  :   {
    public static char ;
    public static char ;
    public static char ;
    public static char ;
    private DataTable ;
    private List`1<string> ;
    private List`1<string> ;
    private DataRow  ;
    private   ;
    public (string );
    public (string ,  );
    private static ();
    private string ();
    private void ();
    private List`1<DataRow> (string , Int32& );
    private string ();
    private void ();
    private void ();
    private string ();
    protected virtual string  ​ ();
}
internal enum  : Enum {
    public int value__;
    public static  Document;
    public static  Element;
    public static  Text;
    public static  Comment;
    public static  DocumentType;
    public static  CData;
    public static  ProcessingInstruction;
}
internal enum  : Enum {
    public int value__;
    public static  FDF;
    public static  XFDF;
    public static  HTML;
    public static  PDF;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class  : object {
    private     ;
    private DocumentModel ;
    private RtfLoadOptions ;
    private int ;
    private  ;
    private     ;
    private     ;
    private Dictionary`2<int,    >  ;
    private Dictionary`2<int, Color>  ;
    private Dictionary`2<int, ParagraphStyle>  ;
    private Dictionary`2<int, CharacterStyle>  ;
    private Dictionary`2<int, TableStyle>  ;
    private Dictionary`2<int, ListStyle>  ;
    private Dictionary`2<int,    >  ;
    private List`1<Picture>  ;
    private int  ;
    private Stack`1<Table>  ;
    private int  ;
    private int  ;
    private int  ;
    protected (    , DocumentModel , RtfLoadOptions );
    protected int ();
    protected void (int );
    protected int ();
    protected void (int );
    protected int ();
    protected void (int );
    protected     ();
    protected DocumentModel ();
    protected     ();
    protected     ();
    protected BlockCollection  ();
    protected Dictionary`2<int,    >  ();
    protected Dictionary`2<int, Color>  ();
    protected Dictionary`2<int, ParagraphStyle>  ();
    protected Dictionary`2<int, CharacterStyle>  ();
    protected Dictionary`2<int, TableStyle>  ();
    protected Dictionary`2<int, ListStyle>  ();
    protected Dictionary`2<int,    >  ();
    protected List`1<Picture>  ();
    public abstract virtual void ​  ();
    protected virtual void ​ ( );
    protected void (Func`1<BlockCollection> , ElementType );
    private bool (ElementType );
    protected void ( );
    protected void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private ListFormat  ();
    private static string (string , string , int , NumberStyle );
    private static ListTemplateType (NumberStyle );
    private void (CharacterFormat );
    protected void  ();
    private void (ElementType );
    private void (Table , ElementType , List`1<TableCellFormat> , List`1<> , Boolean& );
    private TableRow (ElementType , TableFormat , List`1<TableCellFormat> , List`1<> , Boolean& );
    private void  ();
    private TableCell  ();
    private bool (int , int );
    protected void (TableFormat , bool );
    protected void (TableRowFormat , TableFormat , bool , Int32& , Boolean& );
    private   (TableCellFormat , TableFormat , int );
    protected void (TableCellFormat );
    private TableWidth (string , string );
    private void (MultipleBorders , bool );
    private void (TablePositioning );
    private Padding  ();
    private void (TableFormat );
    private Padding (Padding );
    private Padding  ();
    private void (MultipleBorders );
    private void (MultipleBorders );
    private void (ElementType );
    private void  ();
    private void  ();
    protected void ( );
    protected void (bool );
    protected Picture  ();
    private      ();
    protected Picture  ();
    private void  ();
    protected      ();
    private      ();
    private void (    );
    private string  ();
    private object (string );
    private string  ();
    private Picture  ();
    private string  ();
    private static void (    , StringBuilder );
    private TextBox  ();
    private static Picture (    );
    private static TextBox (    );
    private static void (    , DrawingElement );
    private static HorizontalPositionAnchor (    );
    private static VerticalPositionAnchor (    );
    private void  ();
    private void  ();
    private void (bool );
    private void (bool );
    private void  ();
    private void  ();
    private BookmarkStart  ();
    private BookmarkEnd  ();
    private Note  ();
    private Inline  ();
    private Inline  ();
    private PreservedInline  ();
    private      ();
    protected SingleBorder  ();
    private void  ();
    private TabStop  ();
    protected     (int );
    protected bool (int ,    & );
    protected Color (int );
    protected void (string , string , string );
    protected void (string );
    protected string (bool );
    protected string  ();
    protected void (Action`1<string> );
    private static bool (Nullable`1<char> , char , Nullable`1<char> );
    private static Nullable`1<char> (    );
    internal void  ();
    protected void (    );
    protected void (    ,  );
    protected void (    );
    protected void (    );
    private void (    );
    private void (    );
    private void (    );
    private void (    );
    protected Func`1<bool> (ElementType );
    protected Func`1<bool>  ();
    protected Func`1<bool> ( );
    protected Func`1<bool> ( , string );
    protected Func`1<bool> ( );
    protected Func`1<bool> ([] );
    protected Func`1<bool> (string );
    protected Func`1<bool> (string , string );
    protected Func`1<bool> (string , string , string );
    protected Func`1<bool> (string , string , string , string );
    protected Func`1<bool> (String[] );
    private bool  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private bool   ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void ​();
    private void ​();
    private void ​();
    private void ​();
    private void ​();
    private void ​();
    private void ​();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private bool   ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private bool   ();
    private bool   ();
    private bool   ();
    private bool   ();
}
internal enum  : Enum {
    public int value__;
    public static  Arrow;
    public static  Diamond;
    public static  Oval;
    public static  Stealth;
    public static  Triangle;
}
internal enum  : Enum {
    public int value__;
    public static  EvenOdd;
    public static  NonZero;
    public static  Positive;
    public static  Negative;
}
internal enum  : Enum {
    public int value__;
    public static  Unknown;
    public static  SevenBit;
    public static  EightBit;
    public static  Binary;
    public static  QuotedPrintable;
    public static  Base64;
}
internal enum  : Enum {
    public int value__;
    public static  Read;
    public static  Write;
}
internal enum  : Enum {
    public byte value__;
    public static  Perceptual;
    public static  RelativeColorimetric;
    public static  Saturation;
    public static  AbsoluteColorimetric;
}
internal enum  : Enum {
    public int value__;
    public static  Top;
    public static  Center;
    public static  Bottom;
}
internal enum  : Enum {
    public int value__;
    public static  Left;
    public static  Top;
    public static  Right;
    public static  Bottom;
    public static  InsideHorizontal;
    public static  InsideVertical;
    public static  DiagonalDown;
    public static  DiagonalUp;
}
internal enum  : Enum {
    public int value__;
    [   ("FreeTextTypewriter")]
public static  TextComment;
}
internal enum  : Enum {
    public int value__;
    public static  SinglePage;
    public static  OneColumn;
    public static  TwoColumnLeft;
    public static  TwoColumnRight;
    public static  TwoPageLeft;
    public static  TwoPageRight;
}
internal enum  : Enum {
    public int value__;
    [DescriptionAttribute("JPEG 2000 Signature box (required)")]
public static  jP;
    [DescriptionAttribute("File Type box (required)")]
public static  ftyp;
    [DescriptionAttribute("JP2 Header box (required superbox)")]
public static  jp2h;
    [DescriptionAttribute("Image Header box (required)")]
public static  ihdr;
    [DescriptionAttribute("Bits Per Component box")]
public static  bpcc;
    [DescriptionAttribute("Colour Specification box (required)")]
public static  colr;
    [DescriptionAttribute("Palette box")]
public static  pclr;
    [DescriptionAttribute("Component Mapping box")]
public static  cmap;
    [DescriptionAttribute("Channel Definition box")]
public static  cdef;
    [DescriptionAttribute("Resolution box (superbox)")]
public static  res;
    [DescriptionAttribute("Capture Resolution box")]
public static  resc;
    [DescriptionAttribute("Default Display Resolution box")]
public static  resd;
    [DescriptionAttribute("Contiguous Codestream box (required)")]
public static  jp2c;
    [DescriptionAttribute("Intellectual Property box")]
public static  jp2i;
    [DescriptionAttribute("XML box")]
public static  xml;
    [DescriptionAttribute("UUID box")]
public static  uuid;
    [DescriptionAttribute("UUID Info box (superbox)")]
public static  uinf;
    [DescriptionAttribute("UUID List box")]
public static  ulst;
    [DescriptionAttribute("URL box")]
public static  url;
    [DescriptionAttribute("JPX Reader Requirements box (required)")]
public static  rreq;
    [DescriptionAttribute("JPX Codestream Header box (superbox)")]
public static  jpch;
    [DescriptionAttribute("JPX Compositing Layer Header box (superbox)")]
public static  jplh;
    [DescriptionAttribute("JPX Colour Group box (superbox)")]
public static  cgrp;
    [DescriptionAttribute("JPX Opacity box")]
public static  opct;
    [DescriptionAttribute("JPX Codestream Registration box")]
public static  creg;
    [DescriptionAttribute("JPX Data Reference box")]
public static  dtbl;
    [DescriptionAttribute("JPX Fragment Table box")]
public static  ftbl;
    [DescriptionAttribute("JPX Fragment List box")]
public static  flst;
    [DescriptionAttribute("JPX Cross-Reference box")]
public static  cref;
    [DescriptionAttribute("JPX Media Data box")]
public static  mdat;
    [DescriptionAttribute("JPX Composition box (superbox)")]
public static  comp;
    [DescriptionAttribute("JPX Composition Options box")]
public static  copt;
    [DescriptionAttribute("JPX Instruction Set box")]
public static  inst;
    [DescriptionAttribute("JPX Association box (superbox)")]
public static  asoc;
    [DescriptionAttribute("JPX Number List box")]
public static  nlst;
    [DescriptionAttribute("JPX Label box")]
public static  lbl;
    [DescriptionAttribute("JPX Binary Filter box")]
public static  bfil;
    [DescriptionAttribute("JPX Desired Reproductions box (superbox)")]
public static  drep;
    [DescriptionAttribute("JPX Graphics Technology Standard Output box")]
public static  gtso;
    [DescriptionAttribute("JPX ROI Description box")]
public static  roid;
    [DescriptionAttribute("JPX Digital Signature box")]
public static  chck;
    [DescriptionAttribute("JPX MPEG-7 Binary box")]
public static  mp7b;
    [DescriptionAttribute("JPX Free box")]
public static  free;
    [DescriptionAttribute("JPX Pixel Format box")]
public static  pxfm;
    [DescriptionAttribute("JPX Compositing Layer Extensions box")]
public static  jclx;
    [DescriptionAttribute("JPX Compositing Layer Extensions Info box")]
public static  jlxi;
    [DescriptionAttribute("JPX Multiple Codestream box")]
public static  j2cx;
    [DescriptionAttribute("JPX Multiple Codestream Info box")]
public static  j2ci;
    [DescriptionAttribute("JPX Grouping box")]
public static  grp;
    [DescriptionAttribute("JPX Decomposed XML box")]
public static  dxml;
    [DescriptionAttribute("JPX XML Header box")]
public static  hxml;
}
[FlagsAttribute]
internal enum  : Enum {
    public int value__;
    public static  UNKNOWN;
    public static  ENCODING2D;
    public static  UNCOMPRESSED;
    public static  FILLBITS;
}
internal enum  : Enum {
    public int value__;
    public static  Default;
    public static  SectorRecycle;
    public static  EraseFreeSectors;
    public static  NoValidationException;
    public static  LeaveOpen;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class  : object {
    private static Dictionary`2<, > ;
    private static ();
    public static string ();
    public static string ();
    public static string ();
    public static string ();
    public static string ();
    public static string ();
    public static string ();
    public static string  ();
    public static string  ();
    public static string  ();
    public static string  ();
    public static string  ();
    public static string  ();
    public static string  ();
    public static string  ();
    public static string  ();
    public static string  ();
    public static string  ();
    public static string  ();
    public static string  ();
    public static string  ();
    public static string  ();
    public static string  ();
    public static string  ();
    public static string  ();
    public static string  ();
    public static string  ();
    public static string  ();
    internal static bool ( );
    internal static bool ( );
    internal static void ( , Boolean& , Boolean& );
    internal static bool ( );
    internal static bool ( );
    internal static     (    );
    public static string ( );
    public static  (string );
}
internal enum  : Enum {
    public byte value__;
    public static  Boolean;
    public static  Integer;
    public static  Real;
}
internal enum  : Enum {
    public byte value__;
    public static  Default;
    public static  EastAsia;
    public static  ComplexScript;
}
internal enum  : Enum {
    public int value__;
    public static  Tab;
    public static  LineBreak;
    public static  CarriageReturn;
    public static  Blank;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class  : object {
    internal    ;
    internal    ;
    internal  ;
    protected (   );
    public abstract virtual bool ​ ();
    public    ();
    public void (   );
    public    ();
    public void (   );
    public static string ();
    public static string ();
    public static   <byte> (int , int );
    public static   <  > (int , int );
    public static Byte[][] (int , int );
    private static   [][] (int , int );
    public void ();
    public void ();
    public void ( );
    public void ( , Object[] );
    public void (int , Object[] );
    public void ( );
    public void ( , Object[] );
    public void (int , Object[] );
    public void (int ,  );
    public void (int ,  , Object[] );
    public void (int , int , Object[] );
}
internal enum  : Enum {
    public int value__;
    public static  w;
    public static  J;
    public static  j;
    public static  M;
    public static  d;
    public static  ri;
    public static  i;
    public static  gs;
    public static  q;
    public static  Q;
    public static  cm;
    public static  m;
    public static  l;
    public static  c;
    public static  v;
    public static  y;
    public static  h;
    public static  re;
    public static  S;
    public static  s;
    public static  f;
    [ObsoleteAttribute("Use f instead.")]
public static  F;
    public static  f_star;
    public static  B;
    public static  B_star;
    public static  b;
    public static  b_star;
    public static  n;
    public static  W;
    public static  W_star;
    public static  BT;
    public static  ET;
    public static  Tc;
    public static  Tw;
    public static  Tz;
    public static  TL;
    public static  Tf;
    public static  Tr;
    public static  Ts;
    public static  Td;
    public static  TD;
    public static  Tm;
    public static  T_star;
    public static  Tj;
    public static  _apos;
    public static  _quot;
    public static  TJ;
    public static  d0;
    public static  d1;
    public static  CS;
    public static  cs;
    public static  SC;
    public static  SCN;
    public static  sc;
    public static  scn;
    public static  G;
    public static  g;
    public static  RG;
    public static  rg;
    public static  K;
    public static  k;
    public static  sh;
    public static  BI;
    public static  ID;
    public static  EI;
    public static  Do;
    public static  MP;
    public static  DP;
    public static  BMC;
    public static  BDC;
    public static  EMC;
    public static  BX;
    public static  EX;
}
internal static class  : object {
    private static  ;
    private static int  ;
    private static ConcurrentDictionary`2<int, string> ;
    private static   ;
    private static Byte[] ;
    private static int ;
    private static Byte[] ;
    private static short ;
    private static int ;
    private static ();
    internal static string (int );
    private static string (int , bool );
    private static AssemblyName (Assembly );
    private static Byte[] (AssemblyName );
    private static void (Byte[] , int , Byte[] );
}
internal enum  : Enum {
    public int value__;
    public static  Characters;
    public static  EmbeddedObject;
    public static  EndOfLine;
    public static  EndOfParagraph;
}
internal enum  : Enum {
    public short value__;
    public static  NOTYPE;
    public static  ANY;
    public static  BYTE;
    public static  ASCII;
    public static  SHORT;
    public static  LONG;
    public static  RATIONAL;
    public static  SBYTE;
    public static  UNDEFINED;
    public static  SSHORT;
    public static  SLONG;
    public static  SRATIONAL;
    public static  FLOAT;
    public static  DOUBLE;
    public static  IFD;
    public static  LONG8;
    public static  SLONG8;
    public static  IFD8;
}
internal enum  : Enum {
    public int value__;
    public static  SOF0;
    public static  SOF1;
    public static  SOF2;
    public static  SOF3;
    public static  SOF5;
    public static  SOF6;
    public static  SOF7;
    public static  JPG;
    public static  SOF9;
    public static  SOF10;
    public static  SOF11;
    public static  SOF13;
    public static  SOF14;
    public static  SOF15;
    public static  DHT;
    public static  DAC;
    public static  RST0;
    public static  RST1;
    public static  RST2;
    public static  RST3;
    public static  RST4;
    public static  RST5;
    public static  RST6;
    public static  RST7;
    public static  SOI;
    public static  EOI;
    public static  SOS;
    public static  DQT;
    public static  DNL;
    public static  DRI;
    public static  DHP;
    public static  EXP;
    public static  APP0;
    public static  APP1;
    public static  APP2;
    public static  APP3;
    public static  APP4;
    public static  APP5;
    public static  APP6;
    public static  APP7;
    public static  APP8;
    public static  APP9;
    public static  APP10;
    public static  APP11;
    public static  APP12;
    public static  APP13;
    public static  APP14;
    public static  APP15;
    public static  JPG0;
    public static  JPG8;
    public static  JPG13;
    public static  COM;
    public static  TEM;
    public static  ERROR;
}
internal enum  : Enum {
    public int value__;
    public static  FunctionBased;
    public static  Axial;
    public static  Radial;
    public static  FreeTriangleMesh;
    public static  LatticeTriangleMesh;
    public static  CoonsPatchMesh;
    public static  TensorPatchMesh;
}
internal enum  : Enum {
    public int value__;
    [   ("")]
public static  Unknown;
    [ObsoleteAttribute("The use of MD5 and SHA1 is deprecated with PDF 2.0.")]
[   ("MD5")]
public static  MD5;
    [ObsoleteAttribute("The use of MD5 and SHA1 is deprecated with PDF 2.0.")]
[   ("SHA1")]
public static  SHA1;
    [ObsoleteAttribute("RIPEMD160 has been superseded by the Secure Hash Algorithms SHA256 and SHA512. SHA256 and SHA512 offer better security and performance than RIPEMD160. Use RIPEMD160 only for compatibility with legacy applications and data.")]
[   ("RIPEMD160")]
public static  RIPEMD160;
    [   ("SHA256")]
public static  SHA256;
    [   ("SHA384")]
public static  SHA384;
    [   ("SHA512")]
public static  SHA512;
}
internal enum  : Enum {
    public UInt32 value__;
    [DescriptionAttribute("Character to glyph mapping")]
public static  cmap;
    [DescriptionAttribute("Font header")]
public static  head;
    [DescriptionAttribute("Horizontal header")]
public static  hhea;
    [DescriptionAttribute("Horizontal metrics")]
public static  hmtx;
    [DescriptionAttribute("Maximum profile")]
public static  maxp;
    [DescriptionAttribute("Naming table")]
public static  name;
    [DescriptionAttribute("OS/2 and Windows specific metrics")]
public static  OS2;
    [DescriptionAttribute("PostScript information")]
public static  post;
    [DescriptionAttribute("Control Value Table")]
public static  cvt;
    [DescriptionAttribute("Font program")]
public static  fpgm;
    [DescriptionAttribute("Glyph data")]
public static  glyf;
    [DescriptionAttribute("Index to location")]
public static  loca;
    [DescriptionAttribute("CVT Program")]
public static  prep;
    [DescriptionAttribute("Grid-fitting/Scan-conversion")]
public static  gasp;
    [DescriptionAttribute("Compact Font Format 1.0")]
public static  CFF;
    [DescriptionAttribute("Embedded bitmap data")]
public static  EBDT;
    [DescriptionAttribute("Color bitmap data")]
public static  CBDT;
    [DescriptionAttribute("Standard bitmap graphics")]
public static  sbix;
    [DescriptionAttribute("Bitmap font header")]
public static  bhed;
    [DescriptionAttribute("Font variations")]
public static  fvar;
    [DescriptionAttribute("Digital signature")]
public static  DSIG;
    [DescriptionAttribute("Horizontal device metrics")]
public static  hdmx;
    [DescriptionAttribute("Kerning")]
public static  kern;
    [DescriptionAttribute("Linear threshold data")]
public static  LTSH;
    [DescriptionAttribute("PCL 5 data")]
public static  PCLT;
    [DescriptionAttribute("Vertical device metrics")]
public static  VDMX;
    [DescriptionAttribute("Vertical Metrics header")]
public static  vhea;
    [DescriptionAttribute("Vertical Metrics")]
public static  vmtx;
}
internal enum  : Enum {
    public int value__;
    public static  NONE;
    public static  HORIZONTAL;
    public static  FLOATINGPOINT;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​ :   {
    protected ​(SerializationInfo , StreamingContext );
    public ​(string );
    public ​(string , Exception );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​​ : object {
    internal bool ;
    private    ;
    private    ;
    protected    ();
    private void (   );
    protected    ();
    private void (   );
    public abstract virtual    ​​​ ();
    protected abstract virtual  ​ ​​​ ();
    protected abstract virtual void ​​​ ( ​ );
    protected abstract virtual  ​ ​​​ ();
    protected abstract virtual void ​​​ ( ​ );
    public  ​ ();
    private void (   ,    );
    protected virtual void ​​​ (   );
    protected virtual void ​​​ (   ,    );
    public void ( ​ ,  ​ );
    protected abstract virtual void ​​​ ( ​ ,  ​ );
    public abstract virtual void ​​​ (    );
    public static void (    , IEnumerable`1< ​> , double , double ,    ,    ,    ,     );
    public static ​​ ( ​ ,    ,    ,    );
    private static ​​ ( ​ ,    ,    ,    ,    );
    public static void (    ,  ​ ,    ,    ,    ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    private String[] ;
    private  ;
    public  (string ,  );
    private string ();
    private int ();
    protected virtual string  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :    {
    private  ​ ;
    private WordDocument ;
    public  ​( ​ , WordDocument ,    );
    public sealed virtual void   ​ (StyleSheet );
    private void (StyleSheet );
    internal static ByteStructure (List`1<ByteStructure> , ushort );
    private void (StyleSheet );
    public static string (StyleSheetDescription );
    private static string (string );
    private string (StyleSheetDescription );
    private void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    protected  (SerializationInfo , StreamingContext );
    public  (string );
    public  (string , Exception );
}
internal class  ​ :  ​ {
    public virtual bool  ​​ ();
    public virtual bool  ​​ ();
    public virtual bool  ​​ ();
    public virtual bool  ​​ ();
    public virtual bool  ​​ ();
    public virtual bool  ​​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class   : List`1< > {
    public  (int );
    public  (IEnumerable`1< > );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    private  ​ ;
    private    ;
    private bool ;
    [CompilerGeneratedAttribute]
public sealed virtual     ​​ ();
    public  ​ ();
    public void ( ​ );
    public bool ();
    public void (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   : object {
    private static double ;
    private List`1<> ;
    private   ;
    private   ;
    private double ;
    private double ;
    private double ;
    private double  ;
    private double  ;
    private double  ;
    private   ;
    private   ;
    private double  ;
    private bool  ;
    private double  ;
    private bool  ;
    private bool  ;
    [NullableAttribute("2")]
private   ;
    [NullableAttribute("2")]
private   ;
    [NullableAttribute("2")]
public    { get; public set; }
    [NullableAttribute("2")]
public    { get; public set; }
    public  (double , double , bool , bool );
    private static  ();
    public double ();
    public void (double );
    public bool ();
    public void (bool );
    public double ();
    public void (double );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    [NullableContextAttribute("2")]
public  ();
    [NullableContextAttribute("2")]
public void ( );
    [NullableContextAttribute("2")]
public  ();
    [NullableContextAttribute("2")]
public void ( );
    public void  ();
    public void (  ,  ,  );
    public void (  ,  ,  );
    private void (double );
    public void (double ,   );
    public void (double ,    );
    internal static   (  ,   );
    public void ( ,   );
    private static void (  , Int32& ,   & );
    private static   (  , double , double );
    private static   (  ,   );
    private static bool (double , double );
    private static double (double , double );
    private static   (  );
    private static   (  ,   );
    private static   (  ,   ,   ,   );
    private   (  ,   );
    private   (  ,   );
    private void ( ,   , int , int );
    private void ( ,   , int , int );
    private void ( ,   , int , int , double );
    private void ( ,   , int , int , double );
    private void (  );
    private void ( ,   , int , Int32& );
    private void ( ,   );
    private void ( ,   );
    private void ( ,   );
    private void ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ : object {
    private string ;
    private string ;
    private string ;
    private bool ;
    private bool ;
    private Dictionary`2<string, string> ;
    private Dictionary`2<string, object> ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IEnumerable`1<KeyValuePair`2<string, string>>  { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IEnumerable`1<KeyValuePair`2<string, object>>  { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string  ​​ ();
    public void (string );
    [CompilerGeneratedAttribute]
public sealed virtual string  ​​ ();
    public void (string );
    [CompilerGeneratedAttribute]
public sealed virtual string  ​​ ();
    public void (string );
    [CompilerGeneratedAttribute]
public sealed virtual bool  ​​ ();
    public void (bool );
    [CompilerGeneratedAttribute]
public sealed virtual bool  ​​ ();
    public void (bool );
    public Dictionary`2<string, string> ();
    public Dictionary`2<string, object> ();
    public sealed virtual string  ​​ (string , String[] );
    public sealed virtual Nullable`1<DateTime>  ​​ (string , String[] );
    private sealed virtual override IEnumerable`1<KeyValuePair`2<string, string>>  ​​ ();
    private sealed virtual override IEnumerable`1<KeyValuePair`2<string, object>>  ​​ ();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class   : object {
    public   ;
    public   ;
    public long ;
    public double ;
    public int ;
    public int ;
    public int ;
    public    ;
    public    ;
    public    ;
    public    ;
    public    ;
    public    ;
    public     ;
    public    ;
    internal bool  ;
    internal   ;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class  ​ : object {
    [DebuggerBrowsableAttribute("0")]
public int Count { get; }
    private protected abstract virtual ​​  ​​ ();
    public ​​ ();
    private protected abstract virtual int  ​​ ();
    private protected abstract virtual void  ​​ (Array , int );
    private protected abstract virtual IEnumerator  ​​ ();
    public sealed virtual int get_Count();
    private sealed virtual override bool  ​​ ();
    private sealed virtual override object  ​​ ();
    private sealed virtual override void  ​​ (Array , int );
    private sealed virtual override IEnumerator  ​​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class   : ValueType {
    [DebuggerBrowsableAttribute("0")]
public    ;
    [DebuggerBrowsableAttribute("0")]
public  ;
    [DebuggerBrowsableAttribute("0")]
public bool ;
    public  (   ,  , bool );
    public static bool op_Equality(  ,   );
    public static bool op_Inequality(  ,   );
    [NullableContextAttribute("2")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
}
internal class  ​ :  ​ {
    [NullableContextAttribute("1")]
protected virtual string  ​​ (bool ,    ,  ,   & , String& , String& , Int32& );
}
internal interface   {
    public abstract virtual bool  ​ ();
    public abstract virtual object  ​ ();
    public abstract virtual void  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :    {
    private CommandTable ;
    private  ​ ;
    public  ​( ​ );
    public sealed virtual void   ​ (CommandTable );
    private void (CustomToolbarWrapper );
    private void (KeyMapEntry );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    private String[] ;
    private String[] ;
    private string ;
    private Hashtable ;
    public  (string );
    private string ();
    public sealed virtual IList`1< >  ​ ();
    public sealed virtual IList`1<int>  ​ ();
    private void ();
    private void ();
    protected virtual string  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ : object {
    private   ;
    private static int ;
    private Action`1< > ;
    private Action`2< , > ;
    public  ​(  );
    private static  ​();
    public   ();
    public void (  );
    private static   (  );
    private    (  );
    public bool (  ,  & );
    private void (  ,   );
    private void (  );
    private void (  );
    public void (  );
    private void (  );
    private void (  );
    private void (  );
    private void  (  );
    private void  (  );
    private static    (  );
    public void (  ,  & );
    private void  (  );
    private void  (  );
    private void  (  );
    private void  (  );
    private void  (  );
    private void  (  );
    public void (Action`1< > );
    private void (Action`1< > ,   );
    internal void (Action`1< > );
    private void (Action`1< > ,   );
    public  ();
    public void ();
    private static void (  , int );
    internal void (  ,  );
    internal void (Action`1< > );
    internal void (Action`1< > );
    internal void (Action`2< , > );
    internal void (Action`2< , > );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   : object {
    private  ;
    private   ;
    private string ;
    private     ;
    private     ;
    private Nullable`1<double> ;
    private Nullable`1<double> ;
    private double  ;
    private      ;
    private bool  ;
    private      ;
    private bool  ;
    private bool  ;
    public  (string ,  );
    public string ();
    public  ();
    public     ();
    public void (    );
    public     ();
    public void (    );
    public Nullable`1<double> ();
    public void (Nullable`1<double> );
    public double ();
    public void (double );
    public Nullable`1<double> ();
    public void (Nullable`1<double> );
    private double  ();
    public      ();
    public void (    );
    public bool  ();
    public void (bool );
    public      ();
    public void (    );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    private    ();
    private    ();
    public      ();
    public void (    ,     ,     ,     ,    );
    private void (    , string , double ,     , double , double , IList`1< > );
    private void (    ,     ,     ,     );
    private void (    ,     , double ,   , double ,     ,     ,     );
    private int (    ,     ,   , double );
    private int (    ,     , string , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :    {
    private XmlElement ;
    public  ​(XmlWriter );
    public  ​(XmlElement );
    public sealed virtual void   ​ (DateAndTime );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   : object {
    private Byte[] ;
    private Byte[] ;
    private ushort ;
    private ushort ;
    private ushort ;
    private ushort ;
    private ushort ;
    private Byte[]  ;
    private int  ;
    private int  ;
    private int  ;
    private UInt32  ;
    private UInt32  ;
    private int  ;
    private UInt32  ;
    private int  ;
    private UInt32  ;
    private Int32[]  ;
    private Byte[]  ;
    public  (ushort );
    public Byte[] ();
    public Byte[] ();
    public void (Byte[] );
    public ushort ();
    public ushort ();
    public ushort  ();
    public ushort  ();
    public ushort  ();
    public Byte[] ();
    public int  ();
    public void (int );
    public int  ();
    public void (int );
    public int  ();
    public void (int );
    public UInt32  ();
    public UInt32  ();
    public void (UInt32 );
    public int  ();
    public void (int );
    public UInt32  ();
    public void (UInt32 );
    public int  ();
    public void (int );
    public UInt32  ();
    public void (UInt32 );
    public Int32[]  ();
    public void (Stream );
    public void (Stream );
    private void ();
    private void ();
}
internal class  ​ : ValueType {
    [DebuggerBrowsableAttribute("0")]
public static  ​ ;
    [DebuggerBrowsableAttribute("0")]
public static  ​ ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public  ​( , double ,     , double );
    private static  ​();
    public  ();
    public double ();
    public     ();
    public double ();
    public bool  ();
    public double ();
    public bool  ();
    public double ();
    public     ();
    public sealed virtual bool Equals( ​ );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    private int  ();
    public sealed virtual int CompareTo( ​ );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : object {
    [DebuggerBrowsableAttribute("0")]
public static ​  ;
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<  >  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    public ​ ( ​ ,  ​ ,  ​ ,  ​ ,  ​ ,  ​ , Nullable`1<  > ,     ,   ,   ,      , bool  , bool  , bool  );
    private ​ (​  );
    private static ​ ();
    public bool ();
    private void (bool );
    public static void (​  );
    public Nullable`1<  > ();
    public    ();
    public  ();
    public   ();
    public      ();
    public bool ();
    public bool ();
    public bool ();
    public  ​ ( );
    public  ​ ( );
    public ​  ( ​ ,  ​ ,  ​ ,  ​ );
    public ​  ( );
    public ​  (    );
    public sealed virtual bool Equals(​  );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  :    {
    public int ;
    public int ;
    public Byte[] ;
    protected internal ​ (int , Byte[] , int , int );
    public virtual string ToString();
}
internal class ​  : Exception {
    [NullableContextAttribute("1")]
protected ​ (SerializationInfo , StreamingContext );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class ​  : object {
    private static    ;
    private static ​ ();
    [ExtensionAttribute]
public static object (​  , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​  :    {
    private static String[][] ;
    protected internal    ;
    public ​ (   );
    private static ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public static String[][] ();
    public abstract virtual int ​ ​ (int , int );
    public abstract virtual int ​ ​ (int , int );
    public virtual bool   ​ (int , int );
    public virtual      ​ (int , int );
    public static ​  (   ,    ,    ,    ,    ,    ,    ,     ,     ,     ,     );
    public abstract virtual      ​ (int ,    );
    public abstract virtual bool   ​ (int , int );
    public abstract virtual int   ​ (int , int , int );
    public abstract virtual int   ​ (int , int , int );
}
internal class ​  : object {
    private Nullable`1<double> ;
    private Nullable`1<double> ;
    private  ;
    public Nullable`1<double> ();
    public void (Nullable`1<double> );
    public Nullable`1<double> ();
    public void (Nullable`1<double> );
    public  ();
    public void ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : object {
    private  ;
    private    ;
    private int ;
    private int ;
    private int ;
    private int ;
    private   [][] ;
    private   []  ;
    public ​ (   , bool );
    public virtual void   ​ ( );
    public virtual bool   ​ (Byte[][][] );
    private bool (Byte[][][] );
    private bool (Byte[][][] );
    private bool ();
    private void ();
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  :    {
    [DebuggerBrowsableAttribute("0")]
private   [] ;
    [DebuggerBrowsableAttribute("0")]
private IList`1<> ;
    [DebuggerBrowsableAttribute("0")]
public     { get; public set; }
    public ​ (IList`1<> );
    public virtual    ​ ();
    [IteratorStateMachineAttribute("​ /")]
public IEnumerable`1<> ();
    public    ( );
    public void ( ,    );
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​  : object {
    public abstract virtual Byte[] ​ ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class ​​  : ValueType {
    [DebuggerBrowsableAttribute("0")]
private ​​  ;
    internal ​​ (​​  );
    public UInt32 ();
    public void (UInt32 );
    public UInt32 ();
    public byte ();
    public sbyte ();
    public ushort  ();
    public short  ();
    public int  ();
    public UInt32 ();
    public int  ();
    public int  ();
    public short  ();
    public ushort  ();
    public short  ();
    public long  ();
    public ushort  ();
    public UInt32 ();
    public UInt32 ();
    public void (Byte[] , int , int );
    public void (Stream , int );
    public UInt32 (bool );
    public void (UInt32 );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    public  (string );
    private string ();
    protected virtual string  ​ ();
    public sealed virtual IList`1< >  ​ ();
    public sealed virtual IList`1<int>  ​ ();
}
internal class  ​ : object {
    public bool ;
    public bool ;
    public bool ;
    public bool ;
    public UInt32 ;
    [NullableContextAttribute("1")]
public  ​(ParagraphPropertyExceptions );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    protected  (SerializationInfo , StreamingContext );
    public  (string );
    public  (string , Exception );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class  ​ : object {
    private    ;
    public    ();
    private void (   );
    protected abstract virtual  ​  ​​ ();
    protected abstract virtual  ​  ​​ ();
    public  ​ ();
    public  ​ ();
    public static double ( ​[] );
    public static double ( ​[] );
    public static double ( ​[] );
    private static  ​ ( ​[] , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class   : List`1< > {
    public  (int );
    public  (IEnumerable`1< > );
    public string (int );
}
internal abstract class  ​ : object {
    private int ;
    private bool ;
    public bool ();
    private void (bool );
    public void ();
    protected void ();
    public virtual int GetHashCode();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class   : object {
    public   ;
    public   ;
    [NullableContextAttribute("1")]
public  (  ,   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    private string ;
    public  ​(string ,  ​ );
    public string ();
    public virtual   ​​ ( );
    public virtual void  ​​ ( ,     );
    public virtual double  ​​ ( );
    public virtual bool  ​​ (   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class   : object {
    private static    ;
    private static    ;
    private static  ();
    public static    ();
    public static    ();
    public static   (  ,   ,  );
    public static   (  ,   ,  , int );
    public static   (  ,  );
    public static   (  ,   ,  );
    public static   (  ,  );
    public static   (  ,   ,  , int );
    public static   (  ,   ,  );
    public static   (  ,   ,  , int );
    public static   (  ,   ,  );
    public static   (  ,   ,  , int );
    [NullableContextAttribute("2")]
public static   ( ,   ,   ,  );
    [NullableContextAttribute("2")]
public static void ( ,   ,   ,    ,  );
    public static   ( ,   ,   ,  , int );
    [NullableContextAttribute("2")]
public static void ( ,   ,   ,    ,  , int );
    public static   (  , double ,  ,  , double );
    public static   (  , double ,  ,  , double , int );
    public static   (   ,   );
    public static   (   ,   );
    public static   (   ,   , int );
    public static   (   ,   , int );
    public static   (   ,   );
    public static   (   ,   );
    public static   (   ,   , int );
    public static   (   ,   , int );
    public static   (  ,   , bool );
    public static   (  ,   , bool );
    public static   (  ,   , bool );
    public static   (  ,   , bool );
    public static double (  );
    public static double (  );
    public static double (  );
    public static double (  );
    public static bool (  );
    public static bool (  );
    public static string (  );
    public static string (  );
    public static string (  );
    public static string (  );
    public static   (  , long , long );
    public static   (  , double );
    public static   (  , double );
    public static    (   , double );
    public static   (  , double );
    public static   (  , double );
    public static   (  , double );
    public static   (  , double );
    public static   (  , double );
    public static   (  , double );
    public static   (  , double );
    public static   (  , double );
    public static   (  );
    public static   (  );
    public static   (  );
    public static   (  );
    public static   (  , long , long );
    public static   (  , long , long );
    public static   (  , double , double );
    public static   (  , double , double );
    public static   (  );
    public static   (  );
    public static   (  );
    public static   (  );
    public static    (  );
    public static    (  );
    public static    (  );
    public static    (  );
    public static   (Int32[] );
    public static   (Int64[] );
    public static   (Double[] );
    public static double (double );
    public static bool (  ,   , double );
    public static   (  , double , bool );
    public static   (  , bool );
    private static void (   ,   );
    public static   (   );
    public static void (   ,   );
    public static   (   );
    public static double (  ,   ,   );
    public static double (  ,   ,   );
    internal static void (  , int , int , double , List`1<bool> );
    public static   (  , double );
    public static   (  , double );
    internal static void (  , int , int , double , List`1<bool> );
    public static   (  , double );
    public static   (  , double );
    private static int (int , int , Boolean[]& );
    private static int (int , int , Boolean[]& );
    public static   (  , double , bool );
    public static   (  , double , bool );
    public static   (  , double , bool );
    public static   (  , double , bool );
    public static   (  , bool );
    public static   (  , int , bool );
    public static  (  ,   );
    public static  (  ,   , int );
    public static   (  , double , double , int );
    public static   (  , double , double , int );
    private static void (   , int );
    public static void (   );
    private static void (   , int );
    public static void (   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class  ​ :  ​ {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private protected    { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private protected    { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public    { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public    { get; }
    [NullableContextAttribute("2")]
private protected abstract virtual   ​​ ();
    [NullableContextAttribute("2")]
private protected abstract virtual   ​​ ();
    private protected abstract virtual void  ​​ ( );
    private protected abstract virtual void  ​​  ( );
    private protected abstract virtual void  ​​  ( );
    private protected abstract virtual bool  ​​  ( );
    private protected abstract virtual void  ​​ ();
    [NullableContextAttribute("2")]
private protected abstract virtual bool  ​​  ( );
    private protected abstract virtual void  ​​  ([] , int );
    private protected abstract virtual IEnumerator`1<>  ​​  ();
    [NullableContextAttribute("2")]
public  ();
    [NullableContextAttribute("2")]
public  ();
    public sealed virtual void Add( );
    [NullableContextAttribute("2")]
public sealed virtual bool Contains( );
    public sealed virtual IEnumerator`1<> GetEnumerator();
    private sealed virtual override bool  ​​  ();
    private sealed virtual override bool  ​​  ( );
    private sealed virtual override void  ​​ ();
    private sealed virtual override void  ​​  ([] , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   : object {
    private static   (  ,   , bool , bool );
    public static   (  ,   , bool );
    public static   (  ,   , bool , int );
    public static   (  ,   , bool );
    public static   (  ,   , bool , int );
}
internal class  ​ :  ​ {
    [NullableContextAttribute("1")]
protected virtual string  ​​ (bool ,    ,  ,   & , String& , String& , Int32& );
}
internal interface   {
    public abstract virtual void  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class  ​ :    {
    protected WordDocument ;
    protected  ​ ;
    protected ParagraphPropertyExceptions ;
    protected SectionPropertyExceptions ;
    protected int ;
    protected int ;
    protected int ;
    protected int  ;
    protected int  ;
    protected bool  ;
    protected     ;
    private Nullable`1<short>  ;
    public  ​( ​ ,    , XmlWriter );
    public  ​( ​ ,    );
    public abstract virtual void   ​ (WordDocument );
    protected int (int , UInt32 );
    protected int (int , List`1<short> , UInt32 );
    protected int (int , TablePropertyExceptions , List`1<short> , Int32& , int , UInt32 );
    protected List`1<short> (int , UInt32 );
    protected int (int , Int32& , UInt32 , bool );
    protected int (int , UInt32 , bool );
    protected int (int , UInt32 );
    protected int (int );
    protected int (int , int , bool );
    protected int (string , CharacterPropertyExceptions , int );
    protected void (string , int , CharacterPropertyExceptions , bool );
    protected virtual Grffld  ​​ (int );
    private void (Grffld );
    protected void (string );
    protected void (int );
    protected void (IList`1<BookmarkFirst> , int );
    protected void (int );
    protected void (IList`1<BookmarkFirst> , int );
    protected bool (ShapeContainer );
    protected List`1<string> (string , List`1<int> );
    protected List`1<int> (string , int );
    protected Nullable`1<int> (List`1<char> , int , char );
    private static int (IList`1<char> , int );
    protected bool (ParagraphPropertyExceptions );
    protected bool (CharacterPropertyExceptions );
    private  (CharacterPropertyExceptions );
    protected bool (int );
    protected ParagraphPropertyExceptions (int , bool );
    protected ParagraphPropertyExceptions (int );
    protected SectionPropertyExceptions (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    private String[] ;
    private String[] ;
    private String[] ;
    private String[] ;
    private String[] ;
    public  (string );
    private string ();
    protected virtual string  ​ ();
}
internal class  ​ : Exception {
    [NullableContextAttribute("1")]
public  ​(string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class   : object {
    private static Regex ;
    protected string ;
    private string ;
    private static  ();
    public sealed virtual string  ​ ();
    public sealed virtual string  ​ ();
    protected abstract virtual string  ​ ();
    protected void (string );
    internal static bool (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    public  ​( ​ );
    public virtual void   ​ (WordDocument );
    protected virtual Grffld  ​​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   : object {
    [DebuggerBrowsableAttribute("0")]
public static int ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private Stream ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private object  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    public  (int , Stream );
    public  (int , Byte[] );
    public  (int );
    private static  ();
    public bool ();
    public void (bool );
    public bool ();
    internal  ();
    internal void ( );
    public int ();
    public void (int );
    public int ();
    public Byte[] ();
    public void ();
    public void  ();
    internal void  ();
    protected virtual void  ​ (bool );
    private sealed virtual override void  ​  ();
}
[DefaultMemberAttribute(" ")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ : object {
    [DebuggerBrowsableAttribute("0")]
private static [] ;
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
public  ​  { get; public set; }
    [DebuggerBrowsableAttribute("0")]
public  ​   { get; }
    private static  ​();
    public  ​ ();
    public void ( ​ );
    public  ​ ();
    public void ( ​ );
    public  ​ ();
    public void ( ​ );
    public  ​ ();
    public void ( ​ );
    protected virtual IEnumerable`1<>  ​​ ();
    public virtual  ​  ​​ ( );
    public virtual void  ​​ ( ,  ​ );
    public  ​ ( );
    public static  ( );
    [IteratorStateMachineAttribute(" ​/")]
public sealed virtual IEnumerator`1<KeyValuePair`2<,  ​>> GetEnumerator();
    private sealed virtual override IEnumerator  ​​ ();
    public sealed virtual string ToString();
    public sealed virtual bool Equals(object );
    public sealed virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : object {
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> ;
    private    ;
    private int ;
    private ReadOnlyCollection`1<  > ;
    private ​  ;
    private ​ (   , int );
    public    ();
    private void (   );
    public int ();
    private void (int );
    public ReadOnlyCollection`1<  > ();
    private void (ReadOnlyCollection`1<  > );
    public ​  ();
    public void (​  );
    public double ();
    public bool ();
    internal static ​  (   , int );
    internal static void (​  );
    public bool  ();
    public bool  ();
    private    (int );
    private int ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  :    {
    public int ;
    public int ;
    public    ;
    public    ;
    public int ;
    protected internal ​ (int , Byte[] , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : Exception {
    public ​ (string );
    protected ​ (SerializationInfo , StreamingContext );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : Exception {
    public ​ (string );
    public ​ (string , Exception );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : object {
    internal int ;
    internal float ;
    internal int ;
    internal Single[] ;
    internal Int32[] ;
    public ​ (float );
    public virtual float ​ ​ ();
    public virtual int ​ ​ ();
    public virtual int ​ ​ ();
    public virtual float ​ ​ (int );
    public virtual int ​ ​ (int );
    public virtual void ​ ​ (float , int );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class ​  : object {
    [ExtensionAttribute]
public static bool (DocumentModel , Nullable`1<DocxFormat> );
    [ExtensionAttribute]
public static int (DocumentModel , int , int , int );
    [ExtensionAttribute]
public static int (DocumentModel );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​  : object {
    private Byte[] ;
    private int ;
    private int ;
    public abstract virtual void ​ ​ ();
    public abstract virtual bool ​ ​ ();
    public abstract virtual void ​ ​ ();
    public virtual bool ​ ​ (int );
    protected void (Byte[] , int );
    protected int ();
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class ​  :   <  > {
    public ​ (    );
    public virtual    ​ ();
    public void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : ​  {
    private X509Crl ;
    internal ​ (Byte[] );
    public virtual Byte[] ​ ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​​  : object {
    [DebuggerBrowsableAttribute("0")]
[ThreadStaticAttribute]
private static  ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public static ​​  ();
    public sealed virtual void Dispose();
    public int ();
    public void (int );
    public int ();
    public void (int );
    public void ();
    public byte  ();
    public void (byte );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public long  ();
    public void (long );
    public void (Byte[] , int , int );
    public void (Byte[] , int , int );
    public void (Stream , int );
    public int (Stream , int );
    public int (int , Int32& );
    public int  ();
    public int (bool );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    private String[] ;
    private  ;
    public  (string ,  );
    private string ();
    protected virtual string  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    public static int ;
    private int ;
    private string ;
    public  ​( ​ ,    , XmlWriter , int , string );
    public  ​( ​ ,    , XmlWriter , string );
    public virtual void   ​ (WordDocument );
    protected virtual Grffld  ​​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    protected  (SerializationInfo , StreamingContext );
    public  (string );
    public  (string , Exception );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class  ​ :  ​< ​,  ​> {
    public  ​( ​ );
}
internal class   : ValueType {
    [DebuggerBrowsableAttribute("0")]
public double ;
    [DebuggerBrowsableAttribute("0")]
public double ;
    [DebuggerBrowsableAttribute("0")]
public long ;
    public  (  );
    public  (  );
    public  (  , double );
    public  (  , double );
    public  (long , long , long );
    public  (double , double , long );
    [NullableContextAttribute("1")]
public string (int );
    public static bool op_Equality(  ,   );
    public static bool op_Inequality(  ,   );
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
public virtual bool Equals(object );
    public void ();
    [IsReadOnlyAttribute]
public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class  ​ :  ​< ​> {
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private protected  ​  { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private protected  ​  { get; }
    internal  ​(   );
    public    ();
    public  ​ ();
    public void ( ​ );
    public  ​ ();
    public void ( ​ );
    public  ​ ();
    public void ( ​ );
    private protected virtual ​​  ​​ ();
    private protected virtual int  ​​ ();
    [NullableContextAttribute("2")]
private protected virtual  ​  ​​ ();
    [NullableContextAttribute("2")]
private protected virtual  ​  ​​ ();
    private protected virtual void  ​​ ( ​ );
    private protected virtual void  ​​  ( ​ );
    private protected virtual void  ​​  ( ​ );
    private protected virtual bool  ​​  ( ​ );
    private protected virtual void  ​​ ();
    [NullableContextAttribute("2")]
private protected virtual bool  ​​  ( ​ );
    private protected virtual void  ​​  ( ​[] , int );
    [IteratorStateMachineAttribute(" ​/")]
private protected virtual IEnumerator`1< ​>  ​​  ();
    private protected virtual void  ​​ (Array , int );
    [IteratorStateMachineAttribute(" ​/")]
private protected virtual IEnumerator  ​​ ();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class   : object {
    public   ;
    public   ;
    public bool ;
    [NullableContextAttribute("1")]
public  (  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    private int ;
    private string ;
    private string ;
    internal  ​(string );
    public int ();
    public void (int );
    public string ();
    public void (string );
    public string ();
    protected virtual string  ​​ (bool ,    ,  ,   & , String& , String& , Int32& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    [NullableAttribute("2")]
public   { get; public set; }
    internal void (  ,  , bool );
    public void (   );
    internal void (  ,  , bool );
    public void (  );
    public void (  );
    public void (  );
    public bool ( ,  ,   ,   );
    public bool ( ,  ,   );
    public bool ( ,  ,    ,   );
    public bool ( ,  ,    );
    [NullableContextAttribute("2")]
public  ();
    [NullableContextAttribute("2")]
public void ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class  ​ :  ​< ​> {
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    internal  ​( ​ );
    public  ​ ();
    private protected virtual ​​  ​​ ();
    public void (double );
    public void (double );
    private protected virtual void  ​​ ( ​ );
    private protected virtual void  ​​  ( ​ );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class   : object {
    public   ;
    public   ;
    public   ;
    public int ;
    public List`1< > ;
    public  (  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ : object {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private CultureInfo  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("0")]
private   <int>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool>  ;
    private  ​(bool , bool , bool , bool , bool , bool , bool , double  , string  ,      ,      ,      ,   , double  , double  , CultureInfo  , double  );
    public  ​(bool , bool , bool , bool , bool , double ,     ,      ,      ,      ,   );
    public  ​(bool , bool , bool , bool , bool , double ,     ,      ,      ,      ,   , double  , double  , CultureInfo  , double  );
    public double ();
    private void (double );
    public bool ();
    public bool ();
    public bool  ();
    public bool  ();
    public bool  ();
    public bool  ();
    public bool  ();
    public double ();
    public string  ();
    public      ();
    public      ();
    public      ();
    public   ();
    public      ();
    public double ();
    public double ();
    public double ();
    public CultureInfo  ();
    private int  ();
    public bool  ();
    private static bool (string );
    public  ​ (double );
    public  ​  ();
    public  ​ (    );
    public  ​ (double );
    public  ​ (    );
    public  ​ (string , double );
    public  ​ (bool , bool );
    private  ​ (string , bool , bool , double ,     );
    public virtual int GetHashCode();
    public virtual bool Equals(object );
    public sealed virtual bool Equals( ​ );
    public     (    );
}
internal static class   : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ : object {
    private    ;
    private XmlWriterSettings ;
    private WordDocument ;
    private int ;
    public  ​(WordDocument );
    public WordDocument ();
    public void (WordDocument );
    public    ();
    public void (   );
    public XmlWriterSettings ();
    public void (XmlWriterSettings );
    internal int ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    private String[] ;
    private String[] ;
    private String[] ;
    public  (string );
    private string ();
    protected virtual string  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class  ​ : object {
    internal abstract virtual double  ​​ ();
    internal abstract virtual void  ​​ (double );
    internal abstract virtual double  ​​ ();
    internal abstract virtual void  ​​ (double );
    [NullableContextAttribute("2")]
internal abstract virtual     ​​ (double , double );
    internal abstract virtual double  ​​ ();
    internal abstract virtual void  ​​ (double );
    internal abstract virtual double  ​​ ();
    internal abstract virtual void  ​​ (double );
    internal abstract virtual  ​  ​​ ( ​ );
    internal abstract virtual  ​  ​​ (double );
}
[NullableContextAttribute("1")]
internal interface   {
    public abstract virtual string  ​ ();
    public abstract virtual string  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    private CharacterRange ;
    public  ​( ​ ,    , CharacterRange );
    public virtual void   ​ (WordDocument );
    protected virtual Grffld  ​​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   : object {
    private Byte[] ;
    private Stream ;
    public  (Stream );
    public long (long );
    public byte ();
    public ushort ();
    public int ();
    public UInt32 ();
    public long ();
    public ulong ();
    public Byte[] (int );
    public Byte[] (int , Int32& );
    public void (byte );
    public void (ushort );
    public void (int );
    public void (long );
    public void (UInt32 );
    public void (Byte[] );
    public void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    private bool ;
    public  ​(bool ,  ​ );
    public bool ();
    public virtual ​​  ​​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : ​  {
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> ;
    public ​ ( ​ );
    public virtual  ​ ​ ​ ();
    public virtual bool ​ ​ ();
    public virtual bool ​ ​ ();
    public virtual double ​ ​ ();
    public virtual double ​ ​ ();
    public virtual bool ​ ​ ();
    public virtual bool ​ ​ ();
    public virtual string ToString();
    private static bool ( ​<T> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : ​  {
    public long ;
    public long ;
    public long ;
    protected internal ​ (int , Byte[] , int , int );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : Exception {
    public ​ (string );
    protected ​ (SerializationInfo , StreamingContext );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : object {
    private char ;
    private char ;
    private char ;
    private char ;
    private char ;
    public ​ (char , char , char , char , char );
    public char ();
    public void (char );
    public char ();
    public void (char );
    public char ();
    public void (char );
    public char ();
    public void (char );
    public char ();
    public void (char );
    private string ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : ​  {
    private Int64[] ;
    private Boolean[] ;
    private ​ [] ;
    private   [] ;
    private   [] ;
    private    ;
    private    ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    private Int32[][]  ;
    private Int32[][]  ;
    private Int32[][]  ;
    private static Int32[]  ;
    private static Int32[]  ;
    private static Int32[]  ;
    private static Int32[]  ;
    private static Int32[]  ;
    private static Int32[]  ;
    private static Int32[]  ;
    private static Int32[]  ;
    private Int32[][]  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static Int32[]  ;
    private static Int32[] ​;
    private static Int32[] ​;
    private static Int32[] ​;
    private Double[][] ​;
    private Int32[][] ​;
    private Boolean[][] ​;
    private ​ [] ​;
    private Int32[][]  ;
    private Int32[][]  ;
    private Boolean[][]  ;
    public ​ (   ,    ,    ,    ,    ,    ,    ,     ,     ,     );
    private static ​ ();
    protected virtual override void Finalize();
    public virtual int ​ ​ (int , int );
    public virtual int ​ ​ (int , int );
    public virtual      ​ (int ,    );
    public virtual void   ​ (int , int );
    public virtual void   ​  ();
    private static void (int ,    , ​  , ​  ,    ,    , Int32[] , Double[]  , Int32[]  , Boolean[]  , Int32[]  , Int32[]  , int  , bool  , int  , int  );
    private static int (​  , int );
    private static int (​  , ​  , bool , int , Int32[] , Int32[] , Int32[] , Int32[]  , Int32[]  , Int32[]  , int  , int  , int  );
    private static int (​  ,    , bool , int , Int32[] , Int32[] , Int32[] , int  , int  , int  );
    private static int (​  , ​  , bool , int , Int32[] , Int32[] , Int32[] , Int32[]  , Int32[]  , int  , int  , int  );
    private static int (​  ,    , bool , int , Int32[] , Int32[] , Int32[] , int  , int  , int  );
    private static int (​  , ​  , bool , int , Int32[] , Int32[] , Int32[] , Int32[]  , Int32[]  , Int32[]  , int  , int  , int  );
    private static void (Byte[] , Int32[] , Boolean[] , int );
    public virtual void ​ ​ (int , int );
    public virtual int   ​ (int , int , int );
    public virtual int   ​ (int , int , int );
    public virtual bool   ​ (int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​  : object {
    private long ;
    private long ;
    private int ;
    private bool ;
    private bool ;
    protected object ;
    protected object ;
    public ​ (bool , object , object , int );
    public sealed virtual void ​ ​ (long );
    public sealed virtual void ​ ​ ();
    public sealed virtual void ​ ​ (long );
    public sealed virtual void ​ ​ ();
    public sealed virtual void ​ ​ ();
    public sealed virtual void ​ ​ (double );
    public sealed virtual void ​ ​ ();
    protected abstract virtual void ​ ​ (int , Boolean& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : ​  {
    private    ;
    private bool ;
    private Int32[] ;
    private Int32[] ;
    private Int32[] ;
    private Int32[] ;
    private Byte[] ;
    private bool  ;
    private int  ;
    private int  ;
    public ​ (   );
    public virtual void ​ ​ ();
    public virtual void ​ ​ (  [] , Int32& , int , Byte[][] , Int32& , int );
    private void (  [] , Int32& , Byte[][] , Int32& );
    private void (  [] , Int32& , Byte[][] , Int32& , int );
    private void (  [] , int , Byte[][] , int );
    private void (  [] , int , Byte[][] );
    private void ();
    private void ();
    private static int (double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​  : object {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private   <> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double> ;
    protected ​ (IList`1<> );
    protected ​ ( , int , int );
    public IList`1<> ();
    public  ();
    public  ();
    public int ();
    public int ();
    public double ();
    public abstract virtual  ​ ​  (int , int );
    protected abstract virtual double ​ ​ ();
    [IteratorStateMachineAttribute("​ /")]
public IEnumerable`1<>  (int );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : object {
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Nullable`1<KeyValuePair`2<AsymmetricKeyParameter, X509Certificate>> ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public KeyValuePair`2<AsymmetricKeyParameter, X509Certificate>   { get; }
    private ​ (   );
    public static ​  (   );
    public KeyValuePair`2<AsymmetricKeyParameter, X509Certificate> ();
    public ISigner (bool , AsymmetricKeyParameter , string , object , string );
    public sealed virtual bool Equals(​  );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public virtual string ToString();
    private static KeyValuePair`2<AsymmetricKeyParameter, X509Certificate> (object , object , X509KeyStorageFlags );
    private static KeyValuePair`2<AsymmetricKeyParameter, X509Certificate> (X509Certificate2 );
    private static KeyValuePair`2<AsymmetricKeyParameter, X509Certificate> (X509Certificate2 );
    private static KeyValuePair`2<AsymmetricKeyParameter, X509Certificate> (Stream , Char[] );
    private static KeyValuePair`2<AsymmetricKeyParameter, X509Certificate> (string , Char[] );
    private static X509Certificate (Stream );
    private static X509Certificate (string );
    private sealed virtual override object ​ ​ ();
    private sealed virtual override object ​ ​ ();
    private sealed virtual override X509KeyStorageFlags ​ ​ ();
    public sealed virtual bool   ​ ();
    private sealed virtual override bool ​ ​ ();
    private sealed virtual override bool ​ ​ ();
    private sealed virtual override bool ​ ​ ();
    private sealed virtual override Byte[] ​ ​ (Byte[] , string , object );
    private sealed virtual override bool ​ ​ (Byte[] , Byte[] , string , object );
}
[NullableContextAttribute("1")]
internal interface ​​  {
    public abstract virtual ​   ​​ ​ ();
    public abstract virtual IEnumerable`1<​  > ​​ ​ ();
    public abstract virtual ​​  ​​ ​ (​   );
    public abstract virtual ​​  ​​ ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    private String[] ;
    public  (string );
    private string ();
    private void ();
    protected virtual string  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    private  ​ ;
    private XmlElement ;
    private XmlElement ;
    private SectionPropertyExceptions ;
    private CharacterPropertyExceptions ;
    private int ;
    private WordDocument ;
    public  ​(XmlWriter ,  ​ , WordDocument , CharacterPropertyExceptions );
    public  ​(XmlWriter ,  ​ , WordDocument , CharacterPropertyExceptions , SectionPropertyExceptions , int );
    public sealed virtual void   ​ (ParagraphPropertyExceptions );
    private static string (byte );
    private bool (List`1<SinglePropertyModifier> );
    private bool (ushort );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   : Exception {
    protected  (SerializationInfo , StreamingContext );
    public  (string );
    public  (string , Exception );
}
internal abstract class  ​ : object {
    private double ;
    private double ;
    public abstract virtual bool  ​​ ();
    public abstract virtual bool  ​​ ();
    public abstract virtual bool  ​​ ();
    public abstract virtual bool  ​​ ();
    public abstract virtual bool  ​​ ();
    public abstract virtual bool  ​​ ();
    public virtual bool  ​​ ();
    public double  ();
    protected void (double );
    public double  ();
    protected void (double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   : List`1< > {
    public  (int );
    public  (IEnumerable`1< > );
    public string (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    private    ;
    private  ​ ;
    private bool ;
    private string ;
    [NullableAttribute("2")]
private  ​ ;
    [NullableAttribute("2")]
public  ​  { get; public set; }
    public    ();
    [CompilerGeneratedAttribute]
public sealed virtual  ​  ​​ ();
    public bool ();
    public void (bool );
    public string ();
    public void (string );
    [NullableContextAttribute("2")]
public  ​ ();
    [NullableContextAttribute("2")]
public void ( ​ );
    private sealed virtual override     ​​ ();
    private sealed virtual override     ​​ ();
}
internal class   : Exception {
    [NullableContextAttribute("1")]
public  (string );
}
[NullableContextAttribute("1")]
internal interface  ​ {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<KeyValuePair`2<string, string>>   { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<KeyValuePair`2<string, object>>   { get; }
    public abstract virtual string  ​​ ();
    public abstract virtual string  ​​ ();
    public abstract virtual string  ​​ ();
    public abstract virtual bool  ​​ ();
    public abstract virtual bool  ​​ ();
    public abstract virtual IEnumerable`1<KeyValuePair`2<string, string>>  ​​ ();
    public abstract virtual IEnumerable`1<KeyValuePair`2<string, object>>  ​​ ();
    public abstract virtual string  ​​ (string , String[] );
    public abstract virtual Nullable`1<DateTime>  ​​ (string , String[] );
}
internal class   : MulticastDelegate {
    public  (object , IntPtr );
    [NullableContextAttribute("1")]
public virtual void Invoke(​ );
    public virtual IAsyncResult BeginInvoke(​ , AsyncCallback , object );
    public virtual void EndInvoke(IAsyncResult );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ : ​​ {
    private    ;
    private    ;
    private  ​ ;
    private Nullable`1<double> ;
    private    ;
    private  ​ ;
    private  ​ ;
    private string  ;
    private bool  ;
    private bool  ;
    private int  ;
    public    ();
    public  ​ ();
    public void ( ​ );
    public  ​ ();
    public void ( ​ );
    public    ();
    public void (   );
    public    ();
    public  ​ ();
    public double ();
    public void (double );
    public bool  ();
    public string  ();
    public void (string );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public int  ();
    public void (int );
    private protected virtual  ​ ​​​ ();
}
internal class   : ValueType {
    [IsReadOnlyAttribute]
public sealed virtual int Compare(  ,   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    private string ;
    public  ​(string );
    public string ();
    protected virtual string  ​​ (bool ,    ,  ,   & , String& , String& , Int32& );
}
internal interface   {
    public abstract virtual  <> GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :    {
    public  ​(XmlWriter );
    protected void (XmlElement , SinglePropertyModifier , string );
    protected virtual void  ​​ (XmlElement , SinglePropertyModifier , string , bool );
    protected void (XmlElement , string , string );
    protected void (XmlElement , string , string , string , string );
    protected XmlElement (XmlElement , string , string , bool );
    protected void (XmlElement , string , string , bool );
    protected void (XmlNode , XmlNode );
    protected void (BorderCode , XmlNode );
    protected void (XmlElement , ShadingDescriptor );
    protected string (byte );
    private string (ShadingDescriptor );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    private String[] ;
    private  ;
    public  (string ,  );
    private string ();
    private int ();
    protected virtual string  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    private XmlElement ;
    public  ​(XmlWriter );
    public sealed virtual void   ​ (ShapeType );
    public static string (ShapeType );
}
internal class   : Exception {
    [NullableContextAttribute("1")]
public  (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :    {
    public  ​( ​ ,    );
    public sealed virtual void   ​ (PropertySet );
    private static Dictionary (PropertySet );
    private void (int , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   : object {
    [DebuggerBrowsableAttribute("0")]
private IList`1< > ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
internal static int ;
    [DebuggerBrowsableAttribute("0")]
internal static int ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private ushort ;
    [DebuggerBrowsableAttribute("0")]
private StgType ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private Guid  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private Byte[]  ;
    [DebuggerBrowsableAttribute("0")]
private Byte[]  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private long  ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    private  (string , StgType , IList`1< > );
    private static  ();
    public sealed virtual int  ​ ();
    public sealed virtual void  ​ (int );
    public sealed virtual Byte[]  ​  ();
    public sealed virtual string  ​  ();
    public sealed virtual void  ​ (string );
    public sealed virtual ushort  ​  ();
    public sealed virtual void  ​ (ushort );
    public sealed virtual StgType  ​  ();
    public sealed virtual void  ​ (StgType );
    public sealed virtual   ​  ();
    public sealed virtual void  ​ ( );
    public sealed virtual int  ​ ();
    public sealed virtual void  ​ (int );
    public sealed virtual int  ​ ();
    public sealed virtual void  ​ (int );
    public sealed virtual int  ​ ();
    public sealed virtual void  ​ (int );
    public sealed virtual Guid  ​  ();
    public sealed virtual void  ​ (Guid );
    public sealed virtual int  ​ ();
    public sealed virtual void  ​ (int );
    public sealed virtual Byte[]  ​ ();
    public sealed virtual void  ​ (Byte[] );
    public sealed virtual Byte[]  ​  ();
    public sealed virtual void  ​ (Byte[] );
    public sealed virtual int  ​ ();
    public sealed virtual void  ​ (int );
    public sealed virtual long  ​  ();
    public sealed virtual void  ​ (long );
    public sealed virtual int CompareTo(object );
    public virtual bool Equals(object );
    private static ulong (Byte[] );
    public virtual int GetHashCode();
    public sealed virtual void  ​ (Stream );
    public sealed virtual void  ​ (Stream ,  );
    public sealed virtual string  ​  ();
    public sealed virtual    ​ ();
    public sealed virtual void  ​ (  );
    public sealed virtual    ​ ();
    public sealed virtual void  ​ (  );
    public sealed virtual   ​ ();
    public sealed virtual void  ​ ( );
    public sealed virtual    ​ ();
    public sealed virtual void  ​ (  );
    public sealed virtual    ​ ();
    public sealed virtual    ​ ();
    public sealed virtual    ​ ();
    internal static   (string , StgType , IList`1< > );
    internal static   (string , StgType );
    internal static   (string , StgType , IList`1< > );
    public virtual string ToString();
    public sealed virtual void  ​ (  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    private  ;
    private  ;
    private  ;
    private bool ;
    public  ​( ,  ,  ,  ​ );
    public  ();
    public  ();
    public  ();
    public bool ();
    public void (bool );
    public virtual   ​​ ( );
    public virtual void  ​​ ( ,     );
    public virtual double  ​​ ( );
    public virtual bool  ​​ (   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : object {
    private  ​ ;
    private int ;
    private int ;
    private ​  ;
    private ​  ;
    public int ();
    public void (int );
    public int ();
    public void (int );
    public ​  ();
    public void (​  );
    public ​  ();
    public void (​  );
    public  ​ ();
    public void ( ​ );
    internal static ​  ();
    internal static ​  (​  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  :    {
    public int ;
    public int ;
    public int ;
    public Byte[] ;
    protected internal ​ (int , Byte[] , int , int );
    public virtual string ToString();
}
internal class ​  : Exception {
    [NullableContextAttribute("1")]
protected ​ (SerializationInfo , StreamingContext );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : object {
    public static    (   , Func`2<  , object> );
    public static    (   ,    , Func`3<  ,   , object> );
    public static    (IList`1<  > , Func`2<IList`1<  >, object> );
    private static bool (Object[0...,0...] ,   & );
    private static Nullable`1<int> (int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : ​  {
    private   [][][][][] ;
    private Int32[][][][][][] ;
    private   [][][] ;
    private ​ [] ;
    private static double ;
    private Int32[] ;
    private    ;
    private ​   ;
    private float  ;
    private float  ;
    public ​ (   , ​  ,    ,    ,    );
    private static ​ ();
    public virtual void ​ ​ ();
    public virtual void ​ ​ ();
    private void ();
    private void ();
    public virtual void ​ ​ (int , int , int , int , int , Int32[][] , int );
    public virtual void ​ ​ (int , int , int , int , int , Int32[][] , int );
    public virtual void ​ ​ (int , int , int , int , int , Int32[][] , int );
    public virtual void ​ ​ (int , int , int , int , int , Int32[][] , int );
    public virtual void ​ ​ (int , int , int , int , int , Int32[][] , int );
    private float (int , float , int , int );
    private float (int , ​  );
    private void (int , int , int , int ,    , float , int );
    private static int (float );
    private static float (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  :    {
    private string ;
    private string ;
    public string ();
    public void (string );
    public string ();
    public void (string );
    public virtual    ​ ();
}
internal abstract class ​  : object {
    protected bool ;
    public abstract virtual void ​ ​ ();
    [NullableContextAttribute("1")]
public abstract virtual void ​ ​ (  [] , Int32& , int , Byte[][] , Int32& , int );
    public bool ();
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class ​  :   <  > {
    public virtual    ​ ();
    public double ();
    public double ();
    public double ();
    private void ( , double , Double& , Double& );
    public void ( , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class ​  : object {
    private static Dictionary`2<string, int> ;
    public static    ;
    private static ​ ();
    public static int (string );
    public static Byte[] (string , Stream );
    public static Byte[] (string , Byte[] , int , int );
    public static Byte[] (string , Byte[] );
    public static string (Byte[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​​  :     {
    [DebuggerBrowsableAttribute("0")]
private static String[] ;
    private static ​​ ();
    public virtual IEnumerable`1<string>    ​ ();
    public virtual        ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    public  (string );
    private string ();
    protected virtual string  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :    {
    private    ;
    private WordDocument ;
    private PictureDescriptor ;
    public  ​(XmlWriter , WordDocument ,    , PictureDescriptor );
    public sealed virtual void   ​ (OleObject );
    private void (OleObject ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    private Nullable`1<double> ;
    private Nullable`1<double> ;
    private int ;
    private     ;
    private     ;
    public  ( );
    public Nullable`1<double> ();
    public void (Nullable`1<double> );
    public Nullable`1<double> ();
    public void (Nullable`1<double> );
    public int ();
    public void (int );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public     ();
    private double ();
    public void (    ,     );
}
internal interface  ​ {
    public abstract virtual  ​  ​​ ( ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   : List`1< > {
    public  (int );
    public  (IEnumerable`1< > );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
internal interface  ​ {
    public abstract virtual  ​  ​​ ();
    public abstract virtual     ​​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class   : object {
    internal static void (   ,  , bool , List`1< > );
    internal static void (  ,  , bool , List`1< > , List`1<  > );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class  ​ :  ​<> {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal  ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public    { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private protected    { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public    { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private protected    { get; }
    public int ();
    private protected sealed virtual int  ​​ ();
    [NullableContextAttribute("2")]
public  ();
    [NullableContextAttribute("2")]
private protected sealed virtual   ​​ ();
    [NullableContextAttribute("2")]
public  ();
    [NullableContextAttribute("2")]
private protected sealed virtual   ​​ ();
    public void ( );
    public void  ( );
    private protected sealed virtual void  ​​  ( );
    public void  ( ,  );
    public void  ( );
    public void  ( ,  );
    private bool  ( );
    private protected sealed virtual bool  ​​  ( );
    private void ();
    private void ();
    private void ();
    private protected sealed virtual void  ​​ ();
    [NullableContextAttribute("2")]
public bool  ( );
    [NullableContextAttribute("2")]
private protected sealed virtual bool  ​​  ( );
    public void  ([] , int );
    private protected sealed virtual void  ​​  ([] , int );
    private protected sealed virtual void  ​​ (Array , int );
    [NullableContextAttribute("0")]
public <>  ();
    private protected sealed virtual IEnumerator`1<>  ​​  ();
    private protected sealed virtual IEnumerator  ​​ ();
    private void  ( );
    private void  ( ,  );
    internal void  ( );
    private void  ( );
    public  ​  ();
    public  ​  ();
    public sealed virtual object  ​​ ();
    public sealed virtual object  ​​ (bool );
}
internal class   : MulticastDelegate {
    public  (object , IntPtr );
    public virtual void Invoke();
    public virtual IAsyncResult BeginInvoke(AsyncCallback , object );
    public virtual void EndInvoke(IAsyncResult );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ : object {
    [DebuggerBrowsableAttribute("0")]
private static    [] ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private    []  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    private static  ​();
    public static  ​ ();
    public     ();
    public void (    );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public    []  ();
    public void (   [] );
    public string  ();
    public void (string );
    public double  ();
    public void (double );
    public      ();
    public void (    );
    public bool  ();
    public void (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class   : ValueType {
    [DebuggerBrowsableAttribute("0")]
public   ;
    [DebuggerBrowsableAttribute("0")]
public   ;
    [DebuggerBrowsableAttribute("0")]
public   ;
    public  (  ,   ,   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    protected virtual string  ​​ (bool ,    ,  ,   & , String& , String& , Int32& );
    internal static string (​​ , int , string );
    [IteratorStateMachineAttribute(" ​/")]
private static IEnumerable`1<  > (​​ );
    private static  ​ (​​ , Int32& );
}
internal interface   {
    public abstract virtual    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :    {
    public  ​(   , XmlWriterSettings );
    public sealed virtual void   ​ (DocumentProperties );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    private String[] ;
    public  (string );
    private string ();
    protected virtual string  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    private BlipStoreContainer ;
    private  ​ ;
    private FileShapeAddress ;
    private PictureDescriptor ;
    private    ;
    private XmlElement ;
    private XmlElement ;
    private XmlElement  ;
    private XmlElement  ;
    private XmlElement  ;
    private XmlElement  ;
    private static GroupShapeRecord  ;
    private List`1<byte>  ;
    private List`1<byte>  ;
    private StringBuilder  ;
    public  ​(XmlWriter ,    , FileShapeAddress , PictureDescriptor ,  ​ );
    public sealed virtual void   ​ (ShapeContainer );
    private void (GroupContainer );
    private void (ShapeContainer );
    private static string (   ,    ,    ,    );
    private static string (   );
    private string (Byte[] );
    private string (List`1<OptionEntry> );
    private string (PathParser );
    private string (ChildAnchor );
    private string (ChildAnchor );
    private StringBuilder (Shape , ChildAnchor , List`1<OptionEntry> , int );
    public static bool (List`1<OptionEntry> );
    private void (Shape );
    private string (UInt32 );
    private string (UInt32 );
    private string (UInt32 );
    private string (UInt32 );
    private string (FileShapeAddress );
    private string (UInt32 );
    private string (UInt32 );
    private string (UInt32 );
    private string (OptionEntry );
    protected  (BlipStoreEntry );
    private static void (StringBuilder , PictureDescriptor , bool );
    public static void (StringBuilder , FileShapeAddress , bool , List`1<OptionEntry> );
    public static void (StringBuilder , ChildAnchor , bool );
    public static bool (StringBuilder , List`1<OptionEntry> );
    public static string (OptionEntry );
    private static double (OptionEntry );
    private static bool (double );
    private static void (StringBuilder , string , string );
    private static string  (UInt32 );
    private static string (PositionVertical );
    private static string (PositionVerticalRelative );
    private static string (PositionHorizontal );
    private static string (PositionHorizontalRelative );
    internal static string (OptionEntry );
    private static string (Shape );
    private static bool (List`1<OptionEntry> );
}
internal class   : object {
    internal static   ;
    internal static ​ ;
    internal static long ;
    internal static   ;
    internal static   ;
    internal static   ;
    internal static ​ ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static   ;
    internal static    ;
    internal static    ;
    internal static   ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static   ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static   ;
    internal static ​  ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static long ​;
    internal static   ​;
    internal static   ​;
    internal static   ​;
    internal static long ​;
    internal static   ​;
    internal static   ​;
    internal static    ;
    internal static    ;
    internal static ​  ;
    internal static   ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static int  ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static long  ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static   ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static ​  ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static ​   ;
    internal static long   ;
    internal static     ;
    internal static ​   ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static long   ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static long   ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static long   ;
    internal static ​   ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static ​   ;
    internal static     ;
    internal static   ​ ;
    internal static  ​ ;
    internal static ​ ​ ;
    internal static   ​ ;
    internal static   ​ ;
    internal static   ​ ;
    internal static   ​ ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static ​   ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static ​   ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static long   ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static int   ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static    ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static    ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static long   ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static long   ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static ​   ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static int   ;
    internal static   ​ ;
    internal static   ​ ;
    internal static long ​ ;
    internal static   ​ ;
    internal static   ​ ;
    internal static   ​ ;
    internal static   ​ ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static    ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static ​   ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static    ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static ​   ;
    internal static int   ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static ​   ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static ​   ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static   ​ ;
    internal static   ​ ;
    internal static   ​ ;
    internal static long ​ ;
    internal static   ​ ;
    internal static   ​ ;
    internal static   ​ ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static    ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static long   ;
    internal static ​   ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static ​   ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static ​   ;
    internal static     ;
    internal static     ;
    internal static long   ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static ​   ;
    internal static int   ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static long   ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static    ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static   ​ ;
    internal static   ​ ;
    internal static   ​ ;
    internal static   ​ ;
    internal static   ​ ;
    internal static  ​ ;
    internal static   ​ ;
    internal static     ;
    internal static UInt32 (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :    {
    private PropertySet ;
    public  ​( ​ , PropertySet ,    );
    public sealed virtual void   ​ (PropertySet );
}
[NullableContextAttribute("1")]
internal interface   {
    public abstract virtual int  ​ ();
    public abstract virtual void  ​ (int );
    public abstract virtual Byte[]  ​ ();
    public abstract virtual void  ​ (Byte[] );
    public abstract virtual Byte[]  ​  ();
    public abstract virtual string  ​  ();
    public abstract virtual int  ​ ();
    public abstract virtual void  ​ (int );
    public abstract virtual Byte[]  ​  ();
    public abstract virtual void  ​ (Byte[] );
    public abstract virtual string  ​  ();
    public abstract virtual ushort  ​  ();
    public abstract virtual void  ​ (ushort );
    public abstract virtual void  ​ (Stream ,  );
    public abstract virtual int  ​ ();
    public abstract virtual void  ​ (int );
    public abstract virtual void  ​ (string );
    public abstract virtual int  ​ ();
    public abstract virtual void  ​ (int );
    public abstract virtual long  ​  ();
    public abstract virtual void  ​ (long );
    public abstract virtual int  ​ ();
    public abstract virtual void  ​ (int );
    public abstract virtual int  ​ ();
    public abstract virtual void  ​ (int );
    public abstract virtual   ​  ();
    public abstract virtual void  ​ ( );
    public abstract virtual StgType  ​  ();
    public abstract virtual void  ​ (StgType );
    public abstract virtual Guid  ​  ();
    public abstract virtual void  ​ (Guid );
    public abstract virtual void  ​ (Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class  ​ :  ​ {
    public virtual bool  ​​ ();
    public abstract virtual   ​​ ( );
    public abstract virtual void  ​​ ( ,     );
    public abstract virtual double  ​​ ( );
    public abstract virtual bool  ​​ (   );
    public  ​ ();
    public  ​ ();
    public T ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​  : object {
    public static ​  ;
    private static ​ ();
    public abstract virtual  ​ ​ ​ ();
    public abstract virtual bool ​ ​ ();
    public abstract virtual bool ​ ​ ();
    public abstract virtual double ​ ​ ();
    public abstract virtual double ​ ​ ();
    public abstract virtual bool ​ ​ ();
    public abstract virtual bool ​ ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class ​  : Dictionary`2<int,   > {
    [DebuggerBrowsableAttribute("0")]
private static string ;
    [DebuggerBrowsableAttribute("0")]
private static int ;
    [DebuggerBrowsableAttribute("0")]
private static int ;
    [DebuggerBrowsableAttribute("0")]
private List`1<> ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    protected internal ​ (Byte[] );
    private static ​ ();
    public virtual string ToString();
    public static ​  (Byte[] );
    public virtual void ​ ​ (Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : object {
    private bool ;
    internal ​ (bool );
    internal ulong (Byte[] );
    internal UInt32 (Byte[] );
    internal ushort (Byte[] );
    internal string (Byte[] );
    internal Byte[] (ushort );
    internal Byte[] (UInt32 );
    internal Byte[] (ulong );
    internal List`1<byte> (List`1<UInt32> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : object {
    [DebuggerBrowsableAttribute("0")]
private IList`1<  > ;
    public IList`1<  > ();
    [IteratorStateMachineAttribute("​ /")]
public sealed virtual IEnumerator`1<object> GetEnumerator();
    private sealed virtual override IEnumerator ​ ​ ();
    public sealed virtual ​    ​ ();
    public sealed virtual object   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​  :    {
    private static String[][] ;
    protected internal    ;
    protected internal    ;
    protected internal int ;
    internal    ;
    internal    ;
    public ​ (   , int ,    ,    );
    private static ​ ();
    public virtual void ​ ​ (   );
    public virtual int ​ ​ ();
    public static String[][] ();
    public abstract virtual void ​ ​ ();
    public abstract virtual void ​ ​ ();
    public static ​  (   ,    , float ,    ,    );
    private static ​  (string , float );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  :    {
    private string ;
    private string ;
    private string ;
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public virtual    ​ ();
}
internal class ​  : object {
    public int ;
    [NullableAttribute("1")]
public Int32[] ;
    public int ;
    public int ;
    public int ;
    public int ;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  :    {
    [DebuggerBrowsableAttribute("0")]
private  ​  ;
    public ​ (    ,  ​  );
    public  ​  ();
    public virtual    ​ ();
    public virtual string   ​ ();
    public virtual string ToString();
    public sealed virtual int CompareTo(​  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : object {
    private string ;
    private string ;
    private Byte[] ;
    private ​ [] ;
    public ​ (string , string , Byte[] , ​ [] );
    public string ();
    public string ();
    public Byte[] ();
    public ​ [] ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​​  : ​   {
    private Byte[] ;
    private UInt32 ;
    private UInt32 ;
    private ​​ (Byte[] , UInt32 , UInt32 );
    internal static ​​  (​​  , UInt32 , bool );
    internal virtual UInt32 ​  ​ (​​  , Nullable`1& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    public  (string );
    private string ();
    protected virtual string  ​ ();
    public sealed virtual IList`1< >  ​ ();
    public sealed virtual IList`1<int>  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    private  ​ ;
    private XmlElement ;
    private XmlElement ;
    private CharacterPropertyExceptions ;
    public  ​(XmlWriter ,  ​ , CharacterPropertyExceptions );
    public sealed virtual void   ​ (TablePropertyExceptions );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    protected  (SerializationInfo , StreamingContext );
    public  (string );
    public  (string , Exception );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class  ​ :  ​ {
    private  ;
    private  ;
    protected  ​( );
    protected  ​( ,  );
    public  ();
    private void ( );
    public  ();
    private void ( );
    protected sealed virtual  ​  ​​ ();
    protected sealed virtual  ​  ​​ ();
}
internal class   : ValueType {
    [DebuggerBrowsableAttribute("0")]
public long ;
    [DebuggerBrowsableAttribute("0")]
public long ;
    [DebuggerBrowsableAttribute("0")]
public long ;
    public  (  );
    public  (  , double );
    public  (long , long , long );
    public  (double , double , double );
    public  (  );
    public  (  , double );
    public static bool op_Equality(  ,   );
    public static bool op_Inequality(  ,   );
    public static   op_Addition(  ,   );
    public static   op_Subtraction(  ,   );
    [NullableContextAttribute("1")]
public virtual string ToString();
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
public virtual bool Equals(object );
    [IsReadOnlyAttribute]
public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ : ​​ {
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    private  ​ ;
    private bool ;
    public  ​(bool );
    [CompilerGeneratedAttribute]
public sealed virtual  ​  ​​ ();
    public bool ();
    public void (bool );
    public  ​ ();
    private protected virtual  ​ ​​​ ();
    internal void ( ​ );
    private sealed virtual override     ​​ ();
}
internal class   : ValueType {
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
public sealed virtual int Compare(  ,   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class  ​ :  ​ {
    private static String[] ;
    private string ;
    private string ;
    private static  ​();
    private static bool (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string (bool ,    ,  );
    protected abstract virtual string  ​​ (bool ,    ,  ,   & , String& , String& , Int32& );
    public sealed virtual   ​​ ( );
    public sealed virtual void  ​​ ( ,     );
    public sealed virtual double  ​​ ( );
    public sealed virtual bool  ​​ (   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   : object {
    private  ;
    private  ;
    [NullableAttribute("2")]
private   ;
    [NullableAttribute("2")]
private   ;
    private List`1< > ;
    private List`1< > ;
    private List`1<  > ;
    private List`1< >  ;
    private List`1<long>  ;
    private List`1< >  ;
    private List`1< >  ;
    private int  ;
    private long  ;
    private bool  ;
    private bool  ;
    internal bool  ;
    internal bool  ;
    private bool  ;
    private bool  ;
    private long  ;
    [NullableAttribute("2")]
protected   ;
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public long  ();
    public void (long );
    private bool (  ,   );
    private void (  ,   ,  & );
    private static bool (int );
    private static bool (  );
    private static bool (  );
    private static bool (  );
    private static bool (   );
    private static    (  );
    private static bool (  );
    private static double (  ,   );
    private static long (  , long );
    private static bool (  );
    private static bool (  );
    private static bool (  );
    private static void ( & ,  & );
    private static   (  );
    private static bool (  ,   );
    private static void  (  );
    private static     (  );
    private static     (  );
    private static bool (   );
    private static bool  (  );
    private static    (  );
    private static     (  );
    private static     (  );
    private static void (  ,   ,   );
    private static void (  ,   );
    private static void (  ,   );
    private static double (  );
    private static double (  ,   ,   );
    [NullableContextAttribute("2")]
private static   (  );
    [NullableContextAttribute("2")]
private static bool (  ,   );
    private static void  (  );
    private static bool  (  );
    private static void (  );
    private static bool (  );
    protected void ();
    public void ();
    protected void ();
    private void (long );
    private bool (Int64& );
    private bool (long );
    private    ();
    private void (   ,  , bool );
    public void (  );
    public void (  );
    public void (  );
    protected void (  ,  , bool );
    protected void (  ,  , bool );
    protected void (   );
    private bool  (  );
    private bool  (  );
    private void  (  );
    private void  (  );
    private static bool (  ,   );
    private void  (  );
    private static void (  ,   );
    private void (long );
    private void  (  );
    [NullableContextAttribute("2")]
private bool ( & );
    private   (  ,   ,   , bool );
    private   (  ,   ,   );
    private static void (  ,   );
    private static   (  ,   );
    private    ();
    private   (  ,   );
    private void  (  );
    private static    (  );
    private   (  ,   ,   );
    private void  (  );
    private void (long );
    protected void ( ,  );
    private void (long );
    private void ();
    private void (  ,   , long );
    private static    (  );
    private static void (  ,   );
    private bool  (long );
    private void ();
    private void (  ,   );
    private static bool (  ,    , Int64& , Int64& );
    private static bool  (  );
    private static void (  , bool );
    private void (  );
    private    (  );
    private void  (  );
    private void (long );
    private    (  );
    private static bool  (  );
    private void (  ,   );
    private void (  ,   , bool );
    private void (  ,   , bool );
    private static void (  );
    private static bool (  ,   ,   );
    private static bool (  );
    private static   (  , bool );
    private void ();
    private static   (  );
    private static  (  ,   );
    private static bool (  ,   );
    private void (  ,   );
    private void ();
    private static bool (  ,   );
    private static bool (  );
    [NullableContextAttribute("2")]
private static bool (  );
    private static   (  );
    [NullableContextAttribute("2")]
private void (  );
    private void (  ,   );
    private void (  );
    internal static bool (  , bool , bool ,   );
    protected bool (  ,   );
    private static    (  );
    private bool (  );
    private bool (  , List`1<int> );
    private void (  ,    );
    protected void (   ,   );
    public     ();
}
[DefaultMemberAttribute(" ")]
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class  ​ :  ​<> {
    [DebuggerBrowsableAttribute("0")]
private List`1<> ;
    public int Count { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public    { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private protected    { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public    { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private protected    { get; }
    [DebuggerBrowsableAttribute("0")]
public    { get; }
    public sealed virtual int get_Count();
    private protected sealed virtual int  ​​ ();
    [NullableContextAttribute("2")]
public  ();
    [NullableContextAttribute("2")]
private protected sealed virtual   ​​ ();
    [NullableContextAttribute("2")]
public  ();
    [NullableContextAttribute("2")]
private protected sealed virtual   ​​ ();
    public  (int );
    private void (int ,  );
    public sealed virtual void Add( );
    private protected sealed virtual void  ​​  ( );
    public void  ( );
    public void  ( );
    private void  (int );
    private protected sealed virtual bool  ​​  ( );
    public void ();
    public void ();
    [NullableContextAttribute("2")]
public sealed virtual bool Contains( );
    [NullableContextAttribute("2")]
private protected sealed virtual bool  ​​  ( );
    public sealed virtual int IndexOf( );
    private protected sealed virtual void  ​​ ();
    private protected sealed virtual void  ​​  ([] , int );
    private protected sealed virtual void  ​​ (Array , int );
    public Enumerator<>  ();
    private protected sealed virtual IEnumerator`1<>  ​​  ();
    private protected sealed virtual IEnumerator  ​​ ();
    private sealed virtual override   ​​ (int );
    private sealed virtual override void  ​​  (int ,  );
    private sealed virtual override void  ​​  (int ,  );
    private sealed virtual override void  ​​  (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   : object {
    public   ;
    [NullableAttribute("2")]
public   ;
    public   ;
    public   ;
    [NullableAttribute("2")]
public   ;
    public  (  ,   );
}
internal class  ​ :  ​ {
    private int ;
    private bool ;
    internal  ​(int , bool );
    public int ();
    public bool ();
    [NullableContextAttribute("1")]
protected virtual string  ​​ (bool ,    ,  ,   & , String& , String& , Int32& );
}
internal interface   {
    public abstract virtual   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    public  ​( ​ );
    public virtual void   ​ (WordDocument );
    protected virtual Grffld  ​​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    private String[] ;
    private String[] ;
    private String[] ;
    public  (string );
    private string ();
    protected virtual string  ​ ();
}
internal class  ​ :  ​ {
    [NullableContextAttribute("1")]
public  ​(string );
}
internal class   : object {
    private int ;
    private int ;
    public  (int , int );
    public int ();
    public int ();
    public int ();
    public bool (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ : object {
    public string ;
    public string ;
    private static Regex ;
    private static Regex ;
    public  ​(Char[] );
    public  ​(List`1<char> );
    public  ​(string );
    private static  ​();
    private void (string );
    public sealed virtual void Convert(T );
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   : object {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private List`1<ArrayList> ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public   Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public void (  );
    public void (  );
    private void ();
    public sealed virtual int IndexOf(  );
    public sealed virtual void Insert(int ,   );
    public sealed virtual void RemoveAt(int );
    public sealed virtual   get_Item(int );
    public sealed virtual void set_Item(int ,   );
    private int (  );
    public sealed virtual void Add(  );
    public sealed virtual void Clear();
    public sealed virtual bool Contains(  );
    public sealed virtual void CopyTo( [] , int );
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual bool Remove(  );
    [IteratorStateMachineAttribute(" /")]
public sealed virtual IEnumerator`1< > GetEnumerator();
    [IteratorStateMachineAttribute(" /")]
private sealed virtual override IEnumerator  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class  ​ : ​​ {
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    public  ​ ();
    private protected sealed virtual  ​ ​​​ ();
    internal void ( ​ );
    public abstract virtual ​​  ​​ ();
}
internal class ​  : object {
    private    ;
    private double ;
    public    ();
    public void (   );
    public double ();
    public void (double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  :    {
    public long ;
    public long ;
    public long ;
    protected internal ​ (int , Byte[] , int , int );
    public static long (double );
    public static double (long );
    public virtual string ToString();
    public virtual void ​ ​ (Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : Exception {
    public ​ (string );
    public ​ (string , string );
    protected ​ (SerializationInfo , StreamingContext );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : object {
    [DebuggerBrowsableAttribute("0")]
private Object[0...,0...] ;
    [DebuggerBrowsableAttribute("0")]
public object  { get; }
    public ​ (Object[0...,0...] );
    public ​ (Object[][] );
    public ​ (Object[] );
    public ​ (object );
    public sealed virtual int ​ ​ ();
    public sealed virtual int ​ ​ ();
    public sealed virtual object ​ ​ (int , int );
    public sealed virtual ​    ​ ();
    public sealed virtual object   ​ ();
    [IteratorStateMachineAttribute("​ /")]
public sealed virtual IEnumerable`1<object> ​ ​ (int );
    [IteratorStateMachineAttribute("​ /")]
public sealed virtual IEnumerable`1<object> ​ ​ (int );
    public sealed virtual ​  ​ ​ (int , int );
    public sealed virtual ​  ​ ​ (int );
    public sealed virtual ​  ​ ​ (int );
    public sealed virtual    ​ ​ (int , int );
    protected bool (​  );
    private static bool (Func`1<object> , Func`1<object> );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    [IteratorStateMachineAttribute("​ /")]
public sealed virtual IEnumerator`1<object> GetEnumerator();
    private sealed virtual override IEnumerator ​ ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : object {
    internal static Int32[] ;
    internal static Int32[] ;
    internal static Int32[] ;
    internal static Int32[] ;
    internal    ;
    internal Int32[] ;
    internal Int32[] ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal bool  ;
    internal int  ;
    internal Int32[]  ;
    internal int  ;
    internal int  ;
    internal Int32[]  ;
    internal Int32[]  ;
    internal Int32[]  ;
    internal Int32[]  ;
    internal Boolean[]  ;
    internal int  ;
    internal static int  ;
    internal static int  ;
    public ​ (   , int , Int32[] );
    private static ​ ();
    public virtual void ​ ​ (int );
    public virtual void ​ ​ (int );
    public virtual int ​ ​ ();
    public virtual int ​ ​ ();
    public void (int , int , int );
    public void (Int32[] , Int32[] , int );
    public void (int , int );
    private void ();
    public virtual int ​ ​ ();
    public void (int );
    public void ();
    public void ();
    private void ();
    public virtual void ​ ​ (Int32[] , int );
}
internal interface ​  {
    public abstract virtual void ​ ​ (long );
    public abstract virtual void ​ ​ ();
    public abstract virtual void ​ ​ (long );
    public abstract virtual void ​ ​ (double );
    public abstract virtual void ​ ​ ();
    public abstract virtual void ​ ​ ();
    public abstract virtual void ​ ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : ​  {
    private    ;
    private Stream ;
    private Byte[] ;
    public ​ (   , Stream );
    public virtual void ​ ​ ();
    public virtual bool ​ ​ ();
    public virtual void ​ ​ ();
    private void (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class ​  : object {
    [IteratorStateMachineAttribute("​ /")]
public static IEnumerable`1<  > (List`1<  > , int , int );
    [IteratorStateMachineAttribute("​ /")]
public static IEnumerable`1<  > (List`1<​ > );
    private static List`1<  > (IEnumerable`1<​ > );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  :    {
    private static bool ;
    private static ​ ();
    private static bool ();
    private static bool ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    protected virtual   <  >   ​ (   );
    protected virtual   <  >   ​ (   );
    protected virtual   <  []>   ​ (Byte[] );
    protected virtual   <​ >   ​ (Byte[] );
    protected virtual   <  >   ​ (Byte[] );
    [NullableContextAttribute("0")]
protected virtual   <int>   ​ (   );
    protected virtual   <Byte[]>   ​ (   , string , bool );
    protected virtual   <Byte[]>   ​ (   , Stream , bool );
    protected virtual   <bool>   ​ (Byte[] , Stream );
    protected virtual   <Byte[]>   ​ (Byte[] , ICollection`1<  > );
    protected virtual   <  >   ​ (Byte[] , bool );
    [NullableContextAttribute("0")]
protected virtual   <  >   ​ (Byte[] );
    protected virtual   <X509Certificate2>   ​ (CspParameters );
    protected virtual   <Byte[]>   ​ (string , Byte[] );
    protected virtual   <Byte[]>   ​ (Byte[] , Byte[] ,  );
    protected virtual   <object>   ​ (Byte[] , Type );
    protected virtual   <Byte[]>   ​ (object , bool );
    protected virtual   <Byte[]>   ​ (   , Byte[] , string , string , Byte[] , bool , X509ExtensionCollection );
    protected virtual   <Byte[]>   ​ (   , string ,    ,    , string );
    protected virtual   <string>   ​ (   , string );
    protected virtual   <Byte[]>   ​ (Byte[] ,    , string , object );
    protected virtual   <bool>   ​ (Byte[] , Byte[] ,    , string , object );
    protected virtual   <Byte[]>   ​ (string , object ,    , DateTimeOffset , DateTimeOffset , Byte[] , X509ExtensionCollection , string  , object  );
    protected virtual   <object>   ​ (Byte[] , Byte[] );
    private static   <  > (   );
    private static   <  > (   );
    private static   <  []> (Byte[] );
    private static   <​ > (Byte[] );
    private static   <  > (Byte[] );
    private static    (X509Certificate );
    [NullableContextAttribute("0")]
private static   <int> (   );
    internal static int (AsymmetricKeyParameter );
    internal static string (AsymmetricKeyParameter );
    private static   <Byte[]> (   , string , bool );
    private static   <Byte[]> (   , Stream , bool );
    private static   <bool> (Byte[] , Stream );
    private static   <Byte[]> (Byte[] , ICollection`1<  > );
    private static   <  > (Byte[] , bool );
    [NullableContextAttribute("0")]
private static   <  > (Byte[] );
    private static   <Byte[]> (string , Byte[] );
    private static   <Byte[]> (Byte[] , Byte[] ,  );
    private static   <object> (Byte[] , Type );
    private static   <Byte[]> (object , bool );
    private static   <Byte[]> (   , Byte[] , string , string , Byte[] , bool , X509ExtensionCollection );
    private static   <Byte[]> (   , string ,    ,    , string );
    private static   <string> (   , string );
    private static   <Byte[]> (Byte[] ,    , string , object );
    private static   <bool> (Byte[] , Byte[] ,    , string , object );
    private static   <Byte[]> (string , object ,    , DateTimeOffset , DateTimeOffset , Byte[] , X509ExtensionCollection , string  , object  );
    private static   <object> (Byte[] , Byte[] );
    private static    (SignerInformation , IStore`1<X509Certificate> , Dictionary`2<X509Certificate,   > );
    private static    (Attribute );
    private static Attribute (   );
    private static   [] (AttributeTable );
    private static AttributeTable (IList`1<  > );
    private static Byte[] (X509Certificate );
    private static    (Asn1Object );
    private static ​  (Asn1Object );
    private static string (GeneralName );
    private static    (Asn1Object );
    private static    (Asn1Object );
    private static    (Asn1Object );
    private static DerSequence (   );
    private static SignaturePolicyId (​  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class ​​  : ValueType {
    [DebuggerBrowsableAttribute("0")]
private ​​  ;
    internal ​​ (​​  );
    public UInt32 ();
    public void (UInt32 );
    public UInt32 ();
    public void (UInt32 );
    public void (byte );
    public void (sbyte );
    public void (ushort );
    public void (short );
    public void (int );
    public void (UInt32 );
    public void (int );
    public void (int );
    public void (short );
    public void (ushort );
    public void (short );
    public void (long );
    public void (ushort );
    public void (UInt32 );
    public void (UInt32 );
    public void (Byte[] , int , int );
    public int (Stream , int );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    private String[] ;
    private String[] ;
    public  (string );
    private string ();
    public sealed virtual IList`1< >  ​ ();
    public sealed virtual IList`1<int>  ​ ();
    private void ();
    protected virtual string  ​ ();
}
internal class  ​ : Exception {
    [NullableContextAttribute("1")]
public  ​(string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class   : object {
    private  ;
    protected  ( );
    protected  ();
    protected void ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ : ValueType {
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    internal  ​( ​ );
    public  ​ ();
    public void ( ​ );
    public bool ( );
    public double ( );
    public double ( );
    public double ( );
    internal void (    ,  , double , double , double );
    private void (    ,  , double , double , double , bool , bool , bool  , bool  );
    internal void (    ,  , double , double , double );
    private void (    ,  , double , double , double , bool , bool , bool  , bool  );
    internal void (    ,  , double , double , double , double );
    private void (    ,  , double , double , double , double );
    private static bool ( ​ ,  ​ );
    private static bool ( ​ , Double& ,    & );
    private static     ( ​ );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class   : object {
    public int ;
    public   ;
    public   ;
    public   ;
    public   ;
    public    ;
    public    ;
    [NullableAttribute("1")]
public    ;
    public bool  ;
    public List`1<int>  ;
    public    ;
}
[NullableContextAttribute("1")]
internal interface  ​ {
    public abstract virtual     ​​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    private string ;
    private double ;
    private double ;
    [NullableAttribute("2")]
private  ;
    [NullableAttribute("2")]
public   { get; public set; }
    public  (int );
    [NullableContextAttribute("2")]
public  ();
    [NullableContextAttribute("2")]
public void ( );
    private void ();
    private void (  ,   ,   ,   ,  & );
    public void (  ,  , bool );
    public void (  ,  , bool );
    public void (  );
    public void (  );
    public void (  );
    public void (  );
    public void (  );
    public void (  );
    public bool ( ,  ,   ,   );
    public bool ( ,  ,   );
    public bool ( ,  ,    ,   );
    public bool ( ,  ,    );
}
[NullableContextAttribute("1")]
internal interface  ​ {
    public abstract virtual object  ​​ ();
    public abstract virtual object  ​​ (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   : Stream {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private List`1< > ;
    [DebuggerBrowsableAttribute("0")]
private Stream ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private List`1< > ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private Byte[]  ;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public  (List`1< > , int , Stream );
    public  (List`1< > , int , long , Queue`1< > , Stream , bool );
    public IEnumerable`1< >       ​    ​           ​  ​ ();
    public List`1< >             ();
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual void Flush();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long );
    public virtual void Close();
    public int ​   ​         ();
    public virtual int Read(Byte[] , int , int );
    public virtual long Seek(long , SeekOrigin );
    private void (long );
    private void (long , Queue`1< > );
    public virtual void SetLength(long );
    public void                   (int );
    public virtual void Write(Byte[] , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    private  ;
    private bool ;
    public  ​( ,  ​ );
    public  ();
    public bool ();
    public void (bool );
    public virtual   ​​ ( );
    public virtual void  ​​ ( ,     );
    public virtual double  ​​ ( );
    public virtual bool  ​​ (   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class   : object {
    private static string ;
    private static  ();
    public static   (  , long );
    internal static void (int );
    internal static bool (double );
    internal static double (  ,   ,   );
    internal static double (  ,   ,   );
    internal static double (  ,   );
    internal static double (  ,   );
    internal static long (double );
    public static bool (  ,   ,   ,   ,  & );
    internal static bool (  ,   ,   ,   , bool );
    public static   (  ,   ,   );
    public static  (  ,   );
}
internal class  ​ :  ​ {
    [NullableContextAttribute("1")]
protected virtual string  ​​ (bool ,    ,  ,   & , String& , String& , Int32& );
}
internal static class   : object {
    internal static bool (List`1<T> );
    internal static StringBuilder (StringBuilder , string , int );
    internal static T (List`1<T> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :    {
    private PropertySet ;
    public  ​( ​ , PropertySet ,    );
    public sealed virtual void   ​ (PropertySet );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    private string ;
    private string ;
    private string ;
    public  (string );
    private string ();
    protected virtual string  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    private    ;
    private bool ;
    private XmlElement ;
    public  ​(XmlWriter ,    , bool );
    public sealed virtual void   ​ (PictureDescriptor );
    private void (string , BorderCode );
    protected  (BlipStoreEntry );
}
internal static class   : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ : object {
    public static  (WordDocument );
    public static string (string ,  );
    public static void (WordDocument ,    );
    public static void (Stream , Stream );
}
[NullableContextAttribute("1")]
internal interface   {
    public abstract virtual    ​ ();
    public abstract virtual void  ​ (  );
    public abstract virtual    ​ ();
    public abstract virtual void  ​ (  );
    public abstract virtual   ​ ();
    public abstract virtual void  ​ ( );
    public abstract virtual    ​ ();
    public abstract virtual void  ​ (  );
    public abstract virtual    ​ ();
    public abstract virtual    ​ ();
    public abstract virtual    ​ ();
    public abstract virtual void  ​ (  );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class  ​ : ​​< ​> {
    [DebuggerBrowsableAttribute("0")]
private    ;
    private protected  ​< ​>  { get; }
    public    ();
    private protected sealed virtual  ​ ​​​ ();
    private protected sealed virtual  ​< ​> ​​​ ();
    internal void (   );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  :  ​ {
    [DebuggerBrowsableAttribute("0")]
private static [] ;
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
public  ​  { get; public set; }
    private static ​ ();
    public virtual  ​ ​ ​ ();
    public virtual void ​ ​ ( ​ );
    public virtual  ​ ​ ​ ();
    public virtual void ​ ​ ( ​ );
    protected virtual IEnumerable`1<>  ​​ ();
    public virtual  ​  ​​ ( );
    public virtual void  ​​ ( ,  ​ );
}
internal class ​  :    {
    public int ;
    public int ;
    public int ;
    [NullableContextAttribute("1")]
protected internal ​ (int , Byte[] , int , int );
}
internal class ​  : Exception {
    [NullableContextAttribute("1")]
protected ​ (SerializationInfo , StreamingContext );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
internal interface ​  {
    public object  { get; }
    public abstract virtual int ​ ​ ();
    public abstract virtual int ​ ​ ();
    public abstract virtual object ​ ​ (int , int );
    public abstract virtual IEnumerable`1<object> ​ ​ (int );
    public abstract virtual IEnumerable`1<object> ​ ​ (int );
    public abstract virtual ​  ​ ​ (int , int );
    public abstract virtual ​  ​ ​ (int );
    public abstract virtual ​  ​ ​ (int );
    public abstract virtual    ​ ​ (int , int );
}
internal class ​  : object {
    internal int ;
    internal int ;
    internal bool ;
    internal float ;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  :    {
    private string ;
    private string ;
    private string ;
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public virtual    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : object {
    private    ;
    private int ;
    public ​ (   );
    public void ();
    public void ();
    public void ();
    public void ();
    public void ();
    public void (int , int );
    public void (byte );
    private void ();
    private void ();
    private void ( );
    private void  ();
    private void  ();
    private void (int , bool );
    private int (int );
    private void  ();
    private void  ();
    private void  ();
    private void ( );
    private void (int );
    private void (int );
}
internal interface ​  {
    public abstract virtual  ​ ​ ();
    public abstract virtual     ​ ​ ();
    public abstract virtual void ​ ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : object {
    private string ;
    private string ;
    private string ;
    private Int32[] ;
    private string ;
    private string ;
    private string ;
    private Byte[]  ;
    private ​ (string );
    public string ();
    public string ();
    private void (string );
    public string ();
    private void (string );
    public Int32[] ();
    private void (Int32[] );
    public string ();
    private void (string );
    public string ();
    private void (string );
    public string ();
    private void (string );
    public Byte[]  ();
    private void (Byte[] );
    public static ​  (string );
    public static ​  (string , Int32[] , string );
    public static ​  (string , string );
    public static ​  (string , Byte[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​​  : ​   {
    private ​   ;
    private UInt32 ;
    private UInt32 ;
    internal ​​ (​   , UInt32 , UInt32 );
    internal static ​​  (​   , UInt32 );
    internal Stream ();
    internal sealed virtual UInt32 ​  ​ (​​  , Nullable`1& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    private Hashtable ;
    private Hashtable ;
    private bool ;
    private bool ;
    private bool ;
    public  (string );
    public  (string , bool );
    public  (string , bool , bool );
    public bool ();
    public void (bool );
    private string ();
    private void ();
    private void ();
    private void (String& );
    private char (string );
    protected virtual string  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    private CharacterRange ;
    public  ​( ​ ,    , CharacterRange );
    public virtual void   ​ (WordDocument );
    protected virtual Grffld  ​​ (int );
}
internal interface ​  {
    public abstract virtual int ​ ​ (int );
    public abstract virtual int ​ ​ (int , int );
    [NullableContextAttribute("1")]
public abstract virtual ​  ​ ​ (int , ​  );
    [NullableContextAttribute("1")]
public abstract virtual ​  ​ ​ (int , ​  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    private DataTable ;
    public  (string );
    private string ();
    private void ();
    private string (string );
    protected virtual string  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    public  ​( ​ );
    public virtual void   ​ (WordDocument );
}
internal interface ​  {
    [NullableContextAttribute("1")]
public abstract virtual   [] ​ ​ (int , int );
    [NullableContextAttribute("1")]
public abstract virtual   [] ​ ​ (int , int );
    public abstract virtual int ​ ​ (int , int );
    public abstract virtual int ​ ​ (int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    private String[] ;
    private String[] ;
    private String[] ;
    private String[] ;
    private Hashtable ;
    private string ;
    public  (string );
    private string ();
    public sealed virtual IList`1< >  ​ ();
    public sealed virtual IList`1<int>  ​ ();
    private void (int , int , string );
    private void ();
    private void ();
    protected virtual string  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    public  ​( ​ ,    );
    public virtual void   ​ (WordDocument );
    protected virtual Grffld  ​​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : ​  {
    private bool ;
    private   [][] ;
    private    ;
    private int ;
    private int ;
    private    ;
    private    ;
    private     ;
    private     ;
    private   []  ;
    private Int32[]  ;
    private Int32[]  ;
    internal   []  ;
    internal     ;
    public ​ (   ,    , int , int );
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ (int );
    public virtual int ​ ​ (int , int );
    public virtual int ​ ​ (int , int );
    public virtual   [] ​ ​ (int , int );
    public virtual   [] ​ ​ (int , int );
    public virtual bool   ​ (int , int );
    public virtual int ​ ​ (int );
    public virtual ​  ​ ​ (int , ​  );
    public virtual ​  ​ ​ (int , ​  );
    public virtual int ​ ​ (int , int );
    private    (int );
    private void (   ,    , int );
    private void (   ,    , int );
    public virtual void   ​ (int , int );
    public virtual void   ​  ();
    public virtual      ​ (int , int );
    private void (int , int ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    private String[] ;
    public  (string );
    private string ();
    protected virtual string  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    public  ​( ​ ,    );
    public virtual void   ​ (WordDocument );
    private void (int , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : ​  {
    public Int32[] ;
    public virtual int ​ ​ ();
    public virtual object ​ ​ ();
    public virtual void ​ ​ (object );
    public virtual Int32[] ​ ​ ();
    public virtual void ​ ​ (Int32[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class   :   {
    private Hashtable ;
    private bool ;
    public  (string );
    public bool ();
    public void (bool );
    private string ();
    private void ();
    protected virtual string  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :    {
    public  ​(XmlWriter );
    public sealed virtual void   ​ (FormFieldData );
    private void (FormFieldData );
    private void (FormFieldData );
    private void (FormFieldData );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​  : ​  {
    private Single[] ;
    public virtual int ​ ​ ();
    public virtual object ​ ​ ();
    public virtual void ​ ​ (object );
    public virtual Single[] ​ ​ ();
    public virtual void ​ ​ (Single[] );
}
[NullableContextAttribute("1")]
internal interface   {
    public abstract virtual IList`1< >  ​ ();
    public abstract virtual IList`1<int>  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    public  ​( ​ );
    public virtual void   ​ (WordDocument );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​  :    {
    private static String[][] ;
    protected internal ​ (   );
    private static ​ ();
    public static String[][] ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public static ​  (   ,    ,    );
    public abstract virtual bool   ​ (int , int );
    public abstract virtual ​  ​ ​ (int , ​  );
    public abstract virtual int ​ ​ (int );
    public abstract virtual   [] ​ ​ (int , int );
    public abstract virtual   [] ​ ​ (int , int );
    public abstract virtual      ​ (int , int );
    public abstract virtual int ​ ​ (int , int );
    public abstract virtual ​  ​ ​ (int , ​  );
    public abstract virtual int   ​ (int );
    public abstract virtual int ​ ​ (int , int );
    public abstract virtual int ​ ​ (int , int );
}
internal class   :   {
    [NullableContextAttribute("1")]
protected virtual string  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​ :  ​ {
    public  ​( ​ );
    public virtual void   ​ (WordDocument );
    protected virtual Grffld  ​​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​  : object {
    public int ;
    public int ;
    public int ;
    public int ;
    public    ;
    public int ;
    public int ;
    public int  ;
    public int  ;
    public int  ;
    public float  ;
    public double  ;
    public double  ;
    public int  ;
    public int  ;
    public abstract virtual int ​ ​ ();
    public abstract virtual object ​ ​ ();
    public abstract virtual void ​ ​ (object );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private     ;
    private Nullable`1<   > ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private [] ;
    public   (   );
    private void ();
    public     ();
    public void (    );
    public     ();
    public void (    );
    public [] ();
    public bool ();
    private     (   );
    private [] (   );
    private     (    );
    public     (    );
    public    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    protected internal byte ;
    protected internal Byte[] ;
    protected internal   (int , byte );
    protected internal   (   , int , byte );
    public virtual string ToString();
    public virtual string   ​ ();
    public byte (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (   );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    private    ;
    private CultureInfo ;
    public   (   , CultureInfo );
    public    ();
    public CultureInfo ();
    public abstract virtual bool   ​ ();
    public abstract virtual bool   ​ ();
    public virtual double   ​ (DateTime );
    public virtual DateTime   ​ (double );
    public virtual bool   ​ (   , Object& );
    public virtual void   ​ (   , object );
    public virtual void   ​ ();
    public virtual object   ​ (object , Type );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public int ;
    public int ;
    public int ;
    public Byte[] ;
    public   (int , int , int , Byte[] );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    public virtual      ​ (string ,    );
    private    (   , bool );
    private    (   );
    private    (   );
    private    (   );
    private    (   );
    private    (   );
    private    (   );
    private    (   );
    private    (   , Boolean& );
    private List`1<  >  (   );
    private    ();
    internal static bool (string , Int32& , Int32& );
}
internal class    :    {
    [NullableContextAttribute("1")]
public   (   );
    public virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private  ;
    private     ;
    private     ;
    public   ( ,     ,     ,  );
    public  ();
    public     ();
    public     ();
    public virtual    ​ ();
    [IteratorStateMachineAttribute("  /")]
public IEnumerable`1<  > ( );
    [IteratorStateMachineAttribute("  /")]
private static IEnumerable`1<  > ( ,  ,     );
    [IteratorStateMachineAttribute("  /")]
private static IEnumerable`1<  > ( ,  ,     );
    private static void ( & , List`1< > );
    private static Nullable`1<   > (    ,     ,     ,     ,     ,  );
    private static Nullable`1<   > (    ,     ,  , double , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static Double[] (   , double , Converter`2<  ,   > , Double& , Double& );
    private static    (   , Converter`2<  ,   > );
    private static void (   , List`1<  > , Converter`2<  ,   > );
    private static void (   ,    );
    private static void (   , Double& , Double& );
    private static double (bool , double , double , Nullable`1<double> , double );
    private static Double[] (   , double );
    private static void (   , double );
    private static Nullable`1<double> (   , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private int ;
    internal Byte[] (Byte[] , int , int , Byte[] );
    internal Byte[] (Byte[] , Byte[] );
}
[AttributeUsageAttribute("256")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : Attribute {
    [DebuggerBrowsableAttribute("0")]
private string ;
    public  ​ (string );
    public string ();
}
internal class    : object {
    private double ;
    private bool ;
    private bool ;
    public double ();
    public void (double );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private static string ;
    public int ;
    public int ;
    public int ;
    public Int32[] ;
    protected internal   (int , Byte[] , int , int );
    private static   ();
    public virtual string ToString();
    public static double (int );
    public static short (double );
    public static double (int );
    public int (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : Exception {
    public   (string );
    protected   (SerializationInfo , StreamingContext );
}
internal class    : MulticastDelegate {
    public   (object , IntPtr );
    [NullableContextAttribute("1")]
public virtual object Invoke(IList`1<  > ,    );
    public virtual IAsyncResult BeginInvoke(IList`1<  > ,    , AsyncCallback , object );
    public virtual object EndInvoke(IAsyncResult );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    internal Byte[] ;
    internal int ;
    public   (int );
    public void (int );
    public virtual void   ​ (int , int , Byte[] , int );
    public virtual int   ​ ();
    public virtual void   ​ ();
    public virtual int   ​ (int );
}
internal abstract class    : object {
    public abstract virtual    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private static Int16[] ;
    private static Double[] ;
    private    ;
    private [] ;
    private [] ;
    public [] ;
    private [] ;
    public   (   );
    private static   ();
    public virtual void   ​ ();
    private void (   , Byte[][] ,   [] , int , int , int );
    private void (   , Byte[][] ,   [] , int , int , int );
    private static void (Single[] , Byte[][] , int , int );
    private static void (Int32[] , Byte[][] , int , int );
    private static void (Int32[] , Byte[][] , int , int );
    private static int (int , int );
    private static int (double );
    private void (Int32[] , Byte[][] , int , int );
    private void (Int32[] , Byte[][] , int , int );
    private void (Int32[] , Byte[][] , int , int );
    private void (Int32[] , Byte[][] , int , int );
    private void (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
    private void  (Int32[] , Byte[][] , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :   <  > {
    private double ;
    public   (double );
    public double ();
    private void (double );
    public virtual    ​ ();
    [IteratorStateMachineAttribute("  /")]
public IEnumerable`1<TItem> ();
    public double (   ,  , Func`3<TItem, TItem, double> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :  {
    public    ;
    public int ;
    public int ;
    private static   [] ;
    private    ;
    public   ( ,  , string );
    private static   ();
    public virtual bool   ​ ();
    public virtual bool   ​ ();
    public virtual bool   ​ ();
    public virtual bool   ​ (short );
    public virtual bool   ​ (short );
    public virtual bool   ​ ();
    public virtual void   ​  ();
    public virtual bool ​ ();
    public virtual bool ​ (Byte[] , int , int , short );
    public virtual bool ​ (Byte[] , int , int , short );
    public virtual bool ​ (Byte[] , int , int , short );
    public virtual bool ​ ();
    public virtual bool ​ (Byte[] , int , int , short );
    public virtual bool ​ (Byte[] , int , int , short );
    public virtual bool ​ (Byte[] , int , int , short );
    private void ();
    private bool (Byte[] , int , int , short );
    private bool (Byte[] , int , int , short );
    private bool ();
    private bool (short );
    private bool (short );
    private bool ();
    private bool ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private Exception ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    public   ( );
    public   (Exception );
    public   ( );
    public  ();
    public Exception ();
    public  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class  ​  :  ​ <Stream> {
    public  ​ (DocumentModel ,     , double , Nullable`1<double> );
    public  ​ (IEnumerable`1<Picture> , double , Nullable`1<double> );
    public  ​ (   <Stream> , double , Nullable`1<double> ,     );
    [IteratorStateMachineAttribute(" ​ /")]
private static IEnumerable`1<Picture> (DocumentModel ,     );
    protected virtual Stream  ​ ​ (Stream , Stream , double );
    protected virtual Stream  ​ ​ (Stream );
}
internal static class    : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public    ;
    public   (int , int );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private UInt32 ;
    private    ;
    private    ;
    private    ;
    private    ;
    private    ;
    private ​  ;
    private     ;
    internal    ();
    internal    ();
    internal    ();
    internal    ();
    internal    ();
    internal ​  ();
    public    ();
    internal UInt32  ();
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private IEqualityComparer`1<> ;
    [DebuggerBrowsableAttribute("0")]
private List`1<> ;
    [DebuggerBrowsableAttribute("0")]
private EventHandler ;
    public int Count { get; }
    public  Item { get; public set; }
    internal   (IEqualityComparer`1<> );
    internal void (EventHandler );
    internal void (EventHandler );
    private sealed virtual override bool   ​ ();
    public sealed virtual int get_Count();
    public sealed virtual  get_Item(int );
    public sealed virtual void set_Item(int ,  );
    private sealed virtual override IEnumerator`1<>   ​ ();
    private sealed virtual override IEnumerator   ​ ();
    private void ();
    public void (IEnumerable`1<> );
    public sealed virtual int IndexOf( );
    public sealed virtual bool Contains( );
    public sealed virtual void Add( );
    public sealed virtual void Insert(int ,  );
    public sealed virtual bool Remove( );
    public sealed virtual void RemoveAt(int );
    public sealed virtual void Clear();
    public sealed virtual void CopyTo([] , int );
}
internal class    :    {
    public   (int , int , byte );
    [NullableContextAttribute("1")]
public   (int , int , byte ,    );
    public virtual bool   ​ ();
    public virtual bool   ​ ();
    public virtual bool   ​ (int , int );
    public virtual bool   ​ (int , int );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual    &   ​ ();
    public abstract virtual       ​ ();
    public abstract virtual void   ​ (    );
    public abstract virtual bool   ​ ();
    public abstract virtual void   ​ (bool );
    public abstract virtual bool   ​ ();
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​  ();
    public abstract virtual int   ​  ();
    public abstract virtual int   ​  ();
    public abstract virtual int   ​  ();
    public abstract virtual int   ​  ();
    public abstract virtual int   ​ (int );
    public abstract virtual int   ​ (int );
    public abstract virtual int   ​ (int , int );
    public abstract virtual int   ​ (int , int );
    public abstract virtual int   ​ (int );
    public abstract virtual int   ​ (int );
    public abstract virtual int   ​ (int );
    public abstract virtual void   ​ (int , int );
    public abstract virtual void   ​  ();
    public abstract virtual      ​ (   );
    public abstract virtual int   ​ (int );
    public abstract virtual int   ​ (int );
    public abstract virtual      ​ (   );
    public abstract virtual int   ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    protected int ;
    protected int ;
    protected int ;
    protected int ;
    protected    ;
    public   (   );
    public virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : BinaryReader {
    [DebuggerBrowsableAttribute("0")]
protected    ;
    [DebuggerBrowsableAttribute("0")]
protected int ;
    [DebuggerBrowsableAttribute("0")]
protected int ;
    [DebuggerBrowsableAttribute("0")]
protected Byte[] ;
    [DebuggerBrowsableAttribute("0")]
protected Byte[] ;
    [DebuggerBrowsableAttribute("0")]
protected bool ;
    [DebuggerBrowsableAttribute("0")]
internal Stream ;
    [DebuggerBrowsableAttribute("0")]
internal bool  ;
    public   (Stream );
    public   (Stream , int );
    internal void ();
    public virtual int   ​ ();
    public virtual void   ​ (int );
    public virtual long   ​ ();
    public virtual long   ​ ();
    public virtual int Read();
    public int (Byte[] , int , int );
    public long (long );
    public virtual void Close();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    internal   (string );
    public virtual Byte[]   ​ (Byte[] );
}
internal class  ​  : ValueType {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public  ​ (int , int );
    [IsReadOnlyAttribute]
public int ();
    public void (int );
    [IsReadOnlyAttribute]
public int ();
    public void (int );
    public virtual int GetHashCode();
    public sealed virtual bool Equals( ​  );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
public sealed virtual string ToString(string , IFormatProvider );
    public static bool op_Equality( ​  ,  ​  );
    public static bool op_Inequality( ​  ,  ​  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private  ​ ;
    private    ;
    private    ;
    private List`1< ​> ;
    private bool ;
    private double ;
    private    ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<  >  ;
    private     ;
    private     ;
    private double  ;
    private double  ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<  , >  ;
    internal   ( ​ ,    ,    );
    internal    ();
    internal void (   );
    internal void (   );
    internal void ();
    [IteratorStateMachineAttribute("  /")]
private IEnumerable`1<TResult> (IEnumerable`1<TSource> );
    public bool ();
    public bool (int , Boolean& , Boolean& );
    private sealed virtual override      ​ ();
    internal  ​ ();
    private sealed virtual override      ​  ();
    public double  ();
    private sealed virtual override  ​   ​  ();
    private sealed virtual override  ​   ​  ();
    private sealed virtual override void   ​ (IList`1< ​> );
    private sealed virtual override    ​ (   );
    internal  ​[]  ();
    private sealed virtual override bool   ​ ();
    private sealed virtual override List`1<  >   ​  ();
    private sealed virtual override       ​ (   & modreq(System.Runtime.InteropServices.InAttribute) , double );
    private sealed virtual override bool   ​ (   & modreq(System.Runtime.InteropServices.InAttribute) , Nullable`1& , Boolean& );
    private sealed virtual override bool   ​ (   & modreq(System.Runtime.InteropServices.InAttribute) , Nullable`1& , Boolean& );
    private static bool (   & , Nullable`1& , Boolean& );
    private sealed virtual override       ​  ();
    private sealed virtual override void   ​ (    );
    private sealed virtual override       ​  ();
    private sealed virtual override void   ​ (    );
    private sealed virtual override double   ​  ();
    private sealed virtual override double   ​  ();
    private sealed virtual override bool   ​ ();
    private sealed virtual override      ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    private static    ;
    private static   ();
    public static void (   );
    internal static    (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private List`1<UInt32> ;
    private List`1<UInt32> ;
    private    ;
    private UInt32 ;
    private ulong ;
    internal   (   ,    ,    , UInt32 , ulong );
    internal virtual ushort   ​ ();
    internal virtual long   ​ (long , long );
    protected virtual UInt32   ​ (UInt32 );
    private void ();
    private void ();
    private void ();
    private void ();
}
[DebuggerTypeProxyAttribute("GemBox.Collections.CollectionDebugView`1")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
private IList`1<> ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public int Count { get; }
    public   (IList`1<> );
    public   (IList`1<> , int , int );
    public IList`1<> ();
    public int ();
    public sealed virtual int get_Count();
    public virtual int GetHashCode();
    public virtual bool Equals(object );
    public sealed virtual bool Equals(  <> );
    public static bool op_Equality(  <> ,   <> );
    public static bool op_Inequality(  <> ,   <> );
    private sealed virtual override    ​ (int );
    private sealed virtual override void   ​ (int ,  );
    private int ( );
    private sealed virtual override int   ​ ( );
    private sealed virtual override void   ​ (int ,  );
    private sealed virtual override void   ​  (int );
    private sealed virtual override bool   ​  ();
    private sealed virtual override void   ​  ( );
    private sealed virtual override void   ​  ();
    private sealed virtual override bool   ​  ( );
    private sealed virtual override void   ​  ([] , int );
    private sealed virtual override bool   ​  ( );
    [IteratorStateMachineAttribute("  /")]
private IEnumerator`1<>  ();
    private sealed virtual override IEnumerator`1<>   ​  ();
    private sealed virtual override IEnumerator   ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public static int ;
    private Stream ;
    private int ;
    private int ;
    private Int32[][] ;
    private    ;
    private Byte[] ;
    private     ;
    public   (   );
    public   (string );
    public   (Stream );
    private static   ();
    public virtual void   ​ ();
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual      ​ (   , int );
    public virtual      ​ (   , int );
    private byte ();
    private void ();
    private void ();
    private int ();
    public virtual bool   ​ (int );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static bool (FieldType );
    public static bool (FieldType );
    public static bool (FieldType );
    [IteratorStateMachineAttribute("  /")]
public static IEnumerable`1<Inline> (Field );
    private static Func`2<Field, IEnumerable`1<Inline>>  (Field );
    [IteratorStateMachineAttribute("  /")]
private static IEnumerable`1<Inline> (Field );
    [IteratorStateMachineAttribute("  / ")]
private static IEnumerable`1<Inline> (Field );
    private static IEnumerable`1<Inline> (Field );
    private static IEnumerable`1<Inline> (Field );
    private static Nullable`1<BuiltInDocumentProperty> (string );
    private static bool (BuiltInDocumentProperty , Field , Object& );
    private static IEnumerable`1<Inline> (Field );
    private static IEnumerable`1<Inline> (Field );
    [IteratorStateMachineAttribute("  /")]
private static IEnumerable`1<Inline>  (Field );
    [IteratorStateMachineAttribute("  / ")]
private static IEnumerable`1<Inline>  (Field );
    [IteratorStateMachineAttribute("  / ")]
private static IEnumerable`1<Inline>  (Field );
    private static IEnumerable`1<Inline>  (Field );
    private static IEnumerable`1<Inline>  (Field );
    private static IEnumerable`1<Inline>  (Field );
    private static IEnumerable`1<Inline>  (Field );
    private static IEnumerable`1<Inline>  (Field );
    private static IEnumerable`1<Inline>  (Field );
    public static Field (Field , string );
    [IteratorStateMachineAttribute("  / ")]
private static IEnumerable`1<Inline>  (Field );
    public static Picture (Field , string , String& );
    public static Picture (Field , object , string , bool );
    private static Shape (InlineCollection );
    private static void (object , String& , Stream& );
    private static Size (Size , Size , bool , bool );
    private static Picture (Shape , DocumentModel ,  ​  , Size , bool );
    private static IEnumerable`1<Inline> (Field , string , bool );
    [IteratorStateMachineAttribute("  /")]
private static IEnumerable`1<Inline>  (Field );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual    ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual void   ​ ();
    public abstract virtual Byte[]   ​ ();
    public abstract virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    : Collection`1<> {
    protected virtual void InsertItem(int ,  );
    protected virtual void SetItem(int ,  );
    public  ();
    public  ();
    public IEnumerable`1<TDescendant> ();
    [IteratorStateMachineAttribute("  /")]
public static IEnumerable`1<TDescendant> (IEnumerable`1<> );
    public void (Action`1<> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private Byte[] ;
    private Int32[] ;
    private Int32[] ;
    private Int32[] ;
    private Int32[] ;
    private Int32[] ;
    public void (Single[] , Single[] );
    public void (int , int , int , Int32& , Int32& , Int32& );
    private static int (float );
    private static int (int , float , float , float );
    private static int (int , int , int );
    private static int (int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
internal string ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    internal   (string , bool , Byte[] );
    public bool ();
    public Byte[] ();
    public Oid ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class  ​  : object {
    public static     (    ,     );
    public static     (    ,     );
    public static bool (    ,     ,     );
    public static     (    ,     ,     );
    public static     (    ,     ,     );
    public static long (    );
    public static     (Byte[] );
    public static Byte[] (    );
    public static     (    ,     );
    public static     (    );
    public static string (    , long );
    public static string (    , long );
    public static     (string );
    public static     (string );
    public static  ​  (    ,     );
}
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
public static    ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    public   (double ,  );
    private static   ();
    [IsReadOnlyAttribute]
public double ();
    private void (double );
    [IsReadOnlyAttribute]
public  ();
    private void ( );
    public sealed virtual bool Equals(   );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
internal interface    {
    public abstract virtual bool   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    private    ;
    internal   (   ,    , UInt32 , string );
    private void ();
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private [] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public int Count { get; }
    public  Item { get; internal set; }
    public   ([] );
    public sealed virtual int get_Count();
    internal [] ();
    public sealed virtual  get_Item(int );
    internal void (int ,  );
    internal void  (int );
    internal void  ( );
    internal void  (int );
    internal void  ( );
    internal   (Int32& );
    internal void (int ,  );
    internal void  (ICollection`1<> );
    internal void  (int , int );
    internal void ();
    internal int  ( );
    internal void  (int , [] , int , int );
    internal []  (int , int );
    internal [] ();
    internal TOutput[]  (int , int , Func`3<, TContext, TOutput> , TContext );
    internal bool  (int , int , Predicate`1<> );
    internal static string  (  <char> , int , int );
    public   <>  ();
    private sealed virtual override bool   ​  ();
    private sealed virtual override    ​ (int );
    private sealed virtual override void   ​  (int ,  );
    private sealed virtual override void   ​  (int ,  );
    private sealed virtual override void   ​  (int );
    private sealed virtual override int   ​  ( );
    private sealed virtual override void   ​  ( );
    private sealed virtual override bool   ​  ( );
    private sealed virtual override void   ​ ();
    private sealed virtual override bool   ​  ( );
    private sealed virtual override void   ​  ([] , int );
    private sealed virtual override IEnumerator`1<>   ​  ();
    private sealed virtual override IEnumerator   ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    private int ;
    private int ;
    private int ;
    private int ;
    private int ;
    private int ;
    private int  ;
    private int  ;
    private Int32[]  ;
    private Int32[]  ;
    private Int32[]  ;
    private Int32[]  ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    public   (   , int , int , int , int , int , int );
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ (int , int );
    public virtual int   ​ (int , int );
    public virtual int   ​ (int );
    public sealed virtual      ​ (   , int );
    public sealed virtual      ​ (   , int );
    public sealed virtual void   ​ ();
    public sealed virtual bool   ​ (int );
    public virtual void   ​ (int , int );
    public virtual void   ​  ();
    public virtual      ​ (   );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual      ​ (   );
    public virtual int   ​  ();
    public    (   );
    public virtual string ToString();
}
internal class    : object {
    private ShapeStyleFontReference ;
    private Color ;
    internal   (ShapeStyleFontReference , Color );
    public ShapeStyleFontReference ();
    internal Color ();
    [NullableContextAttribute("1")]
public    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    internal int ;
    internal Object[] ;
    internal int ;
    internal int ;
    public int ();
    public void (int );
    public int ();
    public virtual void   ​ ();
    public virtual void   ​ (int );
    public virtual void   ​ ();
    public virtual string   ​ ();
    public virtual void   ​ ();
    protected virtual string   ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static   <  > (   );
    private static ​  (   );
    private static void (IEnumerable`1<  > , double , List`1<  > , List`1<  > , List`1<​ > );
    [IteratorStateMachineAttribute("  /")]
private static IEnumerable`1<​ > (IEnumerable`1<  > );
    [IteratorStateMachineAttribute("  /")]
private static IEnumerable`1<  > (List`1<​ > , ​  , IEnumerable`1<  > );
    [IteratorStateMachineAttribute("  /")]
private static IEnumerable`1<  > (IEnumerable`1<  > );
    private static void (  <  > ,    );
}
internal class    : object {
    [NullableContextAttribute("1")]
private sealed virtual override int   ​ (object , object );
}
[DebuggerTypeProxyAttribute("GemBox.Collections.CollectionDebugView`1")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<string, string> ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<string, string> ;
    public int ();
    public void (string , string );
    public    (string , string );
    public    ();
    public Oid (string );
    public Oid (string );
    public string (string );
    public string (string );
    [IteratorStateMachineAttribute("  /")]
public sealed virtual IEnumerator`1<Oid> GetEnumerator();
    private sealed virtual override IEnumerator   ​ ();
    public static string (Oid );
}
internal class  ​  : ValueType {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public  ​ (int , int );
    public int ();
    public int ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public static    ;
    private static   ();
    public virtual int   ​ (​   , Int32& );
    public virtual      ​ (  & modreq(System.Runtime.InteropServices.InAttribute) ,   & modreq(System.Runtime.InteropServices.InAttribute) );
    public virtual      ​ (  & modreq(System.Runtime.InteropServices.InAttribute) );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    protected internal int ;
    protected internal int ;
    protected internal int ;
    protected internal Byte[][] ;
    protected internal object ;
    protected internal Object[] ;
    protected internal Object[] ;
    protected internal Dictionary`2<string, object>  ;
    public   (int , int , byte );
    public virtual      ​ ();
    public virtual object   ​ ();
    public virtual void   ​ (   );
    public virtual void   ​ (object );
    public virtual object   ​ ();
    public virtual void   ​ (int , object );
    public virtual object   ​ (int );
    public virtual void   ​ (int , object );
    public virtual object   ​ (int );
    public virtual void   ​ (int , int , object );
    public virtual object   ​ (int , int );
    protected internal virtual object   ​ (int , int );
    public virtual byte   ​ (int , int );
    public virtual bool   ​ (int );
    public virtual bool   ​ (int );
    public virtual bool   ​ (int , int );
    public static Boolean[] (string , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private List`1<UInt32> ;
    private UInt32 ;
    private UInt32 ;
    private UInt32 ;
    internal   (   );
    internal UInt32 ();
    internal UInt32 ();
    internal UInt32 ();
    private UInt32 (UInt32 );
    private void (UInt32 );
    internal virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    : KeyedCollection`2<, KeyValuePair`2<, >> {
    internal   (IEqualityComparer`1<> );
    public  ( );
    public void ( ,  );
    public  (int );
    protected virtual  GetKeyForItem(KeyValuePair`2<, > );
}
internal interface    {
    public abstract virtual int   ​ ();
    public abstract virtual void   ​ (int );
    public abstract virtual void   ​ (int );
    public abstract virtual void   ​ (int );
    public abstract virtual void   ​ (long );
    public abstract virtual void   ​ (float );
    public abstract virtual void   ​ (double );
    public abstract virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private DocumentModel ;
    private ContentRange ;
    private    ;
    private TabStop ;
    private     ;
    private Dictionary`2<ParagraphStyle, List`1<TabStop>> ;
    private HashSet`1<string> ;
    private int  ;
    private   (TableOfEntries , TabStopLeader );
    [IteratorStateMachineAttribute("  /")]
private IEnumerable`1<Paragraph> ();
    private List`1<Inline> (Element , OutlineLevel& , Boolean& , Int32& );
    private OutlineLevel (Paragraph , CharacterStyle& );
    private static OutlineLevel (CharacterStyle , StyleCollection );
    private OutlineLevel (Field ,   & );
    private string (Paragraph );
    private string (InlineCollection );
    private string ();
    private void (InlineCollection , string );
    private string (Field );
    private List`1<Inline> (Paragraph , OutlineLevel , CharacterStyle , bool , Int32& );
    private List`1<Inline> (Field ,    );
    [IteratorStateMachineAttribute("  /")]
private IEnumerable`1<Inline> (InlineCollection , CharacterStyle );
    private static void (List`1<Inline> );
    private Run (Run );
    private static bool (Run , Func`2<   , object> );
    private static bool (OutlineLevel ,    );
    [IteratorStateMachineAttribute("  /")]
private IEnumerable`1<Inline> (string );
    private Paragraph (IEnumerable`1<Inline> , OutlineLevel , bool , int );
    private ParagraphStyle (OutlineLevel );
    private List`1<TabStop> (ParagraphStyle );
    private static double (Paragraph , int );
    private static double (int , double );
    public static void (TableOfEntries );
    private static TabStopLeader (TableOfEntries );
}
internal class    : object {
    [NullableContextAttribute("1")]
public static MemoryStream (Stream );
    public static void (byte , byte , byte , byte , Byte& , Byte& , Byte& );
}
internal class    : object {
    private long ;
    private bool ;
    public   (long , bool );
    public long ();
    public bool ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private static Int32[] ;
    internal static Int32[] ;
    internal int ;
    internal int ;
    internal int ;
    internal int ;
    internal Int32[] ;
    internal Int32[]  ;
    internal Int32[]  ;
    internal     ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal Int32[]  ;
    internal Byte[]  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal object  ;
    internal long  ;
    internal   (   , object , int );
    private static   ();
    internal void (   , Int64[] );
    internal int (   , int );
    internal void (   );
    internal void (Byte[] , int , int );
    internal int ();
    internal int (   , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static string (string );
    public static bool (string );
    public static Byte[] (string , string , string , Byte[] , string , string , string , IList`1<  >  , IWebProxy  , string  , bool  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static     ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    internal ​   Source { get; }
    private static  ​ ();
    private  ​ ( );
    internal static  ​  ();
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    public double ();
    public void (double );
    public Nullable`1<> ();
    public void (Nullable`1<> );
    public     ();
    public void (    );
    public bool ();
}
internal interface    {
    [NullableContextAttribute("1")]
public abstract virtual void   ​ (int ,   & ,   & );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    protected internal   (   ,  );
    public static    (   ,  );
    private void ();
    public virtual      ​ (   , int );
    public virtual      ​ (   , int );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    protected static int ;
    public   (   , int );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static string ;
    public static string ;
    private static   ();
}
internal class    : ValueType {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private IList`1<  > ;
    public IList`1<  > ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public static bool ;
    private    ;
    private    ;
    private    ;
    private    ;
    private bool ;
    private bool ;
    private int  ;
    private List`1<  >  ;
    private List`1<  >  ;
    private Byte[]  ;
    public void (int );
    public void (Byte[] );
    public Byte[] (Byte[] );
    public    ();
    public    ();
    public    ();
    private void ();
    private void ();
    public    (int );
    public    (int );
    private void (   );
    private void (   );
    private void (   );
    private void (   );
    private void (   );
    private void (   );
    private int  ();
    private void (   );
    private void ();
    private bool  ();
    public int (long );
    public int  ();
    public void (Int16[] );
    public void ();
    public short  ();
    public void (   );
    public    (int );
    public    (int );
    public bool  ();
    public int  ();
    public bool  ();
    public List`1<  >  ();
}
internal class    :    {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class    :   <> {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private [] ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private  ;
    protected   ( );
    protected virtual void   ​ ();
    private     ();
    protected bool ();
    protected void (bool );
    protected double ();
    protected virtual Nullable`1<   >   ​ ();
    private bool ();
    private [] ();
    protected   ();
    protected sealed virtual       ​  ();
    protected void  (    , bool , bool );
    protected void  (    ,  , bool , bool );
    private static void  (    ,  ,     ,     );
    [NullableContextAttribute("0")]
private      ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private int ;
    private Byte[] ;
    private    ;
    internal int ;
    internal int ;
    internal   (string , int , int ,    );
    internal   (string , Byte[] );
    internal   (string , int ,    );
    public int ();
    public Byte[] ();
    public void (Byte[] );
    public void (int ,    );
    private void (Byte[] );
    internal void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  :  ​  {
    private BlockCollection ;
    public  ​ (    , BlockCollection );
    public virtual void  ​ ​ (    , string );
    protected virtual void  ​ ​ ();
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual object   ​ ();
    public abstract virtual       ​ ();
    public abstract virtual double   ​ ();
    public abstract virtual double   ​ ();
    public abstract virtual double   ​ ();
    public abstract virtual string   ​ ();
    public abstract virtual string   ​ ();
    public abstract virtual Nullable`1<int>   ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private static string ;
    private static int ;
    private static int ;
    private static int ;
    private Double[] ;
    private   [] ;
    private    ;
    private Int32[]  ;
    private Int32[]  ;
    private Single[][]  ;
    public   (   , Int32[] , Int32[] );
    private static   ();
    public virtual string ToString();
    private Double[] (   , Int32[] );
    public virtual void   ​ (  [] ,   [] );
    public virtual void   ​ (  [] ,   [] );
    private static void (   , Single[] , int ,    );
    private static void (   , Single[] , float ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (   );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual object   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public int ;
    public int ;
    public int ;
    public int ;
    public int ;
    public bool ;
    public int ;
    public int  ;
    public int  ;
    public Int32[]  ;
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static void (   );
    public static object (IList`1<  > ,    );
    public static object (IList`1<  > ,    );
    public static object (IList`1<  > ,    );
    public static object (IList`1<  > ,    );
    public static object (IList`1<  > ,    );
    public static object (IList`1<  > ,    );
    public static object (IList`1<  > ,    );
    public static object  (IList`1<  > ,    );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual void   ​ ( );
    public abstract virtual bool   ​ (Byte[][][] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static    (    );
    private static    (    );
    private static Dictionary`2<string, object> ( );
    private static void (    ,    );
    private static    (    ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
internal double ;
    [DebuggerBrowsableAttribute("0")]
internal double ;
    [DebuggerBrowsableAttribute("0")]
internal double ;
    [DebuggerBrowsableAttribute("0")]
internal double ;
    [DebuggerBrowsableAttribute("0")]
internal double ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public bool ();
    public void (  & ,     ,   & );
    public void (  & ,     , double , bool ,   & );
    public    (  & ,     );
    public void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private int ;
    private    ;
    private IList`1<  > ;
    private IList`1<  > ;
    private Byte[] ;
    internal   (int ,    ,   [] ,   [] , Byte[] );
    public int ();
    public    ();
    public IList`1<  > ();
    public IList`1<  > ();
    internal Byte[] ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class  ​  : ValueType {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private Field ;
    [DebuggerBrowsableAttribute("0")]
private Field ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private object ;
    public  ​ (string , Field , Field , bool , object );
    public string ();
    public Field ();
    public Field ();
    public bool ();
    public object ();
}
[DefaultMemberAttribute(" ")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :  ​ {
    [DebuggerBrowsableAttribute("0")]
private static [] ;
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
public  ​   { get; public set; }
    private static   ();
    public  ​ ();
    public void ( ​ );
    public  ​ ();
    public void ( ​ );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public double ();
    public void (double );
    public double ();
    public void (double );
    protected virtual IEnumerable`1<>  ​​ ();
    public virtual  ​  ​​ ( );
    public virtual void  ​​ ( ,  ​ );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    protected internal   ( );
    public static    ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (   , int );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[DefaultMemberAttribute("")]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
public bool  { get; public set; }
    public   (int );
    private static int (int );
    public void (int , bool );
    public void (int , Nullable`1<bool> );
    public bool (int );
    public void (int , bool );
    public Nullable`1<bool> (int );
    public    (int , Nullable`1<bool> );
    public static    (int , int , int );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public sealed virtual bool Equals(   );
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static int op_Implicit(   );
    [NullableContextAttribute("1")]
private sealed virtual override IEnumerator`1<bool>   ​ ();
    [NullableContextAttribute("1")]
private sealed virtual override IEnumerator   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private static String[][] ;
    private    ;
    private string ;
    private int ;
    public Int32[] ;
    private int ;
    private int ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    private Int32[][]  ;
    private Dictionary`2<string, Byte[]>  ;
    private int  ;
    private int  ;
    private int  ;
    private     ;
    internal bool  ;
    public int  ;
    private List`1<int>  ;
    private Byte[][]  ;
    private Byte[][][][]  ;
    private MemoryStream[]  ;
    public   (   ,    ,    );
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual      ​  ();
    public static String[][]  ();
    public virtual int   ​  ();
    public virtual void   ​ (int );
    public virtual int   ​  ();
    public    (   );
    public bool (int );
    public int (int );
    public int (int );
    public int (int );
    public    (   , Int32[] ,    );
    public int (int , int , int );
    public int (int , int , int );
    public bool  ();
    private    (BinaryReader , Int32[] );
    public virtual void   ​ (BinaryReader , string );
    private void (BinaryReader );
    private void (BinaryReader );
    private void (BinaryReader , bool , int , int );
    private void (BinaryReader , bool , int , int );
    private void (BinaryReader , bool , int , int );
    private void (BinaryReader , bool , int , int );
    private void (BinaryReader , bool , int , int );
    private void (BinaryReader , bool , int , int );
    private void (BinaryReader );
    private void (BinaryReader );
    private void (BinaryReader );
    private void (BinaryReader , bool , int , int );
    private void (BinaryReader );
    private void (BinaryReader , int , int );
    private void (short ,    );
    public virtual void   ​ (short ,    , int , int );
    private void  ();
    public virtual void   ​ (int , int );
    public virtual      ​ (   ,    );
    public virtual      ​ (   ,  );
    public virtual      ​ (   ,  );
    public virtual      ​ (   ,  );
    public virtual      ​ (   ,  );
    public virtual      ​ (   ,    ,    );
    public virtual void   ​  ();
    public virtual string ToString();
    public virtual MemoryStream   ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    private bool ;
    private int ;
    private Int32[] ;
    public   (   , bool , Int32[] , int );
    public virtual void   ​ ();
    private void ();
    public    ();
}
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
public     ;
    [DebuggerBrowsableAttribute("0")]
public     ;
    [DebuggerBrowsableAttribute("0")]
public     ;
    [DebuggerBrowsableAttribute("0")]
public     ;
    public   (    ,     ,     ,     );
    public     (double );
    public     (double );
    public     (double );
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static bool op_Equality(   ,    );
    public static bool op_Inequality(   ,    );
    public sealed virtual bool Equals(   );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :   <  > {
    public   (   );
    protected virtual void   ​ (   ,    ,  ​ ,     , bool );
    protected virtual void   ​ (    ,    ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : Stream {
    [DebuggerBrowsableAttribute("0")]
private Stream ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public bool CanRead { get; }
    public bool CanWrite { get; }
    public bool CanSeek { get; }
    public long Position { get; public set; }
    public long Length { get; }
    public bool CanTimeout { get; }
    public int ReadTimeout { get; public set; }
    public int WriteTimeout { get; public set; }
    protected   (Stream , bool );
    protected bool ();
    public Stream                     ();
    public virtual bool get_CanRead();
    public virtual bool get_CanWrite();
    public virtual bool get_CanSeek();
    public virtual long get_Position();
    public virtual void set_Position(long );
    public virtual long get_Length();
    public virtual int Read(Byte[] , int , int );
    public virtual int ReadByte();
    public virtual void Write(Byte[] , int , int );
    public virtual void WriteByte(byte );
    public virtual long Seek(long , SeekOrigin );
    public virtual void SetLength(long );
    public virtual void Flush();
    protected virtual void Dispose(bool );
    protected static Exception ();
    public sealed virtual bool get_CanTimeout();
    public sealed virtual int get_ReadTimeout();
    public sealed virtual void set_ReadTimeout(int );
    public sealed virtual int get_WriteTimeout();
    public sealed virtual void set_WriteTimeout(int );
    public sealed virtual IAsyncResult BeginRead(Byte[] , int , int , AsyncCallback , object );
    public sealed virtual int EndRead(IAsyncResult );
    public sealed virtual IAsyncResult BeginWrite(Byte[] , int , int , AsyncCallback , object );
    public sealed virtual void EndWrite(IAsyncResult );
    public sealed virtual void Close();
    [ObsoleteAttribute]
protected sealed virtual WaitHandle CreateWaitHandle();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  :  ​  {
    private string ;
    public  ​ (string );
    public virtual   ​ ​ ();
    public string ();
    public void (string );
}
internal class    : object {
    private    ;
    private bool ;
    private bool ;
    private bool ;
    private bool ;
    private int ;
    private int ;
    public    ();
    public void (   );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public int ();
    public void (int );
    public int ();
    public void (int );
    [NullableContextAttribute("1")]
public    (   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public static int ;
    public int ;
    public int ;
    public int ;
    public   (int , int , int );
    private static   ();
    public static int (double );
    public static double (int );
    public virtual void   ​ (Stream );
    public virtual string ToString();
}
internal static class    : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static string (string );
    [IteratorStateMachineAttribute("  /")]
public static IEnumerable`1<KeyValuePair`2<int, >> (string );
    public static string (string );
    public static string (string );
    public static string (string );
}
internal class    :    {
    public   (int , int , byte );
    public virtual bool   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    : ElementCollection`1<DrawingElement> {
    [DebuggerBrowsableAttribute("0")]
private    ;
    internal   (Element );
    internal    ();
    internal void (   );
}
[DefaultMemberAttribute("")]
internal class    : object {
    [NullableAttribute("1")]
internal Int16[] ;
    public short  { get; public set; }
    public short (int );
    public void (int , short );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    : ReadOnlyCollection`1<> {
    [DebuggerBrowsableAttribute("0")]
public   { get; internal set; }
    public   (int );
    public  (int );
    internal void (int ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private static Byte[] ;
    protected    ;
    public   (   );
    private static   ();
    public virtual void   ​ ();
    public virtual bool   ​ ();
}
internal abstract class    : AsymmetricKeyParameter {
    [NullableContextAttribute("1")]
public abstract virtual Byte[]   ​ (Byte[] , string , object );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class  ​  : KeyedCollection`2<string,  ​ > {
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int> ;
    [DebuggerBrowsableAttribute("0")]
public  ​   { get; }
    public  ​ (IEnumerable`1< ​ > );
    private int ();
    private void (int );
    public static  ​  (Stream );
    private void (    );
    private static  ​  (    );
    public void (Stream );
    private void (    );
    private static void (    ,  ​  );
    protected virtual string GetKeyForItem( ​  );
    public string (string , string , bool );
    private string ();
    public void (Predicate`1< ​ > , bool );
    [IteratorStateMachineAttribute(" ​ /")]
public IEnumerable`1< ​ > (Predicate`1< ​ > );
    public  ​  (Predicate`1< ​ > );
    public IEnumerable`1< ​ > (string );
    public  ​  (string );
    public  ​  (string );
    public void (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private Uri ;
    internal ​  (Uri );
    internal virtual Uri ​  ​ ();
    internal virtual string ​  ​ ();
    internal virtual DateTime ​  ​ ();
    internal virtual Stream ​  ​ ();
}
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    private bool ;
    private  ;
    private int ;
    private int ;
    private double ;
    private double  ;
    private   ;
    private bool  ;
    private   ;
    private bool  ;
    public bool Dither { get; }
    public double DpiX { get; }
    public double DpiY { get; }
    public ​  ( );
    internal bool ();
    internal void (bool );
    public  ();
    public void ( );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public double  ();
    public void (double );
    public double  ();
    public void (double );
    public   ();
    public void ( );
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Dither();
    public void (bool );
    public   ();
    public void ( );
    public bool ();
    public void (bool );
    public sealed virtual double get_DpiX();
    public void (double );
    public sealed virtual double get_DpiY();
    public void (double );
    [NullableContextAttribute("1")]
internal virtual void ​  ​ (    , Stream , string );
    [NullableContextAttribute("1")]
private void (    , Stream , string );
    [NullableContextAttribute("1")]
internal static ​   (string );
    private sealed virtual override bool ​  ​ ();
    private sealed virtual override Nullable`1<int> ​  ​  ();
    private sealed virtual override Nullable`1<int> ​  ​  ();
    private sealed virtual override int ​  ​  ();
    private sealed virtual override bool ​  ​ ();
    private sealed virtual override int ​  ​  ();
    private sealed virtual override int ​  ​  ();
}
[IsReadOnlyAttribute]
internal class ​   : ValueType {
    [DebuggerBrowsableAttribute("0")]
internal UInt32 ;
    [DebuggerBrowsableAttribute("0")]
internal UInt32 ;
    [DebuggerBrowsableAttribute("0")]
internal UInt32 ;
    [DebuggerBrowsableAttribute("0")]
internal UInt32 ;
    internal ​  (UInt32 , UInt32 , UInt32 , UInt32 );
    internal static ​   (​​  );
    internal void (​​  );
    [NullableContextAttribute("1")]
public virtual string ToString();
    public sealed virtual int CompareTo(​   );
    public sealed virtual int CompareTo(UInt32 );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : object {
    [DebuggerBrowsableAttribute("0")]
private static string ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    private static ​  ();
    internal  ();
    public void ( );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public string ();
    internal void (string );
    public string ();
    public void (string );
    public long ();
    internal void (long );
    public void (long );
    public virtual string ToString();
    private void ();
    internal static bool (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
internal static   <char> ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    private static ​  ();
    public virtual  ​  ​ ();
    public sealed virtual     ​  ​ (    , int , double );
    private int (    , int );
    protected virtual void ​  ​ (    , int , int );
    private static bool (   & ,    & ,    & ,     , int , int , double );
    private static double (    );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class ​   : object {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    private static ​  ();
    [ExtensionAttribute]
public static  (    );
    [ExtensionAttribute]
public static  (    );
    [ExtensionAttribute]
public static ​   (    );
    [ExtensionAttribute]
public static ​   (    );
    [ExtensionAttribute]
public static ​   (    );
    [ExtensionAttribute]
internal static  (    , bool ,  );
    [ExtensionAttribute]
internal static  (    , bool , [] );
    [ExtensionAttribute]
internal static  (    , bool , bool ,  );
    [ExtensionAttribute]
internal static  (    , bool , bool , [] );
    [ExtensionAttribute]
internal static void (    ,  , bool ,  );
    [ExtensionAttribute]
internal static void (    ,  , bool , [] );
    [ExtensionAttribute]
internal static void (    ,  , bool , bool ,  );
    [ExtensionAttribute]
internal static void (    ,  , bool , bool , [] );
    [ExtensionAttribute]
internal static Nullable`1<> ( , bool , bool ,  );
    [ExtensionAttribute]
internal static Nullable`1<> ( , bool , bool , [] );
    [ExtensionAttribute]
internal static Nullable`1<> ( , bool , bool , bool ,  );
    [ExtensionAttribute]
internal static Nullable`1<> ( , bool , bool , bool , [] );
    [ExtensionAttribute]
internal static void ( ,  , bool ,  );
    [ExtensionAttribute]
internal static void ( ,  , bool , [] );
    [ExtensionAttribute]
internal static void ( ,  , bool , bool ,  );
    [ExtensionAttribute]
internal static void ( ,  , bool , bool , [] );
    [ExtensionAttribute]
private static void ( ,  , bool , bool );
    [ExtensionAttribute]
internal static void (    ,  );
    [ExtensionAttribute]
internal static  (    );
    [ExtensionAttribute]
internal static void (    , ​   , ​   );
    [ExtensionAttribute]
internal static  (    );
    [ExtensionAttribute]
internal static void (    );
    [ExtensionAttribute]
internal static ​   (    );
    [ExtensionAttribute]
internal static ​   (    );
    [ExtensionAttribute]
internal static ​   (​   ,     );
    [ExtensionAttribute]
internal static TPdfObject (TPdfObject ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
internal ushort ;
    [DebuggerBrowsableAttribute("0")]
private ushort ;
    [DebuggerBrowsableAttribute("0")]
private ushort ;
    [DebuggerBrowsableAttribute("0")]
private ushort ;
    [DebuggerBrowsableAttribute("0")]
private ushort ;
    [DebuggerBrowsableAttribute("0")]
private ushort ;
    [DebuggerBrowsableAttribute("0")]
private ushort  ;
    [DebuggerBrowsableAttribute("0")]
private ushort  ;
    [DebuggerBrowsableAttribute("0")]
private ushort  ;
    [DebuggerBrowsableAttribute("0")]
private ushort  ;
    [DebuggerBrowsableAttribute("0")]
private ushort  ;
    [DebuggerBrowsableAttribute("0")]
private ushort  ;
    [DebuggerBrowsableAttribute("0")]
private ushort  ;
    [DebuggerBrowsableAttribute("0")]
private ushort  ;
    internal static ​   ();
    public virtual UInt32 ​  ​ ();
    protected virtual bool ​  ​ ();
    internal virtual void ​  ​ (​​  , UInt32 );
    internal virtual UInt32 ​  ​ (​​  , Nullable`1& );
    internal virtual ​   ​  ​ (ICollection`1<ushort> );
    internal virtual void ​  ​ (​   , ICollection`1<ushort> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   : object {
    [DebuggerBrowsableAttribute("0")]
private int ;
    private  ;
    private  ;
    private  ;
    protected ​  ( ,  ,  , int );
    public  ();
    public  ();
    public  ();
    protected virtual bool ​  ​ ();
    public string ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private Action`1<List`1< >> ;
    public ​  (​   , Action`1<List`1< >> , ​   , Stream );
    internal virtual UInt32 ​  ​ (​​  , Nullable`1& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : object {
    private ​   ;
    private Stream ;
    private long ;
    private int ;
    private int ;
    public ​  (​   , Stream , long , int , int );
    public ​   ();
    public Stream ();
    public long ();
    public int ();
    public int ();
}
[DefaultMemberAttribute(" ")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private IList`1<​  > ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
public ​     { get; }
    [DebuggerBrowsableAttribute("0")]
private ​     { get; }
    internal ​  (​   );
    public ​   ();
    public ​   ();
    private void (​   );
    internal void (​   );
    protected virtual ​      ​ ();
    protected virtual     ​  ​  ();
    public virtual     ​ ();
    protected virtual bool ​  ​ ();
    internal virtual int ​  ​  ();
    internal virtual int ​  ​  ();
    protected virtual int ​  ​  ();
    protected virtual int ​  ​  ();
    protected virtual int ​  ​  ();
    protected virtual int ​  ​  ();
    protected virtual int ​  ​  ();
    protected virtual int ​  ​  ();
    protected virtual int ​  ​  ();
    public virtual int ​  ​  ();
    public virtual int ​  ​  ();
    public virtual double ​  ​  ();
    public virtual int ​  ​  ();
    public virtual int ​  ​ (Int32& );
    public virtual int ​  ​ (Int32& );
    public virtual int ​  ​ (Int32& );
    public virtual int ​  ​  ();
    public virtual int ​  ​  ();
    public virtual int ​  ​  ();
    public virtual int ​  ​  ();
    public virtual int ​  ​  ();
    public virtual int ​  ​  ();
    public virtual bool ​  ​ ();
    public virtual bool ​  ​ ();
    public virtual bool ​  ​  ();
    public virtual int ​  ​  ();
    public virtual int ​  ​  ();
    public virtual ushort ​  ​  ();
    public virtual  ​  ​  ();
    public virtual ​   ​  ​  ();
    public int ();
    public ​   (UInt32 );
    private ​   (int );
    public TTable ( );
    public bool (UInt32 );
    public bool ( );
    public ​   ( );
    public ​   (UInt32 );
    public void (​   );
    public bool (UInt32 );
    public bool ( );
    internal virtual void ​  ​ (   & ,    & ,    & , Boolean& , Boolean& , & );
    public virtual IEnumerable`1<KeyValuePair`2<CultureInfo, string>> ​  ​ ( );
    internal virtual     ​  ​  ();
    public virtual     ​  ​  ();
    public virtual     ​  ​  ();
    public virtual     ​  ​  ();
    public virtual     ​  ​  ();
    public virtual     ​  ​  ();
    public virtual     ​  ​  ();
    public virtual     ​  ​  ();
    public virtual     ​  ​  ();
    public virtual byte ​  ​  ();
    public virtual ​   ​  ​ (ICollection`1<ushort> );
    public virtual void ​  ​ (Stream , bool , ICollection`1<int> );
    public ​   (IEnumerable`1<KeyValuePair`2<UInt32, bool>> , ICollection`1<ushort> );
    private void (​   , ICollection`1<ushort> );
    public virtual void    ​ (Stream );
    internal void (​  [] , ​​  );
    private void (Stream , ​  [] , ​​  );
    internal ​  [] (Stream , IDictionary`2<​  , ​  > );
    private static ​   (​   , Stream , IDictionary`2<​  , ​  > );
    protected virtual  ​  ​  ();
    internal Byte[] (​   , bool );
    private sealed virtual override ​   ​  ​ ();
    [IteratorStateMachineAttribute("​  /")]
private sealed virtual override IEnumerable`1<​  > ​  ​  ();
    private sealed virtual override ​​  ​  ​ (​   );
    private sealed virtual override ​​  ​  ​ (​   );
    private sealed virtual override bool ​  ​ ();
    private sealed virtual override int ​  ​ ();
    private sealed virtual override void ​  ​ (​   );
    private sealed virtual override bool ​  ​ (​   );
    private sealed virtual override void ​  ​ ();
    private sealed virtual override bool ​  ​ (​   );
    private sealed virtual override void ​  ​ (​  [] , int );
    [IteratorStateMachineAttribute("​  /")]
private sealed virtual override IEnumerator`1<​  > ​  ​  ();
    [IteratorStateMachineAttribute("​  /")]
private sealed virtual override IEnumerator ​  ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    private ​   ;
    private  ;
    public ​  (string ,  , int ,  ,  , Nullable`1<> );
    public ​   ();
    public  ();
    protected virtual bool ​  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   :     {
    [ThreadStaticAttribute]
internal static  ;
    [DebuggerBrowsableAttribute("0")]
private SKTypeface ;
    [DebuggerBrowsableAttribute("0")]
private static Regex ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [ThreadStaticAttribute]
internal static  ;
    [DebuggerBrowsableAttribute("0")]
private Face ;
    private static ​  ();
    internal SKTypeface ();
    internal void ();
    public ​   ();
    public sealed virtual bool    ​ ();
    public sealed virtual bool    ​ ();
    protected abstract virtual     ​  ​  ();
    public      ();
    public int  ();
    public sealed virtual Uri    ​ ();
    protected abstract virtual bool ​  ​ ();
    internal abstract virtual int ​  ​  ();
    internal abstract virtual int ​  ​  ();
    protected abstract virtual int ​  ​  ();
    protected abstract virtual int ​  ​  ();
    protected abstract virtual int ​  ​  ();
    protected abstract virtual int ​  ​  ();
    protected abstract virtual int ​  ​  ();
    protected abstract virtual int ​  ​  ();
    protected virtual int ​  ​  ();
    public virtual int ​  ​  ();
    public virtual int ​  ​  ();
    public virtual double ​  ​  ();
    public virtual int ​  ​  ();
    public virtual int ​  ​ (Int32& );
    private protected static void (Int32& , Int32& );
    public virtual int ​  ​ (Int32& );
    public virtual int ​  ​ (Int32& );
    public abstract virtual int ​  ​  ();
    public abstract virtual int ​  ​  ();
    public abstract virtual int ​  ​  ();
    public abstract virtual int ​  ​  ();
    public abstract virtual int ​  ​  ();
    public abstract virtual int ​  ​  ();
    public virtual bool ​  ​ ();
    public abstract virtual bool ​  ​ ();
    public abstract virtual bool ​  ​  ();
    public abstract virtual int ​  ​  ();
    public abstract virtual int ​  ​  ();
    public virtual ushort ​  ​  ();
    public virtual  ​  ​  ();
    public double  ();
    public abstract virtual ​   ​  ​  ();
    internal abstract virtual void ​  ​ (   & ,    & ,    & , Boolean& , Boolean& , & );
    public abstract virtual IEnumerable`1<KeyValuePair`2<CultureInfo, string>> ​  ​ ( );
    internal abstract virtual     ​  ​  ();
    public abstract virtual     ​  ​  ();
    public abstract virtual     ​  ​  ();
    public abstract virtual     ​  ​  ();
    public abstract virtual     ​  ​  ();
    public abstract virtual     ​  ​  ();
    public abstract virtual     ​  ​  ();
    public abstract virtual     ​  ​  ();
    public abstract virtual     ​  ​  ();
    public abstract virtual byte ​  ​  ();
    public abstract virtual ​   ​  ​ (ICollection`1<ushort> );
    public abstract virtual void ​  ​ (Stream , bool , ICollection`1<int> );
    public Byte[] (ICollection`1<ushort> );
    public bool (​   );
    private static int (Uri , Uri );
    internal   ();
    protected abstract virtual  ​  ​  ();
    internal Face  ();
    internal void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   :     {
    internal ​  (    , ​   );
    protected virtual        ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    internal virtual IEnumerable`1<​  > ​  ​ ();
    internal static string ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   :     {
    [DebuggerBrowsableAttribute("0")]
private Stream ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private char ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    internal ​  (string , string , Stream , long , int , int , char , string  );
    public Stream ();
    public long ();
    public int ();
    public int ();
    public char ();
    public string ();
}
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private UInt32 ;
    internal ​  (UInt32 );
    [CompilerGeneratedAttribute]
public virtual UInt32 ​  ​ ();
    public virtual bool ​  ​ ();
    protected virtual bool ​  ​ ();
    internal virtual void ​  ​ (​​  , UInt32 );
    internal virtual UInt32 ​  ​ (​​  , Nullable`1& );
    [NullableContextAttribute("1")]
internal virtual void ​  ​ (​   , ICollection`1<ushort> );
}
internal class ​   :     {
    [NullableContextAttribute("1")]
internal ​  (   ,    , bool , bool , bool , bool , bool , EventHandler`1<​  >  );
}
internal class    :    {
    [NullableContextAttribute("1")]
public virtual void   ​ (   );
    public virtual void   ​ (double );
    public virtual void   ​ (double );
    public virtual void   ​ (double );
    public virtual void   ​ (double );
}
internal class    :    {
    [NullableContextAttribute("1")]
public   (   , int , byte );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    protected    ;
    protected    ;
    protected    ;
    protected    ;
    protected    ;
    protected    ;
    protected    ;
    protected     ;
    protected     ;
    protected     ;
    protected int  ;
    protected int  ;
    private string  ;
    public   (   , string );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public    ();
    public    ();
    public    ();
    public    ();
    public    ();
    public    ();
    public    ();
    public     ();
    public     ();
    public     ();
    public     ();
    public     ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    public static CultureInfo ;
    private ReadOnlyCollection`1<string> ;
    protected Dictionary`2<string,   > ;
    private CultureInfo ;
    protected   (CultureInfo );
    private static   ();
    public CultureInfo ();
    public void (CultureInfo );
    public string ();
    public ReadOnlyCollection`1<string> ();
    [NullableContextAttribute("2")]
public abstract virtual      ​ (string ,    );
    public void (string , int ,    ,    , string );
    public void (string , int , int ,    ,    , string );
    public void (string , int , int ,    , bool ,    , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    public   (int , int , byte ,    );
    public   (int , int , byte ,    ,    ,    );
    public virtual int   ​ (int , int , int );
    public virtual int   ​ (int , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private static Char[] ;
    internal static string ;
    private    ;
    private string ;
    private    ;
    private int ;
    public   (string , int ,    );
    private static   ();
    public string ();
    public    ();
    private void (   );
    public int ();
    private void (int );
    public void ();
    internal object ();
    internal void (object );
    private void ();
    private void ();
    private void (int );
    private bool (string );
}
internal abstract class    : object {
    [NullableAttribute("1")]
public  ;
    [NullableAttribute("1")]
public  ;
    public abstract virtual void   ​ (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private string ;
    private string ;
    private  ;
    private double ;
    private     ;
    private     ;
    private     ;
    private     ;
    public   (string , string ,  , double ,     ,     ,     ,     ,   );
    public virtual    ​ ();
    public virtual string   ​ ();
    public    ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :  ​<  ,   > {
    public   (   );
    private static bool (ReadOnlyCollection`1<  > );
    internal bool ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private IList`1<Byte[]> ;
    private IList`1<Byte[]> ;
    public IList`1<Byte[]> ();
    public IList`1<Byte[]> ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : object {
    private protected UInt32[] ;
    private protected int ;
    private protected UInt32 ;
    public  ​ (Stream );
    internal  ​ (UInt32[] , int , UInt32 );
    public static  ​  (Assembly , string );
    internal void (Stream );
    public UInt32 (int );
}
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    public   (double ,  ,  );
    public   (double );
    public double ();
    public  ();
    public  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private static string ;
    public int ;
    public int ;
    public int ;
    public Int32[] ;
    protected internal   (int , Byte[] , int , int );
    private static   ();
    public virtual string ToString();
    public static double (int );
    public static short (int );
    public static double (int );
    public int (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : Exception {
    public   (string );
    public   (string , string );
    protected   (SerializationInfo , StreamingContext );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private string ;
    private int ;
    private int ;
    private    ;
    private bool ;
    private    ;
    private string ;
    public   (string , int , int ,    , bool ,    , string );
    public string ();
    private void (string );
    public int ();
    private void (int );
    public int ();
    private void (int );
    public    ();
    private void (   );
    public bool ();
    private void (bool );
    public     ();
    public string ();
    public void (ICollection`1<  > );
    public bool ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public    ;
    public int ;
    public int ;
    public Int32[] ;
    public Double[] ;
    public Single[] ;
    public Int32[] ;
    public Boolean[]  ;
    public int  ;
    public int  ;
    public   (int , int , int , Byte[] , Int32[] , Double[] , Boolean[] , int  , bool  );
    public virtual void   ​ (Int32[] , Double[] , Boolean[] , int , bool );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private  ;
    public   (   ,  );
    public    ();
    private void (   );
    public  ();
    public void ( );
    public    ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private bool ;
    private int ;
    private bool ;
    private bool ;
    public   (   );
    public  ();
    public void ();
    public void ();
    public void ();
    public bool  ();
    public bool  ();
    public void ();
    private  ();
    private void ();
    private void  ();
    private void  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static    (Func`3<, , double> , ICollection`1<> );
    public static    ( , Func`3<, , double> , ICollection`1<> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public virtual bool   ​ ( ,  ,   [] );
    public virtual   []   ​ ( ,  );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual object   ​ ();
    public abstract virtual object   ​ ();
    public abstract virtual X509KeyStorageFlags   ​ ();
    public abstract virtual bool   ​ ();
    public abstract virtual bool   ​ ();
    public abstract virtual bool   ​ ();
    public abstract virtual bool   ​ ();
    public abstract virtual Byte[]   ​ (Byte[] , string , object );
    public abstract virtual bool   ​ (Byte[] , Byte[] , string , object );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : object {
    private DocumentModel ;
    private     ;
    internal PaginatorOptions ;
    private ​  ;
    private     ;
    private     ;
    private     ;
    private bool  ;
    private bool  ;
    private int  ;
    private int  ;
    private int  ;
    private bool  ;
    private    < ​>  ;
    private bool  ;
    private int  ;
    internal bool  ;
    private ParagraphStyle  ;
    private    <Stream>  ;
    private List`1< ​>  ;
    public  ​ (DocumentModel ,     , PaginatorOptions ,     , ​  , bool );
    public ParagraphStyle ();
    private void (ParagraphStyle );
    public    <Stream> ();
    public List`1< ​> ();
    public bool ();
    public bool ();
    internal void (bool );
    internal ​  ();
    public  ​ ();
    public    (DrawingElement );
    public  ​ (DrawingElement ,   & );
    public  ​ (Field ,   & );
    public Tuple`2< ​,   > (Func`1<  > );
    private  ​  ();
    private static bool ( ​ );
    private static bool (   );
    private static bool ( ​ );
    private static bool ( ​ ,    );
    private static void (DocumentProperties ,  ​ );
    private void ( ​ );
    private    (Section );
    private void (   );
    private void  ();
    private HeaderFooter  ();
    private void (HeaderFooter , HeaderFooter , HeaderFooter ,  ​ , Boolean& , Boolean& );
    private  ​ (HeaderFooter );
    public void (IList`1<Block> ,  ​ );
    private static bool (IList`1<Block> , int );
    private  ​ (Table );
    private  ​ (Note );
    private int  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public static void (   );
    private static string (string );
}
internal class    : IOException {
    [NullableContextAttribute("1")]
public   (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    public    ();
    public void (Stream );
}
internal static class    : object {
    public static int (int , int , int );
    public static int (int , int , int , int );
    public static int (int );
    public static int (int );
    public static int (int );
    public static int (int );
    private static void (int , Int32& , Int32& , Int32& , Int32& );
    public static void (int , Int32& , Int32& , Int32& );
    public static int (int , double );
    private static void (Int32& , Int32& , Int32& , double );
    public static double (double );
    public static double (double );
    public static void (double , double , double , Double& , Double& , Double& );
    public static void (double , double , double , Double& , Double& , Double& );
    public static void (double , double , double , Double& , Double& , Double& );
    public static void (double , double , double , Double& , Double& , Double& );
    public static int (double );
    public static double (int );
}
internal interface    {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private DocumentModel ;
    private  ​ <   > ;
    private     ;
    private  ​ <   > ;
    private     ;
    private  ​ <   > ;
    private     ;
    private  ​ <   >  ;
    private      ;
    private  ​ <   >  ;
    private      ;
    private  ​ <   >  ;
    private      ;
    private  ​ <   >  ;
    private      ;
    private  ​ <   >  ;
    private      ;
    internal   (DocumentModel );
    private void (T& );
    internal  ​ <   > ();
    internal     ();
    internal  ​ <   > ();
    internal     ();
    internal  ​ <   > ();
    internal     ();
    internal  ​ <   > ();
    internal      ();
    internal  ​ <   >  ();
    internal      ();
    internal  ​ <   >  ();
    internal      ();
    internal  ​ <   >  ();
    internal      ();
    internal  ​ <   >  ();
    internal      ();
    internal void (CharacterStyle );
    internal void (ParagraphStyle );
    internal void (TableStyle );
    private void (T& , Style );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    protected internal int ;
    protected internal    ;
    protected internal   (   );
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int , int );
    public virtual int   ​ (int , int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual void   ​ (int , int );
    public virtual void   ​  ();
    public virtual      ​ (   );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual      ​ (   );
    public virtual int   ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    private bool ;
    private bool ;
    public   (   , bool );
    public virtual void   ​ ();
    private void ();
    public    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : Stream {
    [DebuggerBrowsableAttribute("0")]
protected internal    ;
    [DebuggerBrowsableAttribute("0")]
protected internal int ;
    [DebuggerBrowsableAttribute("0")]
protected internal int ;
    [DebuggerBrowsableAttribute("0")]
protected internal Byte[] ;
    [DebuggerBrowsableAttribute("0")]
protected internal Byte[] ;
    [DebuggerBrowsableAttribute("0")]
protected internal bool ;
    [DebuggerBrowsableAttribute("0")]
private Stream ;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public   (Stream );
    public   (Stream , int );
    private void ();
    public virtual int   ​            ();
    public virtual void   ​   ​​           (int );
    public virtual long   ​       ​    ​();
    public virtual long   ​ ​​            ();
    public void      ​     ​            (int );
    public virtual void WriteByte(byte );
    public virtual void Write(Byte[] , int , int );
    public virtual void   ​                   ();
    public virtual void   ​             ​  ​();
    public virtual void Close();
    public virtual void Flush();
    public virtual int Read(Byte[] , int , int );
    public virtual void SetLength(long );
    public virtual long Seek(long , SeekOrigin );
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    private static   ();
    private static void (string , string , string , Func`2& , Func`2& );
    [ExtensionAttribute]
public static TResult (X509Certificate2 , TParam , Func`3<AsymmetricAlgorithm, TParam, TResult> );
    [ExtensionAttribute]
public static TResult (X509Certificate2 , TParam , Func`3<AsymmetricAlgorithm, TParam, TResult> );
    [ExtensionAttribute]
public static TResult (PublicKey , TParam , Func`3<AsymmetricAlgorithm, TParam, TResult> );
    [ExtensionAttribute]
public static Byte[] (X509Certificate2 , Byte[] , string , object );
    [ExtensionAttribute]
public static bool (X509Certificate2 , Byte[] , Byte[] , string , object );
    [ExtensionAttribute]
private static RSACryptoServiceProvider (RSACryptoServiceProvider );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : ValueType {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public  ​ (int , int , int , int );
    public static Rectangle op_Implicit( ​  );
    public static  ​  op_Implicit(Rectangle );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public int  ();
    public bool  ();
    public bool  ();
    internal static  ​  (IEnumerable`1< ​ > );
    public bool ( ​  );
    public virtual int GetHashCode();
    public sealed virtual bool Equals( ​  );
    public virtual bool Equals(object );
    public virtual string ToString();
    public string (string , IFormatProvider );
    public static bool op_Equality( ​  ,  ​  );
    public static bool op_Inequality( ​  ,  ​  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private static Regex ;
    private static Char[] ;
    private static Char[] ;
    private Func`2<CultureInfo,   > ;
    private Dictionary`2<CultureInfo,   > ;
    private StringBuilder ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<KeyValuePair`2<int,   >> ;
    private List`1<int>  ;
    private List`1<int>  ;
    private double  ;
    private double  ;
    private bool  ;
    private   ;
    private CultureInfo  ;
    public   (Func`2<CultureInfo,   > , int , double , bool );
    private static   ();
    public double ();
    public double ();
    private bool ();
    public bool ( ​ ,  , bool );
    private static void (List`1<int> , List`1<int> );
    private static void (List`1<int> , int , Int32& );
    private    (CultureInfo );
    private bool (int );
    private static void (   , int );
    internal bool (   );
    internal bool ( ​ );
    internal static bool (   );
    private void ( ​ );
    private static CultureInfo ( ​ );
    [NullableContextAttribute("0")]
private string (Match );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private static    ;
    private static   ();
    public static void (   );
    internal static Stream (string , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    public   (Stream );
    public   (string );
    public sealed virtual ICollection`1<string>   ​ ();
    public sealed virtual ICollection`1<string>   ​ ();
    public sealed virtual ICollection`1<  >   ​ ();
    public sealed virtual ICollection`1<  >   ​ ();
    public sealed virtual      ​ ();
    public sealed virtual      ​ (string );
    public    (string );
    public sealed virtual void   ​ ();
    public sealed virtual void Dispose();
}
internal static class    : object {
    [NullableAttribute("1")]
public static Int32[] ;
    private static   ();
    public static int (int );
    public static bool (int );
    public static int (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private static String[][] ;
    private    ;
    private    ;
    private    ;
    private int ;
    private Int32[][] ;
    private    ;
    private     ;
    private     ;
    private     ;
    private Int32[]  ;
    private bool  ;
    public   (   ,    , Int32[] ,    );
    public static String[][] ();
    public virtual bool   ​ ();
    public virtual string ToString();
    public virtual int   ​ (int );
    public static Int32[] (Int32[] , int , Int32[] );
    public virtual int   ​ (int );
    public virtual      ​ (   , int );
    public sealed virtual void   ​ ();
    public sealed virtual bool   ​ (int );
    public virtual      ​ (   , int );
    private    (   , int );
    private    (   , int );
    public virtual void   ​ (int , int );
    public virtual void   ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
private static Regex ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    private   (string , string );
    private static   ();
    [IteratorStateMachineAttribute("  /")]
public static IEnumerable`1<  > (string );
    [IteratorStateMachineAttribute("  /")]
public static IEnumerable`1<string> (string , string );
    public static IEnumerable`1<string> ( , string );
    private static string (string , string );
    private static string (string );
    private static  (string );
    private static string ( );
    public  ();
    public string ();
    public string ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private    ;
    private    ;
    private    ;
    public    ();
    public void (   );
    public    ();
    public void (   );
    public void (   , Stream );
    public void (Stream ,    );
    private void (Stream );
    private    ();
    public    ();
    public    ();
    public void (int ,  );
    private void (   );
    private void (   );
}
internal static class    : object {
    [IteratorStateMachineAttribute("  /")]
[NullableContextAttribute("1")]
internal static IEnumerable`1<   > (IEnumerable`1<T> );
    internal static double (    ,     , bool );
    internal static double (    ,     , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public virtual void   ​ ( , string , string , Object[] );
    public virtual void   ​ ( , object , string , string , Object[] );
    public virtual void   ​ ( , string , string , Object[] );
    public virtual void   ​ ( , object , string , string , Object[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static    ;
    private static   ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : object {
    public string ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public  ​  ;
    public bool  ;
    public long  ;
    public long  ;
    public long  ;
    public  ​ (string ,     ,     ,     ,     ,     ,     ,      );
    public bool ( ​ & );
    public  ​  (    ,     );
    public  ​  (    , bool );
    public  ​  (string );
    public     ();
    public     (string );
    public     (Byte[] );
    public     (    );
    public     (string );
    public     (Byte[] );
    public     (    );
    private     (Byte[] ,     );
    public static  ​  ();
    public static  ​  ();
    public static  ​  ();
    public static  ​  ();
    public static  ​  (string );
    [IteratorStateMachineAttribute(" ​ /")]
public static IEnumerable`1< ​ > ();
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
internal interface    {
    public int PageCount { get; }
    public abstract virtual      ​ ();
    public abstract virtual int get_PageCount();
    public abstract virtual  ​   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual      ​ ();
    public abstract virtual       ​ (int );
    public abstract virtual       ​ (int , object );
    public abstract virtual void   ​ (int , object , object );
    public abstract virtual      ​ (int ,    );
    public abstract virtual object   ​ (Type );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual      ​ (int , int , Byte[] );
    public abstract virtual      ​ (object );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private    ;
    private    ;
    private List`1<UInt32> ;
    private List`1<  > ;
    internal   (   ,    ,    );
    private void (UInt32 );
    private void (UInt32 , string );
    private    (UInt32 , string );
    private void (UInt32 );
    internal    (string );
    internal    (UInt32 );
    internal UInt32 ();
    internal ulong ();
    internal ReadOnlyCollection`1<string> ();
    internal ReadOnlyCollection`1<string> ();
    internal ReadOnlyCollection`1<string> ();
    internal ReadOnlyCollection`1<string> ();
    internal ReadOnlyCollection`1<  > ();
    internal ReadOnlyCollection`1<  >  ();
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private Func`2<int, > ;
    [DebuggerBrowsableAttribute("0")]
private Func`1<int> ;
    public int Count { get; }
    public bool IsReadOnly { get; }
    public  Item { get; public set; }
    public   (Func`2<int, > , Func`1<int> );
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual  get_Item(int );
    public sealed virtual void set_Item(int ,  );
    [IteratorStateMachineAttribute("  /")]
public sealed virtual IEnumerator`1<> GetEnumerator();
    private sealed virtual override IEnumerator   ​ ();
    public sealed virtual int IndexOf( );
    public sealed virtual bool Contains( );
    public sealed virtual void CopyTo([] , int );
    public sealed virtual void Insert(int ,  );
    public sealed virtual void Add( );
    public sealed virtual void RemoveAt(int );
    public sealed virtual bool Remove( );
    public sealed virtual void Clear();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    private    ;
    private    ;
    private int ;
    private Int32[] ;
    private    ;
    private    ;
    private     ;
    private     ;
    private static String[][]  ;
    public   (   ,    );
    private static   ();
    public static String[][] ();
    public virtual bool   ​ ();
    public virtual int   ​ (int );
    public static Int32[] (Int32[] , int , Int32[] );
    private void ();
    private void ();
    public virtual string ToString();
    public virtual int   ​ (int );
    public virtual      ​ (   , int );
    public sealed virtual void   ​ ();
    public sealed virtual bool   ​ (int );
    public virtual      ​ (   , int );
    private    (   , int );
    private    (   , int );
    public virtual void   ​ (int , int );
    public virtual void   ​  ();
}
internal class    : object {
    private int ;
    private Color ;
    internal   (int , Color );
    public int ();
    internal Color ();
    [NullableContextAttribute("1")]
public    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private byte ;
    private int ;
    private Byte[] ;
    internal   (byte , int , int );
    public byte ();
    public int ();
    public Byte[] ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    [IteratorStateMachineAttribute("  / ")]
public static IEnumerable`1<  > (IEnumerable`1<​ > , ​  , IEnumerable`1<  > , List`1<  > );
    public static    (   , ​  , IEnumerable`1<  > , List`1<  > );
    private static void (IEnumerable`1<​ > , IEnumerable`1<  > , List`1<  > );
    [IteratorStateMachineAttribute("  / ")]
private static IEnumerable`1<  > (IEnumerable`1<  > , IEnumerable`1<  > );
    private static bool (   ,    , IEnumerable`1<  > );
    private static bool (   ,    , IEnumerable`1<  > );
    [IteratorStateMachineAttribute("  / ")]
private static IEnumerable`1<  > (​  ,    , IEnumerable`1<  > );
    private static void (   , List`1<  > , IList`1<  > , IDictionary`2<  , int> );
    private static void (   , List`1<  > );
    private static void (​  ,    , IList`1<  > , IEnumerable`1<  > );
    private static int (   , double , double , IEnumerable`1<  > , Double& );
    private static int (IList`1<  > , int );
    private static bool (   , IList`1<  > , int , int );
    private static void (List`1<  > , int , int );
    private static void (List`1<  > , int , int , int );
    [IteratorStateMachineAttribute("  / ")]
private static IEnumerable`1<  > (​  ,    , IEnumerable`1<  > , IList`1<  > );
    private static void (   , List`1<  > , IList`1<  > );
    private static void (   , IList`1<  > );
    private static void (​  ,    , IList`1<  > , IEnumerable`1<  > , IList`1<  > );
    private static int (   , double , double , IEnumerable`1<  > , Double& );
    private static int (   );
    private static int (   );
    private static bool (IList`1<  > , int , int );
    private static void (IList`1<  > , int , int , int );
    private static void (   , IEnumerable`1<  > );
    private static int (int , int , int , string );
    private static    (    , int , int ,    , IEnumerable`1<  > );
    private static void (​  ,     , IEnumerable`1<  > );
    private static bool (   ,    , Int32& , Int32& );
    private static bool (   ,    , Int32& , Int32& );
    [IteratorStateMachineAttribute("  /")]
private static IEnumerable`1<  > (   , IEnumerable`1<  > );
    private static double (   ,    , Dictionary`2<  ,   > , IEnumerable`1<  > );
    private static double (IEnumerable`1<  > );
    private static double (IEnumerable`1<double> );
    private static double (IEnumerable`1<double> , Double& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private int ;
    private float ;
    private float ;
    private float ;
    private float ;
    private float ;
    private float ;
    private     ;
    private Single[]  ;
    private Single[]  ;
    private Single[]  ;
    public void (   , Single[] );
    public void (int , int , int , Single& , Single& , Single& );
    public void (float , float , float , Int32& , Int32& , Int32& );
    private static int (float );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private Byte[] ;
    private int ;
    private int ;
    private Byte[] ;
    public static    ();
    public Byte[] ();
    public void (Byte[] );
    private void ();
    public void (Byte[] , int , Byte[] , int , int );
    public void (Byte[] , int , int );
    public void (Byte[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  :  {
    private List`1< ​ > ;
    private List`1<ContentRange> ;
    private StringWriter ;
    private int ;
    private ContentPosition ;
    public  ​ (ContentRange , string , StringWriter ,  , IEnumerable`1< ​ > );
    private int ();
    public List`1<ContentRange> ();
    private Nullable`1< ​ > ();
    private void (Element , Action , Func`2<int, ContentPosition> );
    private void (Element );
    private void (Element , Func`2<int, ContentPosition> );
    public virtual void    ​ (DocumentModel );
    public virtual void    ​ (Section );
    public virtual void    ​ (HeaderFooter );
    public virtual void    ​ (Paragraph );
    public virtual void    ​ (TableOfEntries );
    public virtual void    ​ (Table );
    public virtual void    ​ (TableRow );
    public virtual void    ​ (TableCell );
    public virtual void    ​ (Run );
    public virtual void    ​ (SpecialCharacter );
    public virtual void    ​ (Field );
    public virtual void    ​ (Hyperlink );
    public virtual void    ​ (Shape );
    public virtual void    ​ (TextBox );
    public virtual void    ​ (Picture );
    public virtual void    ​ (BookmarkEnd );
    public virtual void    ​ (BookmarkStart );
    public virtual void    ​ (PreservedInline );
    public virtual void    ​ (Chart );
    public virtual void    ​ (Note );
    [DebuggerHiddenAttribute]
private void (DocumentModel );
    [DebuggerHiddenAttribute]
private void (Section );
    [DebuggerHiddenAttribute]
private void (HeaderFooter );
    [DebuggerHiddenAttribute]
private void (Paragraph );
    [DebuggerHiddenAttribute]
private void (TableOfEntries );
    [DebuggerHiddenAttribute]
private void (Table );
    [DebuggerHiddenAttribute]
private void (TableRow );
    [DebuggerHiddenAttribute]
private void (TableCell );
    [DebuggerHiddenAttribute]
private void (Run );
    [DebuggerHiddenAttribute]
private void (SpecialCharacter );
    [DebuggerHiddenAttribute]
private void (Field );
    [DebuggerHiddenAttribute]
private void (Hyperlink );
    [DebuggerHiddenAttribute]
private void (Shape );
    [DebuggerHiddenAttribute]
private void (TextBox );
    [DebuggerHiddenAttribute]
private void (Picture );
    [DebuggerHiddenAttribute]
private void (BookmarkEnd );
    [DebuggerHiddenAttribute]
private void (BookmarkStart );
    [DebuggerHiddenAttribute]
private void (PreservedInline );
    [DebuggerHiddenAttribute]
private void (Chart );
    [DebuggerHiddenAttribute]
private void (Note );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    internal static string (int , string , string );
    private static string (int , bool );
    private static string (int , bool );
}
internal class    :    {
    protected internal static int ;
    public   (int , int , byte );
    [NullableContextAttribute("1")]
public   (int , int , byte ,    , string );
    private static   ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private List`1<byte> ;
    private int ;
    private    ;
    internal   (   );
    private void ();
    internal void (UInt32 );
    internal void ();
    internal void (Stream );
}
[DefaultMemberAttribute("Item")]
[DebuggerTypeProxyAttribute("GemBox.Collections.DictionaryDebugView`2")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
public static   <, > ;
    [DebuggerBrowsableAttribute("0")]
private IDictionary`2<, > ;
    public bool IsReadOnly { get; }
    public int Count { get; }
    public ICollection`1<> Keys { get; }
    public ICollection`1<> Values { get; }
    public  Item { get; public set; }
    public   (IDictionary`2<, > );
    private static   ();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual int get_Count();
    public sealed virtual ICollection`1<> get_Keys();
    public sealed virtual ICollection`1<> get_Values();
    public sealed virtual  get_Item( );
    public sealed virtual void set_Item( ,  );
    public sealed virtual bool TryGetValue( , & );
    public sealed virtual bool ContainsKey( );
    public sealed virtual bool Contains(KeyValuePair`2<, > );
    public sealed virtual void CopyTo(KeyValuePair`2[] , int );
    public sealed virtual IEnumerator`1<KeyValuePair`2<, >> GetEnumerator();
    private sealed virtual override IEnumerator   ​ ();
    private sealed virtual override void   ​ ( ,  );
    private sealed virtual override void   ​ (KeyValuePair`2<, > );
    private sealed virtual override bool   ​ ( );
    private sealed virtual override bool   ​ (KeyValuePair`2<, > );
    private sealed virtual override void   ​ ();
}
internal interface    {
    public abstract virtual int   ​ ();
    public abstract virtual void   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual void   ​ (int );
    public abstract virtual byte   ​ ();
    [NullableContextAttribute("1")]
public abstract virtual void   ​ (Byte[] , int , int );
    public abstract virtual void   ​ (byte );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private bool ;
    private bool ;
    private bool ;
    private bool ;
    private string ;
    private string ;
    private    ;
    private     ;
    private     ;
    private string  ;
    private IDictionary`2<ParagraphStyle, OutlineLevel>  ;
    public   (string , StyleCollection );
    public bool ();
    private void (bool );
    public bool ();
    private void (bool );
    public bool ();
    private void (bool );
    public bool ();
    private void (bool );
    public string ();
    private void (string );
    public string ();
    private void (string );
    public     ();
    private void (   );
    public     ();
    private void (   );
    public     ();
    private void (   );
    public string ();
    private void (string );
    public IDictionary`2<ParagraphStyle, OutlineLevel>  ();
    private void (IDictionary`2<ParagraphStyle, OutlineLevel> );
    private static Dictionary`2<ParagraphStyle, OutlineLevel> (string , StyleCollection );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    public static string ;
    public static int ;
    public int ;
    protected internal    ;
    protected internal int ;
    protected internal int ;
    protected internal int ;
    public   (   , int );
    private static   ();
    public static string (int );
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    protected    ;
    protected    ;
    protected    ;
    protected    ;
    protected    ;
    public   (   );
    protected short ();
    public    ();
    public void (   );
    public abstract virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private static Int32[] ;
    internal int ;
    internal int ;
    internal Int32[] ;
    internal int ;
    internal int ;
    internal int ;
    internal int  ;
    internal int  ;
    internal byte  ;
    internal byte  ;
    internal Int32[]  ;
    internal int  ;
    internal Int32[]  ;
    internal int  ;
    internal   (int , int , Int32[] , int , Int32[] , int ,    );
    internal   (int , int , Int32[] , Int32[] ,    );
    private static   ();
    internal int (   ,    , int );
    internal void (   );
    internal int (int , int , Int32[] , int , Int32[] , int ,    ,     );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual Byte[]   ​ (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class  ​  :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [NullableAttribute("2")]
public string   { get; public set; }
    [NullableAttribute("2")]
public  ​    { get; public set; }
    [NullableAttribute("2")]
public string   { get; public set; }
    private protected  ​ ( );
    private static  ​ ();
    private protected sealed virtual string    ​ ();
    private protected sealed virtual void    ​ (string );
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    internal     ();
    internal void (    );
    private ​   ();
    private void (​   );
    internal string ();
    internal void (string );
    [NullableContextAttribute("2")]
public  ​  ();
    [NullableContextAttribute("2")]
public void ( ​  );
    public  ();
    public void ( );
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    public PdfMarkupAnnotationIntent  ();
    internal void (PdfMarkupAnnotationIntent );
    private protected virtual bool  ​ ​ (PdfMarkupAnnotationIntent );
    internal void (​   ,     , bool );
    internal virtual void    ​ (    );
    private void ( ​  );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    [ExtensionAttribute]
public static    (   , int , int );
    [ExtensionAttribute]
public static    (   , int );
    [ExtensionAttribute]
public static    (   );
    [ExtensionAttribute]
public static    (   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    internal Int32[] ;
    internal int ;
    private    ;
    protected internal   (   ,  );
    public virtual int   ​ ();
    public static    (   ,  );
    private void ();
    public virtual      ​ (   , int );
    public virtual string ToString();
    public virtual      ​ (   , int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int , int );
    public virtual int   ​ (int , int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (   , int );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private string DebuggerDisplayValue { get; }
    public   (Byte[] );
    private string get_DebuggerDisplayValue();
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ (int );
    public abstract virtual int   ​ (int );
    public abstract virtual int   ​ (int );
    public abstract virtual int   ​ (int );
    public abstract virtual int   ​ (int );
    public abstract virtual int   ​ (int );
    public abstract virtual int   ​ (int , int , int );
    public abstract virtual int   ​ (int , int , int );
    public abstract virtual int   ​ (int , int );
    public abstract virtual int   ​ (int , int );
    public abstract virtual void   ​ (int , int );
    public abstract virtual void   ​  ();
    public abstract virtual      ​ (   );
    public abstract virtual int   ​ (int , int );
    public abstract virtual int   ​ (int , int );
    public abstract virtual int   ​ (int );
    public abstract virtual int   ​  (int );
    public abstract virtual      ​ (   );
    public abstract virtual int   ​ ();
    public abstract virtual      ​ (int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private long ;
    private long ;
    private long ;
    private Int32[0...,0...] ;
    private Int32[0...,0...] ;
    private Int32[0...,0...] ;
    private Int32[0...,0...]  ;
    private Int32[0...,0...]  ;
    private Int32[0...,0...]  ;
    public   (   );
    public void ();
    public void (long );
    public long ();
    public int ();
    public int ();
    public int ();
}
internal class    :    {
    public double ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :   <  > {
    [DebuggerBrowsableAttribute("0")]
private List`1<  > ;
    public   (   );
    protected virtual void   ​ (   ,    ,  ​ ,     , bool );
    protected virtual void   ​ (    ,    ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :  {
    private    ;
    internal Stream ;
    internal bool ;
    internal bool ;
    public   (   , Stream );
    private bool (BinaryReader , ArrayList& );
    private void (BinaryReader , ArrayList );
    private void (Stream , int , bool );
    private long (int , bool );
    private void (BinaryReader , ArrayList );
    private static Int32[] (IList , int );
    private void (BinaryReader );
    private void (BinaryReader );
    private void (BinaryReader );
    private static void (   , ArrayList , int );
    private  (BinaryReader );
    internal Byte[] (   );
    private Byte[] (int , int , bool , int , Stream , ArrayList );
}
[NullableContextAttribute("1")]
internal interface  ​  {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<KeyValuePair`2<string,    >>  { get; }
    public abstract virtual IDictionary`2<string, string>  ​ ​ ();
    public abstract virtual IList`1<KeyValuePair`2<string,    >>  ​ ​ ();
    public abstract virtual Stream  ​ ​ ();
    public abstract virtual int  ​ ​ ();
    public abstract virtual string  ​ ​ (Picture );
    public abstract virtual void  ​ ​ (    , BlockCollection );
    public abstract virtual string  ​ ​ (Chart );
    public abstract virtual string  ​ ​ (object );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private object ;
    private  ;
    private Stream ;
    private double ;
    private object ;
    private     ;
    private double ;
    private double  ;
    private string  ;
    private string  ;
    private double  ;
    private Nullable`1<int>  ;
    [CompilerGeneratedAttribute]
public sealed virtual object   ​ ();
    public void (object );
    [CompilerGeneratedAttribute]
public sealed virtual    ​ ();
    public void ( );
    [CompilerGeneratedAttribute]
public sealed virtual Stream   ​ ();
    public void (Stream );
    [CompilerGeneratedAttribute]
public sealed virtual double   ​ ();
    public void (double );
    [CompilerGeneratedAttribute]
public sealed virtual object   ​ ();
    public void (object );
    [CompilerGeneratedAttribute]
public sealed virtual       ​ ();
    public void (    );
    [CompilerGeneratedAttribute]
public sealed virtual double   ​ ();
    public void (double );
    [CompilerGeneratedAttribute]
public sealed virtual double   ​ ();
    public void (double );
    [CompilerGeneratedAttribute]
public sealed virtual string   ​ ();
    public void (string );
    [CompilerGeneratedAttribute]
public sealed virtual string   ​ ();
    public void (string );
    [CompilerGeneratedAttribute]
public sealed virtual double   ​ ();
    public void (double );
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int>   ​  ();
    public void (Nullable`1<int> );
    public virtual      ​  ();
    private sealed virtual override double   ​ ();
    private sealed virtual override double   ​ ();
}
internal class    : Exception {
    [NullableContextAttribute("1")]
internal   (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    internal   (   );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private Func`1<object> ;
    public   (Func`1<object> );
    public virtual    ​ ();
    internal virtual void   ​ (StringBuilder , bool , bool ,    );
    public virtual object   ​ (   );
    public virtual      ​  (   );
    public virtual      ​ (   );
    [IteratorStateMachineAttribute("  /")]
public virtual IEnumerable`1<  >   ​ ();
    private bool (   );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    private sealed virtual override object   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    protected internal int ;
    protected internal    ;
    protected internal   (   );
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int , int , int );
    public virtual int   ​ (int , int , int );
    public virtual int   ​ (int , int );
    public virtual int   ​ (int , int );
    public virtual void   ​ (int , int );
    public virtual void   ​  ();
    public virtual      ​ (   );
    public virtual int   ​ (int , int );
    public virtual int   ​ (int , int );
    public virtual int   ​ (int );
    public virtual int   ​  (int );
    public virtual      ​ (   );
    public virtual int   ​ ();
    public abstract virtual      ​ (int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static void (   );
    public static object (IList`1<  > ,    );
    public static object (IList`1<  > ,    );
    public static object (IList`1<  > ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private int ;
    private int ;
    private bool ;
    private Byte[][][] ;
    public   (   );
    public void ( );
    public void (Byte[][] , Int32& , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<ValueTuple`2<   , Nullable`1<   >>,  ​ > ;
    private Dictionary`2<   ,   > ;
    public  ​  (    );
    public    (    );
}
internal static class    : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private IList`1<  > ;
    private string ;
    private object ;
    private IList`1<  > ;
    private IList`1<  > ;
    private int ;
    public    ();
    public void (   );
    public IList`1<  > ();
    public string ();
    public void (string );
    public object ();
    public void (object );
    public IList`1<  > ();
    public IList`1<  > ();
    public int (bool , int , int , int , int , int );
    public int ();
    public void (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class  ​  : object {
    public static IFormatProvider ;
    private static  ​ ();
    public static string (IEnumerable , string , Nullable`1<bool> );
    public static string (string , Object[] );
    public static string (object , object );
    public static string (object );
    public static string (object );
    public static string (object );
    public static string (object );
    public static string (Object[] );
    public static string (object );
    public static string (object );
    public static string (object , object );
    public static string (int );
    public static string (object );
    public static string (string );
    public static string (string );
    public static string (string );
    public static string (string );
    public static string (string , string );
    public static string (string );
    public static string (string );
    public static string (object , object );
    public static string (object , object , object );
    public static string  (object );
    public static string (Type , String[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :  ​< ​> {
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    internal   ( ​ );
    public  ​ ();
    private protected virtual ​​  ​​ ();
    private protected virtual void  ​​ ( ​ );
    private protected virtual void  ​​  ( ​ );
    public  ​ ();
    public  ​ ();
}
internal class    : Exception {
    [NullableContextAttribute("1")]
public   (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
}
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private  ;
    public  ();
    public void ( );
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public sealed virtual bool Equals(  <> );
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private bool ;
    private MemoryStream ;
    private    ;
    private    ;
    private int ;
    private    ;
    private     ;
    private   [][]  ;
    private int  ;
    private   [][][]  ;
    private Int32[][][][][]  ;
    private   [][][][]  ;
    private   [][][][]  ;
    private int  ;
    private int  ;
    private bool  ;
    private bool  ;
    private int  ;
    private List`1[]  ;
    private int  ;
    private int  ;
    private bool  ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    private bool  ;
    public   (   ,    ,    ,    , bool , int );
    public virtual   [][][][][]   ​ (int , Int32[] , int ,   [][][][][] , bool , MemoryStream );
    private void (int , int , int );
    public virtual int   ​ (int , int );
    public virtual bool   ​ (int , int , int , int ,   [][][] , Int32[] );
    public virtual bool   ​ (int , int , int , int ,   [][][] , Int32[] );
    public int (int , int , int );
    public int (int , int , int );
    public virtual bool   ​ (Int32[] , int , int , int );
    public virtual void   ​ (   );
    public virtual      ​ (int , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private IEnumerable`1<  > ;
    public   (   , IEnumerable`1<  > );
    public    ();
    public IEnumerable`1<  > ();
}
internal class    :    {
    [NullableAttribute("1")]
public static string ;
    private static   ();
    public virtual void   ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    protected List`1<   > ;
    protected List`1<double> ;
    protected List`1<double> ;
    protected double ;
    protected bool (int , int ,     ,     ,   & , Int32& );
    protected     (int );
    protected     (int );
    protected     (int , int , int );
    protected void ();
    protected void (int , int );
    protected    (int , int ,     ,     );
    protected void (int , int ,    );
    protected double (int , int ,    , Int32& );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :   <  > {
    [DebuggerBrowsableAttribute("0")]
private  ​[] ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   > ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<> ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public   (   );
    internal double ();
    private void (double );
    internal  ​[] ();
    protected virtual void   ​ ();
    private     ();
    private     ();
    internal     ();
    private  ();
    private     ();
    private void (    );
    private      ();
    private bool  ();
    protected virtual       ​ ();
    protected virtual Nullable`1<   >   ​ ();
    private     (    );
    protected virtual void   ​ (   ,    ,  ​ ,     , bool );
    private static bool (double );
    protected virtual void   ​ (    ,    ,    );
}
internal abstract class    :    {
    public bool CanSeek { get; }
    public long Position { get; public set; }
    public long Length { get; }
    [NullableContextAttribute("1")]
protected   (Stream , bool );
    public sealed virtual bool get_CanSeek();
    public sealed virtual long get_Position();
    public sealed virtual void set_Position(long );
    public sealed virtual long get_Length();
    public sealed virtual long Seek(long , SeekOrigin );
    public sealed virtual void SetLength(long );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  :  ​  {
    private  ​  ;
    private  ​  ;
    private  ​  ;
    private     ;
    private  ​  ;
    private     ;
    private string ;
    public  ​ (    , string );
    public  ​  ();
    public     ();
    public string ();
    public virtual   ​ ​ ();
    internal     ();
    internal  ​  ();
    internal bool  ();
    internal bool  ();
    public  ​  ();
    public  ​  ();
    [IteratorStateMachineAttribute(" ​ /")]
public IEnumerable`1< ​ >  ();
    public void (string );
    public void (string ,  );
    public void (string ,  , Encoding );
    public static  ​  (string );
    public static  ​  (string ,     , string );
    public static  ​  (string , Encoding );
    public static  ​  (string , Encoding , string );
    public static  ​  (Stream , Encoding );
    public static  ​  (Stream , Encoding ,     , string );
}
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
public static    ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    public   (double ,  );
    private static   ();
    [IsReadOnlyAttribute]
public double ();
    private void (double );
    [IsReadOnlyAttribute]
public  ();
    private void ( );
    public sealed virtual bool Equals(   );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private static String[][] ;
    private static String[][] ;
    private static   ();
    public static    (string ,    );
    public static    (Byte[] ,    );
    public static    (Stream ,    );
    public static    (Stream );
    public static    (IEnumerable`1<Stream> );
    public static Byte[] (object ,    );
    public static Byte[] (   ,    );
    public static    (String[][] );
    public static    (String[][] );
    private static void (string , int );
    private static void (string );
    private static string (Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : Exception {
    public   (string );
    protected   (SerializationInfo , StreamingContext );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    [ExtensionAttribute]
public static bool (T , T );
    [ExtensionAttribute]
public static int (T );
    [ExtensionAttribute]
public static int (string );
    [ExtensionAttribute]
public static int (string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static int (string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static int (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public int ;
    public int ;
    public   (int , int );
    public   (   );
    public virtual string ToString();
}
internal class    : object {
    private double ;
    private double ;
    private double ;
    private double ;
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    [NullableContextAttribute("1")]
public    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private Byte[] ;
    private Byte[] ;
    private bool ;
    internal Byte[] ();
    internal Byte[] ();
    public bool ();
    public void (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    [DebuggerBrowsableAttribute("0")]
private     ;
    public   (    ,     );
    public     ();
    private void (    );
    public virtual    ​ ();
    public virtual string   ​ ();
    public virtual string ToString();
    public sealed virtual int CompareTo(   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : ​  {
    private    ;
    public   (   );
    public virtual void ​ ​ ();
    public virtual bool ​ ​ ();
    public virtual void ​ ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    [DebuggerBrowsableAttribute("0")]
private CspParameters ;
    internal   (CspParameters );
    public virtual Byte[]   ​ (Byte[] , string , object );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : object {
    public static IList`1< ​ > ;
    public static IList`1< ​ > ;
    public static IList`1< ​ > ;
    public static IList`1< ​ > ;
    public static IList`1< ​ > ;
    public static IList`1< ​ > ;
    public static IList`1< ​ > ;
    public static IList`1< ​ >  ;
    public static IList`1< ​ >  ;
    public static IList`1< ​ >  ;
    public static IList`1< ​ >  ;
    public static IList`1< ​ >  ;
    public static IList`1< ​ >  ;
    public static IList`1< ​ >  ;
    public static IList`1< ​ >  ;
    public static IList`1< ​ >  ;
    public static IList`1< ​ >  ;
    public static IList`1< ​ >  ;
    public static IList`1< ​ >  ;
    private static  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   : ​   {
    protected ​   ;
    protected ​   ;
    [DebuggerBrowsableAttribute("0")]
private Uri ;
    protected ​  (​   , ​   );
    protected abstract virtual string ​  ​ ();
    internal sealed virtual Uri ​  ​ ();
    internal virtual DateTime ​  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class ​   : object {
    internal static string (int ,  , string );
    private static string (int , bool );
    private static string (int , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    internal ​   ;
    internal IDictionary`2<UInt32, ​  > ;
    private ​  (​   , ​   , IDictionary`2<UInt32, ​  > );
    internal static ​   (​   , UInt32 , ushort , ushort , UInt32 , ​​  );
}
[DefaultMemberAttribute(" ")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : object {
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<​  , ​  > ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<​  > ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public       { get; private set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public    { get; private set; }
    public int Count { get; }
    [DebuggerBrowsableAttribute("0")]
internal ​     { get; }
    internal ​  (    ,  , bool );
    internal ​  (    );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
private void (    );
    [NullableContextAttribute("2")]
public  ();
    [NullableContextAttribute("2")]
private void ( );
    internal bool ();
    private void (bool );
    public int get_Count();
    internal ​   (​   );
    internal void (    );
    internal void ( );
    private ​   (​   );
    internal ​   (​   );
    internal void (​   , int );
    internal void (​   , ​   );
    internal ​   (​   , long );
    internal ​   (​   , int , int );
    internal  (​   , long );
    internal void (​   , ​   );
    internal bool (​   );
    [IteratorStateMachineAttribute("​  /")]
internal IEnumerable`1<​  > (IEnumerable`1<​  > );
    internal void ();
    internal ​   (​   , bool );
    internal int ();
    internal void ();
    private static void (​   , ​   );
    private static void (​   );
    public sealed virtual IEnumerator`1<​  > GetEnumerator();
    private sealed virtual override IEnumerator ​  ​ ();
    private ​   (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<, Font> ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<   , FontFamily> ;
    [DebuggerBrowsableAttribute("0")]
private PrivateFontCollection ;
    [DebuggerBrowsableAttribute("0")]
private List`1<   > ;
    protected abstract virtual     ​  ​ (string , Font , double , Int32& );
    public sealed virtual     ​  ​ (    , int , double );
    private static void (Double& , Double& , Double& , Double& );
    private Font ( );
    private FontFamily (Uri ,     );
    private static FontStyle ( );
    private static FontFamily (string , FontStyle& );
    private void (    );
    public virtual void Dispose();
}
[DebuggerTypeProxyAttribute("GemBox.Pdf.Objects.PdfStreamDebugView")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal ​    ;
    [DebuggerBrowsableAttribute("0")]
internal bool  ;
    [DebuggerBrowsableAttribute("0")]
internal Nullable`1<int>  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal ​     { get; internal set; }
    private ​  ( );
    private static ​  ();
    [IteratorStateMachineAttribute("​  /")]
internal static IEnumerable`1<​  > ();
    public static ​   ();
    internal static ​   ( );
    internal static ​   ();
    public virtual  ​  ​ ();
    public  ();
    private void ( );
    [NullableContextAttribute("2")]
internal ​   ();
    [NullableContextAttribute("2")]
internal void (​   );
    public int ();
    internal void (int );
    internal bool ();
    internal void (bool );
    internal ​    ();
    internal void (​   );
    internal ​    ();
    internal void (​   );
    internal ​    ();
    internal void (​   );
    internal ​    ();
    internal void (​   );
    internal ​    ();
    internal void (​   );
    public Nullable`1<int>  ();
    internal void (Nullable`1<int> );
    internal bool  ();
    internal void  ();
    [IteratorStateMachineAttribute("​  /")]
private protected virtual IEnumerator`1<​  > ​  ​ (bool );
    public ​   (Func`2<​  , ​  > );
    public ​   (bool );
    private protected virtual ​   ​  ​ (Func`2<​  , ​  > );
    public virtual string ToString();
    public      ();
    internal      ();
    public Stream ( ,  ,  );
    private void  ();
    internal Stream ( ,  );
    private void  ();
    internal Stream ( ,  );
    internal     ();
    internal     ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
internal int ;
    [DebuggerBrowsableAttribute("0")]
internal short ;
    [DebuggerBrowsableAttribute("0")]
internal short ;
    [DebuggerBrowsableAttribute("0")]
internal UInt32 ;
    [DebuggerBrowsableAttribute("0")]
private UInt32 ;
    [DebuggerBrowsableAttribute("0")]
private UInt32 ;
    [DebuggerBrowsableAttribute("0")]
private UInt32  ;
    [DebuggerBrowsableAttribute("0")]
private UInt32  ;
    [DebuggerBrowsableAttribute("0")]
private ​​   ;
    internal static ​   ();
    public virtual UInt32 ​  ​ ();
    protected virtual bool ​  ​ ();
    internal virtual void ​  ​ (​​  , UInt32 );
    internal virtual UInt32 ​  ​ (​​  , Nullable`1& );
    internal virtual ​   ​  ​ (ICollection`1<ushort> );
    internal virtual void ​  ​ (​   , ICollection`1<ushort> );
}
internal class ​   : ​   {
    public ​  ( , int ,  , Nullable`1<> );
}
internal class ​   : ​   {
    [NullableContextAttribute("1")]
internal static ​   ();
    public virtual UInt32 ​  ​ ();
    protected virtual bool ​  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : EventArgs {
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    public ​   ();
    public void (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class ​   : List`1<​  > {
    public sealed virtual ​   ​​ ​ ();
    private sealed virtual override IEnumerable`1<​  > ​  ​ ();
    private sealed virtual override ​​  ​  ​ (​   );
    private sealed virtual override ​​  ​  ​ (​   );
}
[DebuggerTypeProxyAttribute("GemBox.Pdf.Objects.PdfIndirectObjectDebugView")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal ​   ;
    [NullableAttribute("2")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal ​     { get; private set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal ​     { get; }
    [NullableAttribute("2")]
internal ​     { get; private protected set; }
    [DebuggerBrowsableAttribute("0")]
internal string DebuggerDisplayValue { get; }
    [NullableContextAttribute("2")]
internal ​   ();
    [NullableContextAttribute("2")]
private void (​   );
    public static ​   ();
    public static ​   (​   );
    public virtual  ​  ​ ();
    internal virtual bool ​  ​ ();
    internal virtual bool ​  ​ ();
    public ​    ();
    internal bool ();
    internal bool ();
    [NullableContextAttribute("2")]
internal ​    ();
    [NullableContextAttribute("2")]
internal virtual ​   ​  ​  ();
    [NullableContextAttribute("2")]
private protected virtual void ​  ​ (​   );
    public ​    ();
    public void (​   );
    internal virtual string get_DebuggerDisplayValue();
    internal ​    ();
    internal int  ();
    internal void (int );
    internal bool ();
    internal bool  ();
    internal void (bool );
    internal void (​   );
    internal void ();
    internal void ();
    private void (bool );
    internal void (​   );
    private protected virtual void ​  ​ (​   );
    [IteratorStateMachineAttribute("​  /")]
private protected virtual IEnumerator`1<​  > ​  ​ (bool );
    public ​   (Func`2<​  , ​  > );
    internal void (​   , Func`2<​  , ​  > );
    public ​   (bool );
    private protected virtual ​   ​  ​ (Func`2<​  , ​  > );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : object {
    private     ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IEnumerable`1<KeyValuePair`2<CultureInfo, string>> ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IEnumerable`1<KeyValuePair`2<CultureInfo, string>> ;
    private bool ;
    private  ;
    [DebuggerBrowsableAttribute("0")]
private static <   > ;
    [DebuggerBrowsableAttribute("0")]
private static <   > ;
    [DebuggerBrowsableAttribute("0")]
private static <   >  ;
    [DebuggerBrowsableAttribute("0")]
private static <   >  ;
    [DebuggerBrowsableAttribute("0")]
private static <   >  ;
    [DebuggerBrowsableAttribute("0")]
private static <int>  ;
    [DebuggerBrowsableAttribute("0")]
private static <   >  ;
    [DebuggerBrowsableAttribute("0")]
private static Predicate`1[]  ;
    [DebuggerBrowsableAttribute("0")]
private static Predicate`1[]  ;
    [DebuggerBrowsableAttribute("0")]
private static Predicate`1[]  ;
    [DebuggerBrowsableAttribute("0")]
private static Predicate`1[]  ;
    [DebuggerBrowsableAttribute("0")]
private static Predicate`1[]  ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<KeyValuePair`2<CultureInfo, string>>   { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<KeyValuePair`2<CultureInfo, string>>   { get; }
    private ​  (    , IEnumerable`1<KeyValuePair`2<CultureInfo, string>> , IEnumerable`1<KeyValuePair`2<CultureInfo, string>> ,  );
    internal ​  (​   );
    private static ​  ();
    public     ();
    public IEnumerable`1<KeyValuePair`2<CultureInfo, string>> ();
    public IEnumerable`1<KeyValuePair`2<CultureInfo, string>> ();
    public bool ();
    public  ();
    internal static void (    ,     ,     , string , string , ​   ,    & ,    &  ,    &  , String&  , String&  , bool  , bool  , bool  );
    internal static string (    ,     ,     , string , string , string , string );
    internal ​   ( );
    internal ​   ();
    internal ​   ();
    internal ​    ();
    internal ​    ();
    private static bool (Predicate`1[] , int ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   :     {
    private bool ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IList`1<​  > ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IList`1<​  > ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IList`1<​  > ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IList`1<​  > ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected IList`1<​  >   { get; private set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected IList`1<​  >   { get; private set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected IList`1<​  >   { get; private set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected IList`1<​  >   { get; private set; }
    internal ​  (    , ​   );
    protected bool ();
    private void (bool );
    protected IList`1<​  > ();
    private void (IList`1<​  > );
    protected IList`1<​  > ();
    private void (IList`1<​  > );
    protected IList`1<​  > ();
    private void (IList`1<​  > );
    protected IList`1<​  > ();
    private void (IList`1<​  > );
    private bool ();
    protected sealed virtual bool    ​ ();
    protected virtual void    ​  ();
    protected virtual void    ​ ();
    protected ​   (    , Boolean& );
    protected sealed virtual void    ​  ();
    protected sealed virtual void    ​  ();
    protected sealed virtual ​      ​ ();
    protected sealed virtual ​      ​ ();
    protected      ();
    private static bool (    );
    private void ();
    internal static bool (    );
    protected int (IEnumerable`1<​  > ,     , Int32& );
    protected List`1<​  > (int , int ,     );
    protected void (    );
    private static int (IEnumerable`1<​  > , IEnumerable`1<​  > ,     ,     , Int32& );
    private static IEnumerable`1<​  > (IEnumerable`1<​  > );
    private static void (IEnumerable`1<​  > , IEnumerable`1<​  > );
    private static int (IEnumerable`1<​  > , IEnumerable`1<​  > );
    private static void (IEnumerable`1<​  > , IEnumerable`1<int> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    private static String[] ;
    private static ​  ();
    internal virtual IEnumerable`1<​  > ​  ​ ();
    internal virtual     ​  ​ (    );
    private static string (string );
}
internal class ​   :     {
    [NullableContextAttribute("1")]
internal ​  (string , int );
}
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private UInt32 ;
    internal ​  (UInt32 );
    [CompilerGeneratedAttribute]
public virtual UInt32 ​  ​ ();
    protected virtual bool ​  ​ ();
    protected virtual UInt32 ​  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   :     {
    internal ​  (    ,     );
    protected void (​   );
    protected sealed virtual void    ​ (​   );
}
internal class    :    {
    [NullableContextAttribute("1")]
public virtual void   ​ (   );
    public virtual void   ​ (double );
    public virtual void   ​ (double );
    public virtual void   ​ (double );
    public virtual void   ​ (double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    public Single[] ;
    protected internal   (   , int );
    public static    (   , int );
    public float (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (   , int );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    private static Dictionary`2<Type, TypeCode> ;
    private static   ();
    private static T (object ,    );
    private static double (string ,    );
    private static bool (string ,    );
    private static DateTime (string ,    );
    public static object (IEnumerable );
    public static bool (object ,    );
    public static double (object ,    );
    public static DateTime (object ,    );
    public static char (object ,    );
    public static string (object ,    );
    public static void (object , IList`1<bool> ,    );
    public static void (object , IList`1<double> ,    ,  );
    public static void (object , IList`1<DateTime> ,    );
    public static void (object , IList`1<string> ,    );
    public static object (object , bool );
    public static bool (object );
    public static bool (Type , Type );
    public static object (object , Type ,    );
    public static double (double );
    public static double (double );
    public static bool (object ,    );
    public static bool (object ,    );
    public static TimeSpan  (object ,    );
    [ExtensionAttribute]
public static DateTime (DateTime );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (int , int , byte );
    public   (int , int , int ,    , byte ,    );
    private int (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    private string ;
    internal   (   );
    internal   (string ,    );
    public    ();
    public string ();
    public virtual    ​ ();
    public virtual object   ​ (   );
    [IteratorStateMachineAttribute("  /")]
public virtual IEnumerable`1<  >   ​ ();
    public virtual      ​ (   );
    internal virtual void   ​ (StringBuilder , bool , bool ,    );
    private static bool (DocumentModel , string , Table& );
}
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
public int ;
    [DebuggerBrowsableAttribute("0")]
public int ;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private   <  > ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ICollection`1<KeyValuePair`2<string, object>> ;
    private string ;
    private string ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ICollection`1<KeyValuePair`2<string, object>>  { get; public set; }
    public   (int );
    public    ();
    private void (   );
    public   <  > ();
    public void (  <  > );
    public ICollection`1<KeyValuePair`2<string, object>> ();
    public void (ICollection`1<KeyValuePair`2<string, object>> );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private double ;
    private double ;
    private double ;
    private double ;
    private bool ;
    private bool ;
    public   (double , double , double , double , bool , bool );
    public double ();
    private void (double );
    public double ();
    private void (double );
    public double ();
    private void (double );
    public double ();
    private void (double );
    public bool ();
    private void (bool );
    public bool ();
    private void (bool );
    public bool ();
    public bool  ();
    public double (double );
    public static    (double , double , double );
    public static    (double , double , double , double );
    public virtual string ToString();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    [ExtensionAttribute]
public static void (SymmetricAlgorithm , CipherMode , PaddingMode , Byte[] , Byte[] );
    [ExtensionAttribute]
public static Byte[] (Aes , Byte[] , int , int , Byte[] , Int32& , Int32& );
    [ExtensionAttribute]
public static int (Aes , Byte[] , int , int , Byte[] );
    [ExtensionAttribute]
public static Byte[] (Aes , Byte[] , int , int , Byte[] , Int32& , Int32& );
    [ExtensionAttribute]
public static int (Aes , Byte[] , int , int , Byte[] , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : object {
    public Dictionary`2<, > ;
    public Dictionary`2<, > ;
    public void ();
    public void ( ,  );
    public bool ( , & );
    public bool ( , & );
    public bool ( );
    public bool ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private ​  ;
    [DebuggerBrowsableAttribute("0")]
private ​  ;
    private    ;
    private ​  ;
    private   (   , ​  , ​  );
    public    ();
    private void (   );
    public ​  ();
    private void (​  );
    public  ​ ();
    public void ( ​ );
    public int ();
    public int ();
    public bool ();
    public ​   ();
    public void (​  );
    public ​   ();
    public void (​  );
    private IEnumerable`1<  > ( );
    public    ( );
    public double ( );
    public double  ();
    public double  ();
    public void (   & ,    & ,    & ,    & , bool );
    private static  ( , bool );
    public  ​ ( );
    public  ​ ( );
    public ​   ();
    public  ​ ( );
    private  ​ ( );
    private  ​  ( );
    public double ( );
    private static  ​ ( ​ ,  ​ );
    private static  ​ ( ​ ,  ​ );
    internal static    (   , ​  , ​  );
    public bool ();
    public bool  ();
    public     ();
    public bool  ();
    public     ();
    public bool  ();
    private double  ();
    public sealed virtual  ​  ​​ ( ,  );
    private bool (   );
    [NullableContextAttribute("2")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public int ;
    public int ;
    public int ;
    public    ;
    public int ;
    public int ;
    public int ;
    protected internal   (int , Byte[] , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : Exception {
    public   (string );
    protected   (SerializationInfo , StreamingContext );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual object   ​ ();
    public abstract virtual ​    ​ ();
}
internal interface    {
    [NullableContextAttribute("1")]
public abstract virtual      ​ (int ,    );
    public abstract virtual int   ​ (int , int , int );
    public abstract virtual int   ​ (int , int , int );
    public abstract virtual bool   ​ (int , int );
}
[DefaultMemberAttribute("")]
[DebuggerTypeProxyAttribute("GemBox.Collections.CollectionDebugView")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private IDictionary`2<Element,   > ;
    [DebuggerBrowsableAttribute("0")]
public     { get; }
    public int ();
    public    (Element );
    public void (Element ,    );
    public sealed virtual IEnumerator`1<KeyValuePair`2<Element,   >> GetEnumerator();
    private sealed virtual override IEnumerator   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private  ;
    private [] ;
    private int ;
    private Int32[] ;
    private bool ;
    private bool ;
    private int  ;
    private int  ;
    private     ;
    private int  ;
    public   (   );
    public void ();
    public  ();
    public bool ();
    public bool ();
    public void (int ,  );
    public void (int , int );
    public bool ();
    public bool ();
    public int  ();
    public int  ();
    public void (int );
    private static bool (   );
    private static bool (   );
    private static bool (   );
    private static void (   , Byte[] , int , int );
    private static void (   , Byte[] , int , int );
    private void ();
    private bool (bool , bool , bool );
    private bool  ();
    private bool  ();
    private bool  ();
    private bool  ();
    private bool  ();
    private bool  ();
    private bool  ();
}
[DefaultMemberAttribute("")]
[DebuggerTypeProxyAttribute("  /DebugView")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private Double[] ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    private int ;
    public double  { get; public set; }
    public   (int );
    public int ();
    private void (int );
    public double (int , int );
    public void (int , int , double );
    public double ();
    public int ();
    public int ();
    private int (int , int );
    private void ();
    private static void (Int32& , Int32& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    internal    ;
    internal    ;
    internal  ;
    internal int ;
    internal int ;
    internal Byte[] ;
    internal int ;
    internal int  ;
    internal   ;
    internal   ;
    internal bool  ;
    internal int  ;
    internal string  ;
    internal int  ;
    internal string  ;
    private static   []  ;
    private bool  ;
    private bool  ;
    private     ;
    private     ;
    private bool  ;
    internal     ;
    private   ;
    private int  ;
    private Byte[][][]  ;
    private int  ;
    private int  ;
    public   ( ,  , string );
    private static   ();
    private void ();
    public virtual bool   ​ ();
    public virtual bool   ​ ();
    public virtual bool   ​ ();
    public virtual bool   ​ ();
    public virtual bool   ​ (short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ ();
    public virtual bool   ​ (short );
    public virtual bool   ​ ();
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual void   ​  ();
    public virtual int   ​ (int );
    public virtual void   ​ (Int32& , Int32& );
    public bool (bool , bool );
    public   ();
    public void ();
    private bool (short );
    private bool ();
    private bool ();
    private void ();
    private bool (short );
    private bool ();
    private bool  ();
    private int (Byte[][] , int );
    private bool (Byte[] , int , int , short );
    private bool (Byte[] , int , int , short );
    private bool (Byte[] , int , int , short );
    private bool (Byte[] , int , int , short );
    private int (int );
    private void (Int32& , Int32& );
    private bool  ();
    private bool  ();
    private bool  ();
    private bool ( );
    private bool (int , bool );
    private bool (bool );
    private bool (bool );
    private int (Byte[][] , int );
    private int (Byte[][][] , int );
    private bool  ();
    private bool  ();
    private  (bool );
    private bool  ();
    private int (Byte[][][] , int );
    private bool  ();
    private bool  ();
    private bool  ();
    private static Byte[][] (int , int );
    private bool (  [] , int );
    private void (int );
    private void (int );
    private void ();
    private bool  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private bool ;
    private    ;
    internal   (bool ,    );
    public bool ();
    public    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : object {
    private    ;
    private int ;
    private Dictionary`2<Element, FloatingLayout> ;
    public  ​ (   , int );
    public  ();
    public void ();
    private void ( ​ ,     );
    [IteratorStateMachineAttribute(" ​ /")]
private IEnumerable`1<> ();
    [IteratorStateMachineAttribute(" ​ /")]
private static IEnumerable`1<> (   );
    private void (   ,     );
    private void ( ​ ,  ​ ,     );
    private void (Element ,  ​ ,     );
    private static Paragraph (   );
    private void (   ,     );
    private static Size (   ,    );
    public FloatingLayout (Element );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    [ExtensionAttribute]
internal static     (   ,    & , double );
    [ExtensionAttribute]
internal static bool (   ,     , Nullable`1& , Boolean& );
    [ExtensionAttribute]
internal static bool (   ,    & , Nullable`1& , Boolean& );
    [ExtensionAttribute]
public static void (   ,     ,    ,    , bool , Predicate`1<  > ,    );
    [ExtensionAttribute]
public static double (   );
    [ExtensionAttribute]
public static double (   );
    [ExtensionAttribute]
public static double (   , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public   ;
    public Dictionary`2<string,  > ;
    public Dictionary`2<string, > ;
    public Dictionary`2<string, > ;
    public Dictionary`2<string,  > ;
    public Dictionary`2<string, > ;
    public Dictionary`2<string, > ;
    public Dictionary`2<string, >  ;
    public   ;
    public Dictionary`2<string, >  ;
    private int  ;
    public virtual     ​ ();
    public virtual     ​ ();
    public virtual    ​ ();
    public virtual    ​ ();
    public virtual     ​ ();
    public virtual    ​ ();
    public virtual    ​ ();
    public virtual    ​  ();
    public virtual    ​  ();
    public virtual    ​  ();
    public virtual int   ​  ();
    public virtual string   ​  ();
    public virtual string   ​ (int , int );
    public virtual string   ​ (int , int );
    public virtual      ​ (int );
    public virtual object   ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    private static Regex ;
    protected   (XmlWriter );
    private static   ();
    protected static TypedPropertyValue (PropertySet , UInt32 );
    protected static string (PropertySet , UInt32 );
    protected static Nullable`1<DateTime> (PropertySet , UInt32 );
    protected void (string , string , string , DateTime , bool );
    private static string (string );
}
internal class    : MulticastDelegate {
    public   (object , IntPtr );
    [NullableContextAttribute("1")]
public virtual Byte[] Invoke(   );
    public virtual IAsyncResult BeginInvoke(   , AsyncCallback , object );
    public virtual Byte[] EndInvoke(IAsyncResult );
}
internal interface    {
    public abstract virtual int   ​ (int );
    public abstract virtual int   ​ (int );
    [NullableContextAttribute("1")]
public abstract virtual      ​ (int , int , int ,    ,    );
    [NullableContextAttribute("1")]
public abstract virtual      ​ (int , int , int ,    ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private string ;
    private string ;
    private string ;
    private string ;
    private string ;
    private bool ;
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public bool ();
    public void (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    protected internal static string ;
    protected internal   [] ;
    protected internal   [] ;
    protected internal   [] ;
    protected internal   [] ;
    protected internal Int32[][] ;
    protected internal Single[][] ;
    protected internal Single[][]  ;
    protected internal Int32[][]  ;
    protected internal Int32[]  ;
    protected internal Int32[]  ;
    protected internal Int32[]  ;
    private static String[][]  ;
    protected internal     ;
    protected internal   ;
    protected internal int  ;
    protected internal     ;
    protected internal   []  ;
    protected internal   ;
    protected internal   (   ,  );
    private static   ();
    private void ();
    public static String[][] ();
    protected internal static void (   );
    protected internal static void (   ,    );
    public static    (   ,  );
    private void ();
    public virtual int   ​ (int );
    public virtual      ​ (   , int );
    public sealed virtual void   ​ ();
    public sealed virtual bool   ​ (int );
    public virtual      ​ (   , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    private bool ;
    public   (   , bool );
    public virtual void   ​ ();
    private void ();
    public    ();
}
internal class    : IOException {
    [NullableContextAttribute("1")]
public   (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private string ;
    private IList`1<  > ;
    private IList`1<  > ;
    public   (string );
    public IList`1<  > ();
    public IList`1<  > ();
    public sealed virtual bool   ​ ();
    public sealed virtual string   ​ ();
    public sealed virtual string   ​ ();
    public sealed virtual void   ​ (XmlWriter );
    private void (XmlWriter , bool );
    private static void (XmlWriter , IList`1<  > );
    private static void (XmlWriter ,    );
    private static void (XmlWriter , IList`1<  > );
    private static void (XmlWriter , IList`1<  > );
    private static void (XmlWriter ,    );
    public sealed virtual Byte[]   ​ (string );
    private string ();
    private static Byte[] (string , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : object {
    private     ;
    private Func`2<string, IEnumerable`1<string>> ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Nullable`1<KeyValuePair`2<   ,    >> ;
    public  ​ (    , Func`2<string, IEnumerable`1<string>> );
    public     (string , bool , bool , int );
    private     (    , int );
    private bool (    , int , KeyValuePair`2& );
    private bool (    , int , bool , KeyValuePair`2& );
    private bool (IEnumerable`1<string> ,     , int , bool , KeyValuePair`2& );
    [IteratorStateMachineAttribute(" ​ /")]
private IEnumerable`1<string> (string , int );
    public     (string , bool , bool );
    [IteratorStateMachineAttribute(" ​ /")]
public IEnumerable`1<KeyValuePair`2<string,    >> (string , string , bool , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private double ;
    private double ;
    private bool ;
    private bool ;
    private double ;
    private double ;
    private double ;
    private double  ;
    private Nullable`1<double>  ;
    private  ​  ;
    private   ;
    private   ;
    private double  ;
    public double ();
    public void (double );
    public double ();
    public void (double );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public Nullable`1<double>  ();
    public void (Nullable`1<double> );
    public  ​  ();
    public void ( ​ );
    public   ();
    public void ( );
    public   ();
    public void ( );
    public double ();
    public void (double );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual      ​ (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : BinaryReader {
    public   (   );
    public   (MemoryStream );
    public sealed virtual int   ​ (Byte[] );
    public sealed virtual int   ​ (Byte[] , int );
    public sealed virtual Byte[]   ​ (long , int );
    private sealed virtual override Stream   ​ ();
    private sealed virtual override void   ​ ();
    private sealed virtual override int   ​ ();
    private sealed virtual override int   ​ ();
    private sealed virtual override int   ​ (Byte[] , int , int );
    private sealed virtual override int   ​ (Char[] , int , int );
    private sealed virtual override bool   ​ ();
    private sealed virtual override byte   ​ ();
    private sealed virtual override Byte[]   ​ (int );
    private sealed virtual override char   ​  ();
    private sealed virtual override Char[]   ​ (int );
    private sealed virtual override decimal   ​  ();
    private sealed virtual override double   ​  ();
    private sealed virtual override short   ​  ();
    private sealed virtual override int   ​ ();
    private sealed virtual override long   ​  ();
    private sealed virtual override sbyte   ​  ();
    private sealed virtual override float   ​  ();
    private sealed virtual override string   ​  ();
    private sealed virtual override ushort   ​  ();
    private sealed virtual override UInt32   ​  ();
    private sealed virtual override ulong   ​  ();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    [ExtensionAttribute]
public static void (IList`1<T> , IEnumerable`1<T> );
    [ExtensionAttribute]
public static T (IList`1<T> , int );
    [ExtensionAttribute]
public static T (IList`1<T> , int , T );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static bool (IList`1<T> , int , T& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private int ;
    private Stream ;
    private int ;
    private int ;
    private    ;
    private int ;
    private Byte[] ;
    public   (   ,    , int );
    public   (string ,    , int );
    public virtual void   ​ ();
    public virtual void   ​ ();
    public virtual void   ​ (int , int , int , int );
    public virtual void   ​ ();
    private void ();
    public virtual string ToString();
}
internal class    : object {
    private OutlineLevel ;
    private OutlineLevel ;
    [NullableContextAttribute("1")]
public   (string );
    public OutlineLevel ();
    private void (OutlineLevel );
    public OutlineLevel ();
    private void (OutlineLevel );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private  ;
    private bool ;
    private int ;
    private int ;
    private int ;
    private int ;
    private int ;
    private Byte[][]  ;
    private   ;
    private int  ;
    private int  ;
    public  ();
    internal void ( );
    public bool ();
    internal void (bool );
    public int ();
    internal void (int );
    public int ();
    internal void (int );
    public int ();
    internal void (int );
    public int ();
    internal void (int );
    public int ();
    internal void (int );
    public Byte[][]  ();
    internal void (Byte[][] );
    public   ();
    internal void ( );
    public int  ();
    internal void (int );
    public int  ();
    internal void (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private int ;
    private Int32[] ;
    public   (int );
    public void ();
    public void (int , int , int );
    public int (int );
    public void (int , int );
    public int ();
    public void (   );
    public    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private  ;
    private bool ;
    private bool ;
    private  ;
    private int ;
    private int ;
    private short ;
    private short  ;
    private   ;
    private   ;
    private   ;
    private UInt16[]  ;
    private UInt16[]  ;
    private UInt16[]  ;
    private   ;
    private   ;
    private   ;
    private Byte[]  ;
    private Int32[][]  ;
    private Int32[][]  ;
    private     ;
    private     ;
    private static     ;
    internal int  ;
    internal int  ;
    private static   ();
    public static    ( , bool , String& );
    public bool ();
    public   ();
    public int  ();
    public int  ();
    public short  ();
    public short  ();
    public   ();
    public   ();
    public void ( );
    public   ();
    public   ();
    public void ( );
    public   ();
    public void ( );
    public   ();
    public void ( );
    public bool (Int32[] , int , int , int );
    private static int (int , int , int );
    private static int (int , int , int , int );
    private static int (int , int );
    private static int (short );
    private static int (short , short , short );
    private static int (short , short , short , short );
    private void (int , int , Int32& );
    private void (int , int , Int32& );
    private static bool (   , Int32[] , int , int , int );
    private static bool (   , Int32[] , int , int , int );
    private static bool (   , Int32[] , int , int , int );
    private static bool (   , Int32[] , int , int , int );
    private bool ();
    private int  ();
    private bool ();
    private bool ();
    private bool ();
    private   ();
    private bool ();
    private bool  ();
    private int  ();
    private void ();
    private bool  ();
    private bool  ();
    private void (Int32& , int , int , int );
    private static void (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void  (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void  (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void  (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void  (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void  (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void  (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void  (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void  (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void  (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void  (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void  (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void  (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void  (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void  (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void  (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void  (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void  (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void  (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void  (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
    private static void (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  , int  , int  , int  );
    private static void (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  , int  , int  , int  );
    private static void (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  , int  , int  , int  );
    private static void (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  , int  , int  , int  );
    private static void (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  , int  , int  , int  );
    private static void (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  , int  , int  , int  );
    private static void (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  , int  , int  , int  );
    private static void  (   , Int32[] , int , int , int , int , int , int  , Byte[]  , int  , int  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
public static    ;
    private String[] ;
    private   (String[] );
    private static   ();
    public static    (String[] );
    public String[] ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class  ​  : ValueType {
    [DebuggerBrowsableAttribute("0")]
public     ;
    [DebuggerBrowsableAttribute("0")]
public     ;
    [DebuggerBrowsableAttribute("0")]
public  ​  ;
    [DebuggerBrowsableAttribute("0")]
private static  ​  ;
    public  ​ (    ,     ,  ​  );
    private static  ​ ();
    public bool ();
    public static  ​  op_Addition( ​ & ,  ​ & );
    public static bool op_Equality( ​ & ,  ​ & );
    public static bool op_Inequality( ​ & ,  ​ & );
    public virtual int GetHashCode();
    public virtual bool Equals(object );
    public sealed virtual bool Equals( ​  );
    public static  ​  op_Multiply( ​ & ,     );
    public string (bool );
    public bool ();
    public virtual string ToString();
    public static  ​ & ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    protected    ;
    private     ;
    protected   (   ,     );
    public abstract virtual void   ​ (    ,     );
    private void (    ,     ,     );
    private sealed virtual override      ​ ();
    private sealed virtual override int   ​ ();
    private sealed virtual override  ​   ​ ();
    private sealed virtual override int   ​ ();
    private sealed virtual override      ​ ();
    private sealed virtual override       ​ (int );
    private sealed virtual override       ​ (int , object );
    private sealed virtual override void   ​ (int , object , object );
    private sealed virtual override      ​ (int ,    );
    private sealed virtual override object   ​ (Type );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private int ;
    private int ;
    private int ;
    private int ;
    private Boolean[] ;
    private Int32[][] ;
    public   (int , int , int , int , Boolean[] , Int32[][] );
    public sealed virtual int   ​ ();
    public sealed virtual int   ​ ();
    public sealed virtual int   ​ ();
    public sealed virtual int   ​ ();
    public sealed virtual int   ​ ();
    public sealed virtual int   ​ ();
    public sealed virtual int   ​ ();
    public sealed virtual int   ​  ();
    public sealed virtual int   ​  ();
    public sealed virtual int   ​  ();
    public sealed virtual int   ​  ();
    public sealed virtual int   ​  ();
    public sealed virtual int   ​ (int );
    public sealed virtual int   ​ (int );
    public sealed virtual int   ​ (int , int );
    public sealed virtual int   ​ (int , int );
    public sealed virtual int   ​ (int );
    public sealed virtual int   ​ (int );
    public sealed virtual int   ​ (int );
    public sealed virtual void   ​ (int , int );
    public sealed virtual void   ​  ();
    public sealed virtual      ​ (   );
    public sealed virtual int   ​ (int );
    public sealed virtual int   ​ (int );
    public sealed virtual      ​ (   );
    public sealed virtual int   ​  ();
    public sealed virtual int   ​ (int );
    public sealed virtual      ​ (   , int );
    public sealed virtual      ​ (   , int );
    public sealed virtual void   ​ ();
    public sealed virtual bool   ​ (int );
}
internal class    :    {
    [NullableContextAttribute("1")]
internal   (   );
    private void ();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    [ExtensionAttribute]
public static IDictionary`2<TKey, TValue> (IDictionary`2<TKey, TValue> , TKey , TValue );
    [ExtensionAttribute]
public static TKeyValue (IDictionary`2<TKeyValue, TKeyValue> , TKeyValue );
    [ExtensionAttribute]
public static void (IList`1<T> , int , int );
    [ExtensionAttribute]
public static int (IList`1<T> , int , int , T , IComparer`1<T> );
    [ExtensionAttribute]
public static int (IList`1<T> , int , int , T , Comparison`1<T> );
    [ExtensionAttribute]
public static int (IList`1<T> , T );
    [ExtensionAttribute]
public static int (IList`1<T> , T , Comparison`1<T> );
    [IteratorStateMachineAttribute("  /")]
public static IEnumerable`1<T>  (IList`1<T> , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    protected internal int ;
    protected internal int ;
    protected internal int ;
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public abstract virtual void   ​ ();
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int , int );
    public virtual int   ​ (int , int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual void   ​ (int , int );
    public virtual void   ​  ();
    public virtual      ​ (   );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual      ​ (   );
    public virtual int   ​  ();
    public abstract virtual bool   ​ (int );
    public abstract virtual int   ​ (int );
    public abstract virtual      ​ (   , int );
    public abstract virtual int   ​ (int );
    public abstract virtual      ​ (   , int );
}
internal interface    {
    public abstract virtual Color   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private  ;
    private [][] ;
    internal   (int , int , <> );
    public  ();
    public void ( );
    public [][] (int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    [DebuggerBrowsableAttribute("0")]
private   <  > ;
    public   (    , int );
    public   <  > ();
    private void (  <  > );
    public virtual    ​ ();
    public double ();
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public Int32[] ;
    public int ;
    public int ;
    public int ;
    public int ;
    public int ;
    public int ;
    public   ;
    public short  ;
    public   ;
    public   ;
    public   ;
    public   ;
    public   ;
    public   ;
    public short  ;
    public int  ;
    public ushort  ;
    public ushort  ;
    public double  ;
    public double  ;
    public float  ;
    public float  ;
    public   ;
    public   ;
    public float  ;
    public float  ;
    public Int16[]  ;
    public Int16[][]  ;
    public Int16[]  ;
    public short  ;
    public []  ;
    public int  ;
    public int  ;
    public UInt64[]  ;
    public UInt64[]  ;
    public bool  ;
    public int  ;
    public Int64[]  ;
    public Int16[]  ;
    public   ;
    public Single[]  ;
    public Int16[][]  ;
    public int  ;
    public string  ;
    public int  ;
    public   []  ;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static    ;
    private static   ();
    public static string (string , string , object );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : object {
    private Dictionary`2<, > ;
    private Queue`1<  <>> ;
    public void (  <> );
    private void ();
    public  ( );
    private  (  <> );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class    :  ​ {
    [NullableAttribute("1")]
private List`1<  > ;
    public bool ;
    public bool ;
    public bool ;
    public bool ;
    public bool ;
    private  ​ ;
    private int  ;
    private  ​  ;
    private double  ;
    [NullableAttribute("1")]
private IDictionary`2<  ,   >  ;
    private  ​  ;
    [NullableAttribute("1")]
public IDictionary`2<  ,   >   { get; public set; }
    public  ​ ();
    public void ( ​ );
    public int ();
    public void (int );
    public  ​ ();
    public void ( ​ );
    public double ();
    public void (double );
    [NullableContextAttribute("1")]
public IDictionary`2<  ,   >  ();
    [NullableContextAttribute("1")]
public void (IDictionary`2<  ,   > );
    public  ​ ();
    public void ( ​ );
    public virtual bool  ​​ ();
    public virtual bool  ​​ ();
    public virtual bool  ​​ ();
    public virtual bool  ​​ ();
    public virtual bool  ​​ ();
    public virtual bool  ​​ ();
    public virtual bool  ​​ ();
    public int ();
    public    (int );
    public    (bool );
    public     ();
    public void (   );
    public void (   );
    [NullableContextAttribute("1")]
public void ( ​ );
    public double ();
    public void (double , double );
    [NullableContextAttribute("1")]
public void (List`1<  > );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    internal Stream ();
    internal virtual ulong   ​ ();
    internal void (byte );
    internal void (ushort );
    internal void (UInt32 );
    internal void (ulong );
    internal void (Byte[] );
    internal void (Byte[] , ushort , byte );
    internal void (Byte[] , ushort , UInt32 );
    internal void (Stream );
}
[DefaultMemberAttribute("Item")]
[DebuggerTypeProxyAttribute("GemBox.Collections.CollectionDebugView`1")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private List`1<> ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<, int> ;
    public int Count { get; }
    public  Item { get; public set; }
    public   (int );
    public   (IEqualityComparer`1<> );
    public   (int , IEqualityComparer`1<> );
    public   (  <> );
    public   (ICollection`1<> );
    public sealed virtual int get_Count();
    public sealed virtual  get_Item(int );
    public sealed virtual void set_Item(int ,  );
    public int ( );
    public sealed virtual void Add( );
    private void ( );
    public sealed virtual void Insert(int ,  );
    public sealed virtual void RemoveAt(int );
    public sealed virtual bool Remove( );
    public sealed virtual void Clear();
    public sealed virtual int IndexOf( );
    public sealed virtual bool Contains( );
    public sealed virtual void CopyTo([] , int );
    public sealed virtual IEnumerator`1<> GetEnumerator();
    private sealed virtual override IEnumerator   ​ ();
    private sealed virtual override bool   ​ ();
}
internal class    :    {
    [NullableContextAttribute("1")]
public   (Stream , bool , int );
    [NullableContextAttribute("1")]
public   (Stream , bool );
    [NullableContextAttribute("1")]
public   (string , string , int );
    [NullableContextAttribute("1")]
public   (string , string );
    public virtual void   ​ (int );
    public virtual void   ​ (int );
    public virtual void   ​ (long );
    public virtual void   ​ (float );
    public virtual void   ​ (double );
    public virtual short   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual long   ​ ();
    public virtual long   ​  ();
    public virtual float   ​  ();
    public virtual double   ​  ();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private int ;
    private Random ;
    public DocumentModel (  <  > );
    private Paragraph (BlockCollection );
    private bool (Section );
    private void (Paragraph ,    );
    private void (Table ,    );
    private void (TableRow ,    );
    private void (TableCell ,    );
    private static SingleBorder (   );
    private void (Run , StringBuilder );
    private static void (PageSetup ,    );
    private static void (ParagraphFormat ,    );
    private static void (TableFormat ,    );
    private static void (TableRowFormat ,    );
    private static void (TableCellFormat ,    );
    private static void (MultipleBorders , ​  );
    private static void (CharacterFormat ,    );
    private static bool (CharacterFormat ,    );
    private static    (IEnumerable`1<  > );
    private static    (IEnumerable`1<  > );
    private static T (IDictionary`2<T, int> , int , T );
    private static LineSpacingRule ( );
    private static HorizontalAlignment ( );
    private static VerticalAlignment ( );
    private static SingleBorderType ( );
    private static BorderStyle ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private  ;
    private  ;
    private Byte[] ;
    public   (   , int );
    private static   ();
    public  ();
    public  ();
    public string ();
    public string ();
    public Byte[] ();
    private void ();
    public virtual string ToString();
}
internal class    :    {
    [NullableContextAttribute("1")]
public   (   );
    public virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    internal int ;
    internal int ;
    internal Int64[] ;
    internal long ;
    internal int ;
    internal int ;
    internal int ;
    internal     ;
    private static Byte[]  ;
    private static   ();
    internal int (   );
    internal int (   );
    internal int (   , int );
    internal int (   , int );
    internal int (   , Byte[] , int );
    internal int (   );
    internal int (   );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual Byte[]   ​ (string , Byte[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private  ​  ;
    internal  ​ ( ​  );
    private static  ​ ();
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    public double ();
    public void (double );
    private protected virtual void    ​ ​();
}
internal class    :  ​ {
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public Nullable`1<bool> ();
    public void (Nullable`1<bool> );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    protected internal static float ;
    protected internal static float ;
    protected internal static float ;
    protected internal static float ;
    protected internal static float ;
    protected internal static float ;
    protected internal static float ;
    protected internal static float  ;
    protected internal static float  ;
    protected internal   (   ,  );
    private static   ();
    public static    (   ,  );
    private void ();
    public virtual      ​ (   , int );
    public virtual      ​ (   , int );
    private static   [] (  [] );
    private static   [] (  [] );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (   , int );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
public int ;
    [DebuggerBrowsableAttribute("0")]
public int ;
    [DebuggerBrowsableAttribute("0")]
public    ;
    [DebuggerBrowsableAttribute("0")]
private string DebuggerDisplayValue { get; }
    public   (int , int ,    );
    private string get_DebuggerDisplayValue();
    public    (int );
    public    (int , int );
    public    ();
}
internal interface    {
    [NullableContextAttribute("1")]
public abstract virtual      ​ (int , int , int ,    , int , int ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private string ;
    private Action`1<XmlWriter> ;
    public   (string , Action`1<XmlWriter> );
    public string ();
    public Action`1<XmlWriter> ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private int ;
    private int ;
    private int ;
    private int ;
    private    ;
    private int ;
    private    ;
    public   (   );
    public    ();
    public    ();
    public virtual void   ​ ();
    public int ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :  {
    internal   (   );
    public   (  );
    private   (  );
    private void (  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private     ;
    private    ;
    private int ;
    private     ;
    private     ;
    private bool ;
    private double  ;
    private double  ;
    public   (   ,     ,    , int ,     ,     , bool );
    public double ();
    public double ();
    private double ();
    private static  ( , int );
    private static  ( , int );
    private void ( , Double& , Double& );
    private double (   ,  , double , double );
    private double (double );
    private double ();
    internal static  ( , int );
    internal static  ( , int );
    private void ( , Double& , Double& );
    private double (   ,  , double , double );
    private double (double );
}
internal class    : MulticastDelegate {
    public   (object , IntPtr );
    [NullableContextAttribute("1")]
public virtual void Invoke(   );
    public virtual IAsyncResult BeginInvoke(   , AsyncCallback , object );
    public virtual void EndInvoke(IAsyncResult );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  :  ​  {
    public  ​ (    );
    public void (    , BlockCollection , string );
    protected virtual   <string,    >  ​ ​ (BlockCollection );
}
internal class    : object {
    private double ;
    private double ;
    private  ;
    public double ();
    public void (double );
    public double ();
    public void (double );
    public  ();
    public void ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    protected internal static string ;
    protected internal static int ;
    protected internal static int ;
    protected internal static int ;
    protected internal static int ;
    public   [] ;
    public ​ [] ;
    protected internal   (   );
    protected internal   (   ,    ,    , ​  , ​  , ​  );
    private static   ();
    public abstract virtual int   ​ ();
    public static    (   ,    ,    , ​  , ​  , ​  );
    public static    (   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    public   (   );
    public    ();
    private void (   );
    public virtual    ​ ();
    internal virtual void   ​ (StringBuilder , bool , bool ,    );
    public virtual object   ​ (   );
    public virtual      ​  (   );
    public virtual      ​ (   );
    [IteratorStateMachineAttribute("  /")]
public virtual IEnumerable`1<  >   ​ ();
    private bool (   );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    private static String[][] ;
    protected internal    ;
    public   (   );
    private static   ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public static String[][] ();
    public virtual      ​ (int , int );
    public abstract virtual      ​ (int , int , int ,    ,    );
    public abstract virtual      ​ (int , int , int ,    ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    public static    (int , int );
    public static    (IEnumerable`1<int> );
    public static    (int , int , int , int );
    public static    (int , int );
    public static    (int , int );
    public static    ();
    public static    ();
    public static    ();
    public static    ();
    public abstract virtual IEnumerable`1<object>   ​ (Table , TableCell );
    private static bool (TableCell , Double& , Boolean& );
    public static bool (string , Int32& );
    public static bool (string , Int32& );
    public static string (int );
    public static string (int );
    private static bool (char , Int32& );
    private static TableCell (Table , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private bool ;
    private Int32[] ;
    internal  ;
    public   (   );
    public void ();
    private void ();
    private static int (double );
    private void (Byte[][] , int , Byte[][][] , int , int );
    private void (Byte[][] , int , Byte[][][] , int , int );
    private void (Byte[][] , int , Byte[][][] , int , int );
    private void (Byte[][] , int , Byte[][][] , int , int );
    private void (Byte[][] , int , Byte[][][] , int , int );
    private void (Byte[][] , int , Byte[][][] , int , int );
    private void (Byte[][] , int , Byte[][][] , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   > ;
    protected abstract virtual IEnumerable`1<  >   ​ ();
    public IEnumerable`1<  > ();
    public     ();
    public sealed virtual string   ​ ();
    public void (bool );
    public void (bool );
    public virtual void   ​ ();
    public     ();
    [IteratorStateMachineAttribute("  /")]
private IEnumerable`1<   > ();
    protected IEnumerable`1<TDescendant> ();
    protected     (    ,     , bool , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    protected  ;
    protected internal  ;
    protected internal string ;
    public   ( ,  , string );
    public virtual bool   ​ ();
    public virtual bool   ​ ();
    public virtual bool   ​ ();
    public virtual bool   ​ ();
    public virtual bool   ​ (short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ ();
    public virtual bool   ​ (short );
    public virtual bool   ​ ();
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual void   ​ ();
    public virtual bool   ​ (int );
    public virtual void   ​  ();
    public virtual int   ​ (int );
    public virtual void   ​ (Int32& , Int32& );
    private bool (string );
    private bool (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private IList`1<Byte[]> ;
    public   (string , Byte[][] );
    public   (string , object ,    );
    public Oid ();
    public IList`1<Byte[]> ();
    public T (int ,    );
    public sealed virtual bool Equals(   );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class  ​  : object {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static IList`1<KeyValuePair`2<int, string>> ;
    private static Char[] ;
    private static IDictionary`2<int, string> ;
    private static IDictionary`2<int, string> ;
    private static  ​ ();
    public static string (int , string );
    public static string (int , string );
    public static string (int );
    public static string (int , bool );
    public static string (int );
    public static string (int );
    public static string (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : ​​ {
    [DebuggerBrowsableAttribute("0")]
private    ;
    private  ​ ;
    private  ​ ;
    private    ;
    private  ​ ;
    private    ;
    private int ;
    public   (   );
    [CompilerGeneratedAttribute]
public sealed virtual  ​  ​​ ();
    [CompilerGeneratedAttribute]
public sealed virtual     ​​ ();
    public  ​ ();
    public  ​ ();
    public    ();
    public void (   );
    internal int ();
    internal void (int );
    public    ();
    private protected virtual  ​ ​​​ ();
    internal void (   );
}
internal class    :    {
    [NullableContextAttribute("1")]
internal   (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (   , int );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private static bool ;
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<, > ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<, > ;
    [DebuggerBrowsableAttribute("0")]
private Action`1<> ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<, >  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    public   (int , int , int , int , IEnumerable`1<KeyValuePair`2<, >> , IEqualityComparer`1<> , Action`1<> );
    private static   ();
    private Dictionary`2<, > ();
    public  ( , Func`2<, > );
    public  ( , <, > );
    public  ( , Func`3<, TArg, > , TArg );
    private void ();
    private void ();
    private sealed virtual override int   ​  ();
    private sealed virtual override int   ​  ();
    private sealed virtual override bool   ​  ();
    private sealed virtual override bool   ​  ();
    private sealed virtual override bool   ​  ();
    private sealed virtual override bool   ​  ();
    private sealed virtual override object   ​  ();
    private sealed virtual override ICollection`1<>   ​  ();
    private sealed virtual override ICollection   ​  ();
    private sealed virtual override ICollection`1<>   ​  ();
    private sealed virtual override ICollection   ​  ();
    private sealed virtual override    ​  ( );
    private sealed virtual override void   ​  ( ,  );
    private sealed virtual override object   ​  (object );
    private sealed virtual override void   ​  (object , object );
    private sealed virtual override bool   ​  ( );
    private sealed virtual override bool   ​  (object );
    private sealed virtual override bool   ​  ( , & );
    private sealed virtual override bool   ​  (KeyValuePair`2<, > );
    private sealed virtual override void   ​  (KeyValuePair`2[] , int );
    private sealed virtual override void   ​  (Array , int );
    private sealed virtual override IEnumerator`1<KeyValuePair`2<, >>   ​  ();
    private sealed virtual override IEnumerator   ​  ();
    private sealed virtual override IDictionaryEnumerator   ​  ();
    private sealed virtual override void   ​  ( ,  );
    private sealed virtual override void   ​  (object , object );
    private sealed virtual override void   ​  (KeyValuePair`2<, > );
    private sealed virtual override bool   ​  ( );
    private sealed virtual override void   ​  (object );
    private sealed virtual override bool   ​  (KeyValuePair`2<, > );
    private sealed virtual override void   ​ ();
    private sealed virtual override void   ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public int ;
    public int ;
    public int ;
    public int ;
    public Int32[] ;
    public int ;
    public   (int , int );
    public virtual string ToString();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    [ExtensionAttribute]
public static void (XmlWriter , string , string );
    [ExtensionAttribute]
public static void (XmlWriter , string , string , string );
    [ExtensionAttribute]
public static void (XmlWriter , string , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public virtual void   ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static List`1<   > (List`1<   > , double );
    public static List`1<   > (List`1<   > );
    public static List`1<   > (List`1<   > , double );
    private static void (List`1<   > , double , int , int , List`1<int> );
    private static double (    ,     , double , double ,     );
}
internal abstract class    : object {
    public abstract virtual void   ​ (Double& , Double& );
    [NullableContextAttribute("1")]
public abstract virtual void   ​ (Graphics );
    [NullableContextAttribute("1")]
public abstract virtual void   ​ (    ,    );
    public abstract virtual void Dispose();
}
internal abstract class    :    {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private ArraySegment`1<byte> ;
    [NullableContextAttribute("1")]
protected   (Stream , bool );
    protected ArraySegment`1<byte> ();
    protected void (ArraySegment`1<byte> );
    protected abstract virtual bool   ​                      ​   ();
    [NullableContextAttribute("1")]
public sealed virtual int Read(Byte[] , int , int );
    public sealed virtual int ReadByte();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  :  ​  {
    private static String[] ;
    private static Char[] ;
    private Dictionary`2<string, string> ;
    private     ;
    [NullableAttribute("2")]
private     ;
    private string ;
    private bool ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<KeyValuePair`2<string, string>>   { get; }
    public  ​ (string ,  ​ [] );
    private static  ​ ();
    public string ();
    public bool  ();
    public virtual   ​ ​ ();
    public  ​   ();
    [IteratorStateMachineAttribute(" ​ /")]
public IEnumerable`1<KeyValuePair`2<string, string>>  ();
    public      ();
    public string ();
    public void (string );
    public string ();
    public string ();
    public string ();
    public string ();
    public string ();
    public bool  ();
    public bool  ();
    public bool  ();
    public bool  ();
    public String[]  ();
    public bool (string );
    public string (string );
    public string (string , string );
    public double (string , double );
    public bool (string , bool );
    public void (string , int );
    public void (string , string );
    public void (string );
    public void  ();
    public      ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private bool ;
    private double ;
    private    ;
    private    ;
    private bool ;
    private    ;
    private  ;
    private double  ;
    private      ;
    private bool  ;
    private bool  ;
    public bool ();
    public void (bool );
    public double ();
    public void (double );
    public    ();
    public void (   );
    public     ();
    public void (   );
    public bool ();
    public void (bool );
    public     ();
    public void (   );
    public   ();
    public void ( );
    public double ();
    public void (double );
    public      ();
    public void (    );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public static Byte[] (SByte[] );
    public static Byte[] (string );
    public static Byte[] (Object[] );
    public static void (Exception );
    public static SByte[] (Byte[] );
    public static Char[] (SByte[] );
    public static Char[] (Byte[] );
    public static long (long );
    public static ulong (ulong );
    public static float (float );
    public static double (double );
    public static int (int , int );
    public static int (int , long );
    public static long (long , int );
    public static long (long , long );
    public static int (Stream , SByte[] , int , int );
    public static int (TextReader , SByte[] , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : Exception {
    public   (string );
    protected   (SerializationInfo , StreamingContext );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
private [] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public  Current { get; }
    internal   ([] , int );
    public sealed virtual  get_Current();
    public sealed virtual bool MoveNext();
    private sealed virtual override object   ​ ();
    private sealed virtual override void   ​ ();
    private sealed virtual override void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private Single[] ;
    public   (int , int , int , int );
    public   (   );
    public virtual int   ​ ();
    public virtual object   ​ ();
    public virtual void   ​ (object );
    public virtual Single[]   ​ ();
    public virtual void   ​ (Single[] );
    public virtual string ToString();
}
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public   (double , double );
    public   (double , double , LengthUnit );
    [IsReadOnlyAttribute]
public double ();
    private void (double );
    [IsReadOnlyAttribute]
public double ();
    private void (double );
    internal    (double );
    internal    (double );
    public sealed virtual bool Equals(   );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static bool op_Equality(   ,    );
    public static bool op_Inequality(   ,    );
}
internal static class    : object {
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :   <  > {
    public virtual    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :  {
    private bool ;
    private bool ;
    private short ;
    private short ;
    private short ;
    private int ;
    private int ;
    private int  ;
    private int  ;
    private int  ;
    private long  ;
    private bool  ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    private []  ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    private []  ;
    public   ( ,  , string );
    public virtual bool   ​ ();
    public virtual bool   ​ ();
    public virtual bool   ​ ();
    public virtual bool   ​ (short );
    public virtual bool   ​ (short );
    public virtual bool   ​ ();
    public virtual void   ​  ();
    public virtual bool ​ ();
    public virtual bool ​ (Byte[] , int , int , short );
    public virtual bool ​ (Byte[] , int , int , short );
    public virtual bool ​ (Byte[] , int , int , short );
    public virtual bool ​ ();
    public virtual bool ​ (Byte[] , int , int , short );
    public virtual bool ​ (Byte[] , int , int , short );
    public virtual bool ​ (Byte[] , int , int , short );
    private bool ();
    private bool (short );
    private bool (Byte[] , int , int );
    private bool (Byte[] , int , int );
    private bool (Byte[] , int , int , bool , string );
    private bool ();
    private bool (short );
    private bool ();
    private bool (Byte[] , int , int , short );
    private void ();
    private static int (int );
    private void (int );
    private void ();
    private void (Int16& , bool );
    private void (Int16& );
    private void (Int16& );
    private void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private ​  ;
    [DebuggerBrowsableAttribute("0")]
private AsymmetricKeyParameter ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private object ;
    [DebuggerBrowsableAttribute("0")]
private AlgorithmIdentifier ;
    public   (​  , AsymmetricKeyParameter , string , object );
    private ISigner (bool );
    private sealed virtual override object   ​ ();
    private sealed virtual override object   ​ ();
    private sealed virtual override IStreamCalculator`1<IBlockResult>   ​ ();
    private sealed virtual override IStreamCalculator`1<IVerifier>   ​ ();
}
internal static class  ​  : object {
    [NullableContextAttribute("1")]
public static string (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    private string ;
    internal ​  (​   , ​   , string );
    private string ();
    protected virtual string ​  ​ ();
    internal virtual string ​  ​ ();
    internal virtual Stream ​  ​ ();
    internal static string (string , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    internal ​  (string , ​   , ​   , int , ​   );
    internal ​   ();
    public ​   ();
    public int ();
    private protected virtual ​   ​  ​ ();
}
internal abstract class ​   : object {
    internal abstract virtual UInt32 ​  ​ (​​  , Nullable`1& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : object {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private ushort ;
    [NullableAttribute("2")]
public       { get; }
    public ​  (    , int , ​   );
    public ​  (​   );
    [NullableContextAttribute("2")]
public     ();
    public int ();
    public ​   ();
    public bool  ();
    public   ();
    public long  ();
    public int ();
    public int ();
    public int ();
    public int ();
    public ​   (    , long );
    public ​   (    , int , int );
    public void  ();
    public void  ();
    public void (​   );
    public virtual string ToString();
}
[IsReadOnlyAttribute]
internal class ​   : ValueType {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public ​  (int , int );
    public int ();
    public int ();
    public virtual int GetHashCode();
    public sealed virtual bool Equals(​   );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    [NullableContextAttribute("1")]
public virtual string ToString();
}
internal abstract class ​   : object {
    [NullableContextAttribute("1")]
public abstract virtual Stream ​  ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private short ;
    [DebuggerBrowsableAttribute("0")]
private short ;
    [DebuggerBrowsableAttribute("0")]
private short ;
    [DebuggerBrowsableAttribute("0")]
private short ;
    [DebuggerBrowsableAttribute("0")]
private short ;
    [DebuggerBrowsableAttribute("0")]
private short ;
    [DebuggerBrowsableAttribute("0")]
private short  ;
    [DebuggerBrowsableAttribute("0")]
private short  ;
    [DebuggerBrowsableAttribute("0")]
private short  ;
    [DebuggerBrowsableAttribute("0")]
private short  ;
    [DebuggerBrowsableAttribute("0")]
private short  ;
    [DebuggerBrowsableAttribute("0")]
internal ushort  ;
    internal static ​   ();
    public virtual UInt32 ​  ​ ();
    protected virtual bool ​  ​ ();
    internal virtual void ​  ​ (​​  , UInt32 );
    internal virtual UInt32 ​  ​ (​​  , Nullable`1& );
    internal virtual ​   ​  ​ (ICollection`1<ushort> );
    internal virtual void ​  ​ (​   , ICollection`1<ushort> );
}
internal abstract class ​   : ​   {
    internal sealed virtual bool ​  ​ ();
    internal sealed virtual bool ​  ​ ();
    [NullableContextAttribute("1")]
public abstract virtual bool Equals(object );
    public abstract virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private Array ;
    public ​  ( , Array , ​   , Stream );
    internal virtual UInt32 ​  ​ (​​  , Nullable`1& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   : object {
    [DebuggerBrowsableAttribute("0")]
internal string DebuggerDisplayValue { get; }
    [DebuggerBrowsableAttribute("0")]
private string DebuggerDisplayType { get; }
    public static ​   ();
    public abstract virtual  ​  ​ ();
    internal virtual bool ​  ​ ();
    internal abstract virtual bool ​  ​ ();
    internal abstract virtual bool ​  ​ ();
    internal virtual bool ​  ​ ();
    internal virtual bool ​  ​ ();
    internal virtual string get_DebuggerDisplayValue();
    private string get_DebuggerDisplayType();
    internal ​    ();
    internal ​    ();
    internal ​    ();
    public abstract virtual string ToString();
}
[DefaultMemberAttribute("")]
internal class ​   : object {
    [NullableAttribute("1")]
internal Int16[] ;
    public int  { get; }
    [NullableContextAttribute("1")]
public ​  (Int16[] );
    public sealed virtual int    ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   : ​   {
    public abstract virtual bool ​  ​ ();
    private protected abstract virtual double ​  ​ ();
    public double ();
    public sealed virtual  ​  ​ ();
    public static ​   (double );
    [NullableContextAttribute("2")]
internal static ​   (Nullable`1<double> );
    internal static double (double );
}
internal interface ​   {
    public int Count { get; }
    [NullableAttribute("1")]
public IDictionary`2<int, ushort>  { get; }
    public abstract virtual int get_Count();
    public abstract virtual bool ​  ​ (int , Int32& );
    public abstract virtual bool ​  ​ (int , int , Int32& );
    [NullableContextAttribute("1")]
public abstract virtual IDictionary`2<int, ushort> ​  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    internal ​  (    , ​   );
    protected virtual        ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    private string ;
    internal ​  (string );
    internal virtual IEnumerable`1<​  > ​  ​ ();
    internal virtual     ​  ​ (    );
    internal virtual     ​  ​ (    );
    private static String[] (string , string );
    private static List`1<string> (string , string );
    private static object (string , string );
    private static RegistryKey (string );
    private static RegistryKey (string );
    private static void (IList`1<string> , Dictionary`2<string, ​  > );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ValueType {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
internal ushort ;
    internal ​  ( , long , int );
    public bool ();
    public  ();
    public long ();
    public int ();
    internal void (Int32[] , Int64& , UInt16& );
    public sealed virtual bool Equals(​   );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public virtual string ToString();
    public static bool op_Equality(​   , ​   );
    public static bool op_Inequality(​   , ​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
protected ​   ;
    [DebuggerBrowsableAttribute("0")]
protected Stream ;
    public ​  (​   , Stream );
    public sealed virtual UInt32 ​  ​ ();
    internal sealed virtual void ​  ​ (​​  , UInt32 );
    internal virtual UInt32 ​  ​ (​​  , Nullable`1& );
    internal sealed virtual void ​  ​ (​   , ICollection`1<ushort> );
}
internal class ​   :     {
    private bool ;
    [NullableContextAttribute("1")]
internal ​  (Byte[] , int , bool , bool , bool , bool , bool , bool  , bool  );
    internal bool ();
}
internal class    :    {
    [NullableContextAttribute("1")]
public virtual void   ​ (   );
    public virtual void   ​ (double );
    public virtual void   ​ (double );
    public virtual void   ​ (double );
    public virtual void   ​ (double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    protected internal   (int , int , double , double , double , double , double );
    public static    (int , int , double , double , double , double , double );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (   , int );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private Func`1<> ;
    private Func`1<bool> ;
    private bool ;
    private  ;
    public   (Func`1<> , Func`1<bool> );
    public  ();
    public void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private int ;
    private int ;
    public   (int , int , byte );
    public   (int , int , byte ,    );
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ (byte , int , int );
    public virtual int   ​ (byte , int , int );
    public virtual void   ​ (object );
    public virtual void   ​ (int , object );
    public virtual void   ​ (int , object );
    public virtual void   ​ (int , int , object );
    private void (Int32[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private DocumentModel ;
    private TableCell ;
    public   (DocumentModel );
    public DocumentModel ();
    public TableCell ();
    public void (TableCell );
    public virtual bool   ​ ();
    public virtual bool   ​ ();
    public    (string , IList`1<  > );
}
internal abstract class    : object {
    [NullableAttribute("1")]
public  ;
    [NullableAttribute("1")]
public  ;
    public abstract virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private  ​  ;
    public   ( ​  ,  );
    public  ​  ();
    public virtual    ​ ();
    public ​  ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :  ​ {
    private bool ;
    private bool ;
    private    ;
    private    ;
    private    ;
    private bool ;
    private bool ;
    private List`1<  >  ;
    private     ;
    private   (bool , bool , double , double ,    ,    ,    , bool  , bool  , List`1<  >  ,     );
    public   (double , double ,    );
    public   (   , bool , bool ,    ,    , bool , bool ,     );
    public    ();
    private void (   );
    public    ();
    private void (   );
    public    ();
    private void (   );
    public bool ();
    private void (bool );
    public bool ();
    private void (bool );
    public List`1<  > ();
    private void (List`1<  > );
    public    ();
    private void (   );
    public double  ();
    public double  ();
    public virtual bool  ​​ ();
    public virtual bool  ​​ ();
    public virtual bool  ​​ ();
    public virtual bool  ​​ ();
    public virtual bool  ​​ ();
    public virtual bool  ​​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
private Queue`1<> ;
    public   (ZipArchiveMode );
    public int ();
    public void (ZipArchive , string , Nullable`1<CompressionLevel> , Action`1<Stream> );
}
[ExtensionAttribute]
internal static class  ​  : object {
    [ExtensionAttribute]
public static string (TEnum );
}
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    private   (double );
    private   ( );
    private static bool ( );
    public static    op_Implicit( );
    public static    op_Implicit(double );
    public double ();
    public  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    private static int ;
    private static int ;
    private static int ;
    private static int ;
    private static int ;
    private static int ;
    private static int ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    public int  ;
    public int  ;
    public Byte[]  ;
    public int  ;
    public int  ;
    protected internal   (int , Byte[] , int , int );
    private static   ();
    public static string (int );
    public static string (int );
    public static    (int , Byte[] , int , int );
    public virtual string ToString();
    private static int (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    protected bool ;
    protected Stream ;
    protected    ;
    protected ​  ;
    internal abstract virtual ulong   ​ ();
    internal void (bool );
    internal void (   );
    public void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private  ;
    private    ;
    public   ( ,    );
    public  ();
    private void ( );
    public    ();
    private void (   );
    public virtual    ​ ();
    internal virtual void   ​ (StringBuilder , bool , bool ,    );
    public virtual object   ​ (   );
    public object (   );
    public static object (   ,  ,    );
    public virtual      ​ (   );
    [IteratorStateMachineAttribute("  /")]
public virtual IEnumerable`1<  >   ​ ();
    private bool (   );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private bool ;
    internal bool ;
    internal    ;
    internal int ;
    internal int ;
    internal int ;
    internal   (   );
    internal virtual void   ​ (bool );
    internal void (Int32[] , int );
    internal void (int );
    internal virtual void   ​ ();
    public virtual int   ​ ();
    internal virtual void   ​ ();
    internal virtual int   ​ ();
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual object   ​ ();
    public abstract virtual void   ​ (string , CharacterFormat , bool );
    public abstract virtual bool   ​ (string );
    public abstract virtual bool   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private int ;
    private bool ;
    private bool ;
    private    ;
    private    ;
    public   (   );
    public void ();
    public void ();
    public bool ();
    private void ();
    private void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :   <  > {
    public   (   );
    public virtual    ​ ();
    public bool ();
    public double ();
    public double ();
    public     ();
    public bool (   );
    private static bool (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public virtual bool   ​ ( ,  ,   [] );
    public virtual   []   ​ ( ,  );
    public virtual void   ​ ( , Stream ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : CryptographicException {
    [DebuggerBrowsableAttribute("0")]
private   [] ;
    internal   (  [] );
    public   [] ();
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class  ​  :  ​  {
    private    <> ;
    private double ;
    private Nullable`1<double> ;
    private Dictionary`2<, > ;
    public   { get; }
    public  ​ (   <> , double , Nullable`1<double> ,     );
    public  (   );
    protected sealed virtual Stream  ​ ​ (   );
    protected abstract virtual   ​ ​ ( , Stream , double );
    protected abstract virtual Stream  ​ ​ ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static string ( );
    public static    (   );
    public static void ( ​ , bool ,  ​ );
    public static void (   ,  ​ ,  ​ , double );
    public static KeyValuePair`2< ​,   > (   );
    private static    ( ​ );
}
internal abstract class    : object {
    public int ;
    public int ;
    public int ;
    public int ;
    public   (int , int , int , int );
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private Stream ;
    internal   (string , Stream ,    );
    internal virtual void   ​ ();
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private IList`1<> ;
    [DebuggerBrowsableAttribute("0")]
private IList`1<> ;
    public  Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public   (IList`1<> );
    public sealed virtual  get_Item(int );
    public sealed virtual void set_Item(int ,  );
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual void Add( );
    public sealed virtual void Clear();
    public sealed virtual bool Contains( );
    public sealed virtual void CopyTo([] , int );
    public sealed virtual IEnumerator`1<> GetEnumerator();
    public sealed virtual int IndexOf( );
    public sealed virtual void Insert(int ,  );
    public sealed virtual bool Remove( );
    public sealed virtual void RemoveAt(int );
    public void ( );
    public void ( );
    public void ( );
    public void ( );
    public void ( , int );
    private sealed virtual override IEnumerator   ​ ();
}
internal class    :    {
    public   (int , int , byte );
    [NullableContextAttribute("1")]
public   (int , int , byte ,    );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual      ​ ();
    public abstract virtual       ​ ();
    public abstract virtual      ​ ();
    public abstract virtual       ​ ();
    public abstract virtual void   ​ (    );
    public abstract virtual bool   ​ ();
    public abstract virtual void   ​ (bool );
    public abstract virtual bool   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private int ;
    private int ;
    private Int16[] ;
    private Int32[][] ;
    public   (   , int );
    private static   ();
    public int ();
    public int ();
    internal void ();
    public bool (int );
    public bool (int );
    public short (int );
    public int (int , int );
    public virtual string ToString();
    private int (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public virtual void   ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    internal static Int32[] ;
    internal static Int32[] ;
    internal static Int32[] ;
    internal static Byte[] ;
    internal static Byte[] ;
    internal static Byte[] ;
    internal static Int32[] ;
    internal static Int32[]  ;
    internal Int16[]  ;
    internal int  ;
    internal     ;
    private static   ();
    internal static int (int );
    internal void (   );
    internal void (   );
    internal static void (Int16[] , int , Int16[] );
    internal static int (int , int );
}
internal class    : object {
    [NullableAttribute("1")]
public static    ;
    private static   ();
    [NullableContextAttribute("1")]
public sealed virtual Byte[]   ​ (string , Byte[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : object {
    public static void (int , Byte[] , int , int , int , Byte[] , int , int  , int  );
    public static void (int , Byte[] , int , int , int , Byte[] , int , int  , int  );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual bool   ​ ();
    public abstract virtual List`1<  >   ​ ();
    public abstract virtual       ​ (   & modreq(System.Runtime.InteropServices.InAttribute) , double );
    public abstract virtual bool   ​ (   & modreq(System.Runtime.InteropServices.InAttribute) , Nullable`1& , Boolean& );
    public abstract virtual bool   ​ (   & modreq(System.Runtime.InteropServices.InAttribute) , Nullable`1& , Boolean& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : BinaryWriter {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public   (Stream );
    public   (Stream , Encoding );
    public   (Stream , Encoding , bool );
    public   (Stream , bool );
    public virtual void Write(double );
    public virtual void Write(float );
    public virtual void Write(int );
    public virtual void Write(long );
    public virtual void Write(short );
    public virtual void Write(UInt32 );
    public virtual void Write(ulong );
    public virtual void Write(ushort );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (string );
    public   (Stream );
    internal Stream ();
    internal virtual ulong   ​ ();
    internal long (long );
    internal long (long );
    internal long (long , long );
    internal byte ();
    internal void (Byte[] );
    internal void (Byte[] , int , int );
    internal int ();
    internal int (Byte[] , int , int );
    internal void (Byte[] , long );
    internal ushort ();
    internal UInt32 ();
    internal ulong ();
    internal ushort (long );
    internal UInt32 (long );
    internal ulong (long );
    internal string (int );
}
[DebuggerTypeProxyAttribute("GemBox.Collections.CollectionDebugView`1")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private IEnumerable`1<> ;
    public int Count { get; }
    public   (IEnumerable`1<> );
    public int get_Count();
    public sealed virtual IEnumerator`1<> GetEnumerator();
    private sealed virtual override IEnumerator   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private int ;
    private Stream ;
    private int ;
    private bool ;
    private int ;
    private int ;
    private Byte[] ;
    private     ;
    public   (Stream );
    public   (   );
    public   (string );
    public virtual void   ​ ();
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual      ​ (   , int );
    public virtual      ​ (   , int );
    public virtual bool   ​ (int );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private static Regex ;
    private string ;
    private  ;
    private string ;
    private string ;
    private bool ;
    private string ;
    private bool  ;
    private   (string ,  , string , string , bool , string , bool );
    private static   ();
    public static    (string );
    public static string (object ,    , CultureInfo , string );
    private static IFormattable (object , CultureInfo , bool );
    public string ();
    public  ();
    public string ();
    public string ();
    public bool ();
    public string ();
    public bool ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    internal   (   );
    public sealed virtual Stream   ​ ();
    public sealed virtual void   ​ (   );
    public sealed virtual void   ​ ();
    public sealed virtual void   ​ (Byte[] );
    public sealed virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    public   (string , string ,  , double ,     ,     , double ,     );
    public string ();
    private void (string );
    public string ();
    public double ();
    private void (double );
    public      ();
    public double ();
    public double ();
    public virtual    ​ ();
    public bool  ();
    public bool  ();
    public double ();
    public double ();
    public virtual string   ​ ();
    public void (double , int );
    public void  ();
    public sealed virtual int CompareTo(   );
    public virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
public    ;
    [DebuggerBrowsableAttribute("0")]
public int ;
    [DebuggerBrowsableAttribute("0")]
public Byte[] ;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private DateTime  ;
    [DebuggerBrowsableAttribute("0")]
private DateTime  ;
    [DebuggerBrowsableAttribute("0")]
private Oid  ;
    [DebuggerBrowsableAttribute("0")]
private   []  ;
    [DebuggerBrowsableAttribute("0")]
private Byte[]  ;
    [DebuggerBrowsableAttribute("0")]
private Byte[]  ;
    internal   (   ,    , string , DateTime , DateTime , Oid ,   [] , Byte[]  , Byte[]  );
    public    ();
    public    ();
    public string ();
    public DateTime ();
    public DateTime ();
    public Oid ();
    public   []  ();
    public Byte[]  ();
    public Byte[]  ();
    public string ();
    public    (   );
    public    (   );
    public    (   );
    public static int (string , int );
    public int (int );
    private int (string );
    public sealed virtual bool Equals(   );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : ValueType {
    [DebuggerBrowsableAttribute("0")]
public     ;
    [DebuggerBrowsableAttribute("0")]
public     ;
    [DebuggerBrowsableAttribute("0")]
public     ;
    [DebuggerBrowsableAttribute("0")]
public     ;
    public     ();
}
internal class    : object {
    private double ;
    private double ;
    public   (double , double );
    public double ();
    public double ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :   <Image> {
    internal   (int , int , Byte[] );
    protected virtual object   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    protected    ;
    protected    ;
    protected int ;
    internal   (   ,    );
    internal Stream ();
    internal List`1<UInt32> (UInt32 , ulong , string );
    internal List`1<UInt32> (UInt32 , ulong , string , bool );
    internal int (Byte[] , int , int );
    internal int ();
    protected abstract virtual UInt32   ​ (UInt32 );
    internal abstract virtual long   ​ (long , long );
    internal abstract virtual ushort   ​ ();
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
private   <> ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public int Count { get; }
    public  Item { get; }
    internal   (  <> , int , int );
    public sealed virtual int get_Count();
    public sealed virtual  get_Item(int );
    public   <> (int , int );
    public virtual bool Equals(object );
    public sealed virtual bool Equals(  <> );
    internal bool (  <> , IEqualityComparer`1<> );
    public virtual int GetHashCode();
    internal int (IEqualityComparer`1<> );
    internal [] ();
    internal TOutput[] (Func`3<, TContext, TOutput> , TContext );
    internal bool (Predicate`1<> );
    [NullableContextAttribute("0")]
internal static string  (  <char> );
    [NullableContextAttribute("0")]
public <>  ();
    private sealed virtual override bool   ​  ();
    private sealed virtual override    ​ (int );
    private sealed virtual override void   ​  (int ,  );
    private sealed virtual override void   ​  (int ,  );
    private sealed virtual override void   ​  (int );
    private sealed virtual override int   ​  ( );
    private sealed virtual override void   ​  ( );
    private sealed virtual override bool   ​  ( );
    private sealed virtual override void   ​  ();
    private sealed virtual override bool   ​  ( );
    private sealed virtual override void   ​  ([] , int );
    private sealed virtual override IEnumerator`1<>   ​  ();
    private sealed virtual override IEnumerator   ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private int ;
    private int ;
    private int ;
    private IList`1<  > ;
    private IList`1<int> ;
    private Int32[] ;
    private Int32[] ;
    public   (IList`1<  > , IList`1<int> );
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int , int );
    public virtual int   ​ (int , int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual      ​ (   , int );
    public virtual      ​ (   , int );
    public sealed virtual void   ​ ();
    public sealed virtual bool   ​ (int );
    public virtual void   ​ (int , int );
    public virtual void   ​  ();
    public virtual      ​ (   );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual      ​ (   );
    public virtual int   ​  ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private    ;
    private    ;
    private    ;
    internal   (   ,    ,    ,    );
    public    ();
    public    ();
    public    ();
    public    ();
    public    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :  {
    internal    ;
    internal int ;
    internal int ;
    internal int ;
    internal  ;
    internal  ;
    internal int ;
    internal int  ;
    internal bool  ;
    internal bool  ;
    internal   ;
    internal bool  ;
    internal bool  ;
    internal bool  ;
    internal   ;
    internal bool  ;
    internal int  ;
    internal bool  ;
    internal bool  ;
    internal bool  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal Byte[][]  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal Int32[][]  ;
    internal   []  ;
    internal   []  ;
    internal   []  ;
    internal int  ;
    private   []  ;
    internal bool  ;
    internal bool  ;
    internal bool  ;
    internal Byte[]  ;
    internal Byte[]  ;
    internal Byte[]  ;
    internal int  ;
    internal bool  ;
    internal byte  ;
    internal byte  ;
    internal   ;
    internal short ​;
    internal short ​;
    internal bool ​;
    internal byte ​;
    internal  ​;
    internal bool ​;
    internal List`1<  > ​;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal Byte[]  ;
    internal int  ;
    internal int  ;
    internal Int32[]  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal Int32[]  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal Int32[]  ;
    internal int  ;
    internal int  ;
    internal     ;
    internal   ;
    internal   ;
    internal   ;
    internal     ;
    internal     ;
    internal     ;
    internal     ;
    internal ​   ;
    internal     ;
    internal     ;
    public   (   );
    public virtual bool ​ ();
    public     ();
    public void (   );
    public int  ();
    public int  ();
    public int  ();
    public   ();
    public void ( );
    public ReadOnlyCollection`1<  >  ();
    public   ();
    public void ( );
    public int  ();
    public void (int );
    public int  ();
    public void (int );
    public bool ();
    public void (bool );
    public bool  ();
    public void (bool );
    public   ();
    public void ( );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public   ();
    public void ( );
    public bool  ();
    public void (bool );
    public int  ();
    public void (int );
    public bool  ();
    public void (bool );
    public bool  ();
    public void  (bool );
    public bool  ();
    public void  (bool );
    public int  ();
    public int  ();
    public int  ();
    public int  ();
    public int  ();
    public int  ();
    public void (int );
    public Byte[][]  ();
    public void (Byte[][] );
    public int  ();
    public int  ();
    public int  ();
    public int  ();
    public int  ();
    public Int32[][] ​();
    public  ​();
    public short ​();
    public short ​();
    public int  ();
    public int  ();
    public int  ();
    public   [] ​();
    internal void (  [] );
    public void (Stream );
    public   (bool );
    public bool  ();
    public int (Byte[][] , int );
    public bool  ();
    public int (Byte[][][] , int );
    public bool  ();
    public bool (int );
    public bool  ();
    public bool  ();
    public  ​();
    public void ();
    public   []  ();
    public void (   );
    public void ();
    public void (int ,  );
    public void (int , int );
    internal bool  ();
    private void ();
    private void ();
    private bool  ();
    private void ();
    private void ();
    private  ​();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :   <  > {
    public   (   );
    public virtual    ​ ();
    public  ();
    public     ();
    public double ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    protected  ;
    public   ( );
    public virtual void   ​ ();
    public virtual bool   ​ ();
    public virtual void   ​ (int );
    public virtual bool   ​ (   , int );
    public virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private X509Certificate2 ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public   (   );
    public X509Certificate2 ();
    public AsymmetricAlgorithm ();
    public sealed virtual bool Equals(   );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public virtual string ToString();
    public sealed virtual void Dispose();
    private static X509Certificate2 (object , object , X509KeyStorageFlags , Boolean& );
    private sealed virtual override object   ​ ();
    private sealed virtual override object   ​ ();
    private sealed virtual override X509KeyStorageFlags   ​ ();
    private sealed virtual override bool   ​ ();
    private sealed virtual override bool   ​ ();
    private sealed virtual override bool   ​  ();
    private sealed virtual override bool   ​  ();
    private sealed virtual override Byte[]   ​ (Byte[] , string , object );
    private sealed virtual override bool   ​ (Byte[] , Byte[] , string , object );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class  ​  : object {
    public static IList`1<ContentRange> (ContentRange , Regex );
    public static ContentRange (ContentRange , Regex );
    [IteratorStateMachineAttribute(" ​ /")]
private static IEnumerable`1<ContentRange> (ContentRange , Regex );
    public static string (ContentRange , IEnumerable`1& );
    [IteratorStateMachineAttribute(" ​ /")]
private static IEnumerable`1< ​ > (string , Regex );
    private static List`1<ContentRange> (ContentRange , IEnumerable`1< ​ > );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    private bool ;
    private bool ;
    protected internal   (bool , bool );
    public bool ();
    private void (bool );
    public bool ();
    private void (bool );
    public abstract virtual int   ​ (​   , Int32& );
    public abstract virtual      ​ (  & modreq(System.Runtime.InteropServices.InAttribute) ,   & modreq(System.Runtime.InteropServices.InAttribute) );
    public abstract virtual      ​ (  & modreq(System.Runtime.InteropServices.InAttribute) );
    public virtual double   ​ (    , int , int , Double& );
    public static    ( ​ , double , double ,    );
    public virtual bool   ​ (   );
    public double (    );
    private static double (   );
    public double (    );
    public double (    );
    public virtual bool   ​ (   ,    ,   & );
    private    (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private Double[] ;
    private int ;
    private int ;
    private int ;
    private Int32[] ;
    internal   (int , int , int , Int32[] );
    internal int ();
    internal int ();
    public int ();
    internal Int32[] ();
    public Double[] ();
    public sealed virtual T   ​ ();
    public Int32[] (int );
    internal void (int , int , int , Int32[] );
    private static Byte[] (int , int , int , Double[] , Int32[] );
}
internal class    :    {
    [NullableContextAttribute("1")]
internal   (   );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    [ExtensionAttribute]
public static int (IList`1<T> , V );
    [ExtensionAttribute]
public static int (IList`1<T> , int , int , V );
    [ExtensionAttribute]
internal static bool (IList`1<T> , TValue , Int32& );
    [ExtensionAttribute]
internal static bool (IList`1<T> , int , int , TValue , Int32& );
    [ExtensionAttribute]
internal static TOutput[] (IList`1<TInput> , Converter`2<TInput, TOutput> );
    [ExtensionAttribute]
internal static List`1<TOutput> (IList`1<TInput> , Converter`2<TInput, TOutput> );
}
internal interface    {
    public abstract virtual int   ​ ();
    public abstract virtual byte   ​ ();
    public abstract virtual byte   ​ ();
    public abstract virtual short   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual long   ​ ();
    public abstract virtual long   ​  ();
    public abstract virtual float   ​  ();
    public abstract virtual double   ​  ();
    public abstract virtual int   ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private string ;
    private string ;
    private OutlineLevel ;
    private bool ;
    public   (string );
    public string ();
    private void (string );
    public string ();
    private void (string );
    public OutlineLevel ();
    private void (OutlineLevel );
    public bool ();
    private void (bool );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private Byte[] ;
    private   [] ;
    public     { get; }
    public   (Byte[] , int , byte , byte );
    internal   (Int16[] , byte , byte );
    public int ();
    public    (int );
    public    (int );
    public Byte[] ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private long ;
    private long ;
    private long ;
    private long ;
    private long ;
    private bool ;
    private    ;
    public   (   );
    public void (long , long );
    public int ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private static [] ;
    private static String[] ;
    internal    ;
    internal int ;
    internal Byte[] ;
    internal int ;
    internal int ;
    internal int  ;
    internal int  ;
    internal byte  ;
    internal byte  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal Byte[]  ;
    internal int  ;
    internal Int16[]  ;
    internal Int16[]  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal Int16[]  ;
    internal Int16[]  ;
    internal Int16[]  ;
    internal     ;
    internal     ;
    internal     ;
    internal Int16[]  ;
    internal Int32[]  ;
    internal int  ;
    internal int  ;
    internal Byte[]  ;
    internal int ​;
    internal int ​;
    internal int ​;
    internal int ​;
    internal int ​;
    internal int ​;
    internal int ​;
    internal int  ;
    internal short  ;
    internal int  ;
    private static   ();
    internal void ();
    internal void ();
    internal void ();
    internal void (Int16[] , int );
    internal static bool (Int16[] , int , int , Byte[] );
    internal void (Int16[] , int );
    internal int  ();
    internal void (int , int , int );
    internal void (Int16[] , int );
    internal void (Byte[] , int , int );
    internal void (byte );
    internal void (int );
    internal void (int );
    internal void (int , Int16[] );
    internal void (int , int );
    internal void ();
    internal bool (int , int );
    internal void (Int16[] , Int16[] );
    internal void ();
    internal void ();
    internal void ();
    internal void (int , int , bool );
    internal void (bool );
    internal int (int );
    internal void (int , int , bool );
    internal void (int , int , bool );
    internal void  ();
    internal int (int );
    internal int (int );
    internal int (int );
    internal int (   , int , int );
    internal int (   , int );
    internal int (   , int , int , int , int , int );
    internal int (   );
    internal int  ();
    internal int (   , int , int );
    internal int (   , Byte[] , int );
    internal int (   , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private string ;
    private string ;
    private string ;
    private IList`1<  > ;
    private IWebProxy ;
    internal   (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public IList`1<  > ();
    public IWebProxy ();
    public void (IWebProxy );
    public virtual Byte[]   ​ (Byte[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    internal ​   Source { get; }
    private static  ​ ();
    private  ​ ( );
    internal static  ​  ();
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    public bool ();
    public void (bool );
    public double ();
    public void (double );
    public bool ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private  ​ ;
    private bool ;
    public   ( ​ , bool );
    public  ​ ();
    public bool ();
    public sealed virtual object  ​​ ();
    public sealed virtual object  ​​ (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    protected internal   (   ,  );
    public static    (   ,  );
    public virtual      ​ (   , int );
    public virtual      ​ (   , int );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (   , int );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[ExtensionAttribute]
internal static class    : object {
    [ExtensionAttribute]
[NullableContextAttribute("1")]
public static Byte[] (Assembly , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public int ;
    public int ;
    public int ;
    public int ;
    public int ;
    public int ;
    public int ;
    public int  ;
    public int  ;
    public   [][][]  ;
    public Int32[]  ;
    public   (int , int , int , int , int , int , int , int  , int  );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private string ;
    private string ;
    private string ;
    private IList`1<  > ;
    public   (string , string , string );
    public string ();
    public string ();
    public string ();
    public IList`1<  > ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private long ;
    private long ;
    private long ;
    private int ;
    public    ;
    private    ;
    private    ;
    private     ;
    public   (long , long ,    ,    ,    );
    public void (bool , int , bool , bool ,    , Int16[] , Int16[] , long  );
    public void (long , bool ,    , long , long , Int16[] , Int16[] );
    public void (bool , bool , long , long , long , Int64[0...,0...] , long ,   []  , int  , int  , bool  , int  , int  , Int64[0...,0...]  , Int64[0...,0...]  , Int64[0...,0...]  , Int64[0...,0...]  , Int64[0...,0...]  , Int64[0...,0...]  , Int64[0...,0...]  , Int64[0...,0...]  , int  , Int16[]  , Int16[]  ,     );
    public void (bool , bool , long , long , long , Int64[][] , long ,   []  , int  , int  , bool  , int  , int  , Int64[0...,0...]  , Int64[0...,0...]  , Int64[0...,0...]  , Int64[0...,0...]  , Int64[0...,0...]  , Int64[0...,0...]  , Int64[0...,0...]  , Int64[0...,0...]  , int  , Int16[]  , Int16[]  ,     );
    public void (int );
    public void (   , long , long , long );
    private void (int , int );
    public long ();
    public long ();
    public Byte[] (bool );
    public    (long , long , long , long );
    private void (long , long ,    , long );
    public void (long , long , long );
    public int (int , int );
    public void (int , int );
    public void (int );
    public int ();
    public Byte[] ();
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class    :    {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
public     { get; }
    public   (   );
    internal double ();
    internal void (double );
    public   ();
    private void (  );
    [NullableContextAttribute("1")]
internal virtual      ​ (  );
    [NullableContextAttribute("1")]
public    (int );
    public double ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :   <  > {
    [DebuggerBrowsableAttribute("0")]
private   ;
    public   (   );
    private double ();
    private double ();
    private static  ( );
    protected virtual void   ​ (   ,    ,  ​ ,     , bool );
    protected virtual void   ​ (    ,    ,    );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    [DebuggerBrowsableAttribute("0")]
private ArrayList ;
    [DebuggerBrowsableAttribute("0")]
public     { get; }
    [DebuggerBrowsableAttribute("0")]
public     { get; }
    internal   (string );
    public    (string );
    public    (int );
    public void (string );
    public void (int );
    public int ();
    public sealed virtual IEnumerator GetEnumerator();
    public    (string );
    public    (string , Byte[] );
    public    (string , int ,    );
    public void (   );
    public void (   , object );
    public void (   , bool );
    public void ();
    internal void (   );
    internal bool (int ,    , ArrayList );
    private static void (   );
    private static void (   );
    public void (string );
    public void (Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class  ​  : object {
    protected     ;
    private int ;
    private  ;
    private  ​  ;
    internal  ;
    internal bool ;
    private List`1<bool> ;
    private IDictionary`2<string,    >  ;
    protected  ​ (    , int );
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string,    >  ​ ​ ();
    protected  ​  ();
    protected BlockCollection ();
    public sealed virtual bool  ​ ​ ();
    public sealed virtual DocumentModel  ​ ​ ();
    public sealed virtual IDictionary`2<string, bool>  ​ ​ ();
    protected IDictionary`2<int, string> ();
    public sealed virtual IDictionary`2<string, Color>  ​ ​ ();
    public sealed virtual IDictionary`2<string,    >  ​ ​ ();
    protected  ();
    private sealed virtual override Chart  ​ ​ (string );
    public virtual void  ​ ​ (    , string );
    protected virtual void  ​ ​ ();
    protected abstract virtual void  ​ ​ ();
    protected void (    , Func`1<BlockCollection> , string , Func`2<   , bool> );
    private void (    );
    private void (    , bool );
    private void (    );
    private void (BlockContentControl ,     );
    private void (    , ContentControlProperties ,     , ContentControlType& );
    private XmlMapping  (    );
    private static bool (string );
    private static Nullable`1<BuiltInDocumentProperty> (string );
    private static void (    , ContentControlProperties );
    private static void (    , ContentControlProperties );
    private static void (    , ContentControlProperties );
    private static void (    , ContentControlProperties );
    private static void (    , ContentControlProperties );
    private Block  ();
    private static Block (BlockCollection );
    private void (    , bool );
    private void (BlockCollection , bool );
    private void (DocumentModel , bool , bool );
    private bool  (    );
    private bool (    , Paragraph ,    & );
    protected virtual bool  ​ ​  (    );
    private void (    , InlineCollection , string , Action`1<   > );
    private void (    );
    private MoveRangeSeparator (    , bool , bool );
    private void (    , RevisionType );
    private void (    , bool );
    private void (    , bool );
    private void (    );
    private void (    ,  , bool );
    private CommentStart  (    );
    private CommentEnd  (    );
    private void (    ,  );
    private void (string ,  );
    private PreservedInline (string ,  );
    public void (Element , string );
    public sealed virtual void  ​ ​ (string );
    private void (    , CharacterFormat );
    private void (    );
    private void (    );
    private void ();
    private bool (NoteType ,     );
    private CharacterFormat (    , CharacterFormat );
    private void (    );
    private static FormFieldData  (    );
    private static FormTextData  (    );
    private static FormCheckBoxData  (    );
    private static FormDropDownData  (    );
    private void (    , Func`2<   , Inline> , CharacterFormat );
    private Inline (    , bool );
    private string  (    );
    private string  (    );
    private void  (    );
    private void  (    );
    private void  (    );
    private static int (Table );
    private static bool (Table , Table );
    private void (    ,     , TableRowCollection );
    private void (    ,     , TableRowCollection , bool );
    private void (    ,     , TableRowCollection , bool );
    private void (    , TableRow& , ​  ,     , TableRowCollection );
    private void (    ,     , TableCellCollection );
    private void (    ,     , TableCellCollection , bool );
    private void (    ,     , TableCellCollection );
    private void (    , TableCell& ,     , TableCellCollection );
    private void (TableCell );
    public sealed virtual Picture  ​ ​ (string );
    public sealed virtual TextBox  ​ ​ (    );
    public sealed virtual      ​ ​ (string );
    private Inline  (    );
    private Inline  (    );
    private Inline  (    );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual object   ​ ();
    public abstract virtual    ​ ();
    public abstract virtual Stream   ​ ();
    public abstract virtual double   ​ ();
    public abstract virtual double   ​ ();
    public abstract virtual double   ​ ();
}
internal class    : Exception {
    [NullableContextAttribute("1")]
internal   (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    internal   (   );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private  ;
    private    ;
    private    ;
    public   ( ,    ,    );
    public  ();
    private void ( );
    public    ();
    private void (   );
    public    ();
    private void (   );
    public virtual    ​ ();
    internal virtual void   ​ (StringBuilder , bool , bool ,    );
    public virtual object   ​ (   );
    public    (   );
    public static object (   ,    ,  ,    );
    private static object (   ,    ,    );
    private static object (   ,    ,    );
    public virtual      ​ (   );
    [IteratorStateMachineAttribute("  /")]
public virtual IEnumerable`1<  >   ​ ();
    private bool (   );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    internal    ;
    internal int ;
    internal int ;
    public   (   );
    public int ();
    public virtual bool   ​ ();
    internal void ();
    internal void (Byte[] , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static void (   );
    public static object (IList`1<  > ,    );
    public static object (IList`1<  > ,    );
    public static object (IList`1<  > ,    );
    public static object (IList`1<  > ,    );
    public static object (IList`1<  > ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private  ;
    private int ;
    private int ;
    private [] ;
    private [] ;
    private Int64[][] ;
    private Int64[][] ;
    private bool  ;
    private     ;
    private int  ;
    private UInt32  ;
    private UInt32  ;
    private Char[]  ;
    public   (   );
    public virtual void   ​ (bool );
    private bool (  [][] );
    private void ();
    private bool (  [][] );
    private void ();
    private bool ( , Int16[] , int ,  ,  );
    private void (Int16[] , int , Int64[] , Int64[] );
    private bool (int );
    private void (int );
    private bool ();
    private bool ();
    private bool ( , int , int );
    private void (int , int );
    private bool ( );
    private void ();
    private void (int , int );
    private void (int , int );
    private void (UInt32 , UInt32 );
    private void ();
    private bool ( , int );
    private void (int );
    private static int (int , int );
    private bool (  [][] );
    private bool (  [][] );
    private bool (  [][] );
    private bool (  [][] );
    private void (bool , int , & );
    protected void (   , Int64[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static void (   ,     ,    );
    private static     (    , double );
    private static     ( , double );
    private static     (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
public    ;
    [DebuggerBrowsableAttribute("0")]
public bool ;
    [DebuggerBrowsableAttribute("0")]
public bool ;
    [DebuggerBrowsableAttribute("0")]
public bool ;
    [DebuggerBrowsableAttribute("0")]
public bool ;
    [DebuggerBrowsableAttribute("0")]
public bool ;
    [DebuggerBrowsableAttribute("0")]
public bool ;
    [DebuggerBrowsableAttribute("0")]
public double  ;
    [DebuggerBrowsableAttribute("0")]
public double  ;
    [DebuggerBrowsableAttribute("0")]
public double  ;
    [DebuggerBrowsableAttribute("0")]
public     ;
    public   (   ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static    ;
    private static   ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : object {
    [DebuggerBrowsableAttribute("0")]
private static Object[] ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private IEnumerator ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    public string Name { get; }
    private  ​ (string , IEnumerator );
    private static  ​ ();
    public IEnumerator ();
    public static IMailMergeDataSource (object );
    private static string (object );
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    public sealed virtual bool MoveNext();
    public sealed virtual bool TryGetValue(string , Object& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :  ​ {
    private    ;
    private    ;
    private    ;
    private bool ;
    [CompilerGeneratedAttribute]
public sealed virtual     ​​ ();
    public    ();
    public void (   );
    public    ();
    public void (   );
    public double (double );
    public double ();
    public double ();
    public double ();
    public double ();
    public bool ();
    public void (bool );
    public virtual ​​  ​​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    protected internal   ( );
    public static    ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public List`1<  > ;
    public List`1<  > ;
    public List`1<  > ;
    protected static int ;
    protected static int ;
    protected static int ;
    protected static int ;
    protected static int  ;
    protected static int  ;
    protected static int  ;
    protected static int  ;
    private string  ;
    protected     ;
    public   (   , string );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public    ();
    public    ();
    public    ();
    public    ();
    public    ();
    public    ();
    public    ();
    public     ();
    public     ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static int (Byte[] , int , Byte[] , int , int );
    public static Byte[] (Byte[] );
    public static Byte[] (Byte[] , int );
    public static Byte[] (Byte[] , int );
    public static Byte[] (UInt32 );
    public static Byte[] (int );
    public static int (Byte[] , int );
    public static bool (Byte[] , int , Byte[] , int , int );
    public static bool (Byte[] , Byte[] );
    public static int (Byte[] , int , int );
    internal static int (Byte[] , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private bool ;
    public    ;
    private    ;
    private    ;
    private Int32[][] ;
    private Int32[] ;
    private bool ;
    private Int32[]  ;
    private Int32[][]  ;
    private Int32[]  ;
    private Int32[]  ;
    private int  ;
    private double  ;
    private int  ;
    private int  ;
    private Int32[][]  ;
    private List`1<int>  ;
    private bool  ;
    private int  ;
    private Int32[]  ;
    private int  ;
    private Int32[]  ;
    private int  ;
    private Int32[][]  ;
    private bool  ;
    private     ;
    private   [][][][][]  ;
    private int  ;
    private bool  ;
    public   (   ,    ,    ,    , bool ,    );
    public virtual   [][][][][]   ​ ();
    public virtual int   ​ (int );
    private void ();
    private int ();
    private bool (Int32[][] , int , int , int , int , int );
    private bool (Int32[][] , int , int , int , int , int );
    private bool (Int32[][] , int , int , int , int , int );
    private bool (Int32[][] , int , int , int , int , int );
    private bool (Int32[][] , int , int , int , int , int );
    private void (int );
    public virtual void   ​ (int , int );
    public virtual void   ​  ();
    public virtual      ​ (int , int , int ,    , int , int ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static string (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public virtual void   ​ (int );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class    : object {
    public   ;
    public    ;
    public    ;
    public  ;
    public   (  ,  ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :   <  > {
    [DebuggerBrowsableAttribute("0")]
private   ;
    public   (   );
    private static  (int );
    protected virtual void   ​ (   ,    ,  ​ ,     , bool );
    protected virtual void   ​ (    ,    ,    );
}
[ExtensionAttribute]
internal static class    : object {
    [ExtensionAttribute]
public static Stream (TEnum );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  :  ​  {
    private string ;
    public  ​ (string );
    public virtual   ​ ​ ();
    public string ();
    public void (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private  ​ ;
    [DebuggerBrowsableAttribute("0")]
private   <double> ;
    [DebuggerBrowsableAttribute("0")]
private   <double> ;
    [DebuggerBrowsableAttribute("0")]
private   <double> ;
    [DebuggerBrowsableAttribute("0")]
private   <double> ;
    [DebuggerBrowsableAttribute("0")]
private   <double> ;
    [DebuggerBrowsableAttribute("0")]
private   <double> ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    private     ;
    private int  ;
    private ReadOnlyCollection`1<  >  ;
    private     ;
    private     ;
    private double  ;
    private   (   , int );
    public    ();
    private void (   );
    public int ();
    private void (int );
    public ReadOnlyCollection`1<  > ();
    private void (ReadOnlyCollection`1<  > );
    public    ();
    public void (   );
    public    ();
    public void (   );
    public  ​ ();
    public void ( ​ );
    public bool  ();
    public void (bool );
    public double  ();
    public double  ();
    public double  ();
    public double  ();
    public double  ();
    public double  ();
    public double  ();
    public void (double );
    public  ​ ( , Nullable`1<bool> );
    private double ( );
    private double ( );
    private double  ();
    private static double (   );
    private static double (   );
    private static bool (​  );
    private double  ();
    internal static    (   , int );
    internal static void (   );
    internal static void (   );
    public bool  ();
    public bool  ();
    public     ();
    public     ();
    private bool  ();
    private double  ();
    private    (int );
    private int ();
    private double  ();
    private bool  ();
    private double  ();
    private bool  ();
    private double  ();
    private bool  ();
    private double  ();
    private bool  ();
    private bool  ();
    private bool  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public static int ;
    public byte ;
    public byte ;
    private byte ;
    private byte ;
    public   (byte , byte , byte , byte );
    private static   ();
    public virtual void   ​ (Stream );
    public virtual string ToString();
}
internal class    : Exception {
    [NullableContextAttribute("1")]
protected   (SerializationInfo , StreamingContext );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    private static HashSet`1<int> ;
    private static HashSet`1<int> ;
    private static HashSet`1<int> ;
    private static HashSet`1<int> ;
    private static HashSet`1<int> ;
    private static HashSet`1<int> ;
    private static HashSet`1<int> ;
    private static HashSet`1<int>  ;
    private static HashSet`1<int>  ;
    private static HashSet`1<int>  ;
    private static HashSet`1<int>  ;
    private static HashSet`1<int>  ;
    private static HashSet`1<int>  ;
    private static HashSet`1<int>  ;
    private static HashSet`1<int>  ;
    private static HashSet`1<int>  ;
    private static HashSet`1<int>  ;
    private static HashSet`1<int>  ;
    private static HashSet`1<int>  ;
    private static HashSet`1<int>  ;
    private static HashSet`1<int>  ;
    private static HashSet`1<int>  ;
    private static HashSet`1<int>  ;
    private static IDictionary`2<string, HashSet`1<int>>  ;
    private static IDictionary`2<HashSet`1<int>, >  ;
    private static HashSet`1<int>  ;
    private static HashSet`1<int>  ;
    private static Dictionary`2<int, int>  ;
    private static   ();
    public static bool (string , int );
    public static bool (int );
    public static bool (string , int );
    public static bool (string , int );
    public static bool (string , int );
    public static bool (string , int );
    public static  (string , int );
    private static int (string , int );
    public static bool (StringBuilder , int );
    public static bool (StringBuilder , int );
    public static bool (StringBuilder , int );
    public static bool (StringBuilder , int );
    public static  (StringBuilder , int );
    private static int (StringBuilder , int );
    public static bool (char );
    public static bool (char );
    public static char (char );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private Stream ;
    private int ;
    private int ;
    private int ;
    private Int32[] ;
    private bool ;
    private int  ;
    public   (Stream , int , int , int , Int32[] , int );
    public virtual int   ​ ();
    public virtual void   ​ ();
    public virtual void   ​ ();
    public virtual void   ​ ();
    public virtual void   ​ ();
    public virtual void   ​ ();
    public virtual void   ​ (Byte[] );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual void   ​ (Pen );
    public abstract virtual double   ​ ();
    public abstract virtual Color   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private int ;
    private int ;
    private int ;
    private int ;
    private   [] ;
    private   [][] ;
    public   (   ,   [] );
    public virtual void   ​ ( );
    public virtual bool   ​ (Byte[][][] );
    private void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    [IteratorStateMachineAttribute("  /")]
public static IEnumerable`1<P> (P , int );
    private static IEnumerable`1<P> (IEnumerable`1<P> , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : ​  {
    private  ;
    public   ( );
    public virtual void ​ ​ ();
    public virtual bool ​ ​ ();
    public virtual void ​ ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private OcspResp ;
    private BasicOcspResp ;
    internal   (Byte[] );
    public virtual bool   ​ ();
    public virtual Byte[]   ​ ();
    public virtual IList`1<Byte[]>   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : object {
    private string ;
    private string ;
    private string ;
    private bool ;
    public  ​ (string , string , string , bool );
    public string ();
    private void (string );
    public string ();
    private void (string );
    public string ();
    private void (string );
    public bool ();
    private void (bool );
    public string (string );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class ​   : object {
    private static Dictionary`2<string,    > ;
    private static ​  ();
    private static void (    );
    internal static bool (string );
    internal static     (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   : object {
    public static     ();
    public static     ();
    public static ​   ();
    internal abstract virtual void ​  ​ (    , Stream , string );
    internal static ​   (    , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class ​   : ValueType {
    [DebuggerBrowsableAttribute("0")]
internal UInt32 ;
    [DebuggerBrowsableAttribute("0")]
internal ushort ;
    [DebuggerBrowsableAttribute("0")]
internal ushort ;
    [DebuggerBrowsableAttribute("0")]
internal UInt32 ;
    [DebuggerBrowsableAttribute("0")]
internal IList`1<UInt32> ;
    [DebuggerBrowsableAttribute("0")]
internal UInt32 ;
    [DebuggerBrowsableAttribute("0")]
internal UInt32 ;
    [DebuggerBrowsableAttribute("0")]
internal UInt32  ;
    private ​  (UInt32 , ushort , ushort , UInt32 , UInt32[] , UInt32 , UInt32 , UInt32  );
    internal ​  (UInt32[] , UInt32 , UInt32 , UInt32 );
    internal static ​   (UInt32 , ushort , ushort , UInt32 , ​​  );
    internal void (​​  );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : object {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    internal ​  (​   );
    public ​   ();
    private void (​   );
    internal ​   ();
    internal bool ();
    internal void (​   );
    public ​   ();
    internal bool ();
    internal void (​   );
    public     ();
    internal void (    );
    internal   ();
    internal ​    ();
    internal void (​   );
    internal void ( , ​   );
    internal bool ();
    public void (bool );
    public virtual string ToString();
    private sealed virtual override void ​  ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public static ​   ( ,     , double );
    public static ​   (    , bool , double ,  );
    protected     ();
    protected     ();
    public abstract virtual  ​  ​ ();
    public abstract virtual     ​  ​ (    , int , double );
    public sealed virtual     ​  ​ (    , int , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<string, > ;
    [DebuggerBrowsableAttribute("0")]
private static    ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal string DebuggerDisplayValue { get; }
    private static ​  ();
    public static ​   ();
    internal abstract virtual    ​  ​ ();
    public sealed virtual  ​  ​ ();
    public static ​   (string );
    internal static ​   (Byte[] );
    internal static ​   (   );
    internal static ​   (   );
    internal static ​   (string );
    internal virtual bool ​  ​ ();
    internal sealed virtual string get_DebuggerDisplayValue();
    private protected abstract virtual ​   ​  ​ (int , int );
    internal ​   (int , int );
    internal ​   (int );
    internal static void (   );
    public sealed virtual bool Equals(object );
    public sealed virtual bool Equals(​   );
    public virtual int GetHashCode();
    public sealed virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
internal Array ;
    internal static ​   ();
    public virtual UInt32 ​  ​ ();
    protected virtual bool ​  ​ ();
    [IteratorStateMachineAttribute("​  /")]
public virtual IEnumerable`1<UInt32> ​  ​ ();
    internal virtual void ​  ​ (​​  , UInt32 );
    internal virtual UInt32 ​  ​ (​​  , Nullable`1& );
    internal virtual ​   ​  ​ (ICollection`1<ushort> );
    internal virtual void ​  ​ (​   , ICollection`1<ushort> );
    internal Array (ICollection`1<int> );
    private static void (int , UInt16[] , UInt16[] ,  );
    private static void (int , UInt32[] , UInt32[] ,  );
    private static UInt16[] (UInt16[] , UInt16[] );
    private static Array (UInt32[] , UInt32[] );
}
[DefaultMemberAttribute(" ")]
[DebuggerTypeProxyAttribute("GemBox.Pdf.Objects.PdfArrayDebugView")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​  [] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public int Count { get; }
    public ​   Item { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal ​     { get; internal set; }
    private ​  (int );
    private ​  (int , ​   );
    private static ​  ();
    private static ​   ();
    public static ​   ();
    public static ​   (int );
    public static ​   (IEnumerable`1<T> );
    public static ​   (T[] );
    private Nullable`1<> ();
    public virtual  ​  ​ ();
    public sealed virtual int get_Count();
    internal void (int );
    private protected virtual int ​  ​ ();
    internal int ();
    internal void (int );
    public sealed virtual ​   get_Item(int );
    public sealed virtual void set_Item(int , ​   );
    private void (int , ​   );
    private protected virtual IEnumerator`1<​  > ​  ​ (bool );
    public ​   (Func`2<​  , ​  > );
    public ​   (bool );
    private protected virtual ​   ​  ​ (Func`2<​  , ​  > );
    private protected virtual void ​  ​ (​   );
    private void (int );
    public sealed virtual void Insert(int , ​   );
    public sealed virtual void Add(​   );
    public sealed virtual void RemoveAt(int );
    public sealed virtual bool Remove(​   );
    public sealed virtual void Clear();
    public sealed virtual int IndexOf(​   );
    public sealed virtual bool Contains(​   );
    public sealed virtual void CopyTo(​  [] , int );
    private protected virtual void ​  ​ (Array , int );
    public  ();
    private protected virtual IEnumerator ​  ​ ();
    public virtual string ToString();
    internal void ();
    internal void (int , IEnumerable`1<T> );
    internal void (IEnumerable`1<T> );
    internal void (int , int );
    internal void (int , ​   , ​   );
    internal ​   (int , ​   );
    internal void (int , ​   , ​   );
    internal virtual ​   ​  ​ (​   );
    internal void (int , ​   );
    private void ();
    internal void (int , ​   , ​   );
    private void (int , ​   , ​   );
    private protected virtual int ​  ​ (Predicate`1<​  > );
    internal virtual int ​  ​ (Func`2<​  , ​  > , bool );
    [NullableContextAttribute("0")]
internal T ( );
    [NullableContextAttribute("0")]
internal T ( );
    private sealed virtual override bool ​  ​  ();
    private sealed virtual override object ​  ​ (int );
    private sealed virtual override void ​  ​ (int , object );
    private sealed virtual override IEnumerator`1<​  > ​  ​  ();
    private sealed virtual override void ​  ​ (int , object );
    private sealed virtual override int ​  ​ (object );
    private sealed virtual override void ​  ​ (object );
    private sealed virtual override int ​  ​ (object );
    private sealed virtual override bool ​  ​ (object );
}
[DefaultMemberAttribute(" ")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private ushort ;
    [DebuggerBrowsableAttribute("0")]
private IList`1< > ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private static  [] ;
    [DebuggerBrowsableAttribute("0")]
private     { get; }
    internal ​  (int , IEnumerable`1<KeyValuePair`2<int, int>> );
    private static ​  ();
    public static ​   ();
    internal static ​   ();
    public virtual UInt32 ​  ​ ();
    protected virtual bool ​  ​ ();
    [NullableContextAttribute("2")]
private static SortedDictionary`2<UInt32, ushort> (int , IEnumerable`1<KeyValuePair`2<int, int>> , Boolean& );
    private   ();
    private    ();
    internal    ();
    public bool ();
    internal bool ();
    public ​    ();
    internal ushort  ();
    internal int  ();
    private   (int );
    private bool (  ,  & );
    internal virtual void ​  ​ (​​  , UInt32 );
    internal virtual UInt32 ​  ​ (​​  , Nullable`1& );
    internal UInt32 (Action`1<List`1< >> , Stream , ​​  , Nullable`1& );
    private UInt32 ([] , Stream , ​​  , Nullable`1& );
    internal virtual ​   ​  ​ (ICollection`1<ushort> );
    internal virtual void ​  ​ (​   , ICollection`1<ushort> );
    private static void (List`1<> );
    private static bool (List`1<> ,   , ushort , Int32& );
    private sealed virtual override bool ​  ​ ();
    private sealed virtual override int ​  ​  ();
    private sealed virtual override void ​  ​ (  );
    private sealed virtual override bool ​  ​ (  );
    private sealed virtual override void ​  ​ ();
    private sealed virtual override bool ​  ​ (  );
    private sealed virtual override void ​  ​ ( [] , int );
    [IteratorStateMachineAttribute("​  /")]
private sealed virtual override IEnumerator`1< > ​  ​  ();
    [IteratorStateMachineAttribute("​  /")]
private sealed virtual override IEnumerator ​  ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    internal ​  ( , ​   , ​   , Stream , ​   );
    public Stream (long );
    internal static Stream (Stream , long , long , long );
    public void (Byte[] );
    public void (Byte[] , long );
    protected virtual void    ​ ( );
    private void ();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class ​   : object {
    [DebuggerBrowsableAttribute("0")]
private static UInt32[] ;
    [DebuggerBrowsableAttribute("0")]
private static UInt32[] ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static KeyValuePair`2[] ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static KeyValuePair`2[] ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static KeyValuePair`2[] ;
    private static ​  ();
    [ExtensionAttribute]
internal static IEnumerable`1<UInt32> ( );
    [ExtensionAttribute]
internal static IEnumerable`1<KeyValuePair`2<UInt32, bool>> ( , bool );
    [ExtensionAttribute]
internal static  ( );
    internal static ushort (int );
    internal static ushort (UInt32 );
    internal static int (UInt32 );
    internal static int (long );
    internal static UInt32 (long );
    internal static string (UInt32 );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ValueType {
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    public ​  (​   , ​   );
    public ​  (string , ​   );
    [IsReadOnlyAttribute]
public ​   ();
    [IsReadOnlyAttribute]
public ​   ();
    public virtual string ToString();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class ​   : object {
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<string, Version> ;
    private static ​  ();
    private static NameTable ();
    [ExtensionAttribute]
public static bool (XmlReader , Version& );
    public static XmlReader (Stream );
    public static XmlWriter (Stream );
    [ExtensionAttribute]
public static bool (XmlReader );
    [ExtensionAttribute]
public static bool (XmlReader );
    [ExtensionAttribute]
public static string (XmlReader );
    [ExtensionAttribute]
public static void (XmlWriter , string , string , string );
    [ExtensionAttribute]
public static double (XmlReader );
    [ExtensionAttribute]
public static void (XmlWriter , string , string , double );
    [ExtensionAttribute]
public static     (XmlReader );
    [ExtensionAttribute]
public static void (XmlWriter , string , string ,     );
    [ExtensionAttribute]
public static void (XmlReader );
    [ExtensionAttribute]
public static void (XmlReader );
    [ExtensionAttribute]
public static FormatException  (XmlReader );
    [ExtensionAttribute]
public static FormatException  (XmlReader );
    [ExtensionAttribute]
public static FormatException (XmlReader , string );
    [ExtensionAttribute]
public static FormatException (XmlReader , string );
    [ExtensionAttribute]
public static FormatException (XmlReader , string );
    [ExtensionAttribute]
public static FormatException (XmlReader , string , Exception );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   :     {
    internal ​  (    , ​   );
    protected virtual     ​ ();
    protected virtual void    ​ ();
    protected virtual void    ​ ();
    protected virtual        ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   : object {
    internal static ​   ();
    internal abstract virtual IEnumerable`1<​  > ​  ​ ();
    internal virtual     ​  ​ (    );
    internal virtual     ​  ​ (    );
    private static     (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : EventArgs {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
internal Nullable`1<int> ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private Stream ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private char  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    internal ​  (string , Stream , long , int , int , int , string , int  );
    public string ();
    public string ();
    public Stream ();
    public long ();
    public int ();
    public int ();
    public char  ();
    public string ();
    public char  ();
    public void (char );
    public bool  ();
    internal ​    ();
}
internal class ​   : ​   {
    [NullableContextAttribute("1")]
internal static ​   ();
    public virtual UInt32 ​  ​ ();
    protected virtual bool ​  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private static Regex ;
    [DebuggerBrowsableAttribute("0")]
private static Regex ;
    [DebuggerBrowsableAttribute("0")]
private static Regex ;
    [DebuggerBrowsableAttribute("0")]
private static Regex ;
    [DebuggerBrowsableAttribute("0")]
private static Regex ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private ​    ;
    internal ​  (Stream , ​   );
    private static ​  ();
    public ​   ();
    internal  (​   );
    internal  ();
    internal  (​  [] );
    internal  ();
    private  (​   );
    protected virtual ​      ​ ( , ​   );
    protected virtual ​      ​ ( );
    private long (​   );
    internal     (long , long , ​   , ​   );
    internal bool (​   , ​   );
    protected virtual       ​ (   );
    private long ();
    private void (long );
    internal void (long , ​   );
    internal void (long , ​   , bool );
    private void (​   , bool );
    private ​   (​   , bool , bool );
    internal ​   (long );
    internal ​   ();
    internal ​    ();
    private ​    ();
    internal ​   (long );
    private ​   (bool );
    private int  ();
    private void  ();
    private   ();
    private bool (bool );
    internal   ();
    internal ​   (Regex );
    internal ​    ();
    internal Nullable`1<long>  ();
    internal long ();
    internal long ();
    private Match (Regex , long , SeekOrigin , int , long , int , Int64& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    private double ;
    private double ;
    private     ;
    private IList`1<   > ;
    public double ();
    public void (double );
    public double ();
    public void (double );
    public     ();
    private void (    );
    public IList`1<   > ();
    public void ();
    public void ();
    public void ();
    public abstract virtual void   ​ (   );
    public abstract virtual void   ​ (double );
    public abstract virtual void   ​ (double );
    public abstract virtual void   ​ (double );
    public abstract virtual void   ​ (double );
}
internal class    :    {
    [NullableContextAttribute("1")]
public   (   , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (   );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
internal class    :   <> {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static   <> ;
    public   (IEnumerable`1<> );
    private static   ();
    private static   <> ();
    public sealed virtual bool Equals(  <> );
    protected virtual bool   ​  (IList`1<> , IList`1<> );
    protected virtual void   ​  (   & , IList`1<> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public    ;
    public    ;
    public    ;
    public    ;
    public    ;
    public    ;
    public    ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public int  ;
    public int  ;
    public   (int , int ,    ,    );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual DocumentModel   ​ ();
    public abstract virtual ElementCollection   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public static Int32[] ;
    public static Int32[] ;
    public static Int32[] ;
    public static Int32[] ;
    public static Int32[] ;
    public static Int32[] ;
    public static Int32[] ;
    public static Int32[]  ;
    private static   ();
    public static int (int , int );
    public static long (long , long );
    public static int (int , int );
    public static void (   , int , Byte[][] , int , int , int );
    public static void (   , int ,    , int , int , int );
    public static void (Byte[][] , int , Byte[][] , int , int , int );
}
[DebuggerTypeProxyAttribute("External.Fixed.Content.GroupDrawingDebugView")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    public    ();
    public virtual    ​ ();
    [IteratorStateMachineAttribute("  /")]
public IEnumerable`1<  > ();
    public sealed virtual string   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    public   (   );
    public virtual      ​ ();
    public virtual void   ​ (   );
    public virtual double   ​ ();
    public virtual ​    ​ (​  );
    public virtual double   ​ ( );
    public virtual double   ​ ( );
    public static void (    ,    , double , double , double , ​​ );
    private static void (    ,    , double , double , ​​ );
    private static void (    ,    , double , double ,  ​ );
    private static double (   ,  );
    private static double (   ,  ,  );
    private static void (    ,    ,     );
    private static void (    ,    ,     ,     );
    public virtual ​​  ​​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public   (   , Stream , bool );
    private   (DeflateStream );
    public virtual void Write(Byte[] , int , int );
    public virtual void WriteByte(byte );
    protected virtual void Dispose(bool );
    private static DeflateStream (   , Stream );
    private static DeflateStream (   , Stream );
}
[NullableContextAttribute("1")]
internal interface  ​  {
    public abstract virtual bool  ​ ​ (string , int , & );
}
internal class    : object {
    private  ;
    private  ;
    private    ;
    private Nullable`1<  > ;
    private bool ;
    private bool ;
    private bool ;
    private bool  ;
    private bool  ;
    private bool  ;
    private bool  ;
    private bool  ;
    private bool  ;
    private int  ;
    private double  ;
    private bool  ;
    public  ();
    public void ( );
    public  ();
    public void ( );
    public    ();
    public void (   );
    public Nullable`1<  > ();
    public void (Nullable`1<  > );
    public    ();
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void  (bool );
    public bool  ();
    public void  (bool );
    public int  ();
    public void (int );
    public double  ();
    public void (double );
    public bool  ();
    public void  (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private   (   );
    public virtual int   ​ ();
    public static    (   );
    public virtual string ToString();
}
internal abstract class    : object {
    [NullableAttribute("1")]
protected    ;
    private ushort ;
    private ushort ;
    private ushort ;
    private ushort ;
    private UInt32 ;
    private UInt32 ;
    private UInt32  ;
    private UInt32  ;
    private UInt32  ;
    private UInt32  ;
    private UInt32  ;
    private UInt32  ;
    public ushort ();
    public void (ushort );
    public ushort ();
    public ushort ();
    public void (ushort );
    public ushort ();
    public UInt32 ();
    public void (UInt32 );
    public UInt32 ();
    public void (UInt32 );
    public UInt32 ();
    public void (UInt32 );
    public UInt32  ();
    public void (UInt32 );
    public UInt32  ();
    public void (UInt32 );
    public UInt32  ();
    public void (UInt32 );
    public UInt32  ();
    public void (UInt32 );
    public UInt32  ();
    public void  (UInt32 );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private ReadOnlyCollection`1<ReadOnlyCollection`1<  >> ;
    public   (IList`1<IList`1<  >> );
    public ReadOnlyCollection`1<ReadOnlyCollection`1<  >> ();
    private void (ReadOnlyCollection`1<ReadOnlyCollection`1<  >> );
    public virtual    ​ ();
    internal virtual void   ​ (StringBuilder , bool , bool ,    );
    public virtual object   ​ (   );
    public virtual object   ​ (   );
    public virtual      ​  (   );
    public virtual      ​ (   );
    public virtual IEnumerable`1<  >   ​ ();
    protected bool (   );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    private    ;
    private    ;
    private int ;
    private bool ;
    private bool ;
    private static Int32[] ;
    private static Int32[]  ;
    private static Int32[]  ;
    private static Int32[]  ;
    private static Int32[]  ;
    private static Int32[]  ;
    private Int32[]  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private     ;
    private int  ;
    public   (   ,    , bool , bool , int );
    private static   ();
    public virtual      ​ (int , int , int ,    ,    );
    public virtual      ​ (int , int , int ,    ,    );
    private bool (   ,    , int , Int32[] , Int32[] , bool );
    private bool (   ,    , int , Int32[] , bool );
    private bool (   ,    , int , Int32[] , bool );
    private bool (   ,    , int , Int32[] , bool );
    private bool (   ,    , int , Int32[] , Int32[] , bool );
    private void (   , int );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual      ​ ();
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual void   ​ (bool );
    public abstract virtual void   ​ (Byte[][] , int , Byte[][] , int , int );
    public abstract virtual void   ​ ();
    public abstract virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class    :   <> {
    private     ;
    protected     ();
    protected void (    );
    protected abstract virtual IEnumerable`1<​ >   ​ ();
    public     (    );
    private bool ();
    private bool ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public virtual bool   ​ ( ,  ,   [] );
    public virtual   []   ​ ( ,  );
    public virtual void   ​ ( , Stream ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    public static    ;
    public static    ;
    internal static   [] ;
    public static    ;
    private static   ();
    public abstract virtual string   ​ ();
    public abstract virtual string   ​ ();
    protected abstract virtual   <  >   ​ (   );
    protected abstract virtual   <  >   ​ (   );
    protected abstract virtual   <  []>   ​ (Byte[] );
    protected abstract virtual   <​ >   ​ (Byte[] );
    protected abstract virtual   <  >   ​ (Byte[] );
    [NullableContextAttribute("0")]
protected abstract virtual   <int>   ​ (   );
    protected abstract virtual   <Byte[]>   ​ (   , string , bool );
    protected abstract virtual   <Byte[]>   ​ (   , Stream , bool );
    protected abstract virtual   <bool>   ​ (Byte[] , Stream );
    protected abstract virtual   <Byte[]>   ​ (Byte[] , ICollection`1<  > );
    protected abstract virtual   <  >   ​ (Byte[] , bool );
    [NullableContextAttribute("0")]
protected abstract virtual   <  >   ​ (Byte[] );
    protected abstract virtual   <X509Certificate2>   ​ (CspParameters );
    protected abstract virtual   <Byte[]>   ​ (string , Byte[] );
    protected abstract virtual   <Byte[]>   ​ (Byte[] , Byte[] ,  );
    protected abstract virtual   <object>   ​ (Byte[] , Type );
    protected abstract virtual   <Byte[]>   ​ (object , bool );
    protected abstract virtual   <Byte[]>   ​ (   , Byte[] , string , string , Byte[] , bool , X509ExtensionCollection );
    protected abstract virtual   <Byte[]>   ​ (   , string ,    ,    , string );
    protected abstract virtual   <string>   ​ (   , string );
    protected abstract virtual   <Byte[]>   ​ (Byte[] ,    , string , object );
    protected abstract virtual   <bool>   ​ (Byte[] , Byte[] ,    , string , object );
    protected abstract virtual   <Byte[]>   ​ (string , object ,    , DateTimeOffset , DateTimeOffset , Byte[] , X509ExtensionCollection , string  , object  );
    protected abstract virtual   <object>   ​ (Byte[] , Byte[] );
    public virtual      ​ (   );
    public virtual      ​ (   );
    public virtual   []   ​ (Byte[] );
    public virtual ​    ​ (Byte[] );
    public virtual      ​ (Byte[] );
    public virtual int   ​ (   );
    public virtual Byte[]   ​ (   , string , bool );
    public virtual Byte[]   ​ (   , Stream , bool );
    public virtual bool   ​ (Byte[] , Stream );
    public virtual Byte[]   ​ (Byte[] , ICollection`1<  > );
    public virtual      ​ (Byte[] , bool );
    public virtual      ​  (Byte[] );
    public virtual X509Certificate2   ​ (CspParameters );
    public virtual Byte[]   ​ (string , Byte[] );
    public virtual Byte[]   ​ (Byte[] , Byte[] ,  );
    public virtual object   ​ (Byte[] , Type );
    public virtual Byte[]   ​ (object , bool );
    public virtual Byte[]   ​ (   , Byte[] , string , string , Byte[] , bool , X509ExtensionCollection );
    public virtual Byte[]   ​ (   , string ,    ,    , string );
    public virtual string   ​ (   , string );
    public virtual Byte[]   ​ (Byte[] ,    , string , object );
    public virtual bool   ​ (Byte[] , Byte[] ,    , string , object );
    public virtual Byte[]   ​ (string , object ,    , DateTimeOffset , DateTimeOffset , Byte[] , X509ExtensionCollection , string  , object  );
    public virtual object   ​ (Byte[] , Byte[] );
    private T (  <T> );
    public sealed virtual string ToString();
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class  ​  : object {
    private protected     ;
    public Stream  { get; }
    protected  ​ (    );
    public Stream (   );
    protected abstract virtual Stream  ​ ​ (   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :  ​ {
    private double ;
    private double ;
    private double ;
    private double ;
    internal   (double , double , double , double );
    internal   (   );
    [NullableContextAttribute("2")]
internal virtual     ​​ (double , double );
    [CompilerGeneratedAttribute]
internal virtual double  ​​ ();
    [CompilerGeneratedAttribute]
internal virtual void  ​​ (double );
    [CompilerGeneratedAttribute]
internal virtual double  ​​ ();
    [CompilerGeneratedAttribute]
internal virtual void  ​​ (double );
    [CompilerGeneratedAttribute]
internal virtual double  ​​ ();
    [CompilerGeneratedAttribute]
internal virtual void  ​​ (double );
    [CompilerGeneratedAttribute]
internal virtual double  ​​ ();
    [CompilerGeneratedAttribute]
internal virtual void  ​​ (double );
    internal virtual  ​  ​​ ( ​ );
    internal virtual  ​  ​​ (double );
    internal static    (    );
}
internal class    :    {
    public   (int , int , byte );
    [NullableContextAttribute("1")]
public   (int , int , byte , string , String[] ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    internal   (   );
    internal    ();
    internal virtual void   ​ ();
}
[DefaultMemberAttribute("Item")]
[DebuggerTypeProxyAttribute("GemBox.Collections.CollectionDebugView`1")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private List`1<> ;
    [DebuggerBrowsableAttribute("0")]
private IComparer`1<> ;
    public  Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public bool IsFixedSize { get; }
    public object SyncRoot { get; }
    public bool IsSynchronized { get; }
    public   (int );
    public   (IComparer`1<> );
    public   (int , IComparer`1<> );
    public sealed virtual int IndexOf( );
    public sealed virtual void Insert(int ,  );
    public sealed virtual void RemoveAt(int );
    public sealed virtual  get_Item(int );
    public sealed virtual void set_Item(int ,  );
    public sealed virtual void Add( );
    public sealed virtual void Clear();
    public sealed virtual bool Contains( );
    public sealed virtual void CopyTo([] , int );
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual bool get_IsFixedSize();
    public sealed virtual object get_SyncRoot();
    public sealed virtual bool get_IsSynchronized();
    private sealed virtual override object   ​ (int );
    private sealed virtual override void   ​ (int , object );
    public sealed virtual bool Remove( );
    public sealed virtual IEnumerator`1<> GetEnumerator();
    private sealed virtual override IEnumerator   ​ ();
    public sealed virtual int Add(object );
    public sealed virtual bool Contains(object );
    public sealed virtual int IndexOf(object );
    public sealed virtual void Insert(int , object );
    public sealed virtual void Remove(object );
    public sealed virtual void CopyTo(Array , int );
}
internal class    :    {
    public   (int , int , byte );
    [NullableContextAttribute("1")]
public   (int , int , byte ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public static void (DocumentModel , Stream , XmlSaveOptions );
    private static void (Stream , Stream );
    private static void (    ,     );
    private static void (    ,     );
    private static DocxSaveOptions (XmlSaveOptions );
    private static string (    );
    private static string (string , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    internal long ;
    internal long ;
    internal int ;
    internal short ;
    internal short ;
    internal bool ;
    internal bool ;
    public   (   , int );
    private static   ();
    public virtual string ToString();
    internal void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    protected int ;
    protected Dictionary`2<string, int> ;
    public int (string );
    public abstract virtual void   ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public static long (long );
    public static ulong (ulong );
    public static float (float );
    public static double (double );
    public static int (int , int );
    public static int (int , long );
    public static long (long , int );
    public static long (long , long );
    public static int (Stream , Byte[] , int , int );
    public static int (TextReader , Byte[] , int , int );
    public static Byte[] (string );
    public static Char[] (Byte[] );
}
internal class    : object {
    [NullableAttribute("1")]
public static    ;
    private static   ();
    [NullableContextAttribute("1")]
public sealed virtual Byte[]   ​ (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  :    <   > {
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<,    <,    >> ;
    [DebuggerBrowsableAttribute("0")]
private MemoryStream ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<> ;
    public  ​ (Stream );
    private static  ​ ();
    public  ();
    public void ( );
    protected virtual IDictionary`2<,    <,    >>    ​ ();
    protected virtual int    ​ (    );
    public void (int , int ,     , double , double , Byte[] , bool , Nullable`1<>  ,    []  , Int32[]  , ArraySegment`1<byte>  , Stream  , IEnumerable`1<KeyValuePair`2<string, string>>  );
    [NullableContextAttribute("0")]
protected virtual void    ​ (    , ArraySegment`1<byte> ,     ,     ,  );
    private static  (    );
    public virtual void Dispose();
    private  (PngChunkType );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual       ​ ();
    public abstract virtual void   ​ (    );
    public abstract virtual       ​ ();
    public abstract virtual void   ​ (    );
    public abstract virtual double   ​ ();
    public abstract virtual double   ​ ();
    public abstract virtual bool   ​ ();
    public abstract virtual      ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : BinaryReader {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public   (Stream );
    public   (Stream , Encoding );
    public   (Stream , Encoding , bool );
    public   (Stream , bool );
    public virtual double ReadDouble();
    public virtual short ReadInt16();
    public virtual int ReadInt32();
    public virtual long ReadInt64();
    public virtual float ReadSingle();
    public virtual ushort ReadUInt16();
    public virtual UInt32 ReadUInt32();
    public virtual ulong ReadUInt64();
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual ICollection`1<  >   ​ ();
    public abstract virtual ICollection`1<  >   ​ ();
    public abstract virtual ICollection`1<string>   ​ ();
    public abstract virtual ICollection`1<string>   ​ ();
    public abstract virtual      ​ ();
    public abstract virtual void   ​ ();
    public abstract virtual      ​ (string );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    [ExtensionAttribute]
public static int (IEnumerable`1<TSource> , Func`2<TSource, bool> );
    [ExtensionAttribute]
public static void (IEnumerable`1<T> , Action`1<T> );
    [ExtensionAttribute]
public static double (IEnumerable`1<T> , Func`2<T, double> );
    [ExtensionAttribute]
public static double (IEnumerable`1<double> );
    [ExtensionAttribute]
public static Int32[] (IEnumerable`1<double> );
}
internal interface    {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private Field ;
    private List`1<Inline> ;
    private List`1<Inline> ;
    private List`1<Inline> ;
    private List`1<Inline> ;
    private List`1<Inline> ;
    private String[] ;
    private int  ;
    private string  ;
    private string  ;
    private Inline  ;
    internal string  ;
    internal     ;
    public   (Field );
    internal bool (List`1& , List`1& , List`1& , List`1& );
    private static void (String[] , string , List`1<Inline> , List`1<Inline> );
    internal IEnumerable`1<Inline> ();
    [IteratorStateMachineAttribute("  /")]
internal IEnumerable`1<Inline> ();
    private bool ();
    private static bool (string , string , Nullable`1& );
    private static bool (string , string , Nullable`1& );
    private static bool (string , string , Nullable`1& );
    private static int (string , string );
    private static string (IList`1<Inline> );
    private bool ();
    private List`1<Inline> ();
    private bool (List`1<Inline> );
    private bool (List`1<Inline> );
    internal string (bool );
    [IteratorStateMachineAttribute("  /")]
private static IEnumerable`1<Inline> (Field );
    private static string (bool );
}
internal class    : object {
    private  ;
    private int ;
    private int ;
    private bool ;
    private bool ;
    private  ;
    private  ;
    private bool  ;
    private bool  ;
    private bool  ;
    private bool  ;
    private int  ;
    private bool  ;
    private bool  ;
    private bool  ;
    private int  ;
    public int ();
    public void (int );
    public  ();
    public void ( );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public   ();
    public void ( );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public   ();
    public void ( );
    public bool  ();
    public void (bool );
    public int ();
    public void (int );
    public bool  ();
    public void (bool );
    public bool  ();
    public void  (bool );
    public bool  ();
    public void  (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :   <  > {
    [DebuggerBrowsableAttribute("0")]
private static [] ;
    [DebuggerBrowsableAttribute("0")]
private ​  ;
    private   <  > ;
    private   <  > ;
    private   <  > ;
    private  ;
    private double ;
    private static   ();
    public   <  > ();
    private void (  <  > );
    public   <  > ();
    private void (  <  > );
    public   <  > ();
    private void (  <  > );
    [CompilerGeneratedAttribute]
public sealed virtual  ​ ​ ();
    public void ( );
    public double ();
    public void (double );
    public virtual    ​ ();
    public double ();
    public ​  ();
    public sealed virtual void ​ ​ (    );
    public virtual void   ​ ();
    private static  (double , double , double , double );
}
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
public short ;
    [DebuggerBrowsableAttribute("0")]
public short ;
    [DebuggerBrowsableAttribute("0")]
public ulong ;
    [DebuggerBrowsableAttribute("0")]
public short ;
    [DebuggerBrowsableAttribute("0")]
public short ;
    public static int (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
public static    ;
    private String[] ;
    private String[] ;
    private   (String[] , String[] );
    private static   ();
    public static    (String[] , String[] );
    public String[] ();
    public String[] ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class  ​  : object {
    public static Byte[] (string );
    public static string (Byte[] );
    public static string (Byte[] , long , long );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :  ​ {
    private bool ;
    private string ;
    private    ;
    private    ;
    [NullableAttribute("2")]
private    ;
    private  ;
    [NullableAttribute("2")]
public      { get; public set; }
    public   (string , bool ,  ​ );
    public bool ();
    private void (bool );
    public string ();
    public void (string );
    public virtual string ToString();
    public static bool (string , int );
    public    ();
    public void (   );
    public    ();
    public void (   );
    [NullableContextAttribute("2")]
public    ();
    [NullableContextAttribute("2")]
public void (   );
    public  ();
    public void ( );
    public virtual   ​​ ( );
    public virtual void  ​​ ( ,     );
    public virtual double  ​​ ( );
    public virtual bool  ​​ (   );
    public    ();
    internal static bool (string , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    private int ;
    private int ;
    private Byte[] ;
    protected   (int , int , Byte[] );
    protected int ();
    protected int ();
    protected Byte[] ();
    public virtual T   ​ ();
    protected abstract virtual object   ​ ();
}
internal class    : Exception {
    [NullableContextAttribute("1")]
protected   (SerializationInfo , StreamingContext );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    [ExtensionAttribute]
[NullableContextAttribute("0")]
public static int (T[] , V& ,   <T, V> );
    [ExtensionAttribute]
[NullableContextAttribute("0")]
public static int (T[] , int , int , V& ,   <T, V> );
    [ExtensionAttribute]
internal static bool (T[] , TValue , Int32& );
    [ExtensionAttribute]
internal static bool (T[] , int , int , TValue , Int32& );
    [ExtensionAttribute]
internal static T[] (T[] );
    [ExtensionAttribute]
public static T[] (T[] , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    private    ;
    private int ;
    public   (   , int );
    public   (   );
    public virtual int   ​ (int );
    public virtual      ​ (   , int );
    public sealed virtual void   ​ ();
    public sealed virtual bool   ​ (int );
    public sealed virtual      ​ (   , int );
    private    (   , int , bool );
}
internal class    : object {
    private HorizontalPosition ;
    private VerticalPosition ;
    private   (HorizontalPosition , VerticalPosition );
    public HorizontalPosition ();
    public void (HorizontalPosition );
    public VerticalPosition ();
    public void (VerticalPosition );
    [NullableContextAttribute("1")]
internal    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :  {
    private static Int32[] ;
    private static Int32[] ;
    private static Byte[] ;
    private static Byte[] ;
    private static Byte[] ;
    private static Byte[] ;
    private static Byte[] ;
    private static Byte[]  ;
    private static Byte[]  ;
    private static Byte[]  ;
    internal ​   ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal   ;
    public int  ;
    public int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal   ;
    private   []  ;
    internal   []  ;
    public Int32[]  ;
    internal   []  ;
    internal   []  ;
    internal Byte[]  ;
    internal Byte[]  ;
    internal Byte[]  ;
    internal int  ;
    internal ​ []  ;
    internal bool  ;
    internal bool  ;
    internal bool  ;
    internal bool  ;
    public bool  ;
    internal int  ;
    internal   ;
    internal int  ;
    internal int  ;
    internal bool  ;
    internal byte  ;
    internal byte  ;
    internal   ;
    internal short  ;
    internal short  ;
    internal bool  ;
    public   ;
    internal int ​;
    internal bool ​;
    internal int ​;
    internal int ​;
    internal int ​;
    internal int ​;
    internal int ​;
    internal int  ;
    internal Int32[]  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal Int32[]  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    public int  ;
    internal Int32[]  ;
    internal int  ;
    internal   ;
    internal     ;
    internal     ;
    internal     ;
    internal ​   ;
    internal     ;
    internal   ;
    internal     ;
    internal     ;
    internal ​ []  ;
    internal int  ;
    public   (   );
    private static   ();
    public virtual bool ​ ();
    public ​   ();
    public void (​  );
    public int  ();
    public void (int );
    public int  ();
    public void (int );
    public int  ();
    public void (int );
    public   ();
    public void ( );
    public int  ();
    public void (int );
    public int  ();
    public void (int );
    public   ();
    public void ( );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public int  ();
    public void (int );
    public   ();
    public void ( );
    public int  ();
    public void (int );
    public int  ();
    public void  (int );
    public bool  ();
    public void (bool );
    public byte  ();
    public void (byte );
    public byte  ();
    public void (byte );
    public   ();
    public void ( );
    public short  ();
    public void (short );
    public short  ();
    public void (short );
    public bool  ();
    public void (bool );
    public int  ();
    public   []  ();
    public   []  ();
    public   []  ();
    public   []  ();
    public int  ();
    public void ();
    public void (bool );
    public void ();
    public void (int , Byte[] );
    public void (int , int );
    public void (byte );
    public void ();
    public void (Stream );
    public void ();
    public void ( );
    public void ();
    public void (int , bool );
    public void (bool );
    public void (int , bool );
    public void (int , Int32[] , int , bool );
    public static int  (int );
    public void ();
    public void  (bool );
    public int (Byte[][] , int );
    public int (Byte[][][] , int );
    public void (  [] );
    private void ();
    private void  ();
    private void  ();
    private void  ();
    private void  (bool );
    private void  (bool );
    private void (  [] );
    private void  (bool );
    private void  ();
    private void  ();
    private void  ();
    private void (  & , Byte[] , Byte[] );
    private void (Int32& , int , int , int , int , int );
    private void (Int32& , int , int , int );
    private void (Int32& , int , int , int , int , int );
    private void (int , int , int , int , int , int , int );
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :   <  > {
    public virtual    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private  ;
    public   ( );
    public virtual void   ​ ();
    public virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private static Dictionary`2<string, Byte[]> ;
    private static bool ;
    private static Func`2<SignerInfo, Oid> ;
    private static Func`2<SignerInfo, Byte[]> ;
    private static   ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    protected virtual   <  >   ​ (   );
    protected virtual   <  >   ​ (   );
    protected virtual   <  []>   ​ (Byte[] );
    protected virtual   <​ >   ​ (Byte[] );
    protected virtual   <  >   ​ (Byte[] );
    [NullableContextAttribute("0")]
protected virtual   <int>   ​ (   );
    protected virtual   <Byte[]>   ​ (   , string , bool );
    protected virtual   <Byte[]>   ​ (   , Stream , bool );
    protected virtual   <bool>   ​ (Byte[] , Stream );
    protected virtual   <Byte[]>   ​ (Byte[] , ICollection`1<  > );
    protected virtual   <  >   ​ (Byte[] , bool );
    [NullableContextAttribute("0")]
protected virtual   <  >   ​ (Byte[] );
    protected virtual   <X509Certificate2>   ​ (CspParameters );
    protected virtual   <Byte[]>   ​ (string , Byte[] );
    protected virtual   <Byte[]>   ​ (Byte[] , Byte[] ,  );
    protected virtual   <object>   ​ (Byte[] , Type );
    protected virtual   <Byte[]>   ​ (object , bool );
    protected virtual   <Byte[]>   ​ (   , Byte[] , string , string , Byte[] , bool , X509ExtensionCollection );
    protected virtual   <Byte[]>   ​ (   , string ,    ,    , string );
    protected virtual   <string>   ​ (   , string );
    protected virtual   <Byte[]>   ​ (Byte[] ,    , string , object );
    protected virtual   <bool>   ​ (Byte[] , Byte[] ,    , string , object );
    protected virtual   <Byte[]>   ​ (string , object ,    , DateTimeOffset , DateTimeOffset , Byte[] , X509ExtensionCollection , string  , object  );
    protected virtual   <object>   ​ (Byte[] , Byte[] );
    private static    (X509Certificate2 );
    private static   <Byte[]> (   , Stream , bool );
    private static   <bool> (Byte[] , Stream );
    private static   <Byte[]> (Byte[] , ICollection`1<  > );
    private static   <  > (Byte[] , bool );
    private static   <X509Certificate2> (CspParameters );
    private static    (SignerInfo , Dictionary`2<X509Certificate2,   > );
    private static    (CryptographicAttributeObject );
    private static CryptographicAttributeObject (   );
    private static   [] (CryptographicAttributeObjectCollection );
    private static Oid (SignerInfo );
    private static Byte[] (SignerInfo );
}
internal static class  ​  : object {
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual int   ​ (​   , Int32& );
    public abstract virtual double   ​ (    , int , int , Double& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    private static    ;
    private static   ();
    public static void (   );
    internal static    (int , int , Byte[] );
    internal static    (object );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    private    ;
    internal   (string ,    );
    internal    ();
    private void ();
    internal void ();
    internal virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    : KeyedCollection`2<, > {
    [DebuggerBrowsableAttribute("0")]
private Func`2<, > ;
    public   (Func`2<, > );
    public   (Func`2<, > , IEqualityComparer`1<> );
    protected virtual  GetKeyForItem( );
    public  (int );
    public bool ( , & );
    public  ( );
    public void ( ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private Int32[] ;
    private Stream ;
    private Int32[] ;
    private Int32[] ;
    private    ;
    private int ;
    private Byte[] ;
    public   (   ,    , int , int , int );
    public   (string ,    , int , int , int );
    public virtual void   ​ ();
    public virtual void   ​ ();
    public virtual void   ​ (int , int , int , int );
    public virtual void   ​ ();
    private void ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private static Regex ;
    private string ;
    private string ;
    private string ;
    private string ;
    private string ;
    private bool ;
    private static   ();
    public string ();
    private void (string );
    public string ();
    private void (string );
    public string ();
    private void (string );
    public string ();
    private void (string );
    public string ();
    private void (string );
    public bool ();
    private void (bool );
    public static    (string );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private Int16[] ;
    private byte ;
    public short  { get; }
    internal   (   , byte , byte );
    internal   (Int16[] , byte );
    public byte ();
    public byte ();
    public short (int );
    public short (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public static int (Int16[] );
    public static int (Int16[] );
    public static long (long , int );
    public static long (long , int );
    public static int (int , int , int );
    public static int (Byte[] );
}
internal class    : object {
    [NullableContextAttribute("1")]
internal long (long , Byte[] , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    private string ;
    protected   (string );
    public string ();
    public static    (string );
    public abstract virtual Byte[]   ​ (Byte[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal ​   ;
    internal ​   Source { get; }
    private static  ​ ();
    private  ​ (​   );
    internal static  ​  ();
    internal virtual ​   get_Source();
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public     ();
    public void (    );
    public bool ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : ​​ {
    [DebuggerBrowsableAttribute("0")]
private    ;
    private    ;
    private IList`1<int> ;
    private string ;
    private int ;
    private  ;
    private bool ;
    private double  ;
    private bool  ;
    [CompilerGeneratedAttribute]
public sealed virtual     ​​ ();
    public IList`1<int> ();
    public void (IList`1<int> );
    public string ();
    public void (string );
    public int ();
    public void (int );
    public  ();
    public void ( );
    public bool ();
    public void (bool );
    public double  ();
    public void (double );
    public bool ();
    public void (bool );
    public    ();
    private protected virtual  ​ ​​​ ();
    internal void (   );
}
internal class    : Exception {
    [NullableContextAttribute("1")]
public   (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (   );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    : ArrayPool`1<> {
    [DebuggerBrowsableAttribute("0")]
public static ArrayPool`1<> ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ArrayPool`1<> ;
    public   (ArrayPool`1<> );
    private static   ();
    public virtual [] Rent(int );
    public virtual void Return([] , bool );
}
internal class    :    {
    public int ;
    public int ;
    public   (int , int , int , int , int , int );
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static string (Oid );
    public static string (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public static long ;
    public static long ;
    public static long ;
    private    ;
    public static Int64[0...,0...] ;
    public static Int64[0...,0...] ;
    public static Int64[0...,0...] ;
    public static Int64[0...,0...]  ;
    public static Int64[0...,0...]  ;
    public static Int64[0...,0...]  ;
    public static Int64[0...,0...]  ;
    public static Int64[0...,0...]  ;
    public static Int64[0...,0...]  ;
    public static Int64[0...,0...]  ;
    public static Int64[0...,0...]  ;
    public static Int64[0...,0...]  ;
    public static Int64[0...,0...]  ;
    public static Int64[0...,0...]  ;
    public static Int64[0...,0...]  ;
    public   (   );
    private static   ();
    public    (Int64[0...,0...] );
    public    (Int64[][] );
    public static Int64[][] (Int64[][] , int );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class    :    {
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
public     { get; }
    public   (   );
    public   ();
    private void (  );
    [NullableContextAttribute("1")]
internal virtual      ​ (  );
    [NullableContextAttribute("1")]
public    (int );
    [NullableContextAttribute("1")]
public    (int );
    public double ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    [DebuggerBrowsableAttribute("0")]
private  ;
    protected   ( ,    );
    public  ();
    private void ( );
    protected virtual      ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private string ;
    private Byte[] ;
    private Byte[] ;
    private Byte[] ;
    private Byte[] ;
    private Byte[] ;
    internal   (string );
    public string ();
    public void (string );
    internal Byte[] ();
    internal void (Byte[] );
    internal Byte[] ();
    internal void (Byte[] );
    internal Byte[] ();
    internal void (Byte[] );
    internal Byte[] ();
    internal void (Byte[] );
    internal Byte[] ();
    internal void (Byte[] );
}
[NullableContextAttribute("1")]
internal interface  ​  {
    public abstract virtual bool  ​ ​ ();
    public abstract virtual DocumentModel  ​ ​ ();
    public abstract virtual IDictionary`2<string, Color>  ​ ​ ();
    public abstract virtual IDictionary`2<string,    >  ​ ​ ();
    public abstract virtual IDictionary`2<string,    >  ​ ​ ();
    public abstract virtual IDictionary`2<string, bool>  ​ ​ ();
    public abstract virtual void  ​ ​ (string );
    public abstract virtual Picture  ​ ​ (string );
    public abstract virtual TextBox  ​ ​ (    );
    public abstract virtual Chart  ​ ​ (string );
    public abstract virtual      ​ ​ (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    private     ;
    private     ;
    [CompilerGeneratedAttribute]
public sealed virtual     ​​ ();
    public     ();
    public void (    );
    public     ();
    public void (    );
    public virtual      ​  ();
    private void (Double& , Double& , Double& , Double& );
    public void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (   , int );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (   );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private ReadOnlyCollection`1<  > ;
    public   (IList`1<  > );
    public ReadOnlyCollection`1<  > ();
    private void (ReadOnlyCollection`1<  > );
    public virtual    ​ ();
    internal virtual void   ​ (StringBuilder , bool , bool ,    );
    public virtual object   ​ (   );
    public virtual      ​  (   );
    public virtual      ​ (   );
    public virtual IEnumerable`1<  >   ​ ();
    private bool (   );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private Byte[] ;
    private int ;
    private int ;
    public   (Byte[] );
    public   (Byte[] , int , int );
    public virtual void   ​ (Byte[] , int , int );
    public virtual void   ​ (Byte[] , int , int );
    public virtual int   ​ ();
    public virtual int   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (string , IList`1<  > );
    public virtual object   ​ (   );
    public virtual      ​ (   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private static Int32[] ;
    private static Int32[][] ;
    private static Int32[][] ;
    private static Int32[][] ;
    private static Int32[][] ;
    private static Int32[][] ;
    private static Int32[][] ;
    private static Int32[][]  ;
    private     ;
    private   ;
    private bool  ;
    private int  ;
    private   []  ;
    private     ;
    private   []  ;
    private   []  ;
    private   []  ;
    private   []  ;
    private Int32[]  ;
    private     ;
    private int  ;
    private int  ;
    public   (   );
    private static   ();
    public virtual void   ​ ();
    private bool (  [] );
    private bool (  [] );
    private bool (  [] );
    private bool (  [] );
    private bool (  [] );
    private bool (  [] );
    public void ();
    private bool ();
    private void ();
    private void ();
    private void (int );
    private int (   );
    private void (int );
    private void (bool , int ,   & );
    protected int (   , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :   <  > {
    [DebuggerBrowsableAttribute("0")]
private    ;
    internal   (   , int );
    protected virtual void   ​ (int ,    );
    protected virtual void   ​ (int ,    );
    protected virtual void   ​ (int );
}
[IsReadOnlyAttribute]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
public double ;
    [DebuggerBrowsableAttribute("0")]
public double ;
    public   (double , double );
    public double ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    internal   (string , Byte[] );
    public Oid ();
    public Byte[] ();
    public virtual string ToString();
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : ValueType {
    [DebuggerBrowsableAttribute("0")]
private ElementCollection ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
public Element  { get; }
    public  ​ (ElementCollection , int , int );
    public  ​ (ElementCollection );
    public Element ();
    public int ();
    [ConditionalAttribute("DEBUG")]
private void (int );
    public Element (int );
    public  ​  ();
    public void (int );
    public void (int , Inline );
    public void (int , IEnumerable`1<Inline> );
    public Element[] ();
    public  ​  (Element[] );
    public void ();
    private bool (Element );
    public bool ( ​  );
    private void (int );
    private void (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private double ;
    private  ;
    private int ;
    private int ;
    private  ;
    private bool ;
    private double ;
    private double  ;
    private Nullable`1<int>  ;
    private double  ;
    private double  ;
    private double  ;
    private double  ;
    private bool  ;
    private bool  ;
    private double  ;
    private double  ;
    private bool  ;
    private     ;
    private Dictionary`2<int, object>  ;
    private Dictionary`2<int, object>  ;
    private bool  ;
    private bool  ;
    private bool  ;
    private int  ;
    private int  ;
    private double  ;
    private bool  ;
    private   []  ;
    private bool  ;
    private bool  ;
    private int  ;
    private bool  ;
    private bool  ;
    private int  ;
    private int  ;
    private   ;
    private      ;
    private int  ;
    private string  ;
    private string  ;
    private Byte[]  ;
    private object  ;
    private Nullable`1<int>  ;
    public double ();
    public void (double );
    public   ();
    public void ( );
    public int  ();
    public void (int );
    public int  ();
    public void (int );
    public   ();
    public void ( );
    public bool  ();
    public void (bool );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public Nullable`1<int>  ();
    public void (Nullable`1<int> );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public double  ();
    public void  (double );
    public double  ();
    public void  (double );
    public bool  ();
    public void (bool );
    public     ();
    public void (   );
    public Dictionary`2<int, object>  ();
    public void (Dictionary`2<int, object> );
    public Dictionary`2<int, object>  ();
    public void (Dictionary`2<int, object> );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public int  ();
    public void (int );
    public int  ();
    public void (int );
    public double  ();
    public void  (double );
    public bool  ();
    public void  (bool );
    public   []  ();
    public void (  [] );
    public bool  ();
    public void  (bool );
    public bool  ();
    public void  (bool );
    public int  ();
    public void (int );
    public bool  ();
    public void  (bool );
    public bool  ();
    public void  (bool );
    public int  ();
    public void (int );
    public int  ();
    public void (int );
    public   ();
    public void ( );
    public      ();
    public void (    );
    public int  ();
    public void  (int );
    public string ​();
    public void (string );
    public string ​();
    public void (string );
    public Byte[] ​();
    public void (Byte[] );
    public object ​();
    public void (object );
    public Nullable`1<int>  ();
    public void (Nullable`1<int> );
    private sealed virtual override object   ​ ​();
    private sealed virtual override Byte[]   ​ ​();
    private sealed virtual override int   ​  ();
    private sealed virtual override double   ​  ();
    private sealed virtual override double   ​  ();
    private sealed virtual override bool   ​  ();
    private sealed virtual override bool   ​  ();
    private sealed virtual override int   ​  ();
    private sealed virtual override int   ​  ();
    private sealed virtual override int   ​  ();
    private sealed virtual override Nullable`1<int>   ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    private static string ;
    public static int ;
    public static int ;
    public static int ;
    public static int ;
    public static int ;
    public static int ;
    public static int  ;
    public static int  ;
    public static int  ;
    public static int  ;
    public static int  ;
    public static int  ;
    public static int  ;
    public static int  ;
    public static int  ;
    public static int  ;
    public static int  ;
    private     ;
    private ​   ;
    private Byte[]  ;
    private     ;
    protected internal   ( );
    private static   ();
    private int ();
    private void (int );
    private int ();
    private void (int );
    private int ();
    private void (int );
    private int ();
    private void (int );
    private int ();
    private void (int );
    private int ();
    private void (int );
    private int ();
    private void (int );
    private int  ();
    private void  (int );
    private int  ();
    private void  (int );
    private int  ();
    private void  (int );
    private int  ();
    private void  (int );
    private int  ();
    private void  (int );
    private int  ();
    private void  (int );
    private int  ();
    private void  (int );
    private     ();
    private void (   );
    private void (   );
    private void (   );
    public virtual      ​  ();
    public virtual ​    ​  ();
    public static int (string );
    public static    (Byte[] , int );
    public static    (Byte[] , int );
    public static    (Byte[] , int );
    public static string (Byte[] , int , int , bool );
    public static short (Byte[] , int , bool );
    public static short (Byte[] , int );
    public static Byte[]  (int );
    public static Byte[] (int , Byte[] );
    public static Byte[] (long );
    public static Byte[] (long , Byte[] );
    public static int (Byte[] , int , bool );
    public static int (Byte[] , int );
    public static long (Byte[] , int );
    private void (Byte[] );
    public virtual string ToString();
    public static string (byte );
    public static string (short );
    public static string  (int );
    public static string (Byte[] );
    public virtual      ​  ();
    public virtual void   ​ (Stream );
    private static int (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :  {
    [DebuggerBrowsableAttribute("0")]
protected    ;
    protected   (Stream ,  );
    public static    (Stream ,  );
    public    ();
}
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
public    ;
    [DebuggerBrowsableAttribute("0")]
public    ;
    public   (   ,    );
    public int ();
    public bool (   );
    public bool (  & );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public int ;
    public int ;
    public int ;
    public int ;
    public int ;
    public Int32[] ;
    public Int32[] ;
    public Int32[]  ;
    public int  ;
    public Int32[][]  ;
    public Int32[]  ;
    public   (int , int , int , int , int );
    public virtual void   ​ (int , int );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private string ;
    private string ;
    private string ;
    private string ;
    private string ;
    private string ;
    private   ;
    private IList`1<  >  ;
    public   (   , string , string , string , string , string , string ,   , IList`1<  >  );
    public sealed virtual bool   ​ ();
    public sealed virtual string   ​ ();
    public sealed virtual string   ​ ();
    public sealed virtual void   ​ (XmlWriter );
    private void (XmlWriter , bool );
    private void (XmlWriter );
    private void (XmlWriter );
    private static void  (XmlWriter );
    private void (XmlWriter );
    private void (XmlWriter );
    private void (XmlWriter );
    private void (XmlWriter );
    private void (XmlWriter );
    private void  (XmlWriter );
    public sealed virtual Byte[]   ​ (string );
    private string ();
    private static Byte[] (string , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    private int ;
    private int ;
    private int ;
    private   [] ;
    private int ;
    public   (   );
    public virtual void   ​ ();
    public   [] ();
    private void ();
    public    ();
    public int ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    internal List`1< > ;
    internal List`1<  > ;
    public void ();
    public void (  ,  , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :   <  > {
    public   (   );
    protected virtual void   ​ (   ,    ,  ​ ,     , bool );
    protected virtual void   ​ (    ,    ,    );
    private static bool (   );
}
[ExtensionAttribute]
internal static class    : object {
    [ExtensionAttribute]
[NullableContextAttribute("1")]
public static Stream (Assembly , string , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class  ​  : object {
    private  ​  ;
    public abstract virtual   ​ ​ ();
    public  ​  ();
    private void ( ​  );
    internal void ( ​  );
    public virtual string ToString();
    public void (Stream ,  , Encoding );
    public static  ​  (string );
    public static  ​  (Stream , Encoding );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private Dictionary`2<​ , ​ > ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("0")]
private   <bool> ;
    private    ;
    private Action`1<Double[]> ;
    private Action`1<Double[]> ;
    private     ;
    public   (   );
    public    ();
    public void (   );
    public Action`1<Double[]> ();
    public void (Action`1<Double[]> );
    public Action`1<Double[]> ();
    public void (Action`1<Double[]> );
    [CompilerGeneratedAttribute]
public sealed virtual     ​​ ();
    public virtual      ​ ();
    public virtual void   ​ (   );
    public virtual double   ​ ();
    public bool ();
    public virtual ​    ​ (​  );
    public virtual double   ​ ( );
    public virtual double   ​ ( );
    public void (double );
    public virtual ​​  ​​ ();
    private sealed virtual override  ​   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private static string ;
    private static int ;
    public static int ;
    private static int ;
    private static int ;
    private static int ;
    private static int ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    private static int  ;
    public static int  ;
    public int  ;
    public int  ;
    public int  ;
    public int  ;
    public int  ;
    public int  ;
    public int  ;
    public int  ;
    public int  ;
    public int  ;
    public int  ;
    public int  ;
    public int  ;
    public int  ;
    public Byte[]  ;
    public     ;
    public     ;
    public     ;
    public   (Byte[] );
    private static   ();
    public virtual void   ​ (Stream );
    public virtual string ToString();
}
internal static class    : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    private static Dictionary`2<char, ​ > ;
    private static Dictionary`2<int,   > ;
    private static HashSet`1<char> ;
    private static   ();
    private static void (char , ​  );
    private static void (char );
    public static string (string , Nullable`1<char> , Nullable`1<char> );
    private static bool (char );
    public static string (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private List`1<int> ;
    private List`1<int> ;
    public bool ;
    public   (   );
    public virtual Int64[]   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual void   ​ ();
    public virtual bool   ​ ();
    public virtual bool   ​ (long , int , long );
    public virtual bool   ​ (long , int , long );
    public virtual void   ​ (int );
    public virtual void   ​ (int );
    public virtual void   ​ (int );
    public virtual void   ​ (int );
    public virtual void   ​ (int );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual void   ​ (Brush );
    public abstract virtual Color   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    private Stream ;
    private Byte[] ;
    private bool ;
    public   (   );
    public void (Stream );
    public virtual void   ​ ();
    public virtual bool   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :   <​ > {
    private  ;
    private double ;
    private  ;
    private double ;
    private double ;
    private double ;
    private double ;
    private double  ;
    private bool  ;
    public   ( , double ,  , double , double , double , double , double  );
    public   (   );
    public  ();
    private void ( );
    public double ();
    private void (double );
    [CompilerGeneratedAttribute]
public sealed virtual  ​ ​ ();
    private void ( );
    public double ();
    private void (double );
    public double ();
    private void (double );
    public double ();
    private void (double );
    public double ();
    private void (double );
    public double ();
    private void (double );
    public bool  ();
    private void (bool );
    public virtual    ​ ();
    public virtual double   ​ ();
    public sealed virtual void ​ ​ (    );
    private static  (double , double , double , double , int );
    public void  ();
    public void  ();
    public virtual void   ​ ();
    public bool (   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    public   (   );
    public virtual void   ​ ();
    public virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    public abstract virtual bool   ​ ();
    public abstract virtual Byte[]   ​ ();
    public abstract virtual IList`1<Byte[]>   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class  ​  : object {
    private static Uri ;
    private static  ​ ();
    public static string (string , string );
    public static string (string );
    public static string (string , string );
    public static string (string );
    public static string (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : object {
    [DebuggerBrowsableAttribute("0")]
private IEnumerable`1<​  > ;
    [DebuggerBrowsableAttribute("0")]
private Uri ;
    internal ​  (Uri , IEnumerable`1<​  > );
    internal Uri ();
    public sealed virtual IEnumerator`1<​  > GetEnumerator();
    private sealed virtual override IEnumerator ​  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : object {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    private Nullable`1<> ;
    private int ;
    private bool ;
    private bool ;
    private bool ;
    private static ​  ();
    public static ​   ();
    public Nullable`1<> ();
    public void (Nullable`1<> );
    internal int ();
    internal void (int );
    internal bool ();
    internal void (bool );
    internal bool ();
    internal void (bool );
    internal bool  ();
    internal void (bool );
    internal bool  ();
    internal bool  ();
    internal bool  ();
    private sealed virtual override int ​  ​ ();
    private sealed virtual override int ​  ​ ();
    private sealed virtual override bool ​  ​  ();
    private sealed virtual override Nullable`1<   > ​  ​  ();
    private sealed virtual override bool ​  ​  ();
}
[IsReadOnlyAttribute]
internal class ​   : ValueType {
    [DebuggerBrowsableAttribute("0")]
internal UInt32 ;
    [DebuggerBrowsableAttribute("0")]
internal ushort ;
    [DebuggerBrowsableAttribute("0")]
internal ushort ;
    [DebuggerBrowsableAttribute("0")]
internal ushort ;
    [DebuggerBrowsableAttribute("0")]
internal ushort ;
    private ​  (UInt32 , ushort , ushort , ushort , ushort );
    internal ​  ( , ushort );
    internal static ​   (UInt32 , ushort , ​​  );
    internal void (​​  );
    [NullableContextAttribute("1")]
public virtual string ToString();
    private static ushort (ushort , UInt16& , UInt16& );
}
[DefaultMemberAttribute("")]
[DebuggerTypeProxyAttribute("GemBox.Collections.EnumerableDebugView`1<​  >")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : object {
    [DebuggerBrowsableAttribute("0")]
private ​  [] ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public int FirstObjectNumber { get; }
    public int Count { get; }
    [DebuggerBrowsableAttribute("0")]
internal ​    { get; }
    internal ​  (int , int , long );
    internal ​  (IList`1<​  > , int , int );
    internal long ();
    internal void (long );
    [CompilerGeneratedAttribute]
public int get_FirstObjectNumber();
    public int get_Count();
    internal ​   (int );
    internal void (int , ​   );
    internal ​   (int , int );
    internal ​   (int );
    internal void (Int32[] , Int64& , UInt16& );
    public sealed virtual IEnumerator`1<​  > GetEnumerator();
    private sealed virtual override IEnumerator ​  ​ ();
    private sealed virtual override int ​  ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   : object {
    public static ​   (    , bool , double , bool , bool );
    private static bool (double , ​  & );
    public abstract virtual     ​  ​ (    , int , double );
    public virtual void Dispose();
    private protected static     (    , int , bool );
}
[DebuggerTypeProxyAttribute("GemBox.Collections.EnumerableDebugView`1<​  >")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : object {
    [DebuggerBrowsableAttribute("0")]
private List`1<​  > ;
    [DebuggerBrowsableAttribute("0")]
internal Queue`1<​  > ;
    public int Count { get; }
    public sealed virtual int get_Count();
    public bool (​   );
    public sealed virtual bool Contains(​   );
    public sealed virtual void Dispose();
    internal ReadOnlyCollection`1<​  > ();
    private sealed virtual override bool ​  ​ ();
    private sealed virtual override void ​  ​ (​   );
    private sealed virtual override bool ​  ​ (​   );
    private sealed virtual override void ​  ​ ();
    private sealed virtual override void ​  ​ (​  [] , int );
    private sealed virtual override IEnumerator`1<​  > ​  ​ ();
    private sealed virtual override IEnumerator ​  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
internal ​   ;
    [DebuggerBrowsableAttribute("0")]
internal ​   ;
    internal static ​   ();
    public virtual UInt32 ​  ​ ();
    protected virtual bool ​  ​ ();
    [IteratorStateMachineAttribute("​  /")]
public virtual IEnumerable`1<UInt32> ​  ​ ();
    internal virtual void ​  ​ (​​  , UInt32 );
    internal virtual UInt32 ​  ​ (​​  , Nullable`1& );
    internal virtual ​   ​  ​ (ICollection`1<ushort> );
    internal virtual void ​  ​ (​   , ICollection`1<ushort> );
    internal ​   (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private static IDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private object ;
    [DebuggerBrowsableAttribute("0")]
public int Count { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal       { get; internal set; }
    private static ​  ();
    internal static void (​   );
    private protected abstract virtual int ​  ​ ();
    public sealed virtual int get_Count();
    [NullableContextAttribute("2")]
internal     ();
    [NullableContextAttribute("2")]
internal void (    );
    internal T ();
    private protected abstract virtual void ​  ​ (Array , int );
    private protected abstract virtual IEnumerator ​  ​ ();
    internal int (Predicate`1<​  > );
    internal abstract virtual ​   ​  ​ (​   );
    private protected abstract virtual int ​  ​ (Predicate`1<​  > );
    internal abstract virtual int ​  ​ (Func`2<​  , ​  > , bool );
    internal bool ();
    internal bool ();
    internal ​    ();
    private sealed virtual override bool ​  ​ ();
    private sealed virtual override object ​  ​  ();
    private sealed virtual override void ​  ​ (Array , int );
    private sealed virtual override IEnumerator ​  ​ ();
}
internal class ​   : ​   {
    [NullableContextAttribute("1")]
internal static ​   ();
    public virtual UInt32 ​  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    internal ​  (Stream ,     );
    protected virtual void    ​ (​   );
    internal long (​   );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   :     {
    [DebuggerBrowsableAttribute("0")]
private IList`1<​  > ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
public ​    { get; }
    internal ​  (​   );
    public virtual void    ​ ();
    public ​   ();
    protected virtual ​      ​ ();
    public virtual     ​ ();
    public virtual int    ​ ();
    public ​   (int );
    public void (​   );
    public bool (​   );
    public virtual void    ​ (Stream );
    protected virtual ​      ​ (int );
    private sealed virtual override bool ​  ​ ();
    private sealed virtual override int ​  ​ ();
    private sealed virtual override void ​  ​ (​   );
    private sealed virtual override bool ​  ​ (​   );
    private sealed virtual override void ​  ​ ();
    private sealed virtual override bool ​  ​ (​   );
    private sealed virtual override void ​  ​ (​  [] , int );
    [IteratorStateMachineAttribute("​  /")]
private sealed virtual override IEnumerator`1<​  > ​  ​ ();
    [IteratorStateMachineAttribute("​  /")]
private sealed virtual override IEnumerator ​  ​ ();
    public virtual void    ​ ();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class ​   : object {
    [ExtensionAttribute]
public static bool (    , ​   , ​  & );
    [ExtensionAttribute]
public static bool (    , ​   , ​   );
    [ExtensionAttribute]
public static ​   (    );
    internal static ​   (​   ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   :     {
    [DebuggerBrowsableAttribute("0")]
private static String[] ;
    private static ​  ();
    public virtual IEnumerable`1<string>    ​ ();
    public virtual        ​ (​   );
    public static     (Stream , ​   );
    public static void (Stream ,     );
    private static     (XmlReader , ​   );
    private static void (XmlWriter ,     );
    private static KeyValuePair`2<   , string> (XmlReader );
    private static void (XmlWriter , KeyValuePair`2<   , string> );
    private static     (XmlReader );
    private static void (XmlWriter ,     );
    private static KeyValuePair`2<int,    > (XmlReader );
    private static void (XmlWriter , KeyValuePair`2<int,    > );
    private static     (XmlReader );
    private static void (XmlWriter ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   :     {
    internal ​  (Stream ,     );
    internal ​  (string ,     );
    protected virtual        ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    private string ;
    private bool ;
    internal ​  (​   , ​   , string , bool );
    protected virtual string ​  ​ ();
    internal virtual string ​  ​ ();
    internal virtual Stream ​  ​ ();
}
[NullableContextAttribute("1")]
internal interface ​   {
    public abstract virtual bool ​  ​ ( , ​   , Byte[] , int , int , ​   , Byte[]& , Int32&  , Int32&  );
    public abstract virtual bool ​  ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    protected virtual UInt32 ​  ​ ();
    internal sealed virtual UInt32 ​  ​ ();
    internal sealed virtual void ​  ​ (​​  , UInt32 );
    internal sealed virtual UInt32 ​  ​ (​​  , Nullable`1& );
    internal sealed virtual ​   ​  ​ (ICollection`1<ushort> );
    internal sealed virtual void ​  ​ (​   , ICollection`1<ushort> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   :     {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
protected      { get; }
    internal ​  (    ,     );
    [NullableContextAttribute("2")]
protected     ();
    internal void (​   , ​   );
    protected ​   (​   , bool );
    protected sealed virtual ​      ​ (​   );
    protected  (​   ,     );
    protected  (​   );
    internal  (long );
}
internal class    : object {
    private     ;
    public   (    );
    public double ();
    public double ();
    public double ();
    public double ();
    public double ();
    public double ();
    public double ();
    public double  ();
    public double  ();
    public double  ();
    public double  ();
}
internal class    :    {
    [NullableContextAttribute("1")]
public   (   , int , byte );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (   , string );
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private  ;
    private object ;
    private int ;
    public   ( , object , int );
    public  ();
    public object ();
    public int ();
}
internal class    : object {
    public int ;
    public int ;
    public int ;
    public int ;
    public int ;
    public int ;
    public   (int , int , int , int , int , int );
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private string ;
    internal   (string );
    public string ();
    public virtual    ​ ();
    public virtual object   ​ (   );
    [IteratorStateMachineAttribute("  /")]
public virtual IEnumerable`1<  >   ​ ();
    public virtual      ​ (   );
    internal virtual void   ​ (StringBuilder , bool , bool ,    );
}
internal class    :    {
    [NullableContextAttribute("1")]
public   (   );
    public virtual void   ​ (bool );
}
internal static class    : object {
    public static int (double , double );
    public static int (double , double , double );
    public static bool (double , double );
    public static bool (double , double , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    : ​​<  ,   ,   > {
    private    ;
    public virtual    ​​​ ();
    protected virtual void ​​​ (   );
    protected virtual void ​​​ (   ,    );
    public virtual void ( ​ ,    );
    public virtual void ​​​ (    );
    private static    (   ,  ​ , bool ,    , ​​ );
    private static    (   , double , bool , bool , ​​ );
    private static bool (   , double , double );
    private static bool (   , double , bool , bool , double );
    private static bool (   , double , bool , bool );
    private static double (   , Double& , Double& );
    private static    (   ,    , double ,    , bool , bool , ​​ );
    private static bool (   );
    private static void (   ,    ,    , bool , bool , ​​ , Func`2<  , bool> , Func`2<  , double>  );
    private static void (   ,    ,    , bool , ​​ );
    private static double (   , ​​ );
    private static void (   , double , ​​ , Double& , Double& );
    private static    (   );
    private static    (   , ​​ );
    private static double (   , double );
    private static double (   , double );
    private static Nullable`1<double> (   );
    private static bool (​​ );
    private static double (   , double , double , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public static    ;
    private string ;
    private   (string );
    private static   ();
    public static    (string );
    public string ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : object {
    [DebuggerBrowsableAttribute("0")]
private [] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public  Current { get; }
    public  ​ ([] , int , int );
    public sealed virtual  get_Current();
    private sealed virtual override object  ​ ​ ();
    public sealed virtual bool MoveNext();
    public sealed virtual void Reset();
    public sealed virtual void Dispose();
}
internal class    : Collection`1<  > {
    public bool ();
}
internal class    :    {
    public int ;
    public int ;
    public int ;
    [NullableContextAttribute("1")]
protected internal   (int , Byte[] , int , int );
}
internal class    : Exception {
    [NullableContextAttribute("1")]
protected   (SerializationInfo , StreamingContext );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public static    ;
    public static    ;
    private IList`1<int> ;
    private int ;
    private int ;
    private   (IList`1<int> );
    private   (int , int );
    private static   ();
    public IList`1<int> (int );
    public static    (Int32[] );
    public static    (int );
}
internal interface    {
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual bool   ​ (int , int );
    [NullableContextAttribute("1")]
public abstract virtual      ​ (int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static    (Element );
    public static void (Element ,    );
    public static void (Element ,    );
    public static void (Element , Element );
    public static bool (Element );
    private static bool (ElementCollection , int ,    );
    private static bool (ElementCollection , int ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private static Int16[] ;
    private static Double[] ;
    private [] ;
    private [] ;
    private    ;
    private Int32[] ;
    private    ;
    private Int32[]  ;
    private Single[]  ;
    public   (   );
    private static   ();
    public void ();
    public void (int , Int16[] ,    , int , int );
    private void (int , Int16[] , int , int );
    private static int (double );
    private void (int , Int16[] , int , int );
    private static int (int , int );
    private static int (short , int );
    private static int (int , int );
    private void (int , Int16[] , int , int );
    private static float (short , float );
    private void (int , Int16[] , int , int );
    private void (int , Int16[] , int , int );
    private void (int , Int16[] , int , int );
    private static int (short , int );
    private void (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
    private void  (int , Int16[] , int , int );
}
internal abstract class    :    {
    internal   (    );
    [NullableContextAttribute("1")]
public sealed virtual int CompareTo(   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   ( ,  , string );
    public virtual bool   ​ ();
    public virtual bool   ​ ();
    public virtual bool   ​ ();
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (Byte[] , int , int , short );
    public virtual bool   ​ (int );
    private bool (Byte[] , int , int , short );
    private bool (Byte[] , int , int , short );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private object ;
    private object ;
    private X509KeyStorageFlags ;
    public   (Byte[] );
    public   (Byte[] , string );
    public   (string );
    public   (string , string );
    [CompilerGeneratedAttribute]
public sealed virtual object   ​ ();
    [CompilerGeneratedAttribute]
public sealed virtual object   ​ ();
    [CompilerGeneratedAttribute]
public sealed virtual X509KeyStorageFlags   ​ ();
    public virtual bool   ​ ();
    public virtual void   ​ (bool );
    public virtual bool   ​ ();
    public virtual void   ​ (bool );
    public virtual bool   ​ ();
    public virtual void   ​ (bool );
    public virtual bool   ​ ();
    public virtual void   ​ (bool );
    public virtual Byte[]   ​ (Byte[] , string , object );
    public virtual bool   ​ (Byte[] , Byte[] , string , object );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class  ​  : object {
    private static  ​ ;
    private static Dictionary`2<string, string> ;
    private static Dictionary`2<, double> ;
    private static Dictionary`2<, double> ;
    private static  ​ ();
    public static    (PageSetup , bool , bool );
    private static    (PageBorders );
    public static  (TextWrappingStyle );
    internal static  (WrapTextType );
    private static   [] (TextColumnCollection , double );
    private static  (LineNumberRestartSetting );
    private static  (SectionStart );
    public static    (ParagraphFormat , CharacterFormat , CharacterFormat , Element , bool ,    < ​> ,  ​  );
    private static void (   , bool );
    public static    (Padding );
    public static  (VerticalAlignment );
    public static  (HorizontalAlignment , bool );
    public static TBorders (TBorders , MultipleBorders );
    private static  (SingleBorderType );
    public static  ​ (Nullable`1<SingleBorder> );
    private static  (BorderStyle );
    private static  (LineSpacingRule , double );
    private static  (OutlineLevel );
    private static    (IList`1<TabStop> );
    private static    (TabStop );
    private static  (TabStopLeader );
    private static  (TabStopAlignment );
    private static  (TabPositioningBase );
    public static  ​ (AlignmentTab );
    public static  (Hyperlink );
    public static  ​ (CharacterFormat ,  ,    < ​> ,  ​  );
    public static  ​ (CharacterFormat ,  ,    < ​> ,  ​  , int );
    private static string (CharacterFonts ,  );
    private static  (UnderlineType );
    public static    (   , TablePositioning , int );
    private static    (TablePositioning , int );
    public static    (FloatingLayout , int , bool , Nullable`1<TextWrappingStyle> );
    private static    (HorizontalPosition , VerticalPosition , TextWrappingStyle , WrapTextType , Padding , Nullable`1<int> , int , bool  , bool  , bool  , bool  );
    public static     (Pen );
    public static     (Brush );
    private static     (Color );
    public static    (HorizontalPosition );
    public static    (VerticalPosition , bool );
    public static  (HorizontalPositionAnchor );
    public static  (VerticalPositionAnchor , bool );
    public static     (Color );
    public static InvalidOperationException (object );
    public static  ​ (Field , bool ,    ,     );
    private static string (IEnumerable`1<  > );
    private static string (Field );
    internal static string (NumberStyle );
    private static string ( );
    public static  (TextDirection );
    public static    (Shape ,    );
    private static  ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    public   (   );
    public static void (   );
    public static void (   );
    private void ();
    private bool  ();
    private void ();
    private void ();
    private static void (   );
    private void ();
    private static void ( ​ ,   & );
    private void ();
    private void ();
    private static string (   );
    private void ();
    private void  ();
    private static  (LinkedList`1<> , char );
    private static string (string , int , char );
    [IteratorStateMachineAttribute("  /")]
public static IEnumerable`1< ​> (   );
    [IteratorStateMachineAttribute("  /")]
public static IEnumerable`1<  > (   );
    private static bool ( );
    public static bool (   );
}
internal interface    {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private Stream ;
    private ushort ;
    private    ;
    private UInt32 ;
    private UInt32 ;
    internal   (Stream ,    , ushort ,    );
    public UInt32 ();
    public ulong ();
    public UInt32 ();
    internal void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : Exception {
    public   (string );
    public   (string , Exception );
    protected   (SerializationInfo , StreamingContext );
}
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
public static int ;
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private static Random ;
    private     ;
    private IList`1<  > ;
    public     { get; }
    private static   ();
    internal     ();
    internal void (    );
    public IList`1<  > ();
    public    (string );
    internal    (string );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual int   ​ (int );
    public abstract virtual      ​ (   , int );
    public abstract virtual      ​ (   , int );
    public abstract virtual void   ​ ();
    public abstract virtual bool   ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public virtual void   ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public Byte[] ;
    public int ;
    public int ;
    public long ;
    public Byte[] ;
    public int ;
    public int ;
    public long  ;
    public string  ;
    internal     ;
    internal     ;
    internal int  ;
    public long  ;
    internal     ;
    public int ();
    public int ();
    public int (int );
    public int (int );
    public int ();
    public int ();
    public int (Byte[] , int );
    public int (int );
    public int (int , int );
    public int (int );
    public int ();
    public int (int , int );
    public int (Byte[] , int );
    internal void ();
    internal int (Byte[] , int , int );
    public void ();
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual bool   ​ ();
    public abstract virtual string   ​ ();
    public abstract virtual string   ​ ();
    public abstract virtual Byte[]   ​ (string );
    public abstract virtual void   ​ (XmlWriter );
}
internal class  ​  : ValueType {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public  ​ (int , int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public virtual int GetHashCode();
    public sealed virtual bool Equals( ​  );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
public sealed virtual string ToString(string , IFormatProvider );
    public static bool op_Equality( ​  ,  ​  );
    public static bool op_Inequality( ​  ,  ​  );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual void   ​ (string , List`1<int> );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual string   ​ ();
    public abstract virtual string   ​ ();
    public abstract virtual bool   ​ ();
    public abstract virtual bool   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : Stream {
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
protected long ;
    [DebuggerBrowsableAttribute("0")]
protected long ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private List`1<UInt32> ;
    public long Position { get; public set; }
    public long Length { get; }
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    internal   (   , UInt32 , long , string );
    public virtual long get_Position();
    public virtual void set_Position(long );
    public virtual long get_Length();
    public virtual int Read(Byte[] , int , int );
    public int            ​   ​ (Byte[] , int , int , long );
    private void (UInt32 );
    private void ();
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual void Flush();
    public virtual long Seek(long , SeekOrigin );
    public virtual void SetLength(long );
    public virtual void Write(Byte[] , int , int );
    public void                 (int , byte );
}
internal interface    {
    public abstract virtual int Compare(& modreq(System.Runtime.InteropServices.InAttribute) , & modreq(System.Runtime.InteropServices.InAttribute) );
}
internal abstract class    : object {
    [NullableAttribute("1")]
protected internal    ;
    protected internal int ;
    protected internal int ;
    public abstract virtual void   ​ ();
    public abstract virtual void   ​ ();
    protected virtual override void Finalize();
    public abstract virtual void   ​ ();
    public virtual void   ​ ();
    public abstract virtual void   ​ (int , int , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    internal static string (int , string , string );
    private static string (int , bool );
    private static string (int , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private List`1<  > ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private byte ;
    [DebuggerBrowsableAttribute("0")]
private byte ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private MemoryStream  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private MemoryStream  ;
    [DebuggerBrowsableAttribute("0")]
private Bitmap  ;
    public   (Bitmap );
    public   (string );
    public   (Stream );
    public   (  [] ,  );
    public static    (Bitmap );
    public sealed virtual void Dispose();
    private void (bool );
    public int ();
    internal void (int );
    public int ();
    internal void (int );
    public byte ();
    internal void (byte );
    public byte ();
    internal void (byte );
    public   ();
    internal void ( );
    public    (int );
    public void (Stream );
    public void (Stream ,    );
    public void (Stream );
    public Bitmap  ();
    private MemoryStream  ();
    private MemoryStream  ();
    private Bitmap  ();
    internal void (   );
    private static bool (Stream );
    private void (Stream );
    private void (Bitmap );
    private void (Bitmap );
    private void (   );
    private void (   ,    );
    private bool (   );
    private void ();
    private void ();
    private void (PixelFormat );
    private void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    public    ;
    public    ;
    public    ;
    public    ;
    public    ;
    public    ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    private Int32[]  ;
    private Int32[]  ;
    private long  ;
    private long  ;
    private long  ;
    private long  ;
    private long  ;
    private int  ;
    private Int32[]  ;
    private Int32[]  ;
    private Int32[]  ;
    private Int32[]  ;
    public   (   );
    public void (int );
    public void (int ,    );
    public void (int ,    );
    public void ();
    public    (   );
    public long (long ,    );
    public int (long ,    );
    private void ();
    private int (   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private  ;
    private short ;
    private short ;
    private  ;
    private short ;
    private bool ;
    private bool ;
    private string  ;
    public   ( , short , short ,  , short , bool , bool , string  );
    public virtual string ToString();
    public  ();
    public short ();
    public short ();
    public  ();
    public short ();
    public bool ();
    public bool  ();
    public string ();
    internal void (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int> ;
    public   (Byte[] );
    public int ();
    public string ();
    public string (string );
    public sealed virtual bool Equals(   );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : ValueType {
    [DebuggerBrowsableAttribute("0")]
public string ;
    [DebuggerBrowsableAttribute("0")]
public string ;
    [DebuggerBrowsableAttribute("0")]
public string ;
    [DebuggerBrowsableAttribute("0")]
public string ;
    [DebuggerBrowsableAttribute("0")]
public string ;
    [DebuggerBrowsableAttribute("0")]
public string ;
    [DebuggerBrowsableAttribute("0")]
public string ;
    [DebuggerBrowsableAttribute("0")]
public string  ;
    public  ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private     ;
    private HashSet`1< ​> ;
    [NullableAttribute("2")]
private ​  ;
    private    ;
    private  ​ ;
    private     ;
    private     ;
    private   ;
    private Dictionary`2< ​,   >  ;
    [NullableAttribute("2")]
public ​    { get; internal set; }
    public   ( ​ ,     ,     , ​  ,    );
    public     ();
    internal void (    );
    public  (    ,  );
    [NullableContextAttribute("2")]
public ​  ();
    [NullableContextAttribute("2")]
internal void (​  );
    public    ();
    public  ​ ();
    public     ();
    public     ();
    public  ();
    private void ( );
    public Dictionary`2< ​,   >  ();
    public void (Dictionary`2< ​,   > );
    public void  ();
    private void (    ,     , int );
    private bool (   , int );
    private void (    , int ,    ,    ,    ,  );
    private int (int , int ,    ,    );
    private void (    , int ,    ,    );
    private void (int ,    ,    , Double& , Double& , Double& , Double& );
    private void (    ,    ,    );
    private void (    ,  ​[] ,    ,    ,    );
    private static void (    ,    ,  ​[] , double );
    private static double (   ,  ​[] );
    private static bool (int ,    ,  ​ );
    private static bool (int ,    ,  ​[] );
    private void (    ,    ,    ,  ​[] );
    public ​​[] (int );
    private sealed virtual override      ​  ();
    private sealed virtual override int   ​  ();
    private sealed virtual override  ​   ​  ();
    private sealed virtual override int   ​  ();
    private sealed virtual override      ​  ();
    private sealed virtual override       ​ (int );
    private sealed virtual override       ​ (int , object );
    private sealed virtual override void   ​ (int , object , object );
    private sealed virtual override      ​ (int ,    );
    private sealed virtual override object   ​ (Type );
}
internal class    : object {
    [NullableAttribute("1")]
private static    ;
    private static   ();
    public sealed virtual bool   ​ ();
    public static void ();
    [NullableContextAttribute("1")]
public sealed virtual      ​ (int , int , Byte[] );
    [NullableContextAttribute("1")]
public sealed virtual      ​ (object );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private List`1<UInt32> ;
    private List`1<UInt32> ;
    internal   (   ,    );
    internal virtual ushort   ​ ();
    internal virtual long   ​ (long , long );
    protected virtual UInt32   ​ (UInt32 );
    private void ();
    private void ();
    private void ();
    private void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : EventArgs {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private object ;
    public   ( , object );
    public  ();
    public object ();
    public virtual string ToString();
}
internal class    :    {
    [NullableContextAttribute("1")]
public   (int , int , byte ,    ,    );
    [NullableContextAttribute("1")]
private int (int ,    );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    internal static Element (Element , int );
    internal static int (Element );
    internal static IEnumerable`1<Element> (Element , bool , IList`1<ElementType> );
    [IteratorStateMachineAttribute("  /")]
internal static IEnumerable`1<Element> (Element , bool , bool , IList`1<ElementType> );
    [IteratorStateMachineAttribute("  /")]
internal static IEnumerable`1<ElementCollection> (Element , bool );
    internal static IEnumerable`1<Element> (Element , IList`1<ElementType> );
    [IteratorStateMachineAttribute("  /")]
internal static IEnumerable`1<Element> (Element , Predicate`1<Element> );
    internal static Element (Element , ElementType );
    internal static bool (Element , ElementType );
    internal static bool (Element , ElementType );
    internal static bool (Element , Func`2<Element, bool> );
    private static void (Element& , Int32& );
    private static Element (ContentPosition , Element );
    private static Element (ContentPosition );
    internal static bool (Element );
    [IteratorStateMachineAttribute("  /")]
internal static IEnumerable`1<Element> (ContentRange , IList`1<ElementType> );
    [ExtensionAttribute]
public static bool (Element , Element );
    private static List`1<int> (Element );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private int ;
    private int ;
    private int ;
    private int ;
    private EventHandler ;
    public void (EventHandler );
    public void (EventHandler );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :   <  > {
    [DebuggerBrowsableAttribute("0")]
private static [] ;
    [DebuggerBrowsableAttribute("0")]
private ​  ;
    private int ;
    private int ;
    private  ;
    public   (    );
    private static   ();
    public int ();
    public void (int );
    public int ();
    public void (int );
    public  ();
    public void ( );
    public virtual    ​ ();
    public double ();
    public ​  ();
    public bool (   );
    public void ();
    [IteratorStateMachineAttribute("  /")]
protected virtual IEnumerable`1<​ >   ​ ();
    private static  (double , double , double , double );
}
internal class    : object {
    public  ;
    public  ;
    public int ;
    public ulong ;
    [NullableContextAttribute("1")]
public string ();
    public static int (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private int ;
    private int ;
    public Byte[] (Byte[] );
    public static Byte[] (Byte[] , string );
    public static Byte[] (Byte[] , string );
    public static Byte[] (int , Byte[] );
    public static Byte[] (Byte[] , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class  ​  : object {
    private static Char[] ;
    private static  ​ ();
    public static void (TextReader , DocumentModel );
    [IteratorStateMachineAttribute(" ​ /")]
private static IEnumerable`1<Block> (TextReader , DocumentModel );
    [IteratorStateMachineAttribute(" ​ /")]
private static IEnumerable`1<Inline> (string , DocumentModel );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private     ;
    private List`1<  > ;
    private Dictionary`2< ​,  ​[]> ;
    private     ;
    private    ;
    private    ;
    private double ;
    private double  ;
    private double  ;
    private double  ;
    private bool  ;
    private bool  ;
    public   (    ,     );
    [CompilerGeneratedAttribute]
public sealed virtual       ​ ();
    [CompilerGeneratedAttribute]
public sealed virtual void   ​ (    );
    public    ();
    internal void (   );
    public    ();
    internal void (   );
    [CompilerGeneratedAttribute]
public sealed virtual double   ​ ();
    public void (double );
    [CompilerGeneratedAttribute]
public sealed virtual double   ​ ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public sealed virtual       ​ ();
    public sealed virtual void   ​ (    );
    public      ();
    public Dictionary`2< ​,  ​[]>  ();
    public bool ();
    private sealed virtual override bool   ​  ();
    private sealed virtual override      ​  ();
    private sealed virtual override bool   ​  ();
    private sealed virtual override List`1<  >   ​  ();
    private sealed virtual override       ​ (   & modreq(System.Runtime.InteropServices.InAttribute) , double );
    private sealed virtual override bool   ​ (   & modreq(System.Runtime.InteropServices.InAttribute) , Nullable`1& , Boolean& );
    private sealed virtual override bool   ​ (   & modreq(System.Runtime.InteropServices.InAttribute) , Nullable`1& , Boolean& );
}
internal class    : object {
    [NullableContextAttribute("1")]
public static void (Exception );
}
internal class    :    {
    private UInt32 ;
    private UInt32 ;
    [NullableContextAttribute("1")]
internal   (   );
    internal UInt32 ();
    internal UInt32 ();
    internal virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
public static   <> ;
    private static   ();
    public sealed virtual bool Equals( ,  );
    public sealed virtual int GetHashCode( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    private string ;
    private bool ;
    private Stream ;
    protected internal Byte[] ;
    protected internal bool ;
    protected internal int ;
    protected internal int ;
    protected internal int  ;
    protected internal bool  ;
    protected internal int  ;
    protected internal   (Stream , bool , int );
    protected internal   (Stream , bool );
    protected internal   (   , string , int );
    protected internal   (   , string );
    protected internal   (string , string , int );
    protected internal   (string , string );
    public virtual int   ​ ();
    public virtual int   ​ ();
    protected internal void (int );
    public virtual void   ​ ();
    public virtual int   ​ ();
    public virtual void   ​ (int );
    public sealed virtual byte   ​ ();
    public sealed virtual byte   ​ ();
    public sealed virtual byte   ​ ();
    public sealed virtual void   ​ (Byte[] , int , int );
    public void (int );
    public sealed virtual void   ​ (byte );
    public void (Byte[] , int , int );
    public sealed virtual void   ​ (int );
    public sealed virtual void   ​ ();
    public virtual int   ​ (int );
    public virtual string ToString();
    public abstract virtual int   ​ ();
    public abstract virtual void   ​ (long );
    public abstract virtual void   ​ (int );
    public abstract virtual float   ​  ();
    public abstract virtual short   ​ ();
    public abstract virtual double   ​  ();
    public abstract virtual int   ​ ();
    public abstract virtual long   ​  ();
    public abstract virtual long   ​ ();
    public abstract virtual void   ​ (double );
    public abstract virtual void   ​ (float );
    public abstract virtual void   ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static DocumentModel (   );
    private static void (IEnumerable`1<KeyValuePair`2<string, object>> , DocumentProperties );
    private static Nullable`1<BuiltInDocumentProperty> (string );
    private static string (string );
    private static void (DocumentProperties , Nullable`1<BuiltInDocumentProperty> , string , object );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private int ;
    private Dictionary`2<int, Int32[]> ;
    public   (   , int );
    private static   ();
    public int ();
    private void ();
    public int (int );
    public int (int );
    public int (int );
    public virtual string ToString();
    private int (Byte[] );
    private int (Byte[] );
    private int (Byte[] );
    private int (Int32[] );
    private int (Int32[] );
    private int (Int32[] );
}
internal class    :    {
    [NullableContextAttribute("1")]
public   (   );
    public virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    internal static Int32[] ;
    internal static Int32[] ;
    internal static Int32[] ;
    internal static Int32[] ;
    internal static Int32[] ;
    internal static Int32[] ;
    private static   ();
    internal static int (Int32[] , int , int , int , Int32[] , Int32[] , Int32[] , Int32[]  , Int32[]  , Int32[]  , Int32[]  );
    internal static int (Int32[] , Int32[] , Int32[] , Int32[] ,    );
    internal static int (int , int , Int32[] , Int32[] , Int32[] , Int32[] , Int32[] , Int32[]  ,     );
    internal static int (Int32[] , Int32[] , Int32[][] , Int32[][] ,    );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual Byte[]   ​ (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  :  ​  {
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private  ​  ;
    private  ;
    private static  ​ ();
    private  ​ ( );
    internal static  ​  (    );
    private protected virtual void    ​ (    );
    [CompilerGeneratedAttribute]
public virtual     ​ ();
    public  ​  ();
    private protected virtual        ​  ();
    public string ();
    public void (string );
    public PdfMarkupAnnotationIntent ();
    public void (PdfMarkupAnnotationIntent );
    private protected virtual bool  ​ ​ (PdfMarkupAnnotationIntent );
    public     ();
    public void (    );
    internal virtual        ​ (    );
    internal virtual void    ​ (    );
    private void ( ​  );
}
[DefaultMemberAttribute("")]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
public static    ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
public double  { get; }
    public   (double );
    public   (double , double , double , double );
    private static   ();
    [IsReadOnlyAttribute]
public double ();
    private void (double );
    [IsReadOnlyAttribute]
public double ();
    private void (double );
    [IsReadOnlyAttribute]
public double ();
    private void (double );
    [IsReadOnlyAttribute]
public double ();
    private void (double );
    public double ( );
    public sealed virtual bool Equals(   );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static     op_Implicit(   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private int ;
    private int ;
    private int ;
    private int ;
    internal int ;
    internal int ;
    protected internal   (   ,  );
    public static    (   ,  );
    public virtual      ​ (   , int );
    public virtual string ToString();
    public virtual      ​ (   , int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int , int );
    public virtual int   ​ (int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (   , int );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private int ;
    private double ;
    internal int ;
    internal int ;
    internal    ;
    [DebuggerBrowsableAttribute("0")]
private string DebuggerDisplayValue { get; }
    public   (int );
    public   (int , double );
    private   (int , double , int );
    private string get_DebuggerDisplayValue();
    public void (byte );
    internal void (byte );
    public void (Byte[] , int , int );
    internal void (Byte[] , int , int );
    public    ();
    public    ();
    public    (   , Byte[] , int , int );
    public void (   );
    public void (int );
    internal void ();
    private void (int );
}
internal interface    {
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    [NullableContextAttribute("1")]
public abstract virtual      ​ (int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private string ;
    private string ;
    private Action`1<XmlWriter> ;
    public   (string , string , Action`1<XmlWriter> );
    public string ();
    public string ();
    public Action`1<XmlWriter> ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public static string ;
    public static string ;
    private static   ();
    public virtual void   ​ (int );
}
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
public long ;
    [DebuggerBrowsableAttribute("0")]
public long ;
    [DebuggerBrowsableAttribute("0")]
public long ;
    [DebuggerBrowsableAttribute("0")]
public long ;
    public   (long , long , long , long );
    public   (bool );
    public   (   );
    [IsReadOnlyAttribute]
public long ();
    public void (long );
    [IsReadOnlyAttribute]
public long ();
    public void (long );
    [IsReadOnlyAttribute]
public bool ();
    [IsReadOnlyAttribute]
public   ();
    [IsReadOnlyAttribute]
public bool (  );
    [IsReadOnlyAttribute]
public bool (   );
    [IsReadOnlyAttribute]
public bool (   );
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
public   ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    private    ;
    public   (   ,    ,    ,     );
    public virtual void   ​ (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private    ;
    private int ;
    private bool ;
    private bool ;
    private bool ;
    private ArrayList ;
    internal   (   ,    , int , bool , bool , bool , ArrayList );
    internal    ();
    internal    ();
    internal int ();
    internal bool ();
    internal void (bool );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public ArrayList ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class  ​  : object {
    protected     ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IList`1<KeyValuePair`2<string,    >> ;
    private int ;
    private Dictionary`2<string, string> ;
    private string ;
    private bool ;
    private bool ;
    private bool  ;
    private bool  ;
    private List`1<TextBox>  ;
    private Stack`1< >  ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<KeyValuePair`2<string,    >>   { get; }
    protected  ​ (    , IList`1<KeyValuePair`2<string,    >> , int );
    protected     ();
    protected DocumentModel ();
    protected IDictionary`2<Style, string> ();
    public sealed virtual IDictionary`2<string, string>  ​ ​ ();
    public sealed virtual IList`1<KeyValuePair`2<string,    >>  ​ ​ ();
    public sealed virtual Stream  ​ ​ ();
    protected IDictionary`2<string, Tuple`2<int, bool>> ();
    protected     ();
    protected Paragraph ();
    protected TableRow ();
    protected TableRow  ();
    protected TableCell  ();
    protected int  ();
    protected      ();
    private sealed virtual override string  ​ ​ (Chart );
    protected void (string , BlockCollection );
    protected abstract virtual   <string,    >  ​ ​ (BlockCollection );
    private   <string,    > (Element );
    private static Block (Element );
    private Dictionary`2<string, object> (    , BlockCollection , Dictionary`2& , Predicate`1<   > );
    private void (    , Dictionary`2<string, object> , Dictionary`2<string, object> );
    protected void (    , BlockCollection , Action`1<   > );
    private void (    , TableOfEntries );
    private void (    );
    private void (    , BlockContentControl );
    private void (    ,    , Action );
    private void (    , ContentControlProperties , ContentControlType ,     );
    public static void (    , XmlMapping , bool );
    private static void (    , ContentControlProperties );
    private static void (    ,    );
    private static string (ContentControlType );
    private static void (    , ContentControlProperties , ContentControlType ,     );
    private static void (    , ContentControlProperties );
    private static void (    , ContentControlProperties );
    private static void (    , CheckBoxSymbol , string );
    private static void (    , IEnumerable`1<ContentControlListItem> );
    private static void (    , ContentControlProperties );
    private static void (    , ContentControlProperties );
    private void (    , Paragraph , Action`1<   > );
    protected void (    , Paragraph , Action`1<   > );
    private static List`1<PreservedInline> (InlineCollection , bool );
    protected virtual void  ​ ​ (    );
    private void (    , InlineCollection , bool );
    private void (    , AlignmentTab );
    private void (    , Revision );
    private static bool (IList`1<Revision> , IList`1<Revision> );
    private static bool (Revision , Revision );
    private static void (    , Revision );
    private static void (    , Revision );
    private static void (    , Revision );
    private static void (    , MoveRangeSeparator );
    private static void (    , CommentStart );
    private static void (    , CommentEnd );
    private void (    , InlineContentControl );
    private void (    , PreservedInline );
    private void (    , Run , bool );
    private static bool (Run );
    private void (    , DrawingElement );
    private void (    );
    private void (    , SpecialCharacter );
    private void (    , BookmarkStart );
    private void (    , BookmarkEnd );
    private void (    , Hyperlink );
    private string (string );
    private void (    , Field );
    private static bool (Field );
    private static bool (Field );
    private void (    , string , bool , bool , FormFieldData , string ,   <   > );
    private void (    , Field );
    private static void (    , FormFieldData );
    private static void (    , bool , string , bool );
    private static void (    , FormTextData );
    private static void (    , FormCheckBoxData );
    private static void (    , FormDropDownData );
    private static int (IEnumerable`1<int> );
    private Paragraph (SpecialCharacterType );
    private Dictionary`2<int, Note> (NoteType );
    private void (    , Note );
    private void (    , Table );
    private void (    , TableRow ,     );
    private void (    , TableCell ,     , bool );
    private void (    , TableCell ,     , BlockContentControl );
    private static void (    ,    );
    private static void (    , ​  );
    private static void (    , ​  );
    private static void (    , ​  );
    private static void (    ,  );
    public sealed virtual int  ​ ​ ();
    public sealed virtual string  ​ ​ (Picture );
    public sealed virtual void  ​ ​ (    , BlockCollection );
    public sealed virtual string  ​ ​ (object );
}
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    private   (double );
    private   ( );
    private static bool ( );
    public double ();
    public  ();
    public static    op_Implicit( );
    public static    op_Implicit(double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private static string ;
    public static double ;
    private Int16[] ;
    private int ;
    private    ;
    public   (   , int , int );
    private static   ();
    public virtual string ToString();
    public virtual void   ​ (   ,    );
    public virtual void   ​ (   ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :  {
    [DebuggerBrowsableAttribute("0")]
protected  ;
    [DebuggerBrowsableAttribute("0")]
protected    ;
    protected   (Stream ,  );
    public static    (Stream ,  );
    public  ();
    public void ( );
    public    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    internal static IList`1<string> ;
    private static IEnumerable`1<  > ;
    private    ;
    private ReadOnlyCollection`1<  > ;
    private string ;
    public   (   , IList`1<  > );
    public   (   , IList`1<  > , string );
    private static   ();
    public    ();
    private void (   );
    public ReadOnlyCollection`1<  > ();
    private void (ReadOnlyCollection`1<  > );
    public string ();
    private void (string );
    public sealed virtual    ​ ();
    internal virtual void   ​ (StringBuilder , bool , bool ,    );
    public virtual object   ​ (   );
    public    (   );
    private static    (   ,    );
    public static object (   , IList`1<  > ,    );
    public virtual      ​ (   );
    public virtual IEnumerable`1<  >   ​ ();
    protected bool (   );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
}
internal interface    {
    [NullableContextAttribute("1")]
public abstract virtual      ​ (int , int , int ,    ,    );
    [NullableContextAttribute("1")]
public abstract virtual      ​ (int , int , int ,    ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static IList`1<double> (IList`1<  > ,    , bool );
    public static IList`1<double> (IList`1<  > ,    ,  );
    public static double (IList`1<double> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private Byte[][][] ;
    private int ;
    private int ;
    private int ;
    private int ;
    private int ;
    public   (   );
    public void ( );
    public void (Byte[][] , Int32& , int , Byte[][][] , Int32& , int );
    private void ();
    private void (Byte[][] , Int32& , int , Byte[][][] , Int32& , int );
    private void (Byte[][] , Int32& , int , Byte[][][] , Int32& , int );
    private static void (Byte[][] , int , int , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    private     ;
    private int ;
    [CompilerGeneratedAttribute]
public sealed virtual     ​ ​ ();
    public void (    );
    public int ();
    public void (int );
    public abstract virtual    ​ ();
    public virtual double   ​ ();
    public abstract virtual string   ​ ();
    public virtual string ToString();
    public virtual void   ​ ();
    public virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
private object ;
    internal   (object );
    internal static   [] (Object[] );
    internal void (object );
    public object ();
    public byte ();
    public short ();
    public ushort ();
    public int ();
    public UInt32 ();
    public long ();
    public float  ();
    public double  ();
    public virtual string ToString();
    public Byte[]  ();
    public Byte[]  ();
    public Int16[]  ();
    public UInt16[]  ();
    public Int32[]  ();
    public UInt32[]  ();
    public Int64[]  ();
    public Single[]  ();
    public Double[]  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private string ;
    private string ;
    private int ;
    private bool ;
    private    ;
    private IList`1<  > ;
    private Byte[] ;
    private IList`1<  >  ;
    internal   (int , bool ,    , string ,   [] , string , Byte[] ,   []  );
    public int ();
    public bool ();
    public    ();
    public Oid ();
    public IList`1<  > ();
    public Oid ();
    public Byte[]  ();
    public IList`1<  > ();
    private    (string , bool );
    public Byte[] (string , bool );
    public T (string , bool ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class  ​  :  ​  {
    public static string (object );
    public static string (object );
    public static string (object );
    public static string (object , object );
    public static string (object , object );
    public static string (object );
    public static string (object );
    public static string (object );
    public static string (object );
    public static string  (object );
    public static string (object , object );
    public static string  (object );
    public static string (object , object , object );
    public static string (object , object );
    public static string  (object );
    public static string (object , object );
    public static string (object , object , object );
    public static string (object , object , object );
    public static string (object , object );
    public static string (object , object );
    public static string  (object );
    public static string  (object );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :  ​ {
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public   ();
    public void ( );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public     ();
    public void (   );
    public bool  ();
    public  ​  ();
    public void ( ​ );
    public  ​  ();
    public void ( ​ );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public double ();
    public void (double );
    public   ();
    public void ( );
    public void (double );
    public   ();
    public void ( );
    public bool  ();
    public void  (bool );
    public bool  ();
    public void  (bool );
    public bool  ();
    public void  (bool );
    public      ();
    public void (    );
    public bool  ();
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void  (double );
    public bool  ();
    public void  (bool );
    public double  ();
    public void  (double );
    public bool  ();
    public void  (bool );
    public double  ();
    public void  (double );
    public     ();
    public void (   );
    internal double  ();
    internal void  (double );
    internal bool  ();
    public bool  ();
    public void  (bool );
    public bool  ();
    public void  (bool );
    public bool  ();
    public void  (bool );
    public bool  ();
    public void  (bool );
    public bool  ();
    public void  (bool );
    public bool  ();
    public void  (bool );
    public int  ();
    public void (int );
    internal bool  ();
    internal void  (bool );
    private int  ();
    internal double (int );
    internal double (int );
    public virtual bool Equals(object );
    public sealed virtual bool Equals(   );
    public virtual int GetHashCode();
}
internal class    :    {
    [NullableContextAttribute("1")]
internal   (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    [ExtensionAttribute]
public static void (   , TValue& , TValue );
    [ExtensionAttribute]
public static TValue (  <TValue> );
    [ExtensionAttribute]
public static TValue (  <TValue> );
    [ExtensionAttribute]
public static TParameter (  <TValue> , Func`2<TValue, TParameter> );
    [IteratorStateMachineAttribute("  /")]
[ExtensionAttribute]
public static IEnumerable`1<TDerivedValue> (  <TValue> );
    [IteratorStateMachineAttribute("  /")]
[ExtensionAttribute]
public static IEnumerable`1<TValueOut> (  <TValueIn> , Func`2<TValueIn, TValueOut> );
    [IteratorStateMachineAttribute("  /")]
[ExtensionAttribute]
public static IEnumerable`1<TValue> (  <TValue> ,   <TValue> , TValue[] );
    [ExtensionAttribute]
public static void  (  <TValue> , Action`2<TValue, TParameter> , TParameter );
    [ExtensionAttribute]
public static void  (  <TValue> , TValue );
    [ExtensionAttribute]
public static void  (  <TValue> , TValue );
    [ExtensionAttribute]
private static void  (  <TValue> , TValue , bool );
    public static TValue  (IDictionary`2<TValue, TValue> , object , TValue );
    public static void  (TValue& , object );
    public static void  (TValue& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    internal    ;
    internal MemoryStream ;
    internal bool ;
    internal int ;
    internal int ;
    internal int ;
    internal   (   );
    internal   (MemoryStream );
    internal int ();
    internal int (int );
    internal virtual void   ​ ();
    internal virtual void   ​ (   );
    internal virtual void   ​ (MemoryStream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private    ;
    private    ;
    private string ;
    private object ;
    public   (   ,    );
    public void (Stream );
    private void (XmlWriter );
    private void (XmlWriter , bool );
    private void (XmlWriter ,    );
    private void (XmlWriter );
    private void (XmlWriter );
    private string ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private int ;
    private int ;
    private bool ;
    private bool ;
    private int ;
    private Int16[] ;
    private Int32[] ;
    private int  ;
    private int  ;
    public void (int );
    public void (short );
    public void (int );
    public void (Int16[] );
    public void (Int32[] );
    public Int32[] ();
    public int ();
    public int ();
    public bool ();
    public bool  ();
    public int ();
    public Int16[]  ();
    public int ();
    public void (int );
    public void (int );
    public void (int );
    public int ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    [ThreadStaticAttribute]
private static    ;
    private List`1<  > ;
    private static   [] ;
    private static   ();
    private static    ();
    public static   [] (List`1<   > , double );
    private void (int , int ,     ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private     ;
    private     ;
    private List`1<  > ;
    public   ( ​ );
    public sealed virtual bool   ​ ();
    private sealed virtual override List`1<  >   ​ ();
    private sealed virtual override       ​ (   & modreq(System.Runtime.InteropServices.InAttribute) , double );
    private sealed virtual override bool   ​ (   & modreq(System.Runtime.InteropServices.InAttribute) , Nullable`1& , Boolean& );
    private sealed virtual override bool   ​ (   & modreq(System.Runtime.InteropServices.InAttribute) , Nullable`1& , Boolean& );
    private sealed virtual override       ​ ();
    private sealed virtual override void   ​ (    );
    private sealed virtual override       ​ ();
    private sealed virtual override void   ​ (    );
    private sealed virtual override double   ​ ();
    private sealed virtual override double   ​ ();
    private sealed virtual override bool   ​ ();
    private sealed virtual override      ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    public bool CanRead { get; }
    public bool CanWrite { get; }
    protected   (Stream , bool );
    public sealed virtual bool get_CanRead();
    public sealed virtual bool get_CanWrite();
    public abstract virtual int Read(Byte[] , int , int );
    public sealed virtual void Write(Byte[] , int , int );
    public sealed virtual void WriteByte(byte );
    public sealed virtual void Flush();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  :  ​  {
    private string ;
    public  ​ (string );
    public virtual   ​ ​ ();
    public string ();
    public void (string );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : ​  {
    [DebuggerBrowsableAttribute("0")]
private static [] ;
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    [DebuggerBrowsableAttribute("0")]
public  ​  { get; public set; }
    private static   ();
    public  ​ ();
    public void ( ​ );
    public  ​ ();
    public void ( ​ );
    protected virtual IEnumerable`1<>  ​​ ();
    public virtual  ​  ​​ ( );
    public virtual void  ​​ ( ,  ​ );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    internal static T ();
    internal static T ();
    private static Assembly ();
    private static IEnumerable`1<Type> (Assembly );
    private static T (IEnumerable`1<Type> );
}
internal class    : Exception {
    [NullableContextAttribute("1")]
protected   (SerializationInfo , StreamingContext );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class    : KeyedCollection`2<, > {
    internal   (IEqualityComparer`1<> );
    internal void ( );
    public bool ( , & );
    protected sealed virtual void InsertItem(int ,  );
    protected sealed virtual void RemoveItem(int );
    protected sealed virtual void SetItem(int ,  );
    protected sealed virtual void ClearItems();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    public int ;
    public int ;
    public int ;
    public int ;
    public int ;
    public int ;
    public bool ;
    public abstract virtual int   ​ ();
    public abstract virtual object   ​ ();
    public abstract virtual void   ​ (object );
    public static int (int );
    public virtual string ToString();
}
internal class    : object {
    private  ;
    private  ;
    private  ;
    public  ();
    public void ( );
    public  ();
    public void ( );
    public  ();
    public void ( );
    [NullableContextAttribute("1")]
internal    ();
}
internal class    : object {
    private bool ;
    [NullableAttribute("1")]
internal Int16[] ;
    public bool ();
    public void (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :   <​ > {
    public virtual    ​ ();
    public     ();
    public bool (​  );
    public virtual void   ​ ();
    [IteratorStateMachineAttribute("  /")]
protected virtual IEnumerable`1<​ >   ​ ();
}
internal class    :    {
    [NullableContextAttribute("1")]
public   (   );
    public virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    [DebuggerBrowsableAttribute("0")]
private X509Certificate2 ;
    internal   (X509Certificate2 );
    public virtual Byte[]   ​ (Byte[] , string , object );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class  ​  :     {
    public static  ​  ;
    public static  ​  ;
    public static  ​  ;
    public static  ​  ;
    public static  ​  ;
    public static  ​  ;
    public static  ​  ;
    public static  ​   ;
    public static  ​   ;
    public static  ​   ;
    public static  ​   ;
    public static  ​   ;
    public static  ​   ;
    public static  ​   ;
    public static  ​   ;
    public static  ​   ;
    public static  ​   ;
    public static  ​   ;
    public static  ​   ;
    public static  ​   ;
    public static  ​   ;
    private static  ​ ();
    [IteratorStateMachineAttribute(" ​ /")]
public static IEnumerable`1< ​ > ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    private string ;
    internal ​  (​   , ​   , string );
    protected virtual string ​  ​ ();
    internal virtual string ​  ​ ();
    internal virtual DateTime ​  ​ ();
    internal virtual Stream ​  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   :     {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public ​    { get; }
    public string HelpLink { get; public set; }
    private protected ​  (string , ​   );
    [NullableContextAttribute("2")]
public ​   ();
    private protected abstract virtual ​   ​  ​ ();
    public sealed virtual string get_HelpLink();
    public sealed virtual void set_HelpLink(string );
    public IEnumerable`1<> ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    internal ​   ;
    internal ​  [] ;
    internal ​   ;
    internal IDictionary`2<UInt32, ​  > ;
    private ​  (​   , ​   , ​  [] , ​   , IDictionary`2<UInt32, ​  > );
    internal static ​   (​   , UInt32 , ushort , ​​  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ValueType {
    [DebuggerBrowsableAttribute("0")]
internal static IComparer`1<​  > ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    internal ​  (int , ​   );
    private static ​  ();
    [IsReadOnlyAttribute]
public int ();
    [IsReadOnlyAttribute]
public ​   ();
    [IteratorStateMachineAttribute("​  /")]
internal static IEnumerable`1<​  > (IEnumerable`1<​  > , int );
    public sealed virtual bool Equals(​   );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public virtual string ToString();
    public static bool op_Equality(​   , ​   );
    public static bool op_Inequality(​   , ​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
public static bool ;
    [DebuggerBrowsableAttribute("0")]
private Bitmap ;
    [DebuggerBrowsableAttribute("0")]
private Graphics ;
    [DebuggerBrowsableAttribute("0")]
private StringFormat ;
    public ​  (double );
    private static ​  ();
    private static bool ();
    protected virtual     ​  ​ (string , Font , double , Int32& );
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : object {
    internal ​   ;
    internal     ;
    private ​   ;
    private ​   ;
    public ​  (​   , ​   );
    public     ();
    public void (​   , bool );
    public Stream ( ,  , ​   );
    public ​   (​   , ​   );
    public ​   ();
    public ​   ();
    public void ( , ​   );
}
internal class ​   : ​   {
    [NullableContextAttribute("1")]
internal static ​   ();
    public virtual UInt32 ​  ​ ();
    protected virtual bool ​  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   : object {
    public abstract virtual Type ​  ​ ();
    public abstract virtual     ​  ​ (​   );
}
internal class ​   : ​   {
    [NullableContextAttribute("1")]
internal static ​   ();
    public virtual UInt32 ​  ​ ();
    protected virtual bool ​  ​ ();
}
internal interface ​   {
    public abstract virtual int ​  ​ (int );
}
[DefaultMemberAttribute("")]
internal class ​   : object {
    [NullableAttribute("1")]
internal UInt16[] ;
    public int  { get; }
    [NullableContextAttribute("1")]
public ​  (UInt16[] );
    public sealed virtual int    ​ (int );
}
internal class ​   : ValueType {
    [DebuggerBrowsableAttribute("0")]
public static ​   ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    internal ​  (int , int );
    private static ​  ();
    [IsReadOnlyAttribute]
public int ();
    [IsReadOnlyAttribute]
public int ();
    public sealed virtual bool Equals(​   );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static bool op_Equality(​   , ​   );
    public static bool op_Inequality(​   , ​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : object {
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private <IEnumerable`1<KeyValuePair`2<CultureInfo, string>>> ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private <IEnumerable`1<KeyValuePair`2<CultureInfo, string>>> ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private <IEnumerable`1<KeyValuePair`2<CultureInfo, string>>> ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private <IEnumerable`1<KeyValuePair`2<CultureInfo, string>>> ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private <IEnumerable`1<KeyValuePair`2<CultureInfo, string>>> ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private <IEnumerable`1<KeyValuePair`2<CultureInfo, string>>> ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private <CultureInfo>  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private <string>  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private <string>  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private <string>  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private <string>  ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<KeyValuePair`2<CultureInfo, string>>   { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<KeyValuePair`2<CultureInfo, string>>   { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<KeyValuePair`2<CultureInfo, string>>   { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<KeyValuePair`2<CultureInfo, string>>   { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<KeyValuePair`2<CultureInfo, string>>   { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<KeyValuePair`2<CultureInfo, string>>   { get; }
    internal ​  (​   );
    public IEnumerable`1<KeyValuePair`2<CultureInfo, string>> ();
    public IEnumerable`1<KeyValuePair`2<CultureInfo, string>> ();
    public IEnumerable`1<KeyValuePair`2<CultureInfo, string>> ();
    public IEnumerable`1<KeyValuePair`2<CultureInfo, string>> ();
    public IEnumerable`1<KeyValuePair`2<CultureInfo, string>> ();
    public IEnumerable`1<KeyValuePair`2<CultureInfo, string>> ();
    public CultureInfo ();
    public string  ();
    public string  ();
    public string  ();
    public string  ();
    public void (bool , IEnumerable`1& , IEnumerable`1& , Boolean& , Boolean& );
    private void (& ,  );
    private void (& , IEnumerable`1<KeyValuePair`2<CultureInfo, string>> );
    private void  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    internal ​  (    , ​   );
    protected virtual void    ​ ();
    protected virtual void    ​ ();
    protected virtual        ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    internal virtual IEnumerable`1<​  > ​  ​ ();
    internal virtual     ​  ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class ​   : object {
    [DebuggerBrowsableAttribute("0")]
internal static Byte[] ;
    [DebuggerBrowsableAttribute("0")]
internal static Byte[] ;
    [DebuggerBrowsableAttribute("0")]
internal static Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private static string ;
    private static ​  ();
    private static string ();
    internal static char (int );
    internal static bool (int , Int32& );
    internal static byte (int , bool );
    internal static bool (int , Int32& );
    public static char (int );
    public static bool (int );
    public static bool (int );
    internal static bool (int );
    internal static bool (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<byte, int> ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
internal ushort ;
    [DebuggerBrowsableAttribute("0")]
internal short ;
    [DebuggerBrowsableAttribute("0")]
internal ushort ;
    [DebuggerBrowsableAttribute("0")]
internal ushort ;
    [DebuggerBrowsableAttribute("0")]
internal ushort ;
    [DebuggerBrowsableAttribute("0")]
internal short  ;
    [DebuggerBrowsableAttribute("0")]
internal short  ;
    [DebuggerBrowsableAttribute("0")]
internal short  ;
    [DebuggerBrowsableAttribute("0")]
internal short  ;
    [DebuggerBrowsableAttribute("0")]
internal short  ;
    [DebuggerBrowsableAttribute("0")]
internal short  ;
    [DebuggerBrowsableAttribute("0")]
internal short  ;
    [DebuggerBrowsableAttribute("0")]
internal short  ;
    [DebuggerBrowsableAttribute("0")]
internal short  ;
    [DebuggerBrowsableAttribute("0")]
internal short  ;
    [DebuggerBrowsableAttribute("0")]
private short  ;
    [DebuggerBrowsableAttribute("0")]
private byte  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private UInt32  ;
    [DebuggerBrowsableAttribute("0")]
private UInt32  ;
    [DebuggerBrowsableAttribute("0")]
private UInt32  ;
    [DebuggerBrowsableAttribute("0")]
private UInt32  ;
    [DebuggerBrowsableAttribute("0")]
private UInt32  ;
    [DebuggerBrowsableAttribute("0")]
internal ushort  ;
    [DebuggerBrowsableAttribute("0")]
private ushort  ;
    [DebuggerBrowsableAttribute("0")]
private ushort  ;
    [DebuggerBrowsableAttribute("0")]
internal short  ;
    [DebuggerBrowsableAttribute("0")]
internal short  ;
    [DebuggerBrowsableAttribute("0")]
internal short  ;
    [DebuggerBrowsableAttribute("0")]
internal ushort  ;
    [DebuggerBrowsableAttribute("0")]
internal ushort  ;
    [DebuggerBrowsableAttribute("0")]
private UInt32  ;
    [DebuggerBrowsableAttribute("0")]
private UInt32  ;
    [DebuggerBrowsableAttribute("0")]
internal short  ;
    [DebuggerBrowsableAttribute("0")]
internal short  ;
    [DebuggerBrowsableAttribute("0")]
private ushort  ;
    [DebuggerBrowsableAttribute("0")]
private ushort  ;
    [DebuggerBrowsableAttribute("0")]
private ushort  ;
    [DebuggerBrowsableAttribute("0")]
private ushort  ;
    [DebuggerBrowsableAttribute("0")]
private ushort  ;
    private static ​  ();
    internal static ​   ();
    public virtual UInt32 ​  ​ ();
    protected virtual bool ​  ​ ();
    public     ();
    public byte ();
    public bool ();
    public void (bool );
    public Nullable`1<bool> ();
    internal void (Nullable`1<bool> );
    public Nullable`1<bool> ();
    internal void (Nullable`1<bool> );
    internal virtual void ​  ​ (​​  , UInt32 );
    internal virtual UInt32 ​  ​ (​​  , Nullable`1& );
    internal virtual ​   ​  ​ (ICollection`1<ushort> );
    internal virtual void ​  ​ (​   , ICollection`1<ushort> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ​   ;
    internal ​  (Stream , ​   );
    public ​   ();
    internal  (long );
    internal  (bool );
    internal void (​   );
    protected virtual void    ​ (​   );
    protected virtual       ​ (   );
    internal long (​   );
    private void (​   );
    internal long (​   );
    private void (​   );
    private void (​   );
    internal void ( );
    internal void (​   );
    internal void (long );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    [NullableAttribute("2")]
private     ;
    private    ;
    private    ;
    public   (    , IDictionary`2<string, double> );
    public    ();
    public void (   );
    public    ();
    public void (   );
    private static void ( ,    ,     , double );
    private static     (    ,     , double );
    private static  (   ,     , double );
    private static double (  ,     , double );
    public virtual       ​ (   );
    public virtual []   ​ (   );
    public virtual       ​ (    );
}
internal class    :    {
    [NullableContextAttribute("1")]
public   (   , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (   );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual IEnumerable`1<>   ​ ();
    public abstract virtual bool   ​ ();
    public abstract virtual   <>   ​ ();
    public abstract virtual TValue   ​ (Func`2<, TValue> );
    public abstract virtual void   ​ (Action`2<, TValue> , TValue );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public    ;
    public    ;
    public    ;
    public    ;
    public    ;
    public    ;
    public    ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public     ;
    public   (int , int );
    public virtual      ​ ();
    public virtual object   ​ ();
}
internal interface    {
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private Byte[][] ;
    private Int32[] ;
    private int ;
    public Byte[]  { get; }
    public Byte[] (int );
    public void (Byte[][] , Int32[] , int );
}
internal class    : object {
    private double ;
    private Nullable`1<double> ;
    private Nullable`1<double> ;
    internal   (double , Nullable`1<double> , Nullable`1<double> );
    public double ();
    public Nullable`1<double> ();
    public Nullable`1<double> ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private     ;
    private     ;
    private List`1<  > ;
    private    ;
    public   (double , double , double );
    public    ();
    public void (   );
    public sealed virtual bool   ​ ();
    private sealed virtual override List`1<  >   ​ ();
    private sealed virtual override       ​ (   & modreq(System.Runtime.InteropServices.InAttribute) , double );
    private sealed virtual override bool   ​ (   & modreq(System.Runtime.InteropServices.InAttribute) , Nullable`1& , Boolean& );
    private sealed virtual override bool   ​ (   & modreq(System.Runtime.InteropServices.InAttribute) , Nullable`1& , Boolean& );
    private sealed virtual override       ​ ();
    private sealed virtual override void   ​ (    );
    private sealed virtual override       ​ ();
    private sealed virtual override void   ​ (    );
    private sealed virtual override double   ​ ();
    private sealed virtual override double   ​ ();
    private sealed virtual override bool   ​ ();
    private sealed virtual override      ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (Stream , bool );
    private   (DeflateStream );
    public static Stream (Stream , bool );
    public virtual int Read(Byte[] , int , int );
    public virtual int ReadByte();
    protected virtual void Dispose(bool );
    private static DeflateStream (Stream , bool );
    private static DeflateStream (Stream , bool );
    private static bool (Stream , Byte[] , Int32& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class  ​  : object {
    private static Byte[][] ;
    private static  ​  ;
    private static  ​ ();
    private static  (int );
    [IteratorStateMachineAttribute(" ​ /")]
public static IEnumerable`1<int> (string );
    public static bool (string , int , Int32& );
    private static  (string , int , Int32& );
    private static  (string , int , Int32& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private  ​ ;
    private    ;
    private    ;
    private Action`1<double> ;
    public   (   );
    [CompilerGeneratedAttribute]
public sealed virtual  ​  ​​ ();
    public    ();
    public void (   );
    [CompilerGeneratedAttribute]
public sealed virtual     ​​ ();
    public Action`1<double> ();
    public void (Action`1<double> );
    public bool ();
    public virtual      ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    protected internal   (   ,    ,    , ​  , ​  , ​  );
    public virtual int   ​ ();
    public static    (   ,    ,    , ​  , ​  , ​  );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    private UInt32 ;
    protected string ;
    protected string ;
    private ushort ;
    private  ;
    private  ;
    private UInt32 ;
    private UInt32  ;
    private UInt32  ;
    private Guid  ;
    private UInt32  ;
    private UInt32  ;
    private ulong  ;
    internal   (UInt32 );
    public UInt32 ();
    internal void (UInt32 );
    public string ();
    public string  ();
    protected void (string );
    public ushort  ();
    public   ();
    protected void ( );
    public   ();
    internal void ( );
    public UInt32 ();
    internal void (UInt32 );
    public UInt32 ();
    internal void (UInt32 );
    public UInt32 ();
    protected void (UInt32 );
    public Guid  ();
    protected void (Guid );
    public UInt32 ();
    protected void (UInt32 );
    public UInt32 ();
    protected void (UInt32 );
    public ulong  ();
    protected void (ulong );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private object ;
    public   (object );
    public virtual    ​ ();
    internal virtual void   ​ (StringBuilder , bool , bool ,    );
    public virtual object   ​ (   );
    public virtual      ​  (   );
    public virtual      ​ (   );
    [IteratorStateMachineAttribute("  /")]
public virtual IEnumerable`1<  >   ​ ();
    private bool (   );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    private sealed virtual override object   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    internal static UInt32[] ;
    internal static Int32[] ;
    internal static Int32[] ;
    internal static Int32[] ;
    internal    ;
    internal Int32[] ;
    internal Int32[] ;
    internal UInt32  ;
    internal UInt32  ;
    internal UInt32  ;
    internal UInt32  ;
    internal bool  ;
    internal Int32[]  ;
    public   (   , int , Int32[] );
    private static   ();
    public virtual int   ​ ();
    public virtual      ​ ();
    internal bool (Int32[] , int , UInt32 );
    public void (Int32[] , Int32[] , int );
    public int (int );
    public virtual bool   ​ ();
    private void ();
    public void (int );
    public void ();
    public void (Byte[] , int , int );
    private void ();
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual object   ​ ();
    public abstract virtual    ​ ();
    public abstract virtual string   ​ (Func`2<FontsData, string> );
    public abstract virtual void   ​ (Func`2<FontsData, FontsData> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private  ;
    private    ;
    private Int32[] ;
    private Int32[] ;
    private Int32[] ;
    private Int32[] ;
    private Int32[] ;
    private Int32[]  ;
    public   (   );
    public void (  [] , Int32[] , int , Byte[][] , int , int );
    private void ();
    private void ();
    private void (  [] , int , Byte[][] , int , int );
    private void ();
    private void (  [] , int , Byte[][] , int , int );
    private void (  [] , int , Byte[][] , int , int );
    private void (  [] , int , Byte[][] , int , int );
    private void (  [] , int , Byte[][] , int , int );
    private void (  [] , int , Byte[][] , int , int );
    private void (  [] , int , Byte[][] , int , int );
    private void  (  [] , int , Byte[][] , int , int );
    private void  (  [] , int , Byte[][] , int , int );
    private void  (  [] , int , Byte[][] , int , int );
    private void  (  [] , int , Byte[][] , int , int );
    private static int (double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    private   <> ;
    public   <> ();
    private void (  <> );
    [IteratorStateMachineAttribute("  /")]
protected virtual IEnumerable`1<  >   ​ ();
    public void (    );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public virtual bool   ​ ( ,  ,   [] );
    public virtual   []   ​ ( ,  );
    public virtual void   ​ ( , Stream ,  );
    private static bool (   , Int32& ,   [] );
    private static int ( , int , string );
    private static void (String& , string , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static    ;
    private static   ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : ValueType {
    [DebuggerBrowsableAttribute("0")]
internal static MemoryStream ;
    [DebuggerBrowsableAttribute("0")]
internal static MemoryStream ;
    [DebuggerBrowsableAttribute("0")]
private static Size ;
    [DebuggerBrowsableAttribute("0")]
private static Regex ;
    [DebuggerBrowsableAttribute("0")]
private MemoryStream ;
    [DebuggerBrowsableAttribute("0")]
private PictureFormat ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    private  ​ (MemoryStream , PictureFormat , string );
    private static  ​ ();
    [IsReadOnlyAttribute]
public PictureFormat ();
    [IsReadOnlyAttribute]
public string ();
    public MemoryStream ();
    public static  ​  (MemoryStream , PictureFormat );
    public static  ​  (Stream , PictureFormat );
    public static  ​  (string , PictureFormat );
    public static Tuple`2< ​ , Size> (Stream , string , bool , string , bool , bool , Nullable`1<PictureFormat> );
    private static Size (MemoryStream , bool );
    public static string (string , string );
    private static bool (MemoryStream , PictureFormat& );
    public static bool (string , PictureFormat& );
    public static bool (string , PictureFormat& );
    public static string (PictureFormat );
    public Size ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :  ​<  ,   > {
    public   (   );
}
internal class    : InvalidOperationException {
    [NullableContextAttribute("1")]
public   (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private List`1<  > ;
    private List`1<  > ;
    private List`1<  > ;
    internal   (string ,    );
    internal List`1<  > ();
    internal List`1<  > ();
    public void (string , Stream );
    public    (string );
    public void (Guid );
    internal List`1<  > ();
    private List`1<  > (List`1<  > );
    internal void ();
    private UInt32 ();
    private UInt32 (List`1<  > , int , int );
    private static int (List`1<  > );
    protected int (   ,    );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    [ExtensionAttribute]
public static void (T[0...,0...] , int , bool , bool );
    [ExtensionAttribute]
public static void (T[0...,0...] , IEnumerable`1<U> , bool , bool );
    private static void (int , int , int , <T, U> ,  );
    private static void (int , int , <T, U> ,  );
}
internal class    : ValueType {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public static DocumentModel (Stream , string , XmlLoadOptions );
    private static void (Stream , Stream );
    private static void (    , Stream );
    private static Byte[] (string );
    private static void (IList`1<Tuple`2<string, string>> , ZipArchive , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private int ;
    private List`1<Byte[]> ;
    public   (   , int );
    private static   ();
    public int ();
    internal void ();
    public int (int );
    public short (int );
    public short (int );
    public virtual string ToString();
    private int (Byte[] );
    private short (Byte[] );
    private short (Byte[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public Int64[] ;
    public static int ;
    public static int ;
    public long ;
    public   (long );
    private static   ();
    public long ();
    public void (bool );
    public void (long , long , bool );
    public void (long ,    , long , long );
    public void (long , bool );
    public void (long );
    public void (long );
    public bool (long );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    internal static Int16[] ;
    internal static Int16[] ;
    internal static    ;
    internal static    ;
    internal static    ;
    internal Int16[] ;
    internal Int32[] ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal   (Int16[] , Int32[] , int , int , int );
    private static   ();
}
internal class    : object {
    [NullableAttribute("1")]
public static    ;
    private static   ();
    [NullableContextAttribute("1")]
public sealed virtual Byte[]   ​ (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  :    <   > {
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<   , > ;
    [DebuggerBrowsableAttribute("0")]
private static    <,    > ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private    []  ;
    [DebuggerBrowsableAttribute("0")]
private Byte[]  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<>  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private List`1<   >  ;
    [DebuggerBrowsableAttribute("0")]
private Int32[]  ;
    [DebuggerBrowsableAttribute("0")]
private Byte[]  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected HashSet`1<<   >>   { get; }
    internal  ​ (Stream );
    private static  ​ ();
    public bool ();
    [IteratorStateMachineAttribute(" ​ /")]
internal static IEnumerable`1<   > (Stream , long , long );
    protected virtual int    ​ ();
    protected virtual void    ​ (int , Int32& , Int32& );
    protected virtual void    ​ (int , Double& , Double& );
    protected virtual    []    ​ (int );
    protected virtual Byte[]    ​ (int );
    [NullableContextAttribute("2")]
internal virtual        ​ ();
    [NullableContextAttribute("2")]
internal virtual        ​ (int );
    internal virtual        ​ (int ,  );
    protected virtual IDictionary`2<   , >    ​ ();
    protected virtual    <,    >    ​ ();
    protected virtual HashSet`1<<   >>    ​ ();
    protected virtual int    ​ (    );
    protected virtual        ​ (int );
    [NullableContextAttribute("0")]
protected virtual bool    ​ (int , ArraySegment`1<byte> ,     ,  ​  , ArrayPool`1<byte> );
    private    ();
    private Stream ();
    private static     (    );
    private sealed virtual override int  ​ ​ ();
    private sealed virtual override int  ​ ​ ();
    private sealed virtual override int  ​ ​ ();
    private sealed virtual override double  ​ ​ ();
    private sealed virtual override double  ​ ​  ();
    private sealed virtual override Byte[]  ​ ​  ();
    private sealed virtual override bool  ​ ​ (int );
    private sealed virtual override Byte[]  ​ ​ (Boolean& );
    private static void (    ,  ,    [] , Byte[] , int , Nullable`1<> , Int32[] );
    private void (    );
    private void (int ,     );
    private void (    );
    private void (    , ArrayPool`1<byte> );
    private void (    );
    private void (    );
    private void (    , ArrayPool`1<byte> );
    private void (int ,     ,     , ArrayPool`1<byte> );
    private void (    ,     , ArrayPool`1<byte> , Func`4< ​ , int, ArrayPool`1<byte>, Byte[]> , Func`4< ​ , int, ArrayPool`1<byte>, Byte[]> );
    private void (    , ArrayPool`1<byte> );
    private void (    ,     , ArrayPool`1<byte> , Func`4< ​ , int, ArrayPool`1<byte>, Byte[]> , Func`4< ​ , int, ArrayPool`1<byte>, Byte[]> );
    private void (    ,     , ArrayPool`1<byte> , Func`4< ​ , int, ArrayPool`1<byte>, Byte[]> );
    private void (    , ArrayPool`1<byte> );
    private sealed virtual override void  ​ ​ (    ,     , ArrayPool`1<byte> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private Dictionary`2<string, > ;
    internal int ;
    internal int ;
    internal int ;
    internal int ;
    internal int ;
    internal   (Dictionary`2<string, > );
    internal void ( ​ );
    internal void ( ​ , string , int );
    internal int (string );
    internal bool (string , & );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private   (Bitmap );
    internal static    (object );
    private static int (PixelFormat );
    private static int (PixelFormat );
    private static Boolean[] (PixelFormat );
    private static Int32[][] (Bitmap );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual Stream   ​ ();
    public abstract virtual void   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ (Byte[] , int , int );
    public abstract virtual int   ​ (Char[] , int , int );
    public abstract virtual bool   ​ ();
    public abstract virtual byte   ​ ();
    public abstract virtual Byte[]   ​ (int );
    public abstract virtual Byte[]   ​ (long , int );
    public abstract virtual char   ​  ();
    public abstract virtual Char[]   ​ (int );
    public abstract virtual decimal   ​  ();
    public abstract virtual double   ​  ();
    public abstract virtual short   ​  ();
    public abstract virtual int   ​ ();
    public abstract virtual long   ​  ();
    public abstract virtual sbyte   ​  ();
    public abstract virtual float   ​  ();
    public abstract virtual string   ​  ();
    public abstract virtual ushort   ​  ();
    public abstract virtual UInt32   ​  ();
    public abstract virtual ulong   ​  ();
    public abstract virtual int   ​ (Byte[] , int );
    public abstract virtual int   ​ (Byte[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static int (IEnumerable`1<T> , T , IEqualityComparer`1<T> );
    public static int (IEnumerable`1<T> , T );
    public static void (IEnumerable`1<T> , T[] , int );
    [IteratorStateMachineAttribute("  /")]
public static IEnumerable`1<T> (IList`1<T> , int , int );
    public static bool (bool , IEnumerable`1<T> , Func`2<T, TValue> , TValue , IComparer`1<TValue> , TValue& , T& );
    public static bool (IEnumerable`1<T> , Func`2<T, TValue> , TValue , TValue& , T& );
    public static TValue (IEnumerable`1<T> , Func`2<T, TValue> , TValue , IComparer`1<TValue> );
    public static TValue  (IEnumerable`1<T> , Func`2<T, TValue> , TValue );
    public static TValue  (IEnumerable`1<T> , Func`2<T, TValue> , TValue , IComparer`1<TValue> );
    public static TValue  (IEnumerable`1<T> , Func`2<T, TValue> , TValue );
    public static TKey  (IEnumerable`1<KeyValuePair`2<TKey, TValue>> , TValue& );
    [IteratorStateMachineAttribute("  /")]
public static IEnumerable`1<T>  ();
    [IteratorStateMachineAttribute("  /")]
public static IEnumerable`1<T>  (T );
    public static Dictionary`2<TKey, TValue>  (IEnumerable`1<T> , Func`2<T, TKey> , Func`2<T, TValue> , IEqualityComparer`1<TKey> , bool );
    public static void  (IDictionary`2<TKey, int> , TKey , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public static int ;
    private Stream ;
    private int ;
    private int ;
    private Byte[] ;
    private    ;
    public   (   );
    public   (string );
    public   (Stream );
    private static   ();
    public virtual void   ​ ();
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual      ​ (   , int );
    public virtual      ​ (   , int );
    private byte ();
    private void ();
    private void ();
    private int ();
    public virtual bool   ​ (int );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private static Regex ;
    private static Regex ;
    private string ;
    private string ;
    private string ;
    private string ;
    private string ;
    private string  ;
    private string  ;
    private string  ;
    private string  ;
    private string  ;
    private string  ;
    private bool  ;
    private bool  ;
    private bool  ;
    private bool  ;
    private static   ();
    public string ();
    private void (string );
    public string ();
    private void (string );
    public string ();
    private void (string );
    public string ();
    private void (string );
    public string ();
    private void (string );
    public string ();
    private void (string );
    public string ();
    private void (string );
    public string  ();
    private void  (string );
    public string  ();
    private void  (string );
    public string  ();
    private void  (string );
    public string  ();
    private void  (string );
    public bool  ();
    private void (bool );
    public bool  ();
    private void (bool );
    public bool  ();
    private void (bool );
    public bool  ();
    private void (bool );
    public static     (string );
    public static     (string );
    private static string (Group , Group , Boolean& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private int ;
    private int ;
    private bool ;
    internal   (   );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public int ();
    public void (int );
    public int ();
    public void (int );
    public bool ();
    public void (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :   <  > {
    private   <  > ;
    public   (    , int );
    public   <  > ();
    private void (  <  > );
    public virtual    ​ ();
    public double ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    internal Single[][] ;
    internal float ;
    internal float ;
    internal float ;
    internal int ;
    internal int ;
    internal int ;
    internal float  ;
    internal float  ;
    internal float  ;
    internal float  ;
    internal float  ;
    internal float  ;
    public   (Single[] , Single[] , Single[] , float , float , float , int , int  , int  , float  , float  , float  , float  , float  , float  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    internal   (string , Byte[] );
    public Oid ();
    public Byte[] ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : object {
    private double ;
    private int ;
    private Random ;
    private StringBuilder ;
    public  ​ (double , int );
    public string (string );
    private void (int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    public    ();
    public void (   );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual T   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : Exception {
    public   (string );
    protected   (SerializationInfo , StreamingContext );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public sealed virtual bool Equals([] , [] );
    public sealed virtual int GetHashCode([] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public Int32[] ;
    public   (int , int , int , int );
    public   (   );
    public virtual int   ​ ();
    public virtual object   ​ ();
    public virtual void   ​ (object );
    public virtual Int32[]   ​ ();
    public virtual void   ​ (Int32[] );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : Brush {
    [DebuggerBrowsableAttribute("0")]
private object ;
    internal object ();
    internal void (object );
    internal virtual Brush yadjc6t8nyxlm35mx8quun4zaux2kjyh​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private int ;
    private int ;
    private int ;
    private int ;
    private int ;
    private int ;
    private int ;
    private int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal bool  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal int  ;
    internal     ;
    internal void (   );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int  ();
    public void  (int );
    public int  ();
    internal static   []  (int );
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :   <  > {
    public virtual    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public virtual bool   ​ ( ,  ,   [] );
    public virtual   []   ​ ( ,  );
    public virtual void   ​ ( , Stream ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private AsymmetricKeyParameter ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private object ;
    [DebuggerBrowsableAttribute("0")]
private IDigest ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int>  ;
    public string AlgorithmName { get; }
    internal   (   , AsymmetricKeyParameter , string , object , string );
    [CompilerGeneratedAttribute]
public sealed virtual string get_AlgorithmName();
    public sealed virtual void Init(bool , ICipherParameters );
    public sealed virtual void Reset();
    public sealed virtual void Update(byte );
    public sealed virtual void BlockUpdate(Byte[] , int , int );
    public sealed virtual int GetMaxSignatureSize();
    public sealed virtual Byte[] GenerateSignature();
    public sealed virtual bool VerifySignature(Byte[] );
    private static BigInteger (AsymmetricKeyParameter );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class  ​  : object {
    public static void (Revision );
    private static void (Revision );
    private static void (Revision , TableCell );
    private static void (Revision , TableRow );
    private static void (Revision , Inline );
    private static void (Revision , Paragraph );
    private static void (TableColumnCollectionRevision );
    private static void (TableFormatRevision );
    private static void (TableRowFormatRevision );
    private static void (TableCellFormatRevision );
    private static void (SectionPropertiesRevision );
    private static void (ParagraphFormatRevision );
    private static void (CharacterFormatRevision );
    public static void (Revision );
    private static void (Revision );
    private static void (Revision , Paragraph );
    private static void (Revision , Inline );
    private static void (Revision , TableCell );
    private static void (Revision , TableRow );
    private static void (TableColumnCollectionRevision );
    private static void (TableFormatRevision );
    private static void (TableRowFormatRevision );
    private static void (TableCellFormatRevision );
    private static void (SectionPropertiesRevision );
    private static void (ParagraphFormatRevision );
    private static void (CharacterFormatRevision );
    private static void (Element , bool );
    private static MoveRangeSeparator (Element , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
public  ​ ;
    [DebuggerBrowsableAttribute("0")]
public  ​ ;
    [DebuggerBrowsableAttribute("0")]
public double ;
    [DebuggerBrowsableAttribute("0")]
public double ;
    [DebuggerBrowsableAttribute("0")]
public int ;
    [DebuggerBrowsableAttribute("0")]
public    ;
    [DebuggerBrowsableAttribute("0")]
public ReadOnlyCollection`1<  > ;
    [DebuggerBrowsableAttribute("0")]
public bool  ;
    [DebuggerBrowsableAttribute("0")]
public bool  ;
    [DebuggerBrowsableAttribute("0")]
public  ​  ;
    public   ( ​ ,  ​ , double , double , int ,    , IList`1<  > , bool  ,  ​  , bool  );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual Stream   ​ (string , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    protected List`1<UInt32> ;
    protected UInt32 ;
    protected    ;
    protected   (   );
    internal UInt32 (UInt32 );
    internal abstract virtual void   ​ ();
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<, > ;
    [DebuggerBrowsableAttribute("0")]
private List`1<> ;
    public int Count { get; }
    public bool IsReadOnly { get; }
    public  Item { get; public set; }
    public ICollection`1<> Keys { get; }
    public ICollection`1<> Values { get; }
    public sealed virtual IEnumerator`1<KeyValuePair`2<, >> GetEnumerator();
    private sealed virtual override IEnumerator   ​ ();
    public sealed virtual void Add(KeyValuePair`2<, > );
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<, > );
    public sealed virtual void CopyTo(KeyValuePair`2[] , int );
    public sealed virtual bool Remove(KeyValuePair`2<, > );
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual void Add( ,  );
    public sealed virtual bool ContainsKey( );
    public sealed virtual bool Remove( );
    public sealed virtual bool TryGetValue( , & );
    public sealed virtual  get_Item( );
    public sealed virtual void set_Item( ,  );
    public sealed virtual ICollection`1<> get_Keys();
    public sealed virtual ICollection`1<> get_Values();
    [NullableContextAttribute("0")]
private KeyValuePair`2<, > ( );
    [NullableContextAttribute("0")]
private  ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    internal int ;
    internal int ;
    internal int ;
    internal bool ;
    private int ;
    private Stream ;
    private int ;
    private     ;
    private int  ;
    private int  ;
    private int  ;
    private Byte[]  ;
    public   (   ,    , int , bool );
    public   (string ,    , int , bool );
    public virtual void   ​ ();
    public virtual void   ​ ();
    public virtual void   ​ (int , int , int , int );
    public virtual void   ​ ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private DocumentModel ;
    private static Regex ;
    private Dictionary`2<string, > ;
    public   (DocumentModel );
    private static   ();
    public Inline (Field );
    public int (Field , Boolean& );
    private static  (IEnumerable`1<  > );
    private void ( );
    private static void ( , bool , Nullable`1<int> , Nullable`1<int> );
    private Run (Field , int , bool , string );
    public void (Paragraph );
    private static Nullable`1<int> (Style );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private List`1<  > ;
    private  ;
    private int ;
    internal   (List`1<  > ,  );
    public sealed virtual int   ​ ();
    public sealed virtual int   ​ ();
    public sealed virtual    ​ ();
    public sealed virtual int   ​ ();
    public sealed virtual void   ​ ();
    public sealed virtual Byte[]   ​ ();
    public sealed virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private Byte[] ;
    private int ;
    private int ;
    public   (Byte[] );
    public short ();
    public void (Int16[] );
    public int ();
    public int (long );
    public void (int );
    public void ();
    public bool ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public virtual int   ​ (object , Byte[] , int , int );
    public virtual void   ​ (object , Byte[] , int , int );
    public virtual long   ​ (object , long , SeekOrigin );
    public virtual void   ​ (object );
    public virtual long   ​ (object );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual Byte[]   ​ (Byte[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : ValueType {
    [DebuggerBrowsableAttribute("0")]
internal static  ​  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal ​   ;
    [NullableContextAttribute("2")]
internal  ​ (​   );
    public  ​ (string );
    private static  ​ ();
    internal bool ();
    public virtual string ToString();
    public sealed virtual bool Equals( ​  );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public static bool op_Equality( ​  ,  ​  );
    public static bool op_Inequality( ​  ,  ​  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :  ​ {
    private    ;
    private string ;
    private  ;
    private string ;
    [CompilerGeneratedAttribute]
public sealed virtual     ​​ ();
    public string ();
    public void (string );
    public  ();
    public void ( );
    public string ();
    public void (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    protected internal   (   ,  );
    public static    (   ,  );
    public virtual      ​ (   , int );
    public virtual      ​ (   , int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int , int );
    public virtual int   ​ (int , int );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : XmlWriter {
    [DebuggerBrowsableAttribute("0")]
protected XmlWriter ;
    [DebuggerBrowsableAttribute("0")]
protected XmlWriterSettings ;
    [DebuggerBrowsableAttribute("0")]
protected ZipArchive ;
    public WriteState WriteState { get; }
    protected virtual void Dispose(bool );
    public void (Stream );
    public virtual void Close();
    private void (string , Stream );
    public void (string );
    protected XmlWriter ();
    public void (string , Stream );
    public virtual void WriteStartElement(string , string , string );
    public virtual void WriteEndElement();
    public virtual void WriteStartAttribute(string , string , string );
    public void (string , string , string , string );
    public virtual void WriteEndAttribute();
    public virtual void WriteString(string );
    public virtual void WriteFullEndElement();
    public virtual void WriteCData(string );
    public virtual void WriteComment(string );
    public virtual void WriteProcessingInstruction(string , string );
    public virtual void WriteEntityRef(string );
    public virtual void WriteCharEntity(char );
    public virtual void WriteWhitespace(string );
    public virtual void WriteSurrogateCharEntity(char , char );
    public virtual void WriteChars(Char[] , int , int );
    public virtual void WriteRaw(Char[] , int , int );
    public virtual void WriteRaw(string );
    public virtual void WriteBase64(Byte[] , int , int );
    public virtual WriteState get_WriteState();
    public virtual void Flush();
    public virtual string LookupPrefix(string );
    public virtual void WriteDocType(string , string , string , string );
    public virtual void WriteEndDocument();
    public virtual void WriteStartDocument(bool );
    public virtual void WriteStartDocument();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public static string ();
}
internal class    : ValueType {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private    ;
    private string ;
    private object ;
    private DateTime ;
    public   (   ,    , string , object , DateTime );
    public    ();
    public    ();
    public string ();
    public object ();
    public DateTime ();
}
internal class    : object {
    [NullableContextAttribute("1")]
private Int64[][] (Int64[0...,0...] , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal    ;
    [DebuggerBrowsableAttribute("0")]
internal List`1<  > ;
    [NullableContextAttribute("2")]
public   (   );
    public sealed virtual IEnumerator GetEnumerator();
    public bool ();
    private int ();
    public int ();
    private bool ();
    public int ();
    internal abstract virtual      ​ (  );
    public void ();
    internal string (int , int );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   > ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   > ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   >  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    protected   (   ,    );
    public  ();
    public  ();
    protected virtual void   ​ ();
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public Nullable`1<   >  ();
    public void (Nullable`1<   > );
    public     ();
    public void (   );
    protected abstract virtual      ​  ();
    public     ();
    protected     ();
    private int  ();
    private int  ();
    internal   ();
    internal void ( );
    private int  ();
    public bool  ();
    public bool  ();
    public bool  ();
    public bool  ();
    public bool  ();
    public      ();
    protected void (    );
    protected double  ();
    protected bool  ();
    protected bool  ();
    private      ();
    protected   ();
    public      ();
    private      ();
    public      ();
    public void (    );
    public      ();
    public void (    );
    public static    (   ,    ,    ,  ​ ,     , bool );
    public void (    ,    ,    );
    private void (    ,    ,    );
    protected abstract virtual void   ​ (   ,    ,  ​ ,     , bool );
    protected abstract virtual void   ​ (    ,    ,    );
    protected virtual       ​  ();
    public bool (   & , double ,    , Nullable`1& , Boolean& );
    public bool (   & , double ,    , Nullable`1& , Boolean& );
    public     (   & , double ,    );
    public sealed virtual int CompareTo(   );
    protected static  (    ,     );
    protected static  (    , double , bool , bool ,  ,  );
    internal static  ( ,  );
    private static     (    ,  );
    private static bool (   & ,    );
    private static bool (   & ,    );
    private Nullable`1<>  ();
    protected virtual       ​ ();
    private sealed virtual override       ​  ();
    private sealed virtual override void   ​ (    );
    private sealed virtual override       ​  ();
    private sealed virtual override void   ​ (    );
    private sealed virtual override double   ​  ();
    private sealed virtual override double   ​  ();
    private sealed virtual override bool   ​  ();
    private sealed virtual override      ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
internal    ;
    [DebuggerBrowsableAttribute("0")]
internal ushort ;
    [DebuggerBrowsableAttribute("0")]
internal ushort ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    public void ();
    public sealed virtual void Dispose();
    public void (string , bool );
    public bool (Stream , bool );
    public void (Stream , bool );
    public void (string );
    public void (Stream );
    public    ();
    internal Byte[] ();
    internal void (Byte[] );
    internal Byte[] ();
    internal void (Byte[] );
    internal Byte[] ();
    internal void (Byte[] );
    internal static Byte[] (Byte[] , int );
    internal static void (Byte[] , int , Byte[]& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : object {
    private Stack`1<BlockCollection> ;
    private Stack`1<List`1<TextBox>> ;
    private BlockCollection ;
    private List`1<TextBox> ;
    public BlockCollection ();
    public List`1<TextBox> ();
    public void (List`1<TextBox> );
    public void (BlockCollection );
    public void ();
    public bool ();
    public bool ();
    public bool ();
    public bool ();
    public bool  ();
    private static bool (BlockCollection );
    public void (Paragraph , bool );
}
internal class    :    {
    [NullableContextAttribute("1")]
public virtual void   ​ (   );
    public virtual void   ​ (double );
    public virtual void   ​ (double );
    public virtual void   ​ (double );
    public virtual void   ​ (double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    internal double ;
    private static string ;
    public   (   , int );
    private static   ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    public   (   );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    private static IList`1<Tuple`2<Type, Type>> ;
    private static   ();
    public abstract virtual    ​ ();
    internal abstract virtual void   ​ (StringBuilder , bool , bool ,    );
    public abstract virtual object   ​ (   );
    public abstract virtual      ​ (   );
    public sealed virtual string ToString();
    public string (bool );
    public string (bool ,    );
    public int (   ,    );
    private static bool (Type , Type );
    private static int (Type , Type );
    public virtual object   ​ (   );
    public virtual bool   ​ (   );
    public virtual double   ​ (   );
    public virtual DateTime   ​ (   );
    public virtual string   ​ (   );
    public virtual      ​  (   );
    public abstract virtual IEnumerable`1<  >   ​ ();
}
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
public static int ;
    [DebuggerBrowsableAttribute("0")]
public static int ;
    [DebuggerBrowsableAttribute("0")]
public static int ;
    [DebuggerBrowsableAttribute("0")]
public static int ;
    [DebuggerBrowsableAttribute("0")]
public static int ;
    [DebuggerBrowsableAttribute("0")]
public static int ;
    [DebuggerBrowsableAttribute("0")]
public static int ;
    [DebuggerBrowsableAttribute("0")]
public static int  ;
    [DebuggerBrowsableAttribute("0")]
public static int  ;
    [DebuggerBrowsableAttribute("0")]
public static int  ;
    [DebuggerBrowsableAttribute("0")]
public static int  ;
    [DebuggerBrowsableAttribute("0")]
public static int  ;
    [DebuggerBrowsableAttribute("0")]
public static int  ;
    [DebuggerBrowsableAttribute("0")]
public static int  ;
    private static   ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private string ;
    internal   (string );
    public string ();
    public virtual    ​ ();
    public virtual object   ​ (   );
    [IteratorStateMachineAttribute("  /")]
public virtual IEnumerable`1<  >   ​ ();
    public virtual      ​ (   );
    internal virtual void   ​ (StringBuilder , bool , bool ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public Int32[] ;
    public Int32[] ;
    public    ;
    public Int32[] ;
    public Byte[] ;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private double ;
    private double ;
    private    ;
    private ​  ;
    private    ;
    public double ();
    public void (double );
    public double ();
    public void (double );
    public    ();
    public void (   );
    public ​  ();
    public void (​  );
    public    ();
    private void (   );
    internal void (   );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private    ;
    private ​​ ;
    [NullableAttribute("2")]
private  ;
    private  ​ ;
    private bool ;
    internal Nullable`1<bool> ;
    private bool ;
    private bool  ;
    internal   (​​ ,    ,  ​ );
    private double (   , double ,  ​ , int ,  ​ );
    public  ​ ( ​ );
    public  ​ (   , bool );
    public  ​ ( ​ ,   [] , double , bool );
    private  ​ ( ​ ,  ​& , Int32& );
    private static  ​ ( ​ );
    [IteratorStateMachineAttribute("  /")]
private static IEnumerable`1<​​> ( ​ );
    private bool ( ​& , int ,  ​ ,  ​ , Int32& , Boolean& , List`1& );
    private void ( ​ );
    private void ( ​ );
    private void ();
    private bool (int , ​​ ,  ​ ,  ,  ​ );
    private bool (int ,  ​ , double ,  ​ ,  ​ );
    private void (Double& , KeyValuePair`2[]& , KeyValuePair`2& );
    private void (double , KeyValuePair`2[] , KeyValuePair`2< ​,   > );
    private  ​ ();
    private void (​​ ,  ​ ,  ​ );
    private void (  [] ,  ​ ,  ​ ,  ​ , double , bool , Func`4<int,  ​,  ​, bool> ,  ​&  , Int32&  ,  ​&  , IList`1&  ,   &  );
    private bool (  [] ,  ​ ,  ​ ,  ​ , double , double , bool , bool  , Double&  ,  ​[]&  , IList`1&  );
    private bool (  [] ,  ​ ,  ​ ,  ​ , double , double , bool , bool  , bool  , Double&  ,  ​[]&  , IList`1&  );
    private static void (IList`1< ​> ,    , Double& ,  ​[]& , IList`1& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static    ;
    private static   ();
}
[NullableContextAttribute("1")]
internal interface  ​  {
    public abstract virtual object  ​ ​ ();
    public abstract virtual int  ​ ​ ();
    public abstract virtual Nullable`1<int>  ​ ​ ();
    public abstract virtual void  ​ ​ (Nullable`1<int> );
    public abstract virtual Nullable`1<int>  ​ ​ ();
    public abstract virtual   <   >  ​ ​ ();
    public abstract virtual   <   >  ​ ​ ();
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual object   ​ ();
    public abstract virtual Byte[]   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual double   ​ ();
    public abstract virtual double   ​  ();
    public abstract virtual bool   ​  ();
    public abstract virtual bool   ​  ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual Nullable`1<int>   ​  ();
}
internal interface    {
    public abstract virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (   , int );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
public int ;
    [DebuggerBrowsableAttribute("0")]
public int ;
    [DebuggerBrowsableAttribute("0")]
public Byte[] ;
    [DebuggerBrowsableAttribute("0")]
public byte  { get; }
    [DebuggerBrowsableAttribute("0")]
private string DebuggerDisplayValue { get; }
    public   (Byte[] );
    public   (int , int , Byte[] );
    public int ();
    public byte (int );
    private string get_DebuggerDisplayValue();
    public    (int );
    public    (int , int );
    public sealed virtual bool Equals(   );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    private Char[] ();
    public Byte[] ();
    public int (Byte[] , int , int );
    public int (Byte[] , int );
    public bool (Byte[] , int , int );
    public static    (   ,    , byte );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    protected internal    ;
    protected internal Boolean[] ;
    protected internal Int32[] ;
    protected internal   [] ;
    private static String[][] ;
    protected internal Int32[] ;
    protected internal int ;
    protected internal int  ;
    protected internal   []  ;
    protected internal int  ;
    protected internal int  ;
    protected internal int  ;
    protected internal int  ;
    protected internal int  ;
    protected internal int  ;
    protected internal Int32[]  ;
    protected internal Int32[]  ;
    protected internal Int32[]  ;
    protected internal Int32[]  ;
    protected internal int  ;
    protected internal int  ;
    protected internal int  ;
    protected internal int  ;
    protected internal int  ;
    protected internal int  ;
    protected internal int  ;
    protected internal     ;
    protected internal int  ;
    protected internal int  ;
    protected internal float  ;
    protected internal float  ;
    protected internal   (   ,    );
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public static String[][] ();
    public virtual int   ​ ();
    public virtual float   ​ ();
    public virtual float   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public sealed virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​  (int );
    public sealed virtual int   ​ (int , int , int );
    public sealed virtual int   ​ (int , int , int );
    public sealed virtual int   ​ (int , int );
    public sealed virtual int   ​ (int , int );
    public abstract virtual void   ​ (int , int );
    public abstract virtual void   ​  ();
    public sealed virtual      ​ (   );
    public sealed virtual int   ​ (int , int );
    public sealed virtual int   ​ (int , int );
    public sealed virtual      ​ (   );
    public sealed virtual int   ​ ();
    public sealed virtual      ​ (int , int );
    public static    (   ,    ,    ,    , bool ,    );
    public int (int , int , int );
    public int (int , int , int );
    protected internal virtual void   ​ (int ,    );
    public abstract virtual      ​ (int , int , int ,    , int , int ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static IDictionary`2<, > ;
    private static   ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public virtual void   ​ (int );
}
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
public double ;
    [DebuggerBrowsableAttribute("0")]
public double ;
    [DebuggerBrowsableAttribute("0")]
public double ;
    [DebuggerBrowsableAttribute("0")]
public double ;
    public   (double , double , double , double );
    public   (   );
    public   (bool );
    [IsReadOnlyAttribute]
public double ();
    public void (double );
    [IsReadOnlyAttribute]
public double ();
    public void (double );
    [IsReadOnlyAttribute]
public bool ();
    [IsReadOnlyAttribute]
public   ();
    [IsReadOnlyAttribute]
public bool (  );
    [IsReadOnlyAttribute]
public bool (   );
    [IsReadOnlyAttribute]
public bool (   );
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
public   ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :   <  > {
    [DebuggerBrowsableAttribute("0")]
private List`1<  > ;
    public   (   );
    protected virtual void   ​ (   ,    ,  ​ ,     , bool );
    protected virtual void   ​ (    ,    ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :  {
    private    ;
    private ArrayList ;
    private Stream ;
    public   (   , Stream );
    public void ();
    private void ();
    private void ();
    private void (   );
    private static int (int , ArrayList , int );
    private int (int ,  );
    private void (Int32& , string , int );
    private static bool (string , string );
    private void (BinaryWriter );
    private void (   );
    private static void (   , Stream , int );
    private static void (Byte[] , int , Stream , int );
    private void (BinaryWriter , ArrayList );
    private void ();
    private void (BinaryWriter );
    private void (BinaryWriter ,  );
    private void (BinaryWriter );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class  ​  : object {
}
[DefaultMemberAttribute(" ")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :  ​ {
    [DebuggerBrowsableAttribute("0")]
private List`1<  > ;
    [DebuggerBrowsableAttribute("0")]
private List`1<​ > ;
    private List`1<List`1<​ >> ;
    [DebuggerBrowsableAttribute("0")]
private   <double> ;
    [DebuggerBrowsableAttribute("0")]
private   <double> ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    private ReadOnlyCollection`1<  > ;
    private ReadOnlyCollection`1<​ >  ;
    public      { get; }
    public ReadOnlyCollection`1<  > ();
    private void (ReadOnlyCollection`1<  > );
    public ReadOnlyCollection`1<​ > ();
    private void (ReadOnlyCollection`1<​ > );
    public abstract virtual      ​ ();
    public abstract virtual void   ​ (   );
    public abstract virtual double   ​ ();
    public bool  ();
    public void (bool );
    public double ();
    public double  ();
    private double  ();
    private double  ();
    public abstract virtual ​    ​ (​  );
    public abstract virtual double   ​ ( );
    public abstract virtual double   ​ ( );
    public bool  ();
    public bool  ();
    public double  ();
    public    (int , int );
    private void (int );
    private void (int );
    private    (int , Func`2<int, ​ > );
    private void (int );
    private void (int , int );
    public ​  (int );
    public    (int );
    public    (int , int );
    private void (int );
    public void ();
    private void (int );
    public void ();
    private    (int ,    , Func`2<​ , ​ > );
    public    (   );
    public void (IEnumerable`1<  > );
    [IteratorStateMachineAttribute("  /")]
internal IEnumerable`1<  >  ();
    public void (   , int , int );
    private bool  ();
    private bool  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public static int ;
    public short ;
    public short ;
    public short ;
    public short ;
    public short ;
    public short ;
    public   (short , short , short , short , short , short );
    private static   ();
    public virtual void   ​ (Stream );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    private static UInt32[] ;
    private static   ();
    internal static string (string );
    internal static string (string );
}
internal class    : ​  {
    private char ;
    public   (char , char , char , char , char , char );
    public char ();
    public void (char );
}
internal class    : ValueType {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : ​  {
    private EventHandler`1<OperationProgressChangedEventArgs> ;
    public   (EventHandler`1<OperationProgressChangedEventArgs> , object , object , int );
    protected virtual void ​ ​ (int , Boolean& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    private Byte[] ;
    private int ;
    private int ;
    public abstract virtual void   ​ ();
    public abstract virtual bool   ​ ();
    protected void (Byte[] , int );
    public virtual void   ​ (int );
    public virtual bool   ​ (   , int );
    public virtual void   ​ ();
    public virtual bool   ​ (Int32& );
    public virtual bool   ​ (Int32& );
    public virtual int   ​ (Byte[] , int );
    public virtual bool   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    : ​ <​ ,   > {
    private Nullable`1<> ;
    private double ;
    private Nullable`1<> ;
    private Nullable`1<double> ;
    private   (IList`1<​ > );
    private   (   , int , int );
    public Nullable`1<> ();
    private void (Nullable`1<> );
    public double ();
    private void (double );
    public Nullable`1<> ();
    private void (Nullable`1<> );
    public Nullable`1<double> ();
    private void (Nullable`1<double> );
    public static    (IList`1<​ > );
    public virtual    ​ ​  (int , int );
    protected virtual double ​ ​ ();
    private static Nullable`1<> (IEnumerable`1<​ > , Double& );
    private static double (​  , ​  );
    private static double (​  , ​  );
    private static double (​  , ​  );
    private static Nullable`1<double> (IList`1<​ > );
    private static Nullable`1<> (IList`1<​ > );
    private static bool (IList`1<​ > );
    private static bool (IList`1<​ > );
    private static bool (IList`1<​ > );
    private static bool (IList`1<​ > );
    public static double (IList`1<​ > ,  );
    public static bool (IList`1<​ > , double , double );
    public static bool (​  , ​  , double );
    private static bool (​  , ​  , double , double );
    private static bool (​  , ​  , double );
    private static double (IList`1<​ > , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public virtual bool   ​ ( ,  ,   [] );
    public virtual   []   ​ ( ,  );
    public virtual void   ​ ( , Stream ,  );
    private static void ( );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static AlgorithmIdentifier (​  , AsymmetricKeyParameter , string , object );
    private static string (AsymmetricKeyParameter );
    public static AlgorithmIdentifier (string , string , string );
    private static RsassaPssParameters (string , int );
    public static string (AlgorithmIdentifier );
    [ExtensionAttribute]
public static AlgorithmIdentifier (SubjectPublicKeyInfo );
    [ExtensionAttribute]
public static Asn1Sequence (Asn1TaggedObject );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : object {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    private   ;
    public  ​ (string , string , string , string , string , string , string ,   );
    public  ();
    private void ( );
    public string ();
    public string ();
    public string ();
    public string ();
    public string ();
    public string ();
    public string  ();
    public bool  ();
    private string  ();
    private string (string );
    private static string (string , int );
    [ConditionalAttribute("DEBUG")]
private void (bool , bool );
    public string  ();
    public string (int );
    public string (string );
    public string (string , int );
    private string (string , string );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [IteratorStateMachineAttribute("​  /")]
internal static IEnumerable`1<​  > (string , SearchOption );
    internal virtual ​   ​  ​ (string );
    internal virtual ​   ​  ​ (string );
}
[NullableContextAttribute("1")]
internal interface ​   {
    public abstract virtual  ​  ​ ();
    public abstract virtual void ​  ​ ( );
    public abstract virtual bool ​  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    internal ​  (​   );
    internal sealed virtual Uri ​  ​ ();
    internal sealed virtual string ​  ​ ();
    internal sealed virtual DateTime ​  ​ ();
    internal virtual bool ​  ​ ();
    internal virtual void ​  ​ (bool );
    internal ​   ();
    internal virtual Stream ​  ​ ();
    internal static ​   (​   );
}
[DefaultMemberAttribute("")]
[DebuggerTypeProxyAttribute("GemBox.Collections.EnumerableDebugView`1<​  >")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : object {
    [DebuggerBrowsableAttribute("0")]
private ​  [] ;
    public int Count { get; }
    [DebuggerBrowsableAttribute("0")]
internal ​    { get; }
    internal ​  (List`1<​  > , bool , int );
    internal ​  (List`1<​  > );
    public int get_Count();
    internal int ();
    internal ​   (int );
    [NullableContextAttribute("2")]
internal bool (int , ​  & , Int32& );
    private static void (List`1<​  > , bool , int );
    private static void (IDictionary`2<, ​  > , ​   , bool , int );
    internal Int32[] ();
    public sealed virtual IEnumerator`1<​  > GetEnumerator();
    private sealed virtual override IEnumerator ​  ​ ();
}
[DebuggerTypeProxyAttribute("GemBox.Drawing.Text.TypefaceCollectionDebugView`2")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class ​   : ValueType {
    [DebuggerBrowsableAttribute("0")]
private IEnumerable`1<> ;
    [DebuggerBrowsableAttribute("0")]
private Func`2<, IEnumerable`1<>> ;
    public bool IsReadOnly { get; }
    public int Count { get; }
    internal ​  (IEnumerable`1<> , Func`2<, IEnumerable`1<>> );
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual int get_Count();
    [IteratorStateMachineAttribute("​  /")]
public sealed virtual IEnumerator`1<> GetEnumerator();
    public sealed virtual bool Contains( );
    public sealed virtual void CopyTo([] , int );
    private sealed virtual override IEnumerator ​  ​ ();
    private sealed virtual override void ​  ​ ( );
    private sealed virtual override bool ​  ​ ( );
    private sealed virtual override void ​  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private static ​  [] ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    private static ​  ();
    public sealed virtual bool ​  ​ ();
    internal abstract virtual bool ​  ​ ();
    private protected abstract virtual int ​  ​ ();
    private protected abstract virtual long ​  ​ ();
    public int ();
    internal long ();
    public static ​   (int );
    [NullableContextAttribute("2")]
internal static ​   (Nullable`1<int> );
    internal static ​   (long );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private ushort ;
    [DebuggerBrowsableAttribute("0")]
private ushort ;
    [DebuggerBrowsableAttribute("0")]
internal short ;
    [DebuggerBrowsableAttribute("0")]
internal short ;
    [DebuggerBrowsableAttribute("0")]
internal short ;
    [DebuggerBrowsableAttribute("0")]
internal ushort ;
    [DebuggerBrowsableAttribute("0")]
private short ;
    [DebuggerBrowsableAttribute("0")]
private short  ;
    [DebuggerBrowsableAttribute("0")]
private short  ;
    [DebuggerBrowsableAttribute("0")]
private short  ;
    [DebuggerBrowsableAttribute("0")]
private short  ;
    [DebuggerBrowsableAttribute("0")]
private short  ;
    [DebuggerBrowsableAttribute("0")]
private short  ;
    [DebuggerBrowsableAttribute("0")]
internal ushort  ;
    internal static ​   ();
    public virtual UInt32 ​  ​ ();
    protected virtual bool ​  ​ ();
    internal virtual void ​  ​ (​​  , UInt32 );
    internal virtual UInt32 ​  ​ (​​  , Nullable`1& );
    internal virtual ​   ​  ​ (ICollection`1<ushort> );
    internal virtual void ​  ​ (​   , ICollection`1<ushort> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    private int ;
    [NullableAttribute("2")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal ​     { get; private protected set; }
    [DebuggerBrowsableAttribute("0")]
public bool IsReadOnly { get; }
    [NullableAttribute("2")]
public ​     { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal    { get; }
    internal int  ();
    private void (int );
    [NullableContextAttribute("2")]
internal virtual ​   ​  ​  ();
    [NullableContextAttribute("2")]
private protected virtual void ​  ​ (​   );
    internal sealed virtual bool ​  ​ ();
    internal sealed virtual bool ​  ​ ();
    public sealed virtual bool get_IsReadOnly();
    [NullableContextAttribute("2")]
public ​    ();
    internal ​    ();
    internal bool  ();
    [NullableContextAttribute("2")]
internal   ();
    internal ​    ();
    internal bool  ();
    private protected void ();
    internal   ();
    internal void ();
    private protected void ();
    private protected virtual void ​  ​ (​   );
    internal void (​   );
    private protected void (​   );
    private void (​   );
    private protected void (​   );
    private void (​   );
    private void ( );
    internal void ();
    internal void ();
    internal void ();
    internal void ();
    internal void  ();
    internal void  ();
    private protected abstract virtual IEnumerator`1<​  > ​  ​ (bool );
    [IteratorStateMachineAttribute("​  /")]
private protected IEnumerable`1<​  > (bool );
    [IteratorStateMachineAttribute("​  /")]
private IEnumerable`1<​  >  ();
    internal bool  ();
    internal ​   (bool );
    internal void (​   , bool );
    private static void (​   , bool , Queue`1<​  > );
    [IteratorStateMachineAttribute("​  /")]
internal IEnumerable`1<​  > (​   , bool );
    [IteratorStateMachineAttribute("​  /")]
private protected IEnumerable`1<​  >  ();
    internal ​   (bool );
    private protected static Func`2<​  , ​  >  ();
    public ​   (Func`2<​  , ​  > );
    public ​   (bool );
    private protected abstract virtual ​   ​  ​ (Func`2<​  , ​  > );
    private protected ​   (​   , Func`2<​  , ​  > );
    public sealed virtual bool Equals(object );
    public sealed virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private ushort ;
    [DebuggerBrowsableAttribute("0")]
private ushort ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
internal UInt32 ;
    [DebuggerBrowsableAttribute("0")]
private UInt32 ;
    [DebuggerBrowsableAttribute("0")]
private ushort ;
    [DebuggerBrowsableAttribute("0")]
internal ushort ;
    [DebuggerBrowsableAttribute("0")]
private long  ;
    [DebuggerBrowsableAttribute("0")]
private long  ;
    [DebuggerBrowsableAttribute("0")]
internal short  ;
    [DebuggerBrowsableAttribute("0")]
internal short  ;
    [DebuggerBrowsableAttribute("0")]
internal short  ;
    [DebuggerBrowsableAttribute("0")]
internal short  ;
    [DebuggerBrowsableAttribute("0")]
internal ushort  ;
    [DebuggerBrowsableAttribute("0")]
private ushort  ;
    [DebuggerBrowsableAttribute("0")]
private short  ;
    [DebuggerBrowsableAttribute("0")]
internal short  ;
    [DebuggerBrowsableAttribute("0")]
private short  ;
    internal static ​   ();
    public virtual UInt32 ​  ​ ();
    internal virtual void ​  ​ (​​  , UInt32 );
    internal virtual UInt32 ​  ​ (​​  , Nullable`1& );
    internal virtual ​   ​  ​ (ICollection`1<ushort> );
    internal virtual void ​  ​ (​   , ICollection`1<ushort> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    internal ​  (Stream ,     );
    protected virtual ​      ​ ( );
    internal void (long , ​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
internal ​   ;
    [DebuggerBrowsableAttribute("0")]
internal ​   ;
    internal static ​   ();
    public virtual UInt32 ​  ​ ();
    protected virtual bool ​  ​ ();
    [IteratorStateMachineAttribute("​  /")]
public virtual IEnumerable`1<UInt32> ​  ​ ();
    internal virtual void ​  ​ (​​  , UInt32 );
    internal virtual UInt32 ​  ​ (​​  , Nullable`1& );
    internal virtual ​   ​  ​ (ICollection`1<ushort> );
    internal virtual void ​  ​ (​   , ICollection`1<ushort> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    private bool ;
    private ​  (bool );
    private static ​  ();
    public static ​   ();
    public static ​   ();
    public bool ();
    public virtual  ​  ​ ();
    internal static ​   (bool );
    [NullableContextAttribute("2")]
internal static ​   (Nullable`1<bool> );
    [NullableContextAttribute("2")]
internal static ​   (bool );
    public virtual bool Equals(object );
    private bool (​   );
    public virtual int GetHashCode();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   :     {
    [DebuggerBrowsableAttribute("0")]
private static String[] ;
    private static ​  ();
    public virtual IEnumerable`1<string>    ​ ();
    public virtual        ​ (​   );
    private static     (Stream , ​   );
    private static string (Stream );
    private static char (Stream );
    private static short (Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   :     {
    private static ​  ();
    private ​  ( );
    public virtual     ​ ();
    internal virtual void    ​  ();
    private protected virtual Action`2<Double[], Double[]>    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private static object ;
    [DebuggerBrowsableAttribute("0")]
private static Assembly ;
    private   <​  , ​  > ;
    private ​   ;
    private ​   ;
    private static ​  ();
    internal static Assembly ();
    internal static void (Assembly );
    internal static string ();
    internal static void (Assembly );
    private static void (Assembly );
    internal ​   ();
    internal ​   ();
    internal virtual ​   ​  ​ (string );
    internal virtual ​   ​  ​ (string );
    internal ​   (​   , Assembly );
    private ​   (​   , Assembly );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    internal ​  (string , ​   ,  , ​   );
    internal ​   ();
    public  ();
    public ​   ();
    private protected virtual ​   ​  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   : object {
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<, Func`1<​  >> ;
    [DebuggerBrowsableAttribute("0")]
private ​​  ;
    private static ​  ();
    internal static ​   (UInt32 );
    public abstract virtual UInt32 ​  ​ ();
    public virtual IEnumerable`1<UInt32> ​  ​ ();
    public virtual bool ​  ​ ();
    protected virtual bool ​  ​ ();
    public ​   ();
    public IEnumerable`1<​  > ();
    internal virtual UInt32 ​  ​ ();
    internal abstract virtual void ​  ​ (​​  , UInt32 );
    internal abstract virtual UInt32 ​  ​ (​​  , Nullable`1& );
    internal virtual ​   ​  ​ (ICollection`1<ushort> );
    internal abstract virtual void ​  ​ (​   , ICollection`1<ushort> );
    internal void (​   );
    internal void (​   );
    protected ​    ();
    public sealed virtual string ToString();
    public sealed virtual int CompareTo(UInt32 );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : Stream {
    [DebuggerBrowsableAttribute("0")]
private Stream ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private Uri ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal Uri  { get; private set; }
    public bool CanRead { get; }
    public bool CanWrite { get; }
    public bool CanSeek { get; }
    public long Position { get; public set; }
    public long Length { get; }
    public int ReadTimeout { get; public set; }
    public int WriteTimeout { get; public set; }
    internal ​  (Uri , Stream , bool );
    [NullableContextAttribute("2")]
internal Uri ();
    [NullableContextAttribute("2")]
private void (Uri );
    internal static ​   (string , bool , bool );
    private static Stream (Uri , Stream );
    private Stream ();
    public virtual bool get_CanRead();
    public virtual bool get_CanWrite();
    public virtual bool get_CanSeek();
    public virtual long get_Position();
    public virtual void set_Position(long );
    public virtual long get_Length();
    public virtual int get_ReadTimeout();
    public virtual void set_ReadTimeout(int );
    public virtual int get_WriteTimeout();
    public virtual void set_WriteTimeout(int );
    public virtual int Read(Byte[] , int , int );
    public virtual int ReadByte();
    public virtual void Write(Byte[] , int , int );
    public virtual void WriteByte(byte );
    public virtual void Flush();
    public virtual long Seek(long , SeekOrigin );
    public virtual void SetLength(long );
    internal void (​   );
    protected virtual void Dispose(bool );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public int ;
    public   (int );
    public virtual int   ​ ();
    public virtual void   ​ (int );
    public virtual void   ​ (StreamWriter , int , int , string );
    private int (string , int );
    private int (string , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private static Single[] ;
    private static Single[] ;
    private static   ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual bool   ​  ();
    public virtual int   ​ ();
    public virtual void   ​ (Single[] , int , int , int , Single[] , int , int , Single[]  , int  , int  );
    public virtual void   ​ (Single[] , int , int , int , Single[] , int , int , Single[]  , int  , int  );
    public virtual Single[]   ​ ();
    public virtual Single[]   ​ ();
    public virtual bool   ​ (int , int , int );
    public virtual bool Equals(object );
    public virtual string ToString();
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual void Convert(T );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual bool   ​  ();
    public virtual void   ​ (Int32[] , int , int , int , Int32[] , int , int , int  , Int32[]  , int  , int  );
    public virtual void   ​ (Int32[] , int , int , int , Int32[] , int , int , int  , Int32[]  , int  , int  );
    public virtual bool   ​ (int , int , int );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    internal   (   );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public Int32[][] ;
    public Single[][] ;
    public virtual int   ​ ();
}
internal abstract class    : object {
    [NullableAttribute("1")]
protected internal Byte[] ;
    protected internal   (int );
    public abstract virtual int   ​ ();
    public virtual byte   ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    private Int32[][] ;
    private Int32[] ;
    private Int32[] ;
    private Int32[] ;
    private bool ;
    public   (  [] , int ,    );
    public virtual bool   ​ (   ,    , int , int );
    public virtual string ToString();
    public virtual void   ​ (   , int , int );
    private void (   , int , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    public   (   ,    );
    public static    (   ,    );
    public abstract virtual int   ​ (int );
    public abstract virtual      ​ (   , int );
    public abstract virtual      ​ (   , int );
    public sealed virtual void   ​ ();
    public sealed virtual bool   ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    : Dictionary`2<string, string> {
    [DebuggerBrowsableAttribute("0")]
private    ;
    public   (   );
    public virtual      ​ ();
    public virtual void   ​ (String[] );
    public virtual string   ​ (string );
    public virtual bool   ​ (string );
    public virtual int   ​ (string );
    public virtual float   ​ (string );
    public virtual void   ​ (char , String[] );
    public virtual void   ​ (Char[] , String[] );
    public static String[] (String[][] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    public virtual int   ​  ();
    public abstract virtual void   ​ (Int32[] , int , int , int , Int32[] , int , int , Int32[]  , int  , int  );
    public virtual void   ​ (object , int , int , int , object , int , int , object  , int  , int  );
    public abstract virtual void   ​ (Int32[] , int , int , int , Int32[] , int , int , Int32[]  , int  , int  );
    public virtual void   ​ (object , int , int , int , object , int , int , object  , int  , int  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
}
internal abstract class    : object {
    [NullableContextAttribute("1")]
public abstract virtual void Convert(T );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (int , int , byte );
    public virtual int   ​ (int , int );
    public virtual   []   ​ (int , int );
    public virtual   []   ​ (int , int );
    public virtual string ToString();
    public virtual bool   ​ (int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    public   (   );
    public   (   , int );
    public  ( );
    public  ( );
    public    ();
}
internal interface    {
    [NullableContextAttribute("1")]
public abstract virtual ​    ​ (int , ​  );
    [NullableContextAttribute("1")]
public abstract virtual ​    ​ (int , ​  );
}
internal interface    {
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​  ();
    public abstract virtual int   ​  ();
    public abstract virtual int   ​  ();
    public abstract virtual bool   ​  ();
    public abstract virtual bool   ​ (int , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public    ;
    public bool ;
    public bool ;
    public int ;
    public int ;
    public int ;
    public int ;
    public int  ;
    public int  ;
    public int  ;
    public int  ;
    public   (int ,    );
    public   (int , int , int , int , int );
    public   (int , int , int , int );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private int ;
    private    ;
    private int ;
    private   [] ;
    private Int32[] ;
    private Dictionary`2<int, Boolean[]> ;
    public   (   ,    );
    private bool (   );
    public virtual bool   ​ (int , int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual      ​ (   , int );
    public virtual      ​ (   , int );
    private void (   ,    , int );
    private void (   ,    , int );
    public virtual int   ​ (int );
    public virtual void   ​ (int , int );
    public virtual void   ​  ();
}
internal class    : ArgumentException {
    [NullableContextAttribute("1")]
public   (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (int , int , byte ,    ,    );
    private   [][] (string );
    public virtual int   ​ (int , int );
    public virtual   []   ​ (int , int );
    public virtual   []   ​ (int , int );
    public virtual string ToString();
    public virtual bool   ​ (int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
}
internal class    : object {
    private double ;
    public   (double );
    public double ();
    public double ();
    public double ();
    public double ();
}
internal class    : object {
    public ushort ;
    public ushort ;
    public   (ushort , ushort );
    public   (UInt32 );
    [NullableContextAttribute("1")]
public   (Byte[] );
    public double ();
    public double ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    internal   (   );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public static int ;
    public static int ;
    private static double ;
    private    ;
    private    ;
    private    ;
    private ​  ;
    public   (​  ,    );
    private static   ();
    public virtual      ​ ();
    public virtual int   ​ (int , int );
    public virtual bool   ​ (int , int );
    public virtual bool   ​ (int , int );
    public virtual ​    ​ (int , ​  );
    public virtual ​    ​ (int , ​  );
    protected internal virtual void   ​ (   , int );
    public static int (float );
    private static float (int );
    public virtual int   ​ (int );
    private int (   , int );
    private int (   , int , int );
    private int (   , int , int );
}
internal interface    {
    public abstract virtual bool   ​ (int , int );
    public abstract virtual int   ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private Int32[] ;
    private Int32[] ;
    private Int32[] ;
    private Int32[] ;
    private Int32[] ;
    private   [] ;
    public   (  [] , int );
    public virtual bool   ​ (   ,    , int , int );
    public virtual string ToString();
    public virtual void   ​ (   , int , int );
}
internal abstract class    : object {
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual bool   ​  ();
    public abstract virtual int   ​  ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​  ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​  ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    [NullableContextAttribute("1")]
public abstract virtual void   ​ (object , int , int , int , object , int , int , int  , object  , int  , int  );
    [NullableContextAttribute("1")]
public abstract virtual void   ​ (object , int , int , int , object , int , int , int  , object  , int  , int  );
    public abstract virtual bool   ​ (int , int , int );
}
internal class    : ValueType {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    public virtual int   ​  ();
    public abstract virtual void   ​ (Single[] , int , int , int , Single[] , int , int , Single[]  , int  , int  );
    public virtual void   ​ (object , int , int , int , object , int , int , object  , int  , int  );
    public abstract virtual void   ​ (Single[] , int , int , int , Single[] , int , int , Single[]  , int  , int  );
    public virtual void   ​ (object , int , int , int , object , int , int , object  , int  , int  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    protected XmlWriter ;
    protected XmlDocument ;
    public   (XmlWriter );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    public virtual int   ​  ();
    public abstract virtual void   ​ (Int32[] , int , int , int , Int32[] , int , int , int  , Int32[]  , int  , int  );
    public virtual void   ​ (object , int , int , int , object , int , int , int  , object  , int  , int  );
    public abstract virtual void   ​ (Int32[] , int , int , int , Int32[] , int , int , int  , Int32[]  , int  , int  );
    public virtual void   ​ (object , int , int , int , object , int , int , int  , object  , int  , int  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    protected int ;
    protected int ;
    protected MemoryStream ;
    protected XmlWriter ;
    public   (   , int );
    public virtual string   ​ ();
    public abstract virtual string   ​ ();
    public abstract virtual string   ​ ();
    internal virtual bool   ​ ();
    public Stream ();
    public XmlWriter ();
    public int ();
    public void (int );
    public string ();
    protected int  ();
    public   ();
    internal virtual void   ​ (   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    private    ;
    private    ;
    private    ;
    private int ;
    public   (   , Int32[] ,    );
    public virtual int   ​ (int );
    public virtual      ​ (int , int , int ,    ,    );
    public virtual      ​ (int , int , int ,    ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private Byte[] ;
    private int ;
    private int ;
    private Int32[] ;
    private Int32[] ;
    public   (int , int , int );
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual void   ​ (int , int , int );
    public virtual byte   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    protected internal   [] ;
    protected internal int ;
    protected internal Boolean[] ;
    protected internal bool ;
    public   (  [] , int );
    public virtual   []   ​ ();
    public abstract virtual bool   ​ (   ,    , int , int );
    public abstract virtual void   ​ (   , int , int );
    public virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    protected internal    ;
    protected internal    ;
    protected internal int ;
    protected internal int ;
    protected internal   (   ,    );
    public virtual void   ​ (int );
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual int   ​ (int , int );
    public virtual int   ​ (int , int );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual void   ​ (int , int );
    public virtual void   ​  ();
    public virtual      ​ (   );
    public virtual int   ​ (int );
    public virtual int   ​ (int );
    public virtual      ​ (   );
    public virtual int   ​  ();
    public virtual      ​ (int , int );
    public abstract virtual bool   ​ (int , int );
    public abstract virtual int   ​ (int );
    public abstract virtual int   ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public static int (int );
    public static int (int , int );
    public static int (Int32[] );
    public static int (int , int );
    public static int (Int32[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    private static String[][] ;
    private static   ();
    public abstract virtual int   ​ ();
    public static String[][] ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual bool   ​  ();
    public abstract virtual int   ​  ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​  ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​  ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual void   ​ (object , int , int , int , object , int , int , object  , int  , int  );
    public abstract virtual void   ​ (object , int , int , int , object , int , int , object  , int  , int  );
    public abstract virtual Single[]   ​ ();
    public abstract virtual Single[]   ​ ();
    public virtual Single[]   ​ (Single[] , Single[] );
    public virtual Single[]   ​ (Single[] , Single[] );
    private static Single[] (Single[] , Single[] , Single[] );
    public abstract virtual bool   ​ (int , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    protected string ;
    protected string ;
    protected string ;
    public   (string , string , Uri );
    public   (string , string , string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public Uri ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
public string ;
    public   (int );
    public string ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual bool   ​  ();
    public virtual void   ​ (Single[] , int , int , int , Single[] , int , int , int  , Single[]  , int  , int  );
    public virtual void   ​ (Single[] , int , int , int , Single[] , int , int , int  , Single[]  , int  , int  );
    public virtual bool   ​ (int , int , int );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    protected List`1<  > ;
    protected List`1<  > ;
    protected List`1<  > ;
    protected static int ;
    protected    ;
    private static   ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual void   ​ (string );
    public virtual string   ​ ();
    public virtual string   ​ ();
    internal    ();
    internal void (   );
    protected IEnumerable`1<  > ();
    protected IEnumerable`1<  >  ();
    protected IEnumerable`1<  >  ();
    public virtual T   ​ (T );
    public    (string , Uri );
    public    (string , string );
    public virtual T   ​ (T );
    protected virtual void   ​ (   );
}
internal abstract class    : object {
    public abstract virtual int   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    public bool ;
    public int ;
    public int ;
    public int ;
    public    ;
    public int ;
    public int ;
    public int  ;
    public int  ;
    public int  ;
    public int  ;
    public int  ;
    public int  ;
    public int  ;
    public int  ;
    public   (int , int , int , int , int ,   [] ,   [] );
    public abstract virtual      ​ ();
    public abstract virtual      ​ ();
    public abstract virtual      ​ ();
    public abstract virtual      ​ ();
    public abstract virtual      ​ ();
    public virtual      ​ ();
    public abstract virtual      ​  ();
    public abstract virtual      ​  ();
    protected internal abstract virtual      ​ (   ,    );
    protected internal virtual void   ​ ();
    public virtual      ​  ();
    public virtual      ​ (int , int );
    public virtual      ​ (int , int );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    private static String[][] ;
    private    ;
    public   (   ,    );
    private static   ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public static String[][] ();
    public virtual      ​ (int , int );
    public virtual      ​ (int , int , int ,    ,    );
    public virtual      ​ (int , int , int ,    ,    );
    public static    (   ,    ,    );
}
internal interface    {
    public abstract virtual void   ​ (int );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual void   ​ (int , int , string );
    public abstract virtual void   ​ (int , string );
    public abstract virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private static Single[] ;
    private static Single[] ;
    private static   ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​  ();
    public virtual int   ​  ();
    public virtual bool   ​  ();
    public virtual int   ​ ();
    public virtual void   ​ (Int32[] , int , int , int , Int32[] , int , int , Int32[]  , int  , int  );
    public virtual void   ​ (Int32[] , int , int , int , Int32[] , int , int , Int32[]  , int  , int  );
    public virtual Single[]   ​ ();
    public virtual Single[]   ​ ();
    public virtual bool   ​ (int , int , int );
    public virtual bool Equals(object );
    public virtual string ToString();
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual void   ​ ( );
}
internal class    : object {
    public int ;
    public   (int );
    public double ();
    public double ();
    public double ();
    public double ();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    internal   (   );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    private static String[][] ;
    protected internal ​  ;
    public   (​  );
    private static   ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public static String[][] ();
    public abstract virtual int   ​ (int , int );
    public abstract virtual bool   ​ (int , int );
    protected internal abstract virtual void   ​ (   , int );
    public virtual      ​ (int , int );
    public static    (​  ,    );
    public abstract virtual int   ​ (int );
    public abstract virtual ​    ​ (int , ​  );
    public abstract virtual ​    ​ (int , ​  );
    public abstract virtual bool   ​ (int , int );
}
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
public static int ;
    [DebuggerBrowsableAttribute("0")]
public static int ;
    [DebuggerBrowsableAttribute("0")]
public static int ;
    private static   ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private static String[][] ;
    private Int32[][] ;
    private bool ;
    private bool ;
    private int ;
    private    ;
    private    ;
    private     ;
    public   (   ,    , bool , int , bool ,    );
    private static   ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual      ​ ();
    public virtual bool   ​ ();
    public static String[][] ();
    public virtual bool   ​ (int , int );
    public virtual      ​ (int , int );
    public static    (   ,    ,    );
    protected internal static List`1<  > (string , int , List`1<  > );
    public virtual ​    ​ (int , ​  );
    public virtual ​    ​ (int , ​  );
    public virtual bool   ​ ();
    public virtual void   ​ (int , int );
    public virtual void   ​  ();
    private void (   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    private    ;
    private    ;
    private    ;
    private    ;
    public    ;
    public    ;
    public int  ;
    public   (int , int , int , int , int ,   [] ,   [] );
    public virtual      ​ ();
    public virtual      ​ ();
    public virtual      ​ ();
    public virtual      ​ ();
    public virtual      ​ ();
    public virtual      ​  ();
    public virtual      ​  ();
    protected internal virtual      ​ (   ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private Stream ;
    private int ;
    private int ;
    private Byte[] ;
    private int ;
    private int ;
    private bool ;
    public   (Stream , int , int , int );
    public   (Stream );
    public virtual int   ​ ();
    public virtual int   ​ ();
    private void ();
    private void ();
    public virtual void   ​ ();
    public virtual void   ​ (int );
    public virtual int   ​ ();
    public virtual byte   ​ ();
    public virtual byte   ​ ();
    public virtual void   ​ (Byte[] , int , int );
    public virtual byte   ​ ();
    public virtual short   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual long   ​ ();
    public virtual long   ​  ();
    public virtual float   ​  ();
    public virtual double   ​  ();
    public virtual int   ​ (int );
    public virtual void   ​ ();
    public virtual void   ​ (byte );
    public virtual void   ​ (int );
    public virtual void   ​ (int );
    public virtual void   ​ (int );
    public virtual void   ​ (long );
    public virtual void   ​ (float );
    public virtual void   ​ (double );
}
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
public static int ;
    [DebuggerBrowsableAttribute("0")]
public static int ;
    private static   ();
}
internal static class    : object {
}
internal class    : object {
    public double ;
    public   (double );
    public double ();
    public int ();
    public double ();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    public virtual int   ​  ();
    public abstract virtual void   ​ (Single[] , int , int , int , Single[] , int , int , int  , Single[]  , int  , int  );
    public virtual void   ​ (object , int , int , int , object , int , int , int  , object  , int  , int  );
    public abstract virtual void   ​ (Single[] , int , int , int , Single[] , int , int , int  , Single[]  , int  , int  );
    public virtual void   ​ (object , int , int , int , object , int , int , int  , object  , int  , int  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public static void (XmlNode& );
    public static string (string );
    public static void (XmlNode );
    public static string (Stream );
    public static string (Stream );
    public static string (Stream );
    public static string (Byte[] , int );
    public static string (Stream );
    public static string (Stream );
    public static string (Stream );
    public static int (Byte[] );
    public static bool (int , int );
    public static bool (UInt32 , UInt32 );
    public static byte (UInt32 , UInt32 );
    public static int (int , int );
    public static int (int , int );
    public static UInt32 (UInt32 , UInt32 );
    public static ushort (UInt32 , UInt32 );
    public static bool (int );
    public static bool (byte );
    public static Char[] (Char[] );
    public static Int32[] (Int32[] );
    public static Int16[] (UInt16[] );
    public static UInt32 (BitArray );
    public static BitArray (BitArray , int , int );
    public static string (Byte[] );
    public static string (string );
    public static string (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    private static String[][] ;
    protected internal    ;
    protected internal Int32[] ;
    protected internal Int32[] ;
    private    ;
    private    ;
    public   (   , Int32[] ,    );
    public virtual int   ​ ();
    public virtual int   ​ ();
    public static String[][] ();
    public virtual int   ​ (int );
    public virtual      ​ (int , int );
    public virtual void   ​ (int , int );
    public virtual void   ​  ();
    public abstract virtual      ​ (int , int , int ,    ,    );
    public abstract virtual int   ​ (int );
    public abstract virtual      ​ (int , int , int ,    ,    );
}
internal class    : ValueType {
}
internal class    :    {
    public   (int , int , byte );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public    ;
    public    ;
    public    ;
    public    ;
    public    ;
    public    ;
    public    ;
    public float  ;
    public float  ;
    public   (int , int , int , int , int ,   [] ,   [] );
    public virtual      ​ ();
    public virtual      ​ ();
    public virtual      ​ ();
    public virtual      ​ ();
    public virtual      ​ ();
    public virtual      ​  ();
    public virtual      ​  ();
    protected internal virtual      ​ (   ,    );
    private void (Single[][] );
    private void (float );
    private void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    [DebuggerBrowsableAttribute("0")]
private Func`1<  > ;
    private     ;
    private     ;
    private bool ;
    public     ();
    public void (    );
    public     ();
    public void (    );
    public bool ();
    public void (bool );
    public    ();
    public void (Func`1<  > );
    public virtual      ​  ();
}
internal class    :    {
    [NullableContextAttribute("1")]
public   (   , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private string ;
    internal   (   , int );
    public virtual string   ​ ();
    internal virtual bool   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual void   ​ (string );
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :   <> {
    [DebuggerBrowsableAttribute("0")]
public static   <> ;
    private static   ();
    private static   <> ();
    protected virtual void FreezeMutableFields(object );
    protected virtual void CloneMutableFields();
    public sealed virtual bool Equals(  <> );
    protected virtual bool   ​  (IList`1<> , IList`1<> );
    protected virtual void   ​  (   & , IList`1<> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private Stream ;
    internal int ;
    public static int ;
    internal Byte[] ;
    internal Byte[] ;
    internal int ;
    private int ;
    private int  ;
    public   (Stream , int );
    private static   ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ (Byte[] , int , bool , bool , bool );
    public virtual int   ​ (Byte[] , int , bool , bool , int );
    public virtual void   ​ ();
    public virtual void   ​ (   );
    private void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
private IEnumerable`1<> ;
    public   (IEnumerable`1<> );
    public sealed virtual IEnumerator`1<> GetEnumerator();
    private sealed virtual override IEnumerator   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    private    ;
    private bool ;
    private Int16[] ;
    private Int16[] ;
    public   (   , bool );
    public virtual void   ​ ();
    private void ();
    public    ();
    public    ();
}
[DebuggerTypeProxyAttribute("External.Fixed.CollectionDebugView`1")]
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class    : Collection`1<> {
    internal   (IList`1<> );
    public  ();
    public  ();
    [IteratorStateMachineAttribute("  /")]
protected IEnumerable`1<U> (Converter`2<,   <>> , Predicate`1<U> );
    public [] ();
    protected virtual void   ​ (int ,  );
    protected virtual void   ​ (int ,  );
    protected virtual void   ​ (int );
    protected sealed virtual void InsertItem(int ,  );
    protected sealed virtual void RemoveItem(int );
    protected sealed virtual void SetItem(int ,  );
    protected sealed virtual void ClearItems();
    public virtual string ToString();
}
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
public  ;
    [DebuggerBrowsableAttribute("0")]
public double ;
    public   ( , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    public   ( , int , int , int , Stream , bool );
    public static void (Byte[] , int , int , int , int , int );
    public static void (Byte[] , int , int , int , int , int );
    protected virtual void   ​                   ();
    protected virtual void   ​               ​          ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  :  ​  {
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private   <object> ;
    public  ​ (Stream , string , string );
    public Byte[] ();
    public string ();
    public string ();
    public bool ();
    public void (bool );
    public virtual double  ​ ​ ();
    public virtual double  ​ ​ ();
    public ImageSource ();
    private static BitmapImage (Byte[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    [DebuggerBrowsableAttribute("0")]
private object ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private Assembly ;
    [DebuggerBrowsableAttribute("0")]
private ResourceManager ;
    [DebuggerBrowsableAttribute("0")]
private ResourceSet ;
    [DebuggerBrowsableAttribute("0")]
private ResourceSet ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<string, List`1<​  >>  ;
    internal ​  (​   , ​   , Assembly );
    private string ();
    internal string ();
    internal ResourceManager ();
    private ResourceSet ();
    internal ResourceSet ();
    private Dictionary`2<string, List`1<​  >> ();
    internal virtual ​   ​  ​ (string );
    internal virtual ​   ​  ​ (string );
    internal Stream (string );
    [IteratorStateMachineAttribute("​  /")]
private IEnumerable`1<string> ();
    [IteratorStateMachineAttribute("​  /")]
private IEnumerable`1<KeyValuePair`2<string, bool>>  ();
    [IteratorStateMachineAttribute("​  /")]
private IEnumerable`1<KeyValuePair`2<string, string>>  ();
    private static void (Dictionary`2<string, List`1<​  >> , string , ​   );
    private static string (Attribute );
    internal static string (Assembly );
    private static CultureInfo (Assembly );
    private sealed virtual override void ​  ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   :     {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ​   ;
    [NullableAttribute("2")]
public ​    { get; }
    [NullableAttribute("2")]
protected      { get; }
    [NullableAttribute("2")]
public ​    { get; }
    internal ​  (​   ,  );
    public virtual     ​ ();
    [NullableContextAttribute("2")]
public virtual ​      ​  ();
    [NullableContextAttribute("2")]
protected virtual        ​  ();
    [NullableContextAttribute("2")]
public ​   ();
    internal virtual ICollection`1<​  >    ​  ();
    protected virtual        ​  ();
    protected virtual void    ​  ();
    protected virtual long    ​ (​   );
    internal void (​   , int );
    protected virtual ​      ​ (int );
    internal virtual ​      ​ (    , ​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    [CompilerGeneratedAttribute]
public sealed virtual     ​​ ();
    public virtual      ​  ();
}
internal class    :    {
    [NullableContextAttribute("1")]
public   (   , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    internal   (   );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual void   ​ (  <> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private static String[][] ;
    private int ;
    private int ;
    private int ;
    private bool ;
    private string ;
    protected internal MemoryStream ;
    protected internal BinaryWriter  ;
    protected internal     ;
    protected internal Boolean[]  ;
    protected internal ​   ;
    protected internal ​   ;
    protected internal     ;
    protected internal     ;
    protected internal     ;
    public   (   , Boolean[] , ​  ,    ,    ,    , ​  ,     );
    private static   ();
    public static String[][] ();
    protected internal virtual Byte[]   ​ ();
    public virtual int   ​ ();
    protected internal virtual int   ​ ();
    public virtual void   ​ ();
    public virtual void   ​ (   );
    public virtual void   ​ (Stream );
    private void ();
    private void ();
    protected internal virtual void   ​ (bool , int );
    protected internal virtual void   ​ (bool , int , int );
    protected internal virtual void   ​  ();
    protected internal virtual void   ​ (int );
    protected internal virtual void   ​ (int );
    protected internal virtual void   ​ (int , int );
    protected internal virtual void   ​ (bool , int );
    public virtual void   ​  ();
    private void  ();
    private void (int );
    public virtual void   ​ (int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
private Action`1<> ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    public   (Action`1<> ,  );
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private Stream ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public   (Byte[] );
    public sealed virtual void Dispose();
    protected virtual void   ​ (bool );
    public int ();
    public Stream ();
    public virtual int   ​ (int );
    public int (int , int );
    public void (int , SeekOrigin );
    public int ();
    private int ();
    private int (int );
    private bool (byte );
    private void (int );
    private void (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    private    ;
    public    ();
    private void (   );
    public abstract virtual    ​ ();
    internal void (   );
    protected virtual void   ​ (StringBuilder );
    public virtual string   ​ ();
    public sealed virtual string ToString();
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private   [] ;
    private Double[] ;
    public     { get; public set; }
    public   (int );
    public Double[] ();
    private void (Double[] );
    public    (int );
    public void (int ,    );
    public double (Converter`2<  , double> );
    public double (int , int , Converter`2<  , double> );
    public double (Predicate`1<  > , Converter`2<  , double> , double );
    public double ();
    public double (double );
    public int (Predicate`1<  > , Converter`2<  , double> , Double& );
    public int (Predicate`1<  > , Double& );
    public bool (int , int , Int32& );
    public bool (int , int , Converter`2<  ,   > );
    public double (Predicate`1<  > , Converter`2<  , double> );
    public double (Converter`2<  , double> );
    private static int (int , int , Predicate`1<int> , Converter`2<int, double> , Double& );
    private static double (IList`1<T> , int , int , Predicate`1<int> , Converter`2<int, T> , Converter`2<T, double> );
    private double (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private Int32[] ;
    public   (int , int , int , Stream , bool );
    protected virtual bool   ​                      ​   ();
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class  ​  : object {
    private double ;
    private  ​  ;
    private     ;
    private Dictionary`2<  ,  ​ > ;
    public  ​   { get; }
    public  ​ (double ,  ​  ,     );
    public  ​  (   );
    public static  ​  (   ,  ​  ,     , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class ​   : ValueType {
    [DebuggerBrowsableAttribute("0")]
private static Char[] ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    private ​  (string , string , string );
    private static ​  ();
    internal string ();
    internal bool ();
    internal static ​   (Assembly );
    internal static ​   (string , String& );
    internal string (string );
    public sealed virtual bool Equals(​   );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public virtual string ToString();
    internal Assembly ();
    private AssemblyName ();
    private static Byte[] (string );
    private static string (Byte[] );
    private static bool (Byte[] , Byte[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   :     {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ​   ;
    [NullableAttribute("2")]
public ​    { get; }
    [NullableAttribute("2")]
protected      { get; }
    [NullableAttribute("2")]
public ​    { get; }
    internal ​  (​   ,  ,  );
    public virtual     ​ ();
    [NullableContextAttribute("2")]
public virtual ​      ​  ();
    [NullableContextAttribute("2")]
protected virtual        ​  ();
    [NullableContextAttribute("2")]
public ​   ();
    internal virtual ICollection`1<​  >    ​  ();
    internal virtual        ​ ();
    protected virtual     ​  ();
    protected virtual        ​  ();
    protected virtual void    ​  ();
    protected virtual long    ​ (​   );
    internal void (​   , int , ​   );
    protected virtual ​      ​ (int );
    internal virtual ​      ​ (    , ​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    private IDictionary`2<string, double> ;
    protected   (IDictionary`2<string, double> );
    protected double (string , double );
    public abstract virtual       ​ (   );
    public abstract virtual []   ​ (   );
    public abstract virtual       ​ (    );
    public virtual bool   ​ ();
    public static [] (   [] );
    protected [] (   ,  );
    protected     (   ,     );
    protected [] (   ,     );
    private static int ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    protected internal int ;
    public Int32[] ;
    protected internal   (int , int );
    protected internal   (   , int , int );
    public virtual string ToString();
    public virtual string   ​ ();
    public static    (   , int , int );
    public int (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   (   , int );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual    ​ ();
    public abstract virtual void   ​ ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    protected internal int ;
    protected internal int ;
    protected internal int ;
    protected internal Int32[][] ;
    protected internal Int32[][] ;
    protected internal Int32[][] ;
    protected internal Int32[][] ;
    protected internal bool  ;
    public   (int , int );
    public   (int , int , Int32[] );
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual void   ​ (Int32[] );
    private void (int , int );
    private void ();
    public virtual void   ​ (int , int , int );
    public virtual void   ​ (int , int , int ,    );
    public virtual void   ​ ();
    public virtual void   ​ ();
    public virtual void   ​ ();
    public virtual void   ​ (Int32[] );
}
[NullableContextAttribute("1")]
internal interface    {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public  ​ <>  { get; }
    public abstract virtual    ​ ();
    public abstract virtual void   ​ ( );
    public abstract virtual  ​ <>   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private Stream ;
    private Byte[][] ;
    private int ;
    private int ;
    private    ;
    public   (Stream );
    public sealed virtual Stream   ​ ();
    public sealed virtual void   ​ (   );
    public sealed virtual void   ​ ();
    public sealed virtual void   ​ (Byte[] );
    public sealed virtual void   ​ ();
    private void (Byte[] );
    private void (Byte[] );
    private void (Byte[] );
    private void ();
    private static Byte[] (int , int );
    private Byte[] (int , int );
    private void (int , int , Byte[] );
    private Byte[] (int );
    private void (int , int );
    private void ();
    private static void (Byte[] , int , int );
    private static void (Byte[] , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :   <  > {
    [DebuggerBrowsableAttribute("0")]
private    ;
    internal   (   );
    public IEnumerable`1<T> (Predicate`1<T> );
    private static    (   );
    protected virtual void   ​ (int ,    );
    protected virtual void   ​ (int ,    );
    protected virtual void   ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private    ;
    internal   ( ​ ,  ​[] ,    );
    public virtual bool ​ ​ ();
    public virtual      ​ ();
    public virtual bool ​ ​ ();
    public virtual double ​ ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
private byte ;
    [DebuggerBrowsableAttribute("0")]
private byte ;
    [DebuggerBrowsableAttribute("0")]
private UInt32 ;
    private   (byte , byte );
    public   (int , int , bool , int , UInt32 );
    public byte ();
    public byte ();
    [IsReadOnlyAttribute]
public UInt32 ();
    public void (UInt32 );
    public int ();
    private void (int );
    public int ();
    private void (int );
    public int ();
    public int ();
    private void (int );
    public bool  ();
    private void (bool );
    public int  ();
    private void (int );
    public bool  ();
    public static bool (Stream , Byte[] ,   & , Int32& );
    private static bool (Stream , Byte[] , Int32& , Byte& );
    public void (Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class  ​  : object {
    public static void (Byte[] , int , Byte[] , int , int ,  ​  , int );
    private static void (Byte[] , int , Byte[] , int , int ,  ​  );
    private static void (Byte[] , int , Byte[] , int , int ,  ​  );
    private static void (Byte[] , int , Byte[] , int , int ,  ​  );
    private static void (Byte[] , int , Byte[] , int , int ,  ​  , int );
    public static void (Byte[] , int , Byte[] , int , int , int , int , int  , int  , int  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : ​   {
    private string ;
    [DebuggerBrowsableAttribute("0")]
private Uri ;
    internal ​  (string );
    internal virtual Uri ​  ​ ();
    internal virtual string ​  ​ ();
    internal virtual DateTime ​  ​ ();
    internal virtual Stream ​  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private  ;
    internal ​   Source { get; }
    internal ​  ( );
    internal ​  (​   );
    private static ​  ();
    private static  (​   );
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    public int ();
    internal void (int );
    public long ();
    internal void (long );
    public void (​   );
    public int ();
    internal bool ();
    internal void (    );
    internal void (IList`1<​  > , IList`1<​  > ,     ,     );
    internal void (​   );
    internal virtual void    ​  ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private string ;
    private  ;
    private double ;
    private double ;
    private int ;
    private     ;
    private     ;
    private bool  ;
    private bool  ;
    public string ();
    public void (string );
    public  ();
    public void ( );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public int ();
    public void (int );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public virtual      ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    protected internal int ;
    protected internal Int16[] ;
    protected internal   (int , int );
    protected internal   (   , int , int );
    public virtual string ToString();
    public virtual string   ​ ();
    public static    (   , int , int );
    public short (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    internal   (   );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    [DebuggerBrowsableAttribute("0")]
private static ReadOnlyCollection`1<> ;
    [DebuggerBrowsableAttribute("0")]
private IList`1<> ;
    public int Count { get; }
    [DebuggerBrowsableAttribute("0")]
public bool IsReadOnly { get; }
    public  Item { get; public set; }
    protected   (IEnumerable`1<> );
    private static   ();
    private [] ();
    private IList`1<> ();
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual  get_Item(int );
    public sealed virtual void set_Item(int ,  );
    public sealed virtual bool Equals(object );
    protected bool (  <> );
    protected abstract virtual bool   ​  (IList`1<> , IList`1<> );
    public sealed virtual int GetHashCode();
    protected abstract virtual void   ​  (   & , IList`1<> );
    protected virtual void FreezeMutableFields(object );
    public void (int ,  );
    protected virtual void CloneMutableFields();
    private void (int ,  );
    private void  (int );
    private void (int ,  );
    private void ();
    public sealed virtual int IndexOf( );
    public sealed virtual void Insert(int ,  );
    public sealed virtual void RemoveAt(int );
    public sealed virtual void Add( );
    public sealed virtual void Clear();
    public sealed virtual bool Contains( );
    public sealed virtual void CopyTo([] , int );
    public sealed virtual bool Remove( );
    public sealed virtual IEnumerator`1<> GetEnumerator();
    private sealed virtual override IEnumerator   ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    protected internal int ;
    protected internal int ;
    protected internal   (int );
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ ();
    public abstract virtual int   ​ (Byte[] , int , bool , bool , bool );
    public abstract virtual int   ​ (Byte[] , int , bool , bool , int );
    public abstract virtual void   ​ ();
    public abstract virtual void   ​ (   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : ValueType {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public   ( );
    [IsReadOnlyAttribute]
public bool ();
    public  ();
    public static   <> op_Implicit( );
    public static  op_Implicit(  <> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public virtual void   ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static     ( , bool ,    & , double , int , bool );
    private static  ( );
    private static  ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private static    ;
    private static   ();
    public static    ();
    private static    ();
    public virtual      ​ (Stream );
}
internal abstract class    :    {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private ArraySegment`1<byte> ;
    [NullableContextAttribute("1")]
protected   (Stream , bool );
    protected ArraySegment`1<byte> ();
    protected void (ArraySegment`1<byte> );
    protected abstract virtual void   ​                   ();
    protected abstract virtual void   ​               ​          ​ (int );
    [NullableContextAttribute("1")]
public sealed virtual void Write(Byte[] , int , int );
    public sealed virtual void WriteByte(byte );
    protected virtual void Dispose(bool );
}
internal abstract class  ​  : object {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    protected bool ();
    private void (bool );
    public abstract virtual double  ​ ​ ();
    public abstract virtual double  ​ ​ ();
    public     ();
    public sealed virtual void Dispose();
    protected virtual void  ​ ​ (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   : object {
    private static Char[] ;
    private static ​  ();
    private static Char[] ();
    internal static bool (string );
    internal abstract virtual ​   ​  ​ (string );
    internal abstract virtual ​   ​  ​ (string );
}
[DefaultMemberAttribute("")]
[DebuggerTypeProxyAttribute("GemBox.Collections.EnumerableDebugView`1<​  >")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : object {
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<int, ​  > ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public int Count { get; }
    [DebuggerBrowsableAttribute("0")]
internal ​    { get; }
    internal ​  (    );
    public     ();
    public int get_Count();
    internal void (​   );
    internal ​   (int );
    private ​   (int );
    public sealed virtual IEnumerator`1<​  > GetEnumerator();
    private sealed virtual override IEnumerator ​  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :  ​ {
    private object ;
    private    ;
    private     ;
    private bool ;
    private    ;
    private    ;
    public object ();
    public void (object );
    public    ();
    public void (   );
    public     ();
    public void (    );
    public bool ();
    public void (bool );
    public    ();
    public void (   );
    public    ();
    public void (   );
    public bool ();
    public sealed virtual bool  ​​ ();
    public sealed virtual   ​​ ( );
    public sealed virtual void  ​​ ( ,     );
    public sealed virtual double  ​​ ( );
    public sealed virtual bool  ​​ (   );
    public abstract virtual      ​  ();
    public void (int , Boolean& , Boolean& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    protected internal static string ;
    protected internal    ;
    protected internal int ;
    protected internal   (   , int );
    private static   ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    protected    ;
    internal   (   );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public sealed virtual bool   ​ ();
    public sealed virtual void   ​ (object );
    protected virtual void FreezeMutableFields(object );
    protected static void (TValue& , object );
    public    ();
    protected virtual void CloneMutableFields();
    protected static void (TValue& );
    public abstract virtual bool Equals(object );
    public abstract virtual int GetHashCode();
    private sealed virtual override object   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    internal Byte[] ;
    internal int ;
    internal int ;
    public virtual int   ​ ();
    public virtual Byte[]   ​ ();
    public virtual void   ​ ();
    public void (int );
    public void (int , int );
    public virtual Byte[]   ​ (Byte[] );
    public virtual string ToString();
}
internal static class    : object {
    private static Dictionary`2<string, string> ;
    private static   ();
    [NullableContextAttribute("1")]
public static string (string );
    [IteratorStateMachineAttribute("  /")]
[NullableContextAttribute("1")]
public static IEnumerable`1<string> (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public virtual void   ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    public static  ( ,  , bool , double , double );
    private static void (List`1<   > ,  , double , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    public static    ;
    private static   ();
    public abstract virtual      ​ (Stream );
    public static bool (Stream , Stream& );
    public static bool (Stream ,    & );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    :    {
    public bool CanRead { get; }
    public bool CanWrite { get; }
    protected   (Stream , bool );
    public sealed virtual bool get_CanRead();
    public sealed virtual bool get_CanWrite();
    public sealed virtual int Read(Byte[] , int , int );
    public sealed virtual int ReadByte();
    public abstract virtual void Write(Byte[] , int , int );
}
[NullableContextAttribute("1")]
internal interface  ​  {
    public abstract virtual      ​ ​ ();
    public abstract virtual      ​ ​ ();
    public abstract virtual void  ​ ​ (    );
    public abstract virtual bool  ​ ​ ();
}
[AttributeUsageAttribute("1")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : Attribute {
    [DebuggerBrowsableAttribute("0")]
private string ;
    public ​  (string );
    public string ();
}
[DebuggerTypeProxyAttribute("GemBox.Collections.EnumerableDebugView`1<   >")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   : object {
    [DebuggerBrowsableAttribute("0")]
private IList`1<   > ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public int Count { get; }
    internal ​  (    );
    public     ();
    public int get_Count();
    private static void (    , ​   );
    private static void (    );
    internal void (    );
    internal bool (    );
    internal void (    ,     );
    internal void ();
    private void ( , ​   );
    public sealed virtual IEnumerator`1<   > GetEnumerator();
    private sealed virtual override IEnumerator ​  ​ ();
}
internal class    : object {
    private    ;
    private    ;
    private  ;
    private  ;
    private  ;
    private  ;
    private    ;
    private Nullable`1<int>  ;
    private int  ;
    private bool  ;
    private bool  ;
    private bool  ;
    public    ();
    public void (   );
    public    ();
    public void (   );
    public  ();
    public void ( );
    public  ();
    public void ( );
    public  ();
    public void ( );
    public  ();
    public void ( );
    public    ();
    public void (   );
    public Nullable`1<int>  ();
    public void (Nullable`1<int> );
    public int  ();
    public void (int );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
}
internal class    :    {
    protected internal   (int , double , int , double , double , double );
    [NullableContextAttribute("1")]
public static    (int , double , int , double , double , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public   ( , int );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual    ​ ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private static String[][] ;
    private    ;
    private    ;
    private   [][][][][] ;
    private   [][][][][] ;
    private Int32[][][][][] ;
    private Int32[][][][][] ;
    private Int32[][][][][]  ;
    private Int32[][][][][]  ;
    private Byte[]  ;
    private int  ;
    private bool  ;
    private bool  ;
    private int  ;
    private   [][][][]  ;
    private bool  ;
    public   (   ,    ,   [][][] ,    );
    private static   ();
    public virtual Byte[]   ​ ();
    public virtual int   ​ ();
    public virtual bool   ​ ();
    public virtual bool   ​ ();
    public virtual int   ​ ();
    public static String[][] ();
    private void (int , int , int );
    public virtual      ​ (int , int , int , int ,   [][] , Int32[][] ,    , Byte[]  , int  );
    public virtual void   ​ ();
    public virtual void   ​  ();
    public virtual void   ​  ();
    public virtual      ​ (int , int , int , int );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual bool   ​ (Func`2<, U> , U& );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual Stream   ​ ();
    public abstract virtual void   ​ (   );
    public abstract virtual void   ​ ();
    public abstract virtual void   ​ (Byte[] );
    public abstract virtual void   ​ ();
}
internal abstract class    :    {
    private  ;
    private protected   ( );
    public  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : ​  {
    public static    ;
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    private  ​[] ;
    protected   ( ​ ,  ​[] );
    private static   ();
    public  ​[] ();
    private void ( ​[] );
    public virtual bool ​ ​ ();
    public virtual      ​ ();
    public static    ( ​ ,  ​[] ,    );
    public virtual  ​ ​ ​ ();
    public virtual bool ​ ​ ();
    public virtual bool ​ ​ ();
    public virtual double ​ ​ ();
    public virtual double ​ ​ ();
    public virtual bool ​ ​ ();
    public  ​ ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private Int32[] ;
    public   (int , int , int , Stream , bool );
    protected virtual void   ​                   ();
    protected virtual void   ​               ​          ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class  ​  : object {
    public static void (Int32[] , int , int , int , Int32& , Int32& , Int32& , Int32&  );
    private static bool (Int32[] , int , int , int , int );
    private static bool (Int32[] , int , int , int , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class ​   : object {
    internal abstract virtual Uri ​  ​ ();
    internal abstract virtual string ​  ​ ();
    internal abstract virtual DateTime ​  ​ ();
    internal virtual bool ​  ​ ();
    internal virtual void ​  ​ (bool );
    internal abstract virtual Stream ​  ​ ();
    internal ​   ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ICollection`1<​  >  ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private ​    ;
    internal ​   Source { get; }
    internal ​  ( , ​   );
    internal ​  (    );
    private static ​  ();
    [IteratorStateMachineAttribute("​  /")]
private static IEnumerable`1<​  > ();
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    private protected virtual bool    ​ ();
    internal virtual ​      ​  ();
    public sealed virtual int    ​ ();
    internal void (int );
    public sealed virtual Nullable`1<long>    ​ ();
    internal void (Nullable`1<long> );
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual ​      ​ ();
    public Nullable`1<long> ();
    internal virtual void    ​  ();
    public virtual string ToString();
    internal static  ( );
    internal static ​   (    ,  );
    internal static ​   (​   , bool ,  );
    private static void (​   , int , ​   );
    private sealed virtual override  ​  ​ ();
    private sealed virtual override ​   ​  ​ ();
    private sealed virtual override void ​  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class    :  ​<  > {
    [DebuggerBrowsableAttribute("0")]
private  ​ ;
    internal   ( ​ );
    public  ​ ();
    private protected virtual ​​  ​​ ();
    private protected virtual void  ​​ (   );
    private protected virtual void  ​​  (   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    protected internal static string ;
    private static int ;
    private static int ;
    private static int ;
    private static int ;
    internal    ;
    internal    ;
    private   []  ;
    private   []  ;
    private object  ;
    private     ;
    protected internal   (   ,  );
    private static   ();
    public static    (   ,  );
    private void ();
    private    ( );
    public virtual      ​ (   , int );
    public virtual      ​ (   , int );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    internal   (   );
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
    public virtual string   ​ ();
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual bool   ​ ();
    public abstract virtual void   ​ (object );
    public abstract virtual object   ​ ();
    public abstract virtual bool Equals(object );
    public abstract virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    protected internal int ;
    protected internal int ;
    protected internal int ;
    protected internal Int32[][] ;
    protected internal Int32[][] ;
    public   (int , int );
    public virtual int   ​ ();
    public virtual int   ​ ();
    public virtual int   ​ (int , int , int ,    );
    public virtual int   ​ (int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    private static Dictionary`2<string, CultureInfo> ;
    private static Dictionary`2<int, CultureInfo> ;
    public static CultureInfo ;
    public static CultureInfo ;
    private static String[] ;
    private static String[] ;
    private static   ();
    public static CultureInfo (string );
    [NullableContextAttribute("2")]
public static CultureInfo (int );
    public static CultureInfo (string );
    public static IEnumerable`1<CultureInfo> (CultureTypes );
    internal static bool (string , CultureInfo& );
    private static bool (int , CultureInfo& );
    [IteratorStateMachineAttribute("  /")]
private static IEnumerable`1<CultureInfo> (Int32[] );
    [IteratorStateMachineAttribute("  /")]
private static IEnumerable`1<CultureInfo> (CultureTypes , String[] , String[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    private int ;
    private int ;
    private Int16[] ;
    private Int16[] ;
    private Int16[] ;
    private Int16[] ;
    private   [] ;
    private     ;
    private     ;
    private     ;
    public   (   );
    public virtual void   ​ ();
    private void ();
    public int ();
    public void (int );
    public int ();
    public void (int );
    public   [] ();
    public    ();
    public void (   );
    private    ();
    private void (   );
    private void (   );
    private    ();
}
internal static class    : object {
    public static double (    ,     );
    public static double (    ,     );
    public static double (    ,     );
    public static     (    );
    public static double (    );
    public static double (    );
    public static     (    ,     , double );
    public static double (    );
    public static double (    );
    public static bool (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    [DebuggerBrowsableAttribute("0")]
private SvgDocument ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<SizeF> ;
    internal   (SvgDocument );
    public virtual void   ​ (Double& , Double& );
    public virtual void   ​ (Graphics );
    public virtual void   ​ (    ,    );
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    public   (int , int , int , Stream , bool );
    public static void (Byte[] , int , int , int , int , int );
    public static void (Byte[] , int , int , int , int , int );
    protected virtual bool   ​                      ​   ();
    internal static byte (byte , byte , byte );
}
[NullableContextAttribute("1")]
internal interface  ​  {
    public abstract virtual Func`2<double, double>  ​ ​ ();
    public abstract virtual Func`2<double, double>  ​ ​ ();
}
[NullableContextAttribute("1")]
internal interface ​   {
    public abstract virtual bool ​  ​ ();
    public abstract virtual string ​  ​ ();
    public abstract virtual string ​  ​ ();
    public abstract virtual int ​  ​ ();
    public abstract virtual int ​  ​ ();
    public abstract virtual bool ​  ​ ();
    public abstract virtual double ​  ​ ();
    public abstract virtual double ​  ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class ​   :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ICollection`1<​  > ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ​    ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ​    ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    internal ​   Source { get; }
    internal ​  ( , ​   );
    internal ​  (    );
    internal ​  (​   );
    private static ​  ();
    [IteratorStateMachineAttribute("​  /")]
private static IEnumerable`1<​  > ();
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    private protected virtual bool    ​ ();
    internal virtual ​      ​  ();
    internal ​    ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    public sealed virtual int    ​ ();
    internal void (int );
    public ​    ();
    internal void (​   );
    public sealed virtual Nullable`1<long>    ​ ();
    internal void (Nullable`1<long> );
    public ​    ();
    internal void (​   );
    internal  ();
    internal  ();
    internal  ();
    internal ​    ();
    internal void (bool );
    internal void  ();
    internal void (​   , int );
    internal bool (int , ​  & );
    internal virtual void    ​  ();
    public virtual string ToString();
    private static ​   (​   ,  );
    private static ​   (​   ,  );
    private sealed virtual override  ​  ​ ();
    private sealed virtual override  ​  ​ ();
    private sealed virtual override  ​  ​ ();
    private sealed virtual override ​   ​  ​  ();
    private sealed virtual override  ​  ​  ();
    private sealed virtual override ​   ​  ​  ();
    private sealed virtual override void ​  ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    private bool ;
    private bool ;
    private bool ;
    private bool ;
    private int ;
    private int ;
    private Stream ;
    private int  ;
    private Int32[]  ;
    private Int32[]  ;
    private Byte[]  ;
    private Byte[][][]  ;
    private Byte[][]  ;
    private Byte[][][]  ;
    private Byte[][][]  ;
    private Byte[][][]  ;
    public   (Stream , int , int , bool , bool , bool , bool );
    private void ();
    public virtual int   ​ ();
    private void (   );
    private void (   );
    private void ();
    private void (   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class    : object {
    private static    ;
    private static   ();
    public static void (   );
    public static    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    private StreamWriter ;
    private StreamWriter ;
    private    ;
    protected   (Stream , Stream , int );
    protected   (StreamWriter , StreamWriter , int );
    public virtual void   ​ (int , string );
    public virtual void   ​ (string , int , int );
    public virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    : object {
    public static void (Int32[] , int );
    public static void (Byte[] , byte );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class    :    {
    public Int32[] ;
    public Int32[] ;
    public Int32[] ;
    public Int32[] ;
    public   (   , Int32[] , Int32[] , Int32[] , Int32[] , int );
}
[NullableContextAttribute("1")]
internal interface    {
    public abstract virtual void   ​ (int , string );
    public abstract virtual void   ​ (string , int , int );
    public abstract virtual void   ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class    : object {
    protected internal    ;
    protected internal    ;
    protected internal    ;
    protected internal    ;
    protected internal bool ;
    public int ;
    public int ;
    public int  ;
    public int  ;
    public   (int , int , int , int );
    public virtual      ​ (int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    internal    (int ,  );
    public int ();
    public  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <> {
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private Func`2<​  , > ;
    [DebuggerBrowsableAttribute("0")]
private Func`2<, ​  > ;
    internal ​   Source { get; }
    public    (​   , Func`2<​  , > , Func`2<, ​  > , ​   );
    internal sealed virtual ​   get_Source();
    internal sealed virtual ​      ​ ();
    private protected sealed virtual     ​ (​   );
    private protected sealed virtual ​      ​ ( );
}
[DebuggerTypeProxyAttribute("GemBox.Drawing.Text.TypefaceCollectionDebugView`2")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private Func`3<,    , > ;
    public bool IsReadOnly { get; }
    public int Count { get; }
    internal    (    ,  , Func`3<,    , > );
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual int get_Count();
    public sealed virtual IEnumerator`1<> GetEnumerator();
    public sealed virtual bool Contains( );
    public sealed virtual void CopyTo([] , int );
    private sealed virtual override IEnumerator    ​ ();
    private sealed virtual override void    ​ ( );
    private sealed virtual override bool    ​ ( );
    private sealed virtual override void    ​ ();
}
[ComVisibleAttribute("False")]
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal ​   Source { get; }
    internal    (    );
    private static    ();
    internal virtual ​   get_Source();
    internal virtual ​      ​ ();
    internal virtual     ​ ();
    public     ();
    public     (int );
    public     ();
    public     (int );
    public     (    );
    public     (int ,     );
    private protected virtual        ​ (​   );
    private protected virtual ​      ​ (    );
    private protected virtual void    ​ (int ,     );
    private protected virtual void    ​ (int ,     );
    private protected virtual void    ​ (int );
    private protected virtual bool    ​  (    );
    private protected virtual int    ​  (    );
    private void (    );
    private void (    );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual        ​ (ColorDataName );
    public abstract virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private StringBuilder ;
    private     ;
    internal    (    );
    private static Char[] (ICollection`1<   > );
    private static void (ICollection`1<   > , Char[] );
    [IteratorStateMachineAttribute("   /")]
public IEnumerable`1<> (    , double , Point , double );
    [IteratorStateMachineAttribute("   /")]
private IEnumerable`1<ushort> (    , ICollection`1<   > , GlyphTypeface , bool );
    private static Double[] (IList`1<   > ,  , double );
    private static Double[] (IList`1<   > ,  , double , GlyphTypeface , UInt16[] );
    private GlyphTypeface (    , Char[] , Boolean& );
    private GlyphTypeface (    ,  , string );
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1<T> (DrawingGroup );
    private static int (GlyphTypeface , string );
}
internal static class     : object {
    private static    ();
    [NullableContextAttribute("1")]
public static FontFamily (Uri , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private   { get; private set; }
    internal ​   Source { get; }
    internal    (    );
    private static    ();
    [NullableContextAttribute("2")]
private  ();
    [NullableContextAttribute("2")]
private void ( );
    internal virtual ​   get_Source();
    internal virtual ​      ​ ();
    internal bool (​   );
    private protected virtual        ​ (​   );
    private protected virtual ​      ​ (    );
    private protected virtual        ​ (int );
    private protected virtual void    ​ (int ,     );
    private protected virtual void    ​ (int ,     );
    private protected virtual void    ​ (int );
    private protected virtual void    ​ ();
    private protected virtual int    ​  (    );
    private protected virtual bool    ​  (    );
    private protected virtual void    ​  (   [] , int );
    public  ();
    private protected virtual IEnumerator`1<   >    ​  ();
    private void ();
    private void ();
    private bool (int );
    private void (int , bool );
    private void (int , bool );
    private void (int );
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public    (double , double );
    [IsReadOnlyAttribute]
public double ();
    public void (double );
    [IsReadOnlyAttribute]
public double ();
    public void (double );
    public double ();
    public double ();
    public void ();
    public virtual int GetHashCode();
    public sealed virtual bool Equals(    );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
public sealed virtual string ToString(string , IFormatProvider );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    public static     op_Addition(    ,     );
    public static     op_Addition(    ,     );
    public static     op_UnaryNegation(    );
    public static     op_Subtraction(    ,     );
    public static     op_Multiply(double ,     );
    public static     op_Multiply(    , double );
    public static     op_Division(    , double );
    public static     op_Explicit(    );
    public static Vector op_Implicit(    );
    public static     op_Implicit(Vector );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <KeyValuePair`2<​  ,    >> {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private   <>  ;
    internal ​   Source { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public      { get; public set; }
    internal    (    );
    private static    ();
    private  ();
    private  ();
    private void ();
    internal virtual     ​ ();
    internal virtual ​   get_Source();
    internal virtual ​      ​ ();
    internal virtual ​      ​  ();
    internal virtual        ​ ();
    internal virtual bool    ​  ();
    private protected virtual bool    ​  ();
    private protected virtual bool    ​  ();
    private protected virtual object    ​ ();
    private protected virtual int    ​ ();
    private protected virtual int    ​ ();
    private int ();
    internal virtual void    ​ ();
    public KeyValuePair`2<​  ,    > ( , string );
    public     (​   );
    public void (​   ,     );
    public bool (​   );
    public bool (​   );
    private protected virtual KeyValuePair`2<​  ,    >    ​ (​   );
    private protected virtual ​      ​ (KeyValuePair`2<​  ,    > );
    private protected virtual KeyValuePair`2<​  ,    >    ​ (int );
    private protected virtual void    ​ (int , KeyValuePair`2<​  ,    > );
    private protected virtual void    ​ (KeyValuePair`2<​  ,    > );
    private protected virtual void    ​ (int , KeyValuePair`2<​  ,    > );
    private protected virtual void    ​ (int );
    private protected virtual bool    ​  (KeyValuePair`2<​  ,    > );
    private protected virtual void    ​ ();
    private protected virtual int    ​  (KeyValuePair`2<​  ,    > );
    private protected virtual bool    ​  (KeyValuePair`2<​  ,    > );
    private protected virtual void    ​  (KeyValuePair`2[] , int );
    public  ();
    private protected virtual IEnumerator`1<KeyValuePair`2<​  ,    >>    ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (string ,     );
    public string ();
    public     ();
    public virtual int GetHashCode();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual string ToString();
    public sealed virtual string ToString(string , IFormatProvider );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
internal class     : object {
    private     ;
    private  ;
    private  ​  ;
    [NullableContextAttribute("1")]
public    ( ​  ,     ,     ,  );
    [CompilerGeneratedAttribute]
public sealed virtual  ​     ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (int , int , Double[] , Action`3<int, int, Double[]> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    internal    (    ,     , string );
    public     ();
    private void (    );
    public     ();
    private void (    );
    public string ();
    private void (string );
    public int ();
    internal     ();
    internal bool  ();
    private void ();
    internal string ();
    internal bool  ();
    internal bool  ();
    internal bool (int );
    internal bool (bool , bool );
    public ​    ();
    public      ();
    public      ();
    internal void (    ,     , string );
    public virtual bool Equals(object );
    public sealed virtual bool Equals(    );
    public virtual int GetHashCode();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static [] ;
    private static String[] ;
    private static Dictionary`2<Type, string> ;
    private static    ();
    public static string (Type );
    [ExtensionAttribute]
public static string ( );
    [IteratorStateMachineAttribute("   /")]
[ExtensionAttribute]
private static IEnumerable`1<string> ( );
    [ExtensionAttribute]
public static string ( );
    [ExtensionAttribute]
public static ​   ( , ​   );
    [ExtensionAttribute]
public static T ( , ​   );
    [ExtensionAttribute]
public static ​   (​   , int , ​   );
    [ExtensionAttribute]
public static T (​   , int , ​   );
    [ExtensionAttribute]
public static bool (​   );
    [ExtensionAttribute]
public static bool ( ,  );
    [ExtensionAttribute]
public static bool ( ,  );
    [IteratorStateMachineAttribute("   /")]
[ExtensionAttribute]
public static IEnumerable`1<> ( );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static KeyValuePair`2<CultureInfo, string> (IEnumerable`1<KeyValuePair`2<CultureInfo, string>> );
    [ExtensionAttribute]
public static KeyValuePair`2<CultureInfo, string> (IEnumerable`1<KeyValuePair`2<CultureInfo, string>> , bool , bool );
    [ExtensionAttribute]
public static IDictionary`2<CultureInfo, string> (IEnumerable`1<KeyValuePair`2<CultureInfo, string>> );
    [ExtensionAttribute]
public static IDictionary`2<   , string> (IEnumerable`1<KeyValuePair`2<CultureInfo, string>> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    internal ​   Source { get; }
    [NullableAttribute("2")]
public       { get; internal set; }
    [NullableAttribute("2")]
public       { get; }
    [NullableAttribute("2")]
public       { get; internal set; }
    [NullableAttribute("2")]
public       { get; internal set; }
    [NullableAttribute("2")]
public    { get; public set; }
    [NullableAttribute("2")]
public string   { get; public set; }
    private static    ();
    private    ( );
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    internal  ();
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
internal void (    );
    [NullableContextAttribute("2")]
public     ();
    internal static      ();
    private bool  ();
    public     ();
    public string  ();
    public void (string );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
internal void (    );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
internal void (    );
    [NullableContextAttribute("2")]
public sealed virtual     ​ ();
    [NullableContextAttribute("2")]
public sealed virtual void    ​ ( );
    [NullableContextAttribute("2")]
public string  ();
    [NullableContextAttribute("2")]
public void (string );
    public sealed virtual        ​ ();
    public bool  ();
    public void (bool );
    private ​    ();
    private void (​   );
    private ​    ();
    private void (​   );
    private sealed virtual override     ​ ();
    private sealed virtual override void    ​ ( );
    public  (    ,  , Nullable`1[] );
    public virtual string ToString();
    internal     (    );
    private sealed virtual override ​      ​  ();
    private sealed virtual override void    ​ (​   );
    private sealed virtual override ​      ​  ();
    private sealed virtual override void    ​ (​   );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual        ​ ();
    public abstract virtual        ​ ();
    public abstract virtual        ​ (int );
    public abstract virtual        ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    private ​   ;
    protected    (​   );
    public static ​   (    , ​   );
    public static ​   ( );
    protected abstract virtual        ​ ();
    protected virtual     ​ ();
    protected virtual     ​ ();
    protected virtual ​      ​ ( );
    public sealed virtual  ​  ​ ();
    public sealed virtual void ​  ​ ( );
    public sealed virtual bool ​  ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private static int ;
    [DebuggerBrowsableAttribute("0")]
private Uri ;
    [DebuggerBrowsableAttribute("0")]
private Uri ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private MemoryStream ;
    [DebuggerBrowsableAttribute("0")]
private Package ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<   , GlyphTypeface> ;
    internal    (bool );
    internal Uri ();
    internal bool ();
    public GlyphTypeface (    ,  );
    public Typeface (    ,  );
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    internal static IComparer`1<> ;
    private static    ();
    private static ​   ();
    private static IComparer`1<> ();
    internal static ​   ( );
    internal static void ( , ​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Dictionary`2<string, > ;
    private ParagraphStyle ;
    private CharacterStyle ;
    private TableStyle ;
    public ParagraphStyle ();
    private void (ParagraphStyle );
    public CharacterStyle ();
    private void (CharacterStyle );
    public TableStyle ();
    private void (TableStyle );
    public ParagraphStyle (string );
    public CharacterStyle (string );
    public TableStyle (string );
    private Style (string );
    internal bool (string );
    internal void (string , Style , string , bool );
    internal void (DocumentModel );
    private void ( , DocumentModel , IDictionary`2<string, Style> );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    internal    (    );
    protected virtual ​      ​ ();
    protected virtual string    ​ (    );
    private protected virtual        ​ (​   );
    private protected virtual ​      ​ (    );
    protected virtual string    ​ (​   , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private DocumentModel ;
    private IDictionary`2<   , Paragraph> ;
    private IDictionary`2<string, FontInfo> ;
    public    (    );
    public static DocumentModel (    );
    public void ();
    private void ();
    private Section (    );
    private void ();
    private void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    internal    (    );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public     ();
    public void (    );
    internal     ();
    internal void (    );
    internal     ();
    internal void (    );
    internal static void (    ,     );
    internal static void (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    public     ();
    public void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private protected  ;
    internal ​   Source { get; }
    private protected    ( );
    internal sealed virtual ​   get_Source();
    internal sealed virtual     ​ ();
    internal static     ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Dictionary`2<string, FieldType> ;
    private static Dictionary`2<FieldType, string> ;
    private static    ();
    public static string (BorderStyle );
    public static BorderStyle (string );
    public static string (BuiltInDocumentProperty );
    public static BuiltInDocumentProperty (string );
    public static string (EditingRestrictionType );
    public static EditingRestrictionType (string );
    public static int (EditingRestrictionType );
    public static EditingRestrictionType (int );
    public static string (SectionStart );
    public static SectionStart (string );
    public static string (NumberStyle );
    public static NumberStyle (string );
    public static string (LineNumberRestartSetting );
    public static LineNumberRestartSetting (string );
    public static string (SingleBorderType );
    public static SingleBorderType  (string );
    public static string (HeaderFooterType );
    public static HeaderFooterType  (string );
    public static string (UnderlineType );
    public static UnderlineType  (string );
    public static int (OutlineLevel );
    public static OutlineLevel (int );
    public static string (Nullable`1<HorizontalAlignment> , bool );
    public static HorizontalAlignment (string , bool );
    public static string (SingleBorderType );
    public static SingleBorderType  (string );
    public static int (LineSpacingRule );
    public static LineSpacingRule (int );
    public static string (TabStopAlignment );
    public static TabStopAlignment  (string );
    public static string (TabStopLeader );
    public static TabStopLeader  (string );
    public static int (NumberStyle );
    public static NumberStyle (int );
    public static int (HorizontalAlignment );
    public static HorizontalAlignment (int );
    public static int (ListTrailingCharacter );
    public static ListTrailingCharacter (int );
    public static NumberStyle (string );
    public static HorizontalAlignment  (string );
    public static UnderlineType  (string );
    public static int (TableWidthUnit );
    public static TableWidthUnit (int );
    public static string (HorizontalAlignment );
    public static HorizontalAlignment  (string );
    public static string (SingleBorderType );
    public static SingleBorderType  (string );
    public static string (HorizontalPositionAnchor );
    public static HorizontalPositionAnchor  (string );
    public static string (HorizontalPositionType );
    public static HorizontalPositionType  (string );
    public static string (VerticalPositionAnchor );
    public static VerticalPositionAnchor  (string );
    public static string (VerticalPositionType );
    public static VerticalPositionType  (string );
    public static string (VerticalAlignment );
    public static VerticalAlignment  (string );
    public static string (VerticalAlignment );
    public static VerticalAlignment  (string );
    public static string (SingleBorderType );
    public static SingleBorderType  (string );
    public static string (SingleBorderType );
    public static SingleBorderType  (string );
    public static string (TableCellTextDirection );
    public static TableCellTextDirection  (string );
    public static string ( );
    public static   (string );
    public static string (TableStyleFormatType );
    public static TableStyleFormatType  (string );
    public static int (WrapTextType );
    public static WrapTextType  (int );
    public static int (TextWrappingStyle );
    public static TextWrappingStyle  (int );
    public static int (HorizontalPositionAnchor );
    public static HorizontalPositionAnchor  (int );
    public static int (HorizontalPositionType );
    public static HorizontalPositionType  (int );
    public static int (VerticalPositionAnchor );
    public static VerticalPositionAnchor  (int );
    public static int (VerticalPositionType );
    public static VerticalPositionType  (int );
    public static string (HorizontalPositionAnchor );
    public static string (VerticalPositionAnchor );
    public static Color  (int );
    public static int (Color );
    public static BorderStyle  (int );
    public static int (BorderStyle );
    public static BorderStyle  (int );
    public static int (BorderStyle );
    public static int (TextDirection );
    public static TextDirection  (int );
    public static FieldType  (string );
    public static string (FieldType );
    public static int (FormTextType );
    public static FormTextType  (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public    (string );
    public    (string , string );
    public    (string , string , string );
    internal    (    ,     );
    [NullableContextAttribute("2")]
internal static     (    );
    public string ();
    internal string ();
    internal string ();
    private static void (Uri , String& , String& );
    internal ICollection`1<   > ();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public virtual string ToString();
    private sealed virtual override bool    ​ (   );
    private sealed virtual override    &    ​ ();
    private sealed virtual override        ​ ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override bool    ​ ();
    private sealed virtual override void    ​ (bool );
    private sealed virtual override bool    ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private Byte[] ;
    public    (Byte[] );
    public Byte[] ();
    public virtual     ​ ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    );
    public     ();
    public void (    );
    public ​   ();
    public void (​   );
    public ​   ();
    public void (​   );
    public bool ();
    public void (bool );
    public ​   ();
    public void (​   );
    internal static void (    ,     );
    internal static void (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Stack`1<> ;
    private ParagraphFormat ;
    private ListFormat ;
    private CharacterFormat ;
    private PageSetup ;
    private int ;
    private int ;
    private Stack`1<int>  ;
    private int  ;
    private bool  ;
    private int  ;
    private int  ;
    private bool  ;
    private bool  ;
    private string  ;
    public int ();
    private void (int );
    public bool  ();
    public void (bool );
    public int ();
    private void (int );
    public int ();
    public void (int );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public string  ();
    public void (string );
    public ParagraphFormat  ();
    public ListFormat  ();
    public void (ListFormat );
    public CharacterFormat  ();
    public PageSetup  ();
    public int ();
    public void (int );
    public int  ();
    public void (int );
    public void ();
    public void ();
    public void (int );
    public void ();
    private static T (T& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
internal     ;
    internal    (    );
    public int ();
    public double ();
    public double ();
    internal double ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static Char[] ;
    private static    ();
    public static T (  <T> );
    public static double (TableWidthUnit );
    public static string (IDictionary`2<string,    > );
    public static bool (MultipleBorders , SingleBorder , SingleBorderType[] );
    public static bool (MultipleBorders , SingleBorderType[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private ReadOnlyCollection`1<   > ;
    [DebuggerBrowsableAttribute("0")]
private protected  ;
    internal ​   Source { get; }
    [NullableAttribute("2")]
public      { get; public set; }
    private protected    ( );
    private protected    ( ,     );
    private static    ();
    internal sealed virtual ​   get_Source();
    internal sealed virtual     ​ ();
    public virtual     ​ ();
    public     ();
    private void (    );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    public void (double , double , double , double );
    public bool ();
    public void (bool );
    internal static     (​   );
    private static     ( );
    public static     ( );
    private protected sealed virtual        ​ (    );
    internal     (    );
    public static IList`1<   > (IList`1<   > );
    private protected IList`1<   > (​   );
    private protected void (​   , IList`1<   > , int );
    private static     (IList`1<   > ,     );
    private protected void (​   , IList`1<   > );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private  ;
    private  ;
    public    (string , string , string , Dictionary`2<string, string> , string , string , string , Dictionary`2<string, string>  );
    public void (string , string , string );
    public string (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static     ;
    public static     ;
    public static     ;
    public static     ;
    public static     ;
    public static     ;
    public static     ;
    public static      ;
    public static      ;
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<   , string>  ;
    private static    ();
    internal static string (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private List`1<   > ;
    private Dictionary`2<string, object> ;
    private Dictionary`2<string, object> ;
    private Dictionary`2<string,    > ;
    private List`1<string> ;
    private List`1<string> ;
    private List`1<string> ;
    private List`1<string>  ;
    private Dictionary`2<string,    >  ;
    private Dictionary`2<string,    >  ;
    private Dictionary`2<string,    >  ;
    private Dictionary`2<string,    >  ;
    private string  ;
    private string  ;
    private Dictionary`2<Element, Dictionary`2<string,    >>  ;
    public ReadOnlyCollection`1<   > ();
    public   <string, object> ();
    public   <string, object> ();
    public   <string,    > ();
    public ReadOnlyCollection`1<string>  ();
    public ReadOnlyCollection`1<string>  ();
    public ReadOnlyCollection`1<string>  ();
    public ReadOnlyCollection`1<string>  ();
    public   <string,    > ();
    public   <string,    > ();
    public   <string,    > ();
    public   <string,    >  ();
    internal Dictionary`2<Element, Dictionary`2<string,    >>  ();
    internal void (Dictionary`2<Element, Dictionary`2<string,    >> );
    internal void (Element , string ,     );
    public string  ();
    public void (string );
    public string  ();
    public void (string );
    public void (    , bool );
    public void (    );
    public bool (    );
    public void (string ,     , bool );
    public void (string );
    public void (string );
    public void (string );
    public void (string );
    public void (string ,     );
    public void (string ,     );
    public void (string ,     );
    public void (string ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    private static    ();
    private    ( );
    public    (int , IList`1<   > ,     );
    public    (int , int , int ,     ,     , IList`1<   > ,     );
    public virtual     ​ ();
    public int ();
    private void (int );
    public void (    );
    public     (bool );
    private protected virtual   <double>    ​ (Stream );
    private protected virtual void    ​ (Stream );
    public  ();
    private protected virtual IEnumerator    ​  ();
    [IteratorStateMachineAttribute("   /")]
private protected virtual IEnumerator`1<  <double>>    ​  ();
    [IteratorStateMachineAttribute("   /")]
private protected virtual IEnumerator`1<  <double>>    ​  ();
    private sealed virtual override IEnumerator`1<   >    ​ ();
    private sealed virtual override IEnumerable`1<   >    ​ (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    private Element ;
    private bool ;
    private bool ;
    public    (Element , string );
    public Element ();
    public bool ();
    private void (bool );
    public bool ();
    private void (bool );
    public sealed virtual void   ​ (int ,   & ,   & );
    public sealed virtual object  ​​ ();
    public sealed virtual object  ​​ (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    internal    (    );
    protected virtual ​      ​ ();
    protected virtual string    ​ (    );
    private protected virtual        ​ (​   );
    private protected virtual ​      ​ (    );
    protected virtual string    ​ (​   , int );
    internal     (​   , int , String& );
}
internal interface     {
    public abstract virtual int    ​ ();
    public abstract virtual void    ​ (int );
    public abstract virtual void    ​ ();
    public abstract virtual void    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [NullableAttribute("2")]
public string  { get; public set; }
    private static    ();
    internal    ( );
    internal static     (    );
    private protected virtual void    ​ (    );
    public virtual     ​  ();
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    public bool ();
    public void (bool );
    private protected virtual bool    ​ ();
    internal bool ();
    internal void (bool );
    private protected virtual bool    ​ (bool );
    internal virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    internal    (Byte[] , int );
    public byte ();
    public void (byte );
    private sealed virtual override int    ​ ();
    private sealed virtual override void    ​ (int );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    );
    public     ();
    public void (    );
    internal     (    ,     );
    private static     (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    protected abstract virtual ​      ​ ();
    public ​   ();
    public abstract virtual     ​ ();
    public virtual bool    ​ ();
    public virtual bool    ​ ();
    public virtual Uri    ​ ();
    public abstract virtual void    ​ (Stream );
    public void (string );
    public sealed virtual string ToString();
    private static string ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Stack`1<> ;
    private     ;
    private bool ;
    public     Data { get; }
    public    (    );
    [CompilerGeneratedAttribute]
public sealed virtual     get_Data();
    public bool ();
    private void (bool );
    private void ( );
    private  ();
    public sealed virtual void LoadInputs();
    public sealed virtual void SaveToOutputs();
    public sealed virtual void Unknown();
    public sealed virtual void Number(double );
    public sealed virtual void Expression(Action`1[] );
    public sealed virtual void Add();
    public sealed virtual void Sub();
    public sealed virtual void Mul();
    public sealed virtual void Div();
    public sealed virtual void Idiv();
    public sealed virtual void Mod();
    public sealed virtual void Neg();
    public sealed virtual void Abs();
    public sealed virtual void Ceiling();
    public sealed virtual void Floor();
    public sealed virtual void Round();
    public sealed virtual void Truncate();
    public sealed virtual void Sqrt();
    public sealed virtual void Sin();
    public sealed virtual void Cos();
    public sealed virtual void Atan();
    public sealed virtual void Exp();
    public sealed virtual void Ln();
    public sealed virtual void Log();
    public sealed virtual void Cvi();
    public sealed virtual void Cvr();
    public sealed virtual void Eq();
    public sealed virtual void Ne();
    public sealed virtual void Gt();
    public sealed virtual void Ge();
    public sealed virtual void Lt();
    public sealed virtual void Le();
    public sealed virtual void And();
    public sealed virtual void Or();
    public sealed virtual void Xor();
    public sealed virtual void Not();
    public sealed virtual void Bitshift();
    public sealed virtual void True();
    public sealed virtual void False();
    public sealed virtual void If(Action`1<IPdfPostScriptContext> );
    public sealed virtual void Ifelse(Action`1<IPdfPostScriptContext> , Action`1<IPdfPostScriptContext> );
    public sealed virtual void Pop();
    public sealed virtual void Exch();
    public sealed virtual void Dup();
    public sealed virtual void Copy();
    public sealed virtual void Index();
    public sealed virtual void Roll();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
private Typeface ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal IEnumerable`1<KeyValuePair`2<CultureInfo, string>>   { get; }
    public abstract virtual bool    ​ ();
    internal virtual int    ​ ();
    protected abstract virtual        ​  ();
    public      ();
    internal abstract virtual void    ​ (    );
    public abstract virtual       ​ ();
    public abstract virtual void    ​ (    );
    public virtual bool    ​ ();
    public virtual bool    ​ ();
    internal abstract virtual IEnumerable`1<KeyValuePair`2<CultureInfo, string>>    ​  ();
    public abstract virtual double    ​  ();
    internal abstract virtual double    ​  ();
    public abstract virtual double    ​  ();
    public abstract virtual int    ​ (Int32& ,    );
    public abstract virtual double    ​  ();
    public abstract virtual void    ​ (double );
    public abstract virtual double    ​  ();
    public abstract virtual void    ​ (double );
    public abstract virtual double    ​  ();
    public abstract virtual void    ​ (double );
    public abstract virtual double    ​  ();
    public abstract virtual void    ​ (double );
    public abstract virtual double    ​  ();
    public abstract virtual void    ​ (double );
    public abstract virtual double    ​  ();
    public abstract virtual void    ​ (double );
    public virtual string    ​  ();
    public virtual void    ​ (string );
    public virtual        ​  ();
    public virtual ushort    ​  ();
    public      ();
    public IDictionary`2<   , string>  ();
    protected string  ();
    public sealed virtual int CompareTo(    );
    public sealed virtual bool Equals(    );
    public sealed virtual bool Equals(object );
    public sealed virtual int GetHashCode();
    public virtual string ToString();
    protected abstract virtual        ​  ();
    internal      ();
    private sealed virtual override bool    ​ (   );
    private sealed virtual override       ​  ();
    private sealed virtual override       ​  ();
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override bool    ​ ();
    private sealed virtual override void    ​ (bool );
    private sealed virtual override bool    ​ ();
    internal Typeface (    );
    internal virtual void    ​ ();
}
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public    (    ,     );
    public double ();
    public double ();
    public double (double );
    public void (Double& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<, SKPaint> ;
    [DebuggerBrowsableAttribute("0")]
private List`1<   > ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<object,   > ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2< ​ , SKBitmap> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<SKColor> ;
    public    ( ​  , bool , bool , bool );
    public Nullable`1<SKColor> ();
    internal void (Nullable`1<SKColor> );
    public virtual        ​ (object );
    public sealed virtual void Dispose();
    public SKPaint (    , SKFont );
    public SKPaint (    );
    public SKFont (    );
    public    (object );
    public void (object ,    );
    public SKBitmap (   );
    private static SKBitmap ( ​  ,     );
}
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private PdfPostScriptCalculatorErrorType ;
    [NullableContextAttribute("1")]
internal    (PdfPostScriptCalculatorErrorType , string , int , Exception );
    public PdfPostScriptCalculatorErrorType ();
}
[DefaultMemberAttribute("")]
[DebuggerTypeProxyAttribute("GemBox.Collections.CollectionDebugView`1<   >")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private IList`1<   > ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public bool IsReadOnly { get; }
    public int Count { get; }
    public     Item { get; public set; }
    [DebuggerBrowsableAttribute("0")]
internal      { get; }
    [DebuggerBrowsableAttribute("0")]
internal      { get; }
    internal    (    , IList`1<   > );
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual int get_Count();
    public sealed virtual     get_Item(int );
    public sealed virtual void set_Item(int ,     );
    public sealed virtual bool Contains(    );
    public sealed virtual int IndexOf(    );
    public sealed virtual void Insert(int ,     );
    public sealed virtual void Add(    );
    public sealed virtual void RemoveAt(int );
    public sealed virtual bool Remove(    );
    public sealed virtual void Clear();
    public sealed virtual void CopyTo(   [] , int );
    public sealed virtual IEnumerator`1<   > GetEnumerator();
    private     ();
    internal     ();
    internal     (string );
    internal     (    );
    private static     (    );
    private     (    , Boolean& );
    internal int (    );
    private void ();
    private void (    , int );
    private void (    );
    private void (    );
    private sealed virtual override IEnumerator    ​ ();
    internal void ();
}
internal class     : object {
    private     ;
    private int ;
    private int ;
    public    (int , int ,     );
    public     ();
    public int ();
    public int ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    <> {
    [DebuggerBrowsableAttribute("0")]
private static    <, > ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    private static    ();
    protected virtual    <, >    ​ ();
    public virtual int    ​ ();
    public virtual int    ​ ();
    public  ();
    public void ( );
    protected virtual    <byte>    ​  (ArrayPool`1<byte> , int );
    [NullableContextAttribute("0")]
protected virtual bool    ​  (    , ArraySegment`1<byte> , int );
    public sealed virtual void Dispose();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     :     {
    private static    ();
    [NullableContextAttribute("1")]
internal    ( );
    [NullableContextAttribute("1")]
internal static     (    );
    [NullableContextAttribute("1")]
private protected virtual void    ​ (    );
    public virtual     ​  ();
    private protected virtual object    ​  ();
    private protected virtual void    ​ (object );
    public string ();
    public void (string );
    public bool ();
    public void (bool );
    internal virtual string    ​ ();
    internal virtual void    ​ (string );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    private protected virtual void    ​ (int , bool );
    private protected virtual void    ​  ();
    private protected virtual void    ​  ();
    internal void (string );
    [NullableContextAttribute("1")]
internal virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    internal    (Byte[] , int );
    public sealed virtual int    ​ ();
    public sealed virtual void    ​ (int );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    internal ​   Source { get; }
    private static    ();
    private    (​   );
    internal virtual ​   get_Source();
    internal virtual ​      ​ ();
    private protected virtual        ​ (​   );
    private protected virtual ​      ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private Stream ;
    private  ;
    private  ;
    private int ;
    private bool ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IList`1<   > ;
    private bool ;
    private      ;
    [NullableAttribute("2")]
private      ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IList`1<   >  ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<   >   { get; public set; }
    [NullableAttribute("2")]
public       { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<   >   { get; public set; }
    public    (Stream ,  , int , bool );
    public Stream ();
    public void (Stream );
    public  ();
    public void ( );
    public  ();
    public void ( );
    public int ();
    public void (int );
    public bool ();
    public void (bool );
    public IList`1<   > ();
    public void (IList`1<   > );
    public bool ();
    public void (bool );
    public      ();
    public void (    );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public void (    );
    public IList`1<   >  ();
    public void (IList`1<   > );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
public      { get; }
    internal    (    ,     );
    private static    ();
    internal     ();
    internal     ();
    public     (string );
    private protected virtual        ​ (​   );
    private protected virtual ​      ​ (    );
    private protected virtual bool    ​  (    );
    private protected virtual int    ​  (    );
    private protected virtual bool    ​  (    );
    private protected virtual void    ​ (int ,     , bool );
    private protected virtual void    ​ (    );
    private protected virtual void    ​ (    );
    private protected virtual void    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  ​  {
    public static string (int );
    public static string (string );
    public static string (string );
    public static string (string );
    public static string (string , string );
    public static string (Uri );
    public static string (string );
    public static string (Uri );
    public static string (Uri );
}
internal class     :     {
    [NullableContextAttribute("1")]
public    (    );
    private protected virtual void    ​ ​();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    {
    public    (Stream , bool );
    public virtual void Write(Byte[] , int , int );
    public virtual void WriteByte(byte );
    public virtual void Flush();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <UInt32> ;
    private     ;
    private     ;
    private     ;
    private static    ();
    public     ();
    public void (    );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public static     ();
    public virtual        ​ ();
    public virtual void    ​ (    );
    public virtual void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    {
    [DebuggerBrowsableAttribute("0")]
private WebResponse ;
    public    (WebResponse );
    protected virtual void Dispose(bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    );
    public     ();
    public string ();
    public T ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <> {
    private string ;
    public    (string ,  , int );
    public    (string ,  , int , Func`2<, string> );
    public string ();
    private void (string );
    public virtual string ToString();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     :     {
    private Byte[] ;
    private     ;
    private     ;
    private     ;
    [NullableAttribute("1")]
public Encoding   { get; public set; }
    [NullableContextAttribute("1")]
internal    (    , Byte[] );
    internal    (    );
    [NullableContextAttribute("1")]
internal    (IList`1<   > , Byte[] );
    public    (    , Byte[] ,  , Encoding );
    [NullableContextAttribute("1")]
public    (    , Stream ,  , Encoding );
    public virtual bool    ​ ();
    internal virtual bool    ​ ();
    internal virtual bool    ​ ();
    internal virtual bool    ​ ();
    internal     ();
    internal     ();
    internal     ();
    public Byte[] ();
    public  ();
    public void ( );
    [NullableContextAttribute("1")]
public Encoding ();
    [NullableContextAttribute("1")]
public void (Encoding );
    public string  ();
    public void (string );
    [NullableContextAttribute("1")]
private protected virtual void    ​ (object , CollectionChangeEventArgs );
    internal void ( , bool );
    internal void (Encoding , bool );
    internal void ( );
    internal void (string );
    internal void (string );
    public Byte[] ();
    internal void (Byte[] ,  );
    internal void (Byte[] );
    internal string  ();
    internal void (string , Encoding ,  );
    internal void (string , Encoding );
    internal void (string );
    [NullableContextAttribute("1")]
public virtual        ​  ();
    [NullableContextAttribute("1")]
public virtual        ​ (Func`2<   , bool> );
    [NullableContextAttribute("1")]
internal virtual        ​  ();
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private static UInt32 ;
    [DebuggerBrowsableAttribute("0")]
private UInt32 ;
    [DebuggerBrowsableAttribute("0")]
private UInt32 ;
    [DebuggerBrowsableAttribute("0")]
private UInt32 ;
    [DebuggerBrowsableAttribute("0")]
private UInt32 ;
    [DebuggerBrowsableAttribute("0")]
private UInt32 ;
    [DebuggerBrowsableAttribute("0")]
private UInt32 ;
    [DebuggerBrowsableAttribute("0")]
private UInt32  ;
    [DebuggerBrowsableAttribute("0")]
private UInt32  ;
    private static    ();
    public static int (int );
    public static int (int , int );
    public static int (int , int , int );
    public static int (int , int , int , int );
    public static int (int , int , int , int , int );
    public static int (int , int , int , int , int , int );
    public static int (int , int , int , int , int , int , int );
    public static int (int , int , int , int , int , int , int , int  );
    public void (int );
    private void (UInt32 );
    public int ();
    private static UInt32 (UInt32 , int );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Encoding ;
    private static    ();
    [ExtensionAttribute]
public static void (Stream , bool );
    [ExtensionAttribute]
public static bool (Stream );
    [ExtensionAttribute]
public static void (Stream , Byte[] );
    [ExtensionAttribute]
public static Byte[] (Stream );
    [ExtensionAttribute]
public static void (Stream , string );
    [ExtensionAttribute]
public static string (Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    internal XmlReader ;
    private bool ;
    public    (XmlReader );
    public int ();
    public bool ();
    public bool ();
    public string ();
    public string  ();
    public string  ();
    public bool ();
    public void  ();
    public bool ();
    public bool ();
    public T (bool );
    public bool (string , string , T& );
    public string  ();
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     : Collection`1<   > {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private CollectionChangeEventHandler ;
    [DebuggerBrowsableAttribute("0")]
public      { get; }
    [DebuggerBrowsableAttribute("0")]
public      { get; }
    internal    (IList`1<   > );
    [NullableContextAttribute("2")]
internal void (CollectionChangeEventHandler );
    [NullableContextAttribute("2")]
internal void (CollectionChangeEventHandler );
    public     (string );
    public     ( );
    private void (object , EventArgs );
    private void (CollectionChangeAction ,     );
    private void (int , bool );
    protected virtual void SetItem(int ,     );
    protected virtual void InsertItem(int ,     );
    protected virtual void RemoveItem(int );
    protected virtual void ClearItems();
    [NullableContextAttribute("2")]
internal void ( , string );
    [NullableContextAttribute("2")]
internal     ( );
    internal IList`1<   > ();
    public bool ( );
    public int ( );
    public bool (string );
    public bool ( );
    public bool (string ,    & );
    [NullableContextAttribute("2")]
public bool ( ,    & );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static StringBuilder (StringBuilder , IFormatProvider , string );
    [ExtensionAttribute]
public static StringBuilder (StringBuilder , IFormatProvider , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static String[] ;
    private static    ();
    public static void (string ,     ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <UInt32> ;
    private static    ();
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
    public virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Uri ;
    private static    ();
    public static string (string , string );
    public static string (string );
    public static string (string , string );
    public static string (string );
    public static string (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    private string ;
    public    (string );
    public string ();
    public  ( );
    public abstract virtual bool    ​ ( );
    protected abstract virtual string    ​ ();
}
[NullableContextAttribute("1")]
internal interface     {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ArraySegment`1<>  { get; }
    public abstract virtual ArrayPool`1<>    ​ ();
    public abstract virtual ArraySegment`1<>    ​ ();
    public abstract virtual    <>    ​ (Nullable`1<int> );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <UInt32> ;
    private ushort ;
    private static    ();
    public ushort ();
    public void (ushort );
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
    public static     ();
    public virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static ICollection`1<string> ;
    private static    ();
    public static bool (string , string );
    private static     (string );
    private static     (string ,  ​  );
    private static     (string ,  ​  );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <> {
    private static    <> ;
    private Dictionary`2<string, > ;
    private  ;
    private Dictionary`2<, string> ;
    private string ;
    private static    ();
    public static    <> ();
    public bool (string , & );
    public  (string ,  );
    public virtual     ​ (string );
    public bool ( , String& );
    public string ( , string );
    public virtual string    ​ ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<NumberStyle>  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private ParagraphStyle  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<ListTrailingCharacter>  ;
    [DebuggerBrowsableAttribute("0")]
private Picture  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<HorizontalAlignment>  ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private object  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal object   { get; internal set; }
    private static    ();
    [NullableContextAttribute("2")]
internal object ();
    [NullableContextAttribute("2")]
internal void (object );
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    public Nullable`1<bool> ();
    public void (Nullable`1<bool> );
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    public Nullable`1<NumberStyle>  ();
    public void (Nullable`1<NumberStyle> );
    public string  ();
    public void (string );
    public string  ();
    public void (string );
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    public ParagraphStyle  ();
    public void (ParagraphStyle );
    public Nullable`1<bool> ();
    public void (Nullable`1<bool> );
    public Nullable`1<ListTrailingCharacter>  ();
    public void (Nullable`1<ListTrailingCharacter> );
    public string  ();
    public void (string );
    public Nullable`1<bool> ();
    public void (Nullable`1<bool> );
    public Picture  ();
    public void (Picture );
    public Nullable`1<HorizontalAlignment>  ();
    public void (Nullable`1<HorizontalAlignment> );
    public      ();
    public void (    );
    public      ();
    public void (    );
    protected virtual Style    ​ ();
    protected virtual void    ​ (Style );
    protected virtual  ​ <   >    ​  ();
    public virtual        ​ ();
    private bool (    );
    internal bool (    );
    public virtual bool Equals(    );
    public virtual int GetHashCode();
    public virtual        ​ ();
    public     (bool , ListLevelFormat );
    protected virtual void    ​ ();
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override  ​ <   >    ​  ();
    public sealed virtual bool   ​ (Func`2<   , U> , U& );
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override  ​ <   >    ​  ();
    public sealed virtual bool   ​ (Func`2<   , U> , U& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    private     ;
    private     ;
    public    (    ,     , string );
    internal string ();
    internal     ();
    internal     ();
    public sealed virtual        ​ ();
    [IteratorStateMachineAttribute("   /")]
private IEnumerable`1<   > ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<TableRowHeight> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> ;
    [DebuggerBrowsableAttribute("0")]
private TableRowFormatRevision ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<TableWidth>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<TableWidth>  ;
    [DebuggerBrowsableAttribute("0")]
private Revision  ;
    protected virtual Style    ​ ();
    protected virtual void    ​ (Style );
    public Nullable`1<TableRowHeight> ();
    public void (Nullable`1<TableRowHeight> );
    public Nullable`1<bool> ();
    public void (Nullable`1<bool> );
    public Nullable`1<bool> ();
    public void (Nullable`1<bool> );
    public Nullable`1<bool> ();
    public void (Nullable`1<bool> );
    public TableRowFormatRevision ();
    public void (TableRowFormatRevision );
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    public Nullable`1<TableWidth>  ();
    public void (Nullable`1<TableWidth> );
    public Nullable`1<TableWidth>  ();
    public void (Nullable`1<TableWidth> );
    public Revision  ();
    public void (Revision );
    protected virtual  ​ <   >    ​  ();
    public virtual        ​ ();
    public virtual        ​ ();
    public     (bool , TableRowFormat );
    public virtual int GetHashCode();
    public virtual bool Equals(    );
    internal void (    );
    internal bool (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private static HashSet`1<char> ;
    private static   <   , > ;
    private IEnumerable`1<> ;
    private     ;
    private     ;
    private     ;
    private     ;
    private    ;
    private    ;
    private    ;
    private  []  ;
    private int  ;
    private int  ;
    private    ;
    private    ;
    private IList`1< >  ;
    private IList`1< >  ;
    private double  ;
    private double  ;
    private double  ;
    private double  ;
    private double  ;
    private double  ;
    private double  ;
    private double  ;
    private bool  ;
    private bool  ;
    private bool  ;
    private bool  ;
    private bool  ;
    private bool  ;
    public    (IEnumerable`1<> ,     ,     , StringBuilder , IList`1<   > );
    private static    ();
    private void ();
    private void (bool );
    private void ();
    private void (bool , bool );
    private static void ( & );
    private static     (IEnumerable`1<   > ,     );
    [IteratorStateMachineAttribute("   /")]
private IEnumerable`1<IList`1< >> (List`1< > );
    private void (IList`1<IList`1< >> );
    private bool (Boolean& );
    private void ();
    private void ();
    private void ();
    private static bool (  );
    private void ();
    private bool  ();
    private static bool (    ,    & );
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1< > (IList`1< > );
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1< > (  );
    private static bool (  ,   );
    private void ();
    [IteratorStateMachineAttribute("   / ")]
private IEnumerable`1< >  ();
    private static     (string ,     ,     , Dictionary`2<int,    > );
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1<   > (string ,     ,     , Dictionary`2<int,    > );
    private static     (char ,     ,     , Dictionary`2<int,    > );
    private     (string , Dictionary`2<int,    > );
    private List`1< >  ();
    private static void (    ,    & ,    & );
    private void (IList`1< > );
    private IEnumerable`1< > (IList`1< > );
    [IteratorStateMachineAttribute("   / ")]
private IEnumerable`1< > (IList`1< > );
    private static bool (double , double , double , double , double );
    public void  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Dictionary`2<string, > ;
    private ParagraphStyle ;
    private CharacterStyle ;
    private TableStyle ;
    public ParagraphStyle ();
    private void (ParagraphStyle );
    public CharacterStyle ();
    private void (CharacterStyle );
    public TableStyle ();
    private void (TableStyle );
    public ParagraphStyle (string );
    public CharacterStyle (string );
    public TableStyle (string );
    private Style (string );
    internal bool (string );
    internal void (string , Style , string , bool );
    internal void (DocumentModel );
    private void ( , DocumentModel , IDictionary`2<string, Style> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    internal    (Stream );
    public void (    );
    private void (IDictionary`2<  ,   > , string , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private    (    );
    public static DrawingElement (    ,     );
    private DrawingElement (    );
    private void (    );
    private Shape (    ,     );
    private static Layout (    ,     ,    , Size , bool , ShapeType , DrawingMetadata& , Boolean&  );
    private static Layout (string ,     ,    , Size , bool , String& );
    private static Brush (    ,     );
    private static  (    ,     );
    private TextBox (    ,     );
    private TextBox (    ,     );
    private Picture (    ,     );
    private static FloatingLayout (    , Layout );
    private static string (string ,     );
    private static string (string ,     );
    private Group (    ,     , Group , Size ,    );
    private static Layout (    ,     , Size& ,   & );
    private DrawingElement (    , Group , Size ,    );
    private static void (Group , DrawingElement , Size ,    );
    private static double (double , Group , Size );
    private static double (double , Group , Size );
    internal static     ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    protected bool ;
    protected     ;
    private bool ;
    protected    (    );
    protected  ();
    public bool ();
    private void (bool );
    public abstract virtual bool    ​ ();
    public abstract virtual double    ​ ();
    [NullableContextAttribute("0")]
public abstract virtual        ​ (int ,   <char> , bool , Nullable`1& , Byte& , Int32& , Boolean& );
    public abstract virtual        ​ ();
    public abstract virtual void    ​ ();
    public virtual void    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private     ;
    internal    (ContentPosition , Element ,     );
    public     (Element , ContentPosition );
    protected virtual ContentPosition    ​ (    );
    protected virtual ContentPosition    ​ (    );
    protected virtual ContentPosition    ​ (    );
    protected virtual ContentPosition    ​ (    );
    protected virtual ContentPosition    ​ (    );
    protected virtual ContentPosition    ​ (    );
    protected virtual ContentPosition    ​ (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    private ContentPosition (    );
    protected virtual ContentPosition    ​  (    );
    private static NotSupportedException (    ,     );
    private ContentPosition (    );
    private ContentPosition (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​ (PreservedDrawingElement );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    public    ( );
    public static IEnumerable`1<   > (    , ​   );
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1<   > (    , ​   );
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1<   > (    ,     , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Dictionary`2<string, FieldType> ;
    private static Dictionary`2<FieldType, string> ;
    private static Dictionary`2<Color, string> ;
    private static Dictionary`2<string, Color> ;
    private static    ();
    public static Orientation (string );
    public static string (Orientation );
    public static LineNumberRestartSetting (string );
    public static string (LineNumberRestartSetting );
    public static SectionStart (string );
    public static string (SectionStart );
    public static HorizontalAlignment (string );
    public static string (HorizontalAlignment );
    public static OutlineLevel (int );
    public static int (OutlineLevel );
    public static Nullable`1<LineSpacingRule> (string );
    public static string (LineSpacingRule );
    public static TabStopAlignment (string );
    public static string (TabStopAlignment );
    public static TabStopLeader (string );
    public static string (TabStopLeader );
    public static Color (string , bool );
    private static Color  (string );
    public static string (Color );
    public static HorizontalPositionAnchor  (string );
    public static string (HorizontalPositionAnchor );
    public static TableRowHeightRule  (string );
    public static string (TableRowHeightRule );
    public static VerticalPositionAnchor  (string );
    public static string (VerticalPositionAnchor );
    public static HorizontalPositionType  (string );
    public static string (HorizontalPositionType );
    public static VerticalPositionType  (string );
    public static string (VerticalPositionType );
    public static Nullable`1<SingleBorderType>  (string );
    public static string (SingleBorderType );
    public static MultipleBorderTypes  (string );
    public static BorderStyle (string , bool , Boolean& );
    public static string (BorderStyle );
    public static Nullable`1<>  (string );
    public static string ( );
    public static Color  (string );
    public static string (Color );
    public static Nullable`1<UnderlineType>  (string );
    public static string (UnderlineType );
    public static TableWidthUnit  (string );
    public static string (TableWidthUnit );
    public static TableCellTextDirection  (string );
    public static string (TableCellTextDirection );
    public static VerticalAlignment  (string );
    public static string (VerticalAlignment );
    public static StyleType  (string );
    public static   (string );
    public static NumberStyle  (string );
    public static ListTrailingCharacter  (string );
    public static SpecialCharacterType  (string );
    public static string (SpecialCharacterType );
    public static string (string , string );
    public static Nullable`1<BuiltInDocumentProperty>  (string );
    public static ViewType  (string );
    public static string (ViewType );
    public static EditingRestrictionType  (string );
    public static string (EditingRestrictionType );
    public static PageVerticalAlignment  (string );
    public static string (PageVerticalAlignment );
    public static   (string );
    public static HeaderFooterType (bool , string );
    public static string (HeaderFooterType );
    public static string (Color , bool );
    public static FieldType  (string );
    public static string (FieldType );
    public static string (bool , bool );
    public static double  (string );
    public static double (string , double );
    public static NotSupportedException (string , string );
    public static NotSupportedException (string );
    public static NotSupportedException (T );
    public static double (string , LengthUnit );
    public static double (string , LengthUnit );
    public static double (string , LengthUnit , LengthUnit );
    public static bool (string , LengthUnit , Double& );
    public static bool (string , LengthUnit , LengthUnit , Double& );
    public static double (string , LengthUnit , double );
    private static Nullable`1<LengthUnit>  (string );
    private static byte (string , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
private List`1<​  > ;
    [DebuggerBrowsableAttribute("0")]
private List`1<> ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<KeyValuePair`2<   ,    >> ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    protected    (Stream ,     , ​   );
    protected abstract virtual bool    ​ ();
    protected     ();
    private void (    );
    protected  ();
    private void ( );
    protected int ();
    protected virtual void    ​ (string );
    protected virtual void    ​ ();
    protected abstract virtual        ​ ();
    private void (string );
    public     ();
    private void  ();
    private void (​   );
    protected  (int );
    protected  (    ,     );
    protected virtual   []    ​  ();
    private void (    ,     );
    protected sealed virtual ​      ​ (​   );
    protected sealed virtual ​      ​ ( );
    protected sealed virtual ​      ​ ( );
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<string, object> ;
    public object Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public ICollection`1<string> Keys { get; }
    public ICollection`1<object> Values { get; }
    public sealed virtual object get_Item(string );
    public sealed virtual void set_Item(string , object );
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual ICollection`1<string> get_Keys();
    public sealed virtual ICollection`1<object> get_Values();
    public sealed virtual void Add(KeyValuePair`2<string, object> );
    public sealed virtual void Add(string , object );
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<string, object> );
    public sealed virtual bool ContainsKey(string );
    public sealed virtual void CopyTo(KeyValuePair`2[] , int );
    public sealed virtual IEnumerator`1<KeyValuePair`2<string, object>> GetEnumerator();
    public sealed virtual bool Remove(KeyValuePair`2<string, object> );
    public sealed virtual bool Remove(string );
    public sealed virtual bool TryGetValue(string , Object& );
    private sealed virtual override IEnumerator    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public string HelpLink { get; public set; }
    public    (    ,     );
    public     ();
    public     ();
    public virtual string get_HelpLink();
    public virtual void set_HelpLink(string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ReadOnlyCollection`1<TabStop> {
    [DebuggerBrowsableAttribute("0")]
public static     ;
    public    (IList`1<TabStop> );
    private static    ();
    public     (int , TabStop );
    public     (int , TabStop );
    public     (int );
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal     ;
    private     ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    internal    (    , bool );
    internal    (    , double , double , bool );
    internal    (    ,     );
    internal    (    , bool ,     ,     ,     );
    internal    (    , bool ,     ,     ,     ,     );
    internal    (    , bool ,     ,     ,     ,     ,     );
    internal    (    , bool ,    [] );
    internal    (    , bool , IList`1<   > );
    private    (    );
    private    (    , bool , List`1<   > );
    private static    ();
    public     ();
    public     ();
    public void (    );
    public bool ();
    public void (bool );
    public      ();
    internal void  ();
    internal     ();
    internal bool ();
    internal bool ();
    internal bool ();
    internal void (   & );
    internal bool (    , bool );
    internal static     (​   , bool );
    internal ​    ();
    internal static     (​   , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private TextWriter ;
    private bool ;
    private StringBuilder ;
    public    (TextWriter );
    public void ();
    public void ();
    public void (string , bool );
    public void (string );
    private void (char );
    private void (char );
    public void (int );
    public void ();
    public void ();
    public void ();
    public void (string );
    public void (string , int );
    public void (string , string );
    public void (string );
    public void (string , int );
    public void (string , string );
    public static bool (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private static int ;
    [DebuggerBrowsableAttribute("0")]
private static     ;
    [DebuggerBrowsableAttribute("0")]
private static    [] ;
    [DebuggerBrowsableAttribute("0")]
private static     ;
    [DebuggerBrowsableAttribute("0")]
internal double ;
    [DebuggerBrowsableAttribute("0")]
internal double ;
    [DebuggerBrowsableAttribute("0")]
internal double ;
    [DebuggerBrowsableAttribute("0")]
internal double  ;
    [DebuggerBrowsableAttribute("0")]
internal double  ;
    [DebuggerBrowsableAttribute("0")]
internal double  ;
    [DebuggerBrowsableAttribute("0")]
internal   ;
    public    (double , double , double , double , double , double );
    private static    ();
    public static     ();
    public double ();
    public double ();
    public double ();
    public double ();
    public double ();
    public double ();
    public bool  ();
    internal bool  ();
    internal bool  ();
    internal      ();
    public void (double , double );
    public void (double , double , double );
    public void (double , double , double , double );
    public static     (double , double );
    internal static     (double , double , double );
    private static     (double , double , double , double );
    internal static     (    ,     );
    internal void (   & );
    internal void (   & );
    internal void (   & );
    internal void (double );
    internal void (double );
    public     (    );
    internal void (   & );
    public void (   & );
    public bool  ();
    internal bool (   & , bool , Double& );
    internal bool (   & ,    & );
    internal void (Double& , Double& );
    internal bool (Double& ,    & );
    internal bool (Double& , Double& , Double& );
    internal bool (& , Double& , Double& );
    [NullableContextAttribute("2")]
internal static     (​   );
    internal ​    ();
    internal static int (int );
    internal static     (int ,     );
    internal static     (int ,     );
    public virtual string ToString();
    internal bool (   & );
    internal bool (   & );
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public static     (    ,     );
    public static     op_Multiply(    ,     );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    internal   ();
    internal static     (& );
}
internal static class     : object {
    [NullableContextAttribute("1")]
public static void (VbaProject , Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private IDictionary`2<   ,    > ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    internal    (    ,     ,     , bool );
    public void (    );
    private void (    );
    private void (    ,     );
    private void (   & );
    private void (    );
    private void (    );
    private void (    );
    private void (    );
    private void (    );
    private void (    );
    private void (    );
    private void (   & );
    private void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    internal ​   Source { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal ​     { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal ​     { get; }
    [NullableAttribute("2")]
public       { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ​     { get; }
    private static    ();
    internal abstract virtual ​   get_Source();
    internal virtual     ​ ();
    private protected virtual bool    ​ ();
    [NullableContextAttribute("2")]
internal virtual ​      ​  ();
    [NullableContextAttribute("2")]
internal virtual ​      ​  ();
    private protected virtual bool    ​ ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    [NullableContextAttribute("2")]
public virtual        ​  ();
    internal virtual void    ​ ();
    private protected virtual void    ​ (Stream );
    private protected virtual void    ​ ();
    internal virtual bool    ​ ();
    internal virtual void    ​ ();
    private sealed virtual override ​      ​ ();
    private sealed virtual override bool    ​ ();
    [NullableContextAttribute("2")]
private sealed virtual override ​      ​  ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override void    ​ (Stream );
    private sealed virtual override void    ​ ();
}
[ExtensionAttribute]
internal static class     : object {
    [ExtensionAttribute]
public static bool ( ,  );
    [ExtensionAttribute]
public static  ( ,  , bool );
}
[NullableContextAttribute("1")]
internal interface     {
    [NullableAttribute("2")]
public ​     { get; }
    public abstract virtual void    ​ (double );
    public abstract virtual void    ​ ( );
    public abstract virtual void    ​ ( );
    public abstract virtual void    ​ (double );
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ (double );
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ ();
    public abstract virtual void    ​ ();
    public abstract virtual void    ​ (double , double , double , double , double , double );
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ (    ,     ,     );
    public abstract virtual void    ​ (    ,     );
    public abstract virtual void    ​ (    ,     );
    public abstract virtual void    ​ ();
    public abstract virtual void    ​ (    , double , double );
    public abstract virtual void    ​ ();
    public abstract virtual void    ​ ();
    public abstract virtual void    ​ ();
    public abstract virtual void    ​ ();
    public abstract virtual void    ​  ();
    public abstract virtual void    ​  ();
    public abstract virtual void    ​  ();
    public abstract virtual void    ​  ();
    public abstract virtual void    ​  ();
    public abstract virtual void    ​  ();
    public abstract virtual void    ​  ();
    public abstract virtual void    ​  ();
    public abstract virtual void    ​  ();
    public abstract virtual void    ​  ();
    public abstract virtual void    ​ (double );
    public abstract virtual void    ​ (double );
    public abstract virtual void    ​ (double );
    public abstract virtual void    ​ (double );
    public abstract virtual void    ​ (    , double );
    public abstract virtual void    ​ ( );
    public abstract virtual void    ​  (double );
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ (double , double , double , double , double , double );
    public abstract virtual void    ​  ();
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ (double , double ,     );
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ (    ,     ,     );
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ (IList`1<double> );
    public abstract virtual void    ​ (IList`1<double> ,     );
    public abstract virtual void    ​ (IList`1<double> );
    public abstract virtual void    ​ (IList`1<double> ,     );
    public abstract virtual void    ​  (double );
    public abstract virtual void    ​  (double );
    public abstract virtual void    ​ (double , double , double );
    public abstract virtual void    ​ (double , double , double );
    public abstract virtual void    ​ (double , double , double , double );
    public abstract virtual void    ​ (double , double , double , double );
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ (    ,     );
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ (    ,     );
    public abstract virtual void    ​  ();
    public abstract virtual void    ​  ();
    public abstract virtual void    ​  ();
    [NullableContextAttribute("2")]
public abstract virtual ​      ​  ();
    public abstract virtual void    ​ (EventHandler`1<​  > );
    public abstract virtual void    ​ (EventHandler`1<​  > );
    public abstract virtual void    ​ (EventHandler );
    public abstract virtual void    ​ (EventHandler );
    public abstract virtual void    ​ (    ,     );
    public abstract virtual void    ​ (string ,     );
    public abstract virtual void    ​  ();
    public abstract virtual void    ​ (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  ​  {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    private static    ();
    private    ( );
    internal static     (    );
    private protected virtual void    ​ (    );
    public virtual     ​ ();
    public     ();
    private protected virtual        ​  ();
    public string ();
    public void (string );
    internal ​   ();
    internal void (​   );
    internal  ();
    internal void ( );
    internal virtual        ​ (    );
    internal virtual void    ​ (    );
    private void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  ​  {
    private static bool ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    private static    ();
    private    ( );
    internal static bool ();
    internal static void (bool );
    internal static     (    );
    private protected virtual void    ​ (    );
    public virtual     ​ ();
    public     ();
    private ​   ();
    private void (​   );
    private ​   ();
    private void (​   );
    internal bool ();
    public     ();
    internal void (    );
    public     (    );
    public     (double , double );
    internal     (    , bool );
    internal     (double , double , bool );
    public     (    );
    public     (double , double );
    public     (    ,     ,     );
    public     (double , double , double , double , double , double );
    public     (    ,     , bool , bool , double );
    public     (double , double , double , double , bool , bool , double );
    internal     ();
    internal     (    ,     );
    internal     (double , double , double , double );
    internal     (    ,     );
    internal     (double , double , double , double );
    private protected virtual        ​  ();
    internal virtual        ​ (    );
    internal virtual void    ​ (    );
    private void (    );
    internal bool (bool );
    private void (bool );
    private sealed virtual override     ​  ();
    private sealed virtual override     ​  ();
    private sealed virtual override void    ​ ( );
    private sealed virtual override     ​  ();
    private sealed virtual override void    ​ ( );
    private sealed virtual override     ​  ();
    private sealed virtual override void    ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    );
    public  ();
    public void ( );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    public double ();
    public void (double );
    private protected virtual void    ​ ​();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static IEnumerable`1<string> ;
    private static    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    private static    ();
    private    ( );
    internal static     ();
    internal virtual void    ​ ();
    public virtual     ​ ();
    public string ();
    public void (string );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual void    ​ (   , string , Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  ​  {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    private static    ();
    private    ( );
    internal static     (    );
    private protected virtual void    ​ (    );
    public virtual     ​ ();
    public     ();
    private protected virtual        ​  ();
    public string ();
    public void (string );
    public void (    );
    private ​   ();
    private void (​   );
    internal string ();
    internal void (string );
    internal    <   > ();
    private void ();
    public PdfMarkupAnnotationIntent ();
    internal void (PdfMarkupAnnotationIntent );
    private protected virtual bool  ​ ​ (PdfMarkupAnnotationIntent );
    public      ();
    public void (    );
    internal ​    ();
    internal void (​   );
    internal virtual        ​ (    );
    internal virtual void    ​ (    );
    private void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (    , string , string );
    private static void (    ,     , Picture , string , int , Boolean& );
    public static void (    ,     );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private TableColumn ;
    [NullableContextAttribute("2")]
public    (TableColumn );
    public TableColumn ();
    public void (TableColumn );
    public virtual Style    ​ (DocumentModel );
    public virtual void    ​ ();
    protected virtual void    ​ (DocumentModel ,     );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Dictionary`2<int,    > ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<KeyValuePair`2<ListStyle, string>> ;
    private List`1<> ;
    public    (    );
    public     (int );
    public void (StyleCollection );
    internal void (int ,     );
    internal void (ListStyle , string );
    internal void (ListLevelFormat , string , string , string );
    private static TStyle (string , StyleCollection );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    public    (    );
    [IteratorStateMachineAttribute("   /")]
public IEnumerable`1<> ();
    private static void ( , long , long , long , long , long , long , long  , long  , bool  );
    private     (long , long );
    private static double (double ,     );
    private static double (double );
    internal static bool (& );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private    ( ​  );
    public static Inline (    ,  ​  );
    private Inline (    );
    private static int (long );
    private DrawingElement (    , bool ,  );
    private static void (    , HorizontalPosition& , VerticalPosition& );
    private static HorizontalPosition (    );
    private static HorizontalPosition (    );
    private static VerticalPosition (    );
    private static VerticalPosition (    );
    private static Size (    );
    private static Padding (    );
    private static void (    , WrapTextType& , Int32& , Int32& , Int32& , Int32& , Padding& , String&  );
    private DrawingMetadata (    ,  );
    private Hyperlink  (    );
    private static void (    , Boolean& );
    private DrawingElement (    ,  );
    private DrawingElement (    ,  );
    private Shape (    ,  );
    private Picture (    ,  );
    private void (    ,     );
    private void (    ,     );
    private void (    ,  );
    private void (    ,  );
    private TextBox  (    );
    private TextBoxFormat  (    );
    private static void (    , TextBoxFormat );
    private Picture (    ,     );
    private Picture (    ,     );
    private static void (    ,     , String& , OnlineVideo& );
    private static bool (string , String& );
    private static bool (string , OnlineVideo& );
    private static Transform (    ,   & ,   & );
    private static void  (    ,  );
    private static void  (    ,  );
    private Brush  (    );
    private SolidColorBrush  (    );
    private   (    );
    private static     (    );
    public static Nullable`1<Color> (    , IDictionary`2<string, Color> );
    private static Color  (    );
    private static Color  (    );
    private static Color (    , IDictionary`2<string, Color> );
    private static Color  (    );
    private static Color (    , Color );
    private static void (Shape ,  );
    private Group  (    ,  );
    private DrawingElement  (    );
    private Chart  (    );
    private Canvas  (    );
    private void  (    ,  );
    private void  (    ,  );
    private void  (    ,  );
    private     (    );
    private     (    );
    private Color  (    );
    private static     ();
    private static     (string );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
public long ;
    [DebuggerBrowsableAttribute("0")]
public long ;
    public    (long , long );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (HashSet`1<string> , CharacterFonts );
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1<KeyValuePair`2<string, Action`2<   ,    >>> ();
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1<string> (CharacterFonts );
    private static bool (Element , Element );
    private static void (    ,     , IEnumerable`1<Element> , bool , string );
    private static void (    ,     , IList`1<Section> );
    private static void (    ,     );
    private static void (    , string , string , string , string , string );
    private static void (    , Nullable`1<SingleBorder> , double , string , string );
    private static void (    ,     , string , string , Section );
    private static void (    ,     );
    private static void (    ,     );
    private static void (    ,     , string , Section );
    private static void (    ,     , PageSetup );
    private static void (    , Section );
    private static void (    ,     );
    private static bool (    ,     , string , Section );
    private static void (    , TextColumnCollection );
    public static void (    ,     );
    public static void (    ,     );
    public static void (    ,     );
    public static void (    ,     , string , string , string , Action , Action );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual bool    ​ (   & );
    public void (   & ,    & );
    public void (   & ,    & );
    public void (   & ,    & );
    public sealed virtual void    ​ (   & , double );
    public sealed virtual void    ​ (   & , double );
    public     (   & ,    & );
    public void (   & ,    & );
    public bool (   & ,    & , IEqualityComparer`1<double> , Double& );
    public bool (   & ,    & , IEqualityComparer`1<double> , Double& );
    public bool (   & ,    & , IEqualityComparer`1<double> ,    & );
    public sealed virtual bool    ​ (   & ,    & , IEqualityComparer`1<double> );
    public sealed virtual bool    ​ (   & ,    & , IEqualityComparer`1<double> );
    public double (   & );
    public double (   & );
    public sealed virtual bool    ​ (   & , Double& ,    & );
    private sealed virtual override void    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & );
    private sealed virtual override void    ​ (   & ,    & modreq(System.Runtime.InteropServices.InAttribute) );
    private sealed virtual override void    ​ (   & ,    & modreq(System.Runtime.InteropServices.InAttribute) );
    private sealed virtual override        ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) );
    private sealed virtual override void    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & );
    private sealed virtual override bool    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) , IEqualityComparer`1<double> , Double& );
    private sealed virtual override bool    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) , IEqualityComparer`1<double> , Double& );
    private sealed virtual override bool    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) , IEqualityComparer`1<double> ,    & );
    private sealed virtual override double    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) );
    private sealed virtual override double    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (    ,     , string , string , TableFormat , TableFormat , double , Action  );
    private static void (    , TableFormat , TableFormat , double );
    public static void (    ,     , TableStyle );
    public static bool (    ,     , string , Table );
    public static void (    ,     );
    private static void (    ,     , string , string , TableRowFormat , TableRowFormat );
    private static void (    , TableRowFormat , TableRowFormat );
    public static bool (    ,     , string , TableRowFormat );
    public static void (    ,     );
    private static void (    ,     , string , TableWidth , Table );
    private static void (    , TableWidth , Table );
    public static bool (    ,     , string , TableColumn , Table );
    public static bool (    ,     , string , TableCell );
    public static void (    ,     );
    private static void (    ,     , string , string , TableCellFormat , TableFormat ,  );
    private static void (    ,     , TableCellFormat , TableFormat ,  );
    public static bool (    ,     , string , TableCellFormat , TableFormat ,  );
    public static void (    ,     );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Nullable`1<SingleBorder> (    ,     ,  ,  , Nullable`1<double> , Nullable`1<double> );
    public static void (MultipleBorders , MultipleBorderTypes ,     ,     ,  ,  , Nullable`1<double> , Nullable`1<double>  );
    public static void (PageBorders , MultipleBorderTypes ,     ,     ,  ,  , Nullable`1<double> , Nullable`1<double>  );
    public static Layout (    , Size , string , Nullable`1<double> , Nullable`1<double> , Nullable`1<int> );
    public static void (Layout , string );
    [NullableContextAttribute("2")]
public static void (Shape ,     );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    public static  ​  ;
    public static  ​  ;
    public static  ​  ;
    public static  ​  ;
    public static  ​  ;
    private static    ();
    [ConditionalAttribute("DEBUG")]
protected static void (Type );
    protected static  ​  (string , string , string , string , string , string , string ,   );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
internal interface     {
    public abstract virtual int    ​ ();
    public abstract virtual void    ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static     ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal ​   Source { get; }
    internal    (​   );
    private static    ();
    public virtual     ​ ();
    public virtual int    ​ ();
    internal virtual    []    ​  ();
    internal virtual        ​  ();
    internal virtual ​      ​  ();
    internal virtual ​   get_Source();
    private  ();
    private     ();
    private     ();
    internal static     (int , Byte[] , bool );
    internal static     ();
    private static     (​   );
    private static ​   (int , Byte[] , bool );
    private static ​   ();
    internal Byte[] (bool , Boolean& );
    internal virtual bool    ​ (    , Double& , Double& , Double& );
    internal virtual string    ​ (int );
    private protected virtual void    ​ (    ,     );
    private protected virtual void    ​ (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<Element, ListItem> ;
    internal    (DocumentModel );
    public ListItem (Element );
    public sealed virtual IEnumerator`1<ListItem> GetEnumerator();
    private static ElementType (Element );
    private sealed virtual override IEnumerator    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
    private static bool (​   , ​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static     (    );
    private static TabStop (    );
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1<TabStop> (    );
    private static     (    ,     , Nullable`1& , Nullable`1& );
    public static     (    ,     , string );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual     ​ ();
    public abstract virtual     ​ ();
    public abstract virtual int    ​ ();
    public abstract virtual        ​ (    );
    public abstract virtual void    ​ (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Dictionary`2<ShapeType, List`1<string>> ;
    private static    ();
    public static Dictionary`2<ShapeType, List`1<string>> ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
protected StringBuilder ;
    private protected    (    ,     );
    public     ();
    protected Stream ();
    protected bool ();
    protected abstract virtual ​      ​ (​   );
    protected virtual void    ​ (​   );
    internal long ();
    protected int ();
    protected int ();
    protected void (    );
    protected void (long );
    internal int ();
    protected virtual int    ​  ();
    protected int  ();
    protected void (char , string , int );
    protected void (string , int );
    private void  ();
    protected void  ();
    protected void  ();
    protected virtual string    ​  ();
    internal void  ();
    protected void (string , int );
    protected bool (string );
    protected string  ();
    private ​    ();
    private ​    ();
    protected ​   (Boolean& , Boolean& );
    private ​   (bool , bool , bool , Boolean& );
    private ​   (bool , long , Boolean& );
    private ​   (bool , double , Boolean& );
    private ​   (bool , bool , double );
    protected int  ();
    internal int (string , string , int );
    internal long (string , string , int );
    private ​    ();
    private ​    ();
    private      ();
    protected virtual       ​ (   );
    internal    (   , Byte[] , int , int );
    private     ( );
    internal bool (long , long ,     );
    private      ();
    private void  ();
    private ​    ();
    private void (​   , ​   );
    protected   ();
    protected virtual ​      ​ ( );
    protected virtual ​      ​ ( , ​   );
    protected abstract virtual ​      ​ ( );
    protected ​   (bool );
    internal int (string , int , string , int );
    internal void (string , int );
    protected virtual void    ​ (​   );
    protected virtual void    ​ (bool );
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    private string ;
    private string ;
    private string ;
    private string ;
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private DocumentModel ;
    private int ;
    private Dictionary`2<Comment, int> ;
    [NullableAttribute("2")]
private Paragraph ;
    private Dictionary`2<Paragraph, IList`1<Paragraph>> ;
    private Dictionary`2<int, Paragraph> ;
    private bool ;
    private int  ;
    private Dictionary`2<Picture, string>  ;
    private Dictionary`2<Picture, string>  ;
    private int  ;
    [NullableAttribute("2")]
private ListStyle  ;
    private int  ;
    private HashSet`1<string>  ;
    private Dictionary`2<string, string>  ;
    private Dictionary`2<string, string>  ;
    private Dictionary`2<CharacterFormat, string>  ;
    private Dictionary`2<Field, string>  ;
    private Dictionary`2<ListStyle, string>  ;
    private Dictionary`2<PageSetup, string>  ;
    private Dictionary`2<ParagraphFormat, string>  ;
    private Dictionary`2<Section, string>  ;
    private Dictionary`2<Shape, string>  ;
    private Dictionary`2<Group, string>  ;
    private Dictionary`2<TableCellFormat, string>  ;
    private Dictionary`2<TableColumn, string>  ;
    private Dictionary`2<TableCell, string>  ;
    private Dictionary`2<TableFormat, string>  ;
    private Dictionary`2<TableRowFormat, string>  ;
    [NullableAttribute("2")]
public Paragraph   { get; public set; }
    [NullableAttribute("2")]
public ListStyle   { get; public set; }
    public    (DocumentModel );
    public DocumentModel ();
    public int ();
    public void (int );
    public Dictionary`2<Comment, int> ();
    [NullableContextAttribute("2")]
public Paragraph ();
    [NullableContextAttribute("2")]
public void (Paragraph );
    public Dictionary`2<Paragraph, IList`1<Paragraph>>  ();
    public Dictionary`2<int, Paragraph>  ();
    public bool  ();
    public void (bool );
    public int ();
    public void (int );
    public Dictionary`2<Picture, string>  ();
    public Dictionary`2<Picture, string>  ();
    public int ();
    public void (int );
    [NullableContextAttribute("2")]
public ListStyle  ();
    [NullableContextAttribute("2")]
public void (ListStyle );
    public int ();
    public void (int );
    public HashSet`1<string>  ();
    public Dictionary`2<string, string>  ();
    public Dictionary`2<string, string>  ();
    public Dictionary`2<CharacterFormat, string>  ();
    public Dictionary`2<Field, string>  ();
    public Dictionary`2<ListStyle, string>  ();
    public Dictionary`2<PageSetup, string>  ();
    public Dictionary`2<ParagraphFormat, string>  ();
    public Dictionary`2<Section, string>  ();
    public Dictionary`2<Shape, string>  ();
    public Dictionary`2<Group, string>  ();
    public Dictionary`2<TableCellFormat, string>  ();
    public Dictionary`2<TableColumn, string>  ();
    public Dictionary`2<TableCell, string>  ();
    public Dictionary`2<TableFormat, string>  ();
    public Dictionary`2<TableRowFormat, string>  ();
    public string (string );
    public string (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<​  , ​  > ;
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<​  , ​  > ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    internal    (    , MemoryStream ,     );
    private static    ();
    private static     (Stream );
    public sealed virtual ​      ​  ();
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (int );
    public sealed virtual void    ​ (int );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (​   , double );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ (double , double , double , double , double , double );
    public sealed virtual void    ​ (double , double );
    public sealed virtual void    ​ (double , double );
    public sealed virtual void    ​ (double , double , double , double , double , double );
    public sealed virtual void    ​ (double , double , double , double );
    public sealed virtual void    ​ (double , double , double , double );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ (double , double , double , double );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    [ObsoleteAttribute("Use f instead.")]
public sealed virtual void    ​ ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (​   , double );
    public sealed virtual void    ​ (int );
    public sealed virtual void    ​  (double );
    public sealed virtual void    ​ (double , double );
    public sealed virtual void    ​ (double , double );
    public sealed virtual void    ​ (double , double , double , double , double , double );
    public sealed virtual void    ​  ();
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (double , double ,     );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (double , double );
    public sealed virtual void    ​ (double , double , double , double , double , double );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (IList`1<double> );
    public sealed virtual void    ​ (IList`1<double> , ​   );
    public sealed virtual void    ​ (IList`1<double> );
    public sealed virtual void    ​ (IList`1<double> , ​   );
    public sealed virtual void    ​  (double );
    public sealed virtual void    ​  (double );
    public sealed virtual void    ​ (double , double , double );
    public sealed virtual void    ​ (double , double , double );
    public sealed virtual void    ​ (double , double , double , double );
    public sealed virtual void    ​ (double , double , double , double );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (​   );
    private void ( );
    private static  ( );
    private void (   );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (​   , ​   );
    public sealed virtual void    ​  (​   );
    public sealed virtual void    ​ (​   , ​   );
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    private void ();
    private void ( );
    public sealed virtual void    ​ (    ,     );
    public sealed virtual void    ​ (string ,     );
    public sealed virtual void    ​  ();
    public sealed virtual void    ​ (string );
    protected virtual void    ​ (bool );
    protected virtual void    ​ (​   );
    protected virtual void    ​ (​   );
    protected virtual void    ​ (​   );
    private sealed virtual override void    ​ (EventHandler`1<​  > );
    private sealed virtual override void    ​ (EventHandler`1<​  > );
    private sealed virtual override void    ​ (EventHandler );
    private sealed virtual override void    ​ (EventHandler );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private DocumentModel ;
    private HtmlSaveOptions ;
    private     ;
    private     ;
    private HeaderFooter ;
    public    (    , Func`2<   , string> , DocumentModel , HtmlSaveOptions , Dictionary`2<Stream,    > , bool , bool );
    public void ();
    private void ();
    private BlockCollection ();
    private void ();
    private BlockCollection ();
    private void (Section );
    private void (Section );
    private void ();
    private int (int );
    private void ();
}
[ComVisibleAttribute("True")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public     (string );
    public     (string , object );
    public void (object , string );
    public ArrayList (object );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private Paragraph ;
    private Paragraph ;
    private List`1<Element> ;
    public    (ContentRange , bool );
    public ContentPosition ();
    private ContentPosition ();
    private ContentPosition (Element , int );
    private void ();
    private void (Element , int );
    private static void (Paragraph , Paragraph );
    private ContentPosition (ContentPosition );
    private static string (Element );
    protected virtual void    ​ (Element );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private IList`1<Block> ;
    private InlineCollection ;
    private Table ;
    private List`1<string> ;
    private bool ;
    private ListFormat ;
    private int ;
    private int  ;
    private int  ;
    private StringBuilder  ;
    private bool  ;
    private IList`1<Action>  ;
    public IList`1<Block> ();
    public void (IList`1<Block> );
    public InlineCollection ();
    public void (InlineCollection );
    public Table ();
    public void (Table );
    public List`1<string> ();
    public void (List`1<string> );
    public bool ();
    public void (bool );
    public ListFormat ();
    public void (ListFormat );
    public int  ();
    public void (int );
    public int  ();
    public void (int );
    public int  ();
    public void (int );
    public StringBuilder  ();
    public void (StringBuilder );
    public bool ();
    public void (bool );
    public IList`1<Action>  ();
    public void (IList`1<Action> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<​  ,    > ;
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<​  , Func`2<​  ,    >> ;
    [DebuggerBrowsableAttribute("0")]
private static    [] ;
    private static    ();
    internal static ICollection`1<​  > ();
    internal static ICollection`1<​  > ();
    internal static bool (​   ,    & );
    internal static     (​   );
    internal static     (​   );
    internal static     ( );
}
internal class     : object {
    private Color ;
    private BorderStyle ;
    private MultipleBorderTypes ;
    private double ;
    public Color ();
    public void (Color );
    public BorderStyle ();
    public void (BorderStyle );
    public MultipleBorderTypes ();
    public void (MultipleBorderTypes );
    public double ();
    public void (double );
    [NullableContextAttribute("1")]
public static     (string , MultipleBorderTypes );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private ColorDataName ;
    public    (ColorDataName , IList`1<   > );
    public ColorDataName ();
    public virtual     ​ ();
    public virtual ColorDataName    ​ ();
    protected virtual        ​ (    );
    protected virtual        ​ (IList`1<   > );
    protected virtual bool    ​ (    );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<>  ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    internal    ( );
    private static    ();
    private void (double , Int32& );
    private void (double );
    private void (double , double );
    private static void (& ,  ,  );
    private void (bool ,     , MD5 ,    , Aes , SHA256 , SHA384 , SHA512  , RandomNumberGenerator  );
    private void (Aes , SHA256 , SHA384 , SHA512 , RandomNumberGenerator );
    private void (    , MD5 ,    );
    private void (    , MD5 ,    );
    private void (    , MD5 ,    );
    private static  (int );
    private static int ( );
    internal double ();
    private void (double );
    private     ();
    private void (    );
    private     ();
    private void (    );
    private     ();
    private void (    );
    private     ();
    private void (    );
    private int ();
    private void (int );
    private void (    );
    private bool  ();
    private void (bool );
    private      ();
    private void (    );
    public string  ();
    public void (string );
    public string  ();
    public void (string );
    public   ();
    public void ( );
    public      ();
    public void (    );
    public   ();
    public void ( );
    internal virtual bool    ​  ();
    private static     (    );
    private Byte[] (    , MD5 , Aes , SHA256 , SHA384 , SHA512 );
    internal virtual        ​ (    , Nullable`1<> );
    private void ();
    private static bool (string );
    internal  (string ,     );
    public bool (string ,     , Boolean& );
    private  (string ,     , String& , String& );
    internal      ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (    ,    [] );
    public    (    , IEnumerable`1<   > );
    public virtual     ​ ();
    public     ();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static TDelegate (Type , string , bool );
    public static Func`2<TType, TValue> (string );
    public static Action`2<TType, TValue> (string );
    [ExtensionAttribute]
public static IEnumerable`1<FieldInfo> (Type );
    [ExtensionAttribute]
public static TAttribute (MemberInfo );
    [ExtensionAttribute]
public static TAttribute (Enum );
    [ExtensionAttribute]
public static IEnumerable`1<TAttribute> (MemberInfo );
    [ExtensionAttribute]
public static object (Type , string );
    public static TEnum (string );
    [ExtensionAttribute]
public static TBaseType  (Type , Type[] );
    public static Type (string , string );
    private static void (string , MemberInfo , string );
    [ExtensionAttribute]
public static AssemblyName (Assembly );
    [ExtensionAttribute]
public static Type[] (Assembly );
    private static bool (Type );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static void (string ,     ,  );
    public static void (string ,     ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private Guid ;
    private Byte[] ;
    private UInt32 ;
    public Guid ();
    public void (Guid );
    public Byte[] ();
    public void (Byte[] );
    public UInt32 ();
    public void (UInt32 );
    public virtual void    ​ (    );
    public virtual void    ​ (    );
    public virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static string (string );
    public static     (string );
    public static     (string , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static IList`1<Encoding> ;
    private static    ();
    private static void (​ );
    private static void (​ , T , Encoding );
    private static T (​ , Encoding );
    private static void (​ , T , Encoding );
    private static     (​ , Encoding );
    private static     (​ , Encoding );
    private static     (​ , Encoding );
    private static bool (ICollection`1<T> , string , Func`2<T, string> , bool , Encoding , T& );
    private static     (​ ,     ,  , Encoding );
    public static     ( , Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private static Dictionary`2<string, String[]> ;
    private bool ;
    private     ;
    private StringBuilder ;
    private     ;
    private string ;
    private bool ;
    public    (    );
    public    (    , bool );
    private static    ();
    private     ();
    private     (string );
    private  ​  ();
    private  ​  ();
    private  ​  ();
    private  ​  ();
    private  ​  ();
    private void ( ​  );
    private string  ();
    private bool  ();
    private void  ();
    private   ();
    private void  ();
    private  ​  ();
    private bool  ();
    private static  ​  ( ​  );
    private bool ( ​  );
    public void ( ​  );
    public  ​  (bool );
    public  ​  (    , string );
    private static bool ( ​  );
    private static void ( ​  ,  ​  );
    private static void ( ​  ,  ​  ,  ​  ,  ​  , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static T (string );
    public static T (string , NumberStyles );
    public static bool (string , T& );
    public static string (T , string );
    public static string (T );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1< ​ > (    );
    private static bool (string , Int32& , Int32& );
    public static     (string ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static  <UInt32> ;
    private static <ushort> ;
    private static <UInt32> ;
    private string ;
    private string ;
    private static    ();
    public string ();
    public void (string );
    public string ();
    public void (string );
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
    public static     ();
    public virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public static    <> ;
    private    [] ;
    private Dictionary`2<string, > ;
    private static    ();
    public string ( );
    public bool ( );
    public  (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (    ,     ,     );
    public virtual void    ​ ();
    public virtual int    ​ ();
    public virtual int    ​ ();
    public virtual void    ​ (int );
    private protected virtual        ​ ();
    public virtual bool    ​  ();
    public virtual bool    ​  ();
    public virtual object    ​  ();
    public virtual bool    ​ (object );
    public virtual        ​ (    );
    public virtual       ​ (object );
    public virtual        ​ (object ,     ,   & );
    protected virtual  ​     ​ (   );
    protected virtual        ​ ( ​  );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal static class     : object {
    public static void (object , string );
    [DoesNotReturnAttribute]
internal static void (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
public static     ;
    private static    ();
    private protected virtual bool    ​ ();
    private protected virtual int    ​ (int );
    private protected virtual int    ​ (string );
    private protected virtual int    ​ (string , Byte[] , int );
    private protected virtual string    ​ (Byte[] , int , int );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (double ,     );
    [IsReadOnlyAttribute]
public double ();
    [IsReadOnlyAttribute]
public     ();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : InvalidOperationException {
    internal    (  [] );
    private static string (  [] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  ​  {
    private StringBuilder ;
    public    (string );
    public virtual   ​ ​ ();
    public string ();
    public void (string );
    public void (string );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static string (StringBuilder );
    [ExtensionAttribute]
public static void (StringBuilder , int , int );
    [ExtensionAttribute]
public static int (StringBuilder , int );
    [ExtensionAttribute]
public static int (StringBuilder , Int32& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    public abstract virtual     ​ ();
    public abstract virtual void    ​ (    , Stream );
    public void (    , Stream , int );
    public void (    , Stream , string );
    public abstract virtual int    ​ (    , Stream );
    public int (    , Stream , int );
    public static  (string );
    public static string ( );
    public static     (string );
    public static     ( );
}
internal class     :     {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private     ;
    public    (    ,     );
    protected virtual        ​ ();
    public virtual object    ​ ();
    protected virtual void    ​ (Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private HashSet`1<string> ;
    private string ;
    private    (    );
    private static HashSet`1<string> (    );
    public static void (    , ICollection`1<  > );
    private void (ICollection`1<  > );
    private void (   );
    private void (   & ,    & );
    private     ();
    private     (string );
    private    (   );
    private    (   );
    private bool (    );
    private    (    , string );
    private static    (    , string );
    private static    (IList`1<> , string , string , HashAlgorithm );
    private static List`1<> (Stream );
    private static Byte[] (IList`1<> , HashAlgorithm );
    private static Byte[] (IList`1<> );
    private static void (   ,     ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    private     ;
    internal    (    );
    public     ();
    protected abstract virtual        ​ ();
    protected virtual bool    ​ ();
    public void ();
    protected abstract virtual void    ​ (Stream );
    public abstract virtual object    ​ ();
    private Stream ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :   <string,    > {
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<string, int> ;
    internal    (    );
    public     (string , string , bool , bool , bool );
    private int (string );
    protected virtual string GetKeyForItem(    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private   <string> ;
    public    (    );
    public   <string> ();
    private void (object , EventArgs );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     : Collection`1<   > {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    public  ();
    private void ( );
    public  ();
    private void ( );
    protected virtual void InsertItem(int ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private Char[] ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public    (    , bool , string , bool );
    private bool (int );
    protected virtual void    ​ ();
    public virtual bool    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    private IDictionary`2<string, object> ;
    public string ();
    public void (string );
    public IDictionary`2<string, object> ();
    public void (IDictionary`2<string, object> );
}
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private UInt32 ;
    public    ( );
    public    ( , UInt32 );
    public  ();
    public UInt32 ();
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public sealed virtual bool Equals(    );
    public virtual int GetHashCode();
    public sealed virtual int CompareTo(    );
    public sealed virtual int CompareTo( );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    );
    public    (string );
    internal     ();
    private string ();
    public virtual string ToString();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    ,     );
    public     ();
    public     ();
    public sealed virtual bool Equals(    );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    public int Count { get; private set; }
    public     Item { get; public set; }
    private static    ();
    private    ( );
    internal static     ();
    internal virtual void    ​ ();
    internal virtual        ​ ();
    private void (    );
    internal virtual void    ​ (    );
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    internal virtual int    ​ ();
    internal ​   ();
    internal void (​   );
    public     ();
    public sealed virtual int get_Count();
    private void set_Count(int value);
    internal void (int );
    public sealed virtual     get_Item(int );
    public sealed virtual void set_Item(int ,     );
    private sealed virtual override bool    ​ ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override void    ​ (int ,     );
    public     ();
    internal void (    );
    public     (int );
    internal void (int ,     );
    public     (    );
    public     (int ,     );
    public sealed virtual bool Remove(    );
    public sealed virtual void RemoveAt(int );
    public sealed virtual void Clear();
    public sealed virtual int IndexOf(    );
    public sealed virtual bool Contains(    );
    public sealed virtual void CopyTo(   [] , int );
    public   ();
    private sealed virtual override IEnumerator`1<   >    ​  ();
    private sealed virtual override IEnumerator    ​  ();
    public void (int , int );
    private     (int );
    private void (int ,     );
    private void (int ,     );
    private void (int ,    & , Int32& );
    private void (int );
    private void ();
    private void ();
    private int (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private static    [] ;
    private static    [] ;
    private static    [] ;
    private static Dictionary`2<int, ColorDataName> ;
    private static Double[] ;
    private static Dictionary`2<   ,    > ;
    public static     ;
    private static    ();
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1<   > (    , IEnumerable`1<double> );
    public static     (ColorDataName );
    public static     (    );
    public static bool (double );
    public static  (ColorDataName );
    public static ColorDataName (int );
    public static int (ColorDataName );
    public static     (ColorDataName );
    public static int (ColorDataName );
    public static int (ColorDataName );
    public static ColorDataName (int );
    public sealed virtual        ​ (ColorDataName );
    public sealed virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private     ;
    private     ;
    private     ;
    private Rect ;
    private bool ;
    internal    (    );
    private Rect ();
    internal     ();
    public static void (    , DrawingContext ,     );
    internal void (    , DrawingContext , bool );
    private void (    , DrawingContext );
    private void (    , DrawingContext , Geometry& );
    private void (    , DrawingContext , Geometry& );
    private void (    , DrawingContext );
    private void (    , DrawingContext );
    private void (    , DrawingContext );
    private static     (    );
    private static     (    );
    private void (    ,    & , DrawingContext , bool );
    internal static double (double );
    private Point (    );
    private Rect (   & );
    internal     (   & );
    private MatrixTransform (   & );
    private RectangleGeometry (   & );
    private RectangleGeometry (    );
    private StreamGeometry (    ,  , bool , bool );
    private  ();
    private void (    );
    private void (& );
    private  (DrawingContext ,    & , Transform& );
    private static  (DrawingContext , Geometry );
    private static  (DrawingContext , double );
    private static bool (    );
    private static bool (    ,     , double );
    private static Geometry (Geometry , Transform );
}
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (    ,     );
    public     ();
    public     ();
    public virtual int GetHashCode();
    public sealed virtual bool Equals(    );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
public sealed virtual string ToString(string , IFormatProvider );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    private PrintTicket ;
    private  ;
    [NullableContextAttribute("2")]
public    (Stream );
    internal PrintTicket ();
    public int ();
    public void (int );
    public  ();
    public void ( );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public string ();
    public void (string );
}
internal static class     : object {
    public static bool ;
    private static    ();
    private static IntPtr ();
    private static int (IntPtr );
    private static int (IntPtr , Int32& );
    private static int ();
    public static int ();
    private static int (IntPtr );
    private static int (IntPtr );
    private static int (int );
    private static int ();
    public static bool (int );
    private static int ();
    private static IntPtr (IntPtr );
    private static int (IntPtr , IntPtr );
    private static int (IntPtr , int );
    private static int ();
    public static int ();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [NullableContextAttribute("1")]
public    (string , string );
    public    (DateTimeOffset , string );
    public    (double , string );
    [NullableContextAttribute("1")]
internal    (​   ,     );
    private static    ();
    public object ();
    public string ();
    public sealed virtual bool Equals(    );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
    public sealed virtual string ToString(string , IFormatProvider );
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
internal static     (​   );
    [NullableContextAttribute("1")]
internal ​   ();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private static Char[] ;
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<string, > ;
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<, string> ;
    [DebuggerBrowsableAttribute("0")]
private static Int32[] ;
    [DebuggerBrowsableAttribute("0")]
private static String[] ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    public    ( ,     ,     ,     );
    private static    ();
    public  ();
    public     ();
    public     ();
    public     ();
    public static     (string );
    public string ();
    public double (    );
    private static double (double );
    internal static double (double );
    internal static double (double );
    internal static double (double );
    public virtual int GetHashCode();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual string ToString();
    public sealed virtual string ToString(string , IFormatProvider );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private     ;
    private     ;
    private     ;
    private  ;
    private  ​  ;
    public    (    ,     ,     ,     ,  );
    [CompilerGeneratedAttribute]
public sealed virtual  ​     ​ ();
    private static  ​  ( ,     ,     ,     );
    private bool (    );
    private void (    , Double& , Double& , Double& );
    public sealed virtual void    ​ (int , int , Double[] , Action`3<int, int, Double[]> );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    internal    (    ,     ,     ,  );
    public     ();
    private void (    );
    public     ();
    private void (    );
    public     ();
    private void (    );
    public  ();
    private void ( );
    internal void (    ,     , string , double ,     ,     ,  );
    internal void (    ,     ,     ,  );
    public virtual bool Equals(object );
    public sealed virtual bool Equals(    );
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    private ​   ;
    protected    (​   );
    public static     (    , ​   );
    public static     (​   );
    protected abstract virtual        ​ ();
    protected virtual     ​ ();
    protected virtual     ​ ();
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    internal bool (    ,    & );
    private sealed virtual override bool    ​ (   );
    private sealed virtual override    &    ​ ();
    private sealed virtual override        ​ ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override bool    ​ ();
    private sealed virtual override void    ​ (bool );
    private sealed virtual override bool    ​ ();
}
[ComVisibleAttribute("False")]
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int> ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    internal ​   Source { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal       { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public       { get; private set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public       { get; private set; }
    internal    (​   );
    internal    ( );
    private static    ();
    internal virtual ​      ​  ();
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    [NullableContextAttribute("2")]
internal     ();
    private bool ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    private int ();
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
private void (    );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
private void (    );
    internal int ();
    internal void (int );
    private void (​   , ​   );
    private protected virtual        ​ (​   );
    private protected virtual ​      ​ (    );
    private protected virtual int    ​ ();
    private protected virtual int    ​ ();
    private protected virtual        ​ (int );
    private protected virtual void    ​ (int ,     );
    private protected virtual void    ​ (    );
    private protected virtual void    ​ (int ,     );
    private protected virtual void    ​ (int );
    private protected virtual void    ​ ();
    private protected virtual int    ​  (    );
    private protected virtual bool    ​  (    );
    private protected virtual IEnumerator`1<   >    ​  ();
    private protected virtual bool    ​  (    );
    private protected virtual void    ​  (   [] , int );
    public   ();
    public     (    , string );
    public void (    ,     );
    private void (    ,     );
    public     (    , string );
    public void (    ,     );
    private void (    ,     );
    public     (string );
    public void (    );
    internal void (    ,     );
    private void (    );
    public     (string );
    public void (    );
    internal void (    ,     );
    private void (    );
    public void ();
    public void  ();
    private void (    ,     );
    private void (    ,     );
    private void (    );
    private void  (    );
    private void  ();
    private void  (    );
    private static void (    , string );
    private void  (    );
    private void  (    );
    private void  (    );
    private void  (    );
    internal void (int );
    private void (int );
    internal static bool ( );
}
[DefaultMemberAttribute(" ")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private    [] ;
    [DebuggerBrowsableAttribute("0")]
private    [] ;
    [DebuggerBrowsableAttribute("0")]
private    [] ;
    [DebuggerBrowsableAttribute("0")]
private    [] ;
    [DebuggerBrowsableAttribute("0")]
private    [] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
public       { get; }
    internal    (int , int , int , int , double , double , double , double  , double  , double  ,      ,    []  ,    []  ,    []  );
    public int ();
    public int ();
    public int ();
    public int ();
    public double ();
    private void (double );
    public double ();
    public double  ();
    public double  ();
    public double  ();
    public double  ();
    [CompilerGeneratedAttribute]
public sealed virtual        ​ ();
    public int ();
    public     (int );
    public bool  ();
    public virtual string ToString();
    internal void  ();
    internal void (double );
    internal void (    ,     );
    internal void (    ,     );
    private void (    ,     );
    private void (    ,     );
    private void (int ,     );
    internal   ();
    [NullableContextAttribute("0")]
public   <   >  ();
    private sealed virtual override IEnumerator`1<   >    ​  ();
    private sealed virtual override IEnumerator    ​  ();
    private sealed virtual override        ​  ();
    private sealed virtual override        ​ (int );
    private sealed virtual override        ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static int ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
internal      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ​    ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal EventHandler  ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    internal ​   Source { get; }
    [DebuggerBrowsableAttribute("0")]
internal ​     { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public       { get; internal set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public       { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public       { get; private set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal string   { get; internal set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal string   { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IEnumerable`1<KeyValuePair`2<string, string>>   { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IEnumerable`1<KeyValuePair`2<string, object>>   { get; }
    private    ( );
    private static    ();
    internal string  ();
    private protected virtual bool    ​ ();
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    internal virtual ​      ​  ();
    public      ();
    public void (    );
    internal   ();
    private void ( );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
internal void (    );
    public     (Guid );
    public      ();
    private Nullable`1<>  ();
    private Nullable`1<>  ();
    public Nullable`1<>  ();
    public void (Nullable`1<> );
    internal Nullable`1<>  ();
    public      ();
    internal void (    );
    public      ();
    internal      ();
    public      ();
    internal  (​   );
    public      ();
    public   ();
    public void ( );
    public   ();
    public void ( );
    internal bool  ();
    public      ();
    public      ();
    [NullableContextAttribute("2")]
public virtual        ​  ();
    internal bool  ();
    internal      ();
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
private void (    );
    public      ();
    private      ();
    public      ();
    public void (    );
    internal void (    );
    public      ();
    public      ();
    [NullableContextAttribute("2")]
internal string  ();
    [NullableContextAttribute("2")]
internal void (string );
    [NullableContextAttribute("2")]
internal string  ();
    internal bool (​   ,  , int );
    internal   ();
    internal bool  ();
    internal      ();
    internal     ​();
    internal void ();
    internal     (string );
    internal     (string );
    internal     (string );
    internal     ​();
    private     (    );
    internal     ​();
    [NullableContextAttribute("2")]
internal void (    );
    internal     ​();
    internal void (    );
    internal void (​   );
    internal virtual void    ​ ();
    private void ();
    public static      (string );
    public static     (string ,     );
    public static     (Stream );
    public static     (Stream ,     );
    public void ();
    private void ();
    public void ();
    public bool  ();
    public void (bool );
    public void ();
    internal void (bool );
    private void ();
    public sealed virtual void Dispose();
    [ComVisibleAttribute("True")]
public void  ();
    [ComVisibleAttribute("False")]
public void (string );
    [ComVisibleAttribute("False")]
public void (string , ​   );
    [ComVisibleAttribute("False")]
public void (Stream );
    [ComVisibleAttribute("False")]
public void (Stream , ​   );
    internal void (string );
    public XpsDocument (    );
    public ImageSource (​   );
    public void  ();
    public void (string );
    public void (string ,     );
    private void (string ,     );
    internal void (    );
    internal     (    );
    public     ​();
    public virtual string ToString();
    private static     (    );
    private static void ( ,     );
    private void  ();
    private void (​   );
    internal void  ();
    private sealed virtual override       ​ ​();
    private sealed virtual override       ​  ();
    private sealed virtual override int    ​  ();
    private sealed virtual override  ​    ​  ();
    private sealed virtual override int    ​  ();
    private sealed virtual override       ​ ​();
    private sealed virtual override        ​ (int );
    private sealed virtual override        ​ (int , object );
    private sealed virtual override void    ​ (int , object , object );
    private sealed virtual override       ​ (int ,    );
    private sealed virtual override object    ​ (Type );
    private sealed virtual override string    ​  ();
    private sealed virtual override string    ​  ();
    private sealed virtual override string    ​  ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override IEnumerable`1<KeyValuePair`2<string, string>>    ​  ();
    private sealed virtual override IEnumerable`1<KeyValuePair`2<string, object>>    ​  ();
    private sealed virtual override string    ​ (string , String[] );
    private sealed virtual override Nullable`1<DateTime>    ​ (string , String[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : Uri {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> ;
    [DebuggerBrowsableAttribute("0")]
private Typeface ;
    [DebuggerBrowsableAttribute("0")]
private GlyphTypeface ;
    internal    (    ,     );
    internal GlyphTypeface ();
    private void (GlyphTypeface );
    public static char (int );
    internal  ();
    internal bool ();
    internal Typeface ();
    internal     ();
    internal void (GlyphTypeface );
    public virtual int GetHashCode();
    public virtual bool Equals(object );
    public sealed virtual bool Equals(    );
}
[ExtensionAttribute]
internal static class     : object {
    [ExtensionAttribute]
public static void ( , Int32& , Int32& );
    public static  (int , int );
    [ExtensionAttribute]
public static int ( ,  );
    [ExtensionAttribute]
public static int (Nullable`1<> , Nullable`1<> );
    [ExtensionAttribute]
public static Nullable`1<> (Nullable`1<> , Nullable`1<> );
    [ExtensionAttribute]
public static  ( ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Dictionary`2<Style, string> ;
    public IDictionary`2<Style, string> ();
    public string (Style );
    public void (StyleCollection );
    private void (IEnumerable`1<Style> , Dictionary`2<string, Style> , Func`2<Style, string> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private List`1<   > ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   >  ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    public    (    ,     ,  ,     , bool ,  ,     );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (int );
    public sealed virtual void    ​ (int );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (​   , double );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ (double , double , double , double , double , double );
    public sealed virtual void    ​ (double , double );
    public sealed virtual void    ​ (double , double );
    public sealed virtual void    ​ (double , double , double , double , double , double );
    public sealed virtual void    ​ (double , double , double , double );
    public sealed virtual void    ​ (double , double , double , double );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ (double , double , double , double );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    [ObsoleteAttribute("Use f instead.")]
public sealed virtual void    ​ ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (​   , double );
    public sealed virtual void    ​ (int );
    public sealed virtual void    ​  (double );
    public sealed virtual void    ​ (double , double );
    public sealed virtual void    ​ (double , double );
    public sealed virtual void    ​ (double , double , double , double , double , double );
    public sealed virtual void    ​  ();
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (double , double ,     );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (double , double );
    public sealed virtual void    ​ (double , double , double , double , double , double );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (IList`1<double> );
    public sealed virtual void    ​ (IList`1<double> , ​   );
    public sealed virtual void    ​ (IList`1<double> );
    public sealed virtual void    ​ (IList`1<double> , ​   );
    public sealed virtual void    ​  (double );
    public sealed virtual void    ​  (double );
    public sealed virtual void    ​ (double , double , double );
    public sealed virtual void    ​ (double , double , double );
    public sealed virtual void    ​ (double , double , double , double );
    public sealed virtual void    ​ (double , double , double , double );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (​   , ​   );
    public sealed virtual void    ​  (​   );
    public sealed virtual void    ​ (​   , ​   );
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual ​      ​  ();
    public sealed virtual void    ​ (EventHandler`1<​  > );
    public sealed virtual void    ​ (EventHandler`1<​  > );
    public sealed virtual void    ​ (EventHandler );
    public sealed virtual void    ​ (EventHandler );
    public sealed virtual void    ​ (    ,     );
    public sealed virtual void    ​ (string ,     );
    public sealed virtual void    ​  ();
    public sealed virtual void    ​ (string );
    public sealed virtual void Dispose();
    private void ();
    private void ();
    private void ();
    private void ();
    private  ();
    private  ();
    private  ();
    private   ();
    private   ();
    private   ();
    private   ();
    private   ();
    private  (bool );
    private   ();
    private   ();
    private   ();
    private   ();
    private void ( , ​  [] );
    private void ( , ​  [] );
    private void ( );
    private void ( , ​  [] );
    private void ( , ​  [] );
    private void ( , string , ​  [] );
    private void ( , [] );
    private void ( , ​  [] ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private List`1<> ;
    private     ;
    private     ;
    public    (    ,     );
    public     ();
    public     ();
    private bool ();
    public bool ();
    public void ( );
    public bool ( );
    private static double ( );
    [NullableContextAttribute("0")]
private bool ( );
    [NullableContextAttribute("0")]
private bool ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
private int ;
    public bool ();
    protected void (bool );
    protected abstract virtual     ​ ();
    protected abstract virtual bool    ​ ( );
    protected abstract virtual void    ​ (   & );
    protected virtual void    ​ (    );
    public bool  (   <> ,  );
    public sealed virtual bool Equals( );
    public sealed virtual bool Equals(object );
    public sealed virtual int GetHashCode();
    public void ();
    private int  ();
    public virtual     ​  (    );
    protected void  (TValue& , TValue );
    protected static void  (​  & ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Nullable`1<int> ;
    private Nullable`1<int> ;
    private Nullable`1<int> ;
    private Nullable`1<int> ;
    private Nullable`1<int> ;
    private Nullable`1<int> ;
    private bool ;
    private bool  ;
    private bool  ;
    private bool  ;
    private bool  ;
    private bool  ;
    private bool  ;
    private bool  ;
    private bool  ;
    private bool  ;
    private Nullable`1<int>  ;
    private Nullable`1<int>  ;
    private Nullable`1<int>  ;
    private TextBox  ;
    private      ;
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void  (bool );
    public bool  ();
    public void  (bool );
    public bool  ();
    public void  (bool );
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    public Nullable`1<int>  ();
    public void  (Nullable`1<int> );
    public Nullable`1<int>  ();
    public void  (Nullable`1<int> );
    public TextBox  ();
    public void (TextBox );
    public      ();
    public Picture  ();
    public ElementType  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   >  ;
    [NullableAttribute("2")]
public       { get; internal set; }
    [NullableAttribute("2")]
public       { get; internal set; }
    [NullableAttribute("2")]
public       { get; internal set; }
    private static    ();
    private    ( );
    public static     (string );
    public static     (string , ​   );
    public static     (Stream );
    public static     (Stream , ​   );
    internal static     ();
    internal virtual void    ​ ();
    internal virtual string    ​ ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    public     ();
    public void (    );
    internal  (    );
    internal bool (Double& , Double& );
    public int ();
    internal void (int );
    public int ();
    internal void (int );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
internal void (    );
    public Nullable`1<int>  ();
    internal void (Nullable`1<int> );
    internal Nullable`1<   >  ();
    internal void (Nullable`1<   > );
    public bool  ();
    internal void (bool );
    internal ​    ();
    private void (​   );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
internal void (    );
    internal    []  ();
    internal ​    ();
    private void (​   );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
internal void (    );
    internal int ();
    internal void (int );
    private ​    ();
    private void (​   );
    internal    []  ();
    internal bool  ();
    internal void (bool );
    private ​    ();
    private void (​   );
    internal Double[]  ();
    private static     (Stream , ​   );
    internal void (Stream , ​   ,     ,     ,     );
    internal static bool (​   );
    internal virtual bool    ​ ();
    internal virtual void    ​ ();
    public      ();
    private protected virtual        ​ ();
    private protected virtual void    ​ (   & );
    private protected virtual void    ​ (    ,    & modreq(System.Runtime.InteropServices.InAttribute) );
    internal void (string , string );
    private sealed virtual override void    ​ (int , int );
    private sealed virtual override void    ​ ( ,    [] , Byte[] , bool );
    private sealed virtual override void    ​ (int );
    private sealed virtual override void    ​ ( );
    private sealed virtual override void    ​ (Int32[] );
    private sealed virtual override        ​  ();
    private sealed virtual override        ​ (int );
    private sealed virtual override void    ​ ();
    private sealed virtual override void    ​ (   [] );
    private sealed virtual override void    ​ (double , double );
    private sealed virtual override void    ​ (Byte[] );
    private sealed virtual override Stream    ​ (int , int , int , int );
    private sealed virtual override Stream    ​ (Nullable`1<bool> );
    private sealed virtual override Stream    ​  ();
    private sealed virtual override void    ​ ();
    private sealed virtual override        ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private PageMargins ;
    private double ;
    private double ;
    private Color ;
    private HyphenationOptions ;
    public PageMargins ();
    public double ();
    public void (double );
    public double ();
    public void (double );
    public Color ();
    public void (Color );
    public HyphenationOptions ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [DebuggerBrowsableAttribute("0")]
private static ReadOnlyCollection`1 modreq(System.Runtime.CompilerServices.IsVolatile) ;
    [DebuggerBrowsableAttribute("0")]
private static ReadOnlyCollection`1 modreq(System.Runtime.CompilerServices.IsVolatile) ;
    [DebuggerBrowsableAttribute("0")]
private static     modreq(System.Runtime.CompilerServices.IsVolatile) ;
    [DebuggerBrowsableAttribute("0")]
private static     modreq(System.Runtime.CompilerServices.IsVolatile) ;
    [DebuggerBrowsableAttribute("0")]
private static     modreq(System.Runtime.CompilerServices.IsVolatile) ;
    private static    ();
    public static ICollection`1<   > ();
    public static ICollection`1<   > ();
    internal static     ();
    internal static     ();
    internal static     ();
    public static ICollection`1<   > ();
    public static ICollection`1<   >  ();
    public static ICollection`1<   > (string );
    internal static Uri (string );
    [NullableContextAttribute("2")]
public static ICollection`1<   > (string , string );
    [NullableContextAttribute("2")]
internal static Uri (string , string );
    internal static ICollection`1<   > (Uri );
    internal static ICollection`1<   > (Uri , string );
    public static ICollection`1<   > (string );
    [NullableContextAttribute("2")]
public static ICollection`1<   > (string , string );
    internal static     (Byte[] );
    internal static ICollection`1<   > (Uri );
    internal static ICollection`1<   > (Uri , string );
    private static void (object , EventArgs );
    internal static void ();
    private static ReadOnlyCollection`1<   > (Uri , string , bool );
    private static ReadOnlyCollection`1<   >  ();
    internal static     (string );
    internal static     (string ,  );
    internal static     (string );
    internal static void SetApplicationAssembly(Assembly value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Stack`1<BlockCollection> ;
    private BlockCollection ;
    public BlockCollection ();
    public void (BlockCollection );
    public void ();
    public bool ();
    public bool ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
internal static [] ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal ​   Source { get; }
    private protected    ( );
    private static    ();
    internal sealed virtual ​   get_Source();
    internal sealed virtual     ​ ();
    internal sealed virtual        ​ ();
    internal sealed virtual void    ​ (    );
    internal abstract virtual string    ​ ();
    internal static     ( );
    internal sealed virtual     ​  ();
    internal sealed virtual void    ​ ( );
    internal abstract virtual     ​  ();
    internal abstract virtual void    ​ ( );
    private void (​   );
    public     ();
    private protected sealed virtual        ​ (    );
    internal     (    );
    private protected abstract virtual        ​ ();
    private protected abstract virtual void    ​ (   & );
    private protected abstract virtual void    ​ (    ,    & modreq(System.Runtime.InteropServices.InAttribute) );
    private sealed virtual override        ​ ();
    private sealed virtual override void    ​ (   & );
    private sealed virtual override void    ​ (    ,    & modreq(System.Runtime.InteropServices.InAttribute) );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static MemoryStream (MemoryStream );
    private static MemoryStream (Stream );
    private static MemoryStream (MemoryStream );
    private static UInt32 (IntPtr , UInt32 , Byte[] , int , int );
    private static bool (IntPtr );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    internal    (    ,     ,  );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (int );
    public sealed virtual void    ​ (int );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (​   , double );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ (double , double , double , double , double , double );
    public sealed virtual void    ​ (double , double );
    public sealed virtual void    ​ (double , double );
    public sealed virtual void    ​ (double , double , double , double , double , double );
    public sealed virtual void    ​ (double , double , double , double );
    public sealed virtual void    ​ (double , double , double , double );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ (double , double , double , double );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (​   , double );
    public sealed virtual void    ​ (int );
    public sealed virtual void    ​  (double );
    public sealed virtual void    ​ (double , double );
    public sealed virtual void    ​ (double , double );
    public sealed virtual void    ​ (double , double , double , double , double , double );
    public sealed virtual void    ​  ();
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (double , double ,     );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (double , double );
    public sealed virtual void    ​ (double , double , double , double , double , double );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (IList`1<double> );
    public sealed virtual void    ​ (IList`1<double> , ​   );
    public sealed virtual void    ​ (IList`1<double> );
    public sealed virtual void    ​ (IList`1<double> , ​   );
    private static bool (Double& );
    public sealed virtual void    ​  (double );
    public sealed virtual void    ​  (double );
    public sealed virtual void    ​ (double , double , double );
    public sealed virtual void    ​ (double , double , double );
    public sealed virtual void    ​ (double , double , double , double );
    public sealed virtual void    ​ (double , double , double , double );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (​   );
    public sealed virtual void    ​ (​   , ​   );
    public sealed virtual void    ​  (​   );
    public sealed virtual void    ​ (​   , ​   );
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual ​      ​  ();
    public sealed virtual void    ​ (EventHandler`1<​  > );
    public sealed virtual void    ​ (EventHandler`1<​  > );
    public sealed virtual void    ​ (EventHandler );
    public sealed virtual void    ​ (EventHandler );
    public sealed virtual void    ​ (    ,     );
    public sealed virtual void    ​ (string ,     );
    public sealed virtual void    ​  ();
    public sealed virtual void    ​ (string );
    public sealed virtual void Dispose();
    private void ( , string , int , ​  [] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private Dictionary`2<   ,    > ;
    private bool ;
    private      ();
    private DocumentModel  ();
    private      ();
    public void (DocumentModel , Stream , DocxSaveOptions , ​  );
    private void ();
    private void (    );
    private static void (    , string , string , bool );
    private void ();
    private void (    );
    private static string (string );
    private void ();
    private void (    );
    private void ();
    private void (    , Dictionary`2<string,    > );
    private static void (    , WriteProtection );
    private static void (    , DocumentProtection );
    private static void (    ,  );
    private void (    );
    private void (    );
    private      ();
    private static string (DocxFormat );
    private void ();
    private void (    );
    private void ();
    private void ();
    private void (Dictionary`2<Comment, int> );
    private void (Dictionary`2<Comment, int> );
    private void  ();
    private void  ();
    private void (string , string , string , Byte[] );
    private void  ();
    private     (    );
    private void (NoteType ,     );
    public static void (    , NoteSettings );
    public static void (DocumentModel , Stream , DocxSaveOptions , ​  );
    private void (Stream );
    private void (Stream );
    private void (Stream );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual IEnumerable`1<   >    ​ (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1<string> (string , Regex );
    private static void (    );
    private static void (    , VbaProject );
    private static void (    , VbaProject );
    private static void (    , VbaProject );
    private static void (    );
    public static void (    , VbaProject );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    private protected    (    );
    [NullableContextAttribute("1")]
internal void (    );
    [NullableContextAttribute("1")]
private static void (    ,     );
    internal virtual bool    ​ ();
    public abstract virtual     ​ ();
    internal bool ();
    public     ();
    public     ();
    public     ();
    internal void ();
    [IteratorStateMachineAttribute("   /")]
[NullableContextAttribute("1")]
internal IEnumerable`1<   >  ();
    [IteratorStateMachineAttribute("   /")]
[NullableContextAttribute("1")]
internal IEnumerable`1<   >  ();
    [NullableContextAttribute("1")]
internal void (T& , T );
    internal void  ();
    [NullableContextAttribute("1")]
private protected abstract virtual        ​ (    ,     );
    [NullableContextAttribute("1")]
internal     (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private IList`1<   > ;
    private IList`1<   > ;
    public IList`1<   > ();
    public IList`1<   > ();
    public void (IEnumerable`1<string> );
    public void (string );
    public void (    );
    public void (string );
    public void (    );
    public void (    );
    public void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
internal int ;
    [DebuggerBrowsableAttribute("0")]
internal int ;
    [DebuggerBrowsableAttribute("0")]
internal int ;
    [DebuggerBrowsableAttribute("0")]
internal int ;
    [DebuggerBrowsableAttribute("0")]
internal int ;
    [DebuggerBrowsableAttribute("0")]
internal int ;
    [DebuggerBrowsableAttribute("0")]
internal int  ;
    internal    (    , int , int , int , int , int , int , int  );
    private int ();
    internal      ();
    internal int ();
    internal int ();
    internal int ();
    internal int ();
    internal int ();
    internal int ();
    internal int  ();
    internal int  ();
    internal int  ();
    internal int  ();
    internal int  ();
    internal int  ();
    private int  ();
    internal int  ();
    internal int  ();
    public   ();
    public      ();
    internal void (    );
    public      ();
    internal void (    );
    public      ();
    internal void (    );
    public      ();
    internal void (    );
    public      ();
    internal void (    );
    public      ();
    internal void (    );
    public      ();
    internal void (    );
    public      ();
    internal void (    );
    public      ();
    internal void (    );
    public      ();
    internal void (    );
    public      ();
    internal void (    );
    public      ();
    internal void  (    );
    public      ();
    internal void  (    );
    public      ();
    internal void  (    );
    public      ();
    internal void  (    );
    public      ();
    internal void  (    );
    internal      ();
    internal      ();
    internal      ();
    internal      ();
    internal bool  ();
    private     (int , int , int , int , int , int , int , int  );
    private static     (    ,     ,     ,     ,     ,     ,     ,      );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<KeyValuePair`2<Note, string>> ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<KeyValuePair`2<Note, string>> ;
    private int ;
    private int ;
    private NoteSettings ;
    private NoteSettings ;
    private string ;
    private IList`1< ​>  ;
    private List`1<Tuple`3<Note, int, string>>  ;
    private List`1<Tuple`3<Note, int, string>>  ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public List`1<KeyValuePair`2<Note, string>>   { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public List`1<KeyValuePair`2<Note, string>>   { get; }
    public int ();
    public void (int );
    public int ();
    public void (int );
    public NoteSettings ();
    public void (NoteSettings );
    public NoteSettings ();
    public void (NoteSettings );
    public string ();
    public void (string );
    public bool ();
    public bool ();
    public List`1<KeyValuePair`2<Note, string>>  ();
    public List`1<KeyValuePair`2<Note, string>>  ();
    public IList`1< ​>  ();
    public List`1<Tuple`3<Note, int, string>>  ();
    public List`1<Tuple`3<Note, int, string>>  ();
    public string (Note );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Dictionary`2<,    > ;
    private static    ();
    [ExtensionAttribute]
public static void (    ,     );
    [ExtensionAttribute]
public static void (    , IList`1<   > , int );
    [ExtensionAttribute]
public static void (    ,  );
    [ExtensionAttribute]
public static bool (    ,  ,     );
    [ExtensionAttribute]
internal static void (    ,  ,     ,     ,  );
    [ExtensionAttribute]
public static     ( );
    [ExtensionAttribute]
public static string ( );
    [ExtensionAttribute]
internal static     (    ,     );
    [ExtensionAttribute]
internal static     (    ,     ,  );
    [ExtensionAttribute]
internal static     (    ,     );
    [ExtensionAttribute]
internal static     (    ,     ,  ,  );
    [ExtensionAttribute]
internal static     (    ,     ,  ,  );
    [ExtensionAttribute]
internal static     (    ,     ,  ,  ,  );
    [ExtensionAttribute]
internal static     (    ,     ,  , int );
    [ExtensionAttribute]
internal static     (    ,     ,  );
    [ExtensionAttribute]
internal static     (    ,     ,  ,  );
    [ExtensionAttribute]
private static     (    );
    [ExtensionAttribute]
private static     (    ,     , int );
    [ExtensionAttribute]
private static     (    ,     , int ,  );
    [ExtensionAttribute]
private static     (    ,     , int ,  );
    [ExtensionAttribute]
private static     (    ,     , int , string );
    [ExtensionAttribute]
private static     (    , string );
    [ExtensionAttribute]
private static     (    , string , int );
}
internal interface     {
    public abstract virtual void    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    private static    ();
    private    ( );
    internal static     ();
    internal virtual void    ​ ();
    public virtual     ​ ();
    public     ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static string (int , int );
    public static string (byte , int );
}
[ExtensionAttribute]
internal static class     : object {
    [ExtensionAttribute]
public static bool ( );
    [ExtensionAttribute]
public static bool ( );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    public ​    { get; }
    public abstract virtual void    ​ ();
    public sealed virtual bool    ​ ();
    public sealed virtual bool    ​ ();
    public sealed virtual Uri    ​ ();
    public abstract virtual int    ​ ();
    protected abstract virtual ​      ​ (int );
    public ​   (int );
    public abstract virtual void    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
public static IDictionary`2<, string> ;
    [DebuggerBrowsableAttribute("0")]
public  ;
    [DebuggerBrowsableAttribute("0")]
public bool ;
    [DebuggerBrowsableAttribute("0")]
public int ;
    [DebuggerBrowsableAttribute("0")]
public double ;
    public    ( );
    public    (bool );
    public    (int );
    public    (double );
    private static    ();
    public string ();
    public sealed virtual bool Equals(    );
    [NullableContextAttribute("2")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
    public virtual string ToString();
    public     ();
    public static     op_Implicit(bool );
    public static     op_Implicit(int );
    public static     op_Implicit(double );
    public static bool op_Explicit(    );
    public static int op_Explicit(    );
    public static double op_Explicit(    );
    public static     op_LogicalNot(    );
    public static     op_UnaryNegation(    );
    public static bool op_Equality(    ,     );
    public static bool op_Equality(    , double );
    public static bool op_Inequality(    , double );
    public static bool op_Inequality(    ,     );
    public static bool op_LessThan(    , double );
    public static bool op_LessThan(    ,     );
    public static bool op_GreaterThan(    , double );
    public static bool op_GreaterThan(    ,     );
    public static bool op_LessThanOrEqual(    , double );
    public static bool op_LessThanOrEqual(    ,     );
    public static bool op_GreaterThanOrEqual(    , double );
    public static bool op_GreaterThanOrEqual(    ,     );
    public static     op_BitwiseAnd(    ,     );
    public static     op_BitwiseOr(    ,     );
    public static     op_ExclusiveOr(    ,     );
    public static     op_Addition(    ,     );
    public static     op_Subtraction(    ,     );
    public static     op_Multiply(    ,     );
    public static     op_Division(    ,     );
    public static     op_Modulus(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<int, double>  ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal IEnumerable`1<KeyValuePair`2<CultureInfo, string>>  { get; }
    internal    (    , double , double , double , double , double , double , string  ,      , Dictionary`2<int, double>  );
    internal Dictionary`2<int, double> ();
    public virtual bool    ​ ();
    public     ();
    private void (    );
    protected virtual        ​  ();
    public virtual       ​ ();
    public virtual void    ​ (    );
    internal void (    );
    internal virtual void    ​ (    );
    internal virtual IEnumerable`1<KeyValuePair`2<CultureInfo, string>>    ​  ();
    public virtual double    ​  ();
    internal virtual double    ​  ();
    public virtual double    ​  ();
    public virtual int    ​ (Int32& ,    );
    public virtual double    ​  ();
    public virtual void    ​ (double );
    public virtual double    ​  ();
    public virtual void    ​ (double );
    public virtual double    ​  ();
    public virtual void    ​ (double );
    public virtual double    ​  ();
    public virtual void    ​ (double );
    public virtual double    ​  ();
    public virtual void    ​ (double );
    public virtual double    ​  ();
    public virtual void    ​ (double );
    public virtual string    ​  ();
    public virtual void    ​ (string );
    public virtual        ​  ();
    protected virtual        ​  ();
    internal     ();
    private void ();
    internal static void (Double& , string );
    internal static void (Double& , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Module ;
    private static Type ;
    private static Type[] ;
    private static    ();
    public static Action`2<Double[], Double[]> (    );
    private static Nullable`1<int> (    , Action`1<IPdfPostScriptContext> );
    private static bool (    , Action`1<IPdfPostScriptContext> );
    private static Action`2<Double[], Double[]> (    , Action`1<IPdfPostScriptContext> );
    private static Action`2<Double[], Double[]> (    , Action`1<IPdfPostScriptContext> , Nullable`1<int> );
}
internal static class     : object {
    public static bool ;
    private static    ();
    private static bool ();
    private static bool ();
    public static void ();
    public static bool ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    public static string (string , IEnumerable`1<string> );
    public static string (int , int );
    public static string (int , int );
    public static string (int , int );
    public static string (int , int );
    public static string (int , int );
    public static string (int , int );
    public static string (int , int );
    public static string  (int , int );
    public static string  (int , int );
    private static string (int , int , string );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    internal int ;
    private    [] ;
    private string ;
    public      { get; }
    internal    (string ,    [] );
    public string ();
    public     ( );
    public sealed virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private Dictionary`2<Type, IList`1<LocalBuilder>> ;
    private ILGenerator ;
    public    (ILGenerator , int , int ,     );
    public ILGenerator ();
    public  (Type );
    public  ();
    public  (Type );
    [NullableContextAttribute("0")]
public  ();
    private  (Type , Func`2<Type, > );
    private  (Type );
    private  (Type );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    <> {
    [DebuggerBrowsableAttribute("0")]
private static    <, > ;
    [DebuggerBrowsableAttribute("0")]
private SKBitmap ;
    private static    ();
    protected virtual    <, >    ​ ();
    public virtual int    ​ ();
    public virtual int    ​ ();
    public SKBitmap ();
    public void (SKBitmap );
    protected virtual    <byte>    ​  (ArrayPool`1<byte> , int );
    [NullableContextAttribute("0")]
protected virtual bool    ​  (    , ArraySegment`1<byte> , int );
    public sealed virtual void Dispose();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<DateTimeOffset>  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
internal ​    ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [NullableAttribute("1")]
private      ;
    private bool  ;
    private string  ;
    private string  ;
    private string  ;
    private string  ;
    [NullableAttribute("1")]
public       { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private      { get; }
    [NullableContextAttribute("1")]
public    (string , string );
    [NullableContextAttribute("1")]
internal    (Byte[] , string );
    [NullableContextAttribute("1")]
public    (object );
    [NullableContextAttribute("1")]
public    (    );
    [NullableContextAttribute("1")]
public     ();
    public  ();
    public void ( );
    public  ();
    public void ( );
    public  ();
    public void ( );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public      ();
    public void (    );
    public      ();
    public void (    );
    public string  ();
    public void (string );
    public string  ();
    public void (string );
    public Nullable`1<DateTimeOffset>  ();
    public void (Nullable`1<DateTimeOffset> );
    public bool  ();
    public void (bool );
    public string  ();
    public void (string );
    public string  ();
    public void (string );
    public string  ();
    public void (string );
    public string  ();
    public void (string );
    public string  ();
    public void (string );
    public Nullable`1<>  ();
    public void (Nullable`1<> );
    [NullableContextAttribute("1")]
private     ();
    [NullableContextAttribute("1")]
private     (    );
    [NullableContextAttribute("1")]
private  (    , ​  & , Int32& );
    public virtual int    ​  ();
    [NullableContextAttribute("1")]
public virtual Byte[]    ​ (Stream );
    [NullableContextAttribute("1")]
private     ();
    [NullableContextAttribute("1")]
private static    (    );
    private void ();
    private static void ( ,  );
    [NullableContextAttribute("1")]
private static void (    ,  );
    [NullableContextAttribute("1")]
private static void (    ,  );
    [NullableContextAttribute("1")]
private static void (    , string ,  );
    private static void (Nullable`1<DateTimeOffset> ,  );
    private void ( );
    [NullableContextAttribute("1")]
private sealed virtual override        ​ (    );
    [NullableContextAttribute("1")]
private sealed virtual override     ​ (    , ​  & , Int32& );
    [NullableContextAttribute("1")]
private sealed virtual override Byte[]    ​ (Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    internal    (Byte[] , int );
    public sealed virtual int    ​ ();
    public sealed virtual void    ​ (int );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <string> {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static [] ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    internal ​   Source { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ​     { get; private set; }
    private static    ();
    private    ( );
    internal static     ();
    internal static     (bool , IEnumerable`1<string> , Nullable`1<int> );
    internal static  (​   );
    internal virtual ​   get_Source();
    internal virtual ​      ​ ();
    private  ();
    private void ( );
    [NullableContextAttribute("2")]
private ​   ();
    [NullableContextAttribute("2")]
private void (​   );
    private ​   ();
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public Nullable`1<> ();
    public void (Nullable`1<> );
    public void (    );
    private protected virtual void    ​ (int , string );
    private protected virtual void    ​ (int , string );
    private protected virtual void    ​ (int );
    private protected virtual void    ​ ();
    private protected virtual string    ​ (​   );
    private protected virtual ​      ​ (string );
    internal void (    );
    internal   ();
    [NullableContextAttribute("2")]
internal static ​   (Nullable`1<> );
    [NullableContextAttribute("2")]
internal static Nullable`1<> (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private     ;
    private     ;
    private int ;
    private int ;
    private ArrayPool`1<byte> ;
    public     ();
    public void (    );
    public     ();
    public void (    );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public ArrayPool`1<byte> ();
    public void (ArrayPool`1<byte> );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [IteratorStateMachineAttribute("   /")]
[ExtensionAttribute]
internal static IEnumerable`1<   > (    );
    [ExtensionAttribute]
internal static     (    , string );
    [ExtensionAttribute]
internal static string (    , string , string );
}
[ExtensionAttribute]
internal static class     : object {
    [ExtensionAttribute]
public static int (double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [NullableAttribute("2")]
public       { get; public set; }
    [NullableAttribute("2")]
public       { get; public set; }
    internal    (    );
    private static    ();
    private protected virtual        ​ ();
    public double ();
    public void (double );
    public  ();
    public void ( );
    public     ();
    public void (    );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    public      ();
    public void (    );
    public double ();
    public void (double );
    public      ();
    public void (    );
    public   ();
    public void ( );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public void (    );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public void (    );
    public double ();
    public void (double );
    private protected virtual void    ​ ​();
    internal void (bool );
    private     (   & );
    private static void (    ,     , Nullable`1<   > , double ,  ,     , double ,      , int  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    {
    [DebuggerBrowsableAttribute("0")]
private MemoryStream ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public bool CanSeek { get; }
    public long Position { get; public set; }
    public long Length { get; }
    public    (Stream );
    public virtual bool get_CanSeek();
    public virtual long get_Position();
    public virtual void set_Position(long );
    public virtual long get_Length();
    public virtual long Seek(long , SeekOrigin );
    public virtual int Read(Byte[] , int , int );
    protected virtual void Dispose(bool );
    private void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private     ;
    private  ;
    public    (UInt32 );
    public     ();
    public void (    );
    public string ();
    public void (string );
    public  ();
    public void ( );
    public static     ();
    public virtual        ​ ();
    public virtual void    ​ (    );
    public virtual void    ​ (    );
}
internal interface     {
    public abstract virtual void    ​ (int , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    );
    public     ();
    private sealed virtual override IEnumerator`1<   >    ​ ();
    private sealed virtual override IEnumerator    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public int Count { get; }
    [CompilerGeneratedAttribute]
public sealed virtual int get_Count();
    private void (int );
    public     ();
    private void (    );
    public     ();
    private void (    );
    private sealed virtual override bool    ​ ();
    public sealed virtual bool Contains(    );
    public sealed virtual void Add(    );
    public void (    ,     );
    public void (    ,     );
    public sealed virtual bool Remove(    );
    public bool (    );
    public sealed virtual void Clear();
    public sealed virtual void CopyTo(   [] , int );
    [IteratorStateMachineAttribute("   /")]
public sealed virtual IEnumerator`1<   > GetEnumerator();
    private sealed virtual override IEnumerator    ​ ();
    public static int (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private object ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    internal    (   );
    internal object ();
    internal    ();
    internal int ();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    private sealed virtual override object    ​ ();
    private sealed virtual override object    ​ ();
    private sealed virtual override X509KeyStorageFlags    ​ ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override Byte[]    ​ (Byte[] , string , object );
    private sealed virtual override bool    ​ (Byte[] , Byte[] , string , object );
}
[AttributeUsageAttribute("2048")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : Attribute {
    [DebuggerBrowsableAttribute("0")]
private string ;
    public    (string );
    public string ();
}
internal class     : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static T (    , bool );
    public static void (    , T );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    protected     ;
    private     ;
    protected    (bool ,     );
    public     ();
    public     ();
    public void (    );
    private void (    , string );
    protected void (string );
    protected void (   <T> , T );
    protected void (    );
    protected void (string , Func`2<T, string> , T ,    & );
    public void (string );
}
internal static class     : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static bool (string );
    private static bool (string );
    private static bool (string );
    public static void (string ,     ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <UInt32> ;
    private static    ();
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
    public virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    {
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public bool CanWrite { get; }
    public long Position { get; public set; }
    public long Length { get; }
    public    (long , long , Stream , bool );
    public virtual bool get_CanWrite();
    public virtual long get_Position();
    public virtual void set_Position(long );
    public virtual long get_Length();
    public virtual long Seek(long , SeekOrigin );
    public virtual int Read(Byte[] , int , int );
    public virtual int ReadByte();
    public virtual void SetLength(long );
    public virtual void Write(Byte[] , int , int );
    public virtual void WriteByte(byte );
    public virtual void Flush();
    protected virtual void Dispose(bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private static ArrayPool`1<byte> ;
    private int ;
    private int ;
    private int ;
    private int ;
    private int ;
    private int ;
    private   ;
    private   ;
    [NullableContextAttribute("0")]
public    (ArraySegment`1<byte> , ArraySegment`1<byte> );
    [NullableContextAttribute("2")]
public    (Stream , Stream );
    private static    ();
    private int ();
    private void (int );
    private int ();
    private void (int );
    private int ();
    private void (int );
    private int ();
    private void (int );
    private int ();
    private void (int );
    private int ();
    private void (int );
    private  ();
    private void ( );
    private   ();
    private void ( );
    [NullableContextAttribute("0")]
private static ArraySegment`1<byte> (Stream );
    private void  ();
    private void  ();
    private void  ();
    private void (int );
    private void (int , byte );
    private void  ();
    private void  ();
    private void (int , int );
    private void (int , int , int , Byte& );
    private void  (int );
    private static void ( , int ,  , int , UInt32 );
    private static void (UInt32 , UInt32& );
    private static void (ushort , UInt16& );
    private static void (UInt16& );
    private static void (UInt32 , UInt32& );
    private static void (UInt32 , UInt16& );
    private static void (int , byte , Int32& );
    private static void (int , byte , Byte& );
    private void (UInt32& , UInt32& , UInt32& , UInt32& );
    private void (UInt32 , UInt32& , UInt32& );
    private void (ushort , ushort , UInt16& );
    private void (int , UInt16& , UInt16& );
    public static MemoryStream (Stream );
    [NullableContextAttribute("0")]
public static MemoryStream (ArraySegment`1<byte> );
    public static MemoryStream (Stream );
    [NullableContextAttribute("0")]
public static MemoryStream (ArraySegment`1<byte> );
}
internal interface     {
    [NullableContextAttribute("1")]
public abstract virtual     ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private  ;
    [NullableAttribute("2")]
private     ;
    private     ;
    private     ;
    private     ;
    private     ;
    private     ;
    private      ;
    private      ;
    private      ;
    private      ;
    [NullableAttribute("2")]
private      ;
    [NullableAttribute("2")]
public       { get; public set; }
    [NullableAttribute("2")]
public       { get; public set; }
    public  ();
    public void ( );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public      ();
    public void (    );
    public      ();
    public void (    );
    public      ();
    public void (    );
    public      ();
    public void (    );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public void (    );
    public static      ();
    public virtual        ​ ();
    public virtual void    ​ (    );
    public virtual void    ​ (    );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static string (Byte[] );
    [ExtensionAttribute]
public static StringBuilder (Byte[] , StringBuilder );
    [ExtensionAttribute]
public static Byte[] (string );
    private static byte (char );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static XmlNameTable (XmlNameTable , IEnumerable`1<string> );
    [ExtensionAttribute]
public static IEnumerable`1<string> (Type , String[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    internal Nullable`1<int> ;
    internal     ;
    internal bool (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (​   ,     );
    internal    (​   );
    public ​   ();
    public     ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private Func`2<   , > ;
    private TableRow ;
    private  ;
    private bool ;
    private    (Func`2<   , > );
    protected virtual bool    ​ (DocumentModel );
    protected virtual bool    ​ (Section );
    protected virtual bool    ​ (HeaderFooter );
    protected virtual bool    ​ (Paragraph );
    protected virtual bool    ​ (Table );
    protected virtual bool    ​ (TableRow );
    protected virtual bool    ​ (TableCell );
    protected virtual bool    ​ (Field );
    protected virtual bool    ​ (Hyperlink );
    protected virtual bool    ​ (PreservedDrawingElement );
    protected virtual bool    ​ (Shape );
    protected virtual bool    ​ (Group );
    protected virtual bool    ​ (TextBox );
    protected virtual bool    ​ (Picture );
    protected virtual bool    ​ (Run );
    protected virtual bool    ​ (BookmarkStart );
    protected virtual bool    ​ (BookmarkEnd );
    protected virtual bool    ​ (SpecialCharacter );
    protected virtual bool    ​ (PreservedInline );
    protected virtual bool    ​ (TableOfEntries );
    protected virtual bool    ​ (Note );
    protected virtual bool    ​ (BlockContentControl );
    protected virtual bool    ​ (InlineContentControl );
    protected virtual bool    ​ (Chart );
    protected virtual bool    ​ (CommentStart );
    protected virtual bool    ​ (CommentEnd );
    protected virtual bool    ​ (MoveRangeSeparator );
    protected virtual bool    ​ (Comment );
    protected virtual bool    ​ (AlignmentTab );
    private static   <   > (U );
    private static    <   > (U );
    public static bool (Element , Func`2<   , U> , U& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [NullableAttribute("2")]
public       { get; }
    internal    (    );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    [NullableContextAttribute("2")]
public     ();
    public     (Double& );
    public void (    , double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double  ();
    public void (double );
    public double  ();
    public void (double );
    public double  ();
    public void (double );
    public bool ();
    public void (bool );
    internal static void (    ,     );
    internal static void (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private     ;
    private    (    );
    private     ();
    public static     (    ,     );
    private void (    );
    private void (    );
    private ParagraphStyle (string ,     ,     , Nullable`1<int> , Nullable`1<int> );
    private static CharacterStyle (string ,     );
    private ListStyle (string , string , Nullable`1<bool> , Nullable`1<int> );
    private static TableStyle (string ,     ,     , TableFormat , TableRowFormat , TableCellFormat , IList`1<TableStyleFormat> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
internal static [] ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
private protected  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private   <   > ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private   <   > ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("0")]
private   <double> ;
    [NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    internal ​   Source { get; }
    [NullableAttribute("2")]
internal       { get; }
    private protected    ( );
    internal    (    ,     );
    private static    ();
    internal sealed virtual ​   get_Source();
    internal sealed virtual     ​ ();
    internal sealed virtual        ​ ();
    internal sealed virtual void    ​ (    );
    [NullableContextAttribute("2")]
internal     ();
    internal     ();
    internal static     ( );
    public static     ( );
    internal virtual void    ​ ();
    internal sealed virtual     ​  ();
    internal sealed virtual void    ​ ( );
    internal abstract virtual     ​  ();
    internal abstract virtual void    ​ ( );
    internal abstract virtual bool    ​ ();
    internal abstract virtual bool    ​ ();
    internal      ();
    internal void (    );
    private protected ​    ();
    private protected void (​   );
    internal abstract virtual        ​  ();
    internal virtual double    ​  ();
    internal      ();
    internal      ();
    internal double  ();
    private protected abstract virtual        ​  ();
    private static     (​   );
    internal void ();
    internal void ();
    internal void ();
    internal     ( , bool );
    private protected sealed virtual        ​ (    );
    internal     (    );
    internal     (    );
    private double  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public     ;
    public IDictionary`2<string, double> ;
    public bool ;
    public bool ;
    public bool ;
    public Color ;
    public Color ;
    public double  ;
    public Nullable`1<byte>  ;
    public bool  ;
    public Nullable`1<bool>  ;
    public TextDirection  ;
    public Nullable`1<Padding>  ;
    public Nullable`1<VerticalAlignment>  ;
    public Nullable`1<bool>  ;
    public Nullable`1<bool>  ;
    public string  ;
    public Nullable`1<double>  ;
    public bool  ;
    public void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private static Dictionary`2<string, PdfStandardFontName> ;
    private static Dictionary`2[] ;
    private Dictionary`2<string,    > ;
    private Dictionary`2<Uri,    > ;
    private     ;
    private     ;
    private bool ;
    public    (    ,     );
    private static    ();
    private static Dictionary`2<char, int> (PdfStandardFontName ,     );
    public bool ();
    internal void (bool );
    public     (    ,     );
    public     (    );
    public     (    );
    public void ();
    public void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private string ;
    internal    (ContentPosition , string ,     );
    protected virtual ContentPosition    ​ (    );
    protected virtual ContentPosition    ​ (    );
    protected virtual ContentPosition    ​ (    );
    protected virtual ContentPosition    ​ (    );
    protected virtual ContentPosition    ​ (    );
    protected virtual ContentPosition    ​ (    );
    protected virtual ContentPosition    ​ (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​ (PreservedDrawingElement );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    protected virtual ContentPosition    ​  (    );
    private ContentPosition (    );
    private ContentPosition (    );
    private ContentPosition (    );
    private ContentPosition (    );
    private static ContentPosition (Run , bool , string );
    private static ContentPosition (Run , int , string );
    protected virtual ContentPosition    ​  (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    private static String[] ;
    private bool ;
    private static    ();
    public bool ();
    public void (bool );
    protected static int (   );
    public static     (    , bool );
    public abstract virtual void    ​ (int ,    , StringBuilder );
    public string (int ,    );
    public abstract virtual int    ​ (  & );
    public abstract virtual int    ​ (  & );
    public abstract virtual int    ​ (char );
    public abstract virtual       ​ (int );
    public void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private Section ;
    private Tuple`2<HeaderFooter, HeaderFooter> ;
    public    (    , int );
    private bool ();
    protected virtual void    ​ ();
    protected virtual bool    ​  (    );
    private bool (    , PageSetup , HeaderFooterCollection );
    private void (    , bool , HeaderFooterCollection );
    private void (HeaderFooterCollection , bool );
    private void (SectionCollection , HeaderFooterCollection , HeaderFooterType , bool , bool );
    private HeaderFooter (SectionCollection , HeaderFooterType );
    private void (HeaderFooterCollection , HeaderFooterType , HeaderFooter );
}
internal class     :     {
    internal    (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private int ;
    private  ;
    private string ;
    private int ;
    internal    ( , string , int , int );
    internal    ( , string , int );
    public  ();
    public string ();
    public int ();
    public string ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<TableWidth> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<VerticalAlignment> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<Padding> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   >  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<TableCellTextDirection>  ;
    [DebuggerBrowsableAttribute("0")]
private Revision  ;
    [DebuggerBrowsableAttribute("0")]
private TableCellFormatRevision  ;
    protected virtual Style    ​ ();
    protected virtual void    ​ (Style );
    public Nullable`1<TableWidth> ();
    public void (Nullable`1<TableWidth> );
    public Nullable`1<VerticalAlignment> ();
    public void (Nullable`1<VerticalAlignment> );
    public Nullable`1<Padding> ();
    public void (Nullable`1<Padding> );
    public Nullable`1<double> ();
    public Nullable`1<double> ();
    public Nullable`1<double> ();
    public Nullable`1<double> ();
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public      ();
    public void (    );
    public Nullable`1<   >  ();
    public void (Nullable`1<   > );
    public Nullable`1<TableCellTextDirection>  ();
    public void (Nullable`1<TableCellTextDirection> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public Revision  ();
    public void (Revision );
    public TableCellFormatRevision  ();
    public void (TableCellFormatRevision );
    protected virtual  ​ <   >    ​  ();
    public virtual        ​ ();
    public virtual        ​ ();
    public     (bool , TableCellFormat );
    public virtual int GetHashCode();
    public void (    );
    public virtual bool Equals(    );
    internal bool (    );
}
[DefaultMemberAttribute("Item")]
[DebuggerTypeProxyAttribute("GemBox.Collections.EnumerableDebugView`1<   >")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
private List`1<   > ;
    public int Count { get; }
    public     Item { get; public set; }
    internal    (    );
    internal    (    , List`1<   > );
    public sealed virtual int get_Count();
    public sealed virtual     get_Item(int );
    public sealed virtual void set_Item(int ,     );
    public sealed virtual void Add(    );
    public sealed virtual void Insert(int ,     );
    public sealed virtual void RemoveAt(int );
    public sealed virtual bool Remove(    );
    public sealed virtual void Clear();
    public sealed virtual bool Contains(    );
    public sealed virtual int IndexOf(    );
    public sealed virtual void CopyTo(   [] , int );
    public sealed virtual IEnumerator`1<   > GetEnumerator();
    public void (    );
    private static void (    , string );
    private void ();
    internal void (List`1<   > );
    internal void (    );
    internal List`1<   > ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override IEnumerator    ​ ();
    internal     ();
    internal bool ();
    internal  ();
    internal static List`1<   > ( );
    internal  (& );
    private static  ( );
    internal static     (    , ​   , bool );
    internal void (​   , bool );
    internal ​    ();
    internal static     (    , ​   , bool );
    internal void (​   , bool );
    internal ​   (double );
    private void (    );
    private void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static Field (Hyperlink );
    private static string (Hyperlink );
    private static string (string );
    public static string (Stream );
    public static bool (double , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
private protected  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal ​   Source { get; }
    private protected    ( );
    internal sealed virtual     ​ ();
    internal sealed virtual ​   get_Source();
    internal     ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Element ;
    public    (Element );
    public sealed virtual void    ​ (DocumentModel );
    public sealed virtual void    ​ (Section );
    public sealed virtual void    ​ (HeaderFooter );
    public sealed virtual void    ​ (Paragraph );
    public sealed virtual void    ​ (Table );
    public sealed virtual void    ​ (TableRow );
    public sealed virtual void    ​ (TableCell );
    public sealed virtual void    ​ (BookmarkStart );
    public sealed virtual void    ​ (BookmarkEnd );
    public sealed virtual void    ​ (Field );
    public sealed virtual void    ​ (Hyperlink );
    public sealed virtual void    ​ (PreservedDrawingElement );
    public sealed virtual void    ​ (Shape );
    public sealed virtual void    ​ (Group );
    public sealed virtual void    ​ (TextBox );
    public sealed virtual void    ​ (Picture );
    public sealed virtual void    ​ (Run );
    public sealed virtual void    ​ (SpecialCharacter );
    public sealed virtual void    ​ (PreservedInline );
    public sealed virtual void    ​ (TableOfEntries );
    public sealed virtual void    ​ (Note );
    public sealed virtual void    ​ (BlockContentControl );
    public sealed virtual void    ​ (InlineContentControl );
    public sealed virtual void    ​ (Chart );
    public sealed virtual void    ​ (CommentStart );
    public sealed virtual void    ​ (CommentEnd );
    public sealed virtual void    ​ (Comment );
    public sealed virtual void    ​ (MoveRangeSeparator );
    public sealed virtual void    ​ (AlignmentTab );
}
internal class     : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private protected  ;
    internal ​   Source { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal      { get; internal set; }
    private protected    ( );
    private static    ();
    internal sealed virtual ​   get_Source();
    internal sealed virtual     ​ ();
    [NullableContextAttribute("2")]
internal static     ( );
    private protected static  ();
    public abstract virtual     ​ ();
    private protected void ( );
    private protected static  ( );
    [NullableContextAttribute("2")]
internal     ();
    [NullableContextAttribute("2")]
internal void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​  []  ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private protected       { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private  ​    { get; private protected set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private  ​    { get; private set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private  ​    { get; private set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private       { get; private set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private protected       { get; private protected set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private protected       { get; private protected set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private    { get; private set; }
    private protected    ( );
    private static    ();
    private protected bool ();
    [NullableContextAttribute("2")]
private protected     ();
    internal      ();
    internal bool ();
    private protected      ();
    internal virtual        ​  ();
    internal static double  ();
    internal virtual        ​  ();
    internal virtual void    ​ (    );
    internal virtual Nullable`1<int>    ​  ();
    internal virtual void    ​ (Nullable`1<int> );
    [NullableContextAttribute("2")]
private  ​   ();
    [NullableContextAttribute("2")]
private protected void ( ​  );
    private protected ​    ();
    private protected void (​   );
    private protected ​    ();
    private protected void (​   );
    private protected Nullable`1<   >  ();
    private protected void (Nullable`1<   > );
    private protected Nullable`1<   >  ();
    private protected void (Nullable`1<   > );
    private protected double  ();
    private protected void (double );
    private protected double  ();
    private protected void (double );
    private protected ​    ();
    private protected void (​   );
    [NullableContextAttribute("2")]
private  ​   ();
    [NullableContextAttribute("2")]
private void ( ​  );
    [NullableContextAttribute("2")]
private  ​   ();
    [NullableContextAttribute("2")]
private void ( ​  );
    [NullableContextAttribute("2")]
private      ();
    [NullableContextAttribute("2")]
private void (    );
    private  ​   ();
    private  ​   ();
    private  ​   ();
    private      ();
    private protected double  ();
    private protected void (double );
    private protected double  ();
    private protected void (double );
    internal double  ();
    private protected void (double );
    internal   ();
    private protected void ( );
    private protected      ();
    private protected void (    );
    private protected bool ();
    private protected void (bool );
    private protected double  ();
    private protected void (double );
    private protected int  ();
    private protected void (int );
    private protected Nullable`1<   >  ();
    private protected void (Nullable`1<   > );
    private protected Nullable`1<   >  ();
    private protected void (Nullable`1<   > );
    [NullableContextAttribute("2")]
private protected     ( );
    [NullableContextAttribute("2")]
private protected void ( ,     );
    [NullableContextAttribute("2")]
private protected     ( );
    [NullableContextAttribute("2")]
private protected void ( ,     );
    private protected   ();
    private protected void ( );
    private protected bool ();
    private protected void (bool );
    private protected bool ();
    private protected void (bool );
    private protected      ();
    private protected void (    );
    private protected   ();
    private protected void ( );
    private protected      ();
    private protected void (    );
    private protected double  ();
    private protected void (double );
    private protected      ();
    private protected void (    );
    private protected      ();
    private protected void (    );
    private protected   ();
    private protected void ( );
    [NullableContextAttribute("2")]
private protected      ();
    [NullableContextAttribute("2")]
private protected void (    );
    [NullableContextAttribute("2")]
private protected      ();
    [NullableContextAttribute("2")]
private protected void (    );
    private protected     (bool );
    private protected      ();
    public  ​   ();
    public void ( ​  );
    [NullableContextAttribute("2")]
private  ​();
    [NullableContextAttribute("2")]
private void ( );
    internal bool ();
    public ICollection`1<KeyValuePair`2< ​ ,    >> ( );
    [NullableContextAttribute("2")]
public     ( ,  ​  );
    [NullableContextAttribute("2")]
public     ​();
    public void ( , ICollection`1<KeyValuePair`2< ​ ,    >> );
    public void ( ,  ​  ,     );
    public void (    );
    public void ​();
    public void ​();
    internal void (bool );
    public void ​();
    internal void ​();
    internal void (bool );
    private protected abstract virtual void    ​ ​();
    private protected     (​   , bool );
    private protected void (​   ,     );
    private protected static void (    ,     , Nullable`1<   > , double , bool );
    private protected static void (    ,     , Nullable`1<   > , double ,  ,     , double ,      , bool  );
    private protected static void (    ,     ,     );
    private protected static void (    ,     ,     ,     ,  , double ,     , bool  ,      ,   , bool  ,      ,      ,      ,      ,   , bool  ,      ,      ,      );
    private static double (    , double ,     ,     );
    private static double (    , double ,     ,     );
    private protected static  ( ,     ,     );
    private protected void  ();
    private protected void ( ​  ,  ​  );
    internal void (    );
    internal static     (    ,     ,    & );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("0")]
private   <   > ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private EventHandler`1<​  > ;
    [DebuggerBrowsableAttribute("0")]
private EventHandler ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public ​    { get; }
    internal    (    ,     );
    public     ();
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ ( );
    public sealed virtual void    ​ ( );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ (double , double , double , double , double , double );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    ,     ,     );
    public sealed virtual void    ​ (    ,     );
    public sealed virtual void    ​ (    ,     );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ (    , double , double );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    [ObsoleteAttribute("Use FillPath instead.")]
public sealed virtual void    ​ ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (    , double );
    public sealed virtual void    ​ ( );
    public sealed virtual void    ​  (double );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (double , double , double , double , double , double );
    public sealed virtual void    ​  ();
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (double , double ,     );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    ,     ,     );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (IList`1<double> );
    public sealed virtual void    ​ (IList`1<double> ,     );
    public sealed virtual void    ​ (IList`1<double> );
    public sealed virtual void    ​ (IList`1<double> ,     );
    public sealed virtual void    ​  (double );
    public sealed virtual void    ​  (double );
    public sealed virtual void    ​ (double , double , double );
    public sealed virtual void    ​ (double , double , double );
    public sealed virtual void    ​ (double , double , double , double );
    public sealed virtual void    ​ (double , double , double , double );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    ,     );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    ,     );
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    [NullableContextAttribute("2")]
public sealed virtual ​      ​  ();
    [CompilerGeneratedAttribute]
public sealed virtual void    ​ (EventHandler`1<​  > );
    [CompilerGeneratedAttribute]
public sealed virtual void    ​ (EventHandler`1<​  > );
    [CompilerGeneratedAttribute]
public sealed virtual void    ​ (EventHandler );
    [CompilerGeneratedAttribute]
public sealed virtual void    ​ (EventHandler );
    public sealed virtual void    ​ (    ,     );
    public sealed virtual void    ​ (string ,     );
    public sealed virtual void    ​  ();
    public sealed virtual void    ​ (string );
    public sealed virtual void Dispose();
    private void ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    );
    public  ();
    public void ( );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    public double ();
    public void (double );
    private protected virtual void    ​ ​();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    internal    (    );
    public double ();
    public void (double );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    public double ();
    public void (double );
    private protected virtual void    ​ ​();
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static IEnumerable`1<string> ;
    private static    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    private static    ();
    private    ( );
    internal static     ();
    internal virtual void    ​ ();
    public virtual     ​ ();
    public string ();
    public void (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
protected     ;
    protected    (    );
    public abstract virtual void    ​ (   , string , Stream );
    protected static SKSize (   , int );
    protected static SKRect (   , int , object );
    protected static SKPicture (   , int , object );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private     ;
    [NullableAttribute("1")]
public       { get; public set; }
    [NullableContextAttribute("1")]
internal    (    );
    internal  ();
    internal void ( );
    public double ();
    public void (double );
    public  ();
    public void ( );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public double ();
    public void (double );
    public Nullable`1<   >  ();
    public void (Nullable`1<   > );
    public      ();
    public void (    );
    public double ();
    public void (double );
    [NullableContextAttribute("1")]
public      ();
    [NullableContextAttribute("1")]
public void (    );
    public   ();
    public void ( );
    public      ();
    public void (    );
    public      ();
    public void (    );
    private protected virtual void    ​ ​();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (    ,     );
    private static void (    ,     );
    private static void (    ,     , BuiltInDocumentProperty );
    public static void (    ,     );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private     ;
    [NullableContextAttribute("2")]
public    (    );
    public     ();
    public void (    );
    public virtual Style    ​ (DocumentModel );
    public virtual void    ​ ();
    protected virtual void    ​ (DocumentModel ,     );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Dictionary`2<Picture, int> ;
    private Dictionary`2<ListStyle, int> ;
    private Dictionary`2<   , int> ;
    private     ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<KeyValuePair`2<Picture, int>>  { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<KeyValuePair`2<ListStyle, int>>  { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<KeyValuePair`2<   , int>>  { get; }
    public    (    );
    public bool ();
    public IEnumerable`1<KeyValuePair`2<Picture, int>> ();
    public IEnumerable`1<KeyValuePair`2<ListStyle, int>> ();
    public IEnumerable`1<KeyValuePair`2<   , int>> ();
    public int (    );
    public int (ListStyle );
    public int (Picture );
    public int (ListStyle );
    private void (   [] );
    private void (   [] );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private static String[][] ;
    private static Char[] ;
    private StringBuilder ;
    [NullableAttribute("2")]
private Int64[] ;
    [NullableAttribute("2")]
private Int64[] ;
    private int ;
    private     ;
    private string  ;
    public    (    );
    private static    ();
    public bool ();
    private void ();
    public char ();
    public bool ();
    public string ();
    public long (bool );
    public void (Int64& , Int64& );
    public void (Int64& , Int64& , Int64& , Int64& );
    public void (Int64& , Int64& , Int64& , Int64& , Int64& , Int64& );
    public void (Int64& , Int64& , Int64& , Int64& , Int64& , Int64& , Int64& , Int64&  );
    private void (IList`1<string> );
    private long (string );
    public long (string );
    private static double (double );
    private static double (double );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    internal static  ;
    protected  ​  ;
    protected    ( ​  );
    public static void (    , DrawingElement ,  ​  );
    public static void (    , DrawingElement ,  ​  ,  );
    private static void (    , DrawingElement ,  ​  );
    private static void (    , DrawingElement ,  ​  );
    private static void (    , DrawingElement ,  ​  );
    private static void (    , DrawingElement ,  ​  );
    private static void (    , DrawingElement ,  ​  );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    private bool ;
    private double ;
    private Color ;
    private byte ;
    private string ;
    private double ;
    private string  ;
    private string  ;
    private string  ;
    private string  ;
    [NullableAttribute("2")]
private string  ;
    private string  ;
    private bool  ;
    private Color  ;
    private   ;
    private   ;
    private   ;
    private   ;
    private   ;
    private   ;
    [NullableAttribute("2")]
private      ;
    [NullableAttribute("2")]
public string   { get; public set; }
    [NullableAttribute("2")]
public       { get; public set; }
    public string ();
    public void (string );
    public bool  ();
    public void (bool );
    public double  ();
    public void (double );
    public Color  ();
    public void (Color );
    public byte  ();
    public void (byte );
    public string ();
    public void (string );
    public double  ();
    public void (double );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    public string  ();
    public void  (string );
    public bool  ();
    public void (bool );
    public Color  ();
    public void (Color );
    public   ();
    public void ( );
    public   ();
    public void ( );
    public   ();
    public void ( );
    public   ();
    public void ( );
    public   ();
    public void ( );
    public   ();
    public void ( );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public void (    );
    internal Pen  ();
    [NullableContextAttribute("2")]
internal     ();
    internal     ();
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (    ,     , Layout& ,    & );
    private static string (    );
    private static     (    );
    private static Nullable`1< ​ > (    ,     );
    private static TextBox (    ,     ,     , Layout );
    public static void (    ,     );
    public static Shape (    ,     );
    public static Shape (    ,     );
    public static Shape (    ,     );
    public static Group (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual bool    ​ (   & );
    public void (   & ,    & );
    public void (   & ,    & );
    public void (   & ,    & );
    public sealed virtual void    ​ (   & , double );
    public sealed virtual void    ​ (   & , double );
    public     (   & ,    & );
    public void (   & ,    & );
    public bool (   & ,    & , IEqualityComparer`1<double> , Double& );
    public bool (   & ,    & , IEqualityComparer`1<double> , Double& );
    public bool (   & ,    & , IEqualityComparer`1<double> ,    & );
    public sealed virtual bool    ​ (   & ,    & , IEqualityComparer`1<double> );
    public sealed virtual bool    ​ (   & ,    & , IEqualityComparer`1<double> );
    public double (   & );
    public double (   & );
    public sealed virtual bool    ​ (   & , Double& ,    & );
    private sealed virtual override void    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & );
    private sealed virtual override void    ​ (   & ,    & modreq(System.Runtime.InteropServices.InAttribute) );
    private sealed virtual override void    ​ (   & ,    & modreq(System.Runtime.InteropServices.InAttribute) );
    private sealed virtual override        ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) );
    private sealed virtual override void    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & );
    private sealed virtual override bool    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) , IEqualityComparer`1<double> , Double& );
    private sealed virtual override bool    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) , IEqualityComparer`1<double> , Double& );
    private sealed virtual override bool    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) , IEqualityComparer`1<double> ,    & );
    private sealed virtual override double    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) );
    private sealed virtual override double    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal abstract class     : object {
    private string ;
    private string ;
    private string ;
    private string ;
    private string ;
    private Style ;
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public Style ();
    public void (Style );
    [NullableContextAttribute("1")]
public abstract virtual Style    ​ (DocumentModel );
    public abstract virtual void    ​ ();
    [NullableContextAttribute("1")]
public string (DocumentModel );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static HeaderFooter (    ,     , HeaderFooterType );
    public static HeaderFooter (    ,     );
    public static HeaderFooter (    ,     );
    public static HeaderFooter (    ,     );
    public static HeaderFooter (    ,     );
    public static HeaderFooter (    ,     );
    public static HeaderFooter (    ,     );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    public static  ​  ;
    public static  ​  ;
    public static  ​  ;
    public static  ​  ;
    public static  ​  ;
    public static  ​  ;
    public static  ​  ;
    public static  ​   ;
    public static  ​   ;
    public static  ​   ;
    public static  ​   ;
    public static  ​   ;
    public static  ​   ;
    public static  ​   ;
    public static  ​   ;
    public static  ​   ;
    public static  ​   ;
    public static  ​   ;
    public static  ​   ;
    private static    ();
    [IteratorStateMachineAttribute("   /")]
public static IEnumerable`1< ​ > ();
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
internal interface     {
    public DocumentModel Document { get; }
    public ListFormat ListFormat { get; }
    public abstract virtual DocumentModel get_Document();
    public abstract virtual Element    ​ ();
    public abstract virtual ListFormat get_ListFormat();
    public abstract virtual Element    ​ (CharacterFormat& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private    [] ;
    internal ​   Source { get; }
    internal    (​   );
    private static    ();
    public virtual     ​ ();
    public virtual int    ​ ();
    internal virtual int    ​  ();
    internal virtual    []    ​  ();
    internal virtual        ​  ();
    internal virtual ​      ​  ();
    internal virtual ​   get_Source();
    internal int ();
    private ​   ();
    internal static     (   [] , Byte[] , bool );
    internal static     (    , int , Byte[] , int );
    internal     ();
    private    [] ();
    internal    [] ();
    internal Byte[] (Int32& ,    & );
    internal virtual bool    ​ (    , Double& , Double& , Double& );
    internal virtual string    ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Field ;
    private     ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private  ​ <   >  { get; }
    internal    (Field ,     , int , Nullable`1<int> );
    private sealed virtual override DocumentModel    ​ ();
    private sealed virtual override Element    ​ ();
    private sealed virtual override ListFormat    ​ ();
    private sealed virtual override Element    ​ (CharacterFormat& );
    private sealed virtual override int    ​ ();
    private sealed virtual override void    ​ (int );
    private sealed virtual override        ​ ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override  ​ <   >    ​ ();
    private sealed virtual override bool    ​ (Func`2<   , U> , U& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Dictionary`2<SingleBorderType, string> ;
    private static Dictionary`2<SingleBorderType, string> ;
    private static Dictionary`2<SingleBorderType, > ;
    private static    ();
    private static bool (    , Nullable`1[] );
    private static void (    , TabStop , double );
    private static void (    , TabStopCollection , double );
    public static bool (    ,     , MultipleBorders , MultipleBorders ,  );
    public static bool (    ,     , MultipleBorders );
    public static void (    ,     , Nullable`1<Padding> , Nullable`1<Padding> );
    public static void (    ,     , MultipleBorders );
    public static void (    ,     ,   <   > ,   <   > , bool , string , Nullable`1<int> , Action  );
    public static void (    ,     , string , string ,   <   > ,   <   > ,   <   > ,   <   >  , bool  , string  , Action  , Action  , Nullable`1<int>  );
    public static void (    ,     , ParagraphStyle );
    public static bool (    ,     , string , Paragraph , Paragraph );
    internal static void (string , Nullable`1<double> , Nullable`1<double> , & );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual        ​ ();
    public abstract virtual string ToString();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static string (List`1<  > );
    [ExtensionAttribute]
public static List`1<  > (Field );
    [ExtensionAttribute]
public static TValue (IDictionary`2<TKey, TValue> , TKey );
    [ExtensionAttribute]
public static bool (List`1<  > , string );
    [ExtensionAttribute]
public static string (string );
    [ExtensionAttribute]
public static bool (ListLevelFormatCollection );
    [ExtensionAttribute]
public static void (string );
    [ExtensionAttribute]
public static void (IList`1<Inline> , string , DocumentModel );
    [ExtensionAttribute]
public static void (IList`1<Inline> , Inline );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static bool (string , string , String& );
    [ExtensionAttribute]
public static bool (string , string , Func`2<string, T> , T& );
    [ExtensionAttribute]
public static String[] (string , string , String[] );
    [ExtensionAttribute]
public static T[] (string , string , Func`2<string, T> , String[] );
    [ExtensionAttribute]
public static Section (    );
    private static void (Section );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<​  , ​  > ;
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<​  , ​  > ;
    [DebuggerBrowsableAttribute("0")]
private IEnumerator`1<​  > ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    internal    (IEnumerator`1<​  > ,     ,     );
    private static    ();
    private static     (Stream );
    private void (object , ​   );
    private void (object , EventArgs );
    public void ();
    private  ();
    private void ( );
    private ​   ();
    private  ();
    private static void ( );
    private ​   ( );
    private void ();
    private void (int );
    private void (string );
    private bool ();
    protected virtual int    ​  ();
    protected virtual string    ​  ();
    protected virtual void    ​ (bool );
    protected virtual ​      ​ (​   );
    protected virtual ​      ​ ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private DocumentModel ;
    [NullableAttribute("2")]
private     ;
    private List`1<Inline> ;
    [NullableAttribute("2")]
public      { get; public set; }
    public    (DocumentModel );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    public List`1<Inline> ();
    public IEnumerable`1<CharacterFormat> ();
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1<CharacterFormat> (IList`1<Inline> );
    public     (    );
    public     (Inline );
    public     (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private     ;
    public    (    , DocumentModel );
    private void (string , Action`1<Stream> , string );
    private void (string , Action`2<   ,    > );
    private void (Stream );
    private void ();
    public virtual void    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
internal Byte[] ;
    [DebuggerBrowsableAttribute("0")]
internal int ;
    [DebuggerBrowsableAttribute("0")]
internal int ;
    [DebuggerBrowsableAttribute("0")]
internal string ;
    [DebuggerBrowsableAttribute("0")]
internal bool ;
    [DebuggerBrowsableAttribute("0")]
internal bool ;
    [DebuggerBrowsableAttribute("0")]
internal bool ;
    private bool  ;
    private bool  ;
    private bool  ;
    internal    (Byte[] , int , bool , bool , bool , bool , bool , bool  );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
}
internal static class     : object {
    [NullableContextAttribute("1")]
public static bool (Element );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Version ();
    private static string ();
    private static string ();
    internal static string ();
    public static string ();
    public static string ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    public    (ContentRange );
    protected virtual int    ​ (int , bool , int , bool );
    protected virtual int    ​ (int , bool , int , bool );
    protected virtual void    ​ (ElementCollection , int , int );
    protected virtual bool    ​ (Element , Nullable`1<int> , bool );
    protected virtual void    ​ (Run , int , int );
    protected virtual void    ​ (Element );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static   <string, Func`2<   , Nullable`1<double>>> ;
    private static   <Tuple`2<string, bool>, Func`2<   , Nullable`1<double>>> ;
    private static   <string, Func`2<   , Nullable`1<double>>> ;
    private static   <string, Nullable`1<Color>> ;
    private static Char[] ;
    private static    ();
    internal static bool (    , Double& );
    internal static bool (string ,     , Double& , bool , double );
    internal static bool (string , Func`2& , bool , double );
    internal static bool (string ,     , Color& );
    internal static bool (string ,     , Double& );
    private static bool (string , Byte& );
    private static bool (string , Double& );
    private static     (    );
    private static bool (string , Double& );
    private static Func`2<   , Nullable`1<double>> (string );
    private static bool (    , Double& );
    private static double (    );
    private static bool (string , LengthUnit& );
    private static Func`2<   , Nullable`1<double>> (string );
    private static Nullable`1<BorderStyle> (string );
    private static bool (string ,     , HorizontalAlignment& );
    private static bool (string , Double& , LineSpacingRule& );
    private static Func`2<   , Nullable`1<double>> (double , string );
    private static bool (string , String& );
    private static bool (string ,     , Double& );
    private static bool (string ,     , Double& );
    private static bool (string , UnderlineType& );
    private static bool (    , ListTemplateType& );
    private static bool (string ,     , Double& );
    internal static bool (string ,     , TableWidth& );
    private static     (    , string );
    private static bool (    , string , Double& );
    private static bool (string ,     , string , Double& );
    private static TableCellTextDirection (string );
    private static bool (string , VerticalAlignment& );
    private static bool (string , Orientation& );
    private static bool (string , PageSetup );
    private static bool (string );
    private static bool (    );
    private static void (MultipleBorders , Nullable`1<BorderStyle> , Nullable`1<BorderStyle> , Nullable`1<BorderStyle> , Nullable`1<BorderStyle> , Color , Color , Color  , Color  , double  , double  , double  , double  , double  , int  , int  , int  , int  );
    private static void (MultipleBorders , MultipleBorderTypes , Nullable`1<BorderStyle> , Color , double , int );
    private static bool (MultipleBorders , SingleBorderType , int , bool );
    private static void (Paragraph ,     , BitArray );
    private static string (string , string ,     );
    private static Nullable`1<Color> (string );
    private static bool (Paragraph ,     , string );
    private static void (Paragraph ,     , string ,     , double );
    private static bool (    );
    [IteratorStateMachineAttribute("   / ")]
private static IEnumerable`1<CharacterFormat> (Inline );
    private static bool (    );
    public static void (string , string ,     );
    public static bool (string );
    public static ListStyle (    , Func`2<string, Picture> , int );
    public static void (CharacterFormat ,     , bool , bool );
    public static void (Paragraph ,     , BitArray , bool ,     );
    public static void (Paragraph ,     ,     , Func`2<string, Picture> );
    public static void (TableFormat ,     );
    public static void (TableRowFormat ,     );
    public static void (Table , TableCellFormat ,     );
    public static void (Shape ,     );
    public static Picture ( ​  , DocumentModel ,     , Element , PageSetup );
    private static double (Element , PageSetup );
    private static void (Picture ,     );
    private static void (Layout ,     , Element , PageSetup );
    private static bool (Section ,     );
    public static void (Section ,     );
    public static void (CharacterFormat ,     , bool , bool );
    public static bool ( ​  );
    public static bool ( ​  );
    public static bool ( ​  );
    public static void (IList`1<Inline> );
    public static void (IEnumerable`1<Block> ,     , bool );
    private static bool (MultipleBorders , SingleBorderType , BorderStyle , Color , double , double );
    public static void (IList`1<Block> , int ,     ,     , bool , bool , bool , bool  );
    public static void (IList`1<Inline> , int ,     );
    public static void (Run , string );
    public static void (    );
    public static string (    );
    public static bool (DocumentModel ,     , Field& );
    private static void (Field ,     );
    private static void (Field ,     );
    private static void (Field ,     , string , string , bool );
    private static void (Field ,     );
    private static void (Field ,     );
    private static void (Field ,     );
    public static void (Field ,     );
    public static bool (string , FieldType& );
    public static void (Group ,     );
    public static void (Group ,     , Func`2<string, Picture> );
    private static void (Group ,     , Picture );
    public static void (    , Group , Picture );
}
[DefaultMemberAttribute(" ")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public       { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public       { get; }
    [DebuggerBrowsableAttribute("0")]
public double   { get; }
    [NullableContextAttribute("2")]
internal static     (IList`1<double> ,     , bool );
    [NullableContextAttribute("2")]
private static     (IList`1<double> , bool );
    internal static     (​   );
    internal static     (    );
    [NullableContextAttribute("2")]
public virtual        ​ ();
    [NullableContextAttribute("2")]
public virtual        ​ ();
    public abstract virtual int    ​ ();
    internal virtual bool    ​ ();
    public double (int );
    protected abstract virtual double    ​ (int );
    internal virtual        ​ (    );
    internal virtual        ​ (    );
    internal ​    ();
    internal void (Double[] , int );
    public sealed virtual string ToString();
    public sealed virtual bool Equals(    );
    protected virtual bool    ​ (    );
    public sealed virtual bool Equals(object );
    public sealed virtual int GetHashCode();
    public virtual void    ​ (   & );
    private sealed virtual override bool    ​ (object , IEqualityComparer );
    private sealed virtual override int    ​ (IEqualityComparer );
    public   ();
    private sealed virtual override IEnumerator`1<double>    ​  ();
    private sealed virtual override IEnumerator    ​  ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override int    ​ ();
    private sealed virtual override double    ​ (int );
    private sealed virtual override void    ​ (int , double );
    private sealed virtual override int    ​ (double );
    private sealed virtual override bool    ​ (double );
    private sealed virtual override void    ​ (Double[] , int );
    private sealed virtual override void    ​ (int , double );
    private sealed virtual override void    ​ (double );
    private sealed virtual override void    ​ (int );
    private sealed virtual override bool    ​ (double );
    private sealed virtual override void    ​ ();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    private string ;
    private Nullable`1<Color> ;
    private string ;
    private string ;
    private string ;
    private string ;
    private string  ;
    private Nullable`1<Color>  ;
    private      ;
    private Nullable`1<Padding>  ;
    private Nullable`1<Padding>  ;
    private string  ;
    private Nullable`1<HorizontalPositionType>  ;
    private Nullable`1<HorizontalPositionAnchor>  ;
    private Nullable`1<VerticalPositionType>  ;
    private Nullable`1<VerticalPositionAnchor>  ;
    private Nullable`1<Color>  ;
    private Nullable`1<double>  ;
    private Nullable`1<double>  ;
    private string  ;
    private Nullable`1<   >  ;
    public string ();
    public void (string );
    public string ();
    public void (string );
    public Nullable`1<Color>  ();
    public void (Nullable`1<Color> );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public Nullable`1<Color>  ();
    public void (Nullable`1<Color> );
    public      ();
    public void (    );
    public Nullable`1<Padding>  ();
    public void (Nullable`1<Padding> );
    public Nullable`1<Padding>  ();
    public void (Nullable`1<Padding> );
    public string  ();
    public void  (string );
    public Nullable`1<HorizontalPositionType>  ();
    public void (Nullable`1<HorizontalPositionType> );
    public Nullable`1<HorizontalPositionAnchor>  ();
    public void (Nullable`1<HorizontalPositionAnchor> );
    public Nullable`1<VerticalPositionType>  ();
    public void (Nullable`1<VerticalPositionType> );
    public Nullable`1<VerticalPositionAnchor>  ();
    public void (Nullable`1<VerticalPositionAnchor> );
    public Nullable`1<Color>  ();
    public void (Nullable`1<Color> );
    public Nullable`1<double>  ();
    public void (Nullable`1<double> );
    public Nullable`1<double>  ();
    public void (Nullable`1<double> );
    public string  ();
    public void  (string );
    public Nullable`1<   >  ();
    public void (Nullable`1<   > );
    public void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private ColorDataName ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int> ;
    public    (ColorDataName , Nullable`1<int> , IList`1<   > );
    public ColorDataName ();
    public Nullable`1<int> ();
    public virtual     ​ ();
    public virtual ColorDataName    ​ ();
    protected virtual        ​ (    );
    protected virtual        ​ (IList`1<   > );
    protected virtual bool    ​ (    );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal ​   Source { get; }
    internal    (    );
    private static    ();
    internal virtual     ​ ();
    internal virtual ​   get_Source();
    private  ();
    private void ( );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public     ();
    public void (    );
    private ​   (​   );
    private void (​   , ​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     : Collection`1<   > {
    public    (IEnumerable`1<   > );
    protected virtual void SetItem(int ,     );
    protected virtual void InsertItem(int ,     );
}
internal static class     : object {
    [NullableContextAttribute("1")]
public static Regex (string , RegexOptions );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static bool (string );
    private static bool (string );
    public static void (string ,     ,  );
    public static void (string ,     ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <UInt32> ;
    private ushort ;
    private static    ();
    public ushort ();
    public void (ushort );
    public static     ();
    public virtual        ​ ();
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual        ​ ();
    public abstract virtual bool    ​ ( ​  ,    & );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (​ ,     , Encoding );
    private static void (​ ,     , Encoding );
    private static void (​ ,     , Encoding );
    private static void (​ ,     , Encoding );
    private static void (​ , string ,     , Encoding , bool );
    private static void (​ , string , Stream , bool );
    private static void (​ , string , Byte[] );
    private static void (​ , string ,     );
    private static void (​ , string );
    public static void (    , Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private IndentedTextWriter ;
    private bool ;
    public    (TextWriter ,  );
    public    (IndentedTextWriter ,  );
    private void (IEnumerable`1<KeyValuePair`2<string, string>> );
    private void ( ​  );
    private void (    );
    private void ( ​  );
    private void ( ​  );
    private void ( ​  );
    private void (    );
    private void ( ​  );
    private void ( ​  );
    public void ( ​  );
    public void ( ​  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ (    );
    public abstract virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public static     ;
    public static     ;
    private Predicate`1< ​ > ;
    private string ;
    private     ;
    internal    (    , string , Predicate`1< ​ > );
    private static    ();
    [CompilerGeneratedAttribute]
public sealed virtual        ​ ();
    public sealed virtual bool    ​ ( ​  ,    & );
    public virtual string ToString();
    public static     (string );
    public static     (string );
    public static     (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <UInt32> ;
    private UInt32 ;
    private static    ();
    public UInt32 ();
    public void (UInt32 );
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
    public static     ();
    public virtual        ​ ();
}
[AttributeUsageAttribute("256")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : Attribute {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
public bool  { get; public set; }
    [DebuggerBrowsableAttribute("0")]
public string  { get; public set; }
    public    (string , string );
    public    (string );
    public string ();
    public string ();
    public bool ();
    public void (bool );
    public string ();
    public void (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [NullableAttribute("2")]
private ​   ;
    private bool ;
    private bool ;
    private object ;
    private object ;
    private  ;
    private     ;
    private      ;
    private      ;
    private Dictionary`2< ​ ,    >  ;
    private Dictionary`2<object,    >  ;
    public    (bool , bool ,  ​  , object , object ,  );
    public bool ();
    public bool ();
    public object ();
    public object ();
    public  ();
    public     ();
    private void (    );
    public     ();
    internal void (    );
    public      ();
    internal void (    );
    public Dictionary`2< ​ ,    >  ();
    public Dictionary`2<object,    >  ();
    public ​    ();
    public virtual        ​ (object );
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private     ;
    public void (int );
    public void (Nullable`1<int> );
    public static int op_Implicit(    );
    [NullableContextAttribute("1")]
private sealed virtual override IEnumerator`1<int>    ​ ();
    [NullableContextAttribute("1")]
private sealed virtual override IEnumerator    ​ ();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static Byte[] (    , string );
    [ExtensionAttribute]
public static string (    , Byte[] );
    [ExtensionAttribute]
internal static    (    ,    , string );
    [ExtensionAttribute]
internal static string (    ,    );
    internal static void (    , char , char , int );
    internal static void (    , Byte[] , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public    (double , double , double , IList`1<   > );
    public double ();
    public double ();
    public double ();
    public virtual     ​ ();
    public virtual ColorDataName    ​ ();
    protected virtual        ​ (    );
    protected virtual        ​ (IList`1<   > );
    protected virtual bool    ​ (    );
    protected virtual int    ​ ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private object ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private object ;
    [DebuggerBrowsableAttribute("0")]
private X509KeyStorageFlags ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [NullableAttribute("2")]
public       { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal string   { get; }
    [NullableContextAttribute("2")]
protected    (    );
    public    (string , string );
    internal    (Byte[] , string );
    public    (object );
    private    (object , object , string , X509KeyStorageFlags );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    [NullableContextAttribute("2")]
protected void (    );
    private static object (object );
    private protected virtual bool   ​ ();
    [NullableContextAttribute("2")]
internal virtual string    ​ ();
    internal virtual bool    ​ ();
    private protected virtual Byte[]    ​ (Byte[] , string , object );
    protected virtual Byte[]    ​ (Byte[] ,  ,     );
    private     (object );
    public virtual string ToString();
    private sealed virtual override object    ​  ();
    private sealed virtual override object    ​  ();
    private sealed virtual override X509KeyStorageFlags    ​  ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override Byte[]    ​ (Byte[] , string , object );
    private sealed virtual override bool    ​ (Byte[] , Byte[] , string , object );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Char[] ;
    private static Encoding ;
    public static Char[] ;
    public static   <string, int> ;
    private static    ();
    private static bool (string , Int32& );
    private static bool (int , String& );
    private static int (string , Int32& );
    private static void (UInt32 , Char& , Char& );
    private static bool (string );
    private static bool (char );
    internal static Uri (string );
    public static bool (string );
    public static bool (string );
    public static bool (string );
    public static bool (string );
    public static bool (char );
    public static bool (string );
    public static void ( ​  ,  ​  );
    public static void ( ​  ,  ​  , int );
    public static void ( ​  ,     );
    public static void ( ​  , int ,     );
    public static string  (string );
    public static void (string , StringBuilder );
    public static string  (string );
    public static void (string , StringBuilder );
    public static string  (string );
    public static void (string , StringBuilder );
    public static string  (string );
    public static void (string , StringBuilder );
    public static string  (string );
    public static bool (string , Int32& );
}
[AttributeUsageAttribute("32767")]
[ConditionalAttribute("DEBUG")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : Attribute {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    public    (string , string );
    public string ();
    public string ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private static Byte[] ;
    private static Byte[] ;
    private bool ;
    public    (bool );
    private static    ();
    public bool ();
    private void (bool );
    public virtual     ​ ();
    public virtual void    ​ (    , Stream );
    public virtual int    ​ (    , Stream );
}
internal class     :     {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private     ;
    public    (    ,     );
    protected virtual        ​ ();
    public virtual object    ​ ();
    protected virtual void    ​ (Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    public abstract virtual string    ​ ();
    public abstract virtual string    ​ ();
    protected abstract virtual        ​ ();
    public     ();
    internal bool ();
    public     ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    internal    (    );
    protected sealed virtual void    ​ (Stream );
    protected virtual        ​ ();
    protected abstract virtual void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private string ;
    internal    (    , string );
    public     ();
    public string ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    private string ;
    public    (string , string );
    public string ();
    public void (string );
    public string ();
    public void (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static string (Encoding );
    public static string (int );
    public static string ();
    public static void (Byte[] , bool );
    public static string (String[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private List`1<byte> ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (    , bool );
    private void ();
    protected virtual void    ​ ();
    public virtual bool    ​ ();
    public void ();
    public void ();
    public     ();
    public Byte[] ();
}
[DefaultMemberAttribute(" ")]
[DebuggerTypeProxyAttribute("   /XElementDebugView")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
public string   { get; }
    internal    (    );
    public string ();
    public int ();
    public  ();
    public      ();
    public string ();
    public string ();
    public string ();
    public string (string );
    [IteratorStateMachineAttribute("   /")]
public IEnumerable`1<   > (Func`2<   , > );
    private T (string , T , Func`2<string, T> );
    public bool (string );
    public bool (string , bool );
    public int (string );
    public int (string , int );
    public long (string );
    public long (string , long );
    public double (string );
    public double (string , double );
    public bool  ();
    public int ();
    public long  ();
    public double  ();
    public static void (Stream , Action`1<   > );
    public static void (string , Action`1<   > );
    public static void (string , bool , Action`1<   > );
    public static void (Stream , Func`2<Stream,    > , Action`1<   > );
    public static void (string , Func`2<string,    > , Action`1<   > );
    private static void (    , Action`1<   > );
    public static     (XmlReader );
    public virtual string ToString();
    [NullableContextAttribute("0")]
public Nullable`1<T> (string );
    [NullableContextAttribute("0")]
public bool (string , T& );
    [NullableContextAttribute("0")]
public Nullable`1<T> (string , NumberStyles );
    public      ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ​   {
    [DebuggerBrowsableAttribute("0")]
private static CultureSpecificCharacterBufferRange ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<   ,    > ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<XmlLanguage,    > ;
    [DebuggerBrowsableAttribute("0")]
private DrawingGroup ;
    [DebuggerBrowsableAttribute("0")]
private   <GlyphRunDrawing> ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private TextFormatter  ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private TextLine  ;
    [DebuggerBrowsableAttribute("0")]
private TextLineBreak  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    internal    (bool ,     , double );
    private static    ();
    public virtual  ​  ​ ();
    public virtual     ​  ​ (    , int , double );
    private   <GlyphRunDrawing> (TextLine );
    private static void (DrawingGroup ,   <GlyphRunDrawing> );
    private     (    );
    private     (XmlLanguage );
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    <double> {
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal ​   ;
    internal ​   Source { get; }
    private static    ();
    public    (​   , ​   );
    public    (int );
    public static     (IList`1<double> );
    internal sealed virtual ​   get_Source();
    internal sealed virtual ​      ​ ();
    private protected sealed virtual double    ​ (​   );
    private protected sealed virtual ​      ​ (double );
}
internal class     : object {
    [NullableAttribute("1")]
private static  ​  ;
    private    <> ;
    private    <> ;
    private    <int> ;
    private bool ;
    private bool ;
    private bool ;
    [NullableAttribute("1")]
private  ​ <int, int>  ;
    private    <>  ;
    [NullableAttribute("1")]
private    <>  ;
    private    <sbyte>  ;
    [NullableAttribute("1")]
private    <sbyte>  ;
    private sbyte  ;
    [NullableAttribute("1")]
private Stack`1<>  ;
    [NullableAttribute("1")]
private    <int>  ;
    [NullableAttribute("1")]
private List`1<>  ;
    [NullableAttribute("1")]
private    <int>  ;
    [NullableAttribute("1")]
private Stack`1<int>  ;
    private int  ;
    private   ;
    private int  ;
    private    <>  ;
    private    <>  ;
    private    <sbyte>  ;
    private    <>  ;
    private    <int>  ;
    [NullableAttribute("1")]
private static   ;
    [NullableAttribute("1")]
private List`1<int>  ;
    [NullableAttribute("1")]
private List`1<>  ;
    private static    ();
    internal static UInt32 (int );
    internal static  (UInt32 );
    internal static  (int );
    internal static  (UInt32 );
    internal static  (int );
    internal static int (UInt32 );
    internal static int (int );
    public    <sbyte>  ();
    public int  ();
    [NullableContextAttribute("1")]
public void (    );
    public void (   <> ,    <> ,    <int> , sbyte , Nullable`1<bool> , Nullable`1<bool> , Nullable`1<bool> , Nullable`1<   <sbyte>>  );
    private void ();
    private void ();
    public sbyte (   <> );
    private void ();
    private int (int );
    private void (int , int , int );
    private void ();
    private int (int );
    private void ();
    private void ( ,  , int );
    [NullableContextAttribute("1")]
private List`1<>  ();
    private  ( );
    private  ( ,  );
    private void ( ,  );
    private void ();
    private void ();
    private static bool ( );
    private static  (int );
    public static bool ( );
    private static bool ( );
    private static  ( );
}
internal static class     : object {
    [NullableAttribute("1")]
public static     ;
    private static    ();
}
[AttributeUsageAttribute("256")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : Attribute {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private UInt32 ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
public string  { get; public set; }
    public    (string , UInt32 ,  );
    public string ();
    public UInt32 ();
    public  ();
    public string ();
    public void (string );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static bool ( );
    [ExtensionAttribute]
public static int ( );
    [ExtensionAttribute]
public static char ( );
    [ExtensionAttribute]
public static bool ( );
    [ExtensionAttribute]
public static bool ( );
    [ExtensionAttribute]
public static bool ( );
    [ExtensionAttribute]
public static bool ( , String& , String& );
    public static bool (string , string , & );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static    [] ;
    private static    ();
    public static     ( );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual  ​     ​ ();
    public abstract virtual void    ​ (int , int , Double[] , Action`3<int, int, Double[]> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private Stack`1<> ;
    [DebuggerBrowsableAttribute("0")]
private DrawingContext ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    public    (DrawingContext ,     );
    public virtual int    ​ ();
    public virtual int    ​ ();
    public virtual void    ​ (int );
    public virtual void    ​ ();
    public virtual void    ​ (    );
    public virtual void    ​ (    ,     ,     );
    public virtual void    ​ (    ,     ,     );
    public virtual void    ​ (    ,     ,     ,     );
    public virtual void    ​ (    ,     ,     ,     );
    public virtual void    ​ (    ,    [] );
    public virtual void    ​ (    ,     ,    [] ,  );
    public virtual void    ​ (    ,     ,  );
    public virtual void    ​ (    ,     );
    public virtual void    ​ (   ,     );
    public virtual void    ​ (    ,     ,     , double , double , double , double );
    private static Geometry ( , bool , Geometry& , Geometry& );
    public virtual void    ​ ();
    public virtual void    ​ ();
    public virtual void    ​ ( );
    public virtual void    ​ (    );
    public virtual void    ​ ( );
    public virtual void    ​ (string , bool , int , string );
    public virtual void    ​ (    );
    public virtual bool    ​ (object );
    public virtual        ​ (    );
    public virtual object    ​  ();
    public virtual bool    ​  ();
    public virtual bool    ​  ();
    public virtual void    ​ (int , string );
    public virtual       ​ (object );
    public virtual        ​ (object ,     ,   & );
    public virtual void    ​ (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<KeyValuePair`2<   ,    >> ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<KeyValuePair`2<   ,    >>  { get; }
    internal ​   Source { get; }
    internal    (    );
    private List`1<KeyValuePair`2<   ,    >> ();
    internal virtual ​   get_Source();
    internal virtual ​      ​ ();
    internal virtual ​      ​  ();
    internal virtual        ​ ();
    internal virtual bool    ​  ();
    private protected virtual bool    ​  ();
    private protected virtual bool    ​  ();
    private protected virtual object    ​ ();
    private protected virtual int    ​ ();
    private protected virtual int    ​ ();
    public     (string );
    public     (string );
    private protected virtual        ​ (​   );
    private protected virtual ​      ​ (    );
    private protected virtual        ​ (int );
    private protected virtual void    ​ (int ,     );
    private protected virtual void    ​ (    );
    private protected virtual void    ​ (int ,     );
    private protected virtual void    ​ (int );
    private protected virtual bool    ​  (    );
    private protected virtual void    ​ ();
    private protected virtual int    ​  (    );
    private protected virtual bool    ​  (    );
    private protected virtual void    ​  (   [] , int );
    public  ();
    private protected virtual IEnumerator`1<   >    ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (string ,     ,     );
    public     ();
    public     ();
    public string ();
    public bool ();
    public virtual int GetHashCode();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual string ToString();
    public sealed virtual string ToString(string , IFormatProvider );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected Double[][] ;
    protected    (Double[][] );
    public abstract virtual        ​ ();
    public static     (Nullable`1<   > , Double[][] );
    public abstract virtual void    ​ (Double[] , double );
    public abstract virtual void    ​ (Double[] , double , double , double );
    protected double (double , double , double , int );
}
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    internal    (int , int );
    public int ();
    public int ();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    <bool> {
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal ​   ;
    internal ​   Source { get; }
    private static    ();
    private    (​   , ​   );
    public static     (IList`1<bool> );
    internal sealed virtual ​   get_Source();
    internal sealed virtual ​      ​ ();
    private protected sealed virtual bool    ​ (​   );
    private protected sealed virtual ​      ​ (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal     (    );
    private sealed virtual override bool    ​ ( ​  );
    private sealed virtual override        ​ ();
    private sealed virtual override        ​ ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override bool    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
private static [] ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
private protected   ;
    internal ​   Source { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal       { get; }
    [NullableAttribute("2")]
public       { get; private set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal       { get; internal set; }
    private protected    ( );
    private static    ();
    internal sealed virtual ​   get_Source();
    internal sealed virtual     ​ ();
    internal abstract virtual     ​  ();
    internal abstract virtual void    ​ ( );
    internal abstract virtual int    ​ ();
    internal static     ( );
    internal abstract virtual        ​ ();
    internal virtual void    ​ (    );
    [NullableContextAttribute("2")]
internal     ();
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
private void (    );
    [NullableContextAttribute("2")]
internal     ();
    [NullableContextAttribute("2")]
internal void (    );
    public     ();
    public void (    );
    public void (double , double , double , double );
    public void (double , double );
    public      ();
    public void (    );
    public void (double , double , double , double );
    public void (double , double );
    private      ();
    private void (    );
    private      ();
    private void (    );
    private      ();
    private void (    );
    private protected      ();
    private protected     ( );
    private protected     ( );
    private     ( );
    private     (    );
    public int ();
    public void (int );
    internal void (    );
    internal void  ();
    internal void  ();
    private void (​   );
    private ​   (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private [] ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (    ,  ,     , [] );
    internal static double ( , double , double );
    public     ();
    public  ();
    public     ();
    internal void (    ,     );
    private static void (    ,     ,     ,     , [] );
    private static void (    ,     ,     ,     , [] );
    private static void (    ,     , bool ,     ,     , [] );
    private static int (double , Double& );
    private static int (double , Double& );
    private static  (    , int );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private ​    ;
    [NullableAttribute("1")]
internal ​     { get; }
    [NullableAttribute("1")]
internal ​   Source { get; }
    [NullableAttribute("1")]
internal    { get; }
    [NullableContextAttribute("1")]
internal    (​   );
    private static    ();
    [NullableContextAttribute("1")]
internal virtual ​      ​  ();
    [NullableContextAttribute("1")]
internal virtual ​   get_Source();
    [NullableContextAttribute("1")]
internal virtual     ​ ();
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public Nullable`1<DateTimeOffset> ();
    public void (Nullable`1<DateTimeOffset> );
    public Nullable`1<DateTimeOffset>  ();
    public void (Nullable`1<DateTimeOffset> );
    public void  ();
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public    (double );
    public    (double , double , double , double );
    public static     ();
    [IsReadOnlyAttribute]
public double ();
    public void (double );
    [IsReadOnlyAttribute]
public double ();
    public void (double );
    [IsReadOnlyAttribute]
public double ();
    public void (double );
    [IsReadOnlyAttribute]
public double ();
    public void (double );
    public bool ();
    public bool ();
    public virtual int GetHashCode();
    public sealed virtual bool Equals(    );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
public sealed virtual string ToString(string , IFormatProvider );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    public static     op_UnaryNegation(    );
    public static     op_Multiply(    , double );
    public static Thickness op_Implicit(    );
    public static     op_Implicit(Thickness );
}
[DefaultMemberAttribute(" ")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static XNamespace ;
    [DebuggerBrowsableAttribute("0")]
private static XNamespace ;
    [DebuggerBrowsableAttribute("0")]
private static XNamespace ;
    [DebuggerBrowsableAttribute("0")]
private static XNamespace ;
    [DebuggerBrowsableAttribute("0")]
private static XNamespace ;
    [DebuggerBrowsableAttribute("0")]
private static XNamespace ;
    [DebuggerBrowsableAttribute("0")]
private static XNamespace ;
    [DebuggerBrowsableAttribute("0")]
private static XName  ;
    [DebuggerBrowsableAttribute("0")]
private static XName  ;
    [DebuggerBrowsableAttribute("0")]
private static XName  ;
    [DebuggerBrowsableAttribute("0")]
private static XName  ;
    [DebuggerBrowsableAttribute("0")]
private static XName  ;
    [DebuggerBrowsableAttribute("0")]
private static XName  ;
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<XNamespace, string>  ;
    [DebuggerBrowsableAttribute("0")]
private ​    ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private XDocument  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private Exception  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("0")]
private   <>  ;
    [DebuggerBrowsableAttribute("0")]
internal ​     { get; }
    internal ​   Source { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
[NullableAttribute("2")]
public       { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public string   { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public XElement   { get; }
    internal    (​   );
    private static    ();
    internal virtual ​      ​  ();
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    internal virtual void    ​ ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    private protected virtual bool    ​ ();
    private protected virtual void    ​ (Stream );
    private protected virtual void    ​ ();
    [NullableContextAttribute("2")]
public virtual        ​  ();
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    internal void (Byte[] );
    public bool ();
    public int ();
    public XElement (XName );
    public void (XElement );
    public bool (XName );
    public void ();
    public  ();
    private void ();
    private XDocument ();
    private XElement  ();
    private IEnumerable`1<XElement>  ();
    internal   ();
    internal void ( );
    private void (object , XObjectChangeEventArgs );
    private static XDocument (string );
    private static string (XNamespace );
    private sealed virtual override IEnumerator`1<XElement>    ​  ();
    private sealed virtual override IEnumerator    ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private     ;
    private    (    ,     );
    private     ();
    public static void (    );
    private void (    );
    private void (    );
    private void (    ,     );
    private void (    ,     );
    private void (    , Style , string );
    private void (    , TableStyleFormat );
    private static string (StyleType );
    private static string (TableStyleFormatType );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    public static     ;
    internal    (   [] );
    private static    ();
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual string    ​ ();
    public abstract virtual string    ​ ();
    public abstract virtual     ​ ();
    public abstract virtual        ​ ();
    public abstract virtual     ​ ();
    public abstract virtual Nullable`1<>    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private static ​   ;
    private static ​   ;
    private static ​   ;
    private static ​   ;
    private static ​   ;
    private static ​   ;
    private Dictionary`2<, > ;
    private Dictionary`2<,    >  ;
    private Dictionary`2<,    >  ;
    private Dictionary`2<   ,    >  ;
    private Dictionary`2<,    >  ;
    private      ;
    private      ;
    public    (    );
    private static    ();
    public     (    ,     ,    & , & );
    public     (double , ​   );
    public     (    ,     ,     , double );
    public     (    ,     );
    public     (    );
    private     ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<string, > ;
    [DebuggerBrowsableAttribute("0")]
private BinaryReader ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private Encoding ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private StringBuilder ;
    [DebuggerBrowsableAttribute("0")]
private StringBuilder  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    public    (Stream , Encoding );
    private static    ();
    public bool ();
    private void (bool );
    public bool ();
    public void (bool );
    public     ();
    public     ();
    public bool ();
    public Encoding  ();
    public void (Encoding );
    public     ();
    public string  ();
    public void  ();
    public void  ();
    public sealed virtual void Dispose();
    private     ();
    private      ();
    private     ( );
    private Nullable`1<int>  ();
    private static bool (    );
    private static int (string , int );
    private string  ();
    private string (Func`2<int, bool> , bool );
    private void (Func`2<int, bool> );
    private int (bool , bool );
    private static bool (int , bool , bool , bool , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static bool (    , Stream ,     ,     , ArrayPool`1<byte> );
    private static     (Stream );
    private static bool (    ,     ,     , ArrayPool`1<byte> );
    private static bool (    ,     ,     , ArrayPool`1<byte> );
    private static void (    ,     ,  , ArrayPool`1<byte> );
    private static void (    ,     ,     , ArrayPool`1<byte> );
    private static void (    ,     ,  ,     , ArrayPool`1<byte> );
    private static void (    ,     , ArrayPool`1<byte> );
    private static void (    ,     ,  ,     , ArrayPool`1<byte> );
    private static void (    ,     ,     , ArrayPool`1<byte> );
    private static void (    ,     ,  ,     , ArrayPool`1<byte> );
    private static void (    ,     , ArrayPool`1<byte> );
    [NullableContextAttribute("0")]
private static void (    , ArraySegment`1<byte> , int , int , int , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  {
    private Section ;
    private     ;
    private Tuple`2<HeaderFooter, HeaderFooter> ;
    public    (    , DocumentModel , RtfLoadOptions );
    public virtual void ​  ();
    private void ();
    private void ();
    protected virtual void ​ ( );
    private void ();
    private void ();
    public static IList`1<Element> (string , RtfLoadOptions );
    private void ();
    private void ();
    private void ();
    private void (bool );
    private void  ();
    private void  ();
    private void (List`1< > , List`1< > , List`1< > );
    private void (List`1< > );
    private void (List`1< > );
    private void (List`1< > );
    private void  ();
    private void  ();
    private void  ();
    private void (ListLevelFormat , int );
    private    []  ();
    private List`1<int>  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private string  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void (double , double );
    private void  ();
    private void  ();
    private void (TextColumn );
    private void  ();
    private void  ();
    private void  ();
    private HeaderFooter  ();
    private void (HeaderFooterCollection , bool , bool );
    private void (SectionCollection , HeaderFooterCollection , HeaderFooterType , bool );
    private HeaderFooter (SectionCollection , HeaderFooterType );
    private void (HeaderFooterCollection , HeaderFooterType , HeaderFooter );
    private static void (NoteSettings ,     );
    private void (    );
    private void (    );
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private bool  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private bool  ();
    private void  ();
    private void ​();
    private void ​();
    private bool  ();
    private void ​();
    private void ​();
    private bool  ();
    private void ​();
    private void ​();
    private void ​();
    private void  ();
    private void  ();
    private bool  ();
    private void  ();
    private bool  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private bool  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private bool  ();
    private void  ();
    private bool  ();
    private void  ();
    private bool  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [NullableAttribute("2")]
public       { get; public set; }
    internal    (    ,     ,     );
    public virtual     ​ ();
    public virtual        ​ ();
    internal virtual     ​  ();
    internal virtual void    ​ (    );
    internal virtual void    ​ ( );
    internal virtual bool    ​ ();
    internal virtual void    ​ (bool );
    internal virtual        ​  ();
    internal virtual void    ​ (    );
    internal virtual double    ​  ();
    internal virtual void    ​ (double );
    internal virtual     ​ ();
    internal virtual void    ​ ( );
    internal virtual void    ​ ( );
    internal virtual bool    ​ ();
    internal virtual void    ​ (bool );
    internal virtual        ​  ();
    internal virtual void    ​ (    );
    internal virtual double    ​  ();
    internal virtual void    ​ (double );
    internal virtual double    ​  ();
    internal virtual void    ​ (double );
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    internal virtual double    ​  ();
    internal virtual void    ​ (double );
    internal virtual        ​  ();
    internal virtual void    ​ (    );
    internal virtual bool    ​ ();
    internal virtual void    ​ (bool );
    internal virtual void    ​ ( );
    internal virtual bool    ​ ();
    internal virtual void    ​ (bool );
    internal virtual bool    ​ ();
    internal virtual void    ​ (bool );
    internal virtual void    ​ (    , double );
    internal virtual double    ​  ();
    internal virtual void    ​ (double );
    internal virtual double    ​  ();
    internal virtual void    ​ (double );
    internal virtual double    ​  ();
    internal virtual void    ​ (double );
    internal virtual double    ​  ();
    internal virtual void    ​  (double );
    internal virtual double    ​  ();
    internal virtual void    ​  (double );
    internal virtual bool    ​ ();
    internal virtual void    ​ (bool );
    internal virtual bool    ​  ();
    internal virtual void    ​  (bool );
    internal virtual     ​ ();
    internal virtual void    ​ ( );
    internal virtual void    ​ ( );
    internal virtual        ​  ();
    internal virtual void    ​ (    );
    internal virtual ​      ​  ();
    internal virtual void    ​ (​   );
    internal virtual ​      ​  ();
    internal virtual void    ​ (​   );
    internal virtual bool    ​  ();
    internal virtual void    ​  (bool );
    internal virtual ​      ​  ();
    internal virtual void    ​ (​   );
    internal virtual void    ​ ( );
    internal virtual bool    ​  ();
    internal virtual void    ​  (bool );
    internal virtual bool    ​  ();
    internal virtual void    ​  (bool );
    internal virtual int    ​  ();
    internal virtual void    ​ (int );
    internal virtual ​      ​  ();
    internal virtual void    ​ (​   );
    internal virtual ​      ​  ();
    internal virtual void    ​ (​   );
    internal virtual ​      ​  ();
    internal virtual void    ​ (​   );
    internal virtual ​      ​  ();
    internal virtual void    ​ (​   );
    internal virtual Nullable`1<   >    ​  ();
    internal virtual void    ​ (Nullable`1<   > );
    internal virtual double    ​  ();
    internal virtual void    ​  (double );
    internal virtual double    ​  ();
    internal virtual void    ​  (double );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    public     ();
    internal void (    );
    public     (bool );
    private static void (    );
    private static void (    ,     );
    private static void (    ,     , bool , List`1& );
    internal     (bool );
    internal     (bool );
    internal void ();
    private protected virtual        ​ (    ,     );
    internal     (    ,     );
    internal bool (Boolean& , Boolean& );
    internal void (Action`2<   , TContext> , TContext );
    private sealed virtual override        ​ ();
    private sealed virtual override ​      ​  ();
    private sealed virtual override void    ​ (​   );
    private sealed virtual override bool    ​ ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override        ​  ();
    private sealed virtual override     ​  ();
    private sealed virtual override        ​  ();
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private string ;
    private Nullable`1<int> ;
    public    (string , Nullable`1<int> );
    public virtual     ​ ();
    public sealed virtual string    ​ ();
    public sealed virtual Nullable`1<int>    ​ ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    );
    public bool ();
    public void (bool );
    public     ();
    public void (    );
    public double ();
    public void (double );
    public  ();
    public void ( );
    internal static void (    ,     );
    internal static void (    ,     );
}
internal class     :     {
    public virtual     ​ ();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
protected     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("0")]
private   <   >  ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   >  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private ​    ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    public    (    ,     , Nullable`1<> );
    protected bool ();
    private protected virtual        ​ ();
    private     ();
    private ​   ();
    private     (    );
    internal     (    );
    private     (& );
    protected     (    );
    protected virtual  ​     ​ (   );
    protected virtual        ​ ( ​  );
    public virtual int    ​ ();
    public virtual int    ​ ();
    public virtual void    ​ (int );
    public virtual void    ​ ();
    public virtual void    ​ (    );
    public virtual void    ​ (    ,     ,     );
    public virtual void    ​ (    ,     ,     );
    public virtual void    ​ (    ,     ,     ,     );
    public virtual void    ​ (    ,     ,     ,     );
    public virtual void    ​ (    ,    [] );
    public virtual void    ​ (    ,     ,    [] ,  );
    public virtual void    ​ (    ,     ,  );
    public virtual void    ​ (    ,     );
    public virtual void    ​ (   ,     );
    public virtual void    ​ (    ,     ,     , double , double , double , double );
    private void (List`1<   > ,     ,     ,  );
    private bool (   & , Boolean& , Boolean& ,    & , Boolean& , Boolean& );
    private void (   & ,     , bool ,     , & , bool , bool , bool  );
    public virtual void    ​ ();
    public virtual void    ​ ();
    public virtual void    ​ ( );
    public virtual void    ​ (    );
    public virtual void    ​ ( );
    public virtual void    ​ (string , bool , int , string );
    public virtual void    ​ (    );
    public virtual bool    ​ (object );
    public virtual        ​ (    );
    public virtual object    ​  ();
    public virtual bool    ​  ();
    public virtual bool    ​  ();
    public virtual void    ​ (int , string );
    public virtual       ​ (object );
    public virtual        ​ (object ,     ,   & );
    public virtual void    ​ (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private   <string, string> ;
    protected    (    );
    public     ();
    private void (    );
    public   <string, string> ();
    protected void (  <string, string> );
    protected virtual override void Finalize();
    public sealed virtual void Dispose();
    private void (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static Int32[] ;
    [DebuggerBrowsableAttribute("0")]
private static Int32[] ;
    [DebuggerBrowsableAttribute("0")]
private static Int32[]  ;
    [DebuggerBrowsableAttribute("0")]
private   <double>  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<   >   { get; public set; }
    private protected    ( );
    private protected    ( , IList`1<   > ,     , bool );
    private static    ();
    public int ();
    private protected void (int );
    public int ();
    private protected void (int );
    private protected int ();
    private protected void (int );
    public     ();
    public void (    );
    public IList`1<   > ();
    public void (IList`1<   > );
    internal bool  ();
    internal int ();
    private protected int ();
    private   <double>  ();
    private protected   <double> (int );
    [NullableContextAttribute("0")]
private protected   <double> (int , int );
    internal double (int );
    private protected UInt32 (int ,    & , UInt32 , int );
    private void (int , double );
    internal  (int );
    internal      (int );
    internal void (int ,     );
    internal bool  (int );
    internal void (int ,     );
    internal      (int );
    internal void (int ,     );
    internal double (int );
    internal void (int , double );
    private protected void  ();
    private protected void (bool , bool );
    private protected abstract virtual   <double>    ​ (Stream );
    private protected abstract virtual void    ​ (Stream );
    private protected abstract virtual IEnumerator    ​  ();
    private protected abstract virtual IEnumerator`1<  <double>>    ​  ();
    private protected abstract virtual IEnumerator`1<  <double>>    ​  ();
    private protected sealed virtual bool    ​ ();
    private protected sealed virtual void    ​ (Stream );
    private protected sealed virtual void    ​ ();
    private protected static     (    ,     , IList`1<   > ,     );
    private protected static    [] (    , UInt32 , UInt32 );
    private protected static    [] (    , UInt32 , UInt32 );
    private protected static void (int , IEnumerator`1<  <double>> , IEnumerator`1<  <double>> , bool , Int32& , Int32& ,    & );
    private static void (List`1<  <double>> , int , Double& , Double& , Double& );
    private static int (Int32[] , double , double , bool );
    private protected static UInt32  (int );
    private protected static int  (int );
    private sealed virtual override IEnumerator    ​  ();
}
internal static class     : object {
    [NullableAttribute("1")]
private static IDictionary`2<PaperType, > ;
    private static    ();
    public static PaperType (double , double , Double& );
    public static void (PaperType , Orientation , Double& , Double& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private     ;
    internal    (    ,     );
    public virtual     ​ ();
    public virtual        ​ ();
    public     ();
    public     ();
    public     (    );
    internal virtual     ​  ();
    internal virtual void    ​ (    );
    internal virtual void    ​ ( );
    internal virtual bool    ​ ();
    internal virtual void    ​ (bool );
    internal virtual        ​  ();
    internal virtual void    ​ (    );
    internal virtual double    ​  ();
    internal virtual void    ​ (double );
    internal virtual     ​ ();
    internal virtual void    ​ ( );
    internal virtual void    ​ ( );
    internal virtual bool    ​ ();
    internal virtual void    ​ (bool );
    internal virtual        ​  ();
    internal virtual void    ​ (    );
    internal virtual double    ​  ();
    internal virtual void    ​ (double );
    internal virtual double    ​  ();
    internal virtual void    ​ (double );
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    internal virtual double    ​  ();
    internal virtual void    ​ (double );
    internal virtual        ​  ();
    internal virtual void    ​ (    );
    internal virtual bool    ​ ();
    internal virtual void    ​ (bool );
    internal virtual void    ​ ( );
    internal virtual bool    ​ ();
    internal virtual void    ​ (bool );
    internal virtual bool    ​ ();
    internal virtual void    ​ (bool );
    internal virtual bool    ​ ();
    internal virtual void    ​ (bool );
    internal virtual void    ​ (    , double );
    internal virtual double    ​  ();
    internal virtual void    ​ (double );
    internal virtual double    ​  ();
    internal virtual void    ​ (double );
    internal virtual double    ​  ();
    internal virtual void    ​ (double );
    internal virtual double    ​  ();
    internal virtual void    ​  (double );
    internal virtual double    ​  ();
    internal virtual void    ​  (double );
    internal virtual bool    ​ ();
    internal virtual void    ​ (bool );
    internal virtual bool    ​  ();
    internal virtual void    ​  (bool );
    internal virtual     ​ ();
    internal virtual void    ​ ( );
    internal virtual void    ​ ( );
    internal virtual        ​  ();
    internal virtual void    ​ (    );
    internal virtual ​      ​  ();
    internal virtual void    ​ (​   );
    internal virtual ​      ​  ();
    internal virtual void    ​ (​   );
    internal virtual bool    ​  ();
    internal virtual void    ​  (bool );
    internal virtual ​      ​  ();
    internal virtual void    ​ (​   );
    internal virtual void    ​ ( );
    internal virtual bool    ​  ();
    internal virtual void    ​  (bool );
    internal virtual bool    ​  ();
    internal virtual void    ​  (bool );
    internal virtual int    ​  ();
    internal virtual void    ​ (int );
    internal virtual ​      ​  ();
    internal virtual void    ​ (​   );
    internal virtual ​      ​  ();
    internal virtual void    ​ (​   );
    internal virtual ​      ​  ();
    internal virtual void    ​ (​   );
    internal virtual ​      ​  ();
    internal virtual void    ​ (​   );
    internal virtual Nullable`1<   >    ​  ();
    internal virtual void    ​ (Nullable`1<   > );
    internal virtual double    ​  ();
    internal virtual void    ​  (double );
    internal virtual double    ​  ();
    internal virtual void    ​  (double );
    [IteratorStateMachineAttribute("   /")]
internal IEnumerable`1<ValueTuple`2<TVisualElement,    >> (    , bool , [] );
    internal void (    , bool , [] );
    internal IEnumerable`1<   > GetTextBounds(    transform);
    internal     DrawQuads(IEnumerable`1<   > quads);
    internal     (IEnumerable`1<   > ,  );
    internal     (IList`1<   > ,  );
    internal     (IList`1<   > ,  );
    internal     (    ,  );
    internal     (    ,  );
    internal     (    ,     );
    public void (    ,     );
    public void (    ,     );
    internal void (    ,     , int );
    internal void (    ,     ,     );
    public void (    ,     );
    public void (    ,     );
    public void (    ,     ,     );
    public void (    ,     );
    internal void (    ,     ,     );
    public void (    );
    public void (    ,     );
    [NullableContextAttribute("2")]
internal void (    ,     ,  ,     ,     );
    internal void (    ,     ,  );
    private void (    ,     ,  ,     );
    public virtual string ToString();
    private void (Action`2<   , T> , T );
    private protected sealed virtual        ​ (    ,     );
    internal     (    ,     );
    internal     ();
    internal     ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    public string ();
    public void (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
internal static IFormatProvider ;
    [DebuggerBrowsableAttribute("0")]
[ThreadStaticAttribute]
private static Double[] ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public    (    ,     );
    public    (double , double ,     );
    public    (    , double );
    public    (double , double , double );
    private static    ();
    private static Double[] ();
    public     ();
    internal void (    );
    public bool ();
    public     ();
    internal void (    );
    public double ();
    internal void (double );
    internal void (Action`2<Double[], Double[]> , Double[] );
    internal     (    );
    [NullableContextAttribute("2")]
public sealed virtual string ToString(string , IFormatProvider );
    public virtual string ToString();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static    (Table ,  ​  );
    private static    (   , DocumentModel ,  ​  );
    private static    (Table , Func`3<  , BlockCollection,  ​> ,  ​  );
    private static bool (Table );
    private static void (int , Int32& , int , TableWidth ,    );
    private static    (   , int , int );
    private static int (   , int );
    private static void (   , int , int );
    private static bool (   );
    private static void (   );
    private static void (   );
    private static void (   );
    private static bool (​  );
    private static bool (​  );
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1<T> ( ​ );
    private static    (TableFormat );
    private static    (    );
    private static ​  (TableCellFormat , Revision );
    private static Color (Color , Revision );
    private static    (TableRowFormat , bool );
    private static    (TableRowHeight );
    private static  (TableRowHeightRule );
    private static    (TableWidth );
    private static  (TableWidthUnit );
    private static  (TableCellTextDirection );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    private static    ();
    [ExtensionAttribute]
public static bool (    );
    [ExtensionAttribute]
public static void (    );
    [ExtensionAttribute]
public static void (    ,     );
    [ExtensionAttribute]
private static     (    );
    [ExtensionAttribute]
public static     (    );
    [ExtensionAttribute]
internal static void (    ,     );
    [ExtensionAttribute]
private static void (    ,     ,     );
    [ExtensionAttribute]
internal static void (    ,     ,  );
    [ExtensionAttribute]
private static void (    ,     ,     ,  ,     );
    [ExtensionAttribute]
internal static void (    ,     , Nullable`1<> );
    [ExtensionAttribute]
public static void (    ,     ,     , Nullable`1<> , Nullable`1<> );
    [ExtensionAttribute]
internal static      (    );
    [ExtensionAttribute]
internal static     (    ,  );
    [ExtensionAttribute]
public static     (    , Nullable`1<> );
    [ExtensionAttribute]
public static void (    ,     ,    ,     );
    [ExtensionAttribute]
public static void (    ,     );
    [ExtensionAttribute]
internal static void (    , ​   );
    [ExtensionAttribute]
private static    <​  > (​   );
    [ExtensionAttribute]
internal static void (    );
    [ExtensionAttribute]
private static void (    );
    [ExtensionAttribute]
private static void (    );
    [ExtensionAttribute]
private static IEnumerator`1<​  >  (    );
    [ExtensionAttribute]
private static int  (    );
    [ExtensionAttribute]
private static MemoryStream  (    );
    [ExtensionAttribute]
internal static string  (    );
    [ExtensionAttribute]
internal static void (    , string , int );
    [ExtensionAttribute]
internal static void (    , Stream , ​   , int );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
public byte  { get; public set; }
    internal    (Byte[] , int );
    public byte (int );
    public void (int , byte );
    private int (int );
    private void (int , int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public void ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static [] ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    internal ​   Source { get; }
    [NullableAttribute("2")]
public string   { get; public set; }
    [NullableAttribute("2")]
public string   { get; public set; }
    [NullableAttribute("2")]
public string   { get; public set; }
    [NullableAttribute("2")]
public string   { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<   >   { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal       { get; }
    private static    ();
    private    ( );
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    internal static     ();
    internal virtual void    ​ ();
    internal sealed virtual     ​  ();
    internal sealed virtual void    ​ ( );
    public  ();
    internal void ( );
    public     ();
    internal void (    );
    public int ();
    public void (int );
    public Nullable`1<DateTimeOffset> ();
    public void (Nullable`1<DateTimeOffset> );
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    [NullableContextAttribute("2")]
public string  ();
    [NullableContextAttribute("2")]
public void (string );
    [NullableContextAttribute("2")]
public string  ();
    [NullableContextAttribute("2")]
public void (string );
    [NullableContextAttribute("2")]
public string  ();
    [NullableContextAttribute("2")]
public void (string );
    internal      ();
    private void (    );
    internal ​    ();
    internal void (​   );
    private bool  ();
    private ​    ();
    private void (​   );
    internal Int64[]  ();
    internal ​    ();
    internal void (​   );
    public IList`1<   >  ();
    internal bool  ();
    [NullableContextAttribute("2")]
internal      ();
    public int ();
    public      ();
    [NullableContextAttribute("2")]
public Byte[] ( );
    internal void (string , string );
    internal void (DateTimeOffset ,     ,     );
    internal ​   (Stream , ​   );
    internal bool (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private static Int32[] ;
    [DebuggerBrowsableAttribute("0")]
public  ;
    [DebuggerBrowsableAttribute("0")]
public int ;
    public    ( , int );
    public    (int ,  );
    private static    ();
    public int ();
    public int ();
    public bool ();
    public bool ();
    public virtual bool Equals(object );
    public sealed virtual bool Equals(    );
    public virtual int GetHashCode();
    public virtual string ToString();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private static ​   ;
    [NullableAttribute("1")]
private protected object   { get; private protected set; }
    internal string   { get; internal set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private protected IEnumerable`1<​  >   { get; }
    private static    ();
    [NullableContextAttribute("1")]
internal    ( );
    [NullableContextAttribute("1")]
internal static     (    );
    [NullableContextAttribute("1")]
private protected virtual void    ​ (    );
    public virtual     ​  ();
    private protected virtual object    ​  ();
    private protected virtual void    ​ (object );
    public string ();
    public void (string );
    [NullableContextAttribute("1")]
private protected virtual object    ​  ();
    [NullableContextAttribute("1")]
private protected virtual void    ​ (object );
    internal string ();
    internal void (string );
    public bool ();
    public void (bool );
    internal virtual string    ​ ();
    internal virtual void    ​ (string );
    private static string (​   );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public Nullable`1<int>  ();
    public void (Nullable`1<int> );
    public Nullable`1<int>  ();
    public void (Nullable`1<int> );
    internal virtual Nullable`1<int>    ​ ();
    internal virtual void    ​ (Nullable`1<int> );
    [IteratorStateMachineAttribute("   /")]
[NullableContextAttribute("1")]
private protected virtual IEnumerable`1<​  >    ​  ();
    [NullableContextAttribute("1")]
internal virtual        ​ (    );
    [NullableContextAttribute("1")]
private void (    );
    [NullableContextAttribute("1")]
internal virtual void    ​ (    );
    [DebuggerHiddenAttribute]
[NullableContextAttribute("1")]
private IEnumerable`1<​  >  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    public abstract virtual IEnumerable`1<string>    ​ ();
    public abstract virtual        ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    private static    ();
    private    ( );
    public virtual     ​ ();
    public IList`1<   > ();
    public void (IList`1<   > );
    public IList`1<double> ();
    public void (IList`1<double> );
    public     ();
    public void (    );
    internal virtual int    ​ ();
    internal virtual void    ​  ();
    private protected virtual Action`2<Double[], Double[]>    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private static Uri[] modreq(System.Runtime.CompilerServices.IsVolatile) ;
    [DebuggerBrowsableAttribute("0")]
private static     modreq(System.Runtime.CompilerServices.IsVolatile) ;
    private   <   ,    []> ;
    private   <   ,    > ;
    private   <   ,    > ;
    private   <   ,    > ;
    private   <   ,    > ;
    private   <Uri,    >  ;
    private   <Uri,    >  ;
    private ​    ;
    private ​    ;
    [DebuggerBrowsableAttribute("0")]
private object  ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    private static EventHandler  ;
    private static Boolean modreq(System.Runtime.CompilerServices.IsVolatile)  ;
    private static    ();
    public static Uri[] ();
    public static void (Uri[] );
    internal static bool ();
    internal static void (bool );
    private     ();
    private     ();
    private      ();
    internal static      ();
    public static      ();
    private void ();
    private void ();
    public static void ();
    internal static    [] (    , int );
    internal static     (    );
    internal static     (    );
    internal static     (    );
    internal static     (    );
    public static TFontFamily[] (Uri , string , bool , Func`3<   ,    , TFontFamily> );
    private     (Uri , ​   );
    [IteratorStateMachineAttribute("   /")]
internal static IEnumerable`1<   > (IEnumerable`1<​  > );
    private static     (Uri , ​   );
    internal static ​   (Assembly , string );
    private ​   (Uri );
    private ​   (Uri );
    private static     (    , object );
    private static     (    , object );
    internal static     (    ,     );
    private static     (    , object );
    private static     (Uri , ​   );
    private static     (Uri , ​   );
    internal static    []  ();
    internal static     (string );
    internal static     (string ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
internal ​   ;
    internal    (​   );
    public    (PdfPostScriptCalculatorOperator );
    public    (int );
    public    (double );
    public    (IList`1<   > );
    public    (   [] );
    private    (object );
    private    (IEnumerable );
    public PdfPostScriptCalculatorOperator ();
    public bool ();
    public int ();
    public double ();
    public IList`1<   > ();
    public virtual string ToString();
    public sealed virtual bool Equals(    );
    private static bool (​   , ​   );
    private static bool (​   , ​   );
    private static void (​   ,    & );
    private static void (​   ,    & );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    private object ();
    private Object[] ();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    public static     op_Implicit(PdfPostScriptCalculatorOperator );
    public static     op_Implicit(int );
    public static     op_Implicit(double );
    public static     op_Implicit(Array );
    public static PdfPostScriptCalculatorOperator op_Explicit(    );
    public static int op_Explicit(    );
    public static double op_Explicit(    );
    public static Array op_Explicit(    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static Uri ;
    private static    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [NullableAttribute("2")]
public IList`1<double>  { get; public set; }
    [NullableAttribute("2")]
public IList`1<double>  { get; public set; }
    private static    ();
    private    ( );
    public virtual     ​ ();
    [NullableContextAttribute("2")]
public IList`1<double> ();
    [NullableContextAttribute("2")]
public void (IList`1<double> );
    [NullableContextAttribute("2")]
public IList`1<double> ();
    [NullableContextAttribute("2")]
public void (IList`1<double> );
    public double ();
    public void (double );
    internal virtual int    ​ ();
    internal virtual void    ​  ();
    private protected virtual Action`2<Double[], Double[]>    ​ ();
}
[DefaultMemberAttribute("Item")]
[DebuggerTypeProxyAttribute("GemBox.Collections.DictionaryDebugView`2<System.Int32,   >")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
private    [][] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public bool IsReadOnly { get; }
    public int Count { get; }
    public ICollection`1<int> Keys { get; }
    public ICollection`1<   > Values { get; }
    public     Item { get; public set; }
    private static    ();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsReadOnly();
    internal void (bool );
    public sealed virtual int get_Count();
    public sealed virtual ICollection`1<int> get_Keys();
    public sealed virtual ICollection`1<   > get_Values();
    public sealed virtual     get_Item(int );
    public sealed virtual void set_Item(int ,     );
    public sealed virtual bool TryGetValue(int ,    & );
    public sealed virtual bool ContainsKey(int );
    public sealed virtual bool Contains(KeyValuePair`2<int,    > );
    public sealed virtual void Add(int ,     );
    public sealed virtual void Add(KeyValuePair`2<int,    > );
    public sealed virtual bool Remove(int );
    public sealed virtual bool Remove(KeyValuePair`2<int,    > );
    public sealed virtual void Clear();
    public sealed virtual void CopyTo(KeyValuePair`2[] , int );
    [IteratorStateMachineAttribute("   /")]
public sealed virtual IEnumerator`1<KeyValuePair`2<int,    >> GetEnumerator();
    internal     ();
    private     (int );
    private void (int ,     , bool );
    private bool (int ,     );
    private Int32[] ();
    private    [] ();
    private sealed virtual override object    ​ ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override ICollection    ​ ();
    private sealed virtual override ICollection    ​  ();
    private sealed virtual override object    ​ (object );
    private sealed virtual override void    ​ (object , object );
    private sealed virtual override bool    ​ (object );
    private sealed virtual override void    ​ (object , object );
    private sealed virtual override void    ​ (object );
    private sealed virtual override void    ​ (Array , int );
    private sealed virtual override IDictionaryEnumerator    ​  ();
    private sealed virtual override IEnumerator    ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Double[] ;
    private Double[] ;
    private int ;
    private     ;
    private     ;
    public     Data { get; }
    public    (    , Double[] , Double[] , Nullable`1<int> );
    [CompilerGeneratedAttribute]
public sealed virtual     get_Data();
    public sealed virtual void LoadInputs();
    public sealed virtual void SaveToOutputs();
    public sealed virtual void Unknown();
    public sealed virtual void Number(double );
    public sealed virtual void Expression(Action`1[] );
    public sealed virtual void Add();
    public sealed virtual void Sub();
    public sealed virtual void Mul();
    public sealed virtual void Div();
    public sealed virtual void Idiv();
    public sealed virtual void Mod();
    public sealed virtual void Neg();
    public sealed virtual void Abs();
    public sealed virtual void Ceiling();
    public sealed virtual void Floor();
    public sealed virtual void Round();
    public sealed virtual void Truncate();
    public sealed virtual void Sqrt();
    public sealed virtual void Sin();
    public sealed virtual void Cos();
    public sealed virtual void Atan();
    public sealed virtual void Exp();
    public sealed virtual void Ln();
    public sealed virtual void Log();
    public sealed virtual void Cvi();
    public sealed virtual void Cvr();
    public sealed virtual void Eq();
    public sealed virtual void Ne();
    public sealed virtual void Gt();
    public sealed virtual void Ge();
    public sealed virtual void Lt();
    public sealed virtual void Le();
    public sealed virtual void And();
    public sealed virtual void Or();
    public sealed virtual void Xor();
    public sealed virtual void Not();
    public sealed virtual void Bitshift();
    public sealed virtual void True();
    public sealed virtual void False();
    public sealed virtual void If(Action`1<IPdfPostScriptContext> );
    public sealed virtual void Ifelse(Action`1<IPdfPostScriptContext> , Action`1<IPdfPostScriptContext> );
    public sealed virtual void Pop();
    public sealed virtual void Exch();
    public sealed virtual void Dup();
    public sealed virtual void Copy();
    public sealed virtual void Index();
    public sealed virtual void Roll();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private int ;
    public     ();
    public void (    );
    public int ();
    private void (int );
    public int ();
    public int ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    );
    private  ();
    public     ();
    public     ();
    public     ();
    public     ();
    public     ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    internal    (Byte[] , int );
    public sealed virtual int    ​ ();
    public sealed virtual void    ​ (int );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private IList`1<   > ;
    private IList`1<   > ;
    private IList`1<   > ;
    public    (IEnumerable`1<   > , IEnumerable`1<   > , IEnumerable`1<   > );
    public IList`1<   > ();
    public IList`1<   > ();
    public IList`1<   > ();
    public virtual string ToString();
    private static ReadOnlyCollection`1<T> (IEnumerable`1<T> , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private     ;
    private int ;
    private int ;
    public     ();
    public void (    );
    public int ();
    public void (int );
    public int ();
    public void (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    protected     ;
    protected Stream ;
    internal    (    , Stream );
    public abstract virtual void    ​ ();
    internal static     (    , Stream ,  );
    internal static bool (    ,    & );
    private static bool (    );
    private static bool (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private static     ;
    public    (double , double );
    private static    ();
    public static PointF op_Implicit(    );
    public static     op_Implicit(PointF );
    [IsReadOnlyAttribute]
public double ();
    public void (double );
    [IsReadOnlyAttribute]
public double ();
    public void (double );
    public void (double , double );
    public bool (    , double );
    public static bool (double , double , double );
    public virtual int GetHashCode();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual string ToString();
    public sealed virtual string ToString(string , IFormatProvider );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    public static     op_Addition(    ,     );
    public static     op_Subtraction(    ,     );
    public static     op_Subtraction(    ,     );
    public static     op_Multiply(    , double );
    public static     op_Division(    , double );
    public static     op_Explicit(    );
    internal double ();
    internal     (    );
    public static int (    ,     ,     );
    public static bool (IList`1<   > , IList`1<   > );
    public static IList`1<   > (IList`1<   > , IList`1<   > );
    public static double (IList`1<   > );
    private static    [] (IList`1<   > );
    private static void (IList`1<   > , IList`1<   > );
    private static void (IList`1<   > ,     );
    private static bool (IList`1<   > ,     ,     );
    private static    [] (IList`1<   > ,     ,     );
    public static bool (IList`1<   > ,     , bool );
    public static Nullable`1<   > (    ,     ,     ,     );
    public static     (IEnumerable`1<   > );
    public static SKPoint op_Implicit(    );
    public static     op_Implicit(SKPoint );
    public static Point op_Implicit(    );
    public static     op_Implicit(Point );
}
internal class     :     {
    [NullableContextAttribute("1")]
private    (   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    {
    [DebuggerBrowsableAttribute("0")]
private MemoryStream ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public long Position { get; public set; }
    public long Length { get; }
    public    (Stream );
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual long get_Position();
    public virtual void set_Position(long );
    public virtual long get_Length();
    public virtual long Seek(long , SeekOrigin );
    public virtual void SetLength(long );
    public virtual int Read(Byte[] , int , int );
    public virtual int ReadByte();
    public virtual void Write(Byte[] , int , int );
    public virtual void WriteByte(byte );
    public virtual void Flush();
    protected virtual void Dispose(bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private static Char[] ;
    private static Char[] ;
    private static Char[] ;
    private static Char[] ;
    private Guid ;
    private IList`1<> ;
    private Nullable`1<Guid> ;
    [NullableAttribute("2")]
private string  ;
    [NullableAttribute("2")]
private string  ;
    private string  ;
    private int  ;
    [NullableAttribute("2")]
private string  ;
    private int  ;
    private string  ;
    private string  ;
    private string  ;
    private IList`1<>  ;
    private IList`1< >  ;
    [NullableAttribute("2")]
public string   { get; public set; }
    [NullableAttribute("2")]
public string   { get; public set; }
    [NullableAttribute("2")]
public string   { get; public set; }
    private static    ();
    public Guid ();
    public void (Guid );
    public IList`1<> ();
    public void (IList`1<> );
    public Nullable`1<Guid> ();
    public void (Nullable`1<Guid> );
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    public string ();
    public void (string );
    public int  ();
    public void (int );
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    public int  ();
    public void (int );
    public string  ();
    public void (string );
    public string  ();
    public void (string );
    public string  ();
    public void (string );
    public IList`1<>  ();
    public void (IList`1<> );
    public IList`1< >  ();
    public void (IList`1< > );
    private static void (string , String& , String& );
    private static int  (string );
    private static void (    , String[] , Int32& );
    private static void (    , String[] , Int32& );
    private static void (    , String[] , Int32& );
    [NullableContextAttribute("2")]
private static string (Nullable`1<Guid> );
    private static string (int );
    private static bool (string , Int32& );
    public static      ();
    public      ();
    public static      (string );
    public void (StringWriter );
    internal static void (& );
}
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
public int ;
    [DebuggerBrowsableAttribute("0")]
public int ;
    public    (int , int , bool );
    private static    ();
    public int ();
    public int (int );
    public int (int );
    public bool (int );
    public sealed virtual bool Equals(    );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    public static    <> ;
    private static    ();
    private static    <> ();
    private static    <> ();
    private static    <> ();
    public abstract virtual     ​ (    , bool );
    public abstract virtual void    ​ (    ,  );
    private static object (Type );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private object ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private object ;
    [DebuggerBrowsableAttribute("0")]
private X509KeyStorageFlags ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [NullableAttribute("2")]
internal       { get; internal set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal string   { get; }
    private    (object , object );
    internal    (Byte[] , string );
    internal    (X509Certificate2 );
    [NullableContextAttribute("2")]
internal     ();
    [NullableContextAttribute("2")]
internal void (    );
    private protected virtual bool   ​ ();
    [NullableContextAttribute("2")]
internal virtual string    ​ ();
    private sealed virtual override object    ​ ();
    private sealed virtual override object    ​  ();
    private sealed virtual override X509KeyStorageFlags    ​  ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override Byte[]    ​ (Byte[] , string , object );
    private sealed virtual override bool    ​ (Byte[] , Byte[] , string , object );
}
[AttributeUsageAttribute("2")]
[EmbeddedAttribute]
internal class     : Attribute {
    [DebuggerBrowsableAttribute("0")]
public int ;
    public    (int );
}
[AttributeUsageAttribute("256")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : Attribute {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    public    (string , string );
    public string ();
    public string ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    <ulong> {
    public virtual ulong    ​ (string );
    public virtual string    ​ (ulong );
}
internal class     :     {
    private  ;
    [NullableContextAttribute("1")]
public    (    );
    public    ( );
    public  ();
    public void ( );
    public void ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     : Dictionary`2<string, string> {
    public bool (string , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <ushort> ;
    private string ;
    private string ;
    private static    ();
    public string ();
    public void (string );
    public string ();
    public void (string );
    public static     ();
    public virtual        ​ ();
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private Stream ;
    [DebuggerBrowsableAttribute("0")]
private byte ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public    (Stream , bool );
    public sealed virtual Stream    ​ ();
    public sealed virtual long    ​ ();
    public sealed virtual void    ​ (long );
    public sealed virtual int    ​ ();
    public sealed virtual int    ​ ();
    public sealed virtual byte    ​ ();
    public sealed virtual void    ​ (byte );
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private  ;
    private     ;
    private     ;
    private     ;
    private   ;
    [NullableAttribute("2")]
private     ;
    [NullableAttribute("2")]
public       { get; public set; }
    [NullableAttribute("2")]
public string   { get; public set; }
    internal    (    ,     ,     ,  ,   );
    internal    (string , string ,  );
    public     ();
    public     ();
    public     ();
    public   ();
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    public  ();
    public void ( );
    public string ();
    public void (string );
    [NullableContextAttribute("2")]
public string  ();
    [NullableContextAttribute("2")]
public void (string );
    public   ();
    public void ( );
    [NullableContextAttribute("2")]
public     (bool ,     ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    {
    [DebuggerBrowsableAttribute("0")]
private UInt32 ;
    [DebuggerBrowsableAttribute("0")]
private UInt32 ;
    public    (Stream , bool );
    public void  ​   ​       ();
    public virtual int Read(Byte[] , int , int );
    public virtual int ReadByte();
    public virtual void Write(Byte[] , int , int );
    public virtual void WriteByte(byte );
    public void  ​         ​   ​     (Stream );
    public bool      ​       ​    (Stream );
    private static void (UInt32& , UInt32& , Byte[] , int , int );
    private static void (UInt32& , UInt32& , byte );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <UInt32> ;
    private string ;
    private static    ();
    public string ();
    public void (string );
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
    public static     ();
    public virtual        ​ ();
}
internal class     : Exception {
    [NullableContextAttribute("1")]
internal    (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : NameTable {
    [DebuggerBrowsableAttribute("0")]
private static XmlNameTable ;
    [DebuggerBrowsableAttribute("0")]
private XmlNameTable ;
    protected    (XmlNameTable );
    private static    ();
    public static     (    , IEnumerable`1<IEnumerable`1<string>> );
    public static     (    , IEnumerable`1[] );
    public static     (IEnumerable`1<IEnumerable`1<string>> );
    public static     (IEnumerable`1[] );
    public static     (    , IEnumerable`1<IEnumerable`1<string>> );
    public static     (    , IEnumerable`1[] );
    public static     (IEnumerable`1<IEnumerable`1<string>> );
    public static     (IEnumerable`1[] );
    protected virtual void    ​ (IEnumerable`1<IEnumerable`1<string>> );
    public virtual string Add(Char[] , int , int );
    public virtual string Add(string );
    public virtual string Get(Char[] , int , int );
    public virtual string Get(string );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private Nullable`1[] ;
    [DebuggerBrowsableAttribute("0")]
public Nullable`1<SingleBorder>  { get; }
    public    (int );
    public    (int , Nullable`1<SingleBorder> );
    private    (    , IEnumerable`1<int> , Nullable`1<SingleBorder> );
    private    (    , int , Nullable`1<SingleBorder> );
    public     (IEnumerable`1<int> , Nullable`1<SingleBorder> );
    public     (int , Nullable`1<SingleBorder> );
    public     ();
    public Nullable`1<SingleBorder> (int );
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    public bool ();
    public int ();
    internal     (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    internal    (    );
    protected virtual ​      ​ ();
    protected virtual string    ​ (    );
    private protected virtual        ​ (​   );
    private protected virtual ​      ​ (    );
    protected virtual string    ​ (​   , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : Format {
    [DebuggerBrowsableAttribute("0")]
private   <   > ;
    [DebuggerBrowsableAttribute("0")]
private MultipleBorders ;
    protected DocumentModel DocumentCore { get; }
    internal    (  <   > );
    internal     ();
    protected virtual DocumentModel get_DocumentCore();
    internal void (  <   > ,    & );
    public MultipleBorders ();
    public void (Padding );
    private void (Action`1<   > );
    public virtual void ClearFormatting();
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    private T (Func`2<   , T> );
    private Nullable`1<SingleBorder> (int );
    private void (Func`2<   ,    > );
}
[DefaultMemberAttribute(" ")]
[DebuggerTypeProxyAttribute("GemBox.Pdf.Content.PdfTextGlyphCollectionDebugView")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private object ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    public int Count { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public       { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public       { get; }
    [DebuggerBrowsableAttribute("0")]
internal       { get; }
    internal    (    );
    internal     ();
    private void (    );
    internal  ();
    private void ( );
    internal     ();
    private void ();
    private void ();
    internal void ();
    internal void ();
    internal void  ();
    internal void (bool );
    internal      ();
    internal void (Char[] );
    internal Char[]  ();
    public sealed virtual int get_Count();
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public      ();
    internal     (int );
    private void  ();
    private sealed virtual override void    ​ (    );
    [NullableContextAttribute("2")]
public sealed virtual bool Remove(    );
    public void  ();
    public void  ();
    public sealed virtual void Clear();
    public int (Func`2<   , bool> , bool );
    public void (int , int , bool );
    public sealed virtual bool Contains(    );
    public sealed virtual void CopyTo(   [] , int );
    public   ();
    public virtual string ToString();
    private void (    );
    private void (    );
    private void  ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override object    ​  ();
    private sealed virtual override void    ​ (Array , int );
    private sealed virtual override IEnumerator`1<   >    ​  ();
    private sealed virtual override IEnumerator    ​  ();
}
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private int ;
    public    (int );
    internal double (double );
    public sealed virtual bool Equals(double , double );
    public sealed virtual int GetHashCode(double );
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (double ,     );
    [IsReadOnlyAttribute]
public double ();
    [IsReadOnlyAttribute]
public     ();
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public    ( ,  , int );
    public  ();
    public  ();
    public int ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private    ;
    private ​   ;
    private int ;
    private int ;
    private int ;
    private double ;
    private  ;
    internal    (   );
    internal void (double );
    internal void ( );
    public void (int );
    public void (Nullable`1<byte> , byte , int );
    internal     (bool , Int32& , Int32& );
    private static void (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  {
    private int ;
    private bool ;
    private HashSet`1<char> ;
    public    (ContentRange );
    public int ();
    protected virtual void ​ (Element );
    protected virtual void ​ (Element );
    public virtual void    ​ (Run );
    private int (string );
    public virtual void    ​ (SpecialCharacter );
    public virtual void    ​ (Paragraph );
}
internal class     :     {
    [NullableContextAttribute("1")]
internal    (Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private     ;
    private IDictionary`2<int, Picture> ;
    private IDictionary`2<long, ListStyle> ;
    private    (    );
    public sealed virtual DocumentModel    ​ ();
    private sealed virtual override IDictionary`2<string,    >    ​ ();
    public sealed virtual IDictionary`2<string, Byte[]>    ​ ();
    public static     (    ,     );
    private void (    );
    private void (    );
    private KeyValuePair`2<int,    > (    , String& , String& , String& );
    private void (    );
    private KeyValuePair`2<int,    > (    , Int32& , Nullable`1& , String& , String& , String& );
    private void (    );
    private sealed virtual override TextBox    ​ (    );
}
internal class     :     {
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual void    ​ (DocumentModel );
    public abstract virtual void    ​ (Section );
    public abstract virtual void    ​ (HeaderFooter );
    public abstract virtual void    ​ (Paragraph );
    public abstract virtual void    ​ (Table );
    public abstract virtual void    ​ (TableRow );
    public abstract virtual void    ​ (TableCell );
    public abstract virtual void    ​ (BookmarkStart );
    public abstract virtual void    ​ (BookmarkEnd );
    public abstract virtual void    ​ (Field );
    public abstract virtual void    ​ (Hyperlink );
    public abstract virtual void    ​ (PreservedDrawingElement );
    public abstract virtual void    ​ (Group );
    public abstract virtual void    ​ (Shape );
    public abstract virtual void    ​ (TextBox );
    public abstract virtual void    ​ (Picture );
    public abstract virtual void    ​ (Run );
    public abstract virtual void    ​ (SpecialCharacter );
    public abstract virtual void    ​ (PreservedInline );
    public abstract virtual void    ​ (TableOfEntries );
    public abstract virtual void    ​ (Note );
    public abstract virtual void    ​ (BlockContentControl );
    public abstract virtual void    ​ (InlineContentControl );
    public abstract virtual void    ​ (Chart );
    public abstract virtual void    ​ (CommentStart );
    public abstract virtual void    ​ (CommentEnd );
    public abstract virtual void    ​ (Comment );
    public abstract virtual void    ​ (MoveRangeSeparator );
    public abstract virtual void    ​ (AlignmentTab );
}
internal static class     : object {
    public static     ;
    public static     ;
    public static     ;
    public static     ;
    public static     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private static Dictionary`2<   , string> ;
    private static    ();
    [NullableContextAttribute("2")]
internal static string (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
private TableStyle ;
    [DebuggerBrowsableAttribute("0")]
private TableStyleOptions ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<TableWidth> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<HorizontalAlignment> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   >  ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   >  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<Padding>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool>  ;
    [DebuggerBrowsableAttribute("0")]
private TableFormatRevision  ;
    public TableStyle ();
    public void (TableStyle );
    protected virtual Style    ​ ();
    protected virtual void    ​ (Style );
    public TableStyleOptions ();
    public void (TableStyleOptions );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public Nullable`1<TableWidth> ();
    public void (Nullable`1<TableWidth> );
    public Nullable`1<HorizontalAlignment> ();
    public void (Nullable`1<HorizontalAlignment> );
    public Nullable`1<double> ();
    public void (Nullable`1<double> );
    public Nullable`1<   >  ();
    public void (Nullable`1<   > );
    public      ();
    public void (    );
    public Nullable`1<   >  ();
    public void (Nullable`1<   > );
    public Nullable`1<Padding>  ();
    public void (Nullable`1<Padding> );
    public Nullable`1<double>  ();
    public Nullable`1<double>  ();
    public Nullable`1<double>  ();
    public Nullable`1<double>  ();
    public Nullable`1<double>  ();
    public void (Nullable`1<double> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public TableFormatRevision  ();
    public void (TableFormatRevision );
    public virtual bool Equals(    );
    internal bool (    );
    internal bool (    );
    public virtual int GetHashCode();
    public virtual        ​ ();
    public     (bool , TableFormat );
    [NullableContextAttribute("2")]
internal void (    );
    protected virtual  ​ <   >    ​  ();
    public virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private  ;
    internal    (    ,     ,     );
    internal    (    ,     , ​   );
    public virtual     ​ ();
    private  ();
    internal double ();
    internal virtual     ​  ();
    public     ();
    public void (    );
    public     ();
    public void (    );
    internal     ();
    public     ();
    public     ();
    public virtual        ​ ();
    [IteratorStateMachineAttribute("   /")]
public IEnumerable`1<double>  ();
    public int  ();
    internal virtual void    ​ (    );
    internal virtual void    ​ ( );
    internal virtual        ​  ();
    public virtual string ToString();
    internal void (StringBuilder );
    private protected virtual        ​ (    ,     );
    internal     (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Dictionary`2<StyleTemplateType, > ;
    private static    ();
    public static Style (StyleTemplateType , DocumentModel );
    public static Style (Nullable`1<StyleTemplateType> , DocumentModel , bool );
    private static Style ( , DocumentModel , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    private static    ();
    private    ( );
    internal static     ();
    internal virtual void    ​ ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    public string ();
    public void (string );
    private ​   ();
    private void (​   );
    private  ();
    private void ( );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  {
    private CharacterFormat ;
    private CharacterFormat ;
    public    (ContentRange );
    public CharacterFormat ();
    protected virtual void ​ (Element );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [NullableAttribute("2")]
public      { get; public set; }
    private static    ();
    private    ( );
    internal virtual void    ​ ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
}
[DefaultMemberAttribute("Item")]
[DebuggerTypeProxyAttribute("GemBox.Pdf.PdfCollectionDebugView`1")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private protected ​   ;
    public  Item { get; public set; }
    [NullableContextAttribute("2")]
private protected    (​   );
    private protected abstract virtual     ​ (​   );
    private protected abstract virtual ​      ​ ( );
    private protected ​   ( );
    private protected virtual     ​ (int );
    private protected virtual void    ​ (int ,  );
    private protected virtual void    ​ ( );
    private protected virtual void    ​ (int ,  );
    private protected virtual int    ​  ( );
    private int  ( , EqualityComparer`1<> );
    private protected virtual bool    ​  ( );
    private protected virtual void    ​  ([] , int );
    private protected virtual IEnumerator`1<>    ​  ();
    public sealed virtual  get_Item(int );
    public sealed virtual void set_Item(int ,  );
    public sealed virtual void Add( );
    public sealed virtual void Insert(int ,  );
    private protected virtual bool    ​  ( );
    public sealed virtual bool Remove( );
    public sealed virtual int IndexOf( );
    public sealed virtual bool Contains( );
    public sealed virtual void CopyTo([] , int );
    [NullableContextAttribute("0")]
public <>  ();
    private protected sealed virtual object    ​ (int );
    private protected sealed virtual void    ​ (int , object );
    private protected sealed virtual int    ​ (object );
    private protected sealed virtual void    ​ (int , object );
    private protected sealed virtual void    ​ (object );
    private protected sealed virtual int    ​ (object );
    private protected sealed virtual bool    ​ (object );
    private protected sealed virtual void    ​ (Array , int );
    private protected sealed virtual IEnumerator    ​  ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override IEnumerator`1<>    ​  ();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static ​   ;
    private static ​   ;
    [NullableAttribute("0")]
private static [] ;
    private static    ();
    [ExtensionAttribute]
public static  ( );
    [ExtensionAttribute]
public static  ( );
    [ExtensionAttribute]
public static  ( );
    [ExtensionAttribute]
public static  ( );
    private static  (int ,  ,  );
    [ExtensionAttribute]
public static bool ( );
    [ExtensionAttribute]
public static     ( );
    [ExtensionAttribute]
public static     ( ,     , Nullable`1<   > ,  , bool );
    [ExtensionAttribute]
public static     (    , Nullable`1<double> , Nullable`1<bool> , ​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  ​  {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    private  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    private static    ();
    private    ( ,  );
    internal static     (    ,  );
    private protected virtual void    ​ (    );
    public virtual     ​ ();
    internal void ( );
    public     ();
    private protected virtual        ​  ();
    public string ();
    public void (string );
    public PdfMarkupAnnotationIntent ();
    public void (PdfMarkupAnnotationIntent );
    private protected virtual bool  ​ ​ (PdfMarkupAnnotationIntent );
    public    <   > ();
    internal     ();
    internal virtual        ​ (    );
    internal virtual void    ​ (    );
    private void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    );
    public double ();
    public void (double );
    public  ();
    public void ( );
    public     ();
    public void (    );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    public double ();
    public void (double );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    private protected virtual void    ​ ​();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal ​   Source { get; }
    internal    (    ,     );
    private     ();
    private     ();
    internal sealed virtual        ​ ();
    internal sealed virtual ​   get_Source();
    internal sealed virtual ​      ​ ();
    private protected sealed virtual int    ​ ();
    private protected sealed virtual int    ​ ();
    private protected sealed virtual        ​ (int );
    private protected sealed virtual void    ​ (int ,     );
    private protected sealed virtual void    ​ (int ,     );
    private protected sealed virtual void    ​ (int );
    private protected sealed virtual void    ​ ();
    private protected sealed virtual int    ​  (    );
    private protected sealed virtual        ​ (​   );
    private protected sealed virtual ​      ​ (    );
    private protected virtual void    ​ (   & );
    private protected virtual void    ​ (   & );
    internal     ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    protected     ;
    protected     ;
    internal    (    ,     );
    public     ();
    private sealed virtual override        ​ ();
    private sealed virtual override        ​ ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override void    ​ (    );
}
internal static class     : object {
}
internal class     :     {
    private static    ();
    [NullableContextAttribute("1")]
private    ( );
    public virtual     ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    public    (    );
    public virtual void    ​ (   , string , Stream );
}
[NullableContextAttribute("1")]
internal interface     {
    [NullableAttribute("2")]
public   { get; public set; }
    public abstract virtual ​      ​ ();
    public abstract virtual void    ​ (​   );
    public abstract virtual ​      ​ ();
    public abstract virtual void    ​ (​   );
    [NullableContextAttribute("2")]
public abstract virtual     ​ ();
    [NullableContextAttribute("2")]
public abstract virtual void    ​ ( );
    public abstract virtual        ​ ();
}
internal static class     : object {
    [NullableContextAttribute("1")]
public static void (    ,     );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private     ;
    [NullableContextAttribute("2")]
public    (    );
    public     ();
    public void (    );
    public virtual Style    ​ (DocumentModel );
    public virtual void    ​ ();
    protected virtual void    ​ (DocumentModel ,     );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IList`1<KeyValuePair`2<string,    >> ;
    private     ;
    private IDictionary`2<string, string> ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<KeyValuePair`2<string,    >>  { get; }
    private    (    ,     );
    public sealed virtual IList`1<KeyValuePair`2<string,    >>  ​ ​ ();
    public sealed virtual Stream  ​ ​ ();
    public static void (    );
    private sealed virtual override string    ​ (Chart );
    private void (    );
    private void (    , int , Picture );
    private void (    , int , ListStyle );
    private void (    , int ,     );
    private void (    , int ,     );
    private void (    , int , Nullable`1<int> ,     );
    private static string (Nullable`1<> );
    public static string (NumberStyle );
    private static string (Nullable`1<ListTrailingCharacter> );
    private sealed virtual override IDictionary`2<string, string>    ​ ();
    private sealed virtual override int    ​ ();
    private sealed virtual override string    ​ (Picture );
    private sealed virtual override void    ​ (    , BlockCollection );
    public sealed virtual string  ​ ​ (object );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
public long ;
    [DebuggerBrowsableAttribute("0")]
public long ;
    public    (long , long );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static object ;
    private static Regex ;
    private static Dictionary`2<string, Color> ;
    private static Char[] ;
    private static Char[] ;
    private static Char[] ;
    private static Char[] ;
    private static    ();
    [IteratorStateMachineAttribute("   /")]
public static IEnumerable`1<KeyValuePair`2<string, string>> (string , StringBuilder );
    public static StringBuilder (StringBuilder , string , string );
    public static double (string , double );
    public static double (string , LengthUnit , double );
    public static string (double );
    public static string (double , bool );
    private static double (string , double );
    public static double (string , LengthUnit , double );
    public static Nullable`1<int> (string );
    private static Nullable`1<LengthUnit> (string );
    public static ShapeType (string );
    public static string (ShapeType );
    public static int (string ,     );
    public static HorizontalPositionAnchor (string , HorizontalPositionAnchor );
    public static HorizontalPositionAnchor (string );
    public static string (HorizontalPositionAnchor );
    public static HorizontalPositionType (string );
    public static string (HorizontalPositionType );
    public static VerticalPositionAnchor (string , VerticalPositionAnchor );
    public static VerticalPositionAnchor (string );
    public static string (VerticalPositionAnchor );
    public static VerticalPositionType (string );
    public static string (VerticalPositionType );
    public static TextWrappingStyle (string , TextWrappingStyle );
    public static string (TextWrappingStyle );
    public static WrapTextType  (string );
    public static string (WrapTextType );
    public static VerticalAlignment  (string );
    public static string (VerticalAlignment );
    public static Padding  (string );
    public static string (Padding );
    public static Color (string , Color );
    public static string (Color );
    public static double (string , double );
    public static string (double );
    public static byte (string , byte );
    public static byte  (string );
    public static string (byte );
    public static DrawingMetadata  (string );
    public static string (DrawingMetadata );
    public static double  (string );
    public static string (double );
    public static string (bool , bool );
    public static    (string ,    );
    public static string (   , bool );
    public static bool  (string );
    public static float  (string );
    public static string (float );
    public static float  (string );
    public static string (float );
    public static   (string );
    public static   (string );
    public static   (string );
    public static string (    );
    private static NotSupportedException (T );
    private static NotSupportedException (string );
    private static NotSupportedException (string , string );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<KeyValuePair`2<string,    >> ;
    private int ;
    private    (    );
    public static void (    );
    private void (    );
    private void (    , FontInfo );
    private void (    , string , Byte[] );
    private static void (Byte[] , String& );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static     (    );
    public static     (    ,     , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual bool    ​ (   & );
    public void (   & ,    & );
    public void (   & ,    & );
    public void (   & ,    & );
    public sealed virtual void    ​ (   & , double );
    public sealed virtual void    ​ (   & , double );
    public     (   & ,    & );
    public void (   & ,    & );
    public bool (   & ,    & , IEqualityComparer`1<double> , Double& );
    public bool (   & ,    & , IEqualityComparer`1<double> , Double& );
    public bool (   & ,    & , IEqualityComparer`1<double> ,    & );
    public sealed virtual bool    ​ (   & ,    & , IEqualityComparer`1<double> );
    public sealed virtual bool    ​ (   & ,    & , IEqualityComparer`1<double> );
    public double (   & );
    public double (   & );
    public sealed virtual bool    ​ (   & , Double& ,    & );
    private sealed virtual override void    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & );
    private sealed virtual override void    ​ (   & ,    & modreq(System.Runtime.InteropServices.InAttribute) );
    private sealed virtual override void    ​ (   & ,    & modreq(System.Runtime.InteropServices.InAttribute) );
    private sealed virtual override        ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) );
    private sealed virtual override void    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & );
    private sealed virtual override bool    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) , IEqualityComparer`1<double> , Double& );
    private sealed virtual override bool    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) , IEqualityComparer`1<double> , Double& );
    private sealed virtual override bool    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) , IEqualityComparer`1<double> ,    & );
    private sealed virtual override double    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) );
    private sealed virtual override double    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private     ;
    public    (    );
    public     ();
    public void (    );
    public virtual Style    ​ (DocumentModel );
    public virtual void    ​ ();
    protected virtual void    ​ (DocumentModel ,     );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (    , Double& );
    public static void (    ,     , PageSetup );
    public static void (    ,     , PageSetup );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  ​  {
    private bool ;
    private HeaderFooter ;
    private Section ;
    private bool ;
    private bool ;
    private int ;
    private int ;
    public    (    , int );
    public void (    );
    public void ();
    protected virtual   <string,    >  ​ ​ (BlockCollection );
    public string (string , string , string );
    public string (int );
    protected virtual void  ​ ​ (    );
    private void (    , PageSetup , HeaderFooterCollection , NoteSettings , NoteSettings , SectionPropertiesRevision );
    private static void (    , ​  );
    private void (    , HeaderFooterCollection , Boolean& );
    private HeaderFooter (HeaderFooterType );
    private HeaderFooter ();
    private void (    , HeaderFooter , HeaderFooterType );
    private static HeaderFooter (Section , HeaderFooterType );
    private void (string , HeaderFooter , bool );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
internal interface     {
    public abstract virtual int    ​ ();
    public abstract virtual int    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
internal ​   ;
    internal ​   Source { get; }
    private static    ();
    internal virtual bool    ​ ();
    internal virtual        ​ ();
    internal virtual void    ​ (    );
    public virtual     ​ ();
    public virtual int    ​ ();
    internal virtual        ​  ();
    internal virtual ​      ​  ();
    internal virtual ​   get_Source();
    internal virtual bool    ​ (    , Double& , Double& , Double& );
    internal virtual string    ​ (int );
    internal virtual bool    ​ (    );
    private protected virtual void    ​ (    ,     );
    private protected virtual void    ​ (    ,     );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
internal interface     {
    public  ​   { get; }
    public abstract virtual  ​     ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (    , string , string );
    private static void (    , string , string );
    private static void (    , string , string , string , string );
    [NullableContextAttribute("2")]
private static void (    , string , string , string , string );
    private static void (    , string );
    public static bool (    ,     , string , Field );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
private static [] ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal ​    ;
    internal ​   Source { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal string   { get; internal set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal string   { get; internal set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal string   { get; internal set; }
    private    (​   );
    internal    (    );
    private static    ();
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    private  ();
    internal static     (bool );
    internal static     (​   );
    public static     ( );
    internal bool ();
    internal     ();
    internal bool ();
    internal Nullable`1<int> ();
    internal void (Nullable`1<int> );
    internal Nullable`1<   > ();
    internal void (Nullable`1<   > );
    [NullableContextAttribute("2")]
internal string  ();
    [NullableContextAttribute("2")]
internal void (string );
    [NullableContextAttribute("2")]
internal string  ();
    [NullableContextAttribute("2")]
internal void (string );
    [NullableContextAttribute("2")]
internal string  ();
    [NullableContextAttribute("2")]
internal void (string );
    internal bool ();
    internal void (bool );
    private protected sealed virtual        ​ (    );
    internal     (    );
    internal      ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    protected     ;
    public    (    );
    public abstract virtual void    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
internal    ;
    [DebuggerBrowsableAttribute("0")]
internal    ;
    [DebuggerBrowsableAttribute("0")]
internal bool ;
    [DebuggerBrowsableAttribute("0")]
internal bool ;
    [DebuggerBrowsableAttribute("0")]
internal bool ;
    [DebuggerBrowsableAttribute("0")]
internal bool ;
    [DebuggerBrowsableAttribute("0")]
internal bool ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private EventHandler`1<​  >  ;
    internal    (   ,    , bool , bool , bool , bool , bool , EventHandler`1<​  >  );
    public void (EventHandler`1<​  > );
    public void (EventHandler`1<​  > );
    internal void (object , ​   );
    internal void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private XmlTextWriter ;
    public    (XmlTextWriter );
    public void ();
    public void ();
    public     (string );
    public     (string , string );
    public     (string , Nullable`1<int> );
    public     (string , Nullable`1<bool> );
    public     (string , int , Nullable`1<bool> );
    public     (string , string , Nullable`1<bool> , string );
    public     (string );
    public void (string );
    public void (string );
    public void (string , string );
}
internal interface     {
    public abstract virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Picture ;
    private string ;
    private  ;
    private Byte[] ;
    public    (Picture , string );
    public  ();
    public Byte[] ();
    public string ();
    private static  (Stream , Byte[]& );
    public bool ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
private static    [][] ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
private protected static ​   ;
    private static    ();
    public static     ();
    public static     ();
    public static     ();
    public static     ();
    public abstract virtual     ​ ();
    internal virtual bool    ​ ();
    public abstract virtual int    ​ ();
    internal virtual int    ​  ();
    internal virtual    []    ​  ();
    internal abstract virtual        ​  ();
    internal abstract virtual ​      ​  ();
    internal virtual bool    ​ ();
    internal virtual        ​ ();
    internal virtual void    ​ (    );
    private protected static IList`1<double> ( , ​   );
    public static     (​   );
    internal static     ( ,    [] , Byte[] , bool );
    internal abstract virtual bool    ​ (    , Double& , Double& , Double& );
    internal virtual bool    ​ (    , Byte& , Byte& , Byte& );
    internal abstract virtual string    ​ (int );
    private protected static double (double ,     );
    internal virtual bool    ​ (    );
    public virtual string ToString();
    public sealed virtual bool Equals(object );
    public sealed virtual int GetHashCode();
    internal string (    , string , IFormatProvider );
    private protected sealed virtual        ​ (    );
    internal     (    );
    internal     (    );
    internal virtual void    ​ (    , bool , bool ,     );
    internal virtual void    ​ (    , bool , bool ,     );
    private protected virtual void    ​ (    ,     );
    private protected virtual void    ​ (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private Element ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    private    (Element );
    private ElementCollection ();
    private int ();
    public     ();
    public ElementType ();
    public     ();
    public     ();
    public     ();
    public ContentPosition  ();
    public ContentPosition  ();
    public     (bool , bool ,     );
    public     (bool , bool , ElementType , Func`3<ElementType, DocumentModel,    > );
    public bool (ElementType );
    public     (ElementType );
    public bool (ElementType );
    public bool (ElementType , bool ,    & );
    public bool (bool , ElementType ,    & );
    public     (bool );
    public     (int );
    public     (bool ,     );
    private     (bool );
    private bool (bool , ElementType , bool ,    & );
    private bool (bool );
    [IteratorStateMachineAttribute("   /")]
private IEnumerable`1<   > (IEnumerable`1<ElementType> );
    private static bool (    , SpecialCharacterType& );
    [IteratorStateMachineAttribute("   /")]
private IEnumerable`1<   >  ();
    private      ();
    private      ();
    private string (bool );
    private static string (Element );
    private static string (ElementCollection );
    public virtual string ToString();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    public static     op_Implicit(Element );
    public static Element op_Implicit(    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static void (    , ParagraphFormat , bool , bool , double , bool );
    public static void (    , CharacterFormat , CharacterFormat );
    public static void (    , TableFormat );
    public static void (    , TableRowFormat );
    public static void (    , TableCellFormat , TableFormat , bool , bool , bool , bool );
    private static void (string , double , StringBuilder );
    private static string (String& );
    private static string (Field );
    public static string (    , Field );
    public static void (    , TextBox , int , int , bool );
    public static void (    , Group , Picture , Func`2<Picture, string> );
}
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    internal    (double , double , double );
    public virtual int    ​ ();
    protected virtual double    ​ (int );
    [NullableContextAttribute("1")]
protected virtual bool    ​ (    );
    public virtual void    ​ (   & );
}
internal class     : object {
    private int ;
    private double ;
    private bool ;
    public int ();
    public void (int );
    public double ();
    public void (double );
    public bool ();
    public void (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static [] ;
    public static ReadOnlyCollection`1<> ;
    private static    ();
    public static IList`1<> ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
protected Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private MD5 ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
protected Byte[] ;
    protected    (    , Byte[] , MD5 );
    protected Byte[] (​   );
    protected internal sealed virtual Byte[]    ​ (​   ,     , Byte[] , int , int , Int32& , Int32& );
    protected internal sealed virtual Byte[]    ​ (​   ,     , Byte[] , int , int , Int32& , Int32& );
    protected void (int );
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private string ;
    public    (    , string );
    public virtual     ​ ();
    public string ();
    public void (string );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static bool (T , T );
    public static bool (IList`1<T> , IList`1<T> );
    [ExtensionAttribute]
public static bool (double , double , double );
    [ExtensionAttribute]
public static bool (double , double , int );
    [ExtensionAttribute]
public static bool (double , double );
    [ExtensionAttribute]
public static bool (Nullable`1<double> , Nullable`1<double> );
    [ExtensionAttribute]
public static int (double , double , double );
    [ExtensionAttribute]
public static int (double , double , int );
    [ExtensionAttribute]
public static int (double , double );
    [ExtensionAttribute]
public static bool (ICollection`1<T> , ICollection`1<T> );
    [ExtensionAttribute]
private static bool (ICollection`1<T> , ICollection`1<T> );
    [ExtensionAttribute]
[NullableContextAttribute("0")]
public static bool (ICollection`1<T> , ICollection`1<T> );
    [ExtensionAttribute]
[NullableContextAttribute("0")]
private static bool (ICollection`1<T> , ICollection`1<T> );
    public static TValue (TData , Func`2<TData, TValue> , TValue );
    public static void  (TData& , Action`2<TData, TValue> , TValue , bool );
    public static TData  (TData , Action`2<TData, TValue> , TValue , bool );
    public static string (IList`1<object> );
    public static string (Object[] );
    private static string (object , IFormatProvider );
    private static string (object , string , IFormatProvider );
    public static bool (double , double );
    public static bool (Nullable`1<double> , Nullable`1<double> );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private static HashSet`1<string> ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<string, string> ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<string, Tuple`2<string, >> ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private  ​  ;
    [DebuggerBrowsableAttribute("0")]
private static   <string, string> ;
    [DebuggerBrowsableAttribute("0")]
public string  { get; }
    internal    ( ​  );
    private static    ();
    public  ​  ();
    internal     ();
    public string (string );
    private sealed virtual override IEnumerator    ​ ();
    private bool (string , Tuple`2& );
    internal bool (string , Tuple`2& );
    private string (string );
    private string (string , string );
    [IteratorStateMachineAttribute("   /")]
internal IEnumerable`1<KeyValuePair`2<string, string>> ();
    public void (string , string ,  );
    public void (IEnumerable`1<KeyValuePair`2<string, string>> ,  );
    public void (string ,  );
    public void (IEnumerable`1<string> ,  );
    public void (string ,  );
    public void (IEnumerable`1<string> ,  );
    public void ();
    public bool (string );
    public bool (string );
    public bool (string , string );
    public bool (string );
    public string (string , string );
    public string (string , string );
    public  (string );
    [IteratorStateMachineAttribute("   /")]
public sealed virtual IEnumerator`1<KeyValuePair`2<string, string>> GetEnumerator();
    public     ( ​  );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <UInt32> ;
    private UInt32 ;
    private static    ();
    public UInt32 ();
    public void (UInt32 );
    public static     ();
    public virtual        ​ ();
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private     ;
    public    (    ,     );
    public     ();
    public     ();
    public sealed virtual        ​ ();
    public virtual bool    ​ ( ​  ,    & );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class     :    <> {
    private    <UInt32> ;
    [DebuggerBrowsableAttribute("0")]
private UInt32 ;
    protected    (   <ushort> ,    <UInt32> );
    public virtual UInt32    ​ ();
    public virtual void    ​ (UInt32 );
    public virtual void    ​ (    );
    public virtual void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private StringBuilder ;
    public    (StringBuilder );
    protected virtual bool    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    private string ;
    public string ();
    public void (string );
    public abstract virtual ​    ​ (​ );
    public abstract virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    internal    (string );
    public sealed virtual        ​ ();
    public sealed virtual bool    ​ ( ​  ,    & );
    public virtual string ToString();
}
internal interface     {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private static    [][] ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    );
    private static    ();
    public int ();
    private    [] ();
    internal Nullable`1<> ();
    private void (Nullable`1<> );
    internal IList`1<   > ();
    private void (Action`2<  <   >, TValue> , TValue );
    public void (int ,     );
    public void (int );
    public void ();
    public sealed virtual IEnumerator`1<   > GetEnumerator();
    private sealed virtual override IEnumerator    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private object ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public    (string );
    internal    (Byte[] );
    public    (object );
    private    (object , string );
    internal    (   );
    internal object ();
    public static     (string );
    internal static     (string , object ,     , DateTimeOffset , DateTimeOffset , Byte[] , X509ExtensionCollection ,   ,      );
    private static object (object );
    internal    ();
    public string ();
    public string ();
    internal int  ();
    internal String[]  ();
    internal String[]  ();
    internal String[]  ();
    internal string ();
    internal string  ();
    public Byte[]  ();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public virtual string ToString();
    internal Byte[] ( , bool );
    private sealed virtual override object    ​ ();
    private sealed virtual override object    ​ ();
    private sealed virtual override X509KeyStorageFlags    ​  ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override Byte[]    ​ (Byte[] , string , object );
    private sealed virtual override bool    ​ (Byte[] , Byte[] , string , object );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
public static Byte[] ;
    private static    ();
    private protected virtual bool    ​ ();
    private protected virtual int    ​ (int );
    private protected virtual int    ​ (string );
    private protected virtual int    ​ (string , Byte[] , int );
    private protected virtual string    ​ (Byte[] , int , int );
    public virtual string ToString();
    internal static int (StringBuilder ,    );
}
internal interface     {
    public abstract virtual Nullable`1<>    ​ ();
    public abstract virtual void    ​ (Nullable`1<> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private <   > ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private <   > ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private <   > ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
internal ​     { get; }
    [DebuggerBrowsableAttribute("0")]
internal ​   Source { get; }
    internal    (​   );
    private static    ();
    internal virtual ​      ​  ();
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    internal     ();
    internal     ();
    internal bool ();
    public    <   > ();
    public    <   > ();
    public    <   > ();
    public     (    );
    public void (    );
    public void (    );
    public void ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private static     ;
    private StringBuilder ;
    private     ;
    public    (    );
    private static    ();
    private bool ();
    private void ();
    private bool ();
    private string ();
    private void ();
    private string ();
    private      ();
    [NullableContextAttribute("2")]
private      ();
    private     (    );
    private     (    );
    private     (    );
    private void ();
    private string  ();
    private     (    );
    private     (    );
    private static bool (    );
    internal      ();
    private     (    );
    private List`1<   > (    );
    private      ();
    private List`1<   > (bool );
    public IList`1<   >  ();
    public IList`1<   >  ();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static TAttribute (Type , string );
    [ExtensionAttribute]
public static IEnumerable`1<TAttribute> (Type , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    public virtual     ​ ();
    public virtual void    ​ (    , Stream );
    public virtual int    ​ (    , Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : Stream {
    [DebuggerBrowsableAttribute("0")]
private Stream ;
    public bool CanSeek { get; }
    public bool CanRead { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public bool CanTimeout { get; }
    public long Position { get; public set; }
    public int ReadTimeout { get; public set; }
    public int WriteTimeout { get; public set; }
    public    (Stream );
    public Stream        ​               ();
    public virtual bool get_CanSeek();
    public virtual bool get_CanRead();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual bool get_CanTimeout();
    public virtual long get_Position();
    public virtual void set_Position(long );
    public virtual int get_ReadTimeout();
    public virtual void set_ReadTimeout(int );
    public virtual int get_WriteTimeout();
    public virtual void set_WriteTimeout(int );
    public virtual int ReadByte();
    public virtual int Read(Byte[] , int , int );
    public virtual IAsyncResult BeginRead(Byte[] , int , int , AsyncCallback , object );
    public virtual int EndRead(IAsyncResult );
    public virtual void WriteByte(byte );
    public virtual void Write(Byte[] , int , int );
    public virtual IAsyncResult BeginWrite(Byte[] , int , int , AsyncCallback , object );
    public virtual void EndWrite(IAsyncResult );
    public virtual long Seek(long , SeekOrigin );
    public virtual void SetLength(long );
    public virtual void Flush();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    private string ;
    private string ;
    private string ;
    private bool ;
    internal    (    , string , string , string , bool );
    public string ();
    public string ();
    public string ();
    public bool ();
    public string ();
    public     ();
    public      ();
    public      ();
    internal string ();
    internal static string (string , string , string , bool );
    private static string (string , string , bool );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    public static     ;
    public static     ;
    public static     ;
    public static     ;
    public static     ;
    public static     ;
    public static     ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    private static    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    private     ;
    internal    (    );
    public     ();
    protected abstract virtual        ​ ();
    public void ();
    protected abstract virtual void    ​ (Stream );
    public abstract virtual object    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    public    (bool , string );
    [IsReadOnlyAttribute]
public bool ();
    [IsReadOnlyAttribute]
public string ();
    public static     (string );
    public static     (string );
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public virtual string ToString();
}
internal static class     : object {
    public static     ;
    public static     ;
    public static     ;
    public static     ;
    public static     ;
    public static     ;
    public static     ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static     ​;
    public static     ​;
    public static     ​;
    public static     ​;
    public static     ​;
    public static     ​;
    public static     ​;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    private static    ();
    [NullableContextAttribute("1")]
internal static     (string );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Dictionary`2<char, int> ;
    private static    ();
    public static bool (string , String& );
    [ExtensionAttribute]
public static void (StringBuilder , byte );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (    ,     , bool );
    protected virtual void    ​ ();
    public virtual bool    ​ ();
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public     Current { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private object  { get; }
    [NullableContextAttribute("1")]
public    (    , int );
    public sealed virtual     get_Current();
    public sealed virtual bool MoveNext();
    public sealed virtual void Dispose();
    public sealed virtual void Reset();
    [NullableContextAttribute("1")]
private sealed virtual override object    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    internal    (   , double ,     ,     ,     ,     ,     );
    public    ();
    private void (   );
    public double ();
    private void (double );
    public     ();
    private void (    );
    public     ();
    private void (    );
    public     ();
    private void (    );
    public     ();
    private void (    );
    public     ();
    private void (    );
    internal void (   , double ,     ,     ,     ,     ,     );
    internal bool (   );
    internal bool (double );
    internal bool (    );
    internal bool (    );
    internal bool (    );
    internal bool (    );
    internal bool (    );
    public virtual bool Equals(object );
    public sealed virtual bool Equals(    );
    public virtual int GetHashCode();
    internal bool (    , bool );
    public TextRunProperties (    , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    <int> {
    [DebuggerBrowsableAttribute("0")]
internal ​   ;
    internal ​   Source { get; }
    private static    ();
    public    (​   , ​   );
    public static     (IList`1<int> );
    internal sealed virtual ​   get_Source();
    internal sealed virtual ​      ​ ();
    private protected sealed virtual int    ​ (​   );
    private protected sealed virtual ​      ​ (int );
}
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    ,     ,     );
    public     ();
    public     ();
    public     ();
    public bool ();
    internal  ();
    internal  ();
    internal static     ( );
    public sealed virtual int CompareTo(    );
    public sealed virtual bool Equals(    );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
    internal int (int );
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <​  ,    > {
    internal    (​   );
    private protected virtual        ​  (​   );
    private protected virtual ​      ​  (    );
    public     (​   ,     );
    internal string (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    public    (string );
    public    (long );
    public bool ();
    public bool ();
    public string ();
    public long ();
    public object ();
    public static     (string );
    public double (    );
    public double (    );
    public double (    );
    public virtual int GetHashCode();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual string ToString();
    public sealed virtual string ToString(string , IFormatProvider );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    public static     op_Implicit(string );
    public static     op_Implicit(long );
    public static     op_Implicit(int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    ,     ,     , bool );
    public     ();
    public     ();
    public     ( );
    public     ();
    public     ();
    public     ();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public Drawing (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static bool ;
    private static    ();
    private static bool ();
    private static bool ();
    public static bool ();
    public static void (bool );
    public static bool (bool );
    public static bool ();
    public static bool (Attribute , String& );
    public static bool (Assembly& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public    (​   , bool );
    public ​   ();
    public bool ();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public virtual string ToString();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
internal abstract class     :     {
    [NullableAttribute("1")]
public static Regex ;
    private static    ();
    public static bool (int );
    public static bool (int );
    public static bool (int );
    public static bool (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    internal ​   Source { get; }
    private    ( );
    internal    (string ,  , Nullable`1<int> , bool , bool );
    private static    ();
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    internal static     ( , string );
    public  ();
    private void ( );
    public string ();
    public void (string );
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public virtual string ToString();
    internal static     (​   );
    internal ​   ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static void (    ,     );
    public static void (    , IEnumerable`1<   > );
    private static void (    ,     );
    private static void (    , IEnumerable`1<   > );
    private static void (    ,     );
    private static void (    ,     );
    private static void (    , IEnumerable`1<   > );
    private static void (    ,     );
    private static void (    ,     );
    private static void (    , IEnumerable`1<> );
    private static void (    ,  );
    private static void (    ,    [] );
    private static void (    ,     );
    private static void (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private IList`1<   > ;
    private  ​  ;
    private    (IList`1<   > );
    public IList`1<   > ();
    [CompilerGeneratedAttribute]
public sealed virtual  ​     ​ ();
    public static     (IEnumerable`1<   > );
    public sealed virtual void    ​ (int , int , Double[] , Action`3<int, int, Double[]> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private static float ;
    [DebuggerBrowsableAttribute("0")]
private SKFont ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private Font  ;
    internal    (    , double );
    private static    ();
    internal SKFont (Boolean& );
    internal void ();
    public     ();
    private void (    );
    public double ();
    private void (double );
    public double ();
    public double ();
    public double ();
    public double (   , Double& );
    internal void (    ,     , string , double );
    public virtual bool Equals(object );
    public sealed virtual bool Equals(    );
    public virtual int GetHashCode();
    internal Font  ();
    internal void ();
}
[DefaultMemberAttribute(" ")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : ​   {
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
internal string DebuggerDisplayValue { get; }
    private DebuggerByteArray DebuggerItems { get; }
    [DebuggerBrowsableAttribute("0")]
public byte   { get; }
    internal    ( );
    private static    ();
    public  ();
    internal abstract virtual       ​ ();
    public sealed virtual  ​  ​ ();
    internal virtual bool ​  ​ ();
    public static     (string ,     ,  );
    public static     (string );
    public static     (DateTimeOffset );
    [NullableContextAttribute("2")]
internal static     (string );
    internal static     (string ,     ,    ,  );
    internal static     (string ,    );
    internal static     ( , Byte[] );
    internal static     ( ,    );
    internal static     ( ,    );
    public int ();
    internal sealed virtual string get_DebuggerDisplayValue();
    private DebuggerByteArray get_DebuggerItems();
    private     ();
    public byte (int );
    internal void ();
    internal abstract virtual ​      ​ ();
    private protected abstract virtual        ​ (int , int );
    internal     (int , int );
    internal     (int );
    internal static     (IList , int , int , int ,    );
    private static     (IList , int , int , int );
    private static  (IList , int , int , int ,    );
    private static  (IList , int , int , int );
    public sealed virtual bool Equals(object );
    private bool (    );
    public sealed virtual int GetHashCode();
    public string (    );
    public sealed virtual string ToString();
    public  ();
    private sealed virtual override IEnumerator`1<byte>    ​  ();
    private sealed virtual override IEnumerator    ​  ();
}
[DefaultMemberAttribute("Item")]
[DebuggerTypeProxyAttribute("GemBox.Collections.DictionaryDebugView`2<   ,System.String>")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private IDictionary`2<   , string> ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public bool IsReadOnly { get; }
    public int Count { get; }
    public ICollection`1<   > Keys { get; }
    public ICollection`1<string> Values { get; }
    public string Item { get; public set; }
    internal    (IDictionary`2<   , string> , bool );
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsReadOnly();
    public sealed virtual int get_Count();
    public sealed virtual ICollection`1<   > get_Keys();
    public sealed virtual ICollection`1<string> get_Values();
    public sealed virtual string get_Item(    );
    public sealed virtual void set_Item(    , string );
    public sealed virtual bool TryGetValue(    , String& );
    public sealed virtual bool ContainsKey(    );
    public sealed virtual bool Contains(KeyValuePair`2<   , string> );
    public sealed virtual void Add(    , string );
    public sealed virtual void Add(KeyValuePair`2<   , string> );
    public sealed virtual bool Remove(    );
    public sealed virtual bool Remove(KeyValuePair`2<   , string> );
    public sealed virtual void Clear();
    public sealed virtual void CopyTo(KeyValuePair`2[] , int );
    public sealed virtual IEnumerator`1<KeyValuePair`2<   , string>> GetEnumerator();
    private void ();
    private static string (string );
    private sealed virtual override object    ​ ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override ICollection    ​ ();
    private sealed virtual override ICollection    ​ ();
    private sealed virtual override object    ​ (object );
    private sealed virtual override void    ​ (object , object );
    private sealed virtual override bool    ​ (object );
    private sealed virtual override void    ​ (object , object );
    private sealed virtual override void    ​ (object );
    private sealed virtual override void    ​ (Array , int );
    private sealed virtual override IDictionaryEnumerator    ​ ();
    private sealed virtual override IEnumerator    ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : ​   {
    public static     (Func`2<, TPdfObject> );
    public static     (Func`2<​  , TPdfObject> );
    public static     (Func`2<​  , TPdfObject> );
}
internal interface     {
    public abstract virtual     ​ ();
    public abstract virtual     ​ ();
    public abstract virtual bool    ​ ();
    public abstract virtual        ​ (double , Double& );
    public abstract virtual        ​ (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    internal ​   Source { get; }
    private static    ();
    private    ( );
    public    ( , int );
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    public  ();
    public void ( );
    public int ();
    public void (int );
}
[DefaultMemberAttribute(" ")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private [] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
public    { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static    <>   { get; }
    public    ([] );
    public    ([] , int , int );
    public int ();
    public void ();
    public void ( );
    public void (   <> );
    public  (int );
    public void (int ,  );
    public    <>  (int , int );
    public    <>  (int );
    public []  ();
    public    <>  ();
    public []  ();
    public int ();
    private sealed virtual override IEnumerator`1<>    ​  ();
    private sealed virtual override IEnumerator    ​  ();
    [IteratorStateMachineAttribute("   /")]
public IEnumerable`1<   <>>  ( );
    public int  ( );
    public int  ([] );
    public void  ( ,  );
    public static    <>  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    private static    ();
    internal static ​   ( );
    internal static void ( , ​   );
    internal static ​   ( );
    internal static void ( , ​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    private string ;
    private bool ;
    public    (string , string , bool );
    public string ();
    public string ();
    public bool ();
    public     ();
    private bool (    );
    [NullableContextAttribute("2")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class     :    <> {
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    internal ​   Source { get; }
    internal    (    , ​   );
    private    (​   );
    internal sealed virtual ​      ​  ();
    internal sealed virtual ​   get_Source();
    internal sealed virtual     ​ ();
    internal sealed virtual ​      ​ ();
    protected abstract virtual ​      ​ ();
    protected abstract virtual string    ​ ( );
    protected abstract virtual string    ​ (​   , int );
    private  (​   );
    private ​   ( );
    private protected sealed virtual int    ​ ();
    private protected sealed virtual int    ​ ();
    internal sealed virtual bool    ​  ();
    private protected sealed virtual bool    ​  ();
    private protected sealed virtual bool    ​  ();
    private protected sealed virtual object    ​ ();
    private ​   (int );
    private protected sealed virtual     ​ (int );
    private protected sealed virtual void    ​ (int ,  );
    private protected sealed virtual void    ​ (int ,  );
    private protected sealed virtual void    ​ (int );
    private protected sealed virtual void    ​ ();
    private protected sealed virtual int    ​  ( );
    private protected sealed virtual bool    ​  ( );
    private protected sealed virtual IEnumerator`1<>    ​  ();
    private ​    ( );
    private protected sealed virtual bool    ​  ( );
    private protected sealed virtual void    ​  ([] , int );
    [NullableContextAttribute("0")]
public <>  ();
    internal   (​   , int , String& );
    internal void  (​   ,  );
    internal void  (​   ,  );
    internal ​    ( );
    private ​    ( );
    private static ​    (​   );
    private bool  (​   );
    internal void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private Paragraph ;
    private IDictionary`2<string, FontInfo> ;
    private     ;
    private List`1<> ;
    private Dictionary`2<   , double> ;
    private    (    , Paragraph , IDictionary`2<string, FontInfo> ,     );
    private DocumentModel ();
    public static void (    , Paragraph , IDictionary`2<string, FontInfo> ,     );
    private void ();
    private void ();
    private void (    ,     );
    private void (    ,     );
    [NullableContextAttribute("2")]
private     (    ,     );
    public static bool (    ,     , IEnumerable`1<   > ,     );
    private double (    );
    private void ( );
    private void ( );
    private void ();
    private TextBox ( );
    private void (TextBox ,  );
    private Paragraph ( ,  ,     );
    [IteratorStateMachineAttribute("   /")]
private IEnumerable`1<Inline> ( ,  );
    private void ( , CharacterFormat );
    private void (    , string , bool , bool , ​   );
    private static void (FontInfo , ​   );
    [NullableContextAttribute("2")]
private static string (string , IEnumerable`1<KeyValuePair`2<CultureInfo, string>> );
    private static void (    , ​   , Byte[]& );
    [NullableContextAttribute("2")]
private double (    );
    private static string (    , ushort );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (    ,     );
    [IsReadOnlyAttribute]
public     ();
    [IsReadOnlyAttribute]
public     ();
    public  ();
    public     ();
    public     ();
    public virtual string ToString();
    [IteratorStateMachineAttribute("   /")]
public IEnumerable`1<   > ();
    public  ();
    private sealed virtual override IEnumerator`1<   >    ​  ();
    private sealed virtual override IEnumerator    ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    public string ();
    public void (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    internal    (    );
    protected virtual ​      ​ ();
    protected virtual string    ​ (    );
    private protected virtual        ​ (​   );
    private protected virtual ​      ​ (    );
    protected virtual string    ​ (​   , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    public    ( , string , Nullable`1<int> );
    public virtual     ​ ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Regex ;
    private static Regex ;
    private static    ();
    public static     (string ,  , string , Nullable`1<> , Nullable`1<> , Nullable`1<> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    public static     ;
    private static    ();
    public abstract virtual     ​ ();
    public virtual string    ​ ();
    public virtual Nullable`1<int>    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public int ();
    public void (int );
    public ​   ();
    public void (​   );
    public ​   ();
    public void (​   );
    public ​   ();
    public void (​   );
    public ​   ();
    public void (​   );
    public Nullable`1<   >  ();
    public void (Nullable`1<   > );
    public double  ();
    public void (double );
    public double  ();
    public void (double );
    internal static void (    ,     );
    internal static void (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private int ;
    private string ;
    public    (int , string );
    public int ();
    private void (int );
    public string ();
    private void (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private Double[] ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public Double[]   { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public       { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public       { get; public set; }
    public  ();
    public void ( );
    public double ();
    public void (double );
    [NullableContextAttribute("2")]
public Double[]  ();
    [NullableContextAttribute("2")]
public void (Double[] );
    private double (int );
    public   ();
    public void ( );
    public double ();
    public void (double );
    internal   ();
    internal void ( );
    internal void SetRightToLeft();
    public      ();
    public void (    );
    public      ();
    public void (    );
    public double ();
    public void (double );
    public      ();
    public void (    );
    public   ();
    public void ( );
    public   ();
    public void ( );
    public   ();
    public void ( );
    public      ();
    public void (    );
    public double ();
    public void (double );
    public      ();
    public void (    );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public void (    );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public void (    );
    internal      ();
    internal void (    );
    internal void SetDiscretionaryLigatures();
    internal void SetNoKerning();
    private ​    ();
    internal      ();
    internal   ();
    public int  ();
    public double ();
    public double ();
    internal double  ();
    public     (string );
    public      ();
    public     (string );
    internal     (IList`1<string> );
    public      ();
    public     (int , double );
    public sealed virtual void Dispose();
    public virtual string ToString();
    private sealed virtual override        ​  ();
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (   & );
    private sealed virtual override void    ​ (    ,    & modreq(System.Runtime.InteropServices.InAttribute) );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Regex ;
    private static HashSet`1<string> ;
    private static Char[] ;
    private static Dictionary`2<string, string> ;
    public static Func`2<   , > ;
    private static    ();
    private static     (    , Func`2<   , bool> ,     , String& , Nullable`1& , Nullable`1& ,    & , String&  , Boolean&  ,    &  ,  &  ,  &  );
    public static     (    ,     , String& );
    public static     (    ,     );
    public static     (    ,     , Nullable`1& , Nullable`1& ,    & ,  & );
    public static bool (    , ParagraphFormat , Func`2<   , bool> ,     , String& , Nullable`1& , Nullable`1& , CharacterFormat&  , String&  ,    &  ,  &  ,  &  );
    public static void (    , ParagraphFormat ,     );
    public static     (    ,     , String& ,  & ,     );
    public static     (    ,     ,  & );
    public static CharacterFormat (    ,     , String& ,  & , CharacterFormat );
    public static CharacterFormat (    ,     );
    public static TableFormat (    , bool , String& , TableStyleOptions& , TableMetadata& , TableFormat& , String& , TableStyleOptions&  );
    public static TableFormat (    , bool );
    private static TableStyleOptions (    );
    public static     (    );
    public static TableRowFormat (    , TableRowFormat& );
    public static TableCellFormat (    ,    & , TableCellFormat& );
    public static void (    , Revision );
    public static TableCellFormat (    );
    public static void (    , PageSetup );
    public static void (    , PageMargins );
    public static void (    , PageSetup );
    public static void (    , PageSetup );
    public static void (    , PageSetup );
    public static void (    , PageSetup );
    private static void (    , Nullable`1& , Nullable`1& );
    [IteratorStateMachineAttribute("   / ")]
public static IEnumerable`1<TableColumn> (    );
    [IteratorStateMachineAttribute("   / ")]
public static IEnumerable`1<KeyValuePair`2<string, string>> (string );
    public static Field (DocumentModel , string , bool , bool );
    public static void (HeaderFooterCollection , HeaderFooterType );
    public static TableCell (TableCellCollection , TableCell& );
    private static     (    );
    private static Color (    , IDictionary`2<string, Color> );
    private static Color (string );
    private static Nullable`1<FontsData> (    ,     );
    private static string (    , string ,     );
    private static void (    ,     );
    private static void (    ,     );
    private static     (    );
    private static TabStop (    );
    private static void (    ,     );
    private static void (    ,     );
    private static void (    , MultipleBorders , bool );
    private static     (    , SingleBorderType[] );
    private static bool (MultipleBorders , MultipleBorderTypes );
    private static SingleBorder (    , bool );
    private static double (double );
    private static void (    , string , Action`1<double> );
    private static void (    , string , Action`1<double> );
    private static Padding  (    );
    private static void (    , Action`1<double> );
    private static TableWidth  (    );
    private static void (    , TablePositioning );
    public static TableColumn  (    );
    private static TableRowHeight  (    );
    private static TableStyleOptions (string );
    private static bool (short , short );
    private static bool (    ,    & );
    public static void (    ,     );
    public static TextBox (Paragraph ,     );
    public static TextBox (TextBox );
    public static void (string , Action`2<string, string> );
    private static void (    , Action`2<string, string> );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private IList`1<Color> ;
    private IDictionary`2<string, Color> ;
    private     ;
    public IList`1<Color> ();
    public void (IList`1<Color> );
    public IDictionary`2<string, Color> ();
    public void (IDictionary`2<string, Color> );
    public     ();
    public void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    internal    (    );
    protected virtual ​      ​ ();
    protected virtual string    ​ (    );
    private protected virtual        ​ (​   );
    private protected virtual ​      ​ (    );
    protected virtual string    ​ (​   , int );
    internal     (​   , int , String& );
}
internal abstract class     : object {
    private bool ;
    public bool ();
    private void (bool );
    public void ();
    protected virtual void    ​ ();
    protected void ();
    [NullableContextAttribute("1")]
internal static void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      { get; private set; }
    private static    ();
    private    ( );
    public    (    ,     );
    public    (IList`1<   > ,     );
    public virtual     ​ ();
    [NullableContextAttribute("2")]
private     ();
    [NullableContextAttribute("2")]
private void (    );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public     (    ,     );
    public IList`1<   > ();
    public void (IList`1<   > );
    [IteratorStateMachineAttribute("   /")]
private sealed virtual override IEnumerable`1<   >    ​ (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private    ;
    private    ;
    private DocumentModel ;
    public    (   );
    public  ();
    public MultiContentRange (int );
    private MultiContentRange (int );
    public HeaderFooter (int );
    public HeaderFooter (int );
    private static HeaderFooter (IEnumerable`1< ​> );
    private bool (int );
    private IList`1<ContentPosition> (int );
    private  ​ (int , bool );
    private static  ​ (IEnumerable`1< ​> , bool );
    private static bool ( ​ , bool );
    private static List`1< ​> ( ​ , bool );
    private static    (   , bool );
    private static bool (   );
    private static List`1< ​> (   , bool );
    private static bool (   );
    private static bool ( ​ );
    private static  ​ (   , bool );
    private IList`1<ContentPosition> (int );
    private List`1<ContentPosition> (int , bool );
    private static List`1<ContentPosition> ( ​ , bool );
    private static ContentPosition ( ​ , bool );
    private static ContentPosition (Element , bool );
    private static Element (Element , bool );
    private static IList`1<ContentPosition> (IList`1<ContentPosition> , IList`1<ContentPosition> , bool );
    private static MultiContentRange (IList`1<ContentPosition> );
    private static MultiContentRange (IList`1<ContentPosition> , IList`1<ContentPosition> );
}
[NullableContextAttribute("2")]
internal interface     {
    public abstract virtual ​      ​ ();
    public abstract virtual void    ​ (​   );
}
internal class     :     {
    private bool ;
    private     ;
    private bool ;
    public    (bool ,     );
    public bool ();
    public virtual int    ​ (int );
    [NullableContextAttribute("1")]
public virtual void    ​ (Byte[] , int , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static [] ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    internal    (Byte[] , ​   );
    private static    ();
    internal virtual bool    ​ ();
    internal virtual     ​ ();
    private protected virtual        ​ (   & );
    internal bool (Stream );
    internal static int (int );
    internal static ​   (    , IEnumerable`1<   > );
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1<   > (​   );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
public byte  { get; public set; }
    internal    (Byte[] , int );
    public byte (int );
    public void (int , byte );
    private int (int );
    private void (int , int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public void ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    private bool ;
    private    (bool );
    private static    ();
    public bool ();
    public virtual string ToString();
}
[DefaultMemberAttribute("Item")]
[DebuggerTypeProxyAttribute("GemBox.Collections.CollectionDebugView`1<   >")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
private List`1<   > ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<   , UInt16[]> ;
    [DebuggerBrowsableAttribute("0")]
private UInt16[] ;
    public bool IsReadOnly { get; }
    public int Count { get; }
    public     Item { get; public set; }
    internal    (    , List`1<   > );
    private static    ();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual int get_Count();
    public sealed virtual     get_Item(int );
    public sealed virtual void set_Item(int ,     );
    public sealed virtual bool Contains(    );
    public sealed virtual int IndexOf(    );
    public sealed virtual void Insert(int ,     );
    public sealed virtual void Add(    );
    public sealed virtual void RemoveAt(int );
    public sealed virtual bool Remove(    );
    public sealed virtual void Clear();
    public sealed virtual void CopyTo(   [] , int );
    public sealed virtual IEnumerator`1<   > GetEnumerator();
    internal void ();
    internal UInt16[] (    );
    internal     (UInt16[] , int );
    private static UInt16[] (List`1<   > ,     );
    private static Dictionary`2<   , UInt16[]> (List`1<   > );
    internal void ();
    internal static void (    );
    private sealed virtual override bool    ​ ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override object    ​ ();
    private sealed virtual override object    ​ (int );
    private sealed virtual override void    ​ (int , object );
    private sealed virtual override bool    ​ (object );
    private sealed virtual override int    ​ (object );
    private sealed virtual override void    ​ (int , object );
    private sealed virtual override int    ​ (object );
    private sealed virtual override void    ​ (object );
    private sealed virtual override void    ​ (Array , int );
    private sealed virtual override IEnumerator    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private int ;
    private bool ;
    private int ;
    private     ;
    public     Data { get; }
    public    (    );
    [CompilerGeneratedAttribute]
public sealed virtual     get_Data();
    private void (int );
    private void (int );
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    public sealed virtual void LoadInputs();
    public sealed virtual void SaveToOutputs();
    public sealed virtual void Unknown();
    public sealed virtual void Number(double );
    public sealed virtual void Expression(Action`1[] );
    public sealed virtual void Add();
    public sealed virtual void Sub();
    public sealed virtual void Mul();
    public sealed virtual void Div();
    public sealed virtual void Idiv();
    public sealed virtual void Mod();
    public sealed virtual void Neg();
    public sealed virtual void Abs();
    public sealed virtual void Ceiling();
    public sealed virtual void Floor();
    public sealed virtual void Round();
    public sealed virtual void Truncate();
    public sealed virtual void Sqrt();
    public sealed virtual void Sin();
    public sealed virtual void Cos();
    public sealed virtual void Atan();
    public sealed virtual void Exp();
    public sealed virtual void Ln();
    public sealed virtual void Log();
    public sealed virtual void Cvi();
    public sealed virtual void Cvr();
    public sealed virtual void Eq();
    public sealed virtual void Ne();
    public sealed virtual void Gt();
    public sealed virtual void Ge();
    public sealed virtual void Lt();
    public sealed virtual void Le();
    public sealed virtual void And();
    public sealed virtual void Or();
    public sealed virtual void Xor();
    public sealed virtual void Not();
    public sealed virtual void Bitshift();
    public sealed virtual void True();
    public sealed virtual void False();
    public sealed virtual void If(Action`1<IPdfPostScriptContext> );
    public sealed virtual void Ifelse(Action`1<IPdfPostScriptContext> , Action`1<IPdfPostScriptContext> );
    public sealed virtual void Pop();
    public sealed virtual void Exch();
    public sealed virtual void Dup();
    public sealed virtual void Copy();
    public sealed virtual void Index();
    public sealed virtual void Roll();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    internal    (    , int ,     );
    public virtual bool    ​ ();
    public virtual        ​  ();
    public virtual        ​  ();
    public virtual double    ​  ();
    public virtual void    ​ (double );
    public virtual double    ​  ();
    public virtual void    ​ (double );
    internal     ();
    internal void (Stream );
    internal void (string );
    protected virtual FontFamily    ​ (    );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static T[] (IList`1<T> );
    [ExtensionAttribute]
public static TOutput[] (IList`1<TInput> , Converter`2<TInput, TOutput> );
    [ExtensionAttribute]
public static    [] (   [] ,    [] );
    [ExtensionAttribute]
public static    [] (IList`1<   > ,    [] );
    [ExtensionAttribute]
public static    [] (   [] , int , bool );
    [ExtensionAttribute]
public static    [] (Int32[] );
    [ExtensionAttribute]
public static Double[] (   [] , Double[] );
    [ExtensionAttribute]
public static Double[] (   [] , Double[] );
    [IteratorStateMachineAttribute("   /")]
[ExtensionAttribute]
public static IEnumerable`1<byte> (IList`1<UInt32> , int );
    [IteratorStateMachineAttribute("   /")]
[ExtensionAttribute]
public static IEnumerable`1<UInt32> (IList`1<byte> , int , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private SKCanvas ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<SKColor> ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    public    (SKCanvas ,     );
    public virtual int    ​ ();
    public virtual int    ​ ();
    public virtual void    ​ (int );
    public virtual void    ​ ();
    public virtual void    ​ (    );
    public virtual void    ​ (    ,     ,     );
    public virtual void    ​ (    ,     ,     );
    public virtual void    ​ (    ,     ,     ,     );
    public virtual void    ​ (    ,     ,     ,     );
    public virtual void    ​ (    ,    [] );
    public virtual void    ​ (    ,     ,    [] ,  );
    public virtual void    ​ (    ,     ,  );
    public virtual void    ​ (    ,     );
    public virtual void    ​ (   ,     );
    private void (    ,     , SKPath );
    public virtual void    ​ (    ,     ,     , double , double , double , double );
    private static SKPath ( , bool , SKPath& , SKPath& );
    public virtual void    ​ ();
    public virtual void    ​ ();
    public virtual void    ​ ( );
    public virtual void    ​ (    );
    public virtual void    ​ ( );
    public virtual void    ​ (string , bool , int , string );
    public virtual void    ​ (    );
    public virtual bool    ​ (object );
    public virtual        ​ (    );
    public virtual object    ​  ();
    public virtual bool    ​  ();
    public virtual bool    ​  ();
    public virtual void    ​ (int , string );
    public virtual       ​ (object );
    public virtual        ​ (object ,     ,   & );
    public virtual void    ​ (string );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual Action`2<Double[], Double[]>    ​ ();
    public abstract virtual void    ​ (Action`2<Double[], Double[]> );
    public abstract virtual        ​ ();
    public abstract virtual void    ​ (    );
}
[DefaultMemberAttribute("")]
internal interface     {
    public int  { get; }
    public abstract virtual int    ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private static ConstructorInfo ;
    private ILGenerator ;
    private     ;
    public     Data { get; }
    public    (    );
    private static    ();
    public sealed virtual     get_Data();
    private void ();
    private void ();
    private void ();
    private void (PdfPostScriptCalculatorErrorType , string , int , ConstructorInfo );
    private void (int );
    private void ();
    public sealed virtual void LoadInputs();
    public sealed virtual void SaveToOutputs();
    public sealed virtual void Unknown();
    public sealed virtual void Number(double );
    public sealed virtual void Expression(Action`1[] );
    public sealed virtual void Add();
    public sealed virtual void Sub();
    public sealed virtual void Mul();
    public sealed virtual void Div();
    public sealed virtual void Idiv();
    public sealed virtual void Mod();
    public sealed virtual void Neg();
    public sealed virtual void Abs();
    public sealed virtual void Ceiling();
    public sealed virtual void Floor();
    public sealed virtual void Round();
    public sealed virtual void Truncate();
    public sealed virtual void Sqrt();
    public sealed virtual void Sin();
    public sealed virtual void Cos();
    public sealed virtual void Atan();
    public sealed virtual void Exp();
    public sealed virtual void Ln();
    public sealed virtual void Log();
    public sealed virtual void Cvi();
    public sealed virtual void Cvr();
    public sealed virtual void Eq();
    public sealed virtual void Ne();
    public sealed virtual void Gt();
    public sealed virtual void Ge();
    public sealed virtual void Lt();
    public sealed virtual void Le();
    public sealed virtual void And();
    public sealed virtual void Or();
    public sealed virtual void Xor();
    public sealed virtual void Not();
    public sealed virtual void Bitshift();
    public sealed virtual void True();
    public sealed virtual void False();
    public sealed virtual void If(Action`1<IPdfPostScriptContext> );
    public sealed virtual void Ifelse(Action`1<IPdfPostScriptContext> , Action`1<IPdfPostScriptContext> );
    public sealed virtual void Pop();
    public sealed virtual void Exch();
    public sealed virtual void Dup();
    public sealed virtual void Copy();
    public sealed virtual void Index();
    public sealed virtual void Roll();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    <PixelFormat> {
    [DebuggerBrowsableAttribute("0")]
private static    <, PixelFormat> ;
    [DebuggerBrowsableAttribute("0")]
private Bitmap ;
    private static    ();
    protected virtual    <, PixelFormat>    ​ ();
    public virtual int    ​ ();
    public virtual int    ​ ();
    public Bitmap ();
    public void (Bitmap );
    protected virtual    <byte>    ​  (ArrayPool`1<byte> , int );
    [NullableContextAttribute("0")]
protected virtual bool    ​  (    , ArraySegment`1<byte> , int );
    public sealed virtual void Dispose();
    private static void (Bitmap ,    [] );
    private static void (Bitmap , Byte[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
internal ​   Source { get; }
    internal    (    );
    internal virtual ​   get_Source();
    private protected virtual int    ​ ();
    private protected virtual int    ​ ();
    private protected virtual ​      ​ (    );
    private protected virtual        ​ (​   );
    private protected virtual        ​ (int );
    private protected virtual void    ​ (int ,     );
    private protected virtual void    ​ (    );
    private protected virtual void    ​ (int ,     );
    private protected virtual void    ​ (int );
    private protected virtual bool    ​  (    );
    private protected virtual void    ​ ();
    private protected virtual int    ​  (    );
    private protected virtual IEnumerator`1<   >    ​  ();
    private protected virtual void    ​  (   [] , int );
    public  ();
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [NullableContextAttribute("1")]
internal    (Byte[] , int , int );
    public sealed virtual int    ​ ();
    public sealed virtual void    ​ (int );
    public void (int );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    internal ​   Source { get; }
    [NullableAttribute("2")]
public      { get; }
    private static    ();
    private    ( );
    internal static     (​   );
    internal static     (    ,     );
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    private  ();
    private void ( );
    private     ();
    private ​   ();
    private void (​   );
    private Nullable`1<> ();
    private void (Nullable`1<> );
    public Nullable`1<> ();
    [NullableContextAttribute("2")]
public     ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private  ;
    private  ;
    private Stream ;
    public  ();
    public void ( );
    public  ();
    public void ( );
    public Stream ();
    public void (Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
internal ​   Source { get; }
    private    ( );
    private static    ();
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    internal     ();
    internal static     ();
    internal virtual void    ​ ();
    public     ();
    internal     ();
    internal void (    );
    internal     ();
    private void (    );
    internal static  ( , bool , Boolean& );
    internal string  ();
    internal void (string );
    internal ​    ();
    internal void (​   );
    private sealed virtual override        ​  ();
    private sealed virtual override        ​  ();
    private sealed virtual override        ​ ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override string    ​  ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override     ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<string,    > ;
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<string,    > ;
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<string,    > ;
    [DebuggerBrowsableAttribute("0")]
private static Regex ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    private static    ();
    private    (string ,  );
    public static     (string , bool , bool );
    private static  (bool , bool );
    public string ();
    public bool ();
    public bool ();
    internal static string (string );
    public     (    );
    private Nullable`1<   > ();
    private static Nullable`1<   > (    );
    private Nullable`1<   > ();
    private static Nullable`1<   > (    );
    private Nullable`1<   > ();
    private static Nullable`1<   > (    );
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    private static    ();
    internal    ( );
    public virtual     ​  ();
    private protected virtual        ​  ();
    internal virtual        ​ (    );
}
internal class     :    {
    [NullableContextAttribute("1")]
public    (Stream , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private     ;
    private     ;
    internal    (    );
    internal    (    ,     );
    public     ();
    public void (    );
    public     ();
    public     ();
    public void (    );
    public     (    );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Encoding ;
    [ThreadStaticAttribute]
private static    <byte> ;
    private static    ();
    private static    <byte> ();
    [ExtensionAttribute]
public static int (Stream );
    [ExtensionAttribute]
public static void (Stream , byte );
    [ExtensionAttribute]
private static int (Stream );
    [ExtensionAttribute]
public static ushort (Stream );
    [ExtensionAttribute]
public static void (Stream , ushort );
    [ExtensionAttribute]
public static int (Stream );
    [ExtensionAttribute]
public static void (Stream , int );
    [ExtensionAttribute]
public static UInt32 (Stream );
    [ExtensionAttribute]
public static void (Stream , UInt32 );
    [ExtensionAttribute]
public static long (Stream );
    [ExtensionAttribute]
public static bool (Stream , string , bool );
    [ExtensionAttribute]
public static string (Stream );
    [ExtensionAttribute]
public static string (Stream , int );
    [ExtensionAttribute]
public static string  (Stream );
    [ExtensionAttribute]
public static void (Stream , string );
    [ExtensionAttribute]
public static string (Stream , int );
    [ExtensionAttribute]
public static string  (Stream );
    [ExtensionAttribute]
public static void (Stream , string );
    [ExtensionAttribute]
public static int (Stream , Byte[] );
    [ExtensionAttribute]
public static void (Stream , Byte[] );
    [ExtensionAttribute]
public static int (Stream , Byte[] , int , int );
}
internal static class     : object {
    [NullableContextAttribute("1")]
public static void (object , string , TSaveOptions , string , bool , Action`2<Stream, TSaveOptions> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Func`2<, string> ;
    private int ;
    private     ;
    private     ;
    private  ;
    public    ( );
    public    ( , int );
    public    ( , int , Func`2<, string> );
    [CompilerGeneratedAttribute]
public sealed virtual int    ​ ();
    private void (int );
    [CompilerGeneratedAttribute]
public sealed virtual        ​ ();
    [CompilerGeneratedAttribute]
public sealed virtual void    ​ (    );
    [CompilerGeneratedAttribute]
public sealed virtual        ​ ();
    [CompilerGeneratedAttribute]
public sealed virtual void    ​ (    );
    public  ();
    private void ( );
    public Func`2<, string> ();
    public void ( );
    public void ( , int );
    public virtual string ToString();
    public static string (TValue );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal abstract class     : object {
    [NullableAttribute("1")]
private     ;
    private     ;
    private     ;
    private Byte[] ;
    private bool ;
    [NullableAttribute("1")]
public       { get; }
    [NullableContextAttribute("1")]
protected    (IList`1<   > );
    internal bool ();
    internal abstract virtual bool    ​ ();
    internal abstract virtual bool    ​ ();
    internal abstract virtual bool    ​ ();
    public abstract virtual bool    ​ ();
    [NullableContextAttribute("1")]
public     ();
    public      ();
    internal void (    );
    internal      ();
    internal Byte[]  ();
    internal void (Byte[] );
    internal bool ();
    internal void (bool );
    public      ();
    [NullableContextAttribute("1")]
private protected virtual void    ​ (object , CollectionChangeEventArgs );
    internal void (    );
    [NullableContextAttribute("1")]
public abstract virtual        ​  ();
    public     (    );
    [NullableContextAttribute("1")]
public     (string );
    [NullableContextAttribute("1")]
public abstract virtual        ​ (Func`2<   , bool> );
    [NullableContextAttribute("1")]
internal abstract virtual        ​  ();
    [NullableContextAttribute("1")]
private static bool (    );
}
[ExtensionAttribute]
internal static class     : object {
    [ExtensionAttribute]
[NullableContextAttribute("1")]
public static bool (Dictionary`2<TKey, TValue> , TKey , TValue );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Byte[] ;
    private static    ();
    public static bool (string , string );
    private static CngKey (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <> {
    private static    <> ;
    private Func`2<XmlReader, > ;
    private Func`2<XmlReader, > ;
    private Action`2<XmlWriter, > ;
    private static    ();
    public static    <> ();
    public virtual     ​ (    , bool );
    public virtual void    ​ (    ,  );
    private static MethodInfo (Type , string , Type[] );
    private static string (Type );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     : object {
    private bool ;
    private bool ;
    private     ;
    private string ;
    private string ;
    private EventHandler ;
    private  ;
    [NullableAttribute("1")]
private string  ;
    private Encoding  ;
    [NullableAttribute("1")]
public string   { get; private set; }
    [NullableContextAttribute("1")]
internal    ( , string , string );
    [NullableContextAttribute("1")]
internal    ( ,     );
    [NullableContextAttribute("1")]
public    (string , string );
    [NullableContextAttribute("1")]
internal    (    );
    public    ( , string );
    internal string ();
    private void (string );
    internal void (EventHandler );
    internal void (EventHandler );
    public  ();
    private void ( );
    [NullableContextAttribute("1")]
public string ();
    [NullableContextAttribute("1")]
private void (string );
    public Encoding ();
    public void (Encoding );
    internal bool ();
    internal bool ();
    internal bool  ();
    internal      ();
    public string ();
    public void (string );
    private void  ();
    internal void (string , bool , bool , bool );
    [NullableContextAttribute("1")]
internal      ();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static bool (string , string , StringComparison );
    [ExtensionAttribute]
public static int (string , char , StringComparison );
    [ExtensionAttribute]
public static bool (string , char );
    [ExtensionAttribute]
public static bool (string , char );
    [ExtensionAttribute]
public static bool (string , char );
}
internal static class     : object {
    [NullableContextAttribute("1")]
public static void (string ,     ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <UInt32> ;
    private UInt32 ;
    private static    ();
    public UInt32 ();
    public void (UInt32 );
    public static     ();
    public virtual        ​ ();
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private Stream ;
    [DebuggerBrowsableAttribute("0")]
private byte ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public    (Stream , bool );
    public sealed virtual Stream    ​ ();
    public sealed virtual long    ​ ();
    public sealed virtual void    ​ (long );
    public sealed virtual int    ​ ();
    public sealed virtual int    ​ ();
    public sealed virtual byte    ​ ();
    public sealed virtual void    ​ (byte );
    public sealed virtual void Dispose();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static T (T ,    <T> );
    [ExtensionAttribute]
public static bool (T ,    <T> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static bool (string , Int32& , String& );
    public static void (string ,     ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private UInt32 ;
    private Byte[] ;
    public    (UInt32 );
    public UInt32 ();
    public void (UInt32 );
    public Byte[] ();
    public void (Byte[] );
    public static     ();
    public virtual        ​ ();
    public virtual void    ​ (    );
    public virtual void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
public     ;
    [DebuggerBrowsableAttribute("0")]
public     ;
    [DebuggerBrowsableAttribute("0")]
public  ​  ;
    public    (    ,     ,  ​  );
    public Byte[] ();
    public string ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static bool (string , T& );
    public static T (string , T );
    public static T (string );
    public static bool (T , String& );
    public static string (T , string );
    public static string (T );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static    [] (ListTemplateType );
    private static    [] (ListTemplateType );
    private static    [] ();
    private static    [] ();
    private static    [] ();
    private static    [] ();
    private static    [] ();
    private static    [] ();
    private static    [] ();
    private static    []  ();
    private static    []  ();
    private static    []  ();
    private static    []  ();
    private static    []  ();
    private static    []  ();
    private static    []  ();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static [] ;
    private static [] ;
    private static    ();
    [ExtensionAttribute]
public static bool ( ,  );
    [ExtensionAttribute]
public static bool ( ,  );
    [ExtensionAttribute]
public static  ( ,  , bool );
    [ExtensionAttribute]
public static  ( ,  , bool );
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private HorizontalPosition ;
    [DebuggerBrowsableAttribute("0")]
private VerticalPosition ;
    [DebuggerBrowsableAttribute("0")]
private Padding ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> ;
    private    (HorizontalPosition , VerticalPosition , Padding , Nullable`1<bool> );
    public HorizontalPosition ();
    public VerticalPosition ();
    public Padding ();
    public Nullable`1<bool> ();
    public     (HorizontalPosition );
    public     (VerticalPosition );
    public     (Padding );
    public     (bool );
    public sealed virtual bool Equals(    );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private  ;
    private bool ;
    private double ;
    private Nullable`1<   > ;
    private Nullable`1<double> ;
    private     ;
    public    ( , bool , double , Nullable`1<   > , Nullable`1<double> ,     );
    public  ();
    public bool ();
    public double ();
    public Nullable`1<   > ();
    public Nullable`1<double> ();
    public     ();
    internal     (    );
    public virtual string ToString();
    internal static bool (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Char[] ;
    public static Func`2<   , > ;
    private static    ();
    public static     (    , Func`2<   , bool> , String& , Nullable`1& , Nullable`1& ,    & , String& , Boolean&  );
    public static     (    , Nullable`1& , Nullable`1& );
    public static     (    , String& );
    public static     (    );
    public static bool (    , ParagraphFormat , Func`2<   , bool> , String& , Nullable`1& , Nullable`1& , CharacterFormat& , String&  );
    public static void (    , ParagraphFormat );
    public static     (    , String& ,     );
    public static     (    );
    public static CharacterFormat (    , String& , CharacterFormat );
    public static CharacterFormat (    );
    public static TableFormat (    , bool , String& , TableStyleOptions& );
    public static TableFormat (    , bool );
    public static TableRowFormat (    );
    public static TableCellFormat (    ,    & );
    public static TableCellFormat (    );
    public static TableStyleFormat (    );
    private static TableStyleFormatType (string );
    public static void (    , PageSetup );
    private static void (    , string , Action`1<double> );
    public static void (    , PageMargins );
    public static void (    , PageSetup );
    public static void (    , PageSetup );
    public static Nullable`1<FontsData> (    );
    public static TableColumn  (    );
    public static      (    );
    public static TableCell (TableCellCollection , TableCell& );
    public static void (    , PageSetup );
    public static void (    , PageSetup );
    public static void (HeaderFooterCollection , HeaderFooterType );
    public static Field (DocumentModel , string , bool , bool );
    private static void (    , Nullable`1& , Nullable`1& );
    private static void (    ,     );
    private static void (    ,     );
    private static      (    );
    private static TabStop  (    );
    private static      (    );
    private static SingleBorder (    , bool );
    private static double (double );
    private static     (    , SingleBorderType[] );
    private static void (    , MultipleBorders , bool );
    private static bool (MultipleBorders , MultipleBorderTypes );
    private static void (    ,     );
    private static void (    ,     );
    private static Padding  (    );
    private static void (    , Action`1<double> );
    private static void (    , TablePositioning );
    private static TableWidth  (    );
    private static double (TableWidthUnit );
    private static TableStyleOptions (string );
    private static TableStyleOptions  (    );
    private static TableRowHeight  (    );
    private static void (    , string , Action`1<double> );
    private static bool (short , short );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<   ,    > ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    internal    (Stream ,     , ​   );
    protected virtual bool    ​ ();
    protected virtual void    ​ ();
    protected virtual        ​ ();
    protected virtual void    ​ (string );
    protected virtual   []    ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static object ;
    private static Regex ;
    private static Dictionary`2<string, Color> ;
    private static Char[] ;
    private static Char[] ;
    private static Char[] ;
    private static Char[] ;
    private static    ();
    [IteratorStateMachineAttribute("   /")]
public static IEnumerable`1<KeyValuePair`2<string, string>> (string , StringBuilder );
    public static StringBuilder (StringBuilder , string , string );
    public static double (string , double );
    public static string (double );
    public static string (double , bool );
    private static double (string , double );
    public static double (string , LengthUnit , double );
    public static Nullable`1<int> (string );
    private static Nullable`1<LengthUnit> (string );
    public static ShapeType (string );
    public static string (ShapeType );
    public static int (string ,     );
    public static HorizontalPositionAnchor (string , HorizontalPositionAnchor );
    public static HorizontalPositionAnchor (string );
    public static string (HorizontalPositionAnchor );
    public static HorizontalPositionType (string );
    public static string (HorizontalPositionType );
    public static VerticalPositionAnchor (string , VerticalPositionAnchor );
    public static VerticalPositionAnchor (string );
    public static string (VerticalPositionAnchor );
    public static VerticalPositionType (string );
    public static string (VerticalPositionType );
    public static TextWrappingStyle (string , TextWrappingStyle );
    public static string (TextWrappingStyle );
    public static WrapTextType  (string );
    public static string (WrapTextType );
    public static VerticalAlignment  (string );
    public static string (VerticalAlignment );
    public static Padding  (string );
    public static string (Padding );
    public static Color (string , Color );
    public static string (Color );
    public static double (string , double );
    public static string (double );
    public static byte (string , byte );
    public static byte  (string );
    public static string (byte );
    public static DrawingMetadata  (string );
    public static string (DrawingMetadata );
    public static double  (string );
    public static string (double );
    public static string (bool , bool );
    public static    (string ,    );
    public static string (   );
    public static bool  (string );
    public static float  (string );
    public static string (float );
    public static float  (string );
    public static string (float );
    public static   (string );
    public static   (string );
    public static   (string );
    private static NotSupportedException (T );
    private static NotSupportedException (string );
    private static NotSupportedException (string , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<byte> ;
    [DebuggerBrowsableAttribute("0")]
private byte ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [NullableContextAttribute("0")]
public    (    , Nullable`1<byte> , byte , int , bool ,   <char> );
    public     ();
    public Nullable`1<byte> ();
    public byte ();
    public int ();
    public bool ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    protected     ;
    private ContentPosition ;
    private int ;
    private bool ;
    protected    (ContentPosition ,     );
    protected int ();
    private void (int );
    protected bool ();
    protected void (bool );
    protected bool ();
    protected void (bool );
    public static ContentPosition (ContentPosition , Element ,     );
    public static ContentPosition (ContentPosition , string ,     );
    public static ContentPosition (ContentPosition , IEnumerable`1<Element> ,     );
    private static ContentPosition (Element ,     );
    protected void (ContentPosition );
    protected abstract virtual ContentPosition    ​ (    );
    protected abstract virtual ContentPosition    ​ (    );
    protected abstract virtual ContentPosition    ​ (    );
    protected abstract virtual ContentPosition    ​ (    );
    protected abstract virtual ContentPosition    ​ (    );
    protected abstract virtual ContentPosition    ​ (    );
    protected abstract virtual ContentPosition    ​ (    );
    protected abstract virtual ContentPosition    ​  (    );
    protected abstract virtual ContentPosition    ​  (    );
    protected abstract virtual ContentPosition    ​  (    );
    protected abstract virtual ContentPosition    ​  (    );
    protected abstract virtual ContentPosition    ​  (    );
    protected abstract virtual ContentPosition    ​  (    );
    protected abstract virtual ContentPosition    ​  (    );
    protected abstract virtual ContentPosition    ​  (    );
    protected abstract virtual ContentPosition    ​  (    );
    protected abstract virtual ContentPosition    ​  (    );
    protected abstract virtual ContentPosition    ​  (    );
    protected abstract virtual ContentPosition    ​ (PreservedDrawingElement );
    protected abstract virtual ContentPosition    ​  (    );
    protected abstract virtual ContentPosition    ​  (    );
    protected abstract virtual ContentPosition    ​  (    );
    protected abstract virtual ContentPosition    ​  (    );
    protected abstract virtual ContentPosition    ​  (    );
    protected abstract virtual ContentPosition    ​  (    );
    protected abstract virtual ContentPosition    ​  (    );
    protected abstract virtual ContentPosition    ​  (    );
    protected abstract virtual ContentPosition    ​  (    );
    protected abstract virtual ContentPosition    ​  (    );
    public sealed virtual void    ​ (DocumentModel );
    public sealed virtual void    ​ (Section );
    public sealed virtual void    ​ (HeaderFooter );
    public sealed virtual void    ​ (TableOfEntries );
    public sealed virtual void    ​ (Table );
    public sealed virtual void    ​ (TableRow );
    public sealed virtual void    ​ (TableCell );
    public sealed virtual void    ​ (Paragraph );
    public sealed virtual void    ​ (Run );
    public sealed virtual void    ​ (SpecialCharacter );
    public sealed virtual void    ​ (Field );
    public sealed virtual void    ​ (Hyperlink );
    public sealed virtual void    ​ (BookmarkStart );
    public sealed virtual void    ​ (BookmarkEnd );
    public sealed virtual void    ​ (PreservedDrawingElement );
    public sealed virtual void    ​ (Shape );
    public sealed virtual void    ​ (Group );
    public sealed virtual void    ​ (TextBox );
    public sealed virtual void    ​ (Picture );
    public sealed virtual void    ​ (PreservedInline );
    public sealed virtual void    ​ (Note );
    public sealed virtual void    ​ (BlockContentControl );
    public sealed virtual void    ​ (InlineContentControl );
    public sealed virtual void    ​ (Chart );
    public sealed virtual void    ​ (CommentStart );
    public sealed virtual void    ​ (CommentEnd );
    public sealed virtual void    ​ (Comment );
    public sealed virtual void    ​ (MoveRangeSeparator );
    public sealed virtual void    ​ (AlignmentTab );
    protected     (    , bool , bool , ElementType );
    private     (ElementType , DocumentModel );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public static double (​   ,  );
    private static double (​   ,  ,     ,     , Int32& );
    private static double (    ,  ,     ,     , Int32& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private BlockCollection ;
    public    (    , BlockCollection );
    public virtual void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private static     ;
    private static ​   ;
    private static     ;
    private Dictionary`2<int,    > ;
    private HashSet`1<int> ;
    private     ;
    private  ;
    private bool  ;
    private      ;
    private      ;
    private      ;
    private      ;
    private      ;
    private      ;
    private      ;
    private     ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    private bool  ;
    public    ( ,     );
    public    (    );
    private static    ();
    private     ();
    private     ();
    private     ();
    public virtual bool    ​ ();
    public virtual double    ​ ();
    public virtual void    ​ ();
    [NullableContextAttribute("0")]
private bool (int ,   <char> ,    & , Boolean& );
    [NullableContextAttribute("0")]
public virtual        ​ (int ,   <char> , bool , Nullable`1& , Byte& , Int32& , Boolean& );
    [NullableContextAttribute("0")]
private void (int ,   <char> , bool ,    & , Boolean& );
    [NullableContextAttribute("0")]
private     (int , int ,   <char> , bool , byte );
    [NullableContextAttribute("0")]
private     (bool , int , int ,   <char> , bool , Boolean& );
    private     ();
    public virtual        ​ ();
    public virtual void    ​ ();
    private static void (    , int );
}
internal class     :     {
    public virtual     ​ ();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
internal abstract class     : Exception {
    [NullableContextAttribute("1")]
private protected    (string , Exception );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<Color> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<Color> ;
    [NullableContextAttribute("2")]
public    (string , Nullable`1<Color> , Nullable`1<Color> );
    public Nullable`1<Color> ();
    public string ();
    public Nullable`1<Color> ();
    public Nullable`1<Color> ();
    public     (Color );
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    );
    public bool ();
    public void (bool );
    public     ();
    public void (    );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public  ();
    public void ( );
    public   ();
    public void ( );
    public double ();
    public void (double );
    public      ();
    public void (    );
    public bool ();
    public void (bool );
    internal static void (    ,     );
    internal static void (    ,     );
}
internal static class     : object {
    [NullableContextAttribute("1")]
public static T (  <T> );
    public static double (int ,  );
    public static int (double ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private StringBuilder ;
    private Stack`1<   > ;
    private int ;
    private int ;
    private string ;
    private double ;
    private double  ;
    internal    (    );
    internal string ();
    private void (    ,     );
    private void (    ,     );
    private static bool (StringBuilder , int );
    internal static bool (char );
    private void (    );
    private void (    ,     );
    private void (    ,     );
    private void (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static     ( );
    public static void (DocumentModel , Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    internal    (    ,     );
    private static    ();
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ ( );
    public sealed virtual void    ​ ( );
    public sealed virtual void    ​ (double );
    private static ​   ();
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ (double , double , double , double , double , double );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    ,     ,     );
    public sealed virtual void    ​ (    ,     );
    public sealed virtual void    ​ (    ,     );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ (    , double , double );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (    , double );
    public sealed virtual void    ​ ( );
    public sealed virtual void    ​  (double );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (double , double , double , double , double , double );
    public sealed virtual void    ​  ();
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (double , double ,     );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    ,     ,     );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (IList`1<double> );
    public sealed virtual void    ​ (IList`1<double> ,     );
    public sealed virtual void    ​ (IList`1<double> );
    public sealed virtual void    ​ (IList`1<double> ,     );
    public sealed virtual void    ​  (double );
    public sealed virtual void    ​  (double );
    public sealed virtual void    ​ (double , double , double );
    public sealed virtual void    ​ (double , double , double );
    public sealed virtual void    ​ (double , double , double , double );
    public sealed virtual void    ​ (double , double , double , double );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    ,     );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    ,     );
    public sealed virtual void    ​  ();
    private ​   (    );
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual ​      ​  ();
    public sealed virtual void    ​ (EventHandler`1<​  > );
    public sealed virtual void    ​ (EventHandler`1<​  > );
    public sealed virtual void    ​ (EventHandler );
    public sealed virtual void    ​ (EventHandler );
    public sealed virtual void    ​ (    ,     );
    public sealed virtual void    ​ (string ,     );
    public sealed virtual void    ​  ();
    public sealed virtual void    ​ (string );
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
internal interface     {
    public ​   Source { get; }
    [NullableAttribute("2")]
public ​    { get; }
    public abstract virtual ​   get_Source();
    public abstract virtual bool    ​ ();
    [NullableContextAttribute("2")]
public abstract virtual ​      ​  ();
    public abstract virtual bool    ​ ();
    public abstract virtual void    ​ (Stream );
    public abstract virtual void    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    internal    (    ,     );
    private static    ();
    public     (double , double );
    public     (double , double , double , double );
    public     (double , double , double , double );
    public     (double , double , double , double );
    internal     (double , double , double , double ,     );
    public     (double , double , double , double );
    public     (string , double , double , double , double );
    public     (double , double , double , double );
    public     (string , double , double , double , double );
    public     (double , double , double , double );
    public     (    );
    private     (double , double , double , double ,     );
    public     (double , double , double , double );
    public     (    );
    private     (double , double , double , double ,     );
    public      (double , double , double , double );
    public     (    );
    private     (double , double , double , double ,     );
    public  ​   (double , double , double , double );
    public     (double , double , double , double ,  );
    public      (double , double , double , double );
    internal     (double , double , string );
    public     (double , double , string );
    public     (double , double , string );
    private     (double , double ,     );
    internal     (double , double , string , double );
    internal     (double , double , Stream , double );
    private     (double , double , ​   , int );
    public      (double , double , double , double );
    public void ();
    private protected virtual        ​ (​   );
    private protected virtual ​      ​ (    );
    private protected virtual int    ​  (    );
    private protected virtual void    ​ (int ,     , bool );
    private protected virtual void    ​ (    );
    private protected virtual void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private static     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal       { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal       { get; }
    internal    (    ,     );
    private static    ();
    public     ();
    public bool (    );
    public     ();
    public bool (    );
    public double ();
    public bool (double );
    public     ();
    public bool (    );
    public     ();
    public bool (    );
    public  ();
    public bool ( );
    internal double ();
    internal bool (double );
    [NullableContextAttribute("2")]
internal      ();
    [NullableContextAttribute("2")]
internal bool (    );
    [NullableContextAttribute("2")]
internal      ();
    [NullableContextAttribute("2")]
internal bool (    );
    internal      ();
    private bool (    , double );
    private static string (    );
    private void  ();
    public virtual string ToString();
    internal void (    );
    private static      ();
    private      ();
    private sealed virtual override        ​  ();
    private sealed virtual override ​      ​  ();
    private sealed virtual override void    ​ (​   );
    private sealed virtual override bool    ​  ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override        ​  ();
    private sealed virtual override     ​  ();
    private sealed virtual override        ​  ();
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [NullableAttribute("2")]
public string   { get; public set; }
    internal    (    );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    public bool ();
    public void (bool );
    public     ();
    public void (    );
    public double ();
    public void (double );
    public      ();
    public void (    );
    public   ();
    public void ( );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    public double  ();
    public void (double );
    private protected virtual void    ​ ​();
    private     (    ,     , bool ,     , IList`1<   > );
    private     (    ,     , bool , IList`1<   > );
    private void (    , IList`1<   > , bool ,     );
    private void (    , IList`1<   > , bool ,     );
    private void (    , IList`1<   > );
    private void (    , IList`1<   > );
    private void (    , IList`1<   > );
    private static void (    ,     ,     , double , double , double , string , bool  , bool  ,   );
    private static void (double , double , bool ,    & ,    & , Int32& , Int32& );
    private static double ( ,    & , double );
}
internal interface     {
    public abstract virtual     ​ ();
    public abstract virtual     ​ ();
    public abstract virtual void    ​ ( );
    public abstract virtual     ​ ();
    public abstract virtual void    ​ ( );
    public abstract virtual     ​ ();
    public abstract virtual void    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  ​  {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    private static    ();
    private    ( );
    internal static     (    );
    private protected virtual void    ​ (    );
    public virtual     ​ ();
    public     ();
    private protected virtual        ​  ();
    public string ();
    public void (string );
    public bool ();
    public void (bool );
    internal  ();
    internal void ( );
    internal virtual        ​ (    );
    internal virtual void    ​ (    );
    private void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static IEnumerable`1<string> ;
    private static    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [NullableAttribute("2")]
public   { get; public set; }
    [NullableAttribute("2")]
public string  { get; public set; }
    private static    ();
    private    ( );
    internal static     ();
    internal virtual void    ​ ();
    public virtual     ​ ();
    [NullableContextAttribute("2")]
public  ();
    [NullableContextAttribute("2")]
public void ( );
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    internal ​   ();
    public  (    ,  , Nullable`1[] );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static bool (    );
    [ExtensionAttribute]
public static double (    );
    [ExtensionAttribute]
public static double (    );
    [ExtensionAttribute]
public static bool (    );
    [ExtensionAttribute]
public static int (    , int , bool );
    public static bool (int , double , double , Double& );
    [ExtensionAttribute]
public static void (    ,    , Stream , string );
    [ExtensionAttribute]
public static void (    ,    , string );
    [ExtensionAttribute]
public static void (    ,    , Stream );
    [ExtensionAttribute]
public static TContext (   );
    [ExtensionAttribute]
public static    (   , int , int );
    [ExtensionAttribute]
public static    (   , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private     ;
    private  ;
    private bool ;
    private     ;
    private     ;
    private     ;
    private bool  ;
    private double  ;
    private double  ;
    private double  ;
    private double  ;
    private bool  ;
    internal    (    ,     ,  , bool ,     ,     );
    public bool ();
    private void (bool );
    public double ();
    public double ();
    public void (    );
    public void (    ,     );
    private static bool (    ,     ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (    ,     );
    public static void (    ,     );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private     ;
    [NullableContextAttribute("2")]
public    (    );
    public     ();
    public void (    );
    public virtual Style    ​ (DocumentModel );
    public virtual void    ​ ();
    protected virtual void    ​ (DocumentModel ,     );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  ​  {
    private string ;
    private string ;
    private NoteType ;
    public    (    , NoteType , string , string );
    private static bool (Note , SpecialCharacterType& );
    public void (    , Note , int );
    public void ();
    protected virtual   <string,    >  ​ ​ (BlockCollection );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [NullableAttribute("2")]
private string ;
    [NullableAttribute("2")]
private string ;
    private     ;
    private bool ;
    private bool ;
    private bool ;
    private bool ;
    private bool  ;
    private bool  ;
    private string  ;
    private bool  ;
    private string  ;
    private string  ;
    [NullableAttribute("2")]
public string   { get; public set; }
    [NullableAttribute("2")]
public string   { get; public set; }
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    public     ();
    public void (    );
    public bool ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public string ();
    public void (string );
    public bool  ();
    public void (bool );
    public string ();
    public void (string );
    public string ();
    public void (string );
    internal      ();
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    internal static  ;
    protected  ​  ;
    protected    ( ​  );
    public static Inline (    ,  ​  );
    private static Inline (    ,  ​  , Boolean& );
    private static DrawingElement (    ,  ​  );
    public static Inline (    ,  ​  );
    public static Inline (    ,  ​  );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     : object {
    [NullableAttribute("1")]
private static Dictionary`2<int, ShapeType> ;
    private Nullable`1<int> ;
    private ShapeType ;
    private string ;
    private string ;
    private byte ;
    [NullableAttribute("1")]
private string ;
    private bool  ;
    private Color  ;
    private double  ;
    private Nullable`1<bool>  ;
    private Color  ;
    private string  ;
    [NullableAttribute("1")]
private string  ;
    private string  ;
    private string  ;
    private string  ;
    private string  ;
    private      ;
    private      ;
    private string  ;
    [NullableAttribute("1")]
private Layout  ;
    [NullableAttribute("1")]
private      ;
    private      ;
    [NullableAttribute("1")]
private IList`1<   >  ;
    [NullableAttribute("1")]
private IList`1<string>  ;
    private Nullable`1<bool>  ;
    private bool  ;
    private bool  ;
    private Nullable`1<bool>  ;
    private TextDirection  ;
    private Nullable`1<Padding>  ;
    private Nullable`1<VerticalAlignment>  ;
    private Nullable`1<bool>  ;
    private string  ;
    private Nullable`1<double>  ;
    private static object  ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static    []  ;
    [NullableAttribute("1")]
public string   { get; public set; }
    [NullableAttribute("1")]
public string   { get; public set; }
    [NullableAttribute("1")]
public Layout   { get; public set; }
    [NullableAttribute("1")]
public       { get; public set; }
    [NullableAttribute("1")]
public IList`1<   >   { get; public set; }
    [NullableAttribute("1")]
public IList`1<string>   { get; public set; }
    private static    ();
    public ShapeType ();
    public void (ShapeType );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public byte  ();
    public void (byte );
    [NullableContextAttribute("1")]
public string ();
    [NullableContextAttribute("1")]
public void (string );
    public bool  ();
    public void (bool );
    public Color  ();
    public void (Color );
    public double  ();
    public void (double );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public Color  ();
    public void (Color );
    public Nullable`1<int>  ();
    public void (Nullable`1<int> );
    public string ();
    public void (string );
    [NullableContextAttribute("1")]
public string ();
    [NullableContextAttribute("1")]
public void (string );
    public string ();
    public void (string );
    public string  ();
    public void (string );
    public string  ();
    public void  (string );
    public string  ();
    public void  (string );
    public      ();
    public void (    );
    public      ();
    public void (    );
    public string  ();
    public void  (string );
    [NullableContextAttribute("1")]
public Layout  ();
    [NullableContextAttribute("1")]
public void (Layout );
    [NullableContextAttribute("1")]
public      ();
    [NullableContextAttribute("1")]
public void (    );
    public      ();
    public void (    );
    [NullableContextAttribute("1")]
public IList`1<   >  ();
    [NullableContextAttribute("1")]
public void (IList`1<   > );
    [NullableContextAttribute("1")]
public IList`1<string>  ();
    [NullableContextAttribute("1")]
public void (IList`1<string> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public TextDirection  ();
    public void (TextDirection );
    public Nullable`1<Padding>  ();
    public void (Nullable`1<Padding> );
    public Nullable`1<VerticalAlignment>  ();
    public void (Nullable`1<VerticalAlignment> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public string  ();
    public void  (string );
    public Nullable`1<double>  ();
    public void (Nullable`1<double> );
    public static     (int );
    [NullableContextAttribute("1")]
internal      ();
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (    ,     );
    private static TextColumnCollection (    );
    private static     (    ,     , string );
    private static void (    ,     );
    private static void (    ,     );
    private static void (    ,     );
    private static TextColumnCollection (    );
    private static void (    , PageSetup );
    private static void (    ,     );
    private static void (    ,     , bool );
    private static void (    ,     );
    private static void (    ,     );
    private static void  (    ,     );
    public static void  (    ,     );
    public static void  (    ,     );
    public static void  (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual bool    ​ (   & );
    public void (   & ,    & );
    public void (   & ,    & );
    public void (   & ,    & );
    public sealed virtual void    ​ (   & , double );
    public sealed virtual void    ​ (   & , double );
    public     (   & ,    & );
    public void (   & ,    & );
    public bool (   & ,    & , IEqualityComparer`1<double> , Double& );
    public bool (   & ,    & , IEqualityComparer`1<double> , Double& );
    public bool (   & ,    & , IEqualityComparer`1<double> ,    & );
    public sealed virtual bool    ​ (   & ,    & , IEqualityComparer`1<double> );
    public sealed virtual bool    ​ (   & ,    & , IEqualityComparer`1<double> );
    public double (   & );
    public double (   & );
    public sealed virtual bool    ​ (   & , Double& ,    & );
    private sealed virtual override void    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & );
    private sealed virtual override void    ​ (   & ,    & modreq(System.Runtime.InteropServices.InAttribute) );
    private sealed virtual override void    ​ (   & ,    & modreq(System.Runtime.InteropServices.InAttribute) );
    private sealed virtual override        ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) );
    private sealed virtual override void    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & );
    private sealed virtual override bool    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) , IEqualityComparer`1<double> , Double& );
    private sealed virtual override bool    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) , IEqualityComparer`1<double> , Double& );
    private sealed virtual override bool    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) , IEqualityComparer`1<double> ,    & );
    private sealed virtual override double    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) );
    private sealed virtual override double    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static     (    );
    private static TableColumn (    );
    private static     (    );
    private static     (    );
    public static     (    ,     , string );
    public static     (    ,     , string );
    public static     (    ,     , string );
    public static     (    ,     , string );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Dictionary`2<FieldType, string> ;
    private static Dictionary`2<FieldType, string> ;
    private static Dictionary`2<FieldType, string> ;
    private static Dictionary`2<string, FieldType> ;
    private static    ();
    private static void (    ,     , Field , Action );
    private static void (    ,     , Field , FieldType );
    private static void (    ,     , Field );
    public static void (    ,     , Field );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  ​  {
    private Section ;
    private Tuple`2<HeaderFooter, HeaderFooter> ;
    public    (    , int );
    private bool ();
    protected virtual void  ​ ​ ();
    protected virtual void  ​ ​ ();
    protected virtual bool  ​ ​  (    );
    private bool (    , PageSetup , HeaderFooterCollection , NoteSettings , NoteSettings , Action`1<SectionPropertiesRevision> );
    private static ​  (    );
    private void (    , bool , HeaderFooterCollection );
    private void (string , HeaderFooter , bool );
    private void (HeaderFooterCollection , bool );
    private void (SectionCollection , HeaderFooterCollection , HeaderFooterType , bool , bool );
    private HeaderFooter (SectionCollection , HeaderFooterType );
    private void (HeaderFooterCollection , HeaderFooterType , HeaderFooter );
    private void (SectionPropertiesRevision );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual        ​ (Uri , string );
    public abstract virtual void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
internal ​   ;
    internal ​   Source { get; }
    private static    ();
    internal virtual bool    ​ ();
    internal virtual        ​ ();
    internal virtual void    ​ (    );
    public virtual     ​ ();
    internal virtual bool    ​ ();
    public virtual int    ​ ();
    internal virtual        ​  ();
    internal virtual ​      ​  ();
    internal virtual ​   get_Source();
    internal virtual bool    ​ (    , Double& , Double& , Double& );
    internal virtual string    ​ (int );
    internal virtual void    ​ (    , bool , bool ,     );
    internal virtual void    ​ (    , bool , bool ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private static Byte[] ;
    private static Byte[] ;
    private static Byte[] ;
    private static Byte[] ;
    private static Byte[] ;
    private static Byte[] ;
    private static Byte[] ;
    private static Byte[]  ;
    private static Byte[][]  ;
    private static Byte[][]  ;
    private static    ();
    private static bool (Byte[] , Byte[] );
    public static bool (Stream );
    public static LoadOptions (Stream );
    private static Byte[] (Stream );
    private static LoadOptions (Stream );
    public static XmlLoadOptions (Stream , Encoding );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (    ,     , BlockCollection );
    private static void (    ,     , IList`1<Block> , Int32& );
    private static void (    ,     , TableOfEntries );
    private static void (    , int , string );
    private static void (    ,     , TableOfEntries );
    public static void (    ,     , IList`1<Block> );
    public static void (    ,     , Paragraph );
    public static void (    ,     , Paragraph );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual        ​ ();
    public abstract virtual void    ​ (   & );
    public abstract virtual void    ​ (    ,    & modreq(System.Runtime.InteropServices.InAttribute) );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static string (string );
    [ExtensionAttribute]
public static string (string );
    [ExtensionAttribute]
public static string (string );
    [ExtensionAttribute]
public static string (string );
    [ExtensionAttribute]
public static string (string );
    [ExtensionAttribute]
public static string (string );
    [ExtensionAttribute]
public static string (string );
    [ExtensionAttribute]
public static string  (string );
    [ExtensionAttribute]
public static string  (string );
    [ExtensionAttribute]
public static string  (string );
    [ExtensionAttribute]
public static string  (string );
    [ExtensionAttribute]
public static string  (string );
    [ExtensionAttribute]
public static string  (string );
    [ExtensionAttribute]
public static string  (string );
    [ExtensionAttribute]
public static string  (string );
    [ExtensionAttribute]
public static string  (string );
    [ExtensionAttribute]
public static string  (string );
    [ExtensionAttribute]
public static string  (string );
    [ExtensionAttribute]
public static Nullable`1<PictureFormat> ( );
    [ExtensionAttribute]
public static Nullable`1<PictureFormat>  (string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static string (PictureFormat );
    [ExtensionAttribute]
public static Nullable`1<PictureFormat>  (string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static string (PictureFormat );
    [ExtensionAttribute]
public static BorderStyle  (string );
    [ExtensionAttribute]
public static string (BorderStyle );
    [ExtensionAttribute]
public static NumberStyle  (string );
    [ExtensionAttribute]
public static string (Nullable`1<NumberStyle> );
    [ExtensionAttribute]
public static string (NumberStyle );
    [ExtensionAttribute]
public static Nullable`1<Padding>  (string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static string (Nullable`1<Padding> );
    [ExtensionAttribute]
public static string (Padding );
    [ExtensionAttribute]
public static Nullable`1<Padding> (Nullable`1<RelativePadding> , Size );
    [ExtensionAttribute]
public static Padding (RelativePadding , Size );
    [ExtensionAttribute]
public static Nullable`1<RelativePadding> (Nullable`1<Padding> , Size );
    [ExtensionAttribute]
public static RelativePadding (Padding , Size );
    [ExtensionAttribute]
public static OutlineLevel  (string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static string (OutlineLevel );
    [ExtensionAttribute]
public static ListTrailingCharacter  (string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static string (ListTrailingCharacter );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static UnderlineType (string , string );
    [ExtensionAttribute]
public static string (UnderlineType );
    [ExtensionAttribute]
public static string (UnderlineType );
    [ExtensionAttribute]
public static string (int , Nullable`1<NumberStyle> );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static HorizontalAlignment  (string );
    [ExtensionAttribute]
public static string (HorizontalAlignment );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static HorizontalPositionAnchor  (string );
    [ExtensionAttribute]
public static string (HorizontalPositionAnchor );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static HorizontalPositionType  (string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static string (HorizontalPositionType );
    [ExtensionAttribute]
public static Orientation  (string );
    [ExtensionAttribute]
public static string (Orientation );
    [ExtensionAttribute]
public static bool  (string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static TableCellTextDirection (string , string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static void (TableCellTextDirection , String& , String& );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static Nullable`1<VerticalAlignment>  (string );
    [ExtensionAttribute]
public static string (VerticalAlignment );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static VerticalPositionAnchor  (string );
    [ExtensionAttribute]
public static string (VerticalPositionAnchor );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static VerticalPositionType  (string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static string (VerticalPositionType );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static TabStopAlignment  (string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static string (TabStopAlignment );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static TabStopLeader  (string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static string (TabStopLeader );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static string  (string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static string  (string );
    [ExtensionAttribute]
public static string  (string );
    [ExtensionAttribute]
public static Nullable`1<Color> (string , Nullable`1<Color> );
    [ExtensionAttribute]
public static string (Color );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static Nullable`1<LengthUnit>  (string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static string (LengthUnit );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static NoteType  (string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static string (NoteType );
    [ExtensionAttribute]
public static      (string );
    [ExtensionAttribute]
public static     (Inline );
    [ExtensionAttribute]
public static     (Block );
    [ExtensionAttribute]
public static     (Inline );
    [ExtensionAttribute]
public static bool (    , string , string ,  ​ & );
    [ExtensionAttribute]
public static  (TableCell );
    [ExtensionAttribute]
public static double (string , LengthUnit& );
    [ExtensionAttribute]
public static double (string , String& );
    [ExtensionAttribute]
public static string (double , LengthUnit );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static string (double , TableWidthUnit );
    [ExtensionAttribute]
public static double (double , LengthUnit );
    [ExtensionAttribute]
public static string (double , LengthUnit );
    [ExtensionAttribute]
public static double (double , LengthUnit );
    [ExtensionAttribute]
public static string (double , LengthUnit );
    [ExtensionAttribute]
public static double  (string );
    [ExtensionAttribute]
public static double (double , LengthUnit );
    [ExtensionAttribute]
public static string (double , LengthUnit );
    private static bool (string , LengthUnit& );
    [ExtensionAttribute]
public static bool (string , Double& , String& );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static string  (string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static string  (string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static string (string , string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static CultureInfo  (string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
private static String[]  (string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static bool  (string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static Nullable`1<bool>  (string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static Nullable`1<double>  (string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static double (string , double );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static Nullable`1<int> ​(string );
    [ExtensionAttribute]
[NullableContextAttribute("2")]
public static int (string , int );
    [ExtensionAttribute]
public static string (bool );
    [ExtensionAttribute]
public static string (int );
    [ExtensionAttribute]
public static string (double );
    [ExtensionAttribute]
public static int (double );
    [ExtensionAttribute]
public static Nullable`1<int> (Nullable`1<double> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    private CultureInfo ;
    public string ();
    public void (string );
    public CultureInfo ();
    public void (CultureInfo );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
}
[NullableContextAttribute("1")]
internal interface     {
    [NullableAttribute("2")]
public ​     { get; }
    public abstract virtual void    ​ (double );
    public abstract virtual void    ​ (int );
    public abstract virtual void    ​ (int );
    public abstract virtual void    ​ (double );
    public abstract virtual void    ​ (​   , double );
    public abstract virtual void    ​ (​   );
    public abstract virtual void    ​ (double );
    public abstract virtual void    ​ (​   );
    public abstract virtual void    ​ ();
    public abstract virtual void    ​ ();
    public abstract virtual void    ​ (double , double , double , double , double , double );
    public abstract virtual void    ​ (double , double );
    public abstract virtual void    ​ (double , double );
    public abstract virtual void    ​ (double , double , double , double , double , double );
    public abstract virtual void    ​ (double , double , double , double );
    public abstract virtual void    ​ (double , double , double , double );
    public abstract virtual void    ​ ();
    public abstract virtual void    ​ (double , double , double , double );
    public abstract virtual void    ​ ();
    public abstract virtual void    ​ ();
    public abstract virtual void    ​ ();
    public abstract virtual void    ​ ();
    public abstract virtual void    ​  ();
    public abstract virtual void    ​  ();
    public abstract virtual void    ​  ();
    public abstract virtual void    ​  ();
    public abstract virtual void    ​  ();
    public abstract virtual void    ​  ();
    public abstract virtual void    ​  ();
    public abstract virtual void    ​  ();
    public abstract virtual void    ​  ();
    public abstract virtual void    ​  ();
    public abstract virtual void    ​ (double );
    public abstract virtual void    ​ (double );
    public abstract virtual void    ​ (double );
    public abstract virtual void    ​ (double );
    public abstract virtual void    ​ (​   , double );
    public abstract virtual void    ​ (int );
    public abstract virtual void    ​  (double );
    public abstract virtual void    ​ (double , double );
    public abstract virtual void    ​ (double , double );
    public abstract virtual void    ​ (double , double , double , double , double , double );
    public abstract virtual void    ​  ();
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ (double , double ,     );
    public abstract virtual void    ​ (​   );
    public abstract virtual void    ​ (double , double );
    public abstract virtual void    ​ (double , double , double , double , double , double );
    public abstract virtual void    ​ (​   );
    public abstract virtual void    ​ (​   );
    public abstract virtual void    ​ (IList`1<double> );
    public abstract virtual void    ​ (IList`1<double> , ​   );
    public abstract virtual void    ​ (IList`1<double> );
    public abstract virtual void    ​ (IList`1<double> , ​   );
    public abstract virtual void    ​  (double );
    public abstract virtual void    ​  (double );
    public abstract virtual void    ​ (double , double , double );
    public abstract virtual void    ​ (double , double , double );
    public abstract virtual void    ​ (double , double , double , double );
    public abstract virtual void    ​ (double , double , double , double );
    public abstract virtual void    ​ (​   );
    public abstract virtual void    ​ (​   );
    public abstract virtual void    ​ (​   );
    public abstract virtual void    ​ (​   );
    public abstract virtual void    ​ (​   , ​   );
    public abstract virtual void    ​  (​   );
    public abstract virtual void    ​ (​   , ​   );
    public abstract virtual void    ​  ();
    public abstract virtual void    ​  ();
    public abstract virtual void    ​  ();
    [NullableContextAttribute("2")]
public abstract virtual ​      ​  ();
    public abstract virtual void    ​ (EventHandler`1<​  > );
    public abstract virtual void    ​ (EventHandler`1<​  > );
    public abstract virtual void    ​ (EventHandler );
    public abstract virtual void    ​ (EventHandler );
    public abstract virtual void    ​ (    ,     );
    public abstract virtual void    ​ (string ,     );
    public abstract virtual void    ​  ();
    public abstract virtual void    ​ (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private     ;
    private HtmlSaveOptions ;
    private     ;
    private     ;
    private Dictionary`2<Stream,    > ;
    private Func`2<   , string> ;
    private bool  ;
    private     ;
    private      ;
    private int  ;
    public    (    , Func`2<   , string> , DocumentModel , HtmlSaveOptions , Dictionary`2<Stream,    > , int , bool , bool  ,      );
    public int ();
    public void (int );
    public void (BlockCollection , bool , bool );
    private int (BlockCollection , int , MultipleBorders& );
    private void (Block , bool , bool , bool );
    private void (Paragraph , bool , bool );
    private string (Paragraph );
    private void (Group );
    private string (Picture );
    private static double (InlineCollection , double );
    private void (ListItem , ParagraphFormat );
}
internal class     :     {
    [NullableContextAttribute("1")]
internal    (    );
    private protected virtual void    ​ ​();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private bool ;
    public    (ContentRange , bool );
    protected bool ();
    private void (bool );
    protected virtual void    ​ (Run , int , int );
    protected virtual void    ​ (Element );
    private static void (Element );
    protected virtual bool    ​ (Element , Nullable`1<int> , bool );
    protected virtual int    ​ (int , bool , int , bool );
    protected virtual int    ​ (int , bool , int , bool );
    protected virtual void    ​ (ElementCollection , int , int );
    protected virtual void    ​ (Element );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual ​      ​ ();
    public abstract virtual void    ​ (    ,     );
    public abstract virtual ​      ​ (    );
    public abstract virtual void    ​ (    , ​   );
    public abstract virtual bool    ​ (​   , ​   );
    public abstract virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private int ;
    private Random ;
    private bool ;
    private bool ;
    private bool ;
    private bool ;
    private DocumentModel ;
    private  ​   ;
    private Stack`1<   >  ;
    private      ;
    private BitArray  ;
    private      ;
    private CharacterFormat  ;
    private ParagraphFormat  ;
    private CharacterFormat  ;
    private PageSetup  ;
    private     ();
    private void ();
    private static bool (Run );
    private static void (    );
    private     ();
    private void ();
    private void (int );
    private     ();
    private     (    , bool , Nullable`1<bool> );
    private     (    , bool , Nullable`1<bool> );
    private     (    );
    private Picture (string );
    private void ();
    private     (    );
    private     (    );
    private bool (   & );
    private     (string , string , bool ,     );
    private     (FieldType ,     , string );
    private void (string ,     );
    private void (    );
    private void (    );
    private void (    );
    private void (    );
    private void  (    );
    private void  (    );
    private void  (    );
    private void  (    );
    private void  (    );
    private void  (    );
    private void  (    );
    private void  (    );
    private static void ( ​  , FormDropDownData );
    private static void (    , FormDropDownData );
    private void (    ,     );
    private void  (    );
    private void  (    );
    private void (    , HeaderFooterType );
    private void (    ,     );
    private void (    ,     );
    private void  (    );
    private void  (    );
    private void  (    );
    private void ( ​  ,     );
    private void  (    );
    private void  (    );
    private void ( ​  , Section );
    private DocumentModel ( ​  );
    private IList`1<Block> ( ​  , DocumentModel ,     , Boolean& );
    public static DocumentModel (Stream , string , HtmlLoadOptions );
    public static DocumentModel (Stream ,     , Encoding , string );
    public static IList`1<Block> (string , DocumentModel , HtmlLoadOptions ,     , Boolean& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    internal    (​   );
    public    ( );
    public    (string );
    internal static     ( );
    internal ​   ();
    public  ();
    public virtual string ToString();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<KeyValuePair`2<string, string>> ;
    private List`1<string> ;
    private ShapeType ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public List`1<KeyValuePair`2<string, string>>  { get; public set; }
    public List`1<KeyValuePair`2<string, string>> ();
    public void (List`1<KeyValuePair`2<string, string>> );
    public List`1<string> ();
    public void (List`1<string> );
    public ShapeType ();
    public void (ShapeType );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public    (double , double , double , IList`1<   > );
    public double ();
    public double ();
    public double ();
    public virtual     ​ ();
    public virtual ColorDataName    ​ ();
    protected virtual        ​ (    );
    protected virtual        ​ (IList`1<   > );
    protected virtual bool    ​ (    );
    protected virtual int    ​ ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private    ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private    [] ;
    public    (Byte[] );
    internal Byte[] ();
    internal    ();
    internal IList`1<   > ();
    internal string ();
    public Byte[] ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    protected    (    );
    public     ();
    public abstract virtual     ​ ();
    public sealed virtual int CompareTo(    );
    public virtual string ToString();
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private GCHandle ;
    [NullableContextAttribute("1")]
public    (object );
    private    (GCHandle );
    [NullableContextAttribute("1")]
public static     (Byte[] , int , IntPtr& );
    public IntPtr ();
    public IntPtr (int );
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static   <string, Nullable`1<>> ;
    private static String[] ;
    private static String[] ;
    private static String[] ;
    private static String[] ;
    private static    ();
    private static bool (string );
    private static bool (string );
    private static bool (string );
    private static bool (string );
    private static String[] (IDictionary`2<string, string> );
    private static Nullable`1<> (string );
    private static Nullable`1<> (string );
    private static bool (string ,     ,     ,     ,     ,  );
    public static void (string ,     ,  );
    public static void (string ,     ,  );
    public static void (string ,     ,  );
    public static void (string ,     ,  );
    public static void (string ,     ,  );
    public static void (string ,     ,  );
    public static void (string ,     ,  );
    public static void  (string ,     ,  );
    public static void  (string ,     ,  );
    public static void  (string ,     ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <UInt32> ;
    private static <UInt32> ;
    private UInt32 ;
    private static    ();
    public UInt32 ();
    public void (UInt32 );
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
    public static     ();
    public virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
}
[ExtensionAttribute]
internal static class     : object {
    [ExtensionAttribute]
[NullableContextAttribute("1")]
public static void (StringWriter , string , object , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private List`1< ​ > ;
    public void ( ​  );
    public  ​  ();
    public bool ( ​  );
    public  ​  ();
    public bool (string );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static char (IFormatProvider );
    public static bool (T[] );
    public static void (T& , T& );
    public static string (string , string , string , string );
    public static bool (Type , String[] );
    public static bool (string );
    public static string (String[] );
    public static T (T& );
    public static string (string );
    public static string (string );
    private static bool (char );
    public static Byte[] (string );
    public static Byte[] (string , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    public    (    );
    public     ();
    public sealed virtual        ​ ();
    public sealed virtual bool    ​ ( ​  ,    & );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <ushort> ;
    private static  <UInt32> ;
    private static <UInt32> ;
    private string ;
    private string ;
    private static    ();
    public string ();
    public void (string );
    public string ();
    public void (string );
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
    public static     ();
    public virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    internal static IDictionary`2<string,    > ;
    private static    ();
    public static string (T );
    public static bool (T );
    public static bool (string );
    public static string (string );
    public static T (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static  ;
    private static [] ;
    private static    ();
    public static  (int );
    public static     (    , string , string , string , string , string );
    public static  (int );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
internal static bool (Exception );
    [ExtensionAttribute]
private static Exception (Exception );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
public static     ;
    private static    ();
    private protected virtual bool    ​ ();
    private protected virtual int    ​ (int );
    private protected virtual int    ​ (string );
    private protected virtual int    ​ (string , Byte[] , int );
    private protected virtual string    ​ (Byte[] , int , int );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    public  FillDataType { get; }
    private    ( );
    private static    ();
    public virtual  get_FillDataType();
    public virtual bool Equals(    );
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  {
    private static Dictionary`2<string, > ;
    public static    ;
    internal    (  [] );
    private static    ();
    protected virtual Exception ​ (  [] );
    public static  (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ThreadStaticAttribute]
private static StringBuilder ;
    public static StringBuilder (int );
    public static void (StringBuilder );
    public static string (StringBuilder );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private string ;
    public    (string );
    protected virtual void    ​ ();
    public virtual bool    ​ ();
}
internal class     :     {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private IList`1<   > ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    public    (string , string , bool );
    public string ();
    private void (string );
    public string ();
    private void (string );
    public bool ();
    public Byte[] ();
    private void (Byte[] );
    public IEnumerable`1<   > ();
    public void (Stream );
    public void (Byte[] );
    public void (string );
    public void (string );
    public void (    );
    private sealed virtual override object    ​ ();
    public     (Predicate`1<   > , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    private string ;
    private Byte[] ;
    private string ;
    private string ;
    private    ;
    public    (string , string , Byte[] , string , string );
    public sealed virtual bool   ​ ();
    public sealed virtual string   ​ ();
    public sealed virtual string   ​ ();
    public sealed virtual Byte[]   ​ (string );
    public sealed virtual void   ​ (XmlWriter );
    public void (XmlWriter );
    private void (XmlWriter );
    private void (XmlWriter );
    private bool ();
    private bool ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    private string ;
    private  ;
    private string ;
    private Nullable`1<DateTimeOffset> ;
    private string ;
    private string ;
    private string  ;
    private string  ;
    private string  ;
    private string  ;
    private string  ;
    private string  ;
    private Nullable`1<DateTimeOffset>  ;
    private Nullable`1<DateTimeOffset>  ;
    public string ();
    public void (string );
    public string ();
    public void (string );
    public   ();
    public string ();
    public void (string );
    public Nullable`1<DateTimeOffset>  ();
    public void (Nullable`1<DateTimeOffset> );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string  ();
    public void  (string );
    public string  ();
    public void  (string );
    public string  ();
    public void  (string );
    public string  ();
    public void  (string );
    public Nullable`1<DateTimeOffset>  ();
    public void (Nullable`1<DateTimeOffset> );
    public Nullable`1<DateTimeOffset>  ();
    public void (Nullable`1<DateTimeOffset> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
private string ;
    private string ;
    private bool ;
    private object ;
    protected    (string , string , bool );
    public string ();
    public bool ();
    public object ();
    public void (object );
    public sealed virtual string    ​ ();
    public sealed virtual string    ​ ();
    public Stream ();
    public void (Action`1<Stream> );
    public Byte[] ();
    protected abstract virtual Stream    ​ ();
    protected abstract virtual void    ​ (Action`1<Stream> );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private    <string> ;
    private    <DateTime> ;
    public    (    );
    public string ();
    public void (string );
    public DateTime ();
    public void (DateTime );
    public void (   <string> );
    public void (   <DateTime> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public static Encoding ;
    public static Encoding ;
    private Char[] ;
    private List`1<int> ;
    private  ;
    private Encoder ;
    private  ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    private Encoding  ;
    public    (Encoding );
    private static    ();
    public int ();
    public void (int );
    public int ();
    private void (int );
    public Encoding ();
    private void (Encoding );
    public List`1<int> ();
    public  ();
    private void ( );
    public   ();
    private void ( );
    public int ();
    public int ();
    public   ();
    private int (string , int );
    private void (char , int );
    public int (string , int , bool );
    public      ();
    public void (    );
    public void ( ,  );
    public static int (    ,     );
}
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public int ();
    protected void (int );
    public int ();
    protected void (int );
    protected abstract virtual void    ​ ();
    protected void (bool );
    public sealed virtual void Dispose();
    public abstract virtual bool    ​ ();
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private object ;
    private IDictionary`2<string,    > ;
    private IDictionary`2<string,    > ;
    internal Dictionary`2<string, string> ;
    public string  { get; public set; }
    public    (object );
    public object ();
    private void (object );
    public IDictionary`2<string,    > ();
    public IDictionary`2<string,    > ();
    public bool ();
    public string (string );
    public void (string , string );
    public bool (string );
    [IteratorStateMachineAttribute("   /")]
public IEnumerable`1<KeyValuePair`2<string, string>> (string );
    public bool (string );
    public void (    , string , string );
    public void (    , string );
    public void (    , String[] );
    public void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (int , int ,  ,     ,     );
    public int ();
    public int ();
    public  ();
    public     ();
    public     ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​  []  ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    internal ​   Source { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private       { get; }
    [NullableAttribute("2")]
public       { get; private set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public    <KeyValuePair`2<   ,    >>   { get; }
    [NullableAttribute("2")]
public string   { get; public set; }
    [NullableAttribute("2")]
public       { get; }
    [NullableAttribute("2")]
public       { get; public set; }
    [NullableAttribute("2")]
public       { get; private set; }
    private static    ();
    private    ( );
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    internal static     (string );
    internal static     (string );
    internal static     (string ,     , bool , int ,    & );
    internal static     (FileInfo );
    internal virtual void    ​ ();
    [NullableContextAttribute("2")]
private     ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    public bool ();
    public void (bool );
    public string ();
    public void (string );
    public bool ();
    public void (bool );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
private void (    );
    public      ();
    public     (string );
    public    <KeyValuePair`2<   ,    >>  ();
    public     (    );
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    public      ();
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public void (    );
    public   ();
    public void ( );
    internal bool ();
    internal void ( );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
private void (    );
    public     (string );
    public virtual string ToString();
    [NullableContextAttribute("2")]
internal static string (​   );
    private static ​   ( , ​  & );
    private void (​   , ​   );
    private void ();
    private static ​  []  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private static String[][] ;
    [DebuggerBrowsableAttribute("0")]
private static String[] ;
    [DebuggerBrowsableAttribute("0")]
private static String[] ;
    [DebuggerBrowsableAttribute("0")]
private static String[] ;
    [DebuggerBrowsableAttribute("0")]
private static String[] ;
    [DebuggerBrowsableAttribute("0")]
private static String[] ;
    [DebuggerBrowsableAttribute("0")]
private static String[] ;
    [DebuggerBrowsableAttribute("0")]
private static String[][][]  ;
    [DebuggerBrowsableAttribute("0")]
private static Int32[]  ;
    [DebuggerBrowsableAttribute("0")]
private static Int32[]  ;
    [DebuggerBrowsableAttribute("0")]
public byte  ;
    [DebuggerBrowsableAttribute("0")]
public byte  ;
    [DebuggerBrowsableAttribute("0")]
public byte  ;
    [DebuggerBrowsableAttribute("0")]
public byte  ;
    [DebuggerBrowsableAttribute("0")]
public byte  ;
    [DebuggerBrowsableAttribute("0")]
public byte  ;
    [DebuggerBrowsableAttribute("0")]
public byte  ;
    [DebuggerBrowsableAttribute("0")]
public byte  ;
    [DebuggerBrowsableAttribute("0")]
public byte  ;
    [DebuggerBrowsableAttribute("0")]
public byte  ;
    public    (byte , byte , byte , byte , byte , byte , byte , byte  , byte  , byte  );
    public    (string );
    private static    ();
    public  ();
    public string ();
    public string ();
    public string ();
    public sealed virtual int CompareTo(    );
    public virtual bool Equals(object );
    public sealed virtual bool Equals(    );
    public virtual int GetHashCode();
    public virtual string ToString();
    public string (bool , bool );
    private static string (byte , int );
    private static string (byte , int , byte );
    private static string (byte , int , byte , bool , bool );
    private static byte (string , int );
    private static int (char );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    internal ​   Source { get; }
    [NullableAttribute("2")]
public string  { get; }
    [NullableAttribute("2")]
public string  { get; public set; }
    private static    ();
    private    ( );
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    public static     ();
    [NullableContextAttribute("2")]
public string ();
    public  ();
    public void ( );
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    public int ();
    public void (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (    ,     ,     ,     );
    public     ();
    public     ();
    public     ();
    public     ();
    public bool ();
    public     (    ,     );
    public virtual int GetHashCode();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual string ToString();
    public sealed virtual string ToString(string , IFormatProvider );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private  ;
    private Nullable`1<   > ;
    private IList`1<   > ;
    private IList`1<   > ;
    private IList`1<Double[]> ;
    private  ​  ;
    public    (IList`1<   > , IList`1<Double[]> ,  , Nullable`1<   > );
    private IList`1<   > ();
    private void (IList`1<   > );
    public IList`1<   > ();
    public void (IList`1<   > );
    public IList`1<Double[]> ();
    public void (IList`1<Double[]> );
    [CompilerGeneratedAttribute]
public sealed virtual  ​     ​ ();
    private static int (int );
    [IteratorStateMachineAttribute("   /")]
private IEnumerable`1<   > ();
    private static     (double , double , IList`1<   > );
    private static Double[] (Double[] , Double[] , Double[] , Double[] , double , double );
    private static double (double , double , double );
    private static double (int , int , double );
    private static int (int , int );
    public sealed virtual void    ​ (int , int , Double[] , Action`3<int, int, Double[]> );
}
internal static class     : object {
    [NullableContextAttribute("1")]
public static FontFamily (Uri , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    internal ​   Source { get; }
    internal    (    );
    internal virtual ​   get_Source();
    internal virtual ​      ​ ();
    internal virtual ​      ​  ();
    internal virtual        ​ ();
    internal virtual bool    ​  ();
    private protected virtual bool    ​  ();
    private protected virtual bool    ​  ();
    private protected virtual object    ​ ();
    private protected virtual int    ​ ();
    private protected virtual int    ​ ();
    private int ();
    private void (int );
    public     (string );
    public     (string , bool );
    private     (int , DirectoryInfo ,     );
    private protected virtual        ​ (​   );
    private protected virtual ​      ​ (    );
    private protected virtual        ​ (int );
    private protected virtual void    ​ (int ,     );
    private protected virtual void    ​ (int ,     );
    private void (int ,     );
    private protected virtual void    ​ (int );
    private protected virtual bool    ​  (    );
    private protected virtual void    ​ ();
    private protected virtual int    ​  (    );
    private protected virtual bool    ​  (    );
    private protected virtual void    ​  (   [] , int );
    public  ();
    private protected virtual IEnumerator`1<   >    ​  ();
    private void (    );
    private void (    ,     );
    private void ();
    private void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    public static int (string , int , Int32& , Boolean& );
    public static int (string , int , Int32& , Boolean& );
    public static bool (int );
    public static void (int , Char& , Char& );
    public static int (UInt32 );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal ​   Source { get; }
    internal    (    );
    private static    ();
    private  ();
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    private Nullable`1<   > (​   );
    private void (​   , Nullable`1<   > );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static     ;
    private static    ();
    public static     (Stream );
    public static     (    );
    public static    [] (    );
    private static     (    );
    private static    [] (    );
    private static     (    );
    private static     (    );
    private static    [] (    );
    private static      (    );
    private static      (    );
    private static []  (    );
    private static   (    );
    private static void (    ,    [] );
    private static      (    );
}
internal class     :     {
    private     ;
    private     ;
    private double ;
    private double ;
    private double ;
    [NullableContextAttribute("1")]
public    ( ​  ,     ,  ,     , bool ,     , bool );
    protected virtual double    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    internal     ;
    private   <char> ;
    private   <int> ;
    private   <int> ;
    private   <int> ;
    private   <​  > ;
    private   <> ;
    private int  ;
    private int  ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    public     ();
    internal double ();
    public void (    ,     , string , double ,     ,     ,  );
    public void (int );
    public void (char , int );
    public void (string , int , int , int );
    public void (int );
    public void (int , int , ​   ,  );
    public void (IList`1<char> , IList`1<ushort> );
    public void (IList`1<ushort> , IList`1<double> , IList`1<Point> );
    public     ();
    internal     (string ,     ,     ,  ,     );
    internal void ();
    [NullableContextAttribute("0")]
internal   <char> (int , int );
    [NullableContextAttribute("0")]
internal   <int> (int , int );
    [NullableContextAttribute("0")]
internal   <int> (int , int );
    [NullableContextAttribute("0")]
internal   <int> (int , int );
    [NullableContextAttribute("0")]
internal   <​  > (int , int );
    [NullableContextAttribute("0")]
internal   <> (int , int );
    internal int (int , int );
    internal void (int , int , int );
    internal void (int , int , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ​   {
    private long ;
    private long ;
    public    (long , long );
    public long ();
    public ​   (​   , bool );
    public virtual Stream ​  ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private Language ;
    [DebuggerBrowsableAttribute("0")]
private CultureInfo ;
    [DebuggerBrowsableAttribute("0")]
private CultureInfo ;
    [DebuggerBrowsableAttribute("0")]
private CultureInfo ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    private static     ;
    private static     ;
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<string,    >  ;
    [DebuggerBrowsableAttribute("0")]
private static   <string,    >  ;
    private string  ;
    [DebuggerBrowsableAttribute("0")]
private XmlLanguage  ;
    private    (string );
    private static    ();
    internal Language ();
    public static     ();
    public static     ();
    internal static     ();
    public string ();
    internal  ();
    public static     (string );
    private static     (string , object );
    private     ();
    private CultureInfo  ();
    private CultureInfo  ();
    public CultureInfo  ();
    private bool (CultureInfo& );
    internal bool (    );
    private bool (CultureInfo );
    public virtual string ToString();
    private bool (string );
    private static string (string );
    private static int (string , Int32& , bool );
    private static string (string );
    private static CultureInfo (string );
    internal XmlLanguage  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
internal ​   ;
    internal ​   Source { get; }
    private static    ();
    private    (​   );
    internal    (int );
    internal sealed virtual ​   get_Source();
    internal sealed virtual ​      ​ ();
    private protected virtual int    ​ ();
    private protected virtual int    ​ ();
    private protected virtual        ​ (int );
    private protected virtual void    ​ (int ,     );
    private protected virtual void    ​ (int ,     );
    private protected virtual void    ​ (int );
    private protected virtual void    ​ ();
    private protected virtual int    ​  (    );
    private protected virtual        ​ (​   );
    private protected virtual ​      ​ (    );
    public void (double , double );
}
internal class     : ​   {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private static UnicodeFunctions ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private Buffer ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private   <Feature> ;
    private static    ();
    public virtual  ​  ​ ();
    [NullableContextAttribute("1")]
protected virtual void ​  ​ (    , int , int );
    public virtual void Dispose();
    [NullableContextAttribute("1")]
private   <Feature> (    , int , int );
}
[ExtensionAttribute]
internal static class     : object {
    [ExtensionAttribute]
[NullableContextAttribute("1")]
public static void (    ,     ,     , bool );
}
[DefaultMemberAttribute(" ")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private    <> ;
    [DebuggerBrowsableAttribute("0")]
private    <int> ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public    <>  { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
public    { get; public set; }
    public    (   <> ,    <int> );
    public    <> ();
    public    <int> ();
    public int ();
    [NullableContextAttribute("1")]
public  (int );
    [NullableContextAttribute("1")]
public void (int ,  );
    [NullableContextAttribute("1")]
public [] ();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static String[] ;
    private static Char[] ;
    private static    ();
    [ExtensionAttribute]
public static Nullable`1<DateTimeOffset> (    );
    [ExtensionAttribute]
public static bool (    , DateTimeOffset& );
    [ExtensionAttribute]
public static     (Nullable`1<DateTimeOffset> );
    [ExtensionAttribute]
public static     (DateTimeOffset );
    [ExtensionAttribute]
public static Guid (    );
    [ExtensionAttribute]
public static     (Guid );
    [ExtensionAttribute]
public static string (    );
    [ExtensionAttribute]
private static string (    );
    [ExtensionAttribute]
public static string (​   );
    [ExtensionAttribute]
private static string (   );
    [ExtensionAttribute]
public static ​   (string ,     , int );
    [ExtensionAttribute]
public static ​   (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<string,    > ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private DocxLoadOptions ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    [DebuggerBrowsableAttribute("0")]
private IDictionary`2<string, bool> ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private IDictionary`2<string,  ​ >  ;
    [DebuggerBrowsableAttribute("0")]
private IDictionary`2<string,    >  ;
    [DebuggerBrowsableAttribute("0")]
private IDictionary`2<int, string>  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<int, Note>  ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<int, Note>  ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<string, object>  ;
    public    (    , string , DocxLoadOptions );
    public     ();
    private void (    );
    public DocxLoadOptions ();
    private void (DocxLoadOptions );
    public string ();
    private void (string );
    public     ();
    public DocumentModel ();
    private void (DocumentModel );
    public IDictionary`2<string, bool> ();
    private void (IDictionary`2<string, bool> );
    public     ();
    public void (    );
    public      ();
    public void (    );
    public IDictionary`2<string,  ​ >  ();
    private void (IDictionary`2<string,  ​ > );
    public IDictionary`2<string,    >  ();
    private void (IDictionary`2<string,    > );
    public IDictionary`2<int, string>  ();
    private void (IDictionary`2<int, string> );
    public bool  ();
    public void (bool );
    public      ();
    public void (    );
    public bool  ();
    public void (bool );
    public Dictionary`2<int, Note>  ();
    public void (Dictionary`2<int, Note> );
    public Dictionary`2<int, Note>  ();
    public void (Dictionary`2<int, Note> );
    public Dictionary`2<string, object>  ();
    public void (Dictionary`2<string, object> );
    public   <string, string>  ();
    public void (string , IDictionary`2<string,    > );
    public static string (    );
    public static string (string , bool );
    public Picture (string , IDictionary`2<string,    > );
    public Chart (string , IDictionary`2<string,    > );
    public void (string , IDictionary`2<string,    > );
    public bool (string , Action`1<Stream> );
    public bool (string , Action`1<Stream> , bool );
    public sealed virtual void Dispose();
    public     (string , IDictionary`2<string,    > );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    public    ( ,     );
    [IsReadOnlyAttribute]
public  ();
    public     ();
    public virtual string ToString();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private Paragraph ;
    private int ;
    private ICollection`1<   > ;
    public    (    , Paragraph );
    private DocumentModel ();
    public ICollection`1<   > ();
    public void (ICollection`1<   > );
    public void ();
    private void (    ,     );
    private void (TElement ,     , IList`1<   > , List`1<   > , Action`2<TElement,    > );
    public void ();
    private void (    ,     );
    private static bool (    ,     ,     );
    private static bool (    ,     , IEnumerable`1<   > ,     );
    public static bool (    ,     , IEnumerable`1<   > ,     ,     );
    private static bool (    ,     , IEnumerable`1<   > ,     );
    private void (    ,     );
    private void (    , Stream , Transform );
    private static bool (    ,     , IEnumerable`1<   > ,     );
    private void (    ,     );
    private static bool (    );
    private void (    ,     );
    private void (    ,     );
    private     (    ,     );
    private void (    ,     );
    private void (IList`1<   > ,     );
    private void (    ,     );
    private void (    ,     );
}
[DefaultMemberAttribute(" ")]
[DebuggerTypeProxyAttribute("GemBox.Pdf.Content.PdfContentElementCollectionDebugView")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private object ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public int Count { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public       { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public       { get; }
    [DebuggerBrowsableAttribute("0")]
internal       { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal       { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal       { get; }
    internal    (    );
    public sealed virtual int get_Count();
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public     ();
    internal     (int );
    [NullableContextAttribute("2")]
internal     ();
    [NullableContextAttribute("2")]
internal     ();
    internal void ();
    internal   ();
    public void (    );
    public void (    ,     );
    public void (    );
    public void (    ,     );
    public     (    ,     );
    public     (    ,     );
    public      (    );
    public      (    );
    public     (    ,     , double ,     );
    public      (    );
    public     (    ,     );
    public     (    ,     );
    public     (    ,     );
    public      (    ,     );
    public TPdfContentElement (TPdfContentElement ,     );
    internal void (    ,     );
    private sealed virtual override void    ​ (    );
    public sealed virtual bool Remove(    );
    public void ();
    public void ();
    internal void (    ,     );
    public sealed virtual void Clear();
    public sealed virtual bool Contains(    );
    public sealed virtual void CopyTo(   [] , int );
    public   ();
    public   ();
    public  (bool );
    public  (    );
    public  (    , bool );
    public      (    ,     );
    internal     (    ,     );
    internal     (    ,     ,     );
    internal     (List`1<   > ,  );
    internal     (List`1<   > ,     ,  ,  ,  );
    internal     (    ,     , bool );
    internal     (    ,     );
    internal     (    ,     );
    internal      ();
    internal     (    );
    internal      (    );
    internal     ( );
    internal     (    ,  );
    private void (    );
    private void (    ,     );
    private void (    ,     );
    private void (    );
    private void (    );
    private void (    );
    private void (    ,     );
    private void  (    );
    private void (    ,     );
    private void  ();
    [IteratorStateMachineAttribute("   /")]
internal IEnumerable`1<   >  ();
    [IteratorStateMachineAttribute("   /")]
internal IEnumerable`1<   >  ();
    [IteratorStateMachineAttribute("   /")]
internal IEnumerable`1<   >  ();
    private static     (    ,     , int );
    private static     (    );
    private static     (    );
    private sealed virtual override bool    ​  ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override object    ​  ();
    private sealed virtual override void    ​ (Array , int );
    private sealed virtual override IEnumerator`1<   >    ​  ();
    private sealed virtual override IEnumerator    ​  ();
}
internal class     :     {
    public virtual     ​ ();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
public static     ;
    private static    ();
    public sealed virtual bool Equals(    ,     );
    public sealed virtual int GetHashCode(    );
    private static bool ( ,  );
    private static bool ( ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    private string ;
    private Nullable`1<int> ;
    private  ;
    public    ( , string , Nullable`1<int> );
    public  ();
    public sealed virtual string    ​ ();
    public sealed virtual Nullable`1<int>    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
internal string DeviceFontName { get; }
    [DebuggerBrowsableAttribute("0")]
internal ICollection`1<int> DeviceFontCharacters { get; }
    public    (string );
    public    (    ,  ,  ,  );
    internal    (    ,     ,     );
    private    (    ,     );
    public     ();
    public  ();
    public  ();
    public  ();
    public  ();
    internal string get_DeviceFontName();
    internal ICollection`1<int> get_DeviceFontCharacters();
    internal     (    );
    internal     ( );
    internal     ( );
    internal     ( );
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public virtual string ToString();
    internal bool (int );
    private sealed virtual override bool    ​ (   );
    private sealed virtual override       ​ ();
    private sealed virtual override        ​  ();
    private sealed virtual override       ​ ();
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override bool    ​  ();
    private sealed virtual override void    ​ (bool );
    private sealed virtual override bool    ​  ();
}
[NullableContextAttribute("1")]
internal interface     {
    public Uri Uri { get; public set; }
    public Byte[] Data { get; public set; }
    public abstract virtual bool    ​ ();
    public abstract virtual void    ​ (bool );
    public abstract virtual Uri get_Uri();
    public abstract virtual void set_Uri(Uri );
    public abstract virtual Byte[] get_Data();
    public abstract virtual void set_Data(Byte[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [IteratorStateMachineAttribute("   /")]
public static IEnumerable`1<<TContentElement>> (    ,  ,     );
    [IteratorStateMachineAttribute("   /")]
public static IEnumerable`1<<TContentElement>> (    ,  , IList`1<   > );
    public static bool (<TContentElement> , IList`1<   > , & );
}
internal class     :     {
    public virtual     ​ ();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    internal static IDictionary`2<​  ,    > ;
    private static    ();
    [ExtensionAttribute]
public static void (    );
    [ExtensionAttribute]
public static void (    ,    & ,     );
    [ExtensionAttribute]
public static void (    ,    & );
    [ExtensionAttribute]
public static     (    ,    & );
    [ExtensionAttribute]
public static  (    );
    [ExtensionAttribute]
public static  (    );
    [ExtensionAttribute]
public static  (    );
    [ExtensionAttribute]
public static   (    );
    [ExtensionAttribute]
public static   (    );
    [ExtensionAttribute]
public static bool (    ,    & ,     );
    [ExtensionAttribute]
public static void (    ,  );
    [ExtensionAttribute]
public static bool (    ,     , bool );
    [ExtensionAttribute]
public static bool (    ,     , bool );
    [ExtensionAttribute]
public static bool (    ,     ,     , Boolean& , Boolean& , bool );
    [ExtensionAttribute]
public static bool (    ,     , bool );
    [ExtensionAttribute]
public static bool (    , double , bool );
    [ExtensionAttribute]
public static void (    ,  );
    [ExtensionAttribute]
public static bool (    ,     , bool );
    [ExtensionAttribute]
public static bool (    ,     , bool );
    [ExtensionAttribute]
public static bool (    ,     ,     , Boolean& , Boolean& , bool );
    [ExtensionAttribute]
public static bool (    ,     , bool );
    [ExtensionAttribute]
public static bool (    , double , bool );
    [ExtensionAttribute]
public static bool (    ,  , bool );
    [ExtensionAttribute]
public static bool (    ,  , bool );
    [ExtensionAttribute]
public static bool (    , double , bool );
    [ExtensionAttribute]
public static bool (    ,     , bool );
    [ExtensionAttribute]
public static bool (    , bool , bool );
    [ExtensionAttribute]
public static bool (    , double , bool );
    [ExtensionAttribute]
public static void (    ,  );
    [ExtensionAttribute]
public static bool (    , double , bool );
    [ExtensionAttribute]
public static bool (    , double , bool );
    [ExtensionAttribute]
public static bool (    , double , bool );
    [ExtensionAttribute]
public static bool  (    , double , bool );
    [ExtensionAttribute]
public static bool (    ,     , double , bool );
    [ExtensionAttribute]
public static bool (    ,  , bool );
    [ExtensionAttribute]
public static bool  (    , double , bool );
    [ExtensionAttribute]
public static bool (    , bool , bool );
    [ExtensionAttribute]
public static bool  (    );
    [ExtensionAttribute]
public static void (    , bool );
    [ExtensionAttribute]
public static bool  (    );
    [ExtensionAttribute]
public static void (    , bool );
    [ExtensionAttribute]
public static bool  (    );
    [ExtensionAttribute]
public static void (    , bool );
    [ExtensionAttribute]
public static void (    ,  );
    [ExtensionAttribute]
public static bool (    ,     , bool );
    [ExtensionAttribute]
public static bool (    , ​   , bool );
    [ExtensionAttribute]
public static bool (    , ​   , bool );
    [ExtensionAttribute]
public static bool (    , bool , bool );
    [ExtensionAttribute]
public static bool (    , ​   , bool );
    [ExtensionAttribute]
public static void (    ,  );
    [ExtensionAttribute]
public static bool (    , bool , bool );
    [ExtensionAttribute]
public static bool (    , bool , bool );
    [ExtensionAttribute]
public static bool (    , int , bool );
    [ExtensionAttribute]
public static bool (    , ​   , bool );
    [ExtensionAttribute]
public static bool (    , ​   , bool );
    [ExtensionAttribute]
public static bool (    , ​   , bool );
    [ExtensionAttribute]
public static bool (    , ​   , bool );
    [ExtensionAttribute]
public static bool (    ,     , bool );
    [ExtensionAttribute]
public static bool  (    , double , bool );
    [ExtensionAttribute]
public static bool  (    , double , bool );
    [ExtensionAttribute]
public static void (    ,  ,    & ,     , bool , IDictionary`2<   ,    > );
    [ExtensionAttribute]
private static void (    ,  ,    & );
    [ExtensionAttribute]
private static void (    ,  ,    & );
    [ExtensionAttribute]
private static void (    ,  ,    & );
    [ExtensionAttribute]
private static void (    ,  ,    & );
    [ExtensionAttribute]
private static void (    ,  ,    & );
    [ExtensionAttribute]
private static void (    ,  ,     );
    [ExtensionAttribute]
private static void (    ,  ,     ,     , bool );
    [ExtensionAttribute]
private static void (    ,  ,     ,     , bool );
    [ExtensionAttribute]
private static void (    ,  ,     ,     , bool );
    [ExtensionAttribute]
private static void (    ,  ,     ,     , bool );
    [ExtensionAttribute]
internal static     (IDictionary`2<   ,    > ,     );
    [ExtensionAttribute]
public static void (    ,     );
    [ExtensionAttribute]
public static bool ( ,  );
    [ExtensionAttribute]
public static  ( ,  , bool );
    [ExtensionAttribute]
private static      (    );
    [ExtensionAttribute]
private static  (    );
    [ExtensionAttribute]
private static  (    );
    [ExtensionAttribute]
private static  (    );
    [ExtensionAttribute]
private static   (    );
    [ExtensionAttribute]
private static   (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private int ;
    private Dictionary`2<   ,    > ;
    private      ();
    private      ();
    private DocumentModel  ();
    private DocumentModel (Stream , string , DocxLoadOptions );
    private bool  ();
    private static     (Stream , string , DocxLoadOptions );
    private void ();
    private void ();
    private static Dictionary`2<string, IEnumerable`1<string>> (Stream );
    private static     (Stream );
    private static void (    , String& , String& , String& , Dictionary`2& );
    private void ();
    private void (    , BuiltInDocumentPropertiesDictionary );
    private void ();
    private void (    , BuiltInDocumentPropertiesDictionary );
    private void ();
    private static void (    , CustomDocumentPropertiesDictionary );
    private void ();
    private void (    );
    private void (    );
    private Dictionary`2<string,    >  ();
    private static void (    , WriteProtection );
    private static DocumentProtection  (    );
    private static   (    );
    internal static void (DocumentModel );
    private void ();
    private void  ();
    private bool (string , Action`1<Stream> );
    private Dictionary`2<int, Note> (NoteType );
    private void  ();
    private static void (    ,    );
    private static void (string ,    );
    private static void (string ,    );
    private void  ();
    private void (IDictionary`2<int, Comment> );
    private void (Dictionary`2<int, Comment> );
    private void  ();
    private void  ();
    private void  ();
    private void  ();
    private void (    );
    private static bool (    );
    private     (    );
    public static DocumentModel (Stream , string , DocxLoadOptions );
    public static void (    , NoteSettings , bool );
    private static NoteLocation (NoteLocation , bool );
    private void  ();
    private void (string , Stream );
    private static string (string );
    private static Action`1<   > (CustomXmlPart );
    private void (Stream );
    private void (Stream );
    private void (Stream );
    private void (    );
    private void (Stream );
    private void (    );
    private void (Stream );
    private void (    );
    private void  (Stream );
    private void (    );
    private void  (Stream );
    private void  (Stream );
    private void (    );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private TableCell ;
    private Dictionary`2<int, > ;
    public    (TableCell );
    public bool ();
    private int ();
    private bool (int ,    & , TableCell& );
    private     (int , TableCell );
    public void (    , TableRow , Action`2<TableCell,    > );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
public double  { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public      { get; }
    public    (    , double );
    public    (    , double , double , double );
    public    (    , double , double , double , double );
    public    (    , Double[] );
    internal    (    ,     );
    public static     (double );
    public static     (double , double , double );
    public static     (double , double , double , double );
    public static     (    );
    public static     (    ,     , Double[] );
    private static     (    , int ,     , string );
    private static Double[] (Double[] );
    private static     (    , bool );
    public     ();
    internal     ();
    public double (int );
    [NullableContextAttribute("2")]
public     ();
    public bool (Double& , Double& , Double& );
    internal bool (Byte& , Byte& , Byte& );
    [NullableContextAttribute("2")]
public sealed virtual string ToString(string , IFormatProvider );
    public virtual string ToString();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    internal     (    );
    internal static void (   & ,    & ,     );
    internal static     (    , ​  & );
    internal     (double );
    [NullableContextAttribute("2")]
internal static Nullable`1<   > (​   );
    internal ​   ();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<string, string> ;
    [DebuggerBrowsableAttribute("0")]
private Stream ;
    public    (Stream , ICollection`1<  > );
    private    (Stream ,     );
    public Stream ();
    public     (string , string , Action`1<Stream> , bool );
    public     (string , string , string , string , Action`1<Stream> , bool );
    public void ();
    public bool (    , string ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private static    ();
    private    ( );
    public    (IList`1<   > ,     );
    public    (int , int , int ,     ,     , IList`1<   > ,     );
    public virtual     ​ ();
    public int ();
    private void (int );
    public void (    ,     ,     );
    public void ( ,     );
    internal void (    );
    public     (bool );
    private protected virtual   <double>    ​ (Stream );
    private protected virtual void    ​ (Stream );
    public  ();
    private protected virtual IEnumerator    ​  ();
    [IteratorStateMachineAttribute("   /")]
private protected virtual IEnumerator`1<  <double>>    ​  ();
    [IteratorStateMachineAttribute("   /")]
private protected virtual IEnumerator`1<  <double>>    ​  ();
    private sealed virtual override IEnumerator`1<   >    ​ ();
    private sealed virtual override IEnumerable`1<   >    ​ (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private DocumentModel ;
    private MultiContentRange ;
    private HeaderFooter ;
    private HeaderFooter ;
    private int ;
    private IDictionary`2<Element, Element> ;
    private    ;
    public    (MultiContentRange , HeaderFooter , HeaderFooter ,    , int );
    public DocumentModel ();
    private Element (ContentRange , Element );
    private void (BlockCollection , IList`1<ContentPosition> , IList`1<ContentPosition> , Element );
    private static TableRow (ContentPosition , bool );
    private static bool (IList`1<ContentPosition> , Element );
    private static bool (Element , Element );
    private static ContentPosition (IList`1<ContentPosition> , bool , Element );
    private static TableRow (IList`1<ContentPosition> );
    private static TableRow (TableRow , Element );
    private static Element (IEnumerable`1<Element> );
    private void (BlockCollection , IList`1<ContentPosition> , IList`1<ContentPosition> , TableRow );
    private void (BlockCollection , IList`1<ContentPosition> , IList`1<ContentPosition> , TableRow , bool );
    private List`1<Element> (IList`1<ContentPosition> , IList`1<ContentPosition> , TableCell );
    private static Dictionary`2<TableCell, IList`1<ContentPosition>> (IList`1<ContentPosition> , Table );
    private TableCell (TableCell , IList`1<ContentPosition> , IList`1<ContentPosition> , TableRow , bool );
    private TableCell (TableCell , TableRow , bool );
    private void ();
    private void ();
    private void ();
    private void ();
    private static void (IEnumerable`1<Element> );
    private void ();
    private void ();
    private void  ();
    private void  ();
    private void (Paragraph , Dictionary`2<ListStyle, ListStyle> );
    private static ListStyle (ListStyle );
    private static List`1<int> (Paragraph );
    private static void (Paragraph );
    private bool (Element );
    private void  ();
    private void  ();
    private void  ();
    private void (HeaderFooter , HeaderFooterType );
    private T (T , bool );
    [NullableContextAttribute("0")]
private Block (Block );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal     ;
    private  ;
    [NullableAttribute("2")]
public       { get; }
    internal    (    ,  );
    public virtual     ​ ();
    public  ();
    public     ();
    public void (    );
    public     ();
    public void (    );
    public     ();
    [NullableContextAttribute("2")]
public     ();
    internal     ();
    internal void (    );
    internal     ();
    internal      ();
    public virtual string ToString();
    private      ();
    private      ();
    private protected virtual        ​ (    ,     );
    internal     (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private Byte[] ;
    public    (Byte[] );
    protected virtual int    ​ ();
    public virtual void    ​ (Byte[] , int , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private    ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private   <   > ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private   <   > ;
    [NullableAttribute("2")]
public       { get; }
    [NullableAttribute("2")]
public       { get; }
    [NullableAttribute("2")]
public       { get; }
    internal    (Byte[] );
    internal virtual bool    ​ ();
    private protected    ();
    internal virtual     ​ ();
    internal  ();
    public     ();
    public     ();
    public  ();
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public      ();
    public Byte[]  ();
    [NullableContextAttribute("2")]
public      ();
    internal Byte[]  ();
    internal Byte[]  ();
    internal string  ();
    public Byte[]  ();
    [NullableContextAttribute("2")]
public Byte[] (& );
    public virtual string ToString();
    private protected virtual        ​ (   & );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
public byte  { get; public set; }
    internal    (Byte[] , int );
    public byte (int );
    public void (int , byte );
    private int (int );
    private void (int , int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public void ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private HashSet`1<   > ;
    private IList`1<   > ;
    private bool ;
    private bool ;
    private bool ;
    private bool ;
    private DateTime ;
    private   ;
    internal IList`1<   > ();
    internal bool ();
    internal void (bool );
    internal bool ();
    internal void (bool );
    internal bool ();
    internal void (bool );
    internal bool ();
    internal void (bool );
    internal DateTime ();
    internal void (DateTime );
    internal  ();
    internal void ( );
    internal void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private static [] ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private [] ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    private static    ();
    internal     ();
    public     ();
    public void (    );
    public double ();
    public void (double );
    public string ();
    public void (string );
    public string ();
    public void (string );
    internal bool ();
    public virtual string ToString();
    internal bool (int );
    internal void (    );
    internal      ();
    private void ();
    internal static bool (    ,     );
    internal static bool (string , Int32& , Int32& );
    private static [] (string );
    private sealed virtual override    &    ​  ();
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override bool    ​  ();
    private sealed virtual override void    ​ (bool );
    private sealed virtual override bool    ​  ();
    private sealed virtual override bool    ​ (   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private static List`1<   > ;
    private static    ();
    public static     (int );
    public static void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
internal int ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
internal int ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private FontFamily ;
    protected    (    , int , IList`1<   > );
    public     ();
    internal     ();
    private void (    );
    internal void (    );
    public     ();
    public abstract virtual bool    ​ ();
    internal virtual bool    ​ ();
    public abstract virtual        ​  ();
    public virtual        ​  ();
    public abstract virtual double    ​  ();
    public abstract virtual void    ​ (double );
    public abstract virtual double    ​  ();
    public abstract virtual void    ​ (double );
    internal void  ();
    public sealed virtual bool Equals(    );
    public sealed virtual bool Equals(object );
    public sealed virtual int GetHashCode();
    public sealed virtual string ToString();
    private sealed virtual override bool    ​ (   );
    private sealed virtual override    &    ​  ();
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override bool    ​ ();
    private sealed virtual override void    ​ (bool );
    private sealed virtual override bool    ​ ();
    internal FontFamily  ();
    private void  ();
    internal FontFamily (int );
    internal     (int );
    protected virtual FontFamily    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private List`1<   > ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (    );
    public void (    );
    public sealed virtual void Dispose();
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public    (double , double );
    private static    ();
    public static SizeF op_Implicit(    );
    public static     op_Implicit(SizeF );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public bool ();
    public virtual int GetHashCode();
    public sealed virtual bool Equals(    );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
public sealed virtual string ToString(string , IFormatProvider );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    public static SKSize op_Implicit(    );
    public static     op_Implicit(SKSize );
    public static Size op_Implicit(    );
    public static     op_Implicit(Size );
}
internal class     :     {
    private bool ;
    private int ;
    internal bool ();
    internal void (bool );
    internal int ();
    internal void (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal static double ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
internal int ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   > ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private GlyphTypeface  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal IEnumerable`1<KeyValuePair`2<CultureInfo, string>> ​ { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal IEnumerable`1<KeyValuePair`2<CultureInfo, string>> ​ { get; }
    internal    (    , int , ​   );
    private    (    , int , ​   , ​   , bool );
    private static    ();
    internal SKTypeface ();
    internal void ();
    public     ();
    public virtual bool    ​ ();
    internal virtual int    ​ ();
    public      ();
    private void (    );
    protected virtual        ​  ();
    public virtual       ​ ();
    public virtual void    ​ (    );
    internal void (    );
    internal virtual void    ​ (    );
    internal      ();
    private void (    );
    internal void (    );
    internal   ();
    internal bool ();
    public virtual bool    ​ ();
    public virtual bool    ​ ();
    internal IEnumerable`1<KeyValuePair`2<CultureInfo, string>>  ();
    internal virtual IEnumerable`1<KeyValuePair`2<CultureInfo, string>>    ​  ();
    internal   ();
    public double  ();
    public virtual double    ​  ();
    internal virtual double    ​  ();
    public virtual double    ​  ();
    public virtual int    ​ (Int32& ,    );
    public virtual double    ​  ();
    public virtual void    ​ (double );
    public virtual double    ​  ();
    public virtual void    ​ (double );
    public virtual double    ​  ();
    public virtual void    ​ (double );
    public virtual double    ​  ();
    public virtual void    ​ (double );
    public virtual double    ​  ();
    public virtual void    ​ (double );
    public virtual double    ​  ();
    public virtual void    ​ (double );
    public virtual ushort    ​  ();
    internal bool ();
    public bool  ();
    internal int  ();
    public int  ();
    public   ();
    public double  ();
    public ​    ();
    internal      ();
    public      ();
    public      ();
    public      ();
    public      ();
    public      ();
    public      ();
    public      ();
    public IDictionary`2<ushort, double> (    );
    public IDictionary`2<CultureInfo, string>  ();
    public IDictionary`2<CultureInfo, string>  ();
    public IDictionary`2<CultureInfo, string>  ();
    public IDictionary`2<CultureInfo, string>  ();
    public IDictionary`2<CultureInfo, string>  ();
    public IDictionary`2<CultureInfo, string>  ();
    public IDictionary`2<CultureInfo, string>  ();
    public IDictionary`2<CultureInfo, string>  ();
    public IDictionary`2<CultureInfo, string>  ();
    public IDictionary`2<CultureInfo, string>  ();
    public IDictionary`2<CultureInfo, string>  ();
    public IDictionary`2<CultureInfo, string>  ();
    public IDictionary`2<CultureInfo, string>  ();
    public IDictionary`2<CultureInfo, string>  ();
    internal string  ();
    internal      ();
    internal byte  ();
    public Stream  ();
    public Byte[] (ICollection`1<ushort> );
    internal IEnumerable`1<KeyValuePair`2<CultureInfo, string>> ( );
    protected virtual        ​  ();
    internal      ();
    internal bool (    );
    public virtual string ToString();
    internal static void (IEnumerable`1<   > , ICollection`1<   > );
    internal static void (IEnumerable`1<   > , ICollection`1<   > );
    internal static     (    );
    internal static     (    );
    internal   ();
    private sealed virtual override bool    ​ ( ​  );
    private sealed virtual override        ​ ();
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override bool    ​  ();
    internal Face ​();
    internal void ();
    internal GlyphTypeface (    );
    internal virtual void    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    internal ​   Source { get; }
    private static    ();
    private    (​   );
    internal virtual ​   get_Source();
    internal virtual ​      ​ ();
    private protected virtual        ​ (​   );
    private protected virtual ​      ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    private  ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private    <> ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public    <>   { get; public set; }
    protected abstract virtual    <, >    ​ ();
    public  ();
    public void ( );
    public    <> ();
    public void (   <> );
    public  ();
    public void ( );
    [NullableContextAttribute("0")]
private bool  (    , ArraySegment`1<byte> );
    protected virtual    <byte>    ​ (ArrayPool`1<byte> );
    [NullableContextAttribute("0")]
protected abstract virtual bool    ​  (    , ArraySegment`1<byte> , int );
    protected abstract virtual    <byte>    ​  (ArrayPool`1<byte> , int );
    public virtual bool    ​ (    , ArrayPool`1<byte> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    <int> {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
internal ​   Source { get; }
    internal    (    );
    internal virtual ​   get_Source();
    private protected virtual int    ​ ();
    private protected virtual int    ​ ();
    private protected virtual ​      ​ (int );
    private protected virtual int    ​ (​   );
    private protected virtual int    ​ (int );
    private protected virtual void    ​ (int , int );
    private protected virtual void    ​ (int );
    private protected virtual void    ​ (int , int );
    private protected virtual void    ​ (int );
    private protected virtual bool    ​  (int );
    private protected virtual void    ​ ();
    private protected virtual int    ​  (int );
    private protected virtual IEnumerator`1<int>    ​  ();
    private protected virtual void    ​  (Int32[] , int );
    public  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    internal    (Byte[] , int );
    public sealed virtual int    ​ ();
    public sealed virtual void    ​ (int );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [NullableAttribute("2")]
private protected object  { get; private protected set; }
    [NullableAttribute("2")]
public      { get; public set; }
    [NullableAttribute("2")]
public       { get; public set; }
    private static    ();
    internal    ( );
    internal static     (    );
    private protected virtual void    ​ (    );
    public virtual     ​  ();
    public     ();
    private protected virtual        ​  ();
    [NullableContextAttribute("2")]
private protected virtual object    ​  ();
    [NullableContextAttribute("2")]
private protected virtual void    ​ (object );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    public bool ();
    public void (bool );
    private void (    );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    public     ();
    private     (bool , IEnumerable`1<string> , Nullable`1<int> , string );
    public     (bool , IEnumerable`1<string> );
    public     (bool , String[] );
    public     (bool , IEnumerable`1<   > );
    public     (bool ,    [] );
    public     (IEnumerable`1<string> );
    public     (String[] );
    public     (IEnumerable`1<   > );
    public     (   [] );
    public     (string , string );
    public     (object );
    public     (Func`2<Stream, Byte[]> ,  , int );
    public     (    );
    public     (    );
    private     (    , string );
    internal virtual        ​ (    );
    internal void (Nullable`1<DateTimeOffset> , DateTimeOffset );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private     ;
    private int ;
    private int ;
    private int ;
    private int ;
    public     ();
    public void (    );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
}
[ExtensionAttribute]
internal static class     : object {
    [ExtensionAttribute]
public static bool ( ,  );
    [ExtensionAttribute]
public static  ( ,  , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Uri ;
    private Dictionary`2<string,    > ;
    private Dictionary`2<   ,    > ;
    private  ​  ;
    private Func`2<   ,   > ;
    private Func`6<string, bool, bool, int,   ,   > ;
    private     ;
    private      ;
    private      ;
    public    (Uri , Func`2<string, IEnumerable`1<string>> , Func`2<   ,   > , Func`6<string, bool, bool, int,   ,   > );
    public  ​  ();
    private void ( ​  );
    public     (string , bool , bool , double );
    private bool (Uri , string ,    & );
    internal bool (    , Boolean& ,    & );
    public bool (    , int ,    & );
    public bool (    , int ,    & );
    internal void (    );
    internal bool (    , int ,     , bool ,    & );
    private     (    , int ,     );
    private     (    );
    internal     (    , double );
    internal     (string ,     ,     ,  ,     );
    internal     (    , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static  ​  ;
    [DebuggerBrowsableAttribute("0")]
internal static  ​  ;
    internal    (    );
    private static    ();
    internal virtual        ​  ();
    public double ();
    public void (double );
    public  ();
    public void ( );
    public     ();
    public void (    );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    public      ();
    public void (    );
    public double ();
    public void (double );
    internal     ();
    private void (    );
    public string  ();
    public void (string );
    internal  ​   ();
    internal void ( ​  );
    private protected virtual void    ​ ​();
    private     (string );
    private static     (    ,     ,     , double , Nullable`1<   > , double , Nullable`1<   > , double  ,   ,      , double  ,      , double  ,      ,      , bool  , bool  , bool  );
    private static     (    ,     ,     , double , Nullable`1<   > , double , Nullable`1<   > , double  ,   ,      , double  ,      , bool  , bool  );
    private static void (    ,     , double , Nullable`1<   > , double , bool );
    private static void (    ,     , double , Nullable`1<   > , double ,  ,     , double  ,      , bool  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    {
    public    (Stream , bool );
    public virtual int Read(Byte[] , int , int );
    public virtual int ReadByte();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private ​ ;
    private     ;
    private     ;
    [NullableAttribute("2")]
private     ;
    [NullableAttribute("2")]
public       { get; public set; }
    public    (​ );
    internal ​ ();
    public     ();
    public void (    );
    public     ();
    public void (    );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    public     ();
    public void (    );
    public static     ();
    public     ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static bool (Uri );
    public static Stream (string );
    private static     (Uri );
    public static Stream (string , bool , bool , Uri& );
    public static Stream (string , bool );
    public static MemoryStream (Uri );
    public static MemoryStream (string );
    public static MemoryStream (Stream );
    public static void (Stream , Stream );
    public static void (Stream , Stream );
    public static void (Stream , Byte[] , int , int );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private IList`1<   > ;
    [DebuggerBrowsableAttribute("0")]
public      { get; }
    [DebuggerBrowsableAttribute("0")]
public      { get; }
    internal    (    , IList`1<   > );
    internal    (    );
    internal     ();
    internal IList`1<   > ();
    public int ();
    public     (int );
    public     (string );
    internal void (    ,     );
    public     (string );
    public     (string ,  );
    public void (    , string ,  );
    public void ();
    public bool (string );
    public sealed virtual IEnumerator`1<   > GetEnumerator();
    public void (string );
    public void (    );
    public void (int );
    public bool (string ,    & );
    private sealed virtual override IEnumerator    ​ ();
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual int    ​ ();
    public abstract virtual        ​ ();
    public abstract virtual void    ​ (    );
    public abstract virtual        ​ ();
    public abstract virtual void    ​ (    );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static string ( );
    [ExtensionAttribute]
public static  (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static IEnumerable`1<string> ;
    private static    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    internal static Int32[][] ;
    internal static Int32[] ;
    private static Int32[] ;
    private static Byte[] ;
    private static    [] ;
    public static     ;
    public static     ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    private static Byte[]  ;
    private static      ;
    private static      ;
    private static      ;
    private static      ;
    private static      ;
    private static      ;
    private static      ;
    private static      ;
    private static Random  ;
    private static Int32[]  ;
    private Int32[]  ;
    private int  ;
    private int  ;
    private int  ;
    private int  ;
    private static    ();
    private    (int , Int32[] , bool );
    public    (string );
    public    (string , int );
    public    (Byte[] , bool );
    public    (Byte[] , int , int , bool );
    public    (int , Byte[] );
    public    (int , Byte[] , int , int );
    public    (int , Random );
    public    (int , int , Random );
    private static int (int );
    public static     (int );
    private static Int32[] (Byte[] , int , int );
    public     ();
    private static Int32[] (Int32[] , Int32[] );
    public     (    );
    private     (Int32[] );
    public     (    );
    public     (    );
    public int ();
    public static int (int );
    private static int (int , int , Int32[] );
    public int  ();
    internal static int (int );
    private bool  ();
    public int (object );
    private static int (int , Int32[] , int , Int32[] );
    private static int (int , Int32[] , int , Int32[] );
    public int  (    );
    private static Int32[] (Int32[] , Int32[] );
    public     (    );
    public    []  (    );
    public virtual bool Equals(object );
    private bool  (    );
    public     (    );
    public virtual int GetHashCode();
    private     ();
    public int  ();
    public int  ();
    public bool (int );
    internal bool (int , bool );
    private bool (int , Random , bool );
    public bool (int , Random );
    internal bool (int , Random , bool );
    public long  ();
    public long  ();
    public     (    );
    public     (    );
    public      (    );
    public      (    );
    private      (    );
    private static int (int );
    private static long (long );
    private static     (    ,     ,    & );
    public     (    ,     );
    private static     (    ,     ,     );
    private static     (    ,     ,     ,     );
    private static     (    ,     ,     , bool );
    private static Int32[] (Int32[] , int );
    private static int (int , int );
    private static Int32[] (Int32[] , Int32[] );
    private static Int32[] (Int32[] , Int32[] , Int32[] );
    private int  ();
    private static void (Int32[] , Int32[] , UInt32 );
    private static void (Int32[] , Int32[] , Int32[] , Int32[] , UInt32 , bool );
    private static void (Int32[] , Int32[] , Int32[] , UInt32 , bool );
    private static UInt32 (UInt32 , UInt32 , UInt32 , UInt32 );
    public      (    );
    public     ();
    public     ();
    public     ();
    public     ();
    public      (int );
    public static     (int , Random );
    private int  (int );
    private static Int32[] (Int32[] , Int32[] );
    public      (    );
    private Int32[]  (int );
    private      (int );
    private      (int );
    private static Int32[] (Int32[] , int );
    public      (int );
    private static void (int , Int32[] , int );
    private static void (int , Int32[] );
    public      (int );
    public int  ();
    private static Int32[] (int , Int32[] , int , Int32[] );
    public      (    );
    private static Int32[] (Int32[] , Int32[] );
    public Byte[]  ();
    public Byte[]  ();
    private Byte[] (bool );
    public virtual string ToString();
    public string  (int );
    private static void (StringBuilder , int , IList , int ,     );
    private static void (StringBuilder , string , int );
    private static     (ulong );
    private static     (long );
    public static     (long );
    public int  ();
    private int  (int );
    public bool (int );
    public      (    );
    public      (    );
    public      (int );
    public      (int );
    public      (int );
    private      (int );
    public bool  ();
    public bool  ();
    public bool  ();
    public static     op_UnaryNegation(    );
    public static     op_Addition(    ,     );
    public static     op_Addition(    , long );
    public static     op_Subtraction(    ,     );
    public static     op_Multiply(    ,     );
    public static     op_Multiply(    , long );
    public static     op_Multiply(long ,     );
    public static     op_Division(    ,     );
    public static     op_Modulus(    ,     );
    public static     op_Modulus(    , long );
    public static bool op_Inequality(    ,     );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    , long );
    public static bool op_Equality(    , long );
    public static bool op_LessThan(    ,     );
    public static bool op_GreaterThan(    ,     );
    public static bool op_LessThan(    , long );
    public static bool op_GreaterThan(    , long );
    public static     op_RightShift(    , int );
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public     Current { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private object  { get; }
    [NullableContextAttribute("1")]
internal    (    );
    public sealed virtual     get_Current();
    private int ();
    public sealed virtual bool MoveNext();
    public sealed virtual void Dispose();
    public sealed virtual void Reset();
    [NullableContextAttribute("1")]
private sealed virtual override object    ​ ();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static void (    );
    [ExtensionAttribute]
public static bool (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static Byte[] (Byte[] );
    public static Byte[] (Byte[] );
    public static Byte[] (Byte[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static String[] ;
    private static    ();
    private static bool (string );
    public static void (string ,     ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private string ;
    private static    ();
    public string ();
    public void (string );
    public static     ();
    public virtual        ​ ();
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private Stream ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public    (Stream , bool );
    public sealed virtual Stream    ​ ();
    public sealed virtual long    ​ ();
    public sealed virtual void    ​ (long );
    public sealed virtual int    ​ ();
    public sealed virtual int    ​ ();
    public sealed virtual int    ​ ();
    public sealed virtual int    ​ ();
    public sealed virtual void    ​ (int );
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private ushort ;
    private ushort ;
    private Byte[] ;
    public ushort ();
    public void (ushort );
    public ushort ();
    public void (ushort );
    public Byte[] ();
    public void (Byte[] );
    public static     ();
    public virtual        ​ ();
    public virtual void    ​ (    );
    public virtual void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static bool (string );
    private static bool (string );
    public static void (string ,     ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private string ;
    private string ;
    public    (string , string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public virtual        ​ ();
    public virtual void    ​ (    );
    public virtual void    ​ (    );
    internal static byte (& , & );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public  ​  ;
    public  ​  ;
    public    ( ​ & );
    public bool (    ,    & );
    public bool (Byte[] ,    & );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    <DateTimeOffset> {
    public virtual DateTimeOffset    ​ (string );
    public virtual string    ​ (DateTimeOffset );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int> ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    private static    ();
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    public     ();
    public void (    );
    protected virtual Style    ​ ();
    protected virtual void    ​ (Style );
    protected virtual  ​ <   >    ​  ();
    public virtual        ​ ();
    internal bool (    );
    public virtual bool Equals(    );
    public virtual int GetHashCode();
    public virtual        ​ ();
    private sealed virtual override int    ​ ();
    private sealed virtual override void    ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
internal double ;
    [DebuggerBrowsableAttribute("0")]
internal double ;
    [DebuggerBrowsableAttribute("0")]
internal double ;
    [DebuggerBrowsableAttribute("0")]
internal double ;
    public    (double , double , double , double );
    public double ();
    public double ();
    public double ();
    public double ();
    public double ();
    public double ();
    public bool ();
    internal static     (IEnumerable`1<   > );
    internal      ();
    internal  ​   ();
    internal void (double );
    internal void (    );
    public virtual string ToString();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    public static     op_Implicit(    );
    public static     op_Explicit(    );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<Padding> ;
    protected virtual Style    ​ ();
    protected virtual void    ​ (Style );
    public     ();
    public void (    );
    public Nullable`1<Padding> ();
    public void (Nullable`1<Padding> );
    public Nullable`1<double> ();
    public Nullable`1<double> ();
    public Nullable`1<double> ();
    public Nullable`1<double> ();
    internal bool ();
    public virtual bool Equals(    );
    internal bool (    );
    public virtual int GetHashCode();
    public virtual        ​ ();
    protected virtual  ​ <   >    ​  ();
    public virtual        ​ ();
}
internal class     : object {
    [NullableAttribute("1")]
internal IList`1<double> ;
    internal     ;
    internal     ;
    internal     ;
    internal bool ;
    internal bool ;
    internal int ;
    internal void ();
    internal void (   & );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private int ;
    private DocumentModel ();
    private DocumentModel (Stream , string , XmlLoadOptions );
    private void (    );
    public void (    );
    private static DocumentProtection (    );
    private static   (    );
    private void (    );
    private void (    );
    private Dictionary`2<string, IEnumerable`1<string>>  (    );
    private static Color  (    );
    internal static void (DocumentModel );
    public static DocumentModel (Stream , string , XmlLoadOptions );
    private void (    );
    private void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    internal    (Stream );
    public void (    );
    private void (IDictionary`2<  , int> , string , string );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual DocumentModel    ​ ();
    public abstract virtual IDictionary`2<string,    >    ​ ();
    public abstract virtual IDictionary`2<string, Byte[]>    ​ ();
    public abstract virtual TextBox    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static Regex ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private   <   > ;
    internal    (Stream );
    private static    ();
    public     ();
    private static     (Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private    (bool , ImportMapping );
    protected virtual void    ​ (DocumentModel , DocumentModel );
    protected virtual void    ​ (Paragraph , Paragraph );
    protected virtual void    ​ (Table , Table );
    protected virtual void    ​ (TableRow , TableRow );
    protected virtual void    ​ (TableCell , TableCell );
    protected virtual void    ​ (Field , Field );
    protected virtual void    ​ (Run , Run );
    protected virtual void    ​ (SpecialCharacter , SpecialCharacter );
    protected virtual void    ​ (Note , Note );
    protected virtual void    ​ (PreservedInline , PreservedInline );
    private void (DrawingElement , DrawingElement );
    protected virtual void    ​ (PreservedDrawingElement , PreservedDrawingElement );
    protected virtual void    ​ (Shape , Shape );
    protected virtual void    ​ (Group , Group );
    protected virtual void    ​ (TextBox , TextBox );
    protected virtual void    ​ (Picture , Picture );
    protected virtual void    ​ (Chart , Chart );
    protected virtual void    ​ (BlockContentControl , BlockContentControl );
    protected virtual void    ​ (InlineContentControl , InlineContentControl );
    protected virtual void    ​ (AlignmentTab , AlignmentTab );
    private void (ContentControlProperties , ContentControlProperties );
    public static Element (Element , bool , ImportMapping );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    private  ;
    private bool ;
    private double ;
    protected    ( );
    public bool ();
    public double ();
    private double (    );
    internal     (    ,     );
    internal     (    ,     );
    private static     (    ,     , double , double , double , double );
    private static     (    ,     ,     );
    protected abstract virtual        ​ (int );
    public static     ( , bool );
    public     (    ,     );
    [NullableContextAttribute("2")]
public     (int , Dictionary`2<int,    > );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    private List`1<bool> ;
    private char ;
    private int ;
    private  ;
    private     ;
    protected     ;
    protected    (    , int );
    protected IDictionary`2<int, string> ();
    protected  ();
    protected     ();
    protected BlockCollection ();
    public sealed virtual DocumentModel    ​ ();
    public sealed virtual IDictionary`2<string,    >    ​ ();
    public sealed virtual IDictionary`2<string, Byte[]>    ​ ();
    public virtual void    ​ (    );
    protected virtual void    ​ ();
    protected virtual bool    ​  (    );
    protected void (    , Func`1<BlockCollection> , string , Func`2<   , bool> );
    private void (    );
    private static Block (BlockCollection );
    private bool  (    );
    private bool (    , Paragraph );
    private void (    , InlineCollection , string , Action`1<   > );
    private void (    );
    private void (    , CharacterFormat );
    private Inline  (    );
    private BookmarkStart  (    );
    private BookmarkEnd  (    );
    private void (    );
    private void (    );
    private void (    );
    private void (    );
    private void (    ,     , TableRowCollection );
    private void (    ,     , TableCellCollection );
    private void (TableCell );
    private CharacterFormat (    , CharacterFormat );
    private void ();
    public sealed virtual TextBox    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private Dictionary`2<   ,    > ;
    private     ;
    private     ;
    [NullableAttribute("0")]
private   <int> ;
    private bool ;
    private bool ;
    private bool ;
    private      ;
    private double  ;
    private double  ;
    private double  ;
    private double  ;
    private      ;
    private      ;
    private int  ;
    private int  ;
    internal    (    );
    internal void (    ,     ,     ,     );
    internal     (    ,     ,     ,    & ,    & );
    internal void ();
    internal void (    ,     ,     ,     ,    & , bool );
    private static void (  <char> ,     ,    & );
    private void (int ,     ,    & );
    private static     (    ,  ,    & );
    private void (    ,     ,     );
    private void (    , int , int ,     ,    & );
    private double (int );
    private     (    );
    [NullableContextAttribute("0")]
private static bool (  <char> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private     ;
    private List`1<> ;
    private bool ;
    private bool ;
    public    (    ,     );
    public bool ();
    public void (bool );
    public void (Func`1<bool> );
    public void (Func`1<bool> );
    public void (Func`1<bool> , Action ,  );
    public void (Action ,  );
    public void ();
    public void ();
    private void ();
    private void ();
    private void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static void (    , Stream , ​   ,     ,  ,     ,     , ArrayPool`1<byte>  );
    private static  (    );
    private static bool (    , Int32& );
    private static bool (   [] , int );
    private static Nullable`1<bool> (    );
    private static bool (    , Int32& );
    private static bool (    , Int32& );
    private static bool (int ,  , int );
    private static bool (   [] ,  , int );
    private static bool (   [] ,  , int , int );
    private static void (    , Stream );
    private static void (    , Stream );
    private static void (    , Stream , bool ,     ,  ,     ,     , ArrayPool`1<byte>  );
    private static void (    , Stream ,  , int , bool ,     ,  ,      ,      , ArrayPool`1<byte>  );
    private static  ( );
    internal static Byte[] (    , bool , Boolean& );
    private static void (Stream , Stream , Int64& , long , int );
    private static void (Stream , double , double );
    internal static  (    , bool );
    internal static Nullable`1<> (Nullable`1<   > );
    private static Int32[] (   [] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private Func`2<   , > ;
    private TableCell ;
    private  ;
    private bool ;
    private    (Func`2<   , > );
    protected virtual bool    ​ (DocumentModel );
    protected virtual bool    ​ (Section );
    protected virtual bool    ​ (HeaderFooter );
    protected virtual bool    ​ (Paragraph );
    internal static bool (    ,     , Func`2<   , > , DocumentModel , Boolean& , & );
    protected virtual bool    ​ (Table );
    protected virtual bool    ​ (TableRow );
    protected virtual bool    ​ (TableCell );
    protected virtual bool    ​ (Field );
    protected virtual bool    ​ (Hyperlink );
    protected virtual bool    ​ (PreservedDrawingElement );
    protected virtual bool    ​ (Shape );
    protected virtual bool    ​ (Group );
    protected virtual bool    ​ (TextBox );
    protected virtual bool    ​ (Picture );
    protected virtual bool    ​ (Run );
    protected virtual bool    ​ (BookmarkStart );
    protected virtual bool    ​ (BookmarkEnd );
    protected virtual bool    ​ (SpecialCharacter );
    protected virtual bool    ​ (PreservedInline );
    protected virtual bool    ​ (TableOfEntries );
    protected virtual bool    ​ (Note );
    protected virtual bool    ​ (BlockContentControl );
    protected virtual bool    ​ (InlineContentControl );
    protected virtual bool    ​ (Chart );
    protected virtual bool    ​ (CommentStart );
    protected virtual bool    ​ (CommentEnd );
    protected virtual bool    ​ (Comment );
    protected virtual bool    ​ (MoveRangeSeparator );
    protected virtual bool    ​ (AlignmentTab );
    private static   <   > (U );
    private static    <   > (U );
    public static bool (Element , Func`2<   , U> , U& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static [] ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    internal ​   Source { get; }
    private static    ();
    public    (bool ,     );
    private    ( );
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public ​   ();
    public void (​   );
    internal     (    );
    internal     (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private string ;
    public    (string );
    public string ();
    public virtual     ​ ();
    public sealed virtual string    ​ ();
    public virtual string ToString();
}
[DefaultMemberAttribute("Item")]
[DebuggerTypeProxyAttribute("GemBox.Collections.EnumerableDebugView`1<   >")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private List`1<   > ;
    public int Count { get; }
    public     Item { get; public set; }
    internal    (    );
    internal    (    , List`1<   > );
    public sealed virtual int get_Count();
    public sealed virtual     get_Item(int );
    public sealed virtual void set_Item(int ,     );
    public sealed virtual void Add(    );
    internal void (    , double , double );
    internal void (    );
    internal void (    ,     ,     );
    public sealed virtual void Insert(int ,     );
    public sealed virtual void RemoveAt(int );
    public sealed virtual bool Remove(    );
    public sealed virtual void Clear();
    public sealed virtual bool Contains(    );
    public sealed virtual int IndexOf(    );
    public sealed virtual void CopyTo(   [] , int );
    public sealed virtual IEnumerator`1<   > GetEnumerator();
    internal static List`1<   > (IList`1<   > , int );
    internal void (   & );
    private void ();
    internal bool ();
    internal bool (    );
    internal bool (    , Double& , Double& );
    internal void (    ,     );
    private sealed virtual override bool    ​ ();
    private sealed virtual override IEnumerator    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Dictionary`2<, > ;
    public  ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (<   > , IList`1<> , bool );
    private static double (   [][] ,    [] );
    public static void (    , IList`1<   > );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual     ​ ();
    public abstract virtual void    ​ ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class     :    <> {
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal ​   Source { get; }
    private protected    (    , ​   );
    internal sealed virtual        ​ ();
    internal sealed virtual ​   get_Source();
    internal virtual ​      ​ ();
    private protected virtual int    ​ ();
    private protected sealed virtual int    ​ ();
    private protected virtual     ​ (int );
    private protected virtual void    ​ (int ,  );
    private protected virtual void    ​ (int ,  );
    private protected virtual void    ​ (int );
    private protected virtual void    ​ ();
    private protected virtual int    ​  ( );
    private protected virtual void    ​ (int ,  , bool );
    private protected virtual void    ​ ( );
    private protected virtual void    ​ ( );
    private protected virtual void    ​ ();
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual ​      ​ ();
    public abstract virtual void    ​ (​   );
    public abstract virtual bool    ​ ();
    public abstract virtual bool    ​ ();
    public abstract virtual bool    ​ ();
    public abstract virtual        ​ ();
    public abstract virtual     ​ ();
    public abstract virtual        ​ ();
    public abstract virtual        ​  ();
    public abstract virtual void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  ​  {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    private static    ();
    private    ( );
    internal static     (    );
    private protected virtual void    ​ (    );
    public virtual     ​ ();
    public     ();
    private protected virtual        ​  ();
    public    <   > ();
    internal     ();
    internal     (bool );
    internal     (bool , bool ,    & );
    internal     ();
    internal void (    );
    internal     ();
    internal void (    );
    internal ​   ();
    internal void (​   );
    internal ​   ();
    internal void (​   );
    internal ​    ();
    internal void (​   );
    internal ​    ();
    internal void (​   );
    public void  ();
    internal void (    );
    internal virtual        ​ (    );
    internal virtual void    ​ (    );
    private void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    );
    public double ();
    public void (double );
    public  ();
    public void ( );
    public     ();
    public void (    );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    private protected virtual void    ​ ​();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<DateTimeOffset> ;
    [DebuggerBrowsableAttribute("0")]
private IFormatProvider ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private string   { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private string   { get; }
    [NullableContextAttribute("1")]
internal    (    );
    public  ();
    internal void ( );
    internal Nullable`1<   > ();
    internal void (Nullable`1<   > );
    public double ();
    public void (double );
    public Nullable`1<DateTimeOffset> ();
    public void (Nullable`1<DateTimeOffset> );
    public string ();
    public void (string );
    public IFormatProvider  ();
    public void (IFormatProvider );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string  ();
    public void (string );
    [NullableContextAttribute("1")]
private string  ();
    [NullableContextAttribute("1")]
private string  ();
    private protected virtual void    ​ ​();
    [NullableContextAttribute("1")]
private void (    );
    [NullableContextAttribute("1")]
private      ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static IEnumerable`1<string> ;
    private static    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private static ​   ;
    internal static ​   ;
    internal static ​   ;
    internal static ​   ;
    internal static ​   ;
    internal static ​   ;
    internal static ​   ;
    private   ;
    private ​    ;
    internal    ( , ​   );
    private static    ();
    public sealed virtual     ​ ();
    public sealed virtual void    ​ ( );
    public static void ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static     ;
    [DebuggerBrowsableAttribute("0")]
private static     ;
    [DebuggerBrowsableAttribute("0")]
private ZipArchive ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ​  ;
    [DebuggerBrowsableAttribute("0")]
private ICollection`1<  > ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<string, ZipArchiveEntry> ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (Stream , ​  , bool , string );
    public    (Stream , ICollection`1<  > , string );
    private static    ();
    [IteratorStateMachineAttribute("   /")]
protected virtual IEnumerable`1<   >    ​ ();
    internal virtual        ​ (string , string , bool );
    protected virtual        ​ (    );
    private bool ();
    private void (bool );
    protected virtual void    ​ (bool );
    private static string (string );
    private static string (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    );
    public  ();
    public void ( );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    public double ();
    public void (double );
    private protected virtual void    ​ ​();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (    , ListLevelFormat );
    private static void (    , ListLevelFormat );
    private static void (    ,     , ListLevelFormat );
    private static void (    ,     , ListLevelFormat );
    private static void (    , ListLevelFormat );
    private static void (    ,     , ListLevelFormat , string );
    private static void (    ,     , ListLevelFormat );
    private static void (    ,     , string , ListStyle );
    private static bool (    ,     , string , ListStyle );
    public static void (    ,     , ListStyle , string );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private TextColumnCollection ;
    [NullableContextAttribute("2")]
public    (TextColumnCollection );
    public TextColumnCollection ();
    public void (TextColumnCollection );
    public virtual Style    ​ (DocumentModel );
    public virtual void    ​ ();
    protected virtual void    ​ (DocumentModel ,     );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  ​  {
    private NoteType ;
    public    (    , NoteType , string );
    protected virtual void  ​ ​ ();
    public Note (    );
    public void ();
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    [NullableAttribute("2")]
private string ;
    private string ;
    private bool ;
    private bool ;
    private bool ;
    private string ;
    private string  ;
    private string  ;
    [NullableAttribute("2")]
public string   { get; public set; }
    public string ();
    public void (string );
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    public string ();
    public void (string );
    public bool ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    internal      ();
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static object ;
    private static IDictionary`2<string, Color> ;
    public static IDictionary`2<string, Color> ;
    private static Dictionary`2<ElementType, string> ;
    private static List`1<string> ;
    private static Dictionary`2<ElementType, string> ;
    private static List`1<string> ;
    private static Dictionary`2<ElementType, string>  ;
    private static List`1<string>  ;
    private static Dictionary`2<ElementType, string>  ;
    private static Dictionary`2<ShapeType, string>  ;
    private static Dictionary`2<string, ShapeType>  ;
    private static    ();
    public static Color (string );
    public static bool (string );
    public static bool (string );
    public static string (ElementType );
    public static string (ElementType );
    public static string (ElementType );
    public static double (int );
    public static int (double );
    public static IDictionary`2<string, double> (    );
    public static void (    , IDictionary`2<string, double> );
    private static void (    , String& , String& );
    private static void (    , string , string );
    private static double (string );
    private static string (double );
    public static HorizontalPositionAnchor (string );
    public static string (HorizontalPositionAnchor );
    public static HorizontalPositionType (string );
    public static string (HorizontalPositionType );
    public static VerticalPositionAnchor (string );
    public static string (VerticalPositionAnchor );
    public static VerticalPositionType  (string );
    public static string (VerticalPositionType );
    public static WrapTextType  (string );
    public static string (WrapTextType );
    public static ShapeType  (string );
    public static string (ShapeType );
    public static TextDirection  (string );
    public static string (TextDirection );
    public static VerticalAlignment  (string );
    public static string (VerticalAlignment );
    public static PenCompoundType  (string );
    public static string (PenCompoundType );
    public static   (string );
    public static string ( );
    public static   (string );
    public static string ( );
    public static   (string );
    public static string ( );
    private static NotSupportedException (T );
    private static NotSupportedException (string );
    private static NotSupportedException (string , string );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public     ;
    public string ;
    public     ;
    private bool ;
    public bool ();
    public void (bool );
    public void (    );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (    ,     );
    private static void (    ,     , Section , int );
    private static void (    ,     );
    public static void (    ,     );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual bool    ​ (   & );
    public abstract virtual void    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & );
    public abstract virtual void    ​ (   & ,    & modreq(System.Runtime.InteropServices.InAttribute) );
    public abstract virtual void    ​ (   & ,    & modreq(System.Runtime.InteropServices.InAttribute) );
    public abstract virtual void    ​ (   & , double );
    public abstract virtual void    ​ (   & , double );
    public abstract virtual        ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) );
    public abstract virtual void    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & );
    public abstract virtual bool    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) , IEqualityComparer`1<double> , Double& );
    public abstract virtual bool    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) , IEqualityComparer`1<double> , Double& );
    public abstract virtual bool    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) , IEqualityComparer`1<double> ,    & );
    public abstract virtual bool    ​ (   & ,    & , IEqualityComparer`1<double> );
    public abstract virtual bool    ​ (   & ,    & , IEqualityComparer`1<double> );
    public abstract virtual double    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) );
    public abstract virtual double    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) );
    public abstract virtual bool    ​ (   & , Double& ,    & );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Int32[0...,0...] (Table );
    private static int (Table );
    private static void (    );
    private static void (    ,     , TableCell );
    private static void (    ,     , TableColumn , TableCell );
    private static void (    ,     , Table );
    private static void (    ,     , IEnumerable`1<TableRow> , Int32[0...,0...] );
    private static void (    ,     , TableRow , Int32[0...,0...] , int );
    public static void (    ,     , Table );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Field (    , FieldType , string , string );
    private static Field (    ,     , FieldType , string );
    private static Field (    ,     , FieldType );
    private static Field (    ,     , FieldType );
    private static Field (    ,     );
    private static Field (    ,     );
    private static Field (    ,     );
    private static Field (    ,     );
    public static Field (    ,     , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    public static string (object , object );
    public static string (object );
    public static string (object );
    public static string (object );
    public static string (object , object );
    public static string (object , object , object );
    public static string (object , object );
    public static string (object , object );
    public static string (object , object , object );
    public static string (object , object );
    public static string (object , object , object );
    public static string (object , object , object , object );
    public static string (object , object );
    public static string (object , object );
    public static string (object , object , object , object );
    public static string (object , object , object );
    public static string (object , object , object , IEnumerable );
    public static string (int ,     );
    public static string ( ,  );
    public static string ( );
    public static string (Type , string , int , int , string );
    public static string (Type , int , int , string );
    public static string (int ,     ,     );
    public static string (int , double , double );
    public static string (object );
    public static string (int , bool , double );
    public static string (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  ​  {
    public    (    );
    public void (    , Comment , Dictionary`2<Comment, int> );
    public void ();
    protected virtual   <string,    >  ​ ​ (BlockCollection );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private     ;
    private     ;
    public    (    ,     ,     );
    public sealed virtual Uri    ​ ();
    public sealed virtual MemoryStream    ​ (string , string );
    [IteratorStateMachineAttribute("   /")]
private IEnumerable`1<string> (string );
    private static Uri (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal ​   Source { get; }
    internal    (​   );
    private static    ();
    public virtual     ​ ();
    public virtual int    ​ ();
    internal virtual int    ​  ();
    internal virtual        ​  ();
    internal virtual ​      ​  ();
    internal virtual ​   get_Source();
    private ​   ();
    internal     ();
    internal     ();
    internal virtual bool    ​ (    , Double& , Double& , Double& );
    internal virtual string    ​ (int );
    private protected virtual void    ​ (    ,     );
    private protected virtual void    ​ (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private static IDictionary`2<ElementType, Func`2<DocumentModel, Element>> ;
    private ContentRange ;
    private ParagraphFormat ;
    private CharacterFormat ;
    private ImportMapping ;
    public    (ImportMapping , ContentRange , ParagraphFormat , CharacterFormat );
    private static    ();
    public ImportMapping ();
    public Element (ElementType , DocumentModel );
    public bool (Element );
    public static bool (Element , ContentPosition );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
    private static bool (​   , ​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (    , Paragraph ,     );
    private static TableOfEntries (    ,     );
    public static Paragraph (    ,     , bool , Nullable`1& );
    public static Paragraph (    ,     , Nullable`1& );
    [IteratorStateMachineAttribute("   /")]
public static IEnumerable`1<   > (    ,     );
}
[NullableContextAttribute("1")]
internal interface     {
    [NullableAttribute("2")]
public       { get; }
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ ( );
    public abstract virtual bool    ​ ();
    public abstract virtual void    ​ (bool );
    public abstract virtual        ​  ();
    public abstract virtual void    ​ (    );
    public abstract virtual double    ​  ();
    public abstract virtual void    ​ (double );
    public abstract virtual     ​ ();
    public abstract virtual void    ​ ( );
    public abstract virtual void    ​ ( );
    public abstract virtual bool    ​ ();
    public abstract virtual void    ​ (bool );
    public abstract virtual        ​  ();
    public abstract virtual void    ​ (    );
    public abstract virtual double    ​  ();
    public abstract virtual void    ​ (double );
    public abstract virtual double    ​  ();
    public abstract virtual void    ​ (double );
    public abstract virtual     ​  ();
    public abstract virtual void    ​ ( );
    public abstract virtual     ​  ();
    public abstract virtual void    ​ ( );
    public abstract virtual double    ​  ();
    public abstract virtual void    ​ (double );
    public abstract virtual        ​  ();
    public abstract virtual void    ​ (    );
    public abstract virtual bool    ​ ();
    public abstract virtual void    ​ (bool );
    public abstract virtual void    ​ ( );
    public abstract virtual bool    ​ ();
    public abstract virtual void    ​ (bool );
    public abstract virtual bool    ​ ();
    public abstract virtual void    ​ (bool );
    public abstract virtual bool    ​ ();
    public abstract virtual void    ​ (bool );
    [NullableContextAttribute("2")]
public abstract virtual        ​  ();
    public abstract virtual        ​ (Double& );
    public abstract virtual void    ​ (    , double );
    public abstract virtual double    ​  ();
    public abstract virtual void    ​ (double );
    public abstract virtual double    ​  ();
    public abstract virtual void    ​ (double );
    public abstract virtual double    ​  ();
    public abstract virtual void    ​ (double );
    public abstract virtual double    ​  ();
    public abstract virtual void    ​  (double );
    public abstract virtual double    ​  ();
    public abstract virtual void    ​  (double );
    public abstract virtual bool    ​ ();
    public abstract virtual void    ​ (bool );
    public abstract virtual bool    ​  ();
    public abstract virtual void    ​  (bool );
    public abstract virtual     ​ ();
    public abstract virtual void    ​ ( );
    public abstract virtual void    ​ ( );
    public abstract virtual        ​  ();
    public abstract virtual void    ​ (    );
    public abstract virtual ​      ​  ();
    public abstract virtual void    ​ (​   );
    public abstract virtual ​      ​  ();
    public abstract virtual void    ​ (​   );
    public abstract virtual bool    ​  ();
    public abstract virtual void    ​  (bool );
    public abstract virtual ​      ​  ();
    public abstract virtual void    ​ (​   );
    public abstract virtual void    ​ ( );
    public abstract virtual bool    ​  ();
    public abstract virtual void    ​  (bool );
    public abstract virtual bool    ​  ();
    public abstract virtual void    ​  (bool );
    public abstract virtual int    ​  ();
    public abstract virtual void    ​ (int );
    public abstract virtual ​      ​  ();
    public abstract virtual void    ​ (​   );
    public abstract virtual ​      ​  ();
    public abstract virtual void    ​ (​   );
    public abstract virtual ​      ​  ();
    public abstract virtual void    ​ (​   );
    public abstract virtual ​      ​  ();
    public abstract virtual void    ​ (​   );
    public abstract virtual Nullable`1<   >    ​  ();
    public abstract virtual void    ​ (Nullable`1<   > );
    public abstract virtual double    ​  ();
    public abstract virtual void    ​  (double );
    public abstract virtual double    ​  ();
    public abstract virtual void    ​  (double );
}
internal static class     : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    private string ;
    private string ;
    private string ;
    private string ;
    private string ;
    private string ;
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private     ;
    private bool ;
    public    (    , DocumentModel , bool );
    private void (string , string , Action`1<   > );
    public virtual void    ​ ();
    private void (    );
    private void (    );
    private void (    );
    private void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    private protected    (    ,     );
    public     ();
    protected Stream ();
    protected bool ();
    protected abstract virtual void    ​ (​   );
    protected virtual void    ​ (​   );
    internal long ();
    protected int ();
    protected int ();
    protected void (    );
    protected void (long );
    private byte ();
    protected void (byte );
    protected void  ();
    protected void (int );
    protected void  ();
    protected void  ();
    protected void  ();
    protected void (string );
    protected void (string ,     , bool );
    protected void  ();
    protected void  ();
    internal void  ();
    protected void (string );
    protected void (string );
    private void (string );
    private void  ();
    protected void (​   );
    protected void (​   );
    protected void (double );
    protected void (​   );
    internal void (int );
    protected void (int , string );
    internal void (long );
    protected void (long , string );
    private void (double );
    protected void (​   );
    private void (byte );
    protected void (    );
    protected virtual       ​ (   );
    private void (   );
    private static bool (   , int );
    private static bool (   , int );
    private static bool (   , int );
    internal void (   , bool , bool );
    protected void (​   );
    protected virtual void    ​ ( );
    protected void (​   );
    protected abstract virtual void    ​ (​   );
    protected void (​   );
    protected virtual void    ​ (bool );
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Dictionary`2<string, string> ;
    private static    ();
    private static bool (string );
    public static string (string ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    private static    ();
    private    ( );
    private protected virtual void    ​ (    );
    public virtual     ​ ();
    private protected virtual        ​  ();
    internal virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    private Element ;
    private List`1<int> ;
    private List`1<int> ;
    private ContentRange ;
    private bool ;
    private bool ;
    protected    (ContentRange );
    protected Element ();
    private void (Element );
    protected List`1<int> ();
    private void (List`1<int> );
    protected List`1<int> ();
    private void (List`1<int> );
    protected ContentRange ();
    private void (ContentRange );
    protected bool ();
    private void (bool );
    protected bool ();
    private void (bool );
    public Element ();
    private void (ElementCollection , int , bool );
    protected abstract virtual int    ​ (int , bool , int , bool );
    protected abstract virtual int    ​ (int , bool , int , bool );
    private bool (Element , int , bool );
    protected abstract virtual void    ​ (ElementCollection , int , int );
    protected abstract virtual bool    ​ (Element , Nullable`1<int> , bool );
    protected virtual Element    ​ (Element );
    private void (Element , int , int );
    protected abstract virtual void    ​ (Run , int , int );
    protected abstract virtual void    ​ (Element );
    private static List`1<int> (Element , ContentPosition );
    protected static ElementCollection (Element );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    internal ​   Source { get; }
    internal    (​   );
    private static    ();
    public virtual     ​ ();
    public virtual int    ​ ();
    internal virtual int    ​  ();
    internal virtual    []    ​  ();
    internal virtual        ​  ();
    internal virtual ​      ​  ();
    internal virtual ​   get_Source();
    private     ();
    internal virtual bool    ​ (    , Double& , Double& , Double& );
    internal virtual string    ​ (int );
    internal virtual bool    ​ (    );
    private protected virtual void    ​ (    ,     );
    private protected virtual void    ​ (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private Dictionary`2<string,  ​ > ;
    private static Regex ;
    public    (    );
    private static    ();
    public Nullable`1< ​ > (string );
    private Nullable`1< ​ > (string );
    private static Nullable`1< ​ > (Match );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal ​   Source { get; }
    internal    (​   );
    private static    ();
    public virtual     ​ ();
    public virtual int    ​ ();
    internal virtual        ​  ();
    internal virtual ​      ​  ();
    internal virtual ​   get_Source();
    private  ();
    internal     ();
    internal virtual bool    ​ (    , Double& , Double& , Double& );
    internal virtual string    ​ (int );
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [IsReadOnlyAttribute]
public int ();
    public void (int );
    [IsReadOnlyAttribute]
public int ();
    public void (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private int ;
    public    (int , IList`1<   > );
    public int ();
    public virtual     ​ ();
    public virtual ColorDataName    ​ ();
    protected virtual        ​ (    );
    protected virtual        ​ (IList`1<   > );
    protected virtual bool    ​ (    );
    protected virtual int    ​ ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : EventArgs {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    internal    (    ,     );
    internal     ();
    public     ();
    internal  ();
    private void ( );
    public bool (string );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<string,    > ;
    public bool IsReadOnly { get; }
    public int Count { get; }
    [DebuggerBrowsableAttribute("0")]
public      { get; }
    public    (IEnumerable`1<   > );
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual int get_Count();
    public     (string );
    private sealed virtual override IEnumerator    ​ ();
    public sealed virtual bool Contains(    );
    public sealed virtual void Add(    );
    public sealed virtual bool Remove(    );
    public sealed virtual void Clear();
    public sealed virtual void CopyTo(   [] , int );
    public sealed virtual IEnumerator`1<   > GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ​   {
    internal virtual void ​  ​ (    , Stream , string );
    private static void (    , Stream , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static bool (string );
    private static bool (string );
    private static bool (string );
    private static bool (string );
    private static bool (string );
    public static void (string ,     ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <UInt32> ;
    private static <UInt32> ;
    private UInt32 ;
    private static    ();
    public UInt32 ();
    public void (UInt32 );
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
    public static     ();
    public virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private     ;
    public    (    ,     );
    public sealed virtual Uri    ​ ();
    public sealed virtual MemoryStream    ​ (string , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private Byte[] ;
    public Byte[] ();
    public void (Byte[] );
    public static     (​ );
    public virtual ​    ​ (​ );
    public virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (    , StringBuilder );
    private static void (    , StringBuilder );
    public static bool (StringBuilder , string , StringComparison );
    public static bool (StringBuilder , string , StringComparison );
    public static bool (string , string , StringComparison );
    public static bool (string , string , StringComparison );
    public static Exception (int , char );
    public static bool (char );
    public static void (    , bool );
    public static StringBuilder (StringBuilder );
    public static void (StringBuilder , string );
    public static void (    , StringBuilder , bool );
    public static bool (    , StringBuilder , String& , String& );
    private static void (string , StringBuilder , Predicate`1<char> );
    public static void (string , StringBuilder ,     );
    public static void (string , StringBuilder , string );
    public static void ( ​  , StringBuilder , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Char[] ;
    private static Char[] ;
    private static    ();
    public static Uri (string );
    public static string (string );
    public static string (string );
    public static string (string );
    public static string (string );
    public static bool  (string );
    public static bool  (string );
    public static bool  (string );
    public static string (string );
    public static string (string );
    [IteratorStateMachineAttribute("   /")]
public static IEnumerable`1<KeyValuePair`2<string, string>>  (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private IList`1<   > ;
    public    (   [] );
    public    (IList`1<   > );
    public IList`1<   > ();
    public sealed virtual        ​ ();
    public sealed virtual bool    ​ ( ​  ,    & );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <UInt32> ;
    private UInt32 ;
    private static    ();
    public UInt32 ();
    public void (UInt32 );
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
    public static     ();
    public virtual        ​ ();
}
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public int  ();
    public void (int );
    public int  ();
    public void (int );
    public int  ();
    public void (int );
    public int  ();
    public void (int );
    public int  ();
    public void (int );
    public int  ();
    public void (int );
    [NullableContextAttribute("1")]
public sealed virtual bool Equals(    );
    [NullableContextAttribute("2")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (    ,     );
    public sealed virtual void    ​ (   , string , Stream );
    private static     (    );
    private static void (string , string ,  ,     ,  );
    private static void (    );
    private static void (    );
    private static void ( ​ ,     ,  );
    private static void (StringBuilder , string , String[] );
    private static string (string );
}
[ExtensionAttribute]
internal static class     : object {
    [NullableContextAttribute("1")]
private static Dictionary`2<TEnum, TValue> (Func`2<TAttribute, TValue> , bool );
    [NullableContextAttribute("1")]
private static Dictionary`2<TEnum, TValue> (Func`2<TAttribute, TValue> );
    public static Dictionary`2<TEnum, TAttribute> ();
    public static Dictionary`2<TEnum, string> (bool );
    public static Dictionary`2<TEnum, string> ();
    public static bool (int , int );
    public static int (int , int , bool );
    public static int ();
    public static TEnum[] ();
    [ExtensionAttribute]
public static string  (TEnum );
    [ExtensionAttribute]
public static string  (TEnum );
    public static IEnumerable`1<KeyValuePair`2<TEnum, TAttribute>>  ();
    public static IEnumerable`1<KeyValuePair`2<TEnum, IEnumerable`1<TAttribute>>>  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private    ;
    public    (    , Byte[] , MD5 ,    );
    protected internal virtual Byte[]    ​ (​   , Byte[] , int , int , Int32& , Int32& );
    protected internal virtual Byte[]    ​ (​   , Byte[] , int , int , Int32& , Int32& );
    protected internal virtual Byte[]    ​ (​   ,     , Byte[] , int , int , Int32& , Int32& );
    protected internal virtual Byte[]    ​ (​   ,     , Byte[] , int , int , Int32& , Int32& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :    {
    public  FillDataType { get; }
    public abstract virtual  get_FillDataType();
    public sealed virtual bool Equals(object );
    public abstract virtual bool Equals(    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    internal ​   Source { get; }
    private static    ();
    private    ( );
    internal sealed virtual ​   get_Source();
    internal sealed virtual     ​ ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    public  ();
    public void ( );
    public  ();
    public void ( );
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    public bool ();
    public void (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  ​  {
    private string ;
    private string ;
    public    (string , string );
    public string ();
    public virtual   ​ ​ ();
    public string ();
    public void (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private [] ;
    private bool ;
    public    (int );
    public [] (int );
    public void ([] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private Stream ;
    public    (Stream , bool );
    protected virtual void    ​ ();
    public virtual bool    ​ ();
}
internal class     : CryptographicException {
    [NullableContextAttribute("1")]
public    (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Uri ;
    private static    ();
    public static void (string , String& , Boolean& , String& );
    public static string (string );
    public static bool (string );
    public static string (string );
    public static string (string , string );
    public static string (string , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    internal    (    );
    protected virtual        ​ ();
    private static     (    );
    protected abstract virtual        ​ ();
    protected sealed virtual void    ​ (    );
    private static void (    ,  );
    private static void (    , string , Nullable`1<DateTimeOffset> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private XmlWriter ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    public    (Stream );
    public    (Stream , string );
    public    (XmlWriter );
    public    (XmlWriter , string );
    private    (XmlWriter , string , bool );
    public void ();
    public void (string );
    public void (string , string );
    public void ();
    public void ();
    public void (T );
    public void (string );
    public void (string , T );
    public void (string , T );
    public void (string , T , string );
    [NullableContextAttribute("0")]
public void (string , Nullable`1<T> );
    [NullableContextAttribute("0")]
public void  (string , Nullable`1<T> , string );
    public void  (string , string , T );
    public void  (string , string , T , string );
    public void (string , T );
    public void (string , bool );
    public void (string , Nullable`1<bool> );
    [NullableContextAttribute("0")]
public void (string , Nullable`1<T> );
    [NullableContextAttribute("0")]
public void  (string , Nullable`1<T> , string );
    public void (string , string );
    public void (string );
    public     ();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<   ,    > ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    );
    public     ();
    public abstract virtual void    ​ ();
    public     (    );
    protected void ();
    internal virtual bool    ​ (    );
    protected virtual void    ​ (bool );
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private string ;
    public    (    );
    public string ();
    public void (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private bool ;
    public    (bool );
    public virtual     ​ ();
    public bool ();
    private void (    , Stream );
    public virtual void    ​ (    , Stream );
    public virtual int    ​ (    , Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static string (string , bool );
    public static string (    , bool );
    public static string (    , bool );
    public static     (string );
    public static     (    );
    private static void (    , IList`1<   > , bool );
    public static void (    , StringBuilder );
    public static void (    , IList`1<   > );
    public static void (    , IList`1<   > );
    public static void (    , IList`1<   > );
    public static string (    );
    public static void (    , Stream , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private IList`1<   > ;
    public IList`1<   > ();
    public void (IList`1<   > );
    public     ();
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
private    [] ;
    [DebuggerBrowsableAttribute("0")]
public      { get; }
    public    (   [] );
    private static    ();
    public int ();
    public     (int );
    public bool ( , UInt32& );
    public virtual bool Equals(object );
    public sealed virtual bool Equals(    );
    public virtual int GetHashCode();
    public virtual string ToString();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    [NullableContextAttribute("0")]
public   <   > ();
    private sealed virtual override IEnumerator`1<   >    ​ ();
    private sealed virtual override IEnumerator    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private static     ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    private bool ;
    private bool ;
    private EventHandler`1<   > ;
    private static    ();
    public static     ();
    public bool ();
    public void (bool );
    public string ();
    public void (string );
    public bool ();
    public void (bool );
    public void (EventHandler`1<   > );
    public void (EventHandler`1<   > );
    internal void (    ,     );
    internal     ();
    internal     (Nullable`1<> ,     ,    ,    );
    internal static ​   ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private List`1<int> ;
    private sbyte ;
    private bool ;
    private bool ;
    private bool ;
    private bool ;
    private    <> ;
    private    <>  ;
    private    <int>  ;
    private    <>  ;
    private    <>  ;
    [NullableAttribute("0")]
public    <>  ;
    [NullableAttribute("0")]
public    <>  ;
    [NullableAttribute("0")]
public    <int>  ;
    public    <sbyte>  ;
    public sbyte ();
    public bool ();
    public bool ();
    public bool ();
    [NullableContextAttribute("0")]
public void (   <int> , sbyte );
    public bool ();
    private static int (int );
    public int  ();
    public void ();
    public void ();
    [NullableContextAttribute("0")]
public    <sbyte> (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    internal ​   Source { get; }
    private static    ();
    private    (​   );
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    internal static     (double , double , double , double );
    internal static     (double , double ,     );
    public double ();
    public double ();
    public double ();
    public double ();
    public double ();
    public double ();
    internal     ();
    internal bool  ();
    public virtual string ToString();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    internal      ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
private IList`1<   > ;
    protected    (IList`1<   > );
    public abstract virtual     ​ ();
    public abstract virtual ColorDataName    ​ ();
    public IList`1<   > ();
    public     (    );
    public     (IEnumerable`1<   > );
    protected abstract virtual        ​ (IList`1<   > );
    protected abstract virtual        ​ (    );
    protected bool (    );
    protected virtual bool    ​ (    );
    protected virtual int    ​ ();
    public sealed virtual bool Equals(    );
    public sealed virtual bool Equals(object );
    public sealed virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<, > ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<, Typeface> ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<, Brush> ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<, Pen> ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<, BitmapSource> ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<   , DrawingImage> ;
    [DebuggerBrowsableAttribute("0")]
public bool ;
    [DebuggerBrowsableAttribute("0")]
public bool  ;
    [DebuggerBrowsableAttribute("0")]
public   ;
    [DebuggerBrowsableAttribute("0")]
public      ;
    [DebuggerBrowsableAttribute("0")]
public      ;
    [DebuggerBrowsableAttribute("0")]
internal double  ;
    [DebuggerBrowsableAttribute("0")]
internal double  ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    internal    (bool , bool ,  , double , double );
    public GlyphTypeface (    ,  , Boolean& );
    public Typeface (    ,  );
    public Brush (    );
    private Brush ( );
    public Pen (    );
    public BitmapSource (    );
    public DrawingImage (    );
    public sealed virtual void Dispose();
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private static    [] ;
    private Dictionary`2<string, double> ;
    private double ;
    private double ;
    public double  { get; public set; }
    public    (double , double );
    private static    ();
    public double ();
    public double ();
    public void (   [] );
    public void (    );
    public double (string );
    public void (string , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private object ;
    private Byte[] ;
    private bool ;
    private int ;
    private double ;
    private double ;
    private bool ;
    private bool  ;
    private int  ;
    private int  ;
    private int  ;
    private Nullable`1<int>  ;
    [CompilerGeneratedAttribute]
public sealed virtual object   ​ ();
    public void (object );
    [CompilerGeneratedAttribute]
public sealed virtual Byte[]   ​ ();
    public void (Byte[] );
    public bool ();
    public void (bool );
    [CompilerGeneratedAttribute]
public sealed virtual int   ​ ();
    public void (int );
    [CompilerGeneratedAttribute]
public sealed virtual double   ​ ();
    public void (double );
    [CompilerGeneratedAttribute]
public sealed virtual double   ​  ();
    public void (double );
    [CompilerGeneratedAttribute]
public sealed virtual bool   ​  ();
    public void (bool );
    [CompilerGeneratedAttribute]
public sealed virtual bool   ​  ();
    public void (bool );
    [CompilerGeneratedAttribute]
public sealed virtual int   ​ ();
    public void (int );
    [CompilerGeneratedAttribute]
public sealed virtual int   ​ ();
    public void (int );
    [CompilerGeneratedAttribute]
public sealed virtual int   ​ ();
    public void (int );
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int>   ​  ();
    public void (Nullable`1<int> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private static FieldInfo[] ;
    [ThreadStaticAttribute]
private static     ;
    private Thread ;
    private    (Thread );
    private static    ();
    protected virtual override void Finalize();
    public static void ();
    public static bool ();
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <KeyValuePair`2<​  ,    >> {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private   <> ;
    internal ​   Source { get; }
    [DebuggerBrowsableAttribute("0")]
public      { get; public set; }
    internal    ( );
    private static    ();
    private  ();
    private  ();
    private void ();
    internal virtual     ​ ();
    internal virtual ​   get_Source();
    internal virtual ​      ​ ();
    internal virtual ​      ​  ();
    internal virtual        ​ ();
    internal virtual bool    ​  ();
    private protected virtual bool    ​  ();
    private protected virtual bool    ​  ();
    private protected virtual object    ​ ();
    private protected virtual int    ​ ();
    private protected virtual int    ​ ();
    private int ();
    public void (​   ,     );
    public     (​   );
    public void (​   ,     );
    public bool (​   ,    & );
    public bool (​   );
    public bool (​   );
    private protected virtual KeyValuePair`2<​  ,    >    ​ (​   );
    private protected virtual ​      ​ (KeyValuePair`2<​  ,    > );
    private protected virtual KeyValuePair`2<​  ,    >    ​ (int );
    private protected virtual void    ​ (int , KeyValuePair`2<​  ,    > );
    private protected virtual void    ​ (KeyValuePair`2<​  ,    > );
    private protected virtual void    ​ (int , KeyValuePair`2<​  ,    > );
    private protected virtual void    ​ (int );
    private protected virtual bool    ​  (KeyValuePair`2<​  ,    > );
    private protected virtual void    ​ ();
    private protected virtual int    ​  (KeyValuePair`2<​  ,    > );
    private protected virtual bool    ​  (KeyValuePair`2<​  ,    > );
    private protected virtual void    ​  (KeyValuePair`2[] , int );
    public  ();
    private protected virtual IEnumerator`1<KeyValuePair`2<​  ,    >>    ​  ();
}
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    ( ,     ,     ,     );
    public  ();
    public     ();
    public     ();
    public     ();
    public virtual int GetHashCode();
    public sealed virtual bool Equals(    );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
public sealed virtual string ToString(string , IFormatProvider );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
internal class     :     {
    private     ;
    private     ;
    private double ;
    private double ;
    private double ;
    private double ;
    private double ;
    private double  ;
    private double  ;
    private double  ;
    private double  ;
    private double  ;
    private double  ;
    private double  ;
    private double  ;
    private double  ;
    private double  ;
    private bool  ;
    [NullableContextAttribute("1")]
public    ( ​  ,     ,  ,     , double , bool ,     , double  , bool  );
    protected virtual double    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Dictionary`2<   ,    > ;
    private Dictionary`2<   ,    > ;
    private Dictionary`2<   ,    > ;
    internal     (    );
    internal     (    );
    internal     (    );
    internal void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    internal    (    );
    internal    (    );
    private static    ();
    internal     ( , string );
    public     ( , string , string ,     );
    public     ( , string , string ,     );
    private protected virtual        ​ (​   );
    private protected virtual ​      ​ (    );
    private protected virtual void    ​ (int ,     , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private protected bool ;
    internal     (    ,     );
    private sealed virtual override bool    ​ (   );
    private sealed virtual override       ​ ();
    private sealed virtual override        ​ ();
    private sealed virtual override       ​ ();
    private sealed virtual override        ​ ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override bool    ​ ();
    private sealed virtual override void    ​ (bool );
    private sealed virtual override bool    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
internal double ;
    [DebuggerBrowsableAttribute("0")]
internal double ;
    [DebuggerBrowsableAttribute("0")]
internal double ;
    [DebuggerBrowsableAttribute("0")]
internal double ;
    public    (double , double , double , double );
    public double ();
    public double ();
    public double ();
    public double ();
    internal static     (​   );
    internal ​   ();
    internal     ();
    public virtual string ToString();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private   <   > ;
    private   <   > ;
    private   <   > ;
    private double ;
    private int ;
    private int ;
    private     ;
    public      { get; }
    public int ();
    private void (int );
    public int ();
    private void (int );
    [CompilerGeneratedAttribute]
public sealed virtual        ​ ();
    private void (    );
    public int ();
    public     (int );
    public void (    , int );
    public bool (    ,     , bool );
    public void (    ,     );
    public     (   & , bool );
    private void (int , int , bool );
    private sealed virtual override        ​ ();
    private sealed virtual override        ​ (int );
    private sealed virtual override        ​ (int );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    internal ​   Source { get; }
    private      { get; private set; }
    private static    ();
    private    (​   );
    internal static     (Guid );
    internal virtual ​   get_Source();
    private     (int );
    private void (int ,     );
    internal     ();
    public Byte[] ();
    public Guid ();
    public Byte[] ();
    public Guid ();
    public void (Guid );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public    (    ,  , bool );
    public     ();
    public  ();
    public bool ();
    public virtual bool Equals(object );
    public sealed virtual bool Equals(    );
    internal bool (    );
    internal     (    );
    public virtual int GetHashCode();
    public static bool (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private ​    ;
    internal ​     { get; }
    internal ​   Source { get; }
    internal    (​   );
    private static    ();
    internal virtual ​      ​  ();
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public   ();
    public void ( );
    public bool ();
    public void (bool );
    public   ();
    public void ( );
    public   ();
    public void ( );
    public   ();
    public void ( );
    public   ();
    public void ( );
    public bool  ();
    public void  (bool );
    public void  ();
    internal  ( );
    internal  ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private     ;
    private    (    );
    private     ();
    public static     (    );
    private void (    );
    private void (    );
    private     (    );
    private     (    );
    private void (    );
    private TableStyleFormat (    );
    private static StyleType (string );
    private static TableStyleFormatType (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private ArrayPool`1<byte> ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private    []  ;
    [DebuggerBrowsableAttribute("0")]
private    []  ;
    [DebuggerBrowsableAttribute("0")]
private    []  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private Double[]  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   >  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public      { get; }
    public    (    ,     ,     , ArrayPool`1<byte> );
    public virtual        ​ ();
    public virtual int    ​ ();
    public virtual int    ​ ();
    public virtual double    ​ ();
    public virtual double    ​ ();
    public virtual     ​ ();
    public virtual    []    ​ ();
    public virtual Byte[]    ​  ();
    [NullableContextAttribute("2")]
public virtual        ​  ();
    public virtual void    ​ (Action`1<ArraySegment`1<byte>> ,  ,     ,  ​  , ArrayPool`1<byte> );
    private Byte[] (ArrayPool`1<byte> , int , Boolean& );
    private Byte[] (int , ArrayPool`1<byte> , int , Boolean& );
    private void (    );
    private void (    );
    private void (   [] );
    private void ();
    public sealed virtual void Dispose();
    private static void (Byte[] , int , int , int , Int32& ,    []& , Boolean& );
    private static void (Byte[] , int , int , int ,    [] );
    private static void (Byte[] , int , int , int , Int32& ,    [] );
    private static void (Byte[] , int , int , int ,    & , Int32& ,    []& );
    private static void (Byte[] , int , Int32& , Int32& , int , int , int , Int32&  , ArrayPool`1<byte>  , bool  );
    private static void (Byte[] , int , int , int ,     , Int32& , int , int  , Int32&  , int  );
    private static void (Byte[] , int , int , int ,    & , Int32& );
    private static void (Byte[] , int , int , int ,    & , Int32& );
    private static void (Byte[] , int , int , int ,     , Int32& );
    private static void (int , int ,    & , int , int , Int32& , Byte[] );
    public bool (Stream );
    private static Byte[] (    ,    & );
    private static void (Byte[] , int , int , int , Byte[] , int );
    private void (    );
    private void (    );
    private void (    );
    private static void (Byte[] , int , int , int , int , int );
    private static void (Byte[] , int , int , int , int );
    private static void (Byte[] , int , int , int , int );
    private static void (Byte[] , int , int , int , int );
    private static void (Byte[] , int , int , int , byte );
    private static void (Byte[] , int , int , int , int );
    private static void (Byte[] , int , int , int );
    private static void (Byte[] , int , int , int );
    private static void (Byte[] , int , int ,    [] , int );
    private static bool (Byte[] , int ,    [] );
    private static void (Byte[] , int , int ,    [] , int );
    private static bool (Byte[] , int ,    [] );
    private static void (Byte[] , int , int , int ,     , Int32& ,    []& );
    private static bool (   [] ,     , int ,    []& );
    private static void (Byte[] , int , int , int ,    [] ,    [] , int );
    private static void (Byte[] , int , int ,    [] ,    [] , int );
    private static [] (int ,    [] ,    [] , int );
    private static void (Byte[] , int , int , int ,     , int , int , Double[]  , int  );
    private static void (Byte[] , int , int , Double[] ,    [] , int );
    private static void (Byte[] , int , int , Double[] ,    [] , int );
    private static void (int , Double[] ,    [] , []& , & );
    private static void (Byte[] , int , int , int ,    & , Int32& );
    private static void (Byte[] , int , int , int ,    & , Int32& );
    private static void (Byte[] , int , int , int ,    & , Int32& );
    private static void (Byte[] , int , int , int , int );
    private static void (Byte[] , int , int ,    [] ,    [] , Action`2<Double[], Double[]> );
    private static void (Byte[] , int , int ,    [] ,    [] , Action`2<Double[], Double[]> );
    private static void (int ,    [] ,    [] , []& , []& );
    internal void ( );
    private static void ( , Byte[] , int , Int32& , Int32& , int , ArrayPool`1<byte> , Byte[]&  );
    private static Byte[] (Byte[] , int , ArrayPool`1<byte> , int );
}
[NullableContextAttribute("1")]
internal interface     {
    public int EstimatedSignatureLength { get; }
    public abstract virtual string    ​ ();
    public abstract virtual int get_EstimatedSignatureLength();
    public abstract virtual Byte[] Sign(Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    private static    ();
    protected virtual     ​ ();
    public  ();
    public void ( );
    public  ();
    public void ( );
    public  ();
    public void ( );
    public  ();
    public void ( );
    public   ();
    public void ( );
    internal bool  ();
    public  ();
    public  ();
    public  ();
    public   ();
    public   ();
    internal T (T& );
    public bool (    ,  );
    protected virtual bool    ​ (    );
    protected virtual void    ​ (   & );
    protected virtual void    ​ (    );
    private static void (T& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    public     ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
internal bool ;
    internal    (    ,     ,     );
    public virtual     ​ ();
    public virtual        ​ ();
    internal virtual     ​  ();
    public     ();
    public void (    );
    public bool ();
    public void (bool );
    public void (Stream , ​   );
    public void (string , ​   );
    public void (string );
    internal void (Stream );
    private protected virtual        ​ (    ,     );
    internal     (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    public string ();
    public void (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal       { get; internal set; }
    [NullableAttribute("2")]
public       { get; internal set; }
    private static    ();
    public    (    ,     );
    internal    (    ,     );
    private    ( );
    internal virtual void    ​ ();
    internal virtual string    ​ ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    public     ();
    public void (    );
    public void (double , double , double , double );
    public sealed virtual        ​ ();
    public void (    );
    private bool ();
    [NullableContextAttribute("2")]
internal      ();
    [NullableContextAttribute("2")]
internal void (    );
    public void (    );
    internal      ();
    internal void (    );
    internal bool ();
    internal bool ();
    public      ();
    internal int  ();
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
internal void (    );
    internal void (    );
    public     (    );
    internal     (    , bool );
    private protected virtual        ​ ();
    private protected virtual void    ​ (   & );
    private protected virtual void    ​ (    ,    & modreq(System.Runtime.InteropServices.InAttribute) );
    internal     (    );
    private sealed virtual override        ​  ();
    private sealed virtual override ​      ​  ();
    private sealed virtual override void    ​ (​   );
    private sealed virtual override bool    ​ ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override        ​  ();
    private sealed virtual override     ​  ();
    private sealed virtual override        ​  ();
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override        ​ ();
    private sealed virtual override        ​ ( );
    private sealed virtual override        ​ (    ,     );
    private sealed virtual override        ​  ();
    private sealed virtual override        ​  ();
    private sealed virtual override object    ​  ();
    private sealed virtual override     ​  ();
    private sealed virtual override Stream    ​  ();
    private sealed virtual override double    ​  ();
    private sealed virtual override double    ​  ();
    private sealed virtual override double    ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    private DocumentModel ;
    private     ;
    private RtfSaveOptions ;
    protected int ;
    private     ;
    private Dictionary`2<CharacterStyle, int> ;
    private Dictionary`2<ParagraphStyle, int> ;
    private Dictionary`2<TableStyle, int>  ;
    private Dictionary`2<ListStyle, int>  ;
    private Dictionary`2<   , int>  ;
    private Dictionary`2<Picture, int>  ;
    private Dictionary`2<string, int>  ;
    private Dictionary`2<Color, int>  ;
    public    (    , DocumentModel , RtfSaveOptions );
    protected Dictionary`2<string, int> ();
    protected void (Dictionary`2<string, int> );
    protected Dictionary`2<Color, int> ();
    protected void (Dictionary`2<Color, int> );
    protected Dictionary`2<CharacterStyle, int> ();
    protected Dictionary`2<ParagraphStyle, int> ();
    protected Dictionary`2<TableStyle, int> ();
    protected Dictionary`2<ListStyle, int> ();
    protected Dictionary`2<   , int> ();
    protected Dictionary`2<Picture, int>  ();
    protected DocumentModel  ();
    protected      ();
    protected void (BlockCollection , int );
    protected void (Paragraph , int );
    private void (ListItem );
    protected void (ParagraphFormat , int , TableCell );
    private void (ParagraphFormat );
    private void (MultipleBorders );
    private void (ListFormat );
    private void (TabStop );
    private void (Table , int );
    private void (TableRow , int , [] );
    private void (TableRow , [] );
    private void (TableRow , [] );
    private void (TableCell , int );
    protected void (TableFormat , bool );
    private void (MultipleBorders );
    private void (TablePositioning );
    protected void (TableRowFormat );
    private void (TableRow , [] );
    private void (TableCell , TableCellFormat , TableFormat );
    protected void (TableCellFormat );
    private void (TableCell , MultipleBorders , MultipleBorders );
    private void (MultipleBorders );
    private void (string , string , TableWidth );
    private void (TableOfEntries );
    private void (InlineCollection );
    private void (Run );
    private void (SpecialCharacter );
    protected void (CharacterFormat );
    protected void (CharacterFormat ,     );
    private void (CharacterFonts );
    private void (Picture );
    private void (Picture );
    protected void (Picture , bool , bool );
    private void (Picture );
    private void (Picture );
    private void (DrawingElement );
    protected void (string , object );
    private void (    );
    private void (DrawingElement );
    private void (Field );
    private void (FormFieldData );
    private void (FormTextData );
    private void (FormCheckBoxData );
    private void (FormDropDownData );
    private void (Hyperlink );
    private void (BookmarkStart );
    private void (BookmarkEnd );
    private void (Note );
    private void (PreservedInline );
    protected void (SingleBorder );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    internal    (    );
    protected virtual ​      ​ ();
    protected virtual string    ​ (    );
    private protected virtual        ​ (​   );
    private protected virtual ​      ​ (    );
    protected virtual string    ​ (​   , int );
}
internal class     :     {
    public virtual     ​ ();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private List`1<   > ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private EventHandler`1<​  >  ;
    [DebuggerBrowsableAttribute("0")]
private EventHandler  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public ​     { get; }
    internal    (    ,     ,     );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ ( );
    public sealed virtual void    ​ ( );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ (double , double , double , double , double , double );
    private void ();
    private void ();
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    ,     ,     );
    public sealed virtual void    ​ (    ,     );
    public sealed virtual void    ​ (    ,     );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ (    , double , double );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    [ObsoleteAttribute("Use FillPath instead.")]
public sealed virtual void    ​ ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    private void ( ,  );
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (double );
    public sealed virtual void    ​ (    , double );
    public sealed virtual void    ​ ( );
    public sealed virtual void    ​  (double );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (double , double , double , double , double , double );
    private double ();
    public sealed virtual void    ​  ();
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (double , double ,     );
    public sealed virtual void    ​ (    );
    private void (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    ,     ,     );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (IList`1<double> );
    public sealed virtual void    ​ (IList`1<double> ,     );
    public sealed virtual void    ​ (IList`1<double> );
    public sealed virtual void    ​ (IList`1<double> ,     );
    public sealed virtual void    ​  (double );
    public sealed virtual void    ​  (double );
    public sealed virtual void    ​ (double , double , double );
    public sealed virtual void    ​ (double , double , double );
    public sealed virtual void    ​ (double , double , double , double );
    public sealed virtual void    ​ (double , double , double , double );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    ,     );
    public sealed virtual void    ​ (    );
    public sealed virtual void    ​ (    ,     );
    public sealed virtual void    ​  ();
    private static     (    );
    public sealed virtual void    ​  ();
    public sealed virtual void    ​  ();
    [NullableContextAttribute("2")]
public sealed virtual ​      ​  ();
    [CompilerGeneratedAttribute]
public sealed virtual void    ​ (EventHandler`1<​  > );
    [CompilerGeneratedAttribute]
public sealed virtual void    ​ (EventHandler`1<​  > );
    [CompilerGeneratedAttribute]
public sealed virtual void    ​ (EventHandler );
    [CompilerGeneratedAttribute]
public sealed virtual void    ​ (EventHandler );
    public sealed virtual void    ​ (    ,     );
    public sealed virtual void    ​ (string ,     );
    public sealed virtual void    ​  ();
    public sealed virtual void    ​ (string );
    public sealed virtual void Dispose();
    private sealed virtual override        ​ ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override void    ​ (bool );
    private sealed virtual override        ​ ();
    private sealed virtual override        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static void (    ,     , LineSpacingRule ,     , Action`1<   > ,     ,     ,      , bool  , string  ,      , ParagraphFormatRevision  );
    public static void (    ,     ,     , IDictionary`2<Style, string> , bool );
    public static void (    , Table , TableFormat ,     , IDictionary`2<Style, string> , bool , bool );
    public static void (    ,     ,     );
    public static void (    ,     ,     , string , bool );
    public static void (    , TableCell , TableCellFormat ,     , Nullable`1<   > ,     , string , bool  );
    private static void (    , string , Revision );
    public static void (    , Revision );
    public static void (    , PageSetup );
    public static void (    , PageMargins );
    public static void (    , PageSetup );
    public static void (    , PageSetup );
    public static void (    , PageSetup );
    public static void (    , TextColumnCollection );
    public static void (    , bool , string , string );
    public static void (    , string );
    public static void (    , string , string , string , bool );
    public static void (    , string , bool , bool );
    private static void (    , string , bool , bool );
    private static void (    , Note );
    public static void (    , SpecialCharacter );
    public static void (    , TableColumnCollection , TableColumnCollectionRevision );
    public static void (    , TableColumnCollectionRevision );
    public static Field (Hyperlink );
    public static string (PictureFormat );
    public static bool (Section , HeaderFooterType );
    public static void (    , string , Nullable`1<bool> );
    public static void (    , string , Nullable`1<int> );
    public static void (    , string , string );
    private static void (    , string , Nullable`1<double> , int );
    private static void (    , Nullable`1<   > );
    private static void (    , FontsData );
    private static void (    ,     );
    private static void (    , TabStop );
    private static void (    ,     ,     );
    private static void (    ,     );
    private static void (    , string , MultipleBorders ,     , bool );
    private static void (    , string ,     , IList`1<SingleBorderType> , bool );
    private static void (    ,     , IList`1<SingleBorderType> , bool );
    private static void (    , string , SingleBorder );
    private static void (    ,     , LineSpacingRule );
    private static void (    ,     );
    private static void (    , Nullable`1<HorizontalAlignment> );
    private static void (    ,     );
    private static string (Nullable`1<bool> , Nullable`1<bool> );
    public static int (double );
    private static string (Hyperlink );
    private static string (string );
    private static int (double );
    private static void (    , TableColumn );
    private static void (    , TableStyleOptions );
    private static void (    ,     , Table , TableFormat );
    private static void (    ,     ,     );
    private static void (    , string , Nullable`1<Padding> );
    private static void (    , string , double );
    private static void (    ,     );
    private static void (    , Padding );
    private static void (    , string , double );
    private static void (    , HorizontalPosition );
    private static void (    , VerticalPosition );
    private static void (    , string , TableWidth );
    private static void (    , TableRowHeight );
    private static void (    ,  );
    internal static string (TableRow );
    internal static string (TableCell );
    private static short (TableStyleFormatType , short );
    private static bool (TableStyleOptions , TableStyleOptions );
    private static void (    ,     );
    public static bool (TextBox );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    private static    ();
    private    ( );
    public    (    ,     ,     );
    public    (    ,     , IList`1<   > );
    public    (    ,     ,    [] );
    public    (    ,     ,     ,     );
    public virtual     ​ ();
    private     ();
    private void (    );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public IList`1<   > ();
    public void (IList`1<   > );
    private     ();
    private void (    );
    public bool ();
    public void (bool );
    public bool  ();
    public void (bool );
    [IteratorStateMachineAttribute("   /")]
private sealed virtual override IEnumerable`1<   >    ​ (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private  ​  ;
    private     ;
    private DocxSaveOptions ;
    private DocumentModel ;
    private ​  ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IList`1<KeyValuePair`2<string,    >> ;
    private     ;
    private      ;
    private IDictionary`2<MemoryStream, string>  ;
    private IList`1<string>  ;
    private IDictionary`2<string, string>  ;
    private      ;
    private IDictionary`2<string, Tuple`2<int, bool>>  ;
    private bool  ;
    private      ;
    private Paragraph  ;
    private TableCell  ;
    private TableRow  ;
    private TableRow  ;
    private Dictionary`2<int, Note>  ;
    private Dictionary`2<int, Note>  ;
    private bool  ;
    private Dictionary`2<object, Tuple`2<string, string>>  ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<KeyValuePair`2<string,    >>   { get; private set; }
    public    (    , DocxSaveOptions , DocumentModel , ​  );
    public     ();
    private void (    );
    public DocxSaveOptions ();
    private void (DocxSaveOptions );
    public DocumentModel ();
    private void (DocumentModel );
    public ​  ();
    private void (​  );
    public IList`1<KeyValuePair`2<string,    >> ();
    private void (IList`1<KeyValuePair`2<string,    >> );
    public     ();
    private void (    );
    public     ();
    private void (    );
    public IDictionary`2<MemoryStream, string>  ();
    public IList`1<string>  ();
    public IDictionary`2<string, string>  ();
    private void (IDictionary`2<string, string> );
    public      ();
    private void (    );
    public IDictionary`2<string, Tuple`2<int, bool>>  ();
    private void (IDictionary`2<string, Tuple`2<int, bool>> );
    public bool  ();
    private void (bool );
    public      ();
    private void (    );
    public Paragraph  ();
    private void (Paragraph );
    public TableCell  ();
    private void (TableCell );
    public TableRow  ();
    private void (TableRow );
    public TableRow  ();
    private void (TableRow );
    public Dictionary`2<int, Note>  ();
    public void (Dictionary`2<int, Note> );
    public Dictionary`2<int, Note>  ();
    public void (Dictionary`2<int, Note> );
    public bool  ();
    public void (bool );
    public Dictionary`2<object, Tuple`2<string, string>>  ();
    public void (Dictionary`2<object, Tuple`2<string, string>> );
    public bool  ();
    private static bool (DocumentModel );
    public string (Picture , IDictionary`2<string, string> , IList`1<KeyValuePair`2<string,    >> , IDictionary`2<string,    > );
    public string (Chart , IList`1<KeyValuePair`2<string,    >> , IDictionary`2<string,    > );
    private void (int , PictureFormat , String& , String& );
    private static string (string , IList`1<KeyValuePair`2<string,    >> , IDictionary`2<string,    > , Int32& );
    private static bool (IList`1<KeyValuePair`2<string,    >> , IDictionary`2<string,    > , string );
    public void (string , string , string , Action`1<Stream> , bool , bool );
    public void (string , string , string , Action`1<   > , bool );
    private void (string , string , bool );
    public void (ICollection`1<KeyValuePair`2<string,    >> , string );
    public static     (Stream );
    public string (object , IDictionary`2<string, string> , IList`1<KeyValuePair`2<string,    >> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    private protected    (    ,     );
    public abstract virtual        ​ ();
    internal     ();
    internal sealed virtual bool    ​ ();
    internal virtual bool    ​ ();
    public      ();
    public void (    );
    public      ();
    public void (    );
    internal      ();
    internal      ();
    [IteratorStateMachineAttribute("   /")]
private IEnumerable`1<   >  ();
    internal abstract virtual     ​  ();
    internal virtual void    ​ (    );
    internal virtual void    ​ ( );
    internal virtual bool    ​ ();
    internal virtual void    ​ (bool );
    internal virtual        ​  ();
    internal virtual void    ​ (    );
    internal virtual double    ​  ();
    internal virtual void    ​ (double );
    internal virtual     ​ ();
    internal virtual void    ​ ( );
    internal virtual void    ​ ( );
    internal virtual bool    ​ ();
    internal virtual void    ​ (bool );
    internal virtual        ​  ();
    internal virtual void    ​ (    );
    internal virtual double    ​  ();
    internal virtual void    ​ (double );
    internal virtual double    ​  ();
    internal virtual void    ​ (double );
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    internal virtual double    ​  ();
    internal virtual void    ​ (double );
    internal virtual        ​  ();
    internal virtual void    ​ (    );
    internal virtual bool    ​ ();
    internal virtual void    ​ (bool );
    internal virtual void    ​ ( );
    internal virtual bool    ​ ();
    internal virtual void    ​ (bool );
    internal virtual bool    ​ ();
    internal virtual void    ​ (bool );
    internal virtual bool    ​ ();
    internal virtual void    ​ (bool );
    internal virtual        ​  ();
    internal virtual        ​ (Double& );
    internal virtual void    ​ (    , double );
    internal virtual double    ​  ();
    internal virtual void    ​ (double );
    internal virtual double    ​  ();
    internal virtual void    ​ (double );
    internal virtual double    ​  ();
    internal virtual void    ​ (double );
    internal virtual double    ​  ();
    internal virtual void    ​  (double );
    internal virtual double    ​  ();
    internal virtual void    ​  (double );
    internal virtual bool    ​ ();
    internal virtual void    ​ (bool );
    internal virtual bool    ​  ();
    internal virtual void    ​  (bool );
    internal virtual     ​ ();
    internal virtual void    ​ ( );
    internal virtual void    ​ ( );
    internal virtual        ​  ();
    internal virtual void    ​ (    );
    internal virtual ​      ​  ();
    internal virtual void    ​ (​   );
    internal virtual ​      ​  ();
    internal virtual void    ​ (​   );
    internal virtual bool    ​  ();
    internal virtual void    ​  (bool );
    internal virtual ​      ​  ();
    internal virtual void    ​ (​   );
    internal virtual void    ​ ( );
    internal virtual bool    ​  ();
    internal virtual void    ​  (bool );
    internal virtual bool    ​  ();
    internal virtual void    ​  (bool );
    internal virtual int    ​  ();
    internal virtual void    ​ (int );
    internal virtual ​      ​  ();
    internal virtual void    ​ (​   );
    internal virtual ​      ​  ();
    internal virtual void    ​ (​   );
    internal virtual ​      ​  ();
    internal virtual void    ​ (​   );
    internal virtual ​      ​  ();
    internal virtual void    ​ (​   );
    internal virtual Nullable`1<   >    ​  ();
    internal virtual void    ​ (Nullable`1<   > );
    internal virtual double    ​  ();
    internal virtual void    ​  (double );
    internal virtual double    ​  ();
    internal virtual void    ​  (double );
    private void (   & ,     );
    internal bool (    ,    & );
    private protected void (    ,     );
    private sealed virtual override        ​ ​();
    private sealed virtual override        ​ ​();
    private sealed virtual override void    ​ (    );
    private sealed virtual override void    ​ (    );
    private sealed virtual override void    ​ (    );
    private sealed virtual override void    ​ ( );
    private sealed virtual override bool    ​ ();
    private sealed virtual override void    ​ (bool );
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override double    ​  ();
    private sealed virtual override void    ​ (double );
    private sealed virtual override     ​  ();
    private sealed virtual override void    ​ ( );
    private sealed virtual override void    ​ ( );
    private sealed virtual override bool    ​ ();
    private sealed virtual override void    ​ (bool );
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override double    ​  ();
    private sealed virtual override void    ​ (double );
    private sealed virtual override double    ​  ();
    private sealed virtual override void    ​ (double );
    private sealed virtual override     ​  ();
    private sealed virtual override void    ​ ( );
    private sealed virtual override     ​  ();
    private sealed virtual override void    ​ ( );
    private sealed virtual override double    ​  ();
    private sealed virtual override void    ​ (double );
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override bool    ​ ();
    private sealed virtual override void    ​ (bool );
    private sealed virtual override void    ​ ( );
    private sealed virtual override bool    ​  ();
    private sealed virtual override void    ​ (bool );
    private sealed virtual override bool    ​  ();
    private sealed virtual override void    ​ (bool );
    private sealed virtual override bool    ​  ();
    private sealed virtual override void    ​ (bool );
    private sealed virtual override        ​  ();
    private sealed virtual override        ​ (Double& );
    private sealed virtual override void    ​ (    , double );
    private sealed virtual override double    ​  ();
    private sealed virtual override void    ​ (double );
    private sealed virtual override double    ​  ();
    private sealed virtual override void    ​ (double );
    private sealed virtual override double    ​  ();
    private sealed virtual override void    ​ (double );
    private sealed virtual override double    ​  ();
    private sealed virtual override void    ​  (double );
    private sealed virtual override double    ​  ();
    private sealed virtual override void    ​  (double );
    private sealed virtual override bool    ​  ();
    private sealed virtual override void    ​ (bool );
    private sealed virtual override bool    ​  ();
    private sealed virtual override void    ​  (bool );
    private sealed virtual override     ​  ();
    private sealed virtual override void    ​ ( );
    private sealed virtual override void    ​ ( );
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override ​      ​  ();
    private sealed virtual override void    ​ (​   );
    private sealed virtual override ​      ​  ();
    private sealed virtual override void    ​ (​   );
    private sealed virtual override bool    ​  ();
    private sealed virtual override void    ​  (bool );
    private sealed virtual override ​      ​  ();
    private sealed virtual override void    ​ (​   );
    private sealed virtual override void    ​ ( );
    private sealed virtual override bool    ​  ();
    private sealed virtual override void    ​  (bool );
    private sealed virtual override bool    ​  ();
    private sealed virtual override void    ​  (bool );
    private sealed virtual override int    ​  ();
    private sealed virtual override void    ​ (int );
    private sealed virtual override ​      ​  ();
    private sealed virtual override void    ​ (​   );
    private sealed virtual override ​      ​  ();
    private sealed virtual override void    ​ (​   );
    private sealed virtual override ​      ​  ();
    private sealed virtual override void    ​ (​   );
    private sealed virtual override ​      ​  ();
    private sealed virtual override void    ​ (​   );
    private sealed virtual override Nullable`1<   >    ​ ​();
    private sealed virtual override void    ​ (Nullable`1<   > );
    private sealed virtual override double    ​  ();
    private sealed virtual override void    ​  (double );
    private sealed virtual override double    ​  ();
    private sealed virtual override void    ​  (double );
    private sealed virtual override        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private Dictionary`2<string,    > ;
    public   <string,    > ();
    public void (string ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
internal int ;
    [DebuggerBrowsableAttribute("0")]
internal int ;
    [DebuggerBrowsableAttribute("0")]
internal int ;
    internal    (    ,  , int , int , int );
    internal     ();
    public  ();
    public     ();
    internal void (    );
    public     ();
    internal void (    );
    public     ();
    internal void (    );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private  ​  ;
    private     ;
    private     ;
    private Action`2<IList`1<Block>,  ​> ;
    private Func`1<int> ;
    private PaginatorOptions ;
    private     ;
    private     ;
    private Paragraph  ;
    private ParagraphFormat  ;
    private  ​  ;
    private bool  ;
    private StringBuilder  ;
    private bool  ;
    private    < ​>  ;
    internal Section  ;
    private Dictionary`2<Paragraph, object>  ;
    private     ;
    private bool  ;
    private int  ;
    private int  ;
    public    ( ​  ,     ,     , Action`2<IList`1<Block>,  ​> , Func`1<int> , PaginatorOptions ,     ,     );
    private RevisionOptions ();
    public void (Paragraph ,  ​ , bool ,    < ​> , Int32& );
    private static Element (Element );
    private void (int );
    private static bool (ParagraphFormat );
    private static SpecialCharacter (InlineCollection );
    internal void (IList`1<Inline> , bool , bool , Int32& );
    private void (IList`1<Inline> );
    private void (Int32& );
    private bool (Paragraph );
    private void ();
    private void (   );
    private double ();
    private static Block (Block );
    private static Block (Block );
    private static Block (BlockContentControl );
    private static Block (BlockContentControl );
    private static bool (Paragraph , Paragraph );
    private static bool (Paragraph );
    private static bool (Paragraph , Paragraph );
    private static bool (InlineCollection );
    private void (   , ListItem );
    private void (Inline );
    private void (AlignmentTab );
    private void (InlineContentControl );
    private void (   ,  ​ );
    public    (Inline );
    private void (BookmarkStart );
    private    (Shape );
    private    (Picture );
    private    (Group );
    private    (Canvas );
    private static bool (Picture );
    private    (TextBox );
    private static bool (Group );
    [IteratorStateMachineAttribute("   /")]
private IEnumerable`1<DrawingElement> (Group );
    [IteratorStateMachineAttribute("   /")]
private IEnumerable`1<DrawingElement> (Group , bool );
    private static void (DrawingElement , Group );
    private static bool (double );
    private static void (DrawingElement , double , double , double , double );
    private static void (DrawingElement , double , double , double );
    private static void (DrawingElement , Layout );
    private    (Chart );
    private static bool (DrawingElement ,  ​  );
    private static bool (FloatingLayout ,  ​  );
    private static bool (Element );
    private void (DrawingElement ,    );
    private void (Shape ,    );
    public static    (Shape );
    private static void (   , Hyperlink );
    private void (Run );
    private void (string , CharacterFormat ,    );
    [IteratorStateMachineAttribute("   /")]
private IEnumerable`1< > (string , CharacterFormat ,    );
    private CharacterFormat (CharacterFormat );
    private Revision (Inline );
    private void (CharacterFormat , RevisionType );
    private void (string ,  ​ ,    , bool );
    private void (string ,  ​ ,    , bool );
    private void (string ,  ​ ,    , bool );
    private void (string , int , int ,  ​ , bool ,    , bool );
    private void (Field );
    private void (Field );
    private void (Field );
    public static    (Field );
    private static bool (string ,    & );
    private static Nullable`1<> (string );
    private void (SpecialCharacter );
    private void (bool , Element );
    private static bool (   );
    private void ( , CharacterFormat ,  ​ );
    private void ( ,  ​ ,  ​ );
    private void (Hyperlink );
    private    (Hyperlink );
    private static    (Hyperlink );
    private void (Note );
    private void ( ​ , bool , IEnumerable`1<  > );
    private void ( ​ ,  ​ );
    private void ( ​ );
    [IteratorStateMachineAttribute("   /")]
private IEnumerable`1<  > (string ,  ​ ,    );
    private void ();
    private static bool (​​ );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private     ;
    private  ;
    public    (    ,     , bool );
    public sealed virtual        ​ ();
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (​   );
    public sealed virtual bool    ​ ();
    public sealed virtual bool    ​ ();
    public sealed virtual bool    ​ ();
    public sealed virtual        ​ ();
    [CompilerGeneratedAttribute]
public sealed virtual     ​ ();
    public sealed virtual        ​ ();
    public sealed virtual        ​  ();
    public sealed virtual void    ​ (    );
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [NullableContextAttribute("1")]
internal    (Byte[] , int , int );
    public sealed virtual int    ​ ();
    public sealed virtual void    ​ (int );
    public void (int );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static string (    , String& );
    private static void (XmlWriter ,     , bool ,     , Int32& );
    [ExtensionAttribute]
private static StringBuilder (StringBuilder , string , string );
}
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private PngChunkType ;
    public    (long , int , PngChunkType );
    public long ();
    public int ();
    public PngChunkType ();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    private static    ();
    private    ( );
    internal static     ();
    internal virtual void    ​ ();
    public virtual     ​ ();
    public string ();
    public void (string );
    public  ();
    public void ( );
    public     ();
    public bool ();
    public void (bool );
    private bool ( );
    private void ( , bool );
    internal static  ( );
    internal static void ( ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private double ;
    private double ;
    private     ;
    private IList`1<   > ;
    private IList`1<   > ;
    private ​   ;
    internal    (double , double ,     , IList`1<   > , IList`1<   > , ​   );
    public double ();
    public double ();
    public     ();
    public IList`1<   > ();
    public IList`1<   > ();
    [CompilerGeneratedAttribute]
protected virtual ​      ​ ();
    public virtual     ​ ();
    public virtual void    ​ (Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [NullableAttribute("2")]
public       { get; public set; }
    [NullableAttribute("2")]
public       { get; public set; }
    private static    ();
    private    ( );
    internal int ();
    public virtual     ​ ();
    public IList`1<int> ();
    public void (IList`1<int> );
    public int ();
    public void (int );
    public int ();
    public void (int );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    public UInt32[] ();
    public void (UInt32[] );
    internal virtual void    ​  ();
    private protected virtual Action`2<Double[], Double[]>    ​ ();
    private static int (UInt32[] ,   , int , Boolean& , Boolean& );
    private static double (double , double , double );
    private static double (UInt32[] ,   , int , int );
    private static double (UInt32[] ,   ,   , int , int );
    private static double (UInt32[] ,   ,   ,   , int , int );
    private static double (double , double , double , double , double );
    private static double (UInt32[] ,   , int , int );
    private static double (UInt32[] ,   ,   , int , int );
    private static double (UInt32[] ,   ,   ,   , int , int );
    private static int (double ,     );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
internal Uri[] ;
    [DebuggerBrowsableAttribute("0")]
private    [] ;
    [DebuggerBrowsableAttribute("0")]
private    [] ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<string,    > ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<string,    > ;
    [DebuggerBrowsableAttribute("0")]
internal    [] ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<string,    > ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2< ,    >  ;
    public int Count { get; }
    [DebuggerBrowsableAttribute("0")]
internal      { get; }
    internal    (IList`1<​  > );
    public Uri ();
    public sealed virtual int get_Count();
    internal     (string );
    internal     (string );
    internal     (string ,  );
    public     (string ,     );
    public  ();
    public sealed virtual bool Contains(    );
    public sealed virtual void CopyTo(   [] , int );
    private void (string ,     , Int32& );
    private void (string ,     , Int32& );
    private void (string ,     ,     , Int32& );
    private static void (   [] , Dictionary`2<string,    > );
    private static CultureInfo (KeyValuePair`2<CultureInfo, string> , IEnumerable`1<KeyValuePair`2<CultureInfo, string>> );
    private static void (Dictionary`2<string, TFontFamily> );
    private sealed virtual override bool    ​ ();
    private sealed virtual override IEnumerator`1<   >    ​ ();
    private sealed virtual override IEnumerator    ​ ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override bool    ​ (    );
    private sealed virtual override void    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("0")]
private   <   > ;
    private static    ();
    private    ( );
    private protected virtual void    ​ ();
    public virtual     ​ ();
    public     ();
    public void (    );
    internal string ();
    internal void (string );
    internal virtual void    ​  ();
    private protected virtual Action`2<Double[], Double[]>    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Byte[] modreq(System.Runtime.CompilerServices.IsVolatile) ;
    public static Byte[] ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private Action`2<Double[], Double[]> ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private protected  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private       { get; }
    internal ​   Source { get; }
    [NullableAttribute("2")]
public       { get; public set; }
    private protected    ( );
    private static    ();
    [NullableContextAttribute("2")]
private     ();
    internal sealed virtual ​   get_Source();
    internal sealed virtual     ​ ();
    [NullableContextAttribute("2")]
internal static     (​   );
    private static     ( );
    public abstract virtual     ​ ();
    private protected void ( );
    internal static  ( );
    public     ();
    public void (    );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    internal virtual int    ​ ();
    private protected abstract virtual Action`2<Double[], Double[]>    ​ ();
    public Action`2<Double[], Double[]>  ();
    public Func`2<Double[], Double[]> (bool );
    internal abstract virtual void    ​  ();
    private sealed virtual override Action`2<Double[], Double[]>    ​  ();
    private sealed virtual override void    ​ (Action`2<Double[], Double[]> );
    private sealed virtual override        ​ ();
    private sealed virtual override void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    public    (string );
    internal    (string , bool );
    internal    (double , double , double , double , double , double , double );
    public string ();
    public void (string );
    public double ();
    private void (double );
    public double ();
    private void (double );
    public double ();
    private void (double );
    public double ();
    private void (double );
    public double ();
    private void (double );
    public double  ();
    private void (double );
    public double  ();
    private void (double );
    internal double  ();
    internal double  ();
    public virtual bool Equals(object );
    private bool (    );
    public virtual int GetHashCode();
    public virtual string ToString();
    internal      ();
    private void ();
    private static void (double , int , Int32& , StringBuilder );
    private static double (string , Int32& );
    private static double (string , Int32& );
    internal static void (Double& , string );
}
internal class     : object {
    [NullableAttribute("1")]
private    [] ;
    private int ;
    public    (int );
    public int ();
    public void ();
    public void (    );
    public     ();
    public void (int );
    public void (int );
    public void (int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    <PixelFormat> {
    private static    <, PixelFormat> ;
    private BitmapSource ;
    private static    ();
    protected virtual    <, PixelFormat>    ​ ();
    public virtual int    ​ ();
    public virtual int    ​ ();
    public BitmapSource ();
    public void (BitmapSource );
    protected virtual    <byte>    ​  (ArrayPool`1<byte> , int );
    [NullableContextAttribute("0")]
protected virtual bool    ​  (    , ArraySegment`1<byte> , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private Func`2<Stream, Byte[]> ;
    private int ;
    public    (Func`2<Stream, Byte[]> ,  , int );
    public virtual int    ​  ();
    public virtual Byte[]    ​ (Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    internal    (Byte[] , int );
    public float ();
    public void (float );
    public void ();
    public virtual string ToString();
    private static int (float );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private static Byte[] ;
    [DebuggerBrowsableAttribute("0")]
internal ​  ;
    internal    (​  );
    public    (string );
    public    (string , string );
    internal    (string ,  , Byte[] );
    internal    (string ,  , Byte[] , string );
    private static    ();
    public string ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private     ;
    private IList`1<   > ;
    public     ();
    public void (    );
    public IList`1<   > ();
    public void (IList`1<   > );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <string> {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
internal ​   Source { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ​    { get; private set; }
    internal    ( );
    private static    ();
    internal virtual ​   get_Source();
    [NullableContextAttribute("2")]
private ​   ();
    [NullableContextAttribute("2")]
private void (​   );
    private ​   ();
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public void (    );
    private protected virtual int    ​ ();
    private protected virtual int    ​ ();
    private protected virtual string    ​ (​   );
    private protected virtual ​      ​ (string );
    private protected virtual string    ​ (int );
    private protected virtual void    ​ (int , string );
    private protected virtual void    ​ (int , string );
    private protected virtual void    ​ (int );
    private protected virtual int    ​  (string );
    private static string (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private static  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public    (    , double ,  ,  , double ,     );
    private    (    , double ,  );
    private static    ();
    internal Pen (Brush );
    private static LineCap ( );
    private static  (LineCap );
    private static DashCap ( );
    private static  (DashCap );
    private static LineJoin ( );
    private static  (LineJoin );
    public static Pen op_Explicit(    );
    public static     (Pen ,  );
    public     ();
    public double ();
    public bool ();
    private  ();
    public  ();
    public  ();
    public double ();
    public      ();
    public     (    );
    public     (    );
    public     (    , double );
    public virtual int GetHashCode();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public bool (    );
    public virtual string ToString();
    public sealed virtual string ToString(string , IFormatProvider );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    internal Pen (Brush );
    private static PenLineCap ( );
    private static  (PenLineCap );
    private static PenLineJoin ( );
    private static  (PenLineJoin );
    public static Pen op_Explicit(    );
    public static     op_Explicit(Pen );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static string ;
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<  , ​  > ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    internal    (Stream ,     );
    private static    ();
    private static Dictionary`2<  , ​  > ();
    public     ();
    private ​   ();
    private ​   ();
    private ​   ();
    protected virtual ​      ​ (​   );
    protected virtual ​      ​ ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    {
    [DebuggerBrowsableAttribute("0")]
private MemoryStream ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    public bool CanSeek { get; }
    public long Position { get; public set; }
    public long Length { get; }
    public    (Stream );
    public virtual bool get_CanSeek();
    public virtual long get_Position();
    public virtual void set_Position(long );
    public virtual long get_Length();
    public virtual long Seek(long , SeekOrigin );
    public virtual int Read(Byte[] , int , int );
    public virtual void Write(Byte[] , int , int );
    public virtual void WriteByte(byte );
    public virtual void Flush();
    protected virtual void Dispose(bool );
    private void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private ushort ;
    private IList`1<   > ;
    public ushort ();
    public void (ushort );
    public IList`1<   > ();
    public void (IList`1<   > );
    public static     ();
    public virtual        ​ ();
    public virtual void    ​ (    );
    public virtual void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static TextWriter ;
    private static    ();
    public static TextWriter ();
    public static void (TextWriter );
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private     ;
    public     Current { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private object  { get; }
    [NullableContextAttribute("1")]
internal    (    );
    public sealed virtual     get_Current();
    public sealed virtual bool MoveNext();
    public sealed virtual void Dispose();
    public sealed virtual void Reset();
    [NullableContextAttribute("1")]
private sealed virtual override object    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  {
    internal static    ;
    private static Dictionary`2<string, > ;
    internal    (  [] );
    private static    ();
    public static  (string );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("2")]
internal interface     {
    public object  { get; }
    public abstract virtual int    ​ ();
    public abstract virtual object    ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static String[] ;
    public static String[] ;
    public static String[] ;
    public static String[] ;
    public static String[] ;
    public static Char[] ;
    public static Char[] ;
    public static Char[]  ;
    public static Char[]  ;
    public static Char[]  ;
    public static Char[]  ;
    public static Char[]  ;
    public static Char[]  ;
    public static Char[]  ;
    public static Char[]  ;
    public static Char[]  ;
    public static Char[]  ;
    public static Char[]  ;
    public static Char[]  ;
    private static    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    <UInt32> {
    public virtual UInt32    ​ (string );
    public virtual string    ​ (UInt32 );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private    <string> ;
    private    <string> ;
    private    <DateTime> ;
    private    <DateTime> ;
    private    <DateTime> ;
    private    <int> ;
    [NullableAttribute("2")]
public string  { get; public set; }
    public    (    );
    public    (string );
    public string ();
    public void (string );
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    public Nullable`1<DateTime> ();
    public void (Nullable`1<DateTime> );
    public Nullable`1<DateTime> ();
    public void (Nullable`1<DateTime> );
    public Nullable`1<DateTime> ();
    public void (Nullable`1<DateTime> );
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    private void (string , Nullable`1<DateTime> ,    & );
    private static string (int );
    private static string (string );
    public void (   <string> );
    public void (   <string> );
    public void (   <DateTime> );
    public void (   <DateTime> );
    public void (   <DateTime> );
    public void (   <int> );
}
internal static class     : object {
    private static  ;
    private static    ();
    internal static long ();
    private static bool ();
    private static bool ();
    private static int (Type );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private static    [] ;
    public static     ;
    private Dictionary`2<Tuple`2< ​ , string>,    > ;
    private     ;
    private static     ;
    private static     ;
    private static     ;
    private static      ;
    private static      ;
    private static      ;
    private static      ;
    private static      ;
    private static      ;
    private static    []  ;
    private static    []  ;
    private static    []  ;
    private static    []  ;
    private static    []  ;
    private static    []  ;
    private static    []  ;
    private static    []  ;
    private static    []  ;
    private static    []  ;
    private static   <string,    []>  ;
    public    ( ​  );
    private static    ();
    public ReadOnlyCollection`1<   > ();
    private static int ( ​  );
    private static  ​  ( ​  );
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1<   > ( ​  );
    public     ( ​  );
    private static void ( ​  , IEnumerable`1<   > , List`1<KeyValuePair`2<   ,    >> );
    private static void (    ,     , List`1<KeyValuePair`2<   ,    >> );
    private static bool ( ​  );
    private static bool ( ​  );
    private static bool ( ​  );
    private static IList`1<   >  ( ​  );
    private static IList`1<   >  ( ​  );
    public static void (    ,     , bool );
    public void (string ,  );
    public void (Stream ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <UInt32> ;
    private     ;
    [NullableAttribute("2")]
private     ;
    private     ;
    private     ;
    private     ;
    private      ;
    private      ;
    private      ;
    [NullableAttribute("2")]
private      ;
    [NullableAttribute("2")]
private      ;
    [NullableAttribute("2")]
public       { get; public set; }
    [NullableAttribute("2")]
public       { get; public set; }
    [NullableAttribute("2")]
public       { get; public set; }
    private static    ();
    public     ();
    public void (    );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public      ();
    public void (    );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public void (    );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public void (    );
    public static      ();
    public virtual        ​ ();
    public virtual void    ​ (    );
    public virtual void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private Stream ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public    (Stream , bool );
    public sealed virtual Stream    ​ ();
    public sealed virtual long    ​ ();
    public sealed virtual void    ​ (long );
    public sealed virtual int    ​ ();
    public sealed virtual int    ​ ();
    public sealed virtual int    ​ ();
    public sealed virtual int    ​ ();
    public sealed virtual void    ​ (int );
    public sealed virtual void Dispose();
}
[DefaultMemberAttribute(" ")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
public    { get; }
    [DebuggerBrowsableAttribute("0")]
public    { get; }
    private protected    (    );
    internal     ();
    internal     ();
    public int ();
    public  (    , string ,  );
    protected abstract virtual     ​ (    );
    protected abstract virtual        ​ ( );
    public  (int );
    public   (string );
    public void  ();
    public bool  (string );
    public sealed virtual IEnumerator`1<> GetEnumerator();
    public void  (string );
    public void  ( );
    public void  (int );
    public bool  (string , & );
    private sealed virtual override IEnumerator    ​  ();
    [NullableContextAttribute("0")]
private   (    );
}
internal interface     {
    public abstract virtual bool    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <UInt32> ;
    private     ;
    private IList`1<   > ;
    private static    ();
    public     ();
    public void (    );
    public IList`1<   > ();
    public void (IList`1<   > );
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
    public static     ();
    public virtual        ​ ();
}
internal static class     : object {
    [NullableContextAttribute("1")]
public static void (Action`1<int> , Action );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    );
    public string ();
    public string ();
    public string ();
    public virtual string ToString();
    public static string op_Implicit(    );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    internal ListStyle ;
    internal    [] ;
    [DebuggerBrowsableAttribute("0")]
private ListLevelFormatCollection ;
    public  ​   { get; }
    internal    (ListStyle );
    public ListLevelFormatCollection ();
    internal bool ();
    public sealed virtual  ​     ​ (int );
    private     (int );
    private     (int );
    internal bool (ParagraphStyle , int );
    internal bool (ParagraphStyle , Int32& );
    internal void (ParagraphStyle , int );
    internal bool (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal     ;
    internal    (    ,     ,     );
    public virtual     ​ ();
    public virtual        ​ ();
    internal virtual     ​  ();
    public     ();
    public void (    );
    private protected virtual        ​ (    ,     );
    internal     (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private int ;
    private int ;
    private int ;
    private int ;
    private HorizontalPositionAnchor ;
    private Nullable`1<HorizontalPositionType> ;
    private int ;
    private TableRowHeightRule  ;
    private VerticalPositionAnchor  ;
    private Nullable`1<VerticalPositionType>  ;
    private int  ;
    private int  ;
    private string  ;
    private string  ;
    private Nullable`1<bool>  ;
    private Nullable`1<Color>  ;
    private Nullable`1<SingleBorder>  ;
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public HorizontalPositionAnchor  ();
    public void (HorizontalPositionAnchor );
    public Nullable`1<HorizontalPositionType>  ();
    public void (Nullable`1<HorizontalPositionType> );
    public int ();
    public void (int );
    public TableRowHeightRule  ();
    public void (TableRowHeightRule );
    public VerticalPositionAnchor  ();
    public void (VerticalPositionAnchor );
    public Nullable`1<VerticalPositionType>  ();
    public void (Nullable`1<VerticalPositionType> );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public string  ();
    public void (string );
    public string  ();
    public void (string );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public Nullable`1<Color>  ();
    public void (Nullable`1<Color> );
    public Nullable`1<SingleBorder>  ();
    public void (Nullable`1<SingleBorder> );
    public      ();
    private static int  (int );
    public virtual int GetHashCode();
    public virtual bool Equals(object );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
internal Nullable`1<   > ;
    private  ;
    private    ;
    private double ;
    private int  ;
    [NullableAttribute("1")]
private string  ;
    [NullableAttribute("1")]
public string   { get; }
    [NullableContextAttribute("1")]
internal    (    ,   & ,  , double );
    internal  ();
    internal    ();
    public double ();
    internal void (double );
    public int ();
    [NullableContextAttribute("1")]
public string ();
    public     ();
    public     ();
    public      ();
    internal void  ();
    public sealed virtual        ​ ();
    internal      ();
    private      ();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Dictionary`2<int, TableCell> ;
    private TableCell ;
    private int ;
    public bool (    , TableCellFormat , Func`1<TableCell> );
    public void (    );
    public void ();
    private static void (MultipleBorders , MultipleBorders , SingleBorderType , SingleBorderType , SingleBorderType );
    private static void (MultipleBorders , MultipleBorders , SingleBorderType );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
private static [] ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
protected   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("0")]
private   <double>  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("0")]
private   <double>  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private   <   >  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private   <   >  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private   <   >  ;
    internal ​   Source { get; }
    private protected    ( );
    internal    (    ,     ,     );
    private static    ();
    internal sealed virtual ​   get_Source();
    internal sealed virtual     ​ ();
    internal static     ( );
    internal virtual void    ​ ();
    internal sealed virtual     ​  ();
    internal sealed virtual void    ​ ( );
    internal abstract virtual     ​  ();
    internal abstract virtual void    ​ ( );
    internal     ();
    internal void (    );
    internal     ();
    private void (    );
    internal     ();
    private void (    );
    internal     ();
    private double  ();
    private void (double );
    private ​    ();
    private void (​   );
    private ​    ();
    private ​    ();
    private double  ();
    private      ();
    private double  ();
    internal double  ();
    private      ();
    protected abstract virtual        ​ ();
    private      ();
    internal void ();
    private void ();
    private      ();
    private static     (​   , int );
    internal double (int );
    internal     (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    private Nullable`1<int> ;
    private     ;
    public    (string , Nullable`1<int> ,     );
    public string ();
    private void (string );
    public Nullable`1<int> ();
    private void (Nullable`1<int> );
    public     ();
    private void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    internal    (    , double ,     , bool );
    internal void (    );
    public virtual bool Equals(object );
    public sealed virtual bool Equals(    );
    public virtual int GetHashCode();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Style ;
    private bool ;
    public    (Style );
    public bool ();
    public sealed virtual void    ​ (DocumentModel );
    public sealed virtual void    ​ (Section );
    public sealed virtual void    ​ (HeaderFooter );
    public sealed virtual void    ​ (Paragraph );
    public sealed virtual void    ​ (Table );
    public sealed virtual void    ​ (TableRow );
    public sealed virtual void    ​ (TableCell );
    public sealed virtual void    ​ (BookmarkStart );
    public sealed virtual void    ​ (BookmarkEnd );
    public sealed virtual void    ​ (Field );
    public sealed virtual void    ​ (Hyperlink );
    public sealed virtual void    ​ (PreservedDrawingElement );
    public sealed virtual void    ​ (Group );
    public sealed virtual void    ​ (Shape );
    public sealed virtual void    ​ (TextBox );
    public sealed virtual void    ​ (Picture );
    public sealed virtual void    ​ (Run );
    public sealed virtual void    ​ (SpecialCharacter );
    public sealed virtual void    ​ (PreservedInline );
    public sealed virtual void    ​ (TableOfEntries );
    public sealed virtual void    ​ (Note );
    public sealed virtual void    ​ (BlockContentControl );
    public sealed virtual void    ​ (InlineContentControl );
    public sealed virtual void    ​ (Chart );
    public sealed virtual void    ​ (CommentStart );
    public sealed virtual void    ​ (CommentEnd );
    public sealed virtual void    ​ (Comment );
    public sealed virtual void    ​ (MoveRangeSeparator );
    public sealed virtual void    ​ (AlignmentTab );
    private void (ElementCollection );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    private Stream ;
    internal    (Stream );
    protected Stream ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Dictionary`2<int,    > ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<KeyValuePair`2<ListStyle, string>> ;
    private List`1<> ;
    public    (    );
    public     (int );
    public void (StyleCollection );
    internal void (int ,     );
    internal void (ListStyle , string );
    internal void (ListLevelFormat , string , string , string );
    private static TStyle (string , StyleCollection );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    protected    (Stream );
    protected sealed virtual void    ​ (​   );
    protected sealed virtual void    ​ (​   );
    protected void (string ,     );
    protected void ();
    protected void ();
    protected void (    );
    protected void (​   , ​   );
    protected void (  [] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static double (Table );
    private static double (Section );
    public static double (TableCell );
    public static void (Table );
    public static double (TableCell );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private Double[] ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public    (double , Double[] );
    [NullableContextAttribute("2")]
internal    (Double[] , double );
    internal Double[] ();
    public IList`1<double> ();
    [IsReadOnlyAttribute]
public double ();
    internal static     (​   , double );
    [NullableContextAttribute("2")]
internal ​   ();
    internal     (double );
    public virtual string ToString();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private Func`2<   , > ;
    private TableCell ;
    private  ;
    private bool ;
    private    (Func`2<   , > );
    protected virtual bool    ​ (DocumentModel );
    protected virtual bool    ​ (Section );
    protected virtual bool    ​ (HeaderFooter );
    protected virtual bool    ​ (Paragraph );
    protected virtual bool    ​ (Table );
    protected virtual bool    ​ (TableRow );
    protected virtual bool    ​ (TableCell );
    protected virtual bool    ​ (Field );
    protected virtual bool    ​ (Hyperlink );
    protected virtual bool    ​ (PreservedDrawingElement );
    protected virtual bool    ​ (Shape );
    protected virtual bool    ​ (Group );
    protected virtual bool    ​ (TextBox );
    protected virtual bool    ​ (Picture );
    protected virtual bool    ​ (Run );
    protected virtual bool    ​ (BookmarkStart );
    protected virtual bool    ​ (BookmarkEnd );
    protected virtual bool    ​ (SpecialCharacter );
    protected virtual bool    ​ (PreservedInline );
    protected virtual bool    ​ (TableOfEntries );
    protected virtual bool    ​ (Note );
    protected virtual bool    ​ (BlockContentControl );
    protected virtual bool    ​ (InlineContentControl );
    protected virtual bool    ​ (Chart );
    protected virtual bool    ​ (CommentStart );
    protected virtual bool    ​ (CommentEnd );
    protected virtual bool    ​ (Comment );
    protected virtual bool    ​ (MoveRangeSeparator );
    protected virtual bool    ​ (AlignmentTab );
    private static   <   > (U );
    private static    <   > (U );
    public static bool (Element , Func`2<   , U> , U& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private    [] ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal IEnumerable`1<   > ​ { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ​ { get; }
    internal    ( ,     ,     );
    private    (int , int , string ,    [] );
    public     ();
    public int ();
    internal IEnumerable`1<   > ();
    public     (int );
    public     (int , int );
    [IteratorStateMachineAttribute("   /")]
public IEnumerable`1<   > (string , StringComparison );
    [IteratorStateMachineAttribute("   /")]
public IEnumerable`1<   > (Regex );
    public void ();
    public     ();
    internal     ();
    internal      ();
    public      ();
    public virtual string ToString();
    [NullableContextAttribute("2")]
private      ();
    private sealed virtual override        ​  ();
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override void    ​ (    );
    private sealed virtual override void    ​ (    );
    private sealed virtual override void    ​ ( );
    private sealed virtual override bool    ​  ();
    private sealed virtual override void    ​ (bool );
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override double    ​  ();
    private sealed virtual override void    ​ (double );
    private sealed virtual override     ​  ();
    private sealed virtual override void    ​ ( );
    private sealed virtual override void    ​ ( );
    private sealed virtual override bool    ​  ();
    private sealed virtual override void    ​ (bool );
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override double    ​  ();
    private sealed virtual override void    ​ (double );
    private sealed virtual override double    ​  ();
    private sealed virtual override void    ​ (double );
    private sealed virtual override     ​  ();
    private sealed virtual override void    ​ ( );
    private sealed virtual override     ​  ();
    private sealed virtual override void    ​ ( );
    private sealed virtual override double    ​  ();
    private sealed virtual override void    ​ (double );
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override bool    ​  ();
    private sealed virtual override void    ​ (bool );
    private sealed virtual override void    ​ ( );
    private sealed virtual override bool    ​  ();
    private sealed virtual override void    ​ (bool );
    private sealed virtual override bool    ​  ();
    private sealed virtual override void    ​ (bool );
    private sealed virtual override bool    ​  ();
    private sealed virtual override void    ​ (bool );
    private sealed virtual override        ​  ();
    private sealed virtual override        ​ (Double& );
    private sealed virtual override void    ​ (    , double );
    private sealed virtual override double    ​  ();
    private sealed virtual override void    ​ (double );
    private sealed virtual override double    ​  ();
    private sealed virtual override void    ​ (double );
    private sealed virtual override double    ​  ();
    private sealed virtual override void    ​ (double );
    private sealed virtual override double    ​  ();
    private sealed virtual override void    ​  (double );
    private sealed virtual override double    ​  ();
    private sealed virtual override void    ​  (double );
    private sealed virtual override bool    ​  ();
    private sealed virtual override void    ​ (bool );
    private sealed virtual override bool    ​  ();
    private sealed virtual override void    ​  (bool );
    private sealed virtual override     ​  ();
    private sealed virtual override void    ​ ( );
    private sealed virtual override void    ​ ( );
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override ​      ​  ();
    private sealed virtual override void    ​ (​   );
    private sealed virtual override ​      ​  ();
    private sealed virtual override void    ​ (​   );
    private sealed virtual override bool    ​  ();
    private sealed virtual override void    ​  (bool );
    private sealed virtual override ​      ​ ​();
    private sealed virtual override void    ​ (​   );
    private sealed virtual override void    ​ ( );
    private sealed virtual override bool    ​  ();
    private sealed virtual override void    ​  (bool );
    private sealed virtual override bool    ​  ();
    private sealed virtual override void    ​  (bool );
    private sealed virtual override int    ​ ();
    private sealed virtual override void    ​ (int );
    private sealed virtual override ​      ​  ();
    private sealed virtual override void    ​ (​   );
    private sealed virtual override ​      ​  ();
    private sealed virtual override void    ​ (​   );
    private sealed virtual override ​      ​  ();
    private sealed virtual override void    ​ (​   );
    private sealed virtual override ​      ​  ();
    private sealed virtual override void    ​ (​   );
    private sealed virtual override Nullable`1<   >    ​ ​();
    private sealed virtual override void    ​ (Nullable`1<   > );
    private sealed virtual override double    ​  ();
    private sealed virtual override void    ​  (double );
    private sealed virtual override double    ​  ();
    private sealed virtual override void    ​  (double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Assembly ;
    private static MethodInfo ;
    private static MethodInfo ;
    private static MethodInfo ;
    private static MethodInfo ;
    private static MethodInfo ;
    private static MethodInfo ;
    private static MethodInfo  ;
    private static MethodInfo  ;
    private static MethodInfo  ;
    private static MethodInfo  ;
    private static MethodInfo  ;
    public static bool ();
    private static bool ();
    public static object (Stream ,     );
    public static void (object , Stream );
    public static object (Stream , bool , ICollection`1<string> , bool ,     , Object& , Object& );
    public static object (object , object ,     );
    public static object (object , string , Stream );
    public static MemoryStream (Chart );
    public static object (ChartType , Nullable`1<ChartGrouping> );
    public static void (object , object );
    public static object (object );
    public static object (object );
    public static ChartType (object );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    internal ​   Source { get; }
    [NullableAttribute("2")]
public string   { get; public set; }
    [NullableAttribute("2")]
public string   { get; public set; }
    private static    ();
    private    ( );
    internal virtual     ​ ();
    internal virtual ​   get_Source();
    internal static     ();
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    private ​   ();
    private void (​   );
    private ​   ();
    private void (​   );
    private ​   ();
    private void (​   );
    private ​    ();
    private void (​   );
    private ​    ();
    private void (​   );
    private ​    ();
    private void (​   );
    private ​   ();
    private void (​   );
    private ​    ();
    private void (​   );
    private ​    ();
    private void (​   );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Element ;
    public    (Element );
    public sealed virtual void    ​ (DocumentModel );
    public sealed virtual void    ​ (Section );
    public sealed virtual void    ​ (HeaderFooter );
    public sealed virtual void    ​ (Paragraph );
    public sealed virtual void    ​ (Table );
    public sealed virtual void    ​ (TableRow );
    public sealed virtual void    ​ (TableCell );
    public sealed virtual void    ​ (BookmarkStart );
    public sealed virtual void    ​ (BookmarkEnd );
    public sealed virtual void    ​ (Field );
    public sealed virtual void    ​ (Hyperlink );
    public sealed virtual void    ​ (PreservedDrawingElement );
    public sealed virtual void    ​ (Shape );
    public sealed virtual void    ​ (Group );
    public sealed virtual void    ​ (TextBox );
    public sealed virtual void    ​ (Picture );
    public sealed virtual void    ​ (Run );
    public sealed virtual void    ​ (SpecialCharacter );
    public sealed virtual void    ​ (PreservedInline );
    public sealed virtual void    ​ (TableOfEntries );
    public sealed virtual void    ​ (Note );
    public sealed virtual void    ​ (BlockContentControl );
    public sealed virtual void    ​ (InlineContentControl );
    public sealed virtual void    ​ (Chart );
    public sealed virtual void    ​ (CommentStart );
    public sealed virtual void    ​ (CommentEnd );
    public sealed virtual void    ​ (Comment );
    public sealed virtual void    ​ (MoveRangeSeparator );
    public sealed virtual void    ​ (AlignmentTab );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private     ;
    public    (    ,     );
    internal     ();
    public     ();
    public sealed virtual        ​ ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    public int Count { get; }
    private object System.Collections.IList.Item { get; private set; }
    internal virtual ​      ​ ();
    internal virtual        ​ ();
    private protected virtual int    ​ ();
    private protected virtual object    ​ ();
    private protected virtual bool    ​  ();
    private protected virtual bool    ​  ();
    internal virtual bool    ​  ();
    private protected virtual int    ​ ();
    public sealed virtual int get_Count();
    private protected virtual void    ​ (int );
    public sealed virtual void RemoveAt(int );
    private protected virtual void    ​ ();
    public sealed virtual void Clear();
    private protected void (int );
    private protected void (int );
    internal static void (Array , int , int );
    internal static void (Array , int , int );
    private protected abstract virtual object    ​ (int );
    private protected abstract virtual void    ​ (int , object );
    private protected abstract virtual int    ​ (object );
    private protected abstract virtual void    ​ (int , object );
    private protected abstract virtual void    ​ (object );
    private protected abstract virtual bool    ​ (object );
    private protected abstract virtual int    ​ (object );
    private protected abstract virtual void    ​ (Array , int );
    private protected abstract virtual IEnumerator    ​  ();
    private sealed virtual override object    ​ ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override object System.Collections.IList.get_Item(int );
    private sealed virtual override void System.Collections.IList.set_Item(int , object );
    private sealed virtual override int    ​ (object );
    private sealed virtual override void System.Collections.IList.Insert(int , object );
    private sealed virtual override void    ​ (object );
    private sealed virtual override bool System.Collections.IList.Contains(object );
    private sealed virtual override int System.Collections.IList.IndexOf(object );
    private sealed virtual override void    ​ (Array , int );
    private sealed virtual override IEnumerator    ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​  [] ;
    [DebuggerBrowsableAttribute("0")]
private static ​  [] ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    internal ​   Source { get; }
    private static    ();
    private    ( );
    internal static     ();
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    public int ();
    public void (int );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    private     ();
    private void (    );
    private     ();
    public  ();
    public void ( );
    public bool  ();
    public void (bool );
    public      ();
    public void (    );
    public bool  ();
    public void (bool );
    public   ();
    public void ( );
    public bool  ();
    public     ( );
    public void ( ,     );
    public     ( );
    public void ( ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private     ;
    private bool ;
    private IDictionary`2<   ,    > ;
    internal    (    , bool ,     ,     );
    public void (   & ,    & );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  ​  {
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    private  ;
    private static    ();
    private    ( ,  );
    internal static     (    ,  );
    private protected virtual void    ​ (    );
    [CompilerGeneratedAttribute]
public virtual     ​ ();
    public     ();
    private protected virtual        ​  ();
    public string ();
    public void (string );
    public     ();
    public void (    );
    public     ();
    public void (    );
    internal virtual        ​ (    );
    internal virtual void    ​ (    );
    private void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private Action ;
    internal ​   Source { get; }
    internal    (    , Action );
    private     ();
    private     ();
    internal virtual        ​ ();
    internal virtual ​   get_Source();
    internal virtual ​      ​ ();
    private protected virtual int    ​ ();
    private protected virtual int    ​ ();
    private protected virtual        ​ (int );
    private protected virtual void    ​ (int ,     );
    private protected virtual void    ​ (int ,     );
    private protected virtual void    ​ (int );
    private protected virtual void    ​ ();
    private protected virtual int    ​  (    );
    private protected virtual        ​ (​   );
    private protected virtual ​      ​ (    );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual        ​ ();
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static IEnumerable`1<string> ;
    private static    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    private static    ();
    private    ( );
    internal static     ();
    internal virtual void    ​ ();
    public virtual     ​ ();
    public string ();
    public void (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (    ,     );
    public virtual void    ​ (   , string , Stream );
    private void (   , Stream );
    private void (   , Stream );
    private static     (SKColorType , SKAlphaType );
    private SKBitmap (   , int );
    internal static SKPicture (   , int ,     , object , SKSize& );
    private static SKRect (SKPicture , SKColor );
    private static SKSize (SKSize , Nullable`1<int> , Nullable`1<int> , float , float );
    private static SKBitmap (SKPicture , SKSize ,     );
    internal static void (SKSize , Nullable`1<int> , Nullable`1<int> , double , double , Int32& , Int32& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    internal ​   Source { get; }
    private static    ();
    private    ( );
    internal static     ();
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    public  ();
    public void ( );
    public bool ();
    public void (bool );
    private ​   ();
    private void (​   );
    private ​   ();
    public      ();
    public void (    );
    public bool ();
    public void (bool );
    public bool ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (    ,     );
    private static void (    ,     );
    private static void (    ,     );
    private static void (    ,     );
    private static void (    );
    private static void (    ,     );
    private static void (    ,     );
    private static void (    );
    private static void (    , string , object );
    public static void (    ,     );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private     ;
    [NullableContextAttribute("2")]
public    (    );
    public     ();
    public void (    );
    public virtual Style    ​ (DocumentModel );
    public virtual void    ​ ();
    protected virtual void    ​ (DocumentModel ,     );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private     ;
    private Dictionary`2<int, Picture> ;
    private Dictionary`2<long, ListStyle> ;
    private ListStyle ;
    private IDictionary`2<string,    > ;
    private    (    );
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string,    >  ​ ​ ();
    private sealed virtual override Chart    ​ (string );
    public static     (    );
    private void (    );
    private void (    );
    private void (    );
    private KeyValuePair`2<int,    > (    , String& , String& , String& );
    private void (    );
    private KeyValuePair`2<int,    > (    , Int32& , Nullable`1& , String& , String& , String& );
    private static  (string );
    public static NumberStyle (string );
    private static ListTrailingCharacter (string );
    private void (    , string );
    private sealed virtual override bool    ​ ();
    private sealed virtual override DocumentModel    ​ ();
    private sealed virtual override IDictionary`2<string, Color>    ​ ();
    private sealed virtual override IDictionary`2<string,    >    ​ ();
    private sealed virtual override IDictionary`2<string, bool>    ​ ();
    private sealed virtual override void    ​ (string );
    private sealed virtual override Picture    ​ (string );
    private sealed virtual override TextBox    ​ (    );
    public sealed virtual      ​ ​ (string );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
public long ;
    [DebuggerBrowsableAttribute("0")]
public long ;
    public    (long , long );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private    ( ​  );
    public static void (    , DrawingElement ,  ​  );
    private void (    , DrawingElement );
    private void (    , DrawingElement ,  );
    private static void (    , string );
    private static void (    , HorizontalPosition );
    private static void (    , HorizontalPosition );
    private static void (    , VerticalPosition );
    private static void (    , VerticalPosition );
    private static void (    , string , Size );
    private static void (    , string , double , double );
    private static void (    , Padding );
    private static void (    , TextWrappingStyle , WrapTextType , string );
    private void (    , string , ElementType , DrawingMetadata );
    private static void (    , bool );
    private void (    , DrawingElement ,  );
    private void (    , DrawingElement ,  );
    private void (    , Shape ,  , bool );
    private void (    , Picture ,  , bool );
    private static void (    , Shape ,  , bool );
    private void (    , TextBox );
    private static void (    , TextBoxFormat );
    private void (    ,     );
    private void (    , Picture );
    private void (    , Picture ,     );
    private void (    , Picture ,     , bool , OnlineVideo );
    private void (    , Picture );
    private static void (    , OnlineVideo );
    private static void (    , Transform ,    , Size ,    , string );
    private static void (    , string , double , double );
    private static void (    , Shape );
    private static void (    , Shape );
    private static void (    , Shape );
    private static void (    , Brush );
    private static void (    , SolidColorBrush );
    private static void (    , Pen ,    ,    );
    private static void (    ,    , string );
    private static void (    , Color );
    private static void (    , Color );
    private void (    , Group ,  , bool );
    private static void (    , Group ,  , bool );
    private void (    , DrawingElement , bool );
    private void (    , Chart );
    private void (    , Canvas ,  );
    private static void (    , Canvas ,  );
    private static void (    , Canvas ,  );
    private static void (    ,    );
    private static void (    ,    , string );
    private static void (    ,    );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private    ( ​  );
    public static void (    , DrawingElement ,  ​  );
    private void (    , DrawingElement );
    private void (    ,  );
    private void (    , Shape ,  , bool );
    private static void (    , TextBox ,  );
    private static string (Paragraph );
    private static string (CharacterFormat , string );
    private static string (Layout , TextBoxFormat , bool , bool , string , bool );
    private static void (    , Brush );
    private static void (    , Pen );
    private void (    , TextBox ,  );
    private void (    , Picture ,  );
    private static void (    , TextWrappingStyle , WrapTextType );
    private static string (TextBoxFormat , string );
    private void (    , Group ,  , bool );
    private void (    , DrawingElement );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (    , Shape );
    private static void (    , Shape );
    private static void (    , Shape );
    private static void (    , Shape );
    private static void (    , Shape );
    private static void (    , Shape );
    private static void (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void  (    , Shape );
    private static void (    ,     , Shape );
    private static void (    ,     , Shape , Action`2<   , Shape> );
    private static void (    , string );
    private static void (    ,     , Shape );
    private static void (    , ShapeType );
    private static void (    , List`1<string> );
    private static void (    ,     , string , Picture );
    private static void (    ,     , Picture );
    private static void (    ,     , TextBox );
    private static void (    , DrawingMetadata );
    public static void (    ,     );
    public static void (    ,     , Shape );
    public static void (    ,     , Group );
    public static void (    ,     , Shape );
    public static void (    , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual bool    ​ (   & );
    public void (   & ,    & );
    public void (   & ,    & );
    public void (   & ,    & );
    public sealed virtual void    ​ (   & , double );
    public sealed virtual void    ​ (   & , double );
    public     (   & ,    & );
    public void (   & ,    & );
    public bool (   & ,    & , IEqualityComparer`1<double> , Double& );
    public bool (   & ,    & , IEqualityComparer`1<double> , Double& );
    public bool (   & ,    & , IEqualityComparer`1<double> ,    & );
    public sealed virtual bool    ​ (   & ,    & , IEqualityComparer`1<double> );
    public sealed virtual bool    ​ (   & ,    & , IEqualityComparer`1<double> );
    public double (   & );
    public double (   & );
    public sealed virtual bool    ​ (   & , Double& ,    & );
    private sealed virtual override void    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & );
    private sealed virtual override void    ​ (   & ,    & modreq(System.Runtime.InteropServices.InAttribute) );
    private sealed virtual override void    ​ (   & ,    & modreq(System.Runtime.InteropServices.InAttribute) );
    private sealed virtual override        ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) );
    private sealed virtual override void    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & );
    private sealed virtual override bool    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) , IEqualityComparer`1<double> , Double& );
    private sealed virtual override bool    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) , IEqualityComparer`1<double> , Double& );
    private sealed virtual override bool    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,    & modreq(System.Runtime.InteropServices.InAttribute) , IEqualityComparer`1<double> ,    & );
    private sealed virtual override double    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) );
    private sealed virtual override double    ​ (   & modreq(System.Runtime.InteropServices.InAttribute) );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal abstract class     :     {
    private bool ;
    private  ;
    public  ();
    public void ( );
    [NullableContextAttribute("1")]
public void (DocumentModel ,     );
    [NullableContextAttribute("1")]
protected abstract virtual void    ​ (DocumentModel ,     );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
internal static class     : object {
    [NullableContextAttribute("1")]
public static void (    ,     , HeaderFooter );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    public static  ​  ;
    public static  ​  ;
    public static  ​  ;
    public static  ​  ;
    public static  ​  ;
    private static    ();
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
internal interface     {
    public double DpiX { get; }
    public double DpiY { get; }
    public bool Dither { get; }
    public abstract virtual bool    ​ ();
    public abstract virtual Nullable`1<int>    ​ ();
    public abstract virtual Nullable`1<int>    ​ ();
    public abstract virtual double get_DpiX();
    public abstract virtual double get_DpiY();
    public abstract virtual int    ​  ();
    public abstract virtual bool get_Dither();
    public abstract virtual bool    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static    [] ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal ​   Source { get; }
    internal    (​   );
    private static    ();
    public virtual     ​ ();
    public virtual int    ​ ();
    internal virtual    []    ​  ();
    internal virtual        ​  ();
    internal virtual ​      ​  ();
    internal virtual ​   get_Source();
    private  ();
    internal     ();
    internal virtual bool    ​ (    , Double& , Double& , Double& );
    internal virtual string    ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private DocumentModel ;
    private ListStyle ;
    private     ;
    private     ;
    private     ;
    private Dictionary`2<string,    > ;
    internal    (DocumentModel );
    private ListStyle ();
    private     ();
    private     ();
    private     ();
    private Dictionary`2<string,    > ();
    public     ();
    public     (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
    private static bool (​   , ​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (    , String& );
    [NullableContextAttribute("2")]
private static void (    , String& , String& , Boolean& );
    private static string (    );
    private static string (    );
    private static string (    );
    private static string (    , String& );
    private static string (    , String& );
    private static string (    , String& );
    private static string (    , String& );
    public static void (    ,     );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual        ​ ();
    public abstract virtual bool    ​ ();
    public abstract virtual void    ​ (bool );
    public abstract virtual        ​ ();
    public abstract virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
public IDictionary`2<string, string> ;
    public void (string , string , Action`1<Stream> );
    public sealed virtual void Dispose();
    public void (bool );
    public Stream (string );
    public abstract virtual  ​     ​ (string );
    public abstract virtual bool    ​ (string , Stream& );
    protected abstract virtual void    ​ (string , string , Action`1<Stream> );
    protected abstract virtual void    ​ ();
}
[DefaultMemberAttribute(" ")]
[DebuggerTypeProxyAttribute("GemBox.Pdf.Content.PdfBasicContentOperandListDebugView")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
private protected ​  [] ;
    public int Count { get; }
    [DebuggerBrowsableAttribute("0")]
public ​     { get; }
    private protected    (​  [] );
    private static    ();
    internal static     (​  [] );
    internal static ​  [] (IList`1<double> );
    internal static ​  [] (IList`1<double> , ​   );
    private protected virtual bool    ​ ();
    public virtual int get_Count();
    public ​   (int );
    public     ();
    internal ​  [] ();
    internal     (int );
    private sealed virtual override bool    ​ ();
    private sealed virtual override double    ​ (int );
    private sealed virtual override void    ​ (int , double );
    private sealed virtual override void    ​ (Double[] , int );
    private sealed virtual override void    ​ (int , double );
    private sealed virtual override void    ​ (double );
    private sealed virtual override void    ​ (int );
    private sealed virtual override bool    ​ (double );
    private sealed virtual override void    ​ ();
    private sealed virtual override int    ​ (double );
    private sealed virtual override bool    ​ (double );
    private sealed virtual override IEnumerator`1<double>    ​ ();
    private sealed virtual override IEnumerator    ​ ();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
public string  { get; }
    public    (string , string , Nullable`1<bool> , string );
    public    (TextWrappingStyle , WrapTextType );
    [IsReadOnlyAttribute]
public string ();
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
public string ();
    [IsReadOnlyAttribute]
public Nullable`1<bool> ();
    [IsReadOnlyAttribute]
public string ();
    public void (TextWrappingStyle& , WrapTextType& );
    [NullableContextAttribute("1")]
private static string (WrapTextType );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : XmlTextReader {
    public    (Stream );
    [IteratorStateMachineAttribute("   /")]
public IEnumerable`1<KeyValuePair`2<string, string>> ();
    public bool (string , String& );
    public bool (string );
    public bool (string , int );
    [IteratorStateMachineAttribute("   /")]
public IEnumerable`1<string> ();
    [IteratorStateMachineAttribute("   /")]
public IEnumerable`1<string> (string );
    public bool (string );
    public bool (string , int );
    [NullableContextAttribute("2")]
public string ();
}
internal class     :     {
    private char ;
    private int ;
    internal char ();
    internal void (char );
    internal int ();
    internal void (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private     ;
    private DocumentModel ;
    private HtmlSaveOptions ;
    private Dictionary`2<Stream,    > ;
    private StringBuilder ;
    private bool ;
    private bool  ;
    private      ;
    private     ;
    private      ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<Note, KeyValuePair`2<string, string>>  ;
    private Func`2<   , string>  ;
    private int  ;
    private bool  ;
    public    (    ,     , DocumentModel , HtmlSaveOptions , Func`2<   , string> , Dictionary`2<Stream,    > , bool , bool  ,      ,     ,      );
    public void (Inline , ParagraphFormat );
    public void ();
    private void (Picture );
    private void (Picture , int , int , bool );
    private void (Shape , int , int , Boolean& );
    private void (Shape , bool );
    private void (TextBox );
    private void (TextBox , int , int , bool );
    private void (Run );
    private void (SpecialCharacter , ParagraphFormat );
    private void (BookmarkStart );
    private void (Hyperlink , ParagraphFormat );
    private void (Field );
    private void (Field );
    private void (Field );
    private void (Field );
    private void (Field , ParagraphFormat );
    private KeyValuePair`2<string, string> (Note );
    private void (string , CharacterFormat , string , string );
    private void ();
    private void (ParagraphFormat );
    private static bool (Layout );
    private static string (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    private     ;
    [NullableAttribute("2")]
public      { get; }
    internal virtual bool    ​ ();
    internal virtual        ​ ();
    internal virtual void    ​ (    );
    [NullableContextAttribute("2")]
public     ();
    private protected abstract virtual        ​ (    );
    internal     (    );
    internal ​   ();
    internal static bool (​   ,     , bool , ​  & );
    private static void (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private ImportMapping ;
    public    (ContentRange , DocumentModel );
    public ImportMapping ();
    protected virtual Element    ​ (Element );
    public IEnumerable`1<Element> ();
    private static void (Element , int , List`1<Element> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static string (TableWidthUnit );
    public static string (Nullable`1<HorizontalAlignment> , bool );
    public static string (VerticalAlignment );
    public static string (TableCellTextDirection );
    public static string (MultipleBorders , MultipleBorders , bool , bool , bool , bool , bool );
    public static void (string , StringBuilder , Nullable`1<SingleBorder> );
    public static string (MultipleBorders );
    public static double (Nullable`1<SingleBorder> );
    public static string (Color );
}
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private double ;
    internal    (double );
    public virtual int    ​ ();
    protected virtual double    ​ (int );
    [NullableContextAttribute("1")]
protected virtual bool    ​ (    );
    public virtual void    ​ (   & );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    private Inline ;
    public    (string , Inline );
    public string ();
    public Inline ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<byte> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<byte> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<ushort> ;
    [DebuggerBrowsableAttribute("0")]
private ulong ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    public    (string , string , string , string , string );
    public    (string );
    [IsReadOnlyAttribute]
public string ();
    [IsReadOnlyAttribute]
public string ();
    public static void (long );
    public static void (long );
    public static void (long );
    public string ();
    public string ();
    public string ();
    public virtual bool Equals(object );
    public sealed virtual bool Equals(    );
    public virtual int GetHashCode();
    public virtual string ToString();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private static     ;
    [DebuggerBrowsableAttribute("0")]
private static     ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    private    ( );
    private static    ();
    public static     ();
    public static     ();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public virtual string ToString();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (    ,    [] );
    public    (    , IEnumerable`1<   > );
    public virtual     ​ ();
    public     ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private ArrayPool`1<> ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ArraySegment`1<> ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ArraySegment`1<>  { get; private set; }
    private    (ArrayPool`1<> , ArraySegment`1<> , bool );
    [CompilerGeneratedAttribute]
public sealed virtual ArrayPool`1<>    ​ ();
    [CompilerGeneratedAttribute]
public sealed virtual ArraySegment`1<>    ​ ();
    private void (ArraySegment`1<> );
    public static    <> (   <> );
    public static    <> (int , ArrayPool`1<> );
    public static    <> ([] , int , int , ArrayPool`1<> , bool );
    public static    <> (ArraySegment`1<> , ArrayPool`1<> , bool );
    private void ();
    public sealed virtual void    ​ (int , bool );
    public sealed virtual    <>    ​ (Nullable`1<int> );
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static bool (string );
    private static bool (string );
    private static bool (string );
    private static bool (string );
    private static bool (string );
    private static bool (string , Int32& , String& );
    private static void (    ,  );
    private static void (    ,  );
    public static void (string ,     ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <ushort> ;
    private string ;
    private string ;
    private static    ();
    public string ();
    public void (string );
    public string ();
    public void (string );
    public static     ();
    public virtual        ​ ();
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    private int ;
    private int ;
    private  ;
    public    (string , int , int ,  );
    public sealed virtual        ​ ();
    public sealed virtual bool    ​ ( ​  ,    & );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class     :    <> {
    private    <ushort> ;
    [DebuggerBrowsableAttribute("0")]
private ushort ;
    protected    (   <ushort> );
    public virtual ushort    ​ ();
    public virtual void    ​ (ushort );
    public static  (    );
    public virtual void    ​ (    );
    public virtual void    ​ (    );
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private StreamReader ;
    public    (Stream , Encoding , bool );
    protected virtual void    ​ (bool );
    protected virtual bool    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    public static  (    );
    public virtual        ​ ();
    public abstract virtual     ​ ();
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
private byte ;
    [DebuggerBrowsableAttribute("0")]
private byte ;
    [DebuggerBrowsableAttribute("0")]
private byte  ;
    [DebuggerBrowsableAttribute("0")]
private byte  ;
    [DebuggerBrowsableAttribute("0")]
private UInt32  ;
    public    (UInt32 );
    public    (byte , byte , byte , byte );
    private static    ();
    public byte ();
    public byte ();
    public byte ();
    public byte ();
    public static     op_Addition(    ,     );
    public static bool op_Equality(    ,     );
    public static bool op_GreaterThan(    ,     );
    public static bool op_GreaterThanOrEqual(    ,     );
    public static bool op_LessThan(    ,     );
    public static bool op_LessThanOrEqual(    ,     );
    public static bool op_Inequality(    ,     );
    public sealed virtual bool Equals(    );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
    public sealed virtual int CompareTo(    );
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <ushort> ;
    private static  <UInt32> ;
    private string ;
    private string ;
    private static    ();
    public string ();
    public void (string );
    public string ();
    public void (string );
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
    public static     ();
    public virtual        ​ ();
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public    (double , double );
    [IsReadOnlyAttribute]
public double ();
    [IsReadOnlyAttribute]
public double ();
    public sealed virtual bool Equals(    );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
internal class     :     {
    [NullableContextAttribute("1")]
internal    (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Uri ;
    public    (Uri );
    [CompilerGeneratedAttribute]
public sealed virtual Uri    ​ ();
    public sealed virtual MemoryStream    ​ (string , string );
    public Uri (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
internal Encoding ;
    internal    (Encoding );
    public sealed virtual int    ​ (int );
    public sealed virtual int    ​ (string );
    public sealed virtual int    ​ (string , Byte[] , int );
    public sealed virtual string    ​ (Byte[] , int , int );
    private protected virtual int    ​ (int );
    private protected virtual int    ​ (string );
    private protected virtual int    ​ (string , Byte[] , int );
    private protected virtual string    ​ (Byte[] , int , int );
}
[NullableContextAttribute("1")]
internal interface     {
    [NullableAttribute("2")]
public Byte[]  { get; }
    public abstract virtual string    ​ ();
    [NullableContextAttribute("2")]
public abstract virtual Byte[]    ​ ();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [NullableContextAttribute("1")]
public    (    );
    public Byte[] ();
    internal void (Byte[] );
    public Byte[] ();
    public void (Byte[] );
    internal virtual bool    ​ ();
    [NullableContextAttribute("1")]
private protected virtual Byte[]    ​ (Byte[] , string , object );
}
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private Queue`1<int> ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public int ();
    protected void (int );
    public int ();
    protected void (int );
    protected virtual void    ​ (bool );
    public sealed virtual void Dispose();
    public bool ();
    protected abstract virtual bool    ​ ();
    [NullableContextAttribute("1")]
public IList`1<int> (int );
}
internal class     : Exception {
    [NullableContextAttribute("1")]
public    (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    public virtual     ​ ();
    public virtual void    ​ (    , Stream );
    public virtual int    ​ (    , Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private static Byte[] ;
    private static Byte[] ;
    private static Byte[] ;
    private static Byte[] ;
    private static Byte[] ;
    private int ;
    private int ;
    private string  ;
    private int  ;
    private static    ();
    public Byte[] (string , Byte[] , Byte[] );
    private static int (XmlAttribute );
    public void (Byte[] , Byte[] , int , int , HashAlgorithm , Byte[] , int , Byte[]  , int  );
    public Byte[] (HashAlgorithm , Byte[] , Byte[] , Byte[] , int );
    public static Byte[] (Byte[] , int , byte );
    public static Byte[] (HashAlgorithm , Byte[] , Byte[] );
    public Byte[] (Byte[] , Byte[] , Byte[] , Int32& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private object ;
    public    (string , string , object );
    public string ();
    public string ();
    public object ();
    public bool ();
    public string ();
    public     ();
    private sealed virtual override object    ​ ();
    public     (Predicate`1<   > );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    protected    (bool , string );
    public bool ();
    public sealed virtual string    ​ ();
    public sealed virtual string    ​ ();
    public     ();
    protected sealed virtual        ​ ();
    private     ();
    protected abstract virtual IEnumerable`1<   >    ​ ();
    internal abstract virtual        ​ (string , string , bool );
    internal     (    );
    protected abstract virtual        ​ (    );
    public sealed virtual void Dispose();
    protected virtual void    ​ (bool );
    [IteratorStateMachineAttribute("   /")]
internal IEnumerable`1<   > ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    private static     ;
    internal    (    );
    private static    ();
    protected virtual        ​ ();
    protected virtual        ​ ();
    protected abstract virtual void    ​ (    );
    protected sealed virtual void    ​ (    );
    private static void (    ,     );
    private static void (    ,     );
    private static void (    ,     );
    private static void (    ,  );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :   <   ,    > {
    [DebuggerBrowsableAttribute("0")]
public string  { get; }
    public string (string );
    public void (string , string );
    private void (    , string );
    protected virtual     GetKeyForItem(    );
    internal void (    );
    internal void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    public    (string );
    public    (string , string );
    private void (string , string );
    public string ();
    public string ();
    public virtual int GetHashCode();
    public virtual string ToString();
    public virtual bool Equals(object );
    public sealed virtual bool Equals(    );
    public static string op_Implicit(    );
    public static     op_Implicit(string );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private static    [] ;
    [DebuggerBrowsableAttribute("0")]
private IList`1<byte> ;
    public    (Byte[] );
    private    (IList`1<byte> );
    private    (string );
    private static    ();
    private void (    );
    public int ();
    public virtual string ToString();
}
internal static class     : object {
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [NullableContextAttribute("1")]
public    (    );
    public static     ();
    public     ();
    [NullableContextAttribute("1")]
private sealed virtual override IEnumerator`1<   >    ​ ();
    [NullableContextAttribute("1")]
private sealed virtual override IEnumerator    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Dictionary`2<   ,    > ;
    private Dictionary`2<   ,    > ;
    private Dictionary`2<   ,    > ;
    internal     (    );
    internal     (    );
    private     (    );
}
[AttributeUsageAttribute("256")]
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     : Attribute {
    [DebuggerBrowsableAttribute("0")]
private string ;
    public    (string );
    public string ();
    public bool ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : Uri {
    [DebuggerBrowsableAttribute("0")]
private static Uri ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    internal    (string , ​   );
    internal    (Byte[] );
    private static    ();
    internal string ();
    internal  ();
    internal  ();
    public virtual int GetHashCode();
    public virtual bool Equals(object );
    public sealed virtual bool Equals(    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    private static    ();
    private    ( );
    internal static     ();
    internal virtual void    ​ ();
    internal virtual        ​ ();
    private void (    );
    internal virtual void    ​ (    );
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    internal ​   ();
    internal void (​   );
    public     ();
    internal void (    );
    internal string ();
    internal void (string );
    internal     ();
    internal void (    );
    public sealed virtual        ​ ();
    public double  ();
    public void (double );
    public      ();
    public      ();
    private     (    );
    public      ();
    internal     ( );
    internal virtual int    ​ ();
    public     (    );
    internal     (    ,  );
    private void ();
    private sealed virtual override        ​  ();
    private sealed virtual override ​      ​ ();
    private sealed virtual override void    ​ (​   );
    private sealed virtual override bool    ​  ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override        ​  ();
    private sealed virtual override     ​  ();
    private sealed virtual override        ​  ();
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override        ​  ();
    private sealed virtual override        ​  ();
    private sealed virtual override        ​ ( );
    private sealed virtual override        ​ (    ,     );
    private sealed virtual override        ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (    ,     );
    public     ();
    public     ();
    public bool ();
    public     (    );
    public virtual int GetHashCode();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual string ToString();
    public sealed virtual string ToString(string , IFormatProvider );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
public     ;
    [DebuggerBrowsableAttribute("0")]
public int ;
    [DebuggerBrowsableAttribute("0")]
public Action`2<Double[], Double[]> ;
    public    (    , int , Action`2<Double[], Double[]> );
    public static     (IList`1<   > );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private Dictionary`2<   , Brush> ;
    private Dictionary`2<   , Pen> ;
    private Dictionary`2< ​ , ImageSource> ;
    private Dictionary`2<   , GlyphTypeface> ;
    private     ;
    public    ( ​  ,     , bool , bool , bool );
    public virtual        ​ (object );
    public Brush (    );
    public Pen (    );
    public ImageSource (   );
    public GlyphTypeface (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    internal ​   Source { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal       { get; internal set; }
    [NullableAttribute("2")]
public       { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal       { get; internal set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal       { get; internal set; }
    [NullableAttribute("2")]
public string   { get; public set; }
    [NullableAttribute("2")]
public       { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private       { get; private set; }
    private static    ();
    private    ( );
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    internal static     (int , string );
    internal static     ();
    internal     ();
    internal     ();
    internal bool ();
    internal void ();
    internal bool ();
    internal int ();
    private void (int );
    public string  ();
    public void (string );
    [NullableContextAttribute("2")]
internal      ();
    [NullableContextAttribute("2")]
internal void (    );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
internal      ();
    [NullableContextAttribute("2")]
internal void (    );
    [NullableContextAttribute("2")]
internal      ();
    [NullableContextAttribute("2")]
internal void (    );
    [NullableContextAttribute("2")]
internal      ();
    public      ();
    [NullableContextAttribute("2")]
public string  ();
    [NullableContextAttribute("2")]
public void (string );
    public Nullable`1<DateTimeOffset>  ();
    public void (Nullable`1<DateTimeOffset> );
    public Nullable`1<DateTimeOffset>  ();
    public void (Nullable`1<DateTimeOffset> );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public void (    );
    [NullableContextAttribute("2")]
private      ();
    [NullableContextAttribute("2")]
private void (    );
    public      ();
    public      ();
    public virtual string ToString();
    internal     (int );
    internal void (bool );
    internal int  ();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static     (   );
    [ExtensionAttribute]
public static bool (   ,    );
    [ExtensionAttribute]
public static int (   );
    [ExtensionAttribute]
public static string (   );
    [ExtensionAttribute]
public static Typeface (   ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    internal ​   Source { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal       { get; internal set; }
    [NullableAttribute("2")]
public       { get; public set; }
    private static    ();
    private    ( );
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    internal static     ();
    private     ();
    internal     ();
    private void (    );
    internal void ();
    public     ();
    [NullableContextAttribute("2")]
internal     ();
    [NullableContextAttribute("2")]
internal void (    );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    public   ();
    public void ( );
    internal []  ();
    internal void ([] );
    public      ();
    public      ();
    public      ();
    public      ();
    public Nullable`1<>  ();
    public void (Nullable`1<> );
    public Nullable`1<double>  ();
    public void (Nullable`1<double> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private    [] ;
    private    [] ;
    private    [] ;
    private    [] ;
    private     ;
    private [] ;
    public    ([] ,    [] ,    [] ,    [] ,    [] ,     );
    public    [] ();
    private void (   [] );
    public    [] ();
    private void (   [] );
    public    [] ();
    private void (   [] );
    public    [] ();
    private void (   [] );
    public     ();
    private void (    );
    public [] ();
    private void ([] );
    public     (IEnumerable`1<   > );
    public     ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    private     ;
    private bool ;
    private bool ;
    private  ;
    private  ​  ;
    protected    ( ​  ,     ,  , bool , bool );
    [CompilerGeneratedAttribute]
public sealed virtual  ​     ​ ();
    protected abstract virtual double    ​ (    );
    public sealed virtual void    ​ (int , int , Double[] , Action`3<int, int, Double[]> );
}
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
public       { get; }
    [NullableContextAttribute("1")]
internal    (    , int , int , int , int ,     );
    [NullableContextAttribute("1")]
public     ();
    public     ();
    public  ();
    public  ();
    public   <char> ();
    internal   <int> ();
    internal bool  ();
    public   <int> ();
    public   <int>  ();
    public   <​  >  ();
    internal   <>  ();
    internal double  ();
    [NullableContextAttribute("1")]
internal     (    ,    );
    internal int (int );
    [NullableContextAttribute("1")]
public virtual string ToString();
    internal bool (   & );
    internal     (   & );
    internal double (int , int );
    internal void (int , int , double );
    internal void (int , int , double , double );
    internal     (int , int , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : ​   {
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
private string DebuggerDisplayValue { get; }
    private static    ();
    internal abstract virtual       ​ ();
    private string get_DebuggerDisplayValue();
    private DebuggerByteArray ();
    public static     (Stream );
    public static     (Byte[] );
    public static     (   );
    public void (Stream );
    public Stream ();
    public sealed virtual Stream ​  ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private Uri ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    public    (Uri ,  );
    public Uri ();
    public  ();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    internal Uri (Int32& );
    public virtual string ToString();
}
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public    (double , double );
    private static    ();
    public double ();
    public double ();
    internal double (double );
    internal void (Double& );
    [NullableContextAttribute("1")]
public virtual string ToString();
    public sealed virtual bool Equals(    );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
    public sealed virtual int CompareTo(double );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
internal static class     : object {
    public static bool ;
    private static    ();
    private static bool ();
    private static bool ();
    public static bool ();
    public static bool ();
    public static void (IntPtr , float );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<​  , ​  > ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    ,     );
    public     ();
    public     ();
    internal void (​   , ​   );
    internal ​   (​   );
    internal ​   (​   );
    internal ​   (​   );
    internal ​   (​   );
    internal void (​   , ​   );
    private ​   (​   );
    public void ();
    public void ();
    public sealed virtual void Dispose();
    private void (object , EventArgs );
    internal int (int );
    private sealed virtual override int    ​ (int );
}
[DefaultMemberAttribute(" ")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private [] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
public    { get; public set; }
    public [] ();
    public int ();
    public void (int );
    private bool (int );
    public void ();
    public    <> (int , int , bool );
    public    <> (int ,    <> );
    public    <>  (int , bool );
    public    <>  (   <> );
    public void  (int , int );
    public   (int );
    public void  (int ,  );
    public    <>  (int , int );
    public    <>  ();
    [IteratorStateMachineAttribute("   /")]
public IEnumerable`1<   <>>  ( );
    public int  ( ,  );
    private sealed virtual override IEnumerator`1<>    ​  ();
    private sealed virtual override IEnumerator    ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ​   {
    [DebuggerBrowsableAttribute("0")]
private static     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal    ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal    ;
    [DebuggerBrowsableAttribute("0")]
internal Nullable`1<> ;
    private bool ;
    private bool ;
    private Nullable`1<> ;
    private bool  ;
    private bool  ;
    private bool  ;
    [NullableAttribute("2")]
private      ;
    private bool  ;
    private bool  ;
    private bool  ;
    private bool  ;
    private bool  ;
    private bool  ;
    private bool  ;
    [NullableAttribute("2")]
public       { get; public set; }
    private static    ();
    public static     ();
    public  ();
    public void ( );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public Nullable`1<>  ();
    public void (Nullable`1<> );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public void (    );
    public      ();
    private     (    );
    internal bool  ();
    internal bool  ();
    internal bool  ();
    internal bool  ();
    internal bool  ();
    internal bool  ();
    internal bool  ();
    internal void (bool );
    internal      ();
    internal ​    ();
    internal ​    ();
    internal virtual void ​  ​ (    , Stream , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    public     ();
}
internal static class     : object {
    [NullableContextAttribute("1")]
public static void (    , IList`1<   > );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static double ;
    private static    ();
    private static bool (double , double );
    public static double (double ,     );
    public static double (double ,     );
    public static bool (    );
    public static bool (    );
    public static     (    ,    [] );
    public static     (IEnumerable`1<   > ,     );
    public static bool (    , IEnumerable`1<   > ,     ,     , bool );
    private static bool (    ,     ,     ,     ,     , bool );
    public static bool (    ,     );
    public static bool (    ,     ,     );
    private static bool (IList`1<   > );
    public static IList`1<   > (    ,     ,     );
    public static void (    ,     , Action`2<   ,    > );
    public static void (    ,     , Action`2<   ,    > );
    [ExtensionAttribute]
private static     (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
internal    ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    internal    (    ,     );
    internal virtual bool    ​ ();
    internal     ();
    internal string ();
    internal void (string );
    internal     ();
    internal     (int );
    internal     ();
    internal int ();
    private bool ();
    [NullableContextAttribute("2")]
private void (    );
    public void  ();
    public void (bool );
    internal void (bool );
    public void  ();
    internal void (bool );
    internal void (bool );
    internal void  ();
    internal void  ();
    internal void  ();
    internal void  ();
    public virtual string ToString();
    private sealed virtual override        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    public    ( , string , Nullable`1<int> );
    public virtual     ​ ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<​  , ​  >  ;
    [DebuggerBrowsableAttribute("0")]
internal   ;
    internal ​   Source { get; }
    private static    ();
    private    ( );
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    internal static     ();
    private static     ( );
    internal bool ();
    internal     ();
    public Nullable`1<double> ();
    public void (Nullable`1<double> );
    public Nullable`1<>  ();
    public void (Nullable`1<> );
    public Nullable`1<>  ();
    public void (Nullable`1<> );
    public Nullable`1<double> ();
    public void (Nullable`1<double> );
    public Nullable`1<   >  ();
    public void (Nullable`1<   > );
    public Nullable`1<   >  ();
    public void (Nullable`1<   > );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public Nullable`1<int>  ();
    public void (Nullable`1<int> );
    public bool (   & , Double& );
    public void (    , double );
    public ​    ();
    public void (​   );
    public ​    ();
    public void (​   );
    public ​    ();
    public void (​   );
    public ​    ();
    public void (​   );
    public ​    ();
    public void (​   );
    public ​    ();
    public void (​   );
    public ​    ();
    public void (​   );
    public Nullable`1<double> ();
    public void (Nullable`1<double> );
    public Nullable`1<double> ();
    public void (Nullable`1<double> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public ​    ();
    public void (​   );
    public ​    ();
    public void (​   );
    public      ();
    public void (    );
    public Nullable`1<double>  ();
    public void (Nullable`1<double> );
    public Nullable`1<double>  ();
    public void (Nullable`1<double> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public ​    ();
    public void (​   );
    public Nullable`1<   >  ();
    public void (Nullable`1<   > );
    private protected sealed virtual        ​ (    );
    internal     (    );
    [NullableContextAttribute("0")]
private bool (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private double ;
    public    (string , double );
    public    (    , double );
    public    (    , double );
    internal    (double ,     );
    public     ();
    public double ();
    public virtual string ToString();
}
internal static class     : object {
    [NullableAttribute("1")]
private static [] ;
    private static    ();
    public static bool (char , bool );
    public static  (char ,  );
    private static void (int , int ,  );
    private static void (int ,  );
    private static void (int , int ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​    ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    internal ​   Source { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal       { get; }
    private static    ();
    private    ( );
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    internal static     ();
    public     ();
    public     ();
    public     ();
    public     ();
    public     ();
    public     ();
    public      ();
    internal ​    ();
    internal void (​   );
    [NullableContextAttribute("2")]
internal      ();
    private int (​   );
    public void  ();
    internal void  ();
    internal      ();
    internal void (    ,     );
    internal bool  ();
    internal bool (   & );
    private sealed virtual override        ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private Section ;
    private PageSetup ;
    private HeaderFooter ;
    public    (    , DocumentModel , RtfSaveOptions );
    public void ();
    private void ();
    private void ();
    private void ();
    private void ();
    private void ();
    private void (int , ParagraphStyle , Dictionary`2<string, int> );
    private void (int , CharacterStyle , Dictionary`2<string, int> );
    private void (int , TableStyle );
    private void (int , string , TableStyleFormat );
    private void ();
    private void  ();
    private void (int , ListStyle );
    private void (ListLevelFormat , int );
    private void (string );
    private void  ();
    private void  ();
    private void  ();
    private void (int );
    private void (HyphenationOptions );
    private void  ();
    private void (BuiltInDocumentProperty , string );
    private void (BuiltInDocumentProperty , string );
    private void (BuiltInDocumentProperty , string );
    private void (string );
    private void (Section );
    private void (PageSetup );
    private void (TextColumnCollection );
    private void (MultipleBorders );
    private void (HeaderFooter );
    private void  ();
    private void  ();
    private void (NoteSettings , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Queue`1<   > ;
    private     ;
    private Dictionary`2<   ,    > ;
    private Dictionary`2<, > ;
    private Dictionary`2<, > ;
    private Dictionary`2<, > ;
    private Dictionary`2<, > ;
    private Dictionary`2<, >  ;
    private      ;
    internal    (    );
    public void (    );
    internal void ();
    internal void (int );
    public     (    );
    public  ( );
    public  ( );
    public  ( );
    public  ( );
    public  ( );
    private static T (T , IDictionary`2<T, T> );
    private static void (IDictionary`2<T, T> , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Dictionary`2<Color, string> ;
    private static Dictionary`2<string, Color> ;
    private static Dictionary`2<string, FieldType> ;
    private static Dictionary`2<FieldType, string> ;
    private static IList`1<> ;
    private static Dictionary`2<string, > ;
    private static Dictionary`2<Type, > ;
    private static    ();
    public static HorizontalAlignment (string );
    public static string (HorizontalAlignment );
    public static OutlineLevel (int );
    public static int (OutlineLevel );
    public static LineSpacingRule (string );
    public static string (LineSpacingRule );
    public static MultipleBorderTypes (string );
    public static Nullable`1<SingleBorderType> (string );
    public static string (SingleBorderType , bool );
    public static BorderStyle (string , bool , Boolean& );
    public static string (BorderStyle );
    public static Color (string , bool );
    private static Color (string );
    public static string (Color );
    public static string (Color , bool );
    private static byte (string , int );
    public static Nullable`1<UnderlineType> (string );
    public static string (UnderlineType );
    public static SpecialCharacterType  (string );
    public static string (SpecialCharacterType );
    public static   (string );
    public static string ( );
    public static Orientation  (string );
    public static string (Orientation );
    public static LineNumberRestartSetting  (string );
    public static string (LineNumberRestartSetting );
    public static   (string );
    public static string ( );
    public static Color (string );
    public static string (Color );
    public static HorizontalPositionAnchor  (string );
    public static string (HorizontalPositionAnchor );
    public static HorizontalPositionType  (string );
    public static string (HorizontalPositionType );
    public static VerticalPositionAnchor  (string );
    public static string (VerticalPositionAnchor );
    public static VerticalPositionType  (string );
    public static string (VerticalPositionType );
    public static TableWidthUnit  (string );
    public static string (TableWidthUnit );
    public static TableRowHeightRule  (string );
    public static string (TableRowHeightRule );
    public static TableCellTextDirection  (string );
    public static string (TableCellTextDirection );
    public static VerticalAlignment  (string );
    public static string (VerticalAlignment );
    public static FieldType  (string );
    public static string (FieldType );
    public static HeaderFooterType (bool , string );
    public static string (HeaderFooterType );
    public static TabStopAlignment  (string );
    public static string (TabStopAlignment );
    public static TabStopLeader  (string );
    public static string (TabStopLeader );
    public static TabPositioningBase  (string );
    public static string (TabPositioningBase );
    public static Nullable`1<BuiltInDocumentProperty>  (string );
    public static string (BuiltInDocumentProperty );
    public static Nullable`1<BuiltInDocumentProperty>  (string );
    public static string (BuiltInDocumentProperty );
    public static ViewType  (string );
    public static string (ViewType );
    public static object (string , string );
    public static void (object , String& , String& );
    public static SectionStart  (string );
    public static string (SectionStart );
    public static   (string );
    public static string ( );
    public static FormTextType  (string );
    public static string (FormTextType );
    public static EditingRestrictionType  (string );
    public static string (EditingRestrictionType );
    public static NoteNumbering  (string );
    public static string (NoteNumbering );
    public static NoteLocation  (string );
    public static string (NoteLocation );
    public static TextWrappingStyle  (string );
    public static Nullable`1<>  (string );
    public static string ( );
    public static DateStorageFormat  (string );
    public static string (DateStorageFormat );
    public static CalendarType  (string );
    public static string (CalendarType );
    public static string (RevisionType );
    public static PageVerticalAlignment  (string );
    public static string (PageVerticalAlignment );
    public static string (bool , bool );
    public static string (string , string );
    public static double  (string );
    public static double (string , double );
    public static NotSupportedException (string , string );
    public static NotSupportedException (string );
    public static NotSupportedException (T );
    public static double (string , LengthUnit );
    public static double (string , LengthUnit );
    public static double (string , LengthUnit , LengthUnit );
    public static bool (string , LengthUnit , Double& );
    public static bool (string , LengthUnit , LengthUnit , Double& );
    public static double (string , LengthUnit , double );
    private static Nullable`1<LengthUnit>  (string );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Dictionary`2<int, TableCell> ;
    private TableCell ;
    private int ;
    public bool (    , TableCellFormat , Func`1<TableCell> );
    public void (    );
    public void ();
    private static void (MultipleBorders , MultipleBorders , SingleBorderType , SingleBorderType , SingleBorderType );
    private static void (MultipleBorders , MultipleBorders , SingleBorderType );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    );
    public bool ();
    public void (bool );
    public  ();
    public void ( );
    internal static void (    ,     );
    internal static void (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    public    (Stream , ​  );
    internal     ();
    private void ();
    public static string (    , string );
    public static string (    , String[] );
    public     (    , string );
    public     (    , String[] );
    private static string (    , string );
    public bool (string , Action`1<Stream> );
    public void (string , IDictionary`2<string,    > );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private static    ();
    private    ( );
    public    (IList`1<   > ,     );
    public    (int , int , int ,     ,     , IList`1<   > ,     );
    public virtual     ​ ();
    public int ();
    private void (int );
    public void (    ,     ,     ,     ,     ,     ,     ,      ,      ,      ,      ,      );
    public void ( ,     ,     ,     ,     ,     ,     ,      ,      );
    internal void (    );
    public     (bool );
    private protected virtual   <double>    ​ (Stream );
    private protected virtual void    ​ (Stream );
    public  ();
    private protected virtual IEnumerator    ​  ();
    [IteratorStateMachineAttribute("   /")]
private protected virtual IEnumerator`1<  <double>>    ​  ();
    [IteratorStateMachineAttribute("   /")]
private protected virtual IEnumerator`1<  <double>>    ​  ();
    private sealed virtual override IEnumerator`1<   >    ​ ();
    private sealed virtual override IEnumerable`1<   >    ​ (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private    ;
    private    ;
    private     ;
    public    (   );
    public DocumentModel ();
    private DocumentModel (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
protected  ;
    [DebuggerBrowsableAttribute("0")]
protected     ;
    [DebuggerBrowsableAttribute("0")]
protected     ;
    protected    (    ,     ,     );
    protected void (    );
    protected     ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private     ;
    private    [] ;
    private bool ;
    public    (   [] , Byte[] ,     );
    public bool ();
    public    [] ();
    public virtual void    ​ (Byte[] , int , int , int );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [NullableAttribute("1")]
public ICollection`1<int>  { get; }
    [NullableAttribute("1")]
public ICollection`1<   >  { get; }
    private static    ();
    [NullableContextAttribute("1")]
internal    ( );
    [NullableContextAttribute("1")]
internal static     (    );
    public virtual     ​  ();
    private protected virtual object    ​  ();
    private protected virtual void    ​ (object );
    public object ();
    public void (object );
    internal virtual string    ​ ();
    internal virtual void    ​ (string );
    public bool ();
    public void (bool );
    [NullableContextAttribute("1")]
public ICollection`1<int> ();
    [NullableContextAttribute("1")]
public ICollection`1<   > ();
    public int ();
    public void (int );
    private protected virtual void    ​ (int , bool );
    private protected virtual void    ​  ();
    private protected virtual void    ​  ();
    internal void (object );
    [NullableContextAttribute("1")]
internal virtual        ​ (    );
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [NullableContextAttribute("1")]
internal    (Byte[] , int , int );
    public sealed virtual int    ​ ();
    public sealed virtual void    ​ (int );
    public void (int );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Dictionary`2<  ,    > ;
    private Dictionary`2<string,    []> ;
    private Dictionary`2<string,    > ;
    private Dictionary`2<   , > ;
    private Dictionary`2<   ,    > ;
    private    ;
    private    ;
    private     ;
    private    [] (string );
    private     (    );
    private     (string );
    private     (    );
    private     (    );
    private  (    , bool );
    public     (    );
    private void (    , HashSet`1<   > , HashSet`1<   > , List`1<   > , bool );
}
[DefaultMemberAttribute(" ")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private static    [] ;
    [DebuggerBrowsableAttribute("0")]
private static    [] ;
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
private Uri ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private    []  ;
    [DebuggerBrowsableAttribute("0")]
internal       { get; }
    private    (Uri , string ,    [] );
    private static    ();
    [IsReadOnlyAttribute]
public Uri ();
    [IsReadOnlyAttribute]
public string ();
    public static     (Uri , string );
    internal static     (Uri , string , string );
    internal static     (Uri , string );
    internal static     (    );
    internal static     (Uri , string );
    private static     (Uri , string , int , int );
    internal static     (    , object );
    internal static    [] (    , int );
    internal bool ();
    internal bool ();
    internal bool ();
    internal int ();
    internal     (int );
    internal void ();
    internal bool (   & );
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public virtual string ToString();
    private static int (string , int , Int32& , Int32& );
    private static string (string , int , int );
    private static bool (string , String& , String& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private Stack`1<   > ;
    public     Data { get; }
    public    (    );
    [CompilerGeneratedAttribute]
public sealed virtual     get_Data();
    public Stack`1<   > ();
    private void (Stack`1<   > );
    private void (int );
    private void (    );
    private void (    );
    private     ();
    private static bool (    ,    & );
    private static     (    );
    private void (Action`1<   > );
    private void (Func`2<   ,    > );
    private void (Action`2<   ,    > );
    private void (Func`3<   ,    ,    > );
    public sealed virtual void LoadInputs();
    public sealed virtual void SaveToOutputs();
    public sealed virtual void Unknown();
    public sealed virtual void Number(double );
    public sealed virtual void Expression(Action`1[] );
    public sealed virtual void Add();
    public sealed virtual void Sub();
    public sealed virtual void Mul();
    public sealed virtual void Div();
    public sealed virtual void Idiv();
    public sealed virtual void Mod();
    public sealed virtual void Neg();
    public sealed virtual void Abs();
    public sealed virtual void Ceiling();
    public sealed virtual void Floor();
    public sealed virtual void Round();
    public sealed virtual void Truncate();
    public sealed virtual void Sqrt();
    public sealed virtual void Sin();
    public sealed virtual void Cos();
    public sealed virtual void Atan();
    public sealed virtual void Exp();
    public sealed virtual void Ln();
    public sealed virtual void Log();
    public sealed virtual void Cvi();
    public sealed virtual void Cvr();
    public sealed virtual void Eq();
    public sealed virtual void Ne();
    public sealed virtual void Gt();
    public sealed virtual void Ge();
    public sealed virtual void Lt();
    public sealed virtual void Le();
    public sealed virtual void And();
    public sealed virtual void Or();
    public sealed virtual void Xor();
    public sealed virtual void Not();
    public sealed virtual void Bitshift();
    public sealed virtual void True();
    public sealed virtual void False();
    public sealed virtual void If(Action`1<IPdfPostScriptContext> );
    public sealed virtual void Ifelse(Action`1<IPdfPostScriptContext> , Action`1<IPdfPostScriptContext> );
    public sealed virtual void Pop();
    public sealed virtual void Exch();
    public sealed virtual void Dup();
    public sealed virtual void Copy();
    public sealed virtual void Index();
    public sealed virtual void Roll();
    private void (    );
    private void (    ,     );
    private void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Dictionary`2<string, SystemColorName> ;
    private static  ;
    private static    ();
    private static  ();
    private static bool ();
    private static  ();
    public static bool (SystemColorName ,    & );
    public static bool (string ,    & );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private Action`2<Double[], Double[]> ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
internal ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      { get; }
    internal ​   Source { get; }
    private static    ();
    private    (​   );
    [NullableContextAttribute("2")]
private     ();
    public static     (IList`1<   > );
    internal virtual ​   get_Source();
    internal virtual ​      ​ ();
    private protected virtual        ​ (​   );
    private protected virtual ​      ​ (    );
    private protected virtual void    ​ (    );
    private protected virtual void    ​ (int ,     );
    private protected virtual void    ​ (int ,     );
    internal static Action`2<Double[], Double[]> (IList`1<   > );
    private Action`2<Double[], Double[]> ();
    private sealed virtual override Action`2<Double[], Double[]>    ​ ();
    private sealed virtual override void    ​ (Action`2<Double[], Double[]> );
    private sealed virtual override        ​ ();
    private sealed virtual override void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public    (double , double , double , double );
    public    (    ,     );
    public    (    ,     );
    public    (    );
    private static    ();
    public static RectangleF op_Implicit(    );
    public static     op_Implicit(RectangleF );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public double ();
    public void (double );
    public bool  ();
    public      ();
    public void (    );
    public      ();
    public void (    );
    public double ();
    public double ();
    public double ();
    public double  ();
    public double  ();
    public double  ();
    public      ();
    public      ();
    public      ();
    public      ();
    public bool (    );
    public bool (    );
    public void (    );
    public static     (    ,     );
    public static     (    ,  );
    public void (double , double );
    public static     (    , double , double );
    public void (double , double );
    public static     (    , double , double );
    public static     (    , double );
    public void (    );
    public static     (    ,     );
    public bool (    );
    internal static     (IEnumerable`1<   > );
    internal     (    );
    public virtual int GetHashCode();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual string ToString();
    public sealed virtual string ToString(string , IFormatProvider );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    public static SKRect op_Implicit(    );
    public static     op_Implicit(SKRect );
    public static Rect op_Implicit(    );
    public static     op_Implicit(Rect );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    public    (​   , MemoryStream ,     );
    public void (    );
    private void (​   );
    private void ();
    private void (​   );
    private void (​   );
    protected virtual void    ​ (bool );
    protected virtual void    ​ (​   );
    protected virtual void    ​ (​   );
    protected virtual void    ​ (​   );
    internal static void (Stream , ​   , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IEnumerable`1<KeyValuePair`2<CultureInfo, string>>  { get; }
    internal    (    , int , IList`1<   > );
    public virtual bool    ​ ();
    internal virtual bool    ​ ();
    public virtual        ​  ();
    public virtual double    ​  ();
    public virtual void    ​ (double );
    public virtual double    ​  ();
    public virtual void    ​ (double );
    [IteratorStateMachineAttribute("   /")]
private IEnumerable`1<KeyValuePair`2<CultureInfo, string>> ();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static MethodInfo[] ;
    private static Action`1[] ;
    private static Action`1<IPdfPostScriptContext> ;
    private static    ();
    private static MethodInfo[] ();
    private static Action`1[] ();
    [ExtensionAttribute]
public static     (    );
    [ExtensionAttribute]
private static     (    , int , int );
    [ExtensionAttribute]
private static IList`1<   > (IList`1<   > ,     );
    [ExtensionAttribute]
public static void (    ,     );
    [ExtensionAttribute]
private static bool (    , Boolean& );
    [ExtensionAttribute]
public static Action`1<IPdfPostScriptContext> (    );
    [ExtensionAttribute]
public static Action`1<IPdfPostScriptContext> (IList`1<   > );
    [ExtensionAttribute]
public static Action`1<IPdfPostScriptContext> (    , Stack`1<Action`1<IPdfPostScriptContext>> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [NullableAttribute("2")]
protected ArrayPool`1<byte> ;
    protected double ;
    protected double ;
    protected    [] ;
    protected Byte[] ;
    [NullableAttribute("2")]
protected     ;
    protected  ;
    [NullableAttribute("2")]
public      { get; }
    internal ArrayPool`1<byte> ();
    public virtual        ​ ();
    public virtual double    ​ ();
    public virtual double    ​ ();
    public virtual     ​ ();
    public virtual    []    ​ ();
    public virtual Byte[]    ​  ();
    [NullableContextAttribute("2")]
public virtual        ​  ();
    public virtual bool    ​ (    , ArrayPool`1<byte> );
    protected abstract virtual    <byte>    ​ (ArrayPool`1<byte> );
    public virtual void    ​ (Action`1<ArraySegment`1<byte>> ,  ,     ,  ​  , ArrayPool`1<byte> );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   >  { get; }
    internal    (    ,     );
    private static    ();
    internal     ();
    private Nullable`1<   > (string );
    public     (string );
    public     (string , string );
    private protected virtual        ​ (​   );
    private protected virtual ​      ​ (    );
    private protected virtual void    ​ (int ,     );
    private protected virtual void    ​ (int ,     );
    private protected virtual void    ​ (int );
    private protected virtual int    ​  (    );
    private protected virtual void    ​ (int ,     , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    internal    (Byte[] , int );
    public sealed virtual int    ​ ();
    public sealed virtual void    ​ (int );
    public sealed virtual void    ​ ();
    public sealed virtual void    ​ ();
    public virtual string ToString();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<DateTimeOffset>  ;
    [DebuggerBrowsableAttribute("0")]
private IFormatProvider  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    private bool  ;
    [NullableAttribute("1")]
private protected     ​ { get; }
    [NullableAttribute("1")]
public string ​ { get; public set; }
    [NullableAttribute("1")]
public     ​ { get; public set; }
    [NullableAttribute("1")]
public     ​ { get; public set; }
    [NullableAttribute("1")]
public     ​ { get; public set; }
    [NullableContextAttribute("1")]
internal    (    );
    private static    ();
    [NullableContextAttribute("1")]
private protected virtual        ​ ();
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string  ();
    public void  (string );
    public string  ();
    public void  (string );
    public Nullable`1<DateTimeOffset>  ();
    public void (Nullable`1<DateTimeOffset> );
    public string  ();
    public void  (string );
    public IFormatProvider  ();
    public void (IFormatProvider );
    internal bool  ();
    internal bool  ();
    private void (bool );
    [NullableContextAttribute("1")]
public string  ();
    [NullableContextAttribute("1")]
public void  (string );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public double  ();
    public void (double );
    public double  ();
    public void (double );
    public      ();
    public void (    );
    public double  ();
    public void (double );
    public   ();
    public void ( );
    public      ();
    public void (    );
    public Nullable`1<   >  ();
    public void (Nullable`1<   > );
    public Nullable`1<   >  ();
    public void (Nullable`1<   > );
    public      ();
    public void (    );
    public double  ();
    public void (double );
    [NullableContextAttribute("1")]
public      ();
    [NullableContextAttribute("1")]
public void (    );
    [NullableContextAttribute("1")]
public      ();
    [NullableContextAttribute("1")]
public void (    );
    [NullableContextAttribute("1")]
public      ();
    [NullableContextAttribute("1")]
public void (    );
    public   ();
    public void ( );
    public   ();
    public void ( );
    public   ();
    public void ( );
    public   ();
    public void ( );
    public   ();
    public void ( );
    public double  ();
    public void (double );
    public      ();
    public void (    );
    public      ();
    public void (    );
    public   ();
    public void ( );
    public bool  ();
    public void (bool );
    public      ();
    public void (    );
    public      ();
    public void (    );
    public      ();
    public void (    );
    public      ();
    public void (    );
    public      ();
    public void (    );
    public      ();
    public void (    );
    public      ();
    public void (    );
    public      ();
    public void (    );
    public     ​();
    public void (    );
    [NullableContextAttribute("1")]
public void (    );
    private void (    );
    private protected virtual void    ​ ​();
    internal void (Nullable`1<DateTimeOffset> , DateTimeOffset );
    [NullableContextAttribute("1")]
private     (​   ,    & );
    [NullableContextAttribute("1")]
public virtual string ToString();
    private void ​();
    [NullableContextAttribute("1")]
private string (string , string );
    [NullableContextAttribute("1")]
private List`1<string> (    , String& );
    [NullableContextAttribute("1")]
private     (    ,     ,     );
    [NullableContextAttribute("1")]
private     (    ,     ,     );
    [NullableContextAttribute("1")]
private     (    ,     );
    [NullableContextAttribute("1")]
private     (    ,     ,     );
    [NullableContextAttribute("1")]
private     (    );
    [NullableContextAttribute("1")]
private static     (    ,     ,    & ,    & );
    [NullableContextAttribute("1")]
private static void (    ,     , ​   ,     ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private     ;
    private Single[0...,0...] ;
    public     ();
    public void (    );
    public Single[0...,0...] ();
    public void (Single[0...,0...] );
}
[DefaultMemberAttribute(" ")]
[ComVisibleAttribute("False")]
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    [DebuggerBrowsableAttribute("0")]
internal ​   Source { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public string   { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public       { get; }
    internal    (    );
    internal     ();
    internal virtual ​   get_Source();
    private     ();
    private     ();
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    public     (string );
    public void ();
    private ​   ();
    private void ();
    public      ();
    public     (    , double , double , double , double );
    internal     (string ,     , double , double , double , double );
    public     (    , double , double , double , double );
    internal     (string ,     , double , double , double , double );
    public     (    , double , double , double , double );
    internal     (string ,     , double , double , double , double );
    public     (    , double , double , double , double );
    internal     (string ,     , double , double , double , double );
    public     (    , double , double , double , double );
    internal     (string ,     , double , double , double , double );
    public     (    , double , double , double , double );
    internal     (string ,     , double , double , double , double );
    public      (    , double , double , double , double );
    internal      (string ,     , double , double , double , double );
    public     (    , double , double , double , double );
    internal     (string ,     , double , double , double , double );
    public   ();
    private protected virtual int    ​ ();
    private protected virtual ​      ​ (    );
    private protected virtual        ​ (​   );
    private protected virtual        ​ (int );
    private protected virtual void    ​ (int ,     );
    private protected virtual void    ​ (int ,     );
    private protected virtual void    ​ (int );
    private protected virtual void    ​ ();
    private protected virtual int    ​  (    );
    private protected virtual IEnumerator`1<   >    ​  ();
    private static void (    );
    private static void (    );
    internal void (    , string );
    internal void (    );
    internal void (string ,  );
    internal bool (string ,  , Exception& );
    private static Exception (    , string );
    private     (string , String& );
    private static string (string , String& );
    [IteratorStateMachineAttribute("   /")]
internal IEnumerable`1<   > (string );
    [IteratorStateMachineAttribute("   /")]
internal IEnumerable`1<TField> (string );
    private string (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static [] ;
    private static    ();
    private static [] ();
    [IteratorStateMachineAttribute("   /")]
public static IEnumerable`1<string> (int );
}
internal class     :     {
    [NullableContextAttribute("1")]
internal    (Byte[] );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual Stream    ​ ();
    public abstract virtual long    ​ ();
    public abstract virtual void    ​ (long );
    public abstract virtual int    ​ ();
    public abstract virtual int    ​ ();
    public abstract virtual byte    ​ ();
    public abstract virtual void    ​ (byte );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <UInt32> ;
    private UInt32 ;
    private ushort ;
    private static    ();
    public UInt32 ();
    public void (UInt32 );
    public ushort ();
    public void (ushort );
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
    public static     ();
    public virtual        ​ ();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [DebuggerBrowsableAttribute("0")]
[ThreadStaticAttribute]
private static    <byte> ;
    [ExtensionAttribute]
public static Byte[] (Stream );
    [ExtensionAttribute]
public static Byte[] (Stream );
    [ExtensionAttribute]
public static Match (Stream , Regex , int , long , int , Int64& );
    [ExtensionAttribute]
private static Match (Stream , Regex , int , long , Char[] , Int64& );
    [ExtensionAttribute]
private static Match (Stream , Regex , int , long , Char[] , Int64& );
    internal static    <byte> ();
    [ExtensionAttribute]
internal static int (Stream );
    [ExtensionAttribute]
public static bool (Stream , Stream , int );
    [ExtensionAttribute]
public static MemoryStream (Stream , bool );
    [ExtensionAttribute]
public static MemoryStream (Stream , bool );
    [ExtensionAttribute]
public static Stream (Stream );
    [ExtensionAttribute]
[NullableContextAttribute("0")]
public static bool (Stream , ArraySegment`1& );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    internal     ();
    internal void (    );
    internal string ();
    internal void (string );
    internal     (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private    <   > ;
    private    <Encoding> ;
    private    <string> ;
    private    <string> ;
    private    <string> ;
    [NullableAttribute("2")]
public string  { get; public set; }
    [NullableAttribute("2")]
public string  { get; public set; }
    public    (    );
    public    (    );
    public     ();
    public void (    );
    public Encoding ();
    public void (Encoding );
    public string ();
    public void (string );
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    private static string (string );
    public void (   <   > );
    public void (   <Encoding> );
    public void (   <string> );
    public void (   <string> );
    public void (   <string> );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Dictionary`2<string, > ;
    private static    ();
    public static bool (string , String& , Boolean& );
    [ExtensionAttribute]
private static void (Dictionary`2<string, > , string , bool , string );
    [ExtensionAttribute]
private static void (Dictionary`2<string, > , string , bool , String[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
internal XmlWriter ;
    private    (XmlWriter );
    public static     (XmlWriter );
    private static XmlWriterSettings (XmlWriterSettings );
    private static XmlWriter (Stream , XmlWriterSettings );
    public static     (Stream , XmlWriterSettings );
    private static XmlWriter (StringBuilder , XmlWriterSettings );
    public static     (StringBuilder , XmlWriterSettings );
    public void (string , string , Nullable`1<bool> );
    public  (string , string , string );
    public  (string , string );
    public  (string );
    public  (    );
    public void (string , string , string , T );
    public void (string , string , T );
    public void (string , T );
    public void (string , string , string , Nullable`1<T> );
    [NullableContextAttribute("0")]
public void  (string , string , Nullable`1<T> );
    [NullableContextAttribute("0")]
public void  (string , Nullable`1<T> );
    public void (string , string , string );
    public void (string , string );
    public void (string );
    public void (string , string , string , T );
    public void (string , string , T );
    public void (string , T );
    public void  (    , T );
    public void  (string , string , string , Nullable`1<T> );
    [NullableContextAttribute("0")]
public void  (string , string , Nullable`1<T> );
    [NullableContextAttribute("0")]
public void  (string , Nullable`1<T> );
    public void  (T );
    public void (string );
    public void (Nullable`1<bool> );
    public void (string , string );
    public void (string );
    public string (string );
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private static Random ;
    private static IEnumerable`1<Char[]> ;
    private static Regex ;
    private string ;
    private static    ();
    public void (string );
    public bool (string , string , Action`1<bool> , Int32& , Int32& , Int32& );
    private bool ();
    private bool (string , string , Action`1<bool> , Int32& , Int32& , Int32& );
    private bool (string , string , Action`1<bool> , Int32& , Int32& , Int32& );
    private static void (string , string );
    private static void (string );
    private static void ();
    private static void (string , string );
    private static void (string , string );
    private static void (string );
    private static void (string , string , Action`1<bool> , Int32& , Int32& , Int32& );
    private static int (int );
    private static bool (Action`1<bool> , Int32& , Int32& , Int32& );
}
[DefaultMemberAttribute(" ")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
public string   { get; }
    [DebuggerBrowsableAttribute("0")]
public string   { get; }
    internal    (    );
    private static void (    , Action`1<   > );
    private static T (    , Func`2<   , T> );
    private static     (XmlReader );
    public static void (XmlReader , Action`1<   > );
    public static T (XmlReader , Func`2<   , T> );
    private static XmlReaderSettings (XmlReaderSettings );
    private static XmlReader (TextReader , XmlReaderSettings , XmlParserContext );
    public static void (TextReader , Action`1<   > , XmlReaderSettings , XmlParserContext );
    public static T (TextReader , Func`2<   , T> , XmlReaderSettings , XmlParserContext );
    private static XmlReader (Stream , XmlReaderSettings , XmlParserContext );
    public static void (Stream , Action`1<   > , XmlReaderSettings , XmlParserContext );
    public static T (Stream , Func`2<   , T> , XmlReaderSettings , XmlParserContext );
    public     ();
    public bool ();
    public     ();
    public XmlReaderSettings ();
    public T ();
    [NullableContextAttribute("0")]
public Nullable`1<T> (string , string );
    public string ();
    [NullableContextAttribute("0")]
public Nullable`1<T> (string );
    public string (string , string );
    public string (string );
    public string ();
    public string (string );
    public     ();
    private sealed virtual override IEnumerator`1<   >    ​  ();
    private sealed virtual override IEnumerator    ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private  ;
    private     ;
    internal    (Byte[] , string );
    internal    (X509Certificate2 );
    internal     ();
    internal  ();
    internal void ( );
    public virtual Byte[]    ​ (Stream , bool );
    private    ();
}
[AttributeUsageAttribute("11148")]
internal class     : Attribute {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private String[] ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<string>  { get; }
    public    (String[] );
    public IList`1<string> ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static String[] ;
    private static    ();
    private static bool (string );
    private static bool (string );
    public static void (string ,     ,  );
    public static void (string ,     ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private string ;
    private static    ();
    public string ();
    public void (string );
    public static     ();
    public virtual        ​ ();
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : Stream {
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private FileAccess ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    public bool CanRead { get; }
    public bool CanWrite { get; }
    public bool CanSeek { get; }
    public long Position { get; public set; }
    public long Length { get; }
    public    (IntPtr , long , FileAccess );
    public virtual bool get_CanRead();
    public virtual bool get_CanWrite();
    public virtual bool get_CanSeek();
    public virtual long get_Position();
    public virtual void set_Position(long );
    private void (long );
    public virtual long get_Length();
    public virtual int Read(Byte[] , int , int );
    public virtual void Write(Byte[] , int , int );
    public virtual long Seek(long , SeekOrigin );
    public virtual void SetLength(long );
    public virtual void Flush();
    public virtual int ReadByte();
    public virtual void WriteByte(byte );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private List`1<   > ;
    private static    ();
    public List`1<   > ();
    public void (List`1<   > );
    public static     ();
    public virtual        ​ ();
    public virtual void    ​ (    );
    public virtual void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Char[] ;
    private static Char[] ;
    private static HashSet`1<string> ;
    private static    ();
    private static void (string , Int32& );
    private static int (string , String& );
    public static String[] (string );
    public static bool (string , Int32& );
    public static bool (string , Int32& , String& , char );
    public static bool (string , Int32& , String& , char , char );
    public static bool (string , Int32& , char );
    public static bool (string , Int32& , String& , bool );
    public static bool (string , Int32& , String& , int , Predicate`1<string> , bool );
    public static bool (string , Int32& );
    public static bool (string , Double& );
    public static bool (string , Int32& , String& );
    public static bool (string , Double& , String& );
    public static bool (string , Int32& , String& );
    public static bool (string , Int32& , String& );
    public static bool (string , Int32& , String& );
    public static bool (string , Int32& , String& , String& );
    public static void (IList`1<string> , IList`1<string> ,     ,  );
    public static bool (string ,     , IEnumerable`1<string> ,  );
    public static bool (string );
    public static bool (string );
    public static bool (string );
    public static bool (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static  <ushort> ;
    private static <UInt32> ;
    private static    ();
    public static     ();
    public virtual        ​ ();
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public  ​  ;
    public     ;
    public    (    ,  ​  );
    public     ();
    public     (Byte[] );
    public Nullable`1<   > (Byte[] ,     );
    public     (    );
    public Nullable`1<   > (    ,     );
    private Nullable`1<   > (    ,     );
    public static     ( ​  );
    public static     (string ,  ​  );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class     :    <> {
    public abstract virtual     ​ (string );
    public abstract virtual string    ​ ( );
    public sealed virtual     ​ (    , bool );
    public sealed virtual void    ​ (    ,  );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual bool TryResolve(TableStyleOptions , Element , Func`2<, U> , U& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    public    (    ,     ,     ,     );
    public    (double , double , double , double );
    internal    (    );
    public     ();
    public     ();
    public     ();
    public     ();
    public double ();
    public double ();
    public double ();
    public double  ();
    internal      ();
    internal bool  ();
    public virtual string ToString();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    internal void (double );
    internal  ( , bool , bool ,  );
    internal bool (    , bool );
    internal IEnumerable`1<   >  ();
    internal IEnumerable`1<   > (    );
    [IteratorStateMachineAttribute("   /")]
internal IEnumerable`1<   >  ();
    internal static     (IEnumerable`1<   > );
    internal void (double );
    internal bool (    );
    internal bool (    );
    internal   ();
    internal  ( , bool , bool ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private Func`2<   , > ;
    private  ;
    private bool ;
    private    (Func`2<   , > );
    protected virtual bool    ​ (DocumentModel );
    protected virtual bool    ​ (Section );
    protected virtual bool    ​ (HeaderFooter );
    protected virtual bool    ​ (Paragraph );
    protected virtual bool    ​ (Table );
    protected virtual bool    ​ (TableRow );
    protected virtual bool    ​ (TableCell );
    protected virtual bool    ​ (Field );
    protected virtual bool    ​ (Hyperlink );
    protected virtual bool    ​ (PreservedDrawingElement );
    protected virtual bool    ​ (Shape );
    protected virtual bool    ​ (Group );
    protected virtual bool    ​ (TextBox );
    protected virtual bool    ​ (Picture );
    protected virtual bool    ​ (Run );
    protected virtual bool    ​ (BookmarkStart );
    protected virtual bool    ​ (BookmarkEnd );
    protected virtual bool    ​ (SpecialCharacter );
    protected virtual bool    ​ (PreservedInline );
    protected virtual bool    ​ (TableOfEntries );
    protected virtual bool    ​ (Note );
    protected virtual bool    ​ (BlockContentControl );
    protected virtual bool    ​ (InlineContentControl );
    protected virtual bool    ​ (Chart );
    protected virtual bool    ​ (CommentStart );
    protected virtual bool    ​ (CommentEnd );
    protected virtual bool    ​ (Comment );
    protected virtual bool    ​ (MoveRangeSeparator );
    protected virtual bool    ​ (AlignmentTab );
    private static   <   > (U );
    private static    <   > (U );
    public static bool (Element , Func`2<   , U> , U& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private List`1<> ;
    private    ( );
    private List`1<> ();
    public static IEnumerable`1<> ( );
    private IEnumerable`1<> ();
    [IteratorStateMachineAttribute("   /")]
private IEnumerable`1<> ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private XmlLoadOptions ;
    private DocumentModel ;
    private     ;
    private     ;
    private IDictionary`2<int, string> ;
    private IDictionary`2<string,    > ;
    private IDictionary`2<string, Byte[]> ;
    private bool  ;
    private Nullable`1<FontsData>  ;
    public    (XmlLoadOptions );
    public XmlLoadOptions ();
    private void (XmlLoadOptions );
    public DocumentModel ();
    private void (DocumentModel );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public IDictionary`2<int, string> ();
    private void (IDictionary`2<int, string> );
    public IDictionary`2<string,    > ();
    public IDictionary`2<string, Byte[]> ();
    public bool  ();
    internal void (bool );
    public Nullable`1<FontsData>  ();
    internal void (Nullable`1<FontsData> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<   , int> ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<   , int> ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    internal    (Stream ,     , ​   );
    protected virtual bool    ​ ();
    protected virtual void    ​ ();
    protected virtual        ​ ();
    protected virtual void    ​ (string );
    protected virtual   []    ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    internal static  ;
    protected     ;
    protected    (    );
    public static Inline (    ,     );
    private static DrawingElement (    ,     );
    public static Inline (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    internal    (Stream );
    public ​   ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    private DocumentModel ;
    private bool ;
    protected ImportMapping ;
    private Stack`1<ElementCollection> ;
    private Element ;
    protected    (DocumentModel , bool , ImportMapping );
    protected Element ();
    private void (Element );
    private Stack`1<ElementCollection> ();
    protected virtual void    ​ (DocumentModel , DocumentModel );
    protected virtual void    ​ (Section , Section );
    protected virtual void    ​ (HeaderFooter , HeaderFooter );
    protected virtual void    ​ (Paragraph , Paragraph );
    protected virtual void    ​ (Table , Table );
    protected virtual void    ​ (TableRow , TableRow );
    protected virtual void    ​ (TableCell , TableCell );
    protected virtual void    ​ (Field , Field );
    protected virtual void    ​ (Hyperlink , Hyperlink );
    protected virtual void    ​ (PreservedDrawingElement , PreservedDrawingElement );
    protected virtual void    ​ (Shape , Shape );
    protected virtual void    ​ (Group , Group );
    protected virtual void    ​ (TextBox , TextBox );
    protected virtual void    ​ (Picture , Picture );
    protected virtual void    ​ (Run , Run );
    protected virtual void    ​ (BookmarkStart , BookmarkStart );
    protected virtual void    ​ (BookmarkEnd , BookmarkEnd );
    protected virtual void    ​ (SpecialCharacter , SpecialCharacter );
    protected virtual void    ​ (PreservedInline , PreservedInline );
    protected virtual void    ​ (TableOfEntries , TableOfEntries );
    protected virtual void    ​ (Note , Note );
    protected virtual void    ​ (BlockContentControl , BlockContentControl );
    protected virtual void    ​ (InlineContentControl , InlineContentControl );
    protected virtual void    ​ (Chart , Chart );
    protected virtual void    ​ (CommentStart , CommentStart );
    protected virtual void    ​ (CommentEnd , CommentEnd );
    protected virtual void    ​ (Comment , Comment );
    protected virtual void    ​ (MoveRangeSeparator , MoveRangeSeparator );
    protected virtual void    ​ (AlignmentTab , AlignmentTab );
    private void (T , Action`2<T, T> );
    protected void (ElementCollection , ElementCollection );
    private void (Element , Element );
    public sealed virtual void    ​ (DocumentModel );
    public sealed virtual void    ​ (Section );
    public sealed virtual void    ​ (HeaderFooter );
    public sealed virtual void    ​ (Paragraph );
    public sealed virtual void    ​ (Table );
    public sealed virtual void    ​ (TableRow );
    public sealed virtual void    ​ (TableCell );
    public sealed virtual void    ​ (BookmarkStart );
    public sealed virtual void    ​ (BookmarkEnd );
    public sealed virtual void    ​ (Field );
    public sealed virtual void    ​ (Hyperlink );
    public sealed virtual void    ​ (PreservedDrawingElement );
    public sealed virtual void    ​ (Shape );
    public sealed virtual void    ​ (Group );
    public sealed virtual void    ​ (TextBox );
    public sealed virtual void    ​ (Picture );
    public sealed virtual void    ​ (Run );
    public sealed virtual void    ​ (SpecialCharacter );
    public sealed virtual void    ​ (PreservedInline );
    public sealed virtual void    ​ (TableOfEntries );
    public sealed virtual void    ​ (Note );
    public sealed virtual void    ​ (BlockContentControl );
    public sealed virtual void    ​ (InlineContentControl );
    public sealed virtual void    ​ (Chart );
    public sealed virtual void    ​ (CommentStart );
    public sealed virtual void    ​ (CommentEnd );
    public sealed virtual void    ​ (Comment );
    public sealed virtual void    ​ (MoveRangeSeparator );
    public sealed virtual void    ​ (AlignmentTab );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Dictionary`2<  , char> ;
    private static Dictionary`2<  , char> ;
    private static Dictionary`2<  , char> ;
    private static Dictionary`2<  , string> ;
    private static Dictionary`2<char,   > ;
    private static    ();
    public static    (char );
    public static StringBuilder (​   , bool , StringBuilder );
    internal static StringBuilder (   , bool , StringBuilder );
    private static    (   );
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1<  > (   );
    private static bool (   , bool , StringBuilder );
    private static bool (  & , bool , StringBuilder );
    private static bool (  & , StringBuilder );
    internal static bool (  & , StringBuilder );
    internal static bool (  & , StringBuilder );
    private static bool (byte , Int32& );
    private static byte (int );
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1<String[]> (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Stack`1<BlockCollection> ;
    private Stack`1<List`1<TextBox>> ;
    private BlockCollection ;
    private List`1<TextBox> ;
    public BlockCollection ();
    public List`1<TextBox> ();
    public void (List`1<TextBox> );
    public void (BlockCollection );
    public void ();
    public bool ();
    public bool ();
    private static bool (BlockCollection );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private Dictionary`2<char,    > ;
    private     ;
    private     ;
    private Dictionary`2<char, int> ;
    private bool ;
    private     ;
    private     ;
    private      ;
    private      ;
    private      ;
    private      ;
    private      ;
    private     ;
    private int  ;
    private int  ;
    private int  ;
    public    (    , Dictionary`2<char, int> );
    public    (    );
    private     ();
    private     ();
    public virtual bool    ​ ();
    public virtual double    ​ ();
    public virtual void    ​ ();
    private bool (char ,    & );
    [NullableContextAttribute("0")]
private bool (  & , Int32& );
    [NullableContextAttribute("0")]
public virtual        ​ (int ,   <char> , bool , Nullable`1& , Byte& , Int32& , Boolean& );
    private     ();
    public virtual        ​ ();
    public virtual void    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static void (    ,     );
    public static bool (    );
    public static Byte[] (string );
    public static int (object , string );
    public static bool (    ,  );
    public static bool (    );
    public static bool (    );
    public static bool (    );
    public static bool (    );
    public static bool (string );
    public static bool (string );
    public static bool (string );
    public static bool (string );
    public static bool (string );
    public static bool (string );
    public static bool  (string );
    public static bool  (string );
    public static bool  (string );
    public static bool  (string );
    public static bool  (string );
    public static bool  (string );
    public static bool  (string );
    public static bool  (string );
    public static bool  (string );
    public static bool  (string );
    public static bool  (string );
    public static bool  (string );
    public static bool  (string );
    public static bool  (string );
    public static bool  (string );
    public static bool  (string );
    public static bool  (string );
    public static bool  (string );
    public static bool  (string );
    public static bool  (string );
    public static bool  (string );
    public static bool  (string );
    public static void (    , ParagraphFormat , Func`2<int, Color> );
    public static void (    , CharacterFormat , Func`2<int,    > , Func`2<int, Color> ,     );
    public static void (    , TableFormat , Func`2<int, Color> );
    public static void (    , TableCellFormat , Func`2<int, Color> );
    public static void (    , TableCellFormat , Func`2<int, Color> );
    public static void (    ,     );
    public static int (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1<IList`1<   >> (IList`1<<   >> );
    private static int (Boolean[0...,0...] , int , int );
    private static byte (IList`1<IList`1<   >> ,    [] , int , int );
    private static void (    , IList`1<<   >> );
    private static Byte[] (    );
    private static     (    , Byte[0...,0...] , ArrayPool`1<byte> );
    private static void (    , IList`1<IList`1<   >> , ArrayPool`1<byte> );
    private static void (Byte[] , Byte[0...,0...] , int , int , int , bool , Byte[] );
    [NullableContextAttribute("2")]
private static byte (Byte[] , int );
    private static void (Byte[0...,0...]& , int , int );
    private static void (    , Byte[0...,0...] , bool , Byte[] );
    private static Dictionary`2<   , List`1<<   >>> (    , IList`1<   > );
    public static void (    , IList`1<   > );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private ParagraphStyle ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<HorizontalAlignment> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<OutlineLevel> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<LineSpacingRule>  ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   >  ;
    [DebuggerBrowsableAttribute("0")]
private object  ;
    [DebuggerBrowsableAttribute("0")]
private ParagraphFormatRevision  ;
    [DebuggerBrowsableAttribute("0")]
internal bool  ;
    private static    ();
    public ParagraphStyle ();
    public void (ParagraphStyle );
    public object ();
    public void (object );
    protected virtual Style    ​ ();
    protected virtual void    ​ (Style );
    public Nullable`1<HorizontalAlignment> ();
    public void (Nullable`1<HorizontalAlignment> );
    public Nullable`1<OutlineLevel> ();
    public void (Nullable`1<OutlineLevel> );
    public Nullable`1<double> ();
    public void (Nullable`1<double> );
    public Nullable`1<double> ();
    public void (Nullable`1<double> );
    public Nullable`1<double> ();
    public void (Nullable`1<double> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public Nullable`1<double>  ();
    public void (Nullable`1<double> );
    public Nullable`1<double>  ();
    public void (Nullable`1<double> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public Nullable`1<double>  ();
    public void (Nullable`1<double> );
    public Nullable`1<LineSpacingRule>  ();
    public void (Nullable`1<LineSpacingRule> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void  (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void  (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void  (Nullable`1<bool> );
    public      ();
    public void (    );
    public      ();
    public void (    );
    public Nullable`1<   >  ();
    public void (Nullable`1<   > );
    public Nullable`1<bool>  ();
    public void  (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void  (Nullable`1<bool> );
    public ParagraphFormatRevision  ();
    public void (ParagraphFormatRevision );
    public Nullable`1<bool>  ();
    public void  (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void  (Nullable`1<bool> );
    internal bool  ();
    internal Nullable`1<bool>  ();
    internal void  (Nullable`1<bool> );
    internal Nullable`1<bool>  ();
    internal void  (Nullable`1<bool> );
    protected virtual  ​ <   >    ​  ();
    public virtual        ​ ();
    private Nullable`1<bool> (int );
    private void (Nullable`1<bool> , int );
    public virtual bool Equals(    );
    internal bool (    );
    internal bool (    );
    public virtual int GetHashCode();
    public virtual        ​ ();
    public     (bool , ParagraphFormat );
    internal void (    );
}
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public    (double , double );
    public double ();
    public double ();
    internal static     (    , int , double );
    [NullableContextAttribute("1")]
public virtual string ToString();
    public sealed virtual bool Equals(    );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Dictionary`2<string, int> ;
    private Dictionary`2<Color, int> ;
    private List`1<ListStyle> ;
    private List`1<   > ;
    private List`1<Picture> ;
    public Dictionary`2<string, int> ();
    public Dictionary`2<Color, int> ();
    public List`1<ListStyle> ();
    public List`1<   > ();
    public List`1<Picture> ();
    public sealed virtual void    ​ (DocumentModel );
    public sealed virtual void    ​ (Section );
    public sealed virtual void    ​ (HeaderFooter );
    public sealed virtual void    ​ (Paragraph );
    public sealed virtual void    ​ (Table );
    public sealed virtual void    ​ (TableRow );
    public sealed virtual void    ​ (TableCell );
    public sealed virtual void    ​ (BookmarkStart );
    public sealed virtual void    ​ (BookmarkEnd );
    public sealed virtual void    ​ (Field );
    public sealed virtual void    ​ (Hyperlink );
    public sealed virtual void    ​ (TextBox );
    public sealed virtual void    ​ (Picture );
    public sealed virtual void    ​ (Group );
    public sealed virtual void    ​ (PreservedDrawingElement );
    public sealed virtual void    ​ (Shape );
    public sealed virtual void    ​ (Run );
    public sealed virtual void    ​ (SpecialCharacter );
    public sealed virtual void    ​ (PreservedInline );
    public sealed virtual void    ​ (TableOfEntries );
    public sealed virtual void    ​ (Note );
    public sealed virtual void    ​ (BlockContentControl );
    public sealed virtual void    ​ (InlineContentControl );
    public sealed virtual void    ​ (Chart );
    public sealed virtual void    ​ (CommentStart );
    public sealed virtual void    ​ (CommentEnd );
    public sealed virtual void    ​ (Comment );
    public sealed virtual void    ​ (MoveRangeSeparator );
    public sealed virtual void    ​ (AlignmentTab );
    private void (MultipleBorders );
    private void (PageSetup );
    private void (ParagraphFormat );
    private void (CharacterFormat );
    private void (ListFormat );
    private void (Style );
    private void (ParagraphStyle );
    private void (CharacterStyle );
    private void (ListStyle );
    private void (string );
    private void (Color );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private    [] ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (    );
    public    (    ,     ,     );
    [NullableContextAttribute("2")]
private    (   [] ,     );
    [IsReadOnlyAttribute]
public     ();
    public     ();
    public     ();
    public bool ();
    public bool ();
    public virtual string ToString();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    internal     (   & );
    internal bool (    );
    internal void (    ,     );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static void (  <T> , Action`1<T> );
    public static T ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private static     ;
    [DebuggerBrowsableAttribute("0")]
private static     ;
    [DebuggerBrowsableAttribute("0")]
private static     ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    private  ;
    private  ;
    private Nullable`1<   >  ;
    private    ( ,  , string ,     , Nullable`1<   > );
    private static    ();
    public static     ();
    internal static     ();
    public  ();
    public void ( );
    public  ();
    public void ( );
    public string ();
    public void (string );
    public     ();
    public void (    );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
}
internal static class     : object {
    [NullableAttribute("1")]
private static Dictionary`2<int, > ;
    private static    ();
    public static bool (int );
    public static double (int , bool );
    public static double (int , bool );
    public static void (int , bool , Double& , Double& );
    public static int (double , double , Double& );
    private static void ( , bool , double , Double& , Double& );
    private static double ( , bool , double );
    private static double ( , bool , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private protected  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    internal ​   Source { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal       { get; }
    [NullableAttribute("2")]
public       { get; internal set; }
    private protected    ( );
    private static    ();
    internal sealed virtual ​   get_Source();
    internal sealed virtual     ​ ();
    [NullableContextAttribute("2")]
internal     ();
    internal static     ( );
    public abstract virtual     ​ ();
    private protected abstract virtual void    ​ (    );
    private protected void ( );
    internal static  ( );
    public     ();
    public void (    );
    public void (double , double , double , double );
    public void (double , double );
    private protected void (    );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
internal void (    );
    private ​   ();
    private void (​   );
    internal string ();
    internal void (string );
    internal void (string );
    [NullableContextAttribute("2")]
internal bool ( ,     , Boolean& ,    & ,    & ,    & );
    private protected bool  ();
    private protected void (bool );
    private protected bool  ();
    private protected void (bool );
    private protected bool  ();
    private protected void (bool );
    public bool  ();
    public void (bool );
    private protected virtual string    ​ ();
    private protected virtual void    ​ (string );
    internal   ();
    internal void ( );
    public      ();
    private protected abstract virtual        ​  ();
    public      ();
    internal abstract virtual        ​ (    );
    internal virtual void    ​ (    );
    internal void  ();
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual        ​ ();
}
internal class     :     {
    [NullableContextAttribute("1")]
internal    (    ,     );
    private protected virtual void    ​ (   & );
    private protected virtual void    ​ (   & );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [NullableAttribute("2")]
public    { get; public set; }
    [NullableAttribute("2")]
public string   { get; public set; }
    private static    ();
    private    ( );
    internal static     (    );
    private protected virtual void    ​ (    );
    public virtual     ​ ();
    public     ();
    private protected virtual        ​  ();
    [NullableContextAttribute("2")]
public sealed virtual     ​ ();
    [NullableContextAttribute("2")]
public sealed virtual void    ​ ( );
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    public  (    ,  , Nullable`1[] );
    public sealed virtual        ​ ();
    public  ();
    public void ( );
    public    <   > ();
    internal     ();
    internal virtual        ​ (    );
    internal virtual void    ​ (    );
    private void (    );
    private sealed virtual override     ​ ();
    private sealed virtual override void    ​ ( );
    private sealed virtual override ​      ​ ();
    private sealed virtual override void    ​ (​   );
    private sealed virtual override ​      ​  ();
    private sealed virtual override void    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  ​  {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    private static    ();
    private    ( );
    internal static     (    );
    private protected virtual void    ​ (    );
    public virtual     ​ ();
    public     ();
    private protected virtual        ​  ();
    internal  ();
    internal void ( );
    public PdfMarkupAnnotationIntent ();
    private protected virtual bool  ​ ​ (PdfMarkupAnnotationIntent );
    internal static     (Double& , Double& , double , double ,  );
    internal static string ( );
    internal virtual        ​ (    );
    internal virtual void    ​ (    );
    private void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :   <string,    > {
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
private Func`2<   , string> ;
    internal    (    );
    public     (string ,     );
    public     (string , string ,     );
    public     (string , string );
    public     (string , string , string );
    public     (string , string , string , bool );
    public IEnumerable`1<   > (string );
    public     (string );
    public string (int );
    protected virtual string GetKeyForItem(    );
    internal void (    );
    internal void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int> ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
internal ​   Source { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal      { get; private set; }
    internal    (    );
    internal virtual ​   get_Source();
    private protected virtual int    ​ ();
    private protected virtual int    ​ ();
    internal int ();
    internal void (int );
    [NullableContextAttribute("2")]
internal     ();
    [NullableContextAttribute("2")]
private void (    );
    public     ( );
    public     (string );
    public     (    ,  , Nullable`1[] );
    public     (string );
    public     (string );
    public     (string );
    public     ();
    public     (string );
    public     (string );
    private protected virtual        ​ (​   );
    private protected virtual ​      ​ (    );
    private protected virtual        ​ (int );
    private protected virtual void    ​ (int ,     );
    private protected virtual void    ​ (int ,     );
    private protected virtual void    ​ (int );
    private protected virtual int    ​  (    );
    private protected virtual IEnumerator`1<   >    ​  ();
    private void (    );
    private void (    ,     );
    private void ();
    private void (    );
    public  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static IEnumerable`1<string> ;
    private static    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  ​  {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [NullableAttribute("2")]
public      { get; internal set; }
    private static    ();
    private    ( );
    internal static     (    );
    private protected virtual void    ​ (    );
    public virtual     ​ ();
    public     ();
    private protected virtual        ​  ();
    public string ();
    public void (string );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
internal void (    );
    public     (string );
    public string ();
    public void (string );
    internal  ();
    internal void ( );
    internal virtual        ​ (    );
    internal virtual void    ​ (    );
    private void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (    ,     );
    private static void (    ,     );
    private static void (    ,     );
    private static void (    ,     );
    private static void (    ,     );
    private static void (    ,     );
    private static void (    ,     );
    public static void  (    ,     );
    public static void  (    ,     );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private bool ;
    private     ;
    private     ;
    private Nullable`1<int> ;
    [NullableContextAttribute("2")]
public    (    ,     , Nullable`1<int> );
    public     ();
    public void (    );
    public     ();
    public void (    );
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    public virtual Style    ​ (DocumentModel );
    public virtual void    ​ ();
    protected virtual void    ​ (DocumentModel ,     );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public    ( ,  , int );
    public  ();
    public  ();
    public int ();
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static long (string );
    [ExtensionAttribute]
public static void (string , Int64& , Int64& , char );
    [ExtensionAttribute]
public static bool (string );
    [ExtensionAttribute]
public static     (string );
    [ExtensionAttribute]
public static     (string );
    [ExtensionAttribute]
public static     (string );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private static Regex ;
    private Dictionary`2<int, PreservedInline> ;
    private int ;
    private static    ();
    public static     (DocumentModel );
    public string (PreservedInline );
    public int ();
    private void (PreservedInline );
    private static string (PreservedInline );
    private static bool (Match , Int32& );
    private int (int , PreservedInline );
    private int (PreservedInline );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private    ( ​  );
    public static DrawingElement (    ,  ​  );
    public static    [] (Stream ,  ​  );
    public static    [] (    ,  ​  );
    private static void (    ,     );
    private static void (List`1<Action> ,     , Action`1<   > );
    private DrawingElement (    );
    private void (    );
    private Shape (    ,     , bool );
    private static Layout (    ,     ,    , Size , bool , DrawingMetadata& , Boolean& );
    private static Layout (string ,     ,    , Size , bool , String& );
    private static     (    );
    private Brush (    ,     );
    private void (    ,     );
    private static void (    ,     );
    private static void (    ,     );
    private static void (    ,     );
    private TextBox (    ,     );
    private TextBox  (    ,     );
    private Picture  (    ,     );
    private static FloatingLayout (    , Layout );
    private static string (string ,     );
    private static string (string ,     );
    private Group  (    ,     );
    private static Layout (    ,     ,   & );
    private DrawingElement (    );
    internal static     ();
    private static     (string );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (    , IDictionary`2<string, T> , T );
    private static void (    ,     );
    private static void (    ,     );
    public static void (    ,     );
    public static void (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    internal    (​   );
    public    ( );
    public    (string );
    internal ​   ();
    public  ();
    public virtual string ToString();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static TableCell (    ,     );
    private static TableColumn (    ,     );
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1<TableColumn> (    ,     );
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1<TableRow> (    ,     );
    private static TableRow (    ,     );
    public static Table (    ,     );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (    ,     , DrawingElement );
    public static bool (    ,     , string , Group );
    public static bool (    ,     , string , Shape );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :  ​  {
    public static string (int , bool );
    public static string (object );
    public static string (IEnumerable );
    public static string (object );
    public static string (object , object );
    public static string (object );
    public static string (object );
    public static string (object );
    public static string (object );
    public static string (object );
    public static string  (object );
    public static string (object , object );
    public static string (object , object );
    public static string  (object );
    public static string (object , object , object );
    public static string (object , object );
    public static string  (object );
    public static string  (object );
    public static string (object , object );
    public static string (object , object );
    public static string  (object );
    public static string (object , object );
    public static string  (object );
    public static string  (object );
    public static string  (object , object );
    public static string  (object );
    public static string  (object , object );
    public static string  (object , object );
    public static string (object , object , object );
    public static string  (object , object );
    public static string  (object );
    public static string  (object );
    public static string (object , object , object );
    public static string  (object , object );
    public static string  (object );
    public static string  (object );
    public static string  (object );
    public static string  (object );
    public static string (object , object , object );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :  ​  {
    public    (    , string );
    protected virtual void  ​ ​ ();
    public Comment (    );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual Uri    ​ ();
    public abstract virtual MemoryStream    ​ (string , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
internal ​   ;
    internal ​   Source { get; }
    private static    ();
    internal virtual bool    ​ ();
    internal virtual        ​ ();
    internal virtual void    ​ (    );
    public virtual     ​ ();
    internal virtual bool    ​ ();
    public virtual int    ​ ();
    internal virtual        ​  ();
    internal virtual ​      ​  ();
    internal virtual ​   get_Source();
    internal virtual bool    ​ (    , Double& , Double& , Double& );
    private static void (double , Double& , Double& , Double& );
    internal virtual string    ​ (int );
    internal virtual void    ​ (    , bool , bool ,     );
    internal virtual void    ​ (    , bool , bool ,     );
}
[DefaultMemberAttribute("")]
[DebuggerTypeProxyAttribute("   /")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private ElementCollection ;
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    [DebuggerBrowsableAttribute("0")]
public      { get; }
    private    (ElementCollection );
    public bool ();
    public int ();
    public IEnumerable`1<ElementType> ();
    public     (int );
    public     (int ,     );
    public     (int , IEnumerable`1<   > );
    [IteratorStateMachineAttribute("   /")]
public sealed virtual IEnumerator`1<   > GetEnumerator();
    private sealed virtual override IEnumerator    ​ ();
    private static     (    , DocumentModel );
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    public static     op_Implicit(ElementCollection );
    public static ElementCollection op_Implicit(    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private ZipArchive ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    public    (Stream , FileAccess );
    public virtual  ​     ​ (string );
    public virtual bool    ​ (string , Stream& );
    protected virtual void    ​ (string , string , Action`1<Stream> );
    protected virtual void    ​ ();
    private void ();
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual        ​ ();
    public abstract virtual        ​ ();
    public abstract virtual        ​ ( );
    public abstract virtual        ​ (    ,     );
    public abstract virtual        ​ ();
    public abstract virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private   <> ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private   <> ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (    ,   <> ,   <> );
    [NullableContextAttribute("0")]
public bool (Func`2<, Nullable`1<T>> , T& );
    [NullableContextAttribute("0")]
public bool (Func`2<, T> , T& );
    public bool (Func`2<, T> , T& );
    public bool (Func`2<, Nullable`1<bool>> );
    [NullableContextAttribute("2")]
public bool (Func`2<, Nullable`1<T>> , Func`2<T, string> , string , string , string );
    [NullableContextAttribute("2")]
public bool (Func`2<, T> , Func`2<T, string> , string , string , string );
    public bool (Func`2<, T> , Func`2<T, string> , string , string , string );
    public bool  (Func`2<, Nullable`1<bool>> , Func`2<bool, string> , string , string , string );
    public bool  (Func`2<, Nullable`1<bool>> , string , string , string , string );
    private bool  (string , string , string , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private List`1<HeaderFooter> ;
    private string ;
    private PageSetup ;
    public List`1<HeaderFooter> ();
    public string ();
    public void (string );
    public PageSetup ();
    public void (PageSetup );
    public void (Section );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Dictionary`2<string, int> ;
    private Dictionary`2<string, Dictionary`2<int, int>> ;
    private Dictionary`2<string, ListStyle> ;
    private Dictionary`2<string,  ​ > ;
    [NullableAttribute("2")]
private string ;
    private DocumentModel ;
    private     ;
    [NullableAttribute("2")]
private      ;
    [NullableAttribute("2")]
private ListStyle  ;
    [NullableAttribute("2")]
private      ;
    [NullableAttribute("2")]
private      ;
    [NullableAttribute("2")]
private      ;
    [NullableAttribute("2")]
private      ;
    [NullableAttribute("2")]
private      ;
    [NullableAttribute("2")]
private      ;
    [NullableAttribute("2")]
private      ;
    [NullableAttribute("2")]
private      ;
    private Dictionary`2<string,    >  ;
    private Dictionary`2<string,    >  ;
    private Dictionary`2<string,    >  ;
    private Dictionary`2<string,    >  ;
    private Dictionary`2<string,    >  ;
    private Dictionary`2<string,    >  ;
    private Dictionary`2<string,    >  ;
    private Dictionary`2<string,    >  ;
    private Dictionary`2<string,    >  ;
    private Dictionary`2<Shape,    >  ;
    private Dictionary`2<string, Comment>  ;
    private      ;
    private Dictionary`2<string,    >  ;
    private ListLevelFormat  ;
    private ListStyle  ;
    private Dictionary`2<string, ListStyle>  ;
    [NullableAttribute("2")]
private      ;
    private Dictionary`2<string,    >  ;
    private Dictionary`2<string,    >  ;
    private Dictionary`2<string,    >  ;
    private Dictionary`2<string, PageSetup>  ;
    private Dictionary`2<string,  ​ >  ;
    private Dictionary`2<string, string>  ;
    [NullableAttribute("2")]
public       { get; public set; }
    [NullableAttribute("2")]
public ListStyle   { get; public set; }
    [NullableAttribute("2")]
public       { get; public set; }
    [NullableAttribute("2")]
public       { get; public set; }
    [NullableAttribute("2")]
public       { get; public set; }
    [NullableAttribute("2")]
public       { get; public set; }
    [NullableAttribute("2")]
public       { get; public set; }
    [NullableAttribute("2")]
public       { get; public set; }
    [NullableAttribute("2")]
public       { get; public set; }
    [NullableAttribute("2")]
public       { get; public set; }
    [NullableAttribute("2")]
public string   { get; public set; }
    [NullableAttribute("2")]
public       { get; public set; }
    public    (DocumentModel ,     );
    public DocumentModel ();
    public     ();
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    [NullableContextAttribute("2")]
public ListStyle ();
    [NullableContextAttribute("2")]
public void (ListStyle );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public void (    );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public void (    );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public void (    );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public void (    );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public void (    );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public void (    );
    public Dictionary`2<string,    >  ();
    public Dictionary`2<string,    >  ();
    public Dictionary`2<string,    >  ();
    public Dictionary`2<string,    >  ();
    public Dictionary`2<string,    >  ();
    public Dictionary`2<string,    >  ();
    public Dictionary`2<string,    >  ();
    public Dictionary`2<string,    >  ();
    public Dictionary`2<string,    >  ();
    public Dictionary`2<Shape,    >  ();
    public Dictionary`2<string, Comment>  ();
    public      ();
    public void (    );
    public Dictionary`2<string,    >  ();
    [NullableContextAttribute("2")]
public string  ();
    [NullableContextAttribute("2")]
public void (string );
    public ListLevelFormat  ();
    public void (ListLevelFormat );
    public ListStyle ();
    public void (ListStyle );
    public Dictionary`2<string, ListStyle>  ();
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public void (    );
    public Dictionary`2<string,    >  ();
    public Dictionary`2<string,    >  ();
    public Dictionary`2<string,    >  ();
    public Dictionary`2<string, PageSetup>  ();
    public Dictionary`2<string,  ​ >  ();
    public Dictionary`2<string, string>  ();
    private static int (int );
    public void (string , string );
    [NullableContextAttribute("2")]
public int (string );
    [NullableContextAttribute("2")]
public int (int , string );
    [NullableContextAttribute("2")]
public int (string );
    public ListFormat (string );
    public ListFormat (int , string );
    [NullableContextAttribute("2")]
public int (string );
    [NullableContextAttribute("2")]
public int (string );
    [NullableContextAttribute("2")]
public int (int , string );
    public void (string );
    public bool (string ,  ​ & );
}
internal class     :     {
    [NullableContextAttribute("2")]
internal    (   , EventHandler`1<​  > );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private CharacterFormat ;
    private ParagraphFormat ;
    private CharacterFormat ;
    private PageSetup ;
    public CharacterFormat ();
    public void (CharacterFormat );
    public ParagraphFormat ();
    public void (ParagraphFormat );
    public CharacterFormat ();
    public void (CharacterFormat );
    public PageSetup ();
    public void (PageSetup );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    );
    private static    ();
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    public double ();
    public void (double );
    public Nullable`1<bool> ();
    public void (Nullable`1<bool> );
    private protected virtual void    ​ ​();
    private static     (    , IList`1<   > ,     , double );
    private static     (    , IList`1<   > ,     , double , double , double );
    private static     (    , IList`1<   > ,     , double , double , double , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static ContentPosition (ContentRange );
    private static ContentRange (ContentRange );
    private static Element (Element , bool , Predicate`1<Element> );
    public static ContentRange (ContentRange , IEnumerable`1<Element> ,     );
    private static void (List`1<Element> , Element , bool );
    private static T (IList`1<T> , bool );
    public static ContentRange (ContentRange , string , CharacterFormat , CharacterFormat , ParagraphFormat , CharacterFormat );
    public static IEnumerable`1<Element> (ContentRange , DocumentModel ,    & );
    private static bool (IList`1<Element> , Predicate`1<Element> );
    private static void (List`1<Element> , Predicate`1<Element> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    internal ​   Source { get; }
    internal    (​   );
    private static    ();
    public virtual     ​ ();
    public virtual int    ​ ();
    internal virtual int    ​  ();
    internal virtual        ​  ();
    internal virtual ​      ​  ();
    internal virtual ​   get_Source();
    private ​   ();
    internal     ();
    internal     ();
    internal virtual bool    ​ (    , Double& , Double& , Double& );
    internal virtual string    ​ (int );
    private protected virtual void    ​ (    ,     );
    private protected virtual void    ​ (    ,     );
}
[ExtensionAttribute]
internal static class     : object {
    [ExtensionAttribute]
[NullableContextAttribute("1")]
public static     (Dictionary`2<Stream,    > , Picture );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal ​   Source { get; }
    internal    (​   );
    private static    ();
    public virtual     ​ ();
    public virtual int    ​ ();
    internal virtual        ​  ();
    internal virtual ​      ​  ();
    internal virtual ​   get_Source();
    private  ();
    internal     ();
    internal virtual bool    ​ (    , Double& , Double& , Double& );
    internal virtual string    ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Block ;
    private Nullable`1<int> ;
    public    (Block );
    public Block ();
    public void (Block );
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public sealed virtual ​      ​ ();
    public sealed virtual void    ​ (    ,     );
    public sealed virtual ​      ​ (    );
    public sealed virtual void    ​ (    , ​   );
    public sealed virtual bool    ​ (​   , ​   );
    public sealed virtual int    ​ (​   );
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public    (double , double , double , double );
    [IsReadOnlyAttribute]
public double ();
    [IsReadOnlyAttribute]
public double ();
    [IsReadOnlyAttribute]
public double ();
    [IsReadOnlyAttribute]
public double ();
    public sealed virtual bool Equals(    );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    internal     ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (    ,     , ​   );
    protected internal virtual Byte[]    ​ (​   , Byte[] , int , int , Int32& , Int32& );
    protected internal virtual Byte[]    ​ (​   , Byte[] , int , int , Int32& , Int32& );
    protected internal virtual Byte[]    ​ (​   ,     , Byte[] , int , int , Int32& , Int32& );
    protected internal virtual Byte[]    ​ (​   ,     , Byte[] , int , int , Int32& , Int32& );
    protected internal virtual Byte[]    ​ (​   ,     , Byte[] , int , int , Int32& , Int32& );
    protected internal virtual Byte[]    ​ (​   ,     , Byte[] , int , int , Int32& , Int32& );
    public void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    private string ;
    private bool ;
    public    (string , string );
    public    (string , string , bool );
    public string ();
    public string ();
    public bool ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
public static     ;
    private static    ();
    private protected virtual bool    ​ ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static bool (string );
    private static bool (string );
    private static bool (string );
    public static void (string ,     ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <UInt32> ;
    private static <UInt32> ;
    private UInt32 ;
    private static    ();
    public UInt32 ();
    public void (UInt32 );
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
    public static     ();
    public virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private string ;
    public    (string );
    protected virtual bool    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private IList`1<   > ;
    public IList`1<   > ();
    public void (IList`1<   > );
    private void (​ );
    public static     (​ );
    public virtual ​    ​ (​ );
    public virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private IndentedTextWriter ;
    private bool ;
    public    (TextWriter ,  );
    public    (IndentedTextWriter ,  );
    public void (    );
    private void (IEnumerable`1<   > );
    private void (    );
    private void (    );
    private void (    );
    public void (    );
    public void (IEnumerable`1<   > );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Regex ;
    private static    ();
    public static string (string );
    public static bool (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private string ;
    private  ;
    private    (    ,     , string ,  );
    private bool ( ​ & );
    public sealed virtual bool    ​ ( ​  ,    & );
    public virtual string ToString();
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1< ​ > ( ​  );
    public static     (    ,     );
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1< ​ > ( ​  );
    public static     (    ,     );
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1< ​ > ( ​  );
    public static     (    ,     );
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1< ​ > ( ​  );
    public static     (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <UInt32> ;
    private ushort ;
    private static    ();
    public ushort ();
    public void (ushort );
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
    public static     ();
    public virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public    ( , double );
    [IsReadOnlyAttribute]
public  ();
    [IsReadOnlyAttribute]
public double ();
    public void (    );
    private static double (double );
    public virtual string ToString();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private string ;
    private string ;
    private string ;
    private string ;
    private string ;
    public    (    , string , string , string , string , string );
    public     ();
    public string ();
    public string ();
    public string ();
    public string ();
    public string ();
}
internal static class     : object {
    [NullableContextAttribute("1")]
public static Encoding (string , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private Aes ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    public    (    , Byte[] , MD5 );
    protected internal virtual Byte[]    ​ (​   , Byte[] , int , int , Int32& , Int32& );
    protected internal virtual Byte[]    ​ (​   ,     , Byte[] , int , int , Int32& , Int32& );
    private Byte[] (Byte[] , int , int , Int32& , Int32& );
    protected internal virtual Byte[]    ​ (​   , Byte[] , int , int , Int32& , Int32& );
    protected internal virtual Byte[]    ​ (​   ,     , Byte[] , int , int , Int32& , Int32& );
    private Byte[] (Byte[] , int , int , Int32& , Int32& );
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static double ;
    private static Double[] ;
    private static Double[] ;
    private static String[] ;
    private static    ();
    private static double ();
    public static double ();
    public static void (double );
    private static void ();
    public static long (double , int );
    public static double (long , int );
    public static double (double , int );
    public static double (double , int );
    public static string (double , int , string , IFormatProvider );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ​  ;
    public    (Byte[] );
    internal Byte[] ();
    internal ​  ();
    internal string ();
    public Byte[] ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     : Collection`1< ​ > {
    [DebuggerBrowsableAttribute("0")]
private  ​  ;
    internal    ( ​  );
    internal    ( ​  ,  ​ [] );
    internal    ( ​  , IList`1< ​ > );
    protected virtual void SetItem(int ,  ​  );
    protected virtual void InsertItem(int ,  ​  );
    protected virtual void RemoveItem(int );
    protected virtual void ClearItems();
    [IteratorStateMachineAttribute("   /")]
public IEnumerable`1< ​ > ([] );
    public  ​  ([] );
    [IteratorStateMachineAttribute("   /")]
public IEnumerable`1< ​ > ();
    [IteratorStateMachineAttribute("   /")]
public IEnumerable`1< ​ > (string );
    [IteratorStateMachineAttribute("   /")]
public IEnumerable`1< ​ > (String[] );
    public  ​  (string );
    public void (HashSet`1< ​ > );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    internal static     ;
    private static IStackWalk ;
    private  ;
    private static IStackWalk ;
    private  ;
    private static IStackWalk ;
    private  ;
    private static IStackWalk  ;
    private   ;
    private static IStackWalk  ;
    private   ;
    private static IStackWalk  ;
    private   ;
    private static EventHandler  ;
    private static    ();
    internal bool ();
    public static bool  ();
    public static bool  ();
    internal bool ();
    public static bool  ();
    public static bool  ();
    internal bool ();
    public static bool  ();
    public static bool  ();
    internal bool ();
    public static bool  ();
    public static bool  ();
    internal bool ();
    public static bool  ();
    public static bool  ();
    internal bool ();
    public static bool  ();
    public static bool  ();
    public static void (EventHandler );
    public static void (EventHandler );
    public static void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private IList`1<byte> ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public    (IList`1<byte> );
    public    (IList`1<byte> , int , int );
    protected virtual void    ​ ();
    public virtual bool    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Int32[] ;
    private static Int32[0...,0...] ;
    private static    ();
    public static string ();
    private static Byte[] (string );
    public static string (Byte[] , string , int );
    public static string (string , string , int );
    private static Byte[] (Byte[] , Byte[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    private string ;
    private string ;
    private string ;
    private string ;
    private string ;
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
    public string ();
    public void (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    internal    (    );
    protected sealed virtual void    ​ (Stream );
    protected abstract virtual void    ​ (    );
    [ConditionalAttribute("DEBUG")]
protected static void (object );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private static Char[] ;
    [DebuggerBrowsableAttribute("0")]
private static XmlReaderSettings ;
    [DebuggerBrowsableAttribute("0")]
private XmlReader ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public    (Stream );
    public    (string , bool );
    public    (XmlReader );
    private static    ();
    public string ();
    public XmlNodeType ();
    public int ();
    public bool ();
    public int ();
    public void  ();
    public void  ();
    public bool  ();
    public string ();
    public string (string );
    public string ();
    public      ();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<   ,    > ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    internal    (    , bool );
    public     ();
    public bool ();
    public abstract virtual void    ​ ();
    internal     (    );
    protected     (    );
    protected void ();
    protected virtual void    ​ (bool );
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private bool ;
    private string ;
    public    (    , bool );
    public    (string , bool );
    public string ();
    public void (string );
    private void (string );
    public void (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private int ;
    private  ;
    private bool ;
    public    ( , bool );
    public virtual     ​ ();
    private static byte (int );
    public virtual void    ​ (    , Stream );
    public virtual int    ​ (    , Stream );
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private List`1<   > ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private CollectionChangeEventHandler ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public Byte[]  { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public Byte[]   { get; public set; }
    public int Count { get; }
    public     Item { get; public set; }
    internal    (IList`1<   > );
    internal    (IList`1<   > , IEnumerable`1<   > );
    public    (string );
    public    (string , IEnumerable`1<   > );
    [NullableContextAttribute("2")]
internal void (CollectionChangeEventHandler );
    [NullableContextAttribute("2")]
internal void (CollectionChangeEventHandler );
    private sealed virtual override bool    ​ ();
    internal virtual bool    ​ ();
    internal virtual bool    ​ ();
    internal virtual bool    ​ ();
    [NullableContextAttribute("2")]
public Byte[] ();
    [NullableContextAttribute("2")]
public void (Byte[] );
    [NullableContextAttribute("2")]
public Byte[] ();
    [NullableContextAttribute("2")]
public void (Byte[] );
    public virtual bool    ​ ();
    public sealed virtual int get_Count();
    public string ();
    public void (string );
    public sealed virtual     get_Item(int );
    public sealed virtual void set_Item(int ,     );
    private sealed virtual override IEnumerator    ​ ();
    private sealed virtual override IEnumerator`1<   >    ​ ();
    private void (object , CollectionChangeEventArgs );
    private void (CollectionChangeAction ,     );
    internal void (int ,     );
    internal void (    );
    public virtual        ​  ();
    public virtual        ​ (Func`2<   , bool> );
    public sealed virtual int IndexOf(    );
    public sealed virtual bool Contains(    );
    public sealed virtual void Add(    );
    public sealed virtual void Insert(int ,     );
    public sealed virtual bool Remove(    );
    public sealed virtual void RemoveAt(int );
    public sealed virtual void Clear();
    public sealed virtual void CopyTo(   [] , int );
    internal virtual        ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private IList`1<Tuple`2<string, string>> ;
    private IList`1<string> ;
    public IList`1<Tuple`2<string, string>> ();
    public void (IList`1<Tuple`2<string, string>> );
    public IList`1<string> ();
    public void (IList`1<string> );
    public     ();
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
public int ;
    [DebuggerBrowsableAttribute("0")]
public int ;
    [DebuggerBrowsableAttribute("0")]
public int ;
    [DebuggerBrowsableAttribute("0")]
public int ;
    [DebuggerBrowsableAttribute("0")]
public int ;
    [DebuggerBrowsableAttribute("0")]
public int ;
    [DebuggerBrowsableAttribute("0")]
public double ;
    [DebuggerBrowsableAttribute("0")]
public double  ;
    [DebuggerBrowsableAttribute("0")]
public double  ;
    [DebuggerBrowsableAttribute("0")]
public double  ;
    [DebuggerBrowsableAttribute("0")]
public double  ;
    [DebuggerBrowsableAttribute("0")]
public double  ;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    internal ​   Source { get; }
    [NullableAttribute("2")]
public string   { get; public set; }
    [NullableAttribute("2")]
public Byte[]   { get; public set; }
    private static    ();
    private    ( );
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    internal static     ();
    internal static     (string , Uri& );
    internal static     (FileInfo );
    internal virtual void    ​ ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    public int ();
    public Nullable`1<DateTimeOffset> ();
    public void (Nullable`1<DateTimeOffset> );
    public Nullable`1<DateTimeOffset> ();
    public void (Nullable`1<DateTimeOffset> );
    [NullableContextAttribute("2")]
public Byte[] ();
    [NullableContextAttribute("2")]
public void (Byte[] );
    public Stream  ();
    public Stream (bool );
    private   ();
    private void ( );
    private   ();
    private void (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private  ;
    private string ;
    public    ( , string );
    public  ();
    private void ( );
    public string ();
    public void (string );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    private static    ();
    public    (    ,     );
    private    ( );
    internal virtual void    ​ ();
    private protected virtual bool    ​ ();
    public     ();
    public void (    );
    internal     ();
    internal void (    );
}
internal class     :     {
    private     ;
    private     ;
    public    (    ,     );
    public virtual     ​ ();
    protected virtual int    ​ ();
    [NullableContextAttribute("1")]
public virtual void    ​ (Byte[] , int , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    internal    (    , Stream );
    public virtual void    ​ ();
    private void (    );
    private void (    );
    private void (    );
    private static void (    ,     );
    private static void (    ,     );
    private static void (    ,     );
    private static void (    , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    {
    [DebuggerBrowsableAttribute("0")]
private static UInt32[] ;
    [DebuggerBrowsableAttribute("0")]
private UInt32 ;
    public    (Stream , bool );
    private static    ();
    private static UInt32[] ();
    public void                  ();
    public UInt32 ​  ​          ​      ();
    public virtual int Read(Byte[] , int , int );
    public virtual int ReadByte();
    public virtual void Write(Byte[] , int , int );
    public virtual void WriteByte(byte );
    public void         ​     ​   (Stream );
    public bool               (Stream );
    internal static UInt32 (UInt32 , Byte[] , int , int );
    private static UInt32 (UInt32 , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <ushort> ;
    private string ;
    private string ;
    private static    ();
    public string ();
    public void (string );
    public string ();
    public void (string );
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
    public static     (string );
    public static     ();
    public virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    protected abstract virtual bool    ​ (DocumentModel );
    protected abstract virtual bool    ​ (Section );
    protected abstract virtual bool    ​ (HeaderFooter );
    protected abstract virtual bool    ​ (Paragraph );
    protected abstract virtual bool    ​ (Table );
    protected abstract virtual bool    ​ (TableRow );
    protected abstract virtual bool    ​ (TableCell );
    protected abstract virtual bool    ​ (Field );
    protected abstract virtual bool    ​ (Hyperlink );
    protected abstract virtual bool    ​ (PreservedDrawingElement );
    protected abstract virtual bool    ​ (Shape );
    protected abstract virtual bool    ​ (Group );
    protected abstract virtual bool    ​ (TextBox );
    protected abstract virtual bool    ​ (Picture );
    protected abstract virtual bool    ​ (Run );
    protected abstract virtual bool    ​ (BookmarkStart );
    protected abstract virtual bool    ​ (BookmarkEnd );
    protected abstract virtual bool    ​ (SpecialCharacter );
    protected abstract virtual bool    ​ (PreservedInline );
    protected abstract virtual bool    ​ (TableOfEntries );
    protected abstract virtual bool    ​ (Note );
    protected abstract virtual bool    ​ (BlockContentControl );
    protected abstract virtual bool    ​ (InlineContentControl );
    protected abstract virtual bool    ​ (Chart );
    protected abstract virtual bool    ​ (CommentStart );
    protected abstract virtual bool    ​ (CommentEnd );
    protected abstract virtual bool    ​ (Comment );
    protected abstract virtual bool    ​ (MoveRangeSeparator );
    protected abstract virtual bool    ​ (AlignmentTab );
    private void (Element , bool );
    public sealed virtual void    ​ (DocumentModel );
    public sealed virtual void    ​ (Section );
    public sealed virtual void    ​ (HeaderFooter );
    public sealed virtual void    ​ (Paragraph );
    public sealed virtual void    ​ (Table );
    public sealed virtual void    ​ (TableRow );
    public sealed virtual void    ​ (TableCell );
    public sealed virtual void    ​ (Field );
    public sealed virtual void    ​ (Hyperlink );
    public sealed virtual void    ​ (PreservedDrawingElement );
    public sealed virtual void    ​ (Group );
    public sealed virtual void    ​ (Shape );
    public sealed virtual void    ​ (TextBox );
    public sealed virtual void    ​ (Picture );
    public sealed virtual void    ​ (Run );
    public sealed virtual void    ​ (BookmarkStart );
    public sealed virtual void    ​ (BookmarkEnd );
    public sealed virtual void    ​ (SpecialCharacter );
    public sealed virtual void    ​ (PreservedInline );
    public sealed virtual void    ​ (TableOfEntries );
    public sealed virtual void    ​ (Note );
    public sealed virtual void    ​ (BlockContentControl );
    public sealed virtual void    ​ (InlineContentControl );
    public sealed virtual void    ​ (Chart );
    public sealed virtual void    ​ (CommentStart );
    public sealed virtual void    ​ (CommentEnd );
    public sealed virtual void    ​ (Comment );
    public sealed virtual void    ​ (MoveRangeSeparator );
    public sealed virtual void    ​ (AlignmentTab );
}
internal static class     : object {
    [NullableContextAttribute("1")]
public static void (    , IList`1<   > );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static PixelFormat[] ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (    , object );
    private static    ();
    public ImageSource (   );
    protected virtual       ​ (   );
    protected virtual     ​ (string , Stream );
    private static BitmapSource (DrawingVisual , Size , double ,     );
    private static void (DrawingVisual , Size , double , BitmapScalingMode );
    private static void (Size , Nullable`1<int> , Nullable`1<int> , double , double , Int32& , Int32& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static     (    ,     , Nullable`1& );
    public static     (    ,     , string );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    public    (DocumentModel , HtmlSaveOptions ,     , string );
    public virtual void    ​ ();
    public virtual string    ​ (    );
    public virtual void    ​ ();
    public virtual void    ​ ();
    public virtual void    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    );
    public virtual        ​ ();
    public virtual int    ​ ();
    protected virtual double    ​ (int );
    internal virtual        ​ (    );
    internal virtual        ​ (    );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual        ​ ();
    public abstract virtual        ​ ();
    public abstract virtual        ​ ();
    public abstract virtual object    ​ ();
    public abstract virtual void    ​ (object );
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public    ( , int );
    private static    ();
    [IsReadOnlyAttribute]
public  ();
    [IsReadOnlyAttribute]
public int ();
    public sealed virtual bool Equals(    );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static void (    , StringBuilder , bool );
    private static void (    , StringBuilder ,  );
    private static     (string , Encoding , bool , int );
    private static void (    , int , int );
    private static void (string , Encoding ,     , int , int );
    private static int (string , bool ,     ,     , Stream );
    private static int (string , bool ,     ,     , Stream );
    private static int (string , bool ,     ,     , Stream );
    public static     (    );
    public static void (string );
    public static Encoding (String& );
    public static string (string , Encoding );
    private static string (string , bool , bool , Encoding& , Boolean& );
    public static string (    );
    public static void (string , Stream , Int32& );
    public static void (string , Stream , Encoding , bool , Int32& , int );
    public static void (    , Stream );
}
[DefaultMemberAttribute(" ")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private    [] ;
    [DebuggerBrowsableAttribute("0")]
private Int32[] ;
    [DebuggerBrowsableAttribute("0")]
private    [] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
public       { get; }
    internal    (string ,     ,    [] , Int32[] ,    [] );
    public string ();
    public     ();
    public int ();
    public     (int );
    public     (int );
    public     (int );
    public     (int );
    private     (int );
    public bool (int );
    private static  (int );
    private static   (int );
    private static bool ( ,  );
    private static bool ( ,  );
    [NullableContextAttribute("0")]
public   <   > ();
    private sealed virtual override IEnumerator`1<   >    ​ ();
    private sealed virtual override IEnumerator    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   ,    > {
    internal    (​   );
    private protected virtual        ​  (​   );
    private protected virtual ​      ​  (    );
    public KeyValuePair`2<   ,    > (string );
    public KeyValuePair`2<   ,    > (string );
    private protected virtual void    ​  (    );
    internal bool (    ,    & );
    internal static     (string , int );
    internal string (string , bool , int ,    & );
    internal static int (    );
    internal static     (    );
    private static bool (string , Int32& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    public    (string );
    public string ();
    public void (string );
    public virtual string ToString();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static Brush (    ,     ,     ,     ,     , double , double );
    [ExtensionAttribute]
internal static Transform (    );
    [IteratorStateMachineAttribute("   /")]
internal static IEnumerable`1<Double[]> (    , IEnumerable`1<   > , int );
    [IteratorStateMachineAttribute("   /")]
[ExtensionAttribute]
private static IEnumerable`1<Double[]> (    , IList`1<   > );
    [ExtensionAttribute]
private static Double[] (    ,     );
    [ExtensionAttribute]
public static Double[] (    );
    [IteratorStateMachineAttribute("   /")]
[ExtensionAttribute]
public static IEnumerable`1<   > (IEnumerable`1<   > ,     );
    [IteratorStateMachineAttribute("   /")]
[ExtensionAttribute]
public static IEnumerable`1<   > (IEnumerable`1<   > ,     );
    [ExtensionAttribute]
public static Nullable`1<   > (IList`1<   > );
    [ExtensionAttribute]
public static void (    ,     , Double[]& , Double[]& );
}
internal class     :     {
    private double ;
    private double ;
    public    (double , double );
    public virtual     ​ ();
    protected virtual int    ​ ();
    [NullableContextAttribute("1")]
public virtual void    ​ (Byte[] , int , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    internal    (    , Stream );
    public virtual void    ​ ();
    private void (    );
    private void (    );
    private void (    );
    private void (    , string );
    private static void (    , List`1<string> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : BinaryReader {
    [DebuggerBrowsableAttribute("0")]
private Encoding ;
    public    (Stream );
    public    (Stream , Encoding );
    public Encoding ();
    public void (Encoding );
    public T (Func`1<T> );
    public byte ();
    public ushort ();
    public UInt32 ();
    public Guid  ();
    public string (UInt32 , Encoding );
    private byte ();
    private ushort ();
    private UInt32 ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private string ;
    private static    ();
    public string ();
    public void (string );
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
    public virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    private Func`2<   , > ;
    protected Inline ;
    private TableCell ;
    private  ;
    private bool ;
    protected    (Func`2<   , > );
    protected  ();
    protected void ( );
    protected bool ();
    protected void (bool );
    protected Func`2<   , > ();
    protected virtual bool    ​ (DocumentModel );
    protected virtual bool    ​ (Section );
    protected virtual bool    ​ (HeaderFooter );
    protected virtual bool    ​ (Paragraph );
    protected virtual bool    ​ (Table );
    protected virtual bool    ​ (TableRow );
    protected virtual bool    ​ (TableCell );
    protected virtual bool    ​ (Field );
    protected virtual bool    ​ (Hyperlink );
    protected virtual bool    ​ (PreservedDrawingElement );
    protected virtual bool    ​ (Shape );
    protected virtual bool    ​ (Group );
    protected virtual bool    ​ (TextBox );
    protected virtual bool    ​ (Picture );
    protected virtual bool    ​ (Run );
    protected virtual bool    ​ (BookmarkStart );
    protected virtual bool    ​ (BookmarkEnd );
    protected virtual bool    ​ (SpecialCharacter );
    protected virtual bool    ​ (PreservedInline );
    protected virtual bool    ​ (TableOfEntries );
    protected virtual bool    ​ (Note );
    protected virtual bool    ​ (BlockContentControl );
    protected virtual bool    ​ (InlineContentControl );
    protected virtual bool    ​ (Chart );
    protected virtual bool    ​ (CommentStart );
    protected virtual bool    ​ (CommentEnd );
    protected virtual bool    ​ (Comment );
    protected virtual bool    ​ (MoveRangeSeparator );
    protected virtual bool    ​ (AlignmentTab );
    protected bool (    );
    protected static   <   > (U );
    private static    <   >  (U );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    internal    (    );
    protected virtual ​      ​ ();
    protected virtual string    ​ (    );
    private protected virtual        ​ (​   );
    private protected virtual ​      ​ (    );
    protected virtual string    ​ (​   , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private PrintTicket ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    private PageOrientation ;
    public    (PrintTicket , PageOrientation , object , string );
    protected virtual       ​ (   );
    protected virtual     ​ (string , Stream );
    public static void (string , Action`2<PrintQueue, PrintTicketConverter> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static void (    ,     , CharacterStyle );
    public static bool (    ,     , string , CharacterFormat , ParagraphFormat , bool );
    private static void (    ,     , string , string ,   <   > ,   <   > ,   <   > );
    public static void (    ,     );
    public static void (    ,     ,   <   > ,   <   > ,   <   > );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
internal static class     : object {
    [NullableContextAttribute("1")]
public static void (PageSetup , StringBuilder );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (    ,     );
    public virtual        ​ ();
    public virtual int    ​ ();
    protected virtual double    ​ (int );
    internal virtual        ​ (    );
    internal virtual        ​ (    );
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    public    ( ,  );
    [IsReadOnlyAttribute]
public  ();
    [IsReadOnlyAttribute]
public  ();
    public sealed virtual bool Equals(    );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static Encoding ;
    [DebuggerBrowsableAttribute("0")]
private X509Certificate2Collection ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`3<string, Type, object> ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private IWebRequestCreate  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    public    (X509Certificate2Collection , string , string , string , int , Func`3<string, Type, object> , int , int  , int  , string  , IWebRequestCreate  );
    private static    ();
    public     ();
    public     ();
    public     ();
    private void ();
    public void (string );
    private void ();
    public string ();
    public int ();
    public int  ();
    public int  ();
    public int  ();
    public int  ();
    private protected virtual Byte[]    ​ (Byte[] , string , object );
    private string (string );
    private string (string );
    private CertificatePathResponse  ();
    private TrustchainResponse  ();
    private TResponse (string , int , string );
    private TResponse (string , string );
    private HttpStatusCode (string , string , WebResponse& );
    private TResponse (HttpStatusCode , WebResponse );
    private WebRequest (Uri );
    private TResponse (string );
    private static object (string , Type );
    private static HttpStatusCode (WebResponse );
    private static string (WebResponse );
    private static     (string );
    private static string (Byte[] );
    private static Byte[] (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static string (string );
    private static string (string );
    private static string (string );
    private static bool (    , String& , String& , Nullable`1<> );
    private static void (string , Stream );
    private static void (    , Stream , int );
    private static string (    );
    private static void (    ,     );
    private static void (    ,     );
    private static void (    , Stream , int );
    private static void (    ,     );
    private static void (    ,     );
    private static void (    ,     );
    private static string (string );
    private static void (    ,     );
    private static void (    , Stream , int );
    private static string (    );
    private static void (    ,     );
    private static void (    , Stream , int );
    private static string (    );
    private static void (    ,     );
    private static void (    , Stream , int );
    private static string (    );
    private static void (    ,     );
    public static void (    ,     );
    public static void (    , Stream , int );
    public static string (    ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    internal    (    ,  ,  , double , double );
    public     ();
    public  ();
    private void ( );
    public  ();
    private void ( );
    public double ();
    private void (double );
    public double ();
    private void (double );
    internal void (   , double ,     ,     ,     ,     ,     ,   ,   , double  , double  );
    internal bool ( );
    internal bool ( );
    internal bool (double );
    internal bool (double );
    public virtual bool Equals(object );
    public sealed virtual bool Equals(    );
    public virtual int GetHashCode();
    public TextParagraphProperties (    , double );
}
[AttributeUsageAttribute("256")]
internal class     : Attribute {
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int> ;
    public    (int );
    public int ();
    public bool ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    public     ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [NullableAttribute("2")]
public       { get; public set; }
    private static    ();
    public    (    ,     );
    private    ( );
    internal virtual void    ​ ();
    public     ();
    internal void (    );
    private protected virtual bool    ​ ();
    public bool ();
    public void (bool );
    private int ();
    private void (int );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    public void (double , double , double , double );
    public double  ();
    public void (double );
    public double  ();
    public void (double );
    internal      ();
    internal void (    );
    private sealed virtual override        ​  ();
    private sealed virtual override ​      ​  ();
    private sealed virtual override void    ​ (​   );
    private sealed virtual override bool    ​ ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override        ​  ();
    private sealed virtual override     ​  ();
    private sealed virtual override        ​  ();
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (    );
}
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
public byte ;
    [DebuggerBrowsableAttribute("0")]
public byte ;
    [DebuggerBrowsableAttribute("0")]
public byte ;
    [DebuggerBrowsableAttribute("0")]
public byte ;
    public    (byte , byte , byte , byte );
    public     (    );
    public     (double ,     );
    [NullableContextAttribute("1")]
public virtual string ToString();
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public sealed virtual bool Equals(    );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    private      ;
    [DebuggerBrowsableAttribute("0")]
private ​    ;
    private      ;
    private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
internal ​     { get; }
    [DebuggerBrowsableAttribute("0")]
internal ​   Source { get; }
    internal    (    , ​   );
    private static    ();
    internal     ();
    internal     ();
    private void (    );
    internal     ();
    private void (    );
    internal virtual ​      ​  ();
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    internal virtual void    ​ ();
    public     ();
    internal     ();
    public bool ();
    public void (bool );
    internal   ();
    internal void ( );
    internal      ();
    internal void (    );
    internal ​    ();
    internal void (​   );
    internal      ();
    internal void (    );
    internal Nullable`1<int>  ();
    internal void (Nullable`1<int> );
    internal ​    ();
    internal void (​   );
    private sealed virtual override        ​  ();
    private sealed virtual override        ​  ();
    internal void (string );
    internal void (Stream );
    public void (string );
    internal void (string ,  );
    public void (Stream ,  );
    [NullableContextAttribute("2")]
private void (Stream , string );
    private static  (Stream );
    private static  (string );
    [NullableContextAttribute("2")]
private void (Stream , string ,  );
    internal void ();
    internal void (    ,     );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual Stream    ​ ();
    public abstract virtual long    ​ ();
    public abstract virtual void    ​ (long );
    public abstract virtual int    ​ ();
    public abstract virtual int    ​ ();
    public abstract virtual int    ​ ();
    public abstract virtual int    ​ ();
    public abstract virtual void    ​ (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <UInt32> ;
    private static <UInt32> ;
    private static <ushort> ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    private static    ();
    public string ();
    public void (string );
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
    public static     (string );
    public static     ();
    public virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <> {
    private Element ;
    public    (Func`2<   , > , Element );
    protected virtual bool    ​ (Field );
    protected virtual bool    ​ (Run );
    protected virtual bool    ​ (SpecialCharacter );
    protected virtual bool    ​ (AlignmentTab );
    protected virtual bool    ​ (Note );
    protected virtual bool    ​ (Picture );
    protected virtual bool    ​ (TextBox );
    protected virtual bool    ​ (Chart );
    protected virtual bool    ​ (Shape );
    protected virtual bool    ​ (PreservedDrawingElement );
    protected virtual bool    ​ (PreservedInline );
    public static bool (Element , Func`2<   , U> , U& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private static    ();
    private    ( );
    internal static     ();
    internal virtual void    ​ ();
    internal virtual string    ​ ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    private protected virtual        ​ ();
    private protected virtual void    ​ (   & );
    private protected virtual void    ​ (    ,    & modreq(System.Runtime.InteropServices.InAttribute) );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : XmlWriter {
    [DebuggerBrowsableAttribute("0")]
private protected XmlWriter ;
    public WriteState WriteState { get; }
    public XmlWriterSettings Settings { get; }
    public string XmlLang { get; }
    public XmlSpace XmlSpace { get; }
    private protected    (XmlWriter );
    public virtual WriteState get_WriteState();
    public virtual void Close();
    public virtual void Flush();
    public virtual string LookupPrefix(string );
    public virtual void WriteBase64(Byte[] , int , int );
    public virtual void WriteCData(string );
    public virtual void WriteCharEntity(char );
    public virtual void WriteChars(Char[] , int , int );
    public virtual void WriteComment(string );
    public virtual void WriteDocType(string , string , string , string );
    public virtual void WriteEndAttribute();
    public virtual void WriteEndDocument();
    public virtual void WriteEndElement();
    public virtual void WriteEntityRef(string );
    public virtual void WriteFullEndElement();
    public virtual void WriteProcessingInstruction(string , string );
    public virtual void WriteRaw(Char[] , int , int );
    public virtual void WriteRaw(string );
    public virtual void WriteStartAttribute(string , string , string );
    public virtual void WriteStartDocument();
    public virtual void WriteStartDocument(bool );
    public virtual void WriteStartElement(string , string , string );
    public virtual void WriteString(string );
    public virtual void WriteSurrogateCharEntity(char , char );
    public virtual void WriteWhitespace(string );
    public virtual XmlWriterSettings get_Settings();
    public virtual void WriteAttributes(XmlReader , bool );
    public virtual void WriteBinHex(Byte[] , int , int );
    public virtual void WriteName(string );
    public virtual void WriteNmToken(string );
    public virtual void WriteNode(XPathNavigator , bool );
    public virtual void WriteNode(XmlReader , bool );
    public virtual void WriteQualifiedName(string , string );
    public virtual void WriteValue(bool );
    public virtual void WriteValue(DateTime );
    public virtual void WriteValue(decimal );
    public virtual void WriteValue(double );
    public virtual void WriteValue(float );
    public virtual void WriteValue(int );
    public virtual void WriteValue(long );
    public virtual void WriteValue(object );
    public virtual void WriteValue(string );
    public virtual string get_XmlLang();
    public virtual XmlSpace get_XmlSpace();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static bool (    ,     , ListStyle , IList`1<Block> , Int32& , int );
    public static void (    ,     , IList`1<Block> , Int32& , int , bool );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    public    (DocumentModel , HtmlSaveOptions ,     , string );
    public virtual void    ​ ();
    public virtual string    ​ (    );
    public virtual void    ​ ();
    public virtual void    ​ ();
    public virtual void    ​ ();
    private void (Stream ,     );
    private static string (Stream , Encoding );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
internal ​   ;
    internal ​   Source { get; }
    private static    ();
    internal virtual bool    ​ ();
    internal virtual        ​ ();
    internal virtual void    ​ (    );
    public virtual     ​ ();
    internal virtual bool    ​ ();
    public virtual int    ​ ();
    internal virtual        ​  ();
    internal virtual ​      ​  ();
    internal virtual ​   get_Source();
    internal virtual bool    ​ (    , Double& , Double& , Double& );
    internal virtual bool    ​ (    , Byte& , Byte& , Byte& );
    internal static void (double , double , double , double , Double& , Double& , Double& );
    internal virtual string    ​ (int );
    internal virtual void    ​ (    , bool , bool ,     );
    internal virtual void    ​ (    , bool , bool ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private ColorDataName ;
    public    (ColorDataName , IList`1<   > );
    public ColorDataName ();
    public virtual     ​ ();
    public virtual ColorDataName    ​ ();
    protected virtual        ​ (    );
    protected virtual        ​ (IList`1<   > );
    protected virtual bool    ​ (    );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    protected    (    );
    protected     ();
    public sealed virtual bool ​  ​ ( , ​   , Byte[] , int , int , ​   , Byte[]& , Int32&  , Int32&  );
    public sealed virtual bool ​  ​ (​   );
    protected internal abstract virtual Byte[]    ​ (​   , Byte[] , int , int , Int32& , Int32& );
    protected internal abstract virtual Byte[]    ​ (​   , Byte[] , int , int , Int32& , Int32& );
    protected internal abstract virtual Byte[]    ​ (​   ,     , Byte[] , int , int , Int32& , Int32& );
    protected internal abstract virtual Byte[]    ​ (​   ,     , Byte[] , int , int , Int32& , Int32& );
    protected internal abstract virtual Byte[]    ​ (​   ,     , Byte[] , int , int , Int32& , Int32& );
    protected internal abstract virtual Byte[]    ​ (​   ,     , Byte[] , int , int , Int32& , Int32& );
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public    (    , bool , int );
    protected virtual void    ​ ();
    public virtual bool    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal    (int ,     );
    public int ();
    public     ();
    internal  (    );
    private  (    );
    private  (    );
}
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
public static     ;
    private    (int );
    private static    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    private bool ;
    public    (string , bool );
    public string ();
    public void (string );
    public bool ();
    public void (bool );
}
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public    (    , double );
    public     ();
    public double ();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public sealed virtual bool Equals(    );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
internal interface     {
    public abstract virtual int    ​ ();
    public abstract virtual int    ​ ();
    public abstract virtual bool    ​ ();
    public abstract virtual Nullable`1<   >    ​ ();
    public abstract virtual bool    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    internal    (    , Stream );
    private static    ();
    public virtual void    ​ ();
    private void ( );
    private void ( );
    private void (​   , string );
    private void ( , string );
    private static void (    , ​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private KeyValuePair`2[] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    public    (KeyValuePair`2[] , Stream , bool );
    public virtual int Read(Byte[] , int , int );
    public virtual int ReadByte();
    private bool ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <UInt32> ;
    private static <ushort> ;
    private static <ushort> ;
    private static <UInt32> ;
    private static <ushort> ;
    [NullableAttribute("2")]
private     ;
    private UInt32  ;
    private UInt32  ;
    private string  ;
    [NullableAttribute("2")]
private      ;
    private string  ;
    private Guid  ;
    private UInt32  ;
    [NullableAttribute("2")]
public       { get; public set; }
    [NullableAttribute("2")]
public       { get; public set; }
    private static    ();
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    public UInt32 ();
    public void (UInt32 );
    public UInt32 ();
    public void (UInt32 );
    public string ();
    public void (string );
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    public string ();
    public void (string );
    public Guid  ();
    public void (Guid );
    public UInt32 ();
    public void (UInt32 );
    public virtual void    ​ (    );
    public virtual void    ​ (    );
    public virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private CharacterStyle ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<FontsData> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<UnderlineType> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<Color> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<Color>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<Color>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<SingleBorder>  ;
    [DebuggerBrowsableAttribute("0")]
private CultureInfo  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   >  ;
    [DebuggerBrowsableAttribute("0")]
private Revision  ;
    [DebuggerBrowsableAttribute("0")]
private CharacterFormatRevision  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public CharacterFormatRevision   { get; public set; }
    private static    ();
    public CharacterStyle ();
    public void (CharacterStyle );
    protected virtual Style    ​ ();
    protected virtual void    ​ (Style );
    public Nullable`1<double> ();
    public void (Nullable`1<double> );
    public Nullable`1<FontsData> ();
    public void (Nullable`1<FontsData> );
    public Nullable`1<UnderlineType> ();
    public void (Nullable`1<UnderlineType> );
    public Nullable`1<Color>  ();
    public void (Nullable`1<Color> );
    public Nullable`1<Color>  ();
    public void (Nullable`1<Color> );
    public Nullable`1<Color>  ();
    public void (Nullable`1<Color> );
    public Nullable`1<double> ();
    public void (Nullable`1<double> );
    public Nullable`1<double> ();
    public void (Nullable`1<double> );
    public Nullable`1<double> ();
    public void (Nullable`1<double> );
    public Nullable`1<int>  ();
    public void (Nullable`1<int> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void  (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void  (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void  (Nullable`1<bool> );
    public Nullable`1<bool>  ();
    public void  (Nullable`1<bool> );
    public Nullable`1<SingleBorder>  ();
    public void (Nullable`1<SingleBorder> );
    public CultureInfo  ();
    public void (CultureInfo );
    public Nullable`1<   >  ();
    public void (Nullable`1<   > );
    public Revision  ();
    public void (Revision );
    [NullableContextAttribute("2")]
public CharacterFormatRevision  ();
    [NullableContextAttribute("2")]
public void (CharacterFormatRevision );
    public Nullable`1<bool>  ();
    public void  (Nullable`1<bool> );
    public string  ();
    public void (string );
    public string  ();
    public void (string );
    public string  ();
    public void (string );
    public string  ();
    public void (string );
    public string  ();
    public void (string );
    public string  ();
    public void (string );
    public string  ();
    public void (string );
    public string  ();
    public void  (string );
    public Nullable`1<bool>  ();
    public void  (Nullable`1<bool> );
    protected virtual  ​ <   >    ​  ();
    private Nullable`1<bool> (int );
    private void (Nullable`1<bool> , int );
    public virtual bool Equals(    );
    internal bool (    );
    internal bool (    );
    private bool (    );
    public virtual int GetHashCode();
    public     (bool , CharacterFormat );
    public virtual        ​ ();
    internal void (    );
    public virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal  ;
    [DebuggerBrowsableAttribute("0")]
internal  ;
    [DebuggerBrowsableAttribute("0")]
internal  ;
    private     ;
    internal    (    ,     , List`1<   > );
    public     ();
    public virtual     ​ ();
    public virtual        ​ ();
    public     (    );
    public     (double , double );
    public     (    , bool );
    public     (double , double , bool );
    public     (    );
    public     (double , double );
    public     (    ,     ,     );
    public     (double , double , double , double , double , double );
    public     (    ,     , bool , bool , double );
    public     (double , double , double , double , bool , bool , double );
    public     ();
    public     (    ,     );
    public     (double , double , double , double );
    public     (    ,     );
    public     (double , double , double , double );
    internal virtual     ​  ();
    internal virtual bool    ​ ();
    internal virtual void    ​ (bool );
    internal virtual     ​ ();
    internal virtual void    ​ ( );
    internal virtual bool    ​ ();
    internal virtual void    ​ (bool );
    internal virtual bool    ​  ();
    internal virtual void    ​  (bool );
    internal virtual     ​ ();
    internal virtual void    ​ ( );
    private protected virtual        ​ (    ,     );
    internal     (    ,     );
    private sealed virtual override     ​ ();
    private sealed virtual override     ​ ();
    private sealed virtual override void    ​ ( );
    private sealed virtual override     ​ ();
    private sealed virtual override void    ​ ( );
    private sealed virtual override     ​ ();
    private sealed virtual override void    ​ ();
    private void ( , bool );
    internal bool (    ,    & ,  ,  ,  );
    internal bool (    );
    internal   ();
    internal void ( );
    private     ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
protected object ;
    protected    (object );
    public sealed virtual void    ​ (   , string , Stream );
    protected abstract virtual       ​ (   );
    protected abstract virtual     ​ (string , Stream );
    protected static double (double );
    protected static Size (   , int );
    protected static Rect (   , int , object );
    protected static DrawingVisual (   , int , object );
    public static FrameworkElement (   , int , object );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (    ,     , Hyperlink );
    private static void (    , BookmarkEnd );
    private static void (    , BookmarkStart );
    private static void (    ,     , Note );
    private static void (    ,     , Note );
    private static void (    , Note );
    private static void (    ,     , CommentStart );
    private static void (    ,     , CommentEnd );
    private static void (    , string );
    private static void (    , SpecialCharacter );
    private static void (    , int );
    public static void (    ,     , Element );
    public static void (    ,     , IEnumerable`1<Inline> );
    public static void (    ,     , Run , Action , Action );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    private DocumentModel ;
    private HtmlSaveOptions ;
    protected     ;
    protected string ;
    protected string ;
    protected bool ;
    protected Dictionary`2<Stream,    > ;
    public    (DocumentModel , HtmlSaveOptions ,     , string );
    public HtmlSaveOptions ();
    public abstract virtual void    ​ ();
    public abstract virtual void    ​ ();
    public abstract virtual void    ​ ();
    public abstract virtual void    ​ ();
    public abstract virtual string    ​ (    );
    protected void (    );
    private void (    );
    private void (    );
    private void (    );
    private void (    );
    private static void (    , string , Dictionary`2<string, string> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
[ThreadStaticAttribute]
private static    [] ;
    [DebuggerBrowsableAttribute("0")]
[ThreadStaticAttribute]
private static    [] ;
    [DebuggerBrowsableAttribute("0")]
private Double[] ;
    internal    (Double[] );
    public virtual int    ​ ();
    internal Double[] ();
    protected virtual double    ​ (int );
    private static     (   []& , int );
    internal static     (int );
    internal static     (int );
    internal void (    );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual     ​ ();
    public abstract virtual        ​ ();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Byte[] ;
    private static Byte[] ;
    private static Byte[] ;
    private static    ();
    public static Byte[] (Byte[] , ​   , bool , MD5 , Byte[] , Byte[] );
    public static Byte[] (string ,     , int ,     , double , bool , int , MD5  );
    public static Byte[] (string , bool ,     ,     ,     ,     , Aes , SHA256  , SHA384  , SHA512  , bool  );
    private static Byte[] (Byte[] , Byte[] ,     , Aes , SHA256 , SHA384 , SHA512 );
    public static Byte[] (string , string , double , int , MD5 ,    );
    public static Byte[] (string ,     , int ,     , double , bool , int , MD5  ,     );
    public static Byte[] (string ,     , int ,     , double , bool , int , MD5  ,     );
    public static bool (string ,     , int ,     , double , bool , int , MD5  ,     ,      );
    public static bool (string , double , int , MD5 ,    ,     , int ,      , bool  ,      , String&  );
    public static Byte[] (string , Byte[] , Aes , SHA256 , SHA384 , SHA512 , RandomNumberGenerator , Byte[]&  );
    public static Byte[] (string , Byte[] ,     , Aes , SHA256 , SHA384 , SHA512 , RandomNumberGenerator  , Byte[]&  );
    public static Byte[] (Byte[] , int , bool , Aes );
    public static bool (string ,     , Aes , SHA256 , SHA384 , SHA512 , bool );
    public static bool (string ,     ,     , Aes , SHA256 , SHA384 , SHA512 , bool  );
    public static bool (Byte[] ,     , int , bool , Aes );
    internal static void (RandomNumberGenerator , Byte[] );
    private static void (string , Byte[] );
    private static Byte[] (string );
    private static string (string );
    [ExtensionAttribute]
private static Byte[] (MD5 , Byte[] , int , int );
    [ExtensionAttribute]
private static void (   , Byte[] , Byte[] , int );
    [ExtensionAttribute]
private static void (   , Byte[] , Byte[] , int );
    private static int (Byte[] );
    private static bool (Byte[] , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static     (    , List`1<   > , bool );
    private static     (    , List`1<   > );
    public static     (Stream );
    public static     (    , bool );
    internal static     (    , bool );
    private static void (    , Stream , Func`2<Byte[], Byte[]> );
    private static void (    , Stream , Func`2<Byte[], Byte[]> , bool );
    private static Byte[] (    , Func`2<Byte[], Byte[]> );
    public static     (    );
    public static string (    );
    public static     (    , bool );
    private static bool (    );
    public static void (IEnumerable`1<   > , Stream , bool );
    public static void (    , Stream , Func`2<Byte[], Byte[]> , bool , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private string DebuggerDisplay { get; }
    internal    (int , int ,  ,     , int ,     );
    public int ();
    public int ();
    public  ();
    public     ();
    internal int ();
    public     ();
    public     ();
    public      ();
    internal   ();
    private string get_DebuggerDisplay();
    public virtual string ToString();
}
[DefaultMemberAttribute(" ")]
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class     :    <KeyValuePair`2<, >> {
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    internal ​   Source { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public    { get; public set; }
    private protected    (​   );
    internal sealed virtual ​   get_Source();
    internal virtual     ​ ();
    internal sealed virtual ​      ​ ();
    internal sealed virtual ​      ​  ();
    internal sealed virtual        ​ ();
    internal sealed virtual bool    ​  ();
    private protected sealed virtual bool    ​  ();
    private protected sealed virtual bool    ​  ();
    private protected sealed virtual object    ​ ();
    private protected sealed virtual int    ​ ();
    internal int ();
    private protected sealed virtual int    ​ ();
    private int ();
    private void (int );
    public  ( );
    public void ( ,  );
    public bool  ( );
    public bool  ( , & );
    private protected sealed virtual KeyValuePair`2<, >    ​ (​   );
    private protected sealed virtual ​      ​ (KeyValuePair`2<, > );
    private protected abstract virtual     ​  (​   );
    private protected abstract virtual ​      ​  ( );
    private ​    ( );
    private protected sealed virtual KeyValuePair`2<, >    ​ (int );
    private protected sealed virtual void    ​ (int , KeyValuePair`2<, > );
    public void ( ,  );
    private protected virtual void    ​ (KeyValuePair`2<, > );
    private protected sealed virtual void    ​ (int , KeyValuePair`2<, > );
    private void  ( ,  , bool );
    private protected virtual void    ​  ( );
    private protected sealed virtual void    ​ (int );
    public bool  ( );
    private protected sealed virtual bool    ​  (KeyValuePair`2<, > );
    private void  ( );
    private protected sealed virtual void    ​ ();
    private protected sealed virtual int    ​  (KeyValuePair`2<, > );
    private protected sealed virtual bool    ​  (KeyValuePair`2<, > );
    private protected sealed virtual void    ​  (KeyValuePair`2[] , int );
    [NullableContextAttribute("0")]
public <, >  ();
    private protected sealed virtual IEnumerator`1<KeyValuePair`2<, >>    ​  ();
    private ​   ();
    private ​    ( );
    private static   (​   ,  );
    private static bool  (​   ,  , Int32& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private IDictionary`2<string,    > ;
    private IDictionary`2<string,    > ;
    private Byte[] ;
    private Byte[] ;
    public IDictionary`2<string,    > ();
    public IDictionary`2<string,    > ();
    public Byte[] ();
    public void (Byte[] );
    public Byte[] ();
    public void (Byte[] );
    public void (KeyValuePair`2<string,    > );
    public void (string ,     );
    public void (KeyValuePair`2<string,    > );
    public void (string ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    private static    ();
    private    ( );
    public    (    , double ,     , double ,     );
    public    (    , double ,     , double , IList`1<   > );
    public    (    , double ,     , double ,    [] );
    public    (    , double ,     , double ,     ,     );
    public virtual     ​ ();
    private     ();
    private void (    );
    public     ();
    public void (    );
    public double ();
    public void (double );
    public     ();
    public void (    );
    public double ();
    public void (double );
    public     ();
    public void (    );
    public IList`1<   > ();
    public void (IList`1<   > );
    private      ();
    private void (    );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    [IteratorStateMachineAttribute("   /")]
private sealed virtual override IEnumerable`1<   >    ​ (    ,     );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual void    ​ (int , int );
    public abstract virtual void    ​ ( ,    [] , Byte[] , bool );
    public abstract virtual void    ​ (int );
    public abstract virtual void    ​ ( );
    public abstract virtual void    ​ (Int32[] );
    public abstract virtual        ​ ();
    public abstract virtual        ​ (int );
    public abstract virtual void    ​ ();
    public abstract virtual void    ​ (   [] );
    public abstract virtual void    ​ (double , double );
    public abstract virtual void    ​ (Byte[] );
    public abstract virtual Stream    ​ (int , int , int , int );
    public abstract virtual Stream    ​ (Nullable`1<bool> );
    public abstract virtual Stream    ​ ();
    public abstract virtual void    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    protected     ;
    protected Stream ;
    internal    (    , Stream );
    public abstract virtual void    ​ ();
    internal static     (    , Stream ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    {
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public    (Byte[] , int , Stream , bool );
    public virtual int Read(Byte[] , int , int );
    public virtual int ReadByte();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private IList`1<   > ;
    private static    ();
    public IList`1<   > ();
    public void (IList`1<   > );
    public static     ();
    public virtual        ​ ();
    public virtual void    ​ (    );
    public virtual void    ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class     :    <> {
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    public DocumentModel ();
    public void (DocumentModel );
    public sealed virtual bool   ​ (Func`2<, U> , U& );
    public sealed virtual    ​ ();
    public sealed virtual void   ​ ( );
    protected abstract virtual Style    ​ ();
    protected abstract virtual void    ​ (Style );
    public Style ();
    public void (Style );
    public sealed virtual  ​ <>   ​ ();
    protected abstract virtual  ​ <>    ​  ();
    public abstract virtual     ​ ();
    public   (DocumentModel );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private  ;
    internal ​    { get; }
    internal ​   Source { get; }
    [NullableAttribute("2")]
public      { get; public set; }
    internal    (​   );
    private static    ();
    internal virtual ​      ​  ();
    internal virtual     ​ ();
    internal virtual ​   get_Source();
    internal virtual void    ​ ();
    internal static bool ( );
    public    <   > ();
    internal bool ();
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    public    <   > ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    public    (    );
    public virtual void    ​ (   , string , Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static CommentStart (    ,     );
    private static CommentEnd (    ,     );
    private static Hyperlink (    ,     );
    private static BookmarkStart (    ,     );
    private static BookmarkEnd (    ,     );
    private static Note (    ,     );
    private static string (    );
    private static     (    ,     );
    [IteratorStateMachineAttribute("   /")]
public static IEnumerable`1<   >  (    ,     );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (DocumentModel , XmlWriter , HtmlSaveOptions , string );
    public void ();
    public sealed virtual void Dispose();
    private void (DocumentModel , HtmlSaveOptions , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    private    (int );
    internal    (int , double );
    private static    ();
    public virtual int    ​ ();
    internal virtual bool    ​ ();
    protected virtual double    ​ (int );
    protected virtual bool    ​ (    );
    public virtual void    ​ (   & );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual        ​ ();
    public abstract virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private protected static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private protected   ;
    internal ​   Source { get; }
    internal    ( );
    private static    ();
    internal static     ( );
    internal sealed virtual ​   get_Source();
    internal sealed virtual     ​ ();
    private protected ​   ();
    private protected void (​   );
    private ​   ();
    internal double ();
    internal void (double );
    private protected int  ();
    private protected void (int );
    private  ();
    private void ( );
    private ​   ();
    private void (​   );
    private ​   ();
    private void (​   );
    private ​   ();
    private void (​   );
    private protected   ();
    private protected void ( );
    private protected   ();
    private protected void ( );
    private protected   ();
    private protected void ( );
    internal bool  ();
    internal bool  ();
    internal bool  ();
    internal virtual bool    ​  ();
    internal bool  ();
    internal     (​   );
    internal void (​   ,     );
    private protected void  ();
    internal virtual        ​ (    , Nullable`1<> );
    internal  (​  & , Int32& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (    );
    private static void (    , Int32& , Int32& , Int32& );
    private static void (    , Int32& , Int32& , Int32& );
    private static int (    );
    public static DateTime (    );
    public static DateTime (string );
    public static string (DateTime );
    public static string (DateTime );
    public static string (DateTime , bool );
    public static string (DateTime );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private StringBuilder ;
    private   <   > ;
    private   <int> ;
    private   <   > ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    public bool ();
    public     ();
    public     ();
    public     (   , double ,     ,     ,     ,     ,     ,   ,   , double  , double  );
    public     (   , double ,     ,     ,     ,     ,     );
    public     ( );
    public     ( );
    public     (double );
    public     (double );
    public     (   , bool );
    public     (double , bool );
    public     (    , bool );
    public     (    , bool );
    public     (    , bool );
    public     (    , bool );
    public     (    , bool );
    public     (string );
    public     (    );
    public     ();
    public     ();
    public     ();
    public virtual string ToString();
}
internal static class     : object {
    public static ​   (TEnum );
    public static ​   (TEnum );
    public static Nullable`1<TEnum> (​   );
    public static Nullable`1<TEnum> (​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private string ;
    private string ;
    private MemoryStream ;
    public    (string , string , MemoryStream );
    public string ();
    private void (string );
    public string ();
    private void (string );
    public MemoryStream ();
    private void (MemoryStream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private static    ();
    private    ( );
    public    (IList`1<   > ,     );
    public    (int , int , int ,     ,     , IList`1<   > ,     );
    public virtual     ​ ();
    public int ();
    private void (int );
    public void (    ,     ,     ,     ,     ,     ,     ,      ,      ,      ,      ,      , Nullable`1<   >  , Nullable`1<   >  , Nullable`1<   >  , Nullable`1<   >  );
    public void ( ,     ,     ,     ,     ,     ,     ,      ,      , Nullable`1<   >  , Nullable`1<   >  , Nullable`1<   >  , Nullable`1<   >  );
    internal void (    );
    public     (bool );
    private protected virtual   <double>    ​ (Stream );
    private protected virtual void    ​ (Stream );
    public  ();
    private protected virtual IEnumerator    ​  ();
    [IteratorStateMachineAttribute("   /")]
private protected virtual IEnumerator`1<  <double>>    ​  ();
    [IteratorStateMachineAttribute("   /")]
private protected virtual IEnumerator`1<  <double>>    ​  ();
    private sealed virtual override IEnumerator`1<   >    ​ ();
    private sealed virtual override IEnumerable`1<   >    ​ (    ,     );
}
internal class     :     {
    private double ;
    public    (double );
    public virtual     ​ ();
    protected virtual int    ​ ();
    [NullableContextAttribute("1")]
public virtual void    ​ (Byte[] , int , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    private static    ();
    private    ( );
    internal static     ();
    internal virtual void    ​ ();
    public virtual     ​ ();
    public string ();
    public void (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : BinaryWriter {
    [DebuggerBrowsableAttribute("0")]
private Encoding ;
    public    (Stream );
    public    (Stream , Encoding );
    public Encoding ();
    public void (Encoding );
    public void (string , Encoding , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    private static <ushort> ;
    private static <UInt32> ;
    private string ;
    private string ;
    private UInt32 ;
    private ushort ;
    private static    ();
    public string ();
    public void (string );
    public string ();
    public void (string );
    public UInt32 ();
    public void (UInt32 );
    public ushort ();
    public void (ushort );
    protected virtual void    ​ (    );
    protected virtual void    ​ (    );
    public virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <> {
    public    (Func`2<   , > );
    protected virtual bool    ​ (Paragraph );
    public static bool (Element , Func`2<   , U> , U& );
}
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public    (double , double );
    public double ();
    public double ();
    [NullableContextAttribute("2")]
public sealed virtual string ToString(string , IFormatProvider );
    [NullableContextAttribute("1")]
public virtual string ToString();
    public sealed virtual bool Equals(    );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    internal     ();
    internal static     (    );
    internal     ();
    internal static     (    );
    internal static double (    ,     );
    internal static     (    ,     , double );
    private static double (double , double , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    public    (object );
    public XpsDocument (   );
    protected virtual       ​ (   );
    protected virtual     ​ (string , Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Paragraph (    , Paragraph );
    private static List`1<Paragraph> (    ,     );
    public static IList`1<Paragraph> (    ,     );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
internal static class     : object {
    [NullableContextAttribute("1")]
public static DocumentModel (Stream , string , HtmlLoadOptions );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public      { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public      { get; }
    public    (    ,     );
    public     ();
    [NullableContextAttribute("2")]
public virtual        ​ ();
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public virtual        ​ ();
    public virtual int    ​ ();
    protected virtual double    ​ (int );
    internal virtual        ​ (    );
    internal virtual        ​ (    );
    protected virtual bool    ​ (    );
    public virtual void    ​ (   & );
}
[AttributeUsageAttribute("256")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : Attribute {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (string , string , string , string , string );
    public    (string ,     );
    public string ();
    public     ();
    public virtual bool Equals(object );
    public sealed virtual bool Equals(    );
    public virtual int GetHashCode();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private static Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private IWebProxy ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    private string  ;
    private string  ;
    [NullableContextAttribute("1")]
public    (string );
    private static    ();
    public string ();
    public string ();
    public void (string );
    public string ();
    public void (string );
    public     ();
    public void (    );
    public IWebProxy  ();
    public void (IWebProxy );
    public   ();
    public void ( );
    internal bool  ();
    internal void (bool );
    public string ();
    public void (string );
    public string ();
    public void (string );
    [NullableContextAttribute("1")]
private      ();
    [NullableContextAttribute("1")]
private static  (​  & , Int32& );
    protected internal virtual int    ​  ();
    [NullableContextAttribute("1")]
protected internal virtual Byte[]    ​ (Stream );
    [NullableContextAttribute("1")]
private Byte[] (Byte[] );
    private void ();
    [NullableContextAttribute("1")]
private sealed virtual override        ​ (    );
    [NullableContextAttribute("1")]
private sealed virtual override     ​ (    , ​  & , Int32& );
    [NullableContextAttribute("1")]
private sealed virtual override Byte[]    ​ (Stream );
}
internal interface     {
    public abstract virtual ArraySegment`1<byte>    ​ (Int32& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    private List`1<> ;
    private List`1<   > ;
    private     ;
    private     ;
    private     ;
    private     ;
    private     ;
    private double  ;
    private double  ;
    private double  ;
    private protected double  ;
    private protected double  ;
    private protected     ();
    private protected     ();
    public static    [] (    );
    public static    [] (    );
    private static bool (    );
    private static bool (    );
    private    [] (    );
    private     (    , int , int , Int32& );
    private     (    , int , int , Int32& );
    private void (    ,     ,     );
    private void (    );
    private void (    );
    private void (    );
    private protected abstract virtual        ​ (    );
    private protected abstract virtual bool    ​ (    ,     ,     ,     );
    private protected abstract virtual bool    ​ (double );
    private protected virtual void    ​ (    );
    private protected virtual void    ​ (double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private ​    ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    internal ​     { get; }
    internal ​   Source { get; }
    internal    (​   );
    private static    ();
    internal virtual ​      ​  ();
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    public    <   , > ();
    internal    <   ,    > ();
    internal    <   , > ();
    internal    <   ,    >  ();
    internal    <   ,    >  ();
    internal    <   , > ();
    internal    <   , > ();
    public      ();
    internal    <   , > ();
    internal    <   , > ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Nullable`1<int> ;
    private Nullable`1<bool> ;
    private string ;
    private List`1<string> ;
    private     ;
    private     ;
    private     ;
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    public Nullable`1<bool> ();
    public void (Nullable`1<bool> );
    public string ();
    public void (string );
    public List`1<string> ();
    public void (List`1<string> );
    public     ();
    public     ();
    public     ();
    public void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private protected  ;
    internal ​   Source { get; }
    private protected    ( );
    private static    ();
    internal sealed virtual ​   get_Source();
    internal sealed virtual     ​ ();
    internal sealed virtual     ​  ();
    internal sealed virtual void    ​ ( );
    public  ();
    private protected void ( );
    private protected abstract virtual bool    ​ ();
    public bool ();
    public     ();
    public void (    );
    internal static     ( );
    private protected sealed virtual        ​ (    );
    internal     (    );
    internal     (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private     ;
    private  ;
    private int ;
    private int ;
    public     ();
    public void (    );
    public  ();
    public void ( );
    public int ();
    public void (int );
    public int ();
    public void (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    internal    (    , Stream );
    public virtual void    ​ ();
    private  ();
    private  ();
    private static ​   (    );
    private static  (    );
    private static ​   (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    {
    [DebuggerBrowsableAttribute("0")]
private byte ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public    (byte , Stream , bool );
    public virtual int Read(Byte[] , int , int );
    public virtual int ReadByte();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     :    <   > {
    [NullableAttribute("2")]
private     ;
    private     ;
    [NullableAttribute("2")]
public      { get; public set; }
    [NullableContextAttribute("2")]
public     ();
    [NullableContextAttribute("2")]
public void (    );
    public     ();
    public void (    );
    public virtual void    ​ (    );
    public virtual void    ​ (    );
    public virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    public abstract virtual     ​ ();
    public abstract virtual int GetHashCode();
    public abstract virtual bool Equals( );
    public sealed virtual bool Equals(object );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private static    ();
    private    ( );
    internal static     ();
    internal virtual void    ​ ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (    ,     );
    public virtual void    ​ (   , string , Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static void (    , double );
    public static void (    ,     , PageMargins );
    public static void (    ,     , PageMargins );
}
internal class     : object {
    public sealed virtual     ​ ();
    public sealed virtual     ​ ();
    public sealed virtual int    ​ ();
    [NullableContextAttribute("1")]
public sealed virtual void    ​ (    ,     );
    [NullableContextAttribute("1")]
public sealed virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private     ;
    private HtmlSaveOptions ;
    public    (    ,     , HtmlSaveOptions );
    public void (Table , bool );
    private void (TableColumnCollection );
    private void (int , double );
    private void (TableRow , TableFormat , bool , bool , bool );
    private void (TableCell , TableFormat , bool , bool , bool , bool , bool );
}
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    internal    (double , double , double , double );
    public virtual int    ​ ();
    protected virtual double    ​ (int );
    [NullableContextAttribute("1")]
protected virtual bool    ​ (    );
    public virtual void    ​ (   & );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual   <SolidFillFormatData>    ​ ();
    public abstract virtual   <PatternFillFormatData>    ​ ();
    public abstract virtual   <GradientFillFormatData>    ​ ();
    public abstract virtual   <PictureFillFormatData>    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    internal ​   Source { get; }
    [NullableAttribute("2")]
public string  { get; public set; }
    private static    ();
    private    ( );
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    internal static     (string );
    public string ();
    public void (string );
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    public virtual string ToString();
}
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private ArraySegment`1<byte> ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [NullableContextAttribute("1")]
public    (    , int );
    public virtual bool    ​ ();
    protected virtual void    ​ ();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
internal static     (   );
    [ExtensionAttribute]
public static     (   );
    [ExtensionAttribute]
internal static     (   );
    [ExtensionAttribute]
public static bool (   ,    );
    [ExtensionAttribute]
public static int (   );
    [ExtensionAttribute]
public static string (   );
    [ExtensionAttribute]
public static FontFamily (   );
    [ExtensionAttribute]
internal static     (   ,     , bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    public static     ;
    public static     ;
    private    (bool );
    private static    ();
    public virtual int    ​ (  & modreq(System.Runtime.InteropServices.InAttribute) );
    public virtual bool    ​ (  & modreq(System.Runtime.InteropServices.InAttribute) , Int32& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
public  ;
    public    (    ,     ,  , & );
    public virtual     ​ ();
    public     ();
    public     ();
    public  ();
    public virtual bool    ​ ();
    public     (   & , & );
    internal     (   & ,     ,  ,    & );
    internal     (& );
    internal virtual        ​ ();
    private static void (   & ,    & ,    & );
    internal virtual void    ​ (   & );
    public virtual bool Equals(    );
    public bool (    );
    public virtual string    ​ (string , IFormatProvider );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private   <   > ;
    private static    ();
    private    ( );
    internal    (    ,     ,     );
    internal static     ();
    internal virtual void    ​ ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    internal ​   ();
    internal void (​   );
    internal     ();
    internal ushort (int );
    protected virtual        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    internal    (Stream , bool );
    [IteratorStateMachineAttribute("   /")]
internal static IEnumerable`1<   > (Stream , long , long );
    protected virtual int    ​ ();
    protected virtual void    ​ (int , Int32& , Int32& );
    protected virtual void    ​ (int , Double& , Double& );
    protected virtual     ​ (int );
    protected virtual    []    ​ (int );
    protected virtual Byte[]    ​ (int );
    [NullableContextAttribute("2")]
internal virtual        ​ ();
    [NullableContextAttribute("2")]
internal virtual        ​ (int );
    protected virtual void    ​ (int , Action`1<ArraySegment`1<byte>> ,  ,     ,  ​  , ArrayPool`1<byte> );
    internal virtual        ​ (int ,  );
    private sealed virtual override int    ​ ();
    private sealed virtual override int    ​ ();
    private sealed virtual override int    ​ ();
    private sealed virtual override double    ​ ();
    private sealed virtual override double    ​ ();
    private sealed virtual override Byte[]    ​ ();
    private sealed virtual override bool    ​ (int );
    private sealed virtual override Byte[]    ​ (Boolean& );
    private sealed virtual override void    ​ (    ,     , ArrayPool`1<byte> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [NullableAttribute("2")]
public string  { get; public set; }
    private static    ();
    internal    ( );
    internal static     (    );
    public virtual     ​  ();
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    private protected virtual bool    ​ ();
    internal virtual        ​ (    );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     : object {
    private double ;
    private double ;
    private     ;
    public double ();
    public void (double );
    public double ();
    public void (double );
    public     ();
    public void (    );
}
internal abstract class     :     {
    internal abstract virtual void    ​  ();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
public  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
public  ;
    [DebuggerBrowsableAttribute("0")]
public  ;
    [DebuggerBrowsableAttribute("0")]
public     ;
    [DebuggerBrowsableAttribute("0")]
public     ;
    [NullableContextAttribute("1")]
public    ( ,  , Nullable`1<> ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    public  FilterType { get; }
    internal    (    , int );
    public virtual  get_FilterType();
    internal virtual Stream    ​ ( , Stream , ​   );
    internal virtual bool    ​ ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static bool ;
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    private static    ();
    public virtual string    ​ ();
    public virtual string    ​ ();
    public virtual        ​ (Stream );
    public virtual bool    ​ ( );
    public virtual        ​ (    );
    public virtual Stream    ​ (Stream , double , double , double );
    private static MemoryStream (Bitmap , double , double , double , ImageFormat );
    public virtual bool    ​ (Stream , double , double , double , double , Stream& );
    private static bool (    , bool , int , int ,   );
    private static bool (    ,   );
    private static Color (    );
    private static SolidBrush (    );
    private static PointF[] (IList`1<   > );
    public virtual bool    ​ (    ,    & );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual        ​ ();
    public abstract virtual void    ​ (    );
    public abstract virtual string    ​ ();
    public abstract virtual bool    ​ ();
    public abstract virtual     ​ ();
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private [][] ;
    private [][][] ;
    public   { get; public set; }
    public  (int );
    public void (int ,  );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    public static     ;
    public static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal IList`1<ushort> ;
    public ushort  { get; }
    public    (IList`1<ushort> );
    private static    ();
    public static     (​   );
    public virtual ushort    ​ (int );
    internal static     (Stream , Nullable`1<int> );
    internal void (Stream );
}
[ExtensionAttribute]
internal static class     : object {
    [ExtensionAttribute]
[NullableContextAttribute("1")]
public static TFreezable (TFreezable );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static    [] ;
    private static    ();
    [ExtensionAttribute]
public static bool (PdfStandardFontName , String& , Boolean& , Boolean& );
    [ExtensionAttribute]
public static     (PdfStandardFontName );
    private static     (PdfStandardFontName );
    private static void (    , string , string ,    & );
    private static     (TextReader , bool , Dictionary`2& );
    private static void (TextReader );
    private static KeyValuePair`2<string, string> (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private     ;
    private    [] ;
    private     ;
    public    (    , Nullable`1<   > ,    [] );
    public void (   & );
    public virtual        ​ (    );
    public void (Double[] , Double[] );
    private static double (double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static [] ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal ​   Source { get; }
    private static    ();
    private    ( );
    internal sealed virtual ​   get_Source();
    internal sealed virtual     ​ ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    public Nullable`1<int> ();
    public void (Nullable`1<int> );
    internal static     ();
    internal     ();
    internal Stream ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    private protected    (    );
    public     ();
    public Stream ();
    public  ();
    public abstract virtual void    ​ (    , Action`1<ArraySegment`1<byte>> ,  ,     , ArrayPool`1<byte> );
    internal bool ();
    internal void (bool );
    public virtual void Dispose();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private static ​   ;
    public  FilterType { get; }
    [NullableContextAttribute("1")]
internal    (    , int );
    private static    ();
    public virtual  get_FilterType();
    internal  ();
    internal void ( );
    internal ​   ();
    private void (​   );
    public string ();
    public void (string );
    public  ();
    public void ( );
    internal virtual bool    ​ ();
    [NullableContextAttribute("1")]
internal virtual Stream    ​ ( , Stream , ​   );
    internal virtual bool    ​ ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
internal int ;
    internal    (int );
    private int ();
    public static int (    ,     );
    public static     (int );
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public int ();
    public virtual string ToString();
    private string (string , IFormatProvider );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    public static bool op_LessThan(    ,     );
    public static bool op_GreaterThan(    ,     );
    public static bool op_LessThanOrEqual(    ,     );
    public static bool op_GreaterThanOrEqual(    ,     );
    private sealed virtual override string    ​ (string , IFormatProvider );
    public static FontStretch op_Implicit(    );
    public static     op_Implicit(FontStretch );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private   [] ;
    [DebuggerBrowsableAttribute("0")]
private Char[] ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<char, byte> ;
    public    ( , string ,   [] , bool , Func`2<byte, Nullable`1<char>> ,    [] );
    public virtual bool    ​ ();
    public virtual     ​ ();
    internal virtual Char[]    ​ ();
    internal virtual       ​ (byte );
    internal virtual int    ​ (char );
    internal virtual bool    ​ (byte , Char& );
    public virtual bool    ​ (Byte[] , int , int );
    public virtual string ToString();
    internal     (Byte[] );
    private protected virtual string    ​ (Byte[] , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public    (    , double );
    public     ();
    public double ();
    internal void (   & );
    public sealed virtual int CompareTo(    );
    public virtual int GetHashCode();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual string ToString();
    public sealed virtual string ToString(string , IFormatProvider );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    public static GradientStop op_Explicit(    );
    public static     op_Explicit(GradientStop );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal      { get; internal set; }
    private static    ();
    private    ( );
    internal static     ();
    internal virtual void    ​ ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    public     ();
    internal void (    );
    internal     ();
    internal void (    );
    [NullableContextAttribute("2")]
internal     ();
    [NullableContextAttribute("2")]
internal void (    );
    internal virtual double    ​  ();
    private protected virtual        ​  ();
    protected virtual        ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal static    [] ;
    [DebuggerBrowsableAttribute("0")]
private static Boolean[] ;
    [DebuggerBrowsableAttribute("0")]
private static Boolean[] ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private Byte[]  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private Byte[]  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int>  ;
    private static    ();
    internal    (Stream );
    private void (MemoryStream& , int , int );
    [IteratorStateMachineAttribute("   /")]
internal static IEnumerable`1<   > (Stream , long , long );
    protected virtual int    ​ ();
    protected virtual void    ​ (int , Int32& , Int32& );
    protected virtual void    ​ (int , Double& , Double& );
    protected virtual     ​ (int );
    protected virtual    []    ​ (int );
    protected virtual Byte[]    ​ (int );
    [NullableContextAttribute("2")]
internal virtual        ​ ();
    [NullableContextAttribute("2")]
internal virtual        ​ (int );
    protected virtual void    ​ (int , Action`1<ArraySegment`1<byte>> ,  ,     ,  ​  , ArrayPool`1<byte> );
    internal virtual        ​ (int ,  );
    private sealed virtual override int    ​ ();
    private sealed virtual override int    ​ ();
    private sealed virtual override int    ​ ();
    private sealed virtual override double    ​ ();
    private sealed virtual override double    ​ ();
    private sealed virtual override Byte[]    ​ ();
    private sealed virtual override bool    ​ (int );
    private sealed virtual override Byte[]    ​ (Boolean& );
    private sealed virtual override void    ​ (    ,     , ArrayPool`1<byte> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal string   { get; internal set; }
    internal    ( );
    private static    ();
    [NullableContextAttribute("2")]
internal abstract virtual string    ​ ();
    [NullableContextAttribute("2")]
internal abstract virtual void    ​ (string );
    internal virtual Nullable`1<int>    ​ ();
    internal virtual void    ​ (Nullable`1<int> );
    public     ();
    private protected virtual        ​  ();
    private ​   ();
    private void (​   );
    internal string ();
    internal void (string );
    private ​   ();
    private void (​   );
    internal string ();
    internal void (string );
    private protected void  ();
    internal virtual void    ​ (    );
}
internal abstract class     : object {
    [NullableContextAttribute("1")]
public abstract virtual void    ​ (   );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual int    ​ ();
    public abstract virtual Nullable`1<long>    ​ ();
    public abstract virtual     ​ ();
    public abstract virtual     ​ ();
    public abstract virtual     ​ ();
    public abstract virtual ​      ​ ();
    public abstract virtual     ​ ();
    public abstract virtual ​      ​  ();
    public abstract virtual void    ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     : List`1<   <>> {
    public void ( ,  );
    public void ( ,  ,  );
    public void ( ,  ,     );
    public void ( ,  ,  ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    public  FilterType { get; }
    internal    (    , int );
    public virtual  get_FilterType();
    public string ();
    public  ();
    internal virtual Stream    ​ ( , Stream , ​   );
    internal virtual bool    ​ ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private string ;
    private string ;
    public    (string , string );
    [CompilerGeneratedAttribute]
public virtual string    ​ ();
    [CompilerGeneratedAttribute]
public virtual string    ​ ();
    public virtual bool    ​ ();
    public virtual        ​ (Stream );
    public virtual bool    ​ ( );
    public virtual        ​ (    );
    public virtual Stream    ​ (Stream , double , double , double );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual        ​ (    );
    public abstract virtual     ​ (    , ​  & , Int32& );
    public abstract virtual Byte[]    ​ (Stream );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private IList`1<double> ;
    [DebuggerBrowsableAttribute("0")]
public double  { get; }
    public    (byte , byte , byte , byte );
    public    (double , double , double , double );
    public    (    );
    private    (    , int );
    public    (    , double , IList`1<double> );
    public static     (int );
    public bool ();
    public     ();
    public double ();
    public bool ();
    public double (int );
    public bool (Byte& , Byte& , Byte& , Byte& );
    public int ();
    public bool (T& );
    public     (    ,  ​  );
    public     (Nullable`1<   > , double );
    public     (double );
    public     (double );
    public     (byte );
    public int (    );
    public     ( );
    private static byte (byte , double );
    public virtual int GetHashCode();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual string ToString();
    public sealed virtual string ToString(string , IFormatProvider );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    private static double (byte );
    internal static byte (double );
    public static Color op_Implicit(    );
    public static     op_Implicit(Color );
    public static Brush op_Explicit(    );
    public static     (Brush ,  );
    private static     (   [] ,     ,     ,  );
    public static SKColor op_Implicit(    );
    public static     op_Implicit(SKColor );
    public static Color op_Implicit(    );
    public static     op_Implicit(Color );
    public static Brush op_Explicit(    );
    public static     op_Explicit(Brush );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
internal   [] ;
    protected    (  [] );
    public     ();
    protected abstract virtual        ​ ();
    internal   [] ();
    public virtual int    ​ (  & modreq(System.Runtime.InteropServices.InAttribute) );
}
internal static class     : object {
    public static bool ;
    public static bool ;
    private static    ();
    private static bool ();
    private static bool ();
    private static bool ();
    private static bool ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    <  > {
    private     ;
    public    (    ,   [] , IDictionary`2<  ,   > );
    public     ();
    internal static     (​   );
    protected virtual    <  >    ​ ();
    [NullableContextAttribute("0")]
internal void (byte ,   <char> ,    );
    [NullableContextAttribute("0")]
internal void (byte , byte ,   <char> ,    );
    [NullableContextAttribute("0")]
internal bool (byte , byte ,   <char> ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    public static     ;
    protected static     ;
    private static     ;
    private static    ();
    public static     (    , Nullable`1<   > );
    public virtual        ​ (    );
    private static double (double );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual int    ​ (int );
    public abstract virtual int    ​ (string );
    public abstract virtual int    ​ (string , Byte[] , int );
    public abstract virtual string    ​ (Byte[] , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    private protected    (    );
    protected abstract virtual IDictionary`2<,    <, >>    ​ ();
    protected abstract virtual int    ​ ( );
    protected abstract virtual void    ​ (    , ArraySegment`1<byte> ,  ,  ,  );
    public sealed virtual void    ​ (    , Action`1<ArraySegment`1<byte>> ,  ,     , ArrayPool`1<byte> );
    private    <> ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    public  FilterType { get; }
    internal    (    , int );
    private static    ();
    public virtual  get_FilterType();
    public Nullable`1<bool> ();
    public void (Nullable`1<bool> );
    internal virtual Stream    ​ ( , Stream , ​   );
    internal virtual bool    ​ ( );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Uri ;
    private static Char[] ;
    private static Char[] ;
    private static    ();
    internal static void ();
    private static Uri ();
    [ExtensionAttribute]
internal static bool (Uri );
    [ExtensionAttribute]
internal static bool (Uri , Boolean& , String& );
    [ExtensionAttribute]
private static bool (Uri , String& );
    [ExtensionAttribute]
private static bool (Uri , String& );
    [ExtensionAttribute]
internal static bool (Uri , String& , String& );
    internal static Uri (string );
    internal static Uri (string , string , string );
    internal static string (Uri , string , string );
    internal static Uri (string );
    internal static string (string , bool );
    [ExtensionAttribute]
private static string (Uri );
    internal static string (string , bool );
    [ExtensionAttribute]
private static string (Uri );
    private static bool (string );
    [ExtensionAttribute]
internal static bool (Uri );
    internal static bool (string );
    [ExtensionAttribute]
internal static Uri (Uri , String& );
    internal static string (Uri& );
    [ExtensionAttribute]
internal static string (Uri );
    [ExtensionAttribute]
internal static Uri (Uri );
    internal static bool (string );
    internal static string (string , string );
    private static string (string );
}
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private byte ;
    [DebuggerBrowsableAttribute("0")]
private char ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public    (byte , char , int );
    [IsReadOnlyAttribute]
public byte ();
    [IsReadOnlyAttribute]
public char ();
    [IsReadOnlyAttribute]
public int ();
}
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
public UInt32 ;
    [DebuggerBrowsableAttribute("0")]
public UInt32 ;
    [DebuggerBrowsableAttribute("0")]
public UInt32 ;
    [DebuggerBrowsableAttribute("0")]
public UInt32 ;
    [DebuggerBrowsableAttribute("0")]
public UInt32 ;
    [DebuggerBrowsableAttribute("0")]
public UInt32 ;
    [DebuggerBrowsableAttribute("0")]
public UInt32 ;
    [DebuggerBrowsableAttribute("0")]
public UInt32  ;
    [DebuggerBrowsableAttribute("0")]
public UInt32  ;
    [DebuggerBrowsableAttribute("0")]
public UInt32  ;
    [DebuggerBrowsableAttribute("0")]
public UInt32  ;
    [DebuggerBrowsableAttribute("0")]
public UInt32  ;
    [DebuggerBrowsableAttribute("0")]
public UInt32  ;
    [DebuggerBrowsableAttribute("0")]
public UInt32  ;
    [DebuggerBrowsableAttribute("0")]
public UInt32  ;
    [DebuggerBrowsableAttribute("0")]
public UInt32  ;
    [DebuggerBrowsableAttribute("0")]
public UInt32  ;
    [DebuggerBrowsableAttribute("0")]
public UInt32  ;
    [DebuggerBrowsableAttribute("0")]
public UInt32  ;
    [DebuggerBrowsableAttribute("0")]
public UInt32  ;
    [DebuggerBrowsableAttribute("0")]
public UInt32  ;
    [NullableContextAttribute("1")]
public    (Byte[] );
    public  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<Type, > ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    public  FilterType { get; }
    private protected    (    , int );
    private static    ();
    internal static  (Type );
    internal static     ( ,     , int );
    public abstract virtual  get_FilterType();
    internal     ();
    internal int ();
    internal ​   ();
    internal  ();
    private protected  ();
    internal abstract virtual bool    ​ ( );
    internal abstract virtual Stream    ​ ( , Stream , ​   );
    internal virtual bool    ​ ();
    private protected Exception ( );
    private protected  (& );
    private protected void ();
    public sealed virtual bool Equals(object );
    private bool (    );
    public sealed virtual int GetHashCode();
    public sealed virtual string ToString();
    private protected static Stream ( , Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private ArrayPool`1<byte> ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public    (    , ArrayPool`1<byte> );
    [CompilerGeneratedAttribute]
public sealed virtual        ​ ();
    private void (    );
    public sealed virtual bool    ​ (TBitmapFrame& );
    public sealed virtual        ​ ();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public string  { get; }
    internal    (string );
    internal    (string , string );
    private static    ();
    [IsReadOnlyAttribute]
public string ();
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
public string ();
    public virtual string ToString();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
internal class     : Exception {
    [NullableContextAttribute("1")]
public    (string , Exception );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    private     ;
    [NullableAttribute("2")]
private ​   ;
    private DateTimeOffset ;
    [NullableAttribute("2")]
protected ​     { get; private set; }
    internal    (    , ​   );
    protected     ();
    protected     ();
    [NullableContextAttribute("2")]
protected ​   ();
    [NullableContextAttribute("2")]
private void (​   );
    protected DateTimeOffset ();
    private void (DateTimeOffset );
    protected sealed virtual void    ​ ();
    protected virtual void    ​ ();
    protected virtual void    ​ ();
    private ​   ();
    [ConditionalAttribute("DEBUG")]
protected abstract virtual void    ​  ();
    [ConditionalAttribute("DEBUG")]
protected abstract virtual void    ​  ();
    protected sealed virtual void    ​ ();
    protected virtual void    ​  ();
    protected  (​  & , Int32& );
    private void  ();
    protected static IList`1<​  > (    , ​   , IEnumerable`1<​  > ,     , ICollection`1& );
    protected void (IEnumerable`1<​  > , ​   , IList`1<​  > );
    protected static void ( ,  , ​   );
    protected static int (IEnumerable`1<​  > , int );
    protected static ICollection`1<> (IEnumerable`1<​  > , ​   ,     , int );
    private static ​   (​   , int , Dictionary`2<int, ​  > ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static void (Byte[] , int , int , int , int );
    public static void (Byte[] , int , int , int , int );
    public static void (Byte[] , int , int , int , int );
    public static void (Byte[] , int , Byte[] , int , int , int , int );
    public static void (Byte[] , int , Byte[] , int , int , int , int );
    public static void (Byte[] , int , Byte[] , int , int , int , int );
    public static void (Byte[] , int , Byte[] , int , int , int , int );
    private static void (Byte& , Byte& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    private     ;
    internal    (Uri , Stream ,     );
    internal    (string ,     );
    private    (​   ,     );
    internal static     (string ,     );
    internal static     (Stream ,     );
    protected internal     ();
    private void (    );
    protected sealed virtual ​      ​ ();
    protected virtual ​      ​ ();
    protected virtual void    ​ ();
    private void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private bool ;
    public    (bool );
    private static bool (    ,   );
    private static bool (    , bool ,  );
    private static bool (    , bool , int , int ,  );
    private static PathGeometry (IList`1<   > );
    private static Color (    );
    private static SolidColorBrush (    );
    public virtual bool    ​ (    ,    & );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
    public virtual string    ​ ();
    public virtual string    ​ ();
    public virtual bool    ​ ();
    public virtual        ​ (Stream );
    internal static     (IList`1<BitmapFrame> );
    public virtual bool    ​ ( );
    public virtual        ​ (    );
    public virtual Stream    ​ (Stream , double , double , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [NullableAttribute("2")]
public string   { get; public set; }
    [NullableAttribute("2")]
public       { get; public set; }
    internal    (    );
    public double ();
    public void (double );
    public  ();
    public void ( );
    public     ();
    public void (    );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    public     ();
    public void (    );
    public double ();
    public void (double );
    public      ();
    public void (    );
    internal      ();
    internal void (    );
    public   ();
    public void ( );
    public   ();
    public void ( );
    public bool  ();
    public void (bool );
    public bool  ();
    public void (bool );
    public      ();
    public void (    );
    [NullableContextAttribute("2")]
public string  ();
    [NullableContextAttribute("2")]
public void (string );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
public void (    );
    [NullableContextAttribute("2")]
public string ( );
    public void ( , string );
    [NullableContextAttribute("2")]
public     ( );
    public void ( ,     );
    public     (    ,  );
    private protected virtual void    ​ ​();
    private void ( ,     ,     ,     );
    private     (string );
    private static     ( , double );
    private static     ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private     ;
    private Nullable`1<double> ;
    private     ;
    public    (    , Nullable`1<   > , Nullable`1<double> );
    public virtual        ​ (    );
    public void (Double[] , Double[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    public    (int ,  );
    [IsReadOnlyAttribute]
public int ();
    [IsReadOnlyAttribute]
public  ();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static     ( ​  );
    [ExtensionAttribute]
public static bool ( ​  ,  ​  );
    [ExtensionAttribute]
public static int ( ​  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private static    ();
    private    ( );
    internal    (    ,     ,     ,     ,     ,     );
    internal static     ();
    internal virtual void    ​ ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    private protected virtual        ​  ();
    protected virtual        ​  ();
}
internal class     :     {
    private     ;
    public    (    );
    public virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    public static     ();
    public static     ();
    public static     ();
    public static     ();
    internal static     ();
    internal static bool (string );
    internal static bool (Byte[] , int , int );
    internal static bool (Byte[] , int , int );
    private protected abstract virtual bool    ​ ();
    private protected abstract virtual int    ​ (int );
    private protected abstract virtual int    ​ (string );
    private protected abstract virtual int    ​ (string , Byte[] , int );
    private protected abstract virtual string    ​ (Byte[] , int , int );
    public virtual int    ​ (int );
    public virtual int    ​ (string );
    public virtual int    ​ (string , Byte[] , int );
    public virtual string    ​ (Byte[] , int , int );
    private sealed virtual override int    ​ (int );
    private sealed virtual override int    ​ (string );
    private sealed virtual override int    ​ (string , Byte[] , int );
    private sealed virtual override string    ​ (Byte[] , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
public  ;
    [DebuggerBrowsableAttribute("0")]
public     ;
    [DebuggerBrowsableAttribute("0")]
public     ;
    public    ( ,     );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    public  FilterType { get; }
    internal    (    , int );
    public virtual  get_FilterType();
    private ​   ();
    private void (​   );
    public int ();
    public void (int );
    public  ();
    public void ( );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    internal virtual Stream    ​ ( , Stream , ​   );
    internal virtual bool    ​ ( );
    internal virtual bool    ​ ();
}
[ExtensionAttribute]
internal static class     : object {
    [ExtensionAttribute]
[NullableContextAttribute("1")]
public static bool (string , & );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    internal    (​   );
    public    (PdfStandardFontName );
    public    (string );
    public    (    , ​   );
    internal ​   ();
    internal ​   ();
    internal bool ();
    internal ​   ();
    internal ​   ();
    internal     ();
    public PdfStandardFontName ();
    internal     (int );
    public virtual string ToString();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public    (double , bool , bool );
    public virtual     ​ ();
    public bool ();
    internal     (   & ,  , & );
    internal virtual void    ​ (   & );
    public virtual bool Equals(    );
    public bool (    );
    public virtual string    ​ (string , IFormatProvider );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static [] ;
    private static    ();
    private    ( );
    internal    (    ,     ,     ,     ,     ,     );
    internal static     ();
    internal virtual void    ​ ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    private protected virtual        ​  ();
    protected virtual        ​  ();
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual int    ​ ();
    public abstract virtual     ​ ();
    public abstract virtual int    ​ ();
    public abstract virtual int    ​ ();
    public abstract virtual double    ​ ();
    public abstract virtual double    ​ ();
    public abstract virtual Byte[]    ​ ();
    public abstract virtual bool    ​ (int );
    public abstract virtual Byte[]    ​ (Boolean& );
    public abstract virtual void    ​ (    ,     , ArrayPool`1<byte> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [NullableAttribute("2")]
private protected object   { get; private protected set; }
    [NullableAttribute("2")]
public string   { get; public set; }
    private protected    ( );
    private static    ();
    private protected virtual void    ​ (    );
    public     ();
    private protected sealed virtual        ​  ();
    [NullableContextAttribute("2")]
private protected sealed virtual object    ​  ();
    [NullableContextAttribute("2")]
private protected sealed virtual void    ​ (object );
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
public void (string );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    internal ​   ();
    internal void (​   );
    internal ​   ();
    internal void (​   );
    private protected abstract virtual bool    ​ ();
    private protected virtual bool    ​ (bool );
    private ​   ( ​  );
    private void ( ​  );
    internal void (​   );
    [IteratorStateMachineAttribute("   /")]
private protected virtual IEnumerable`1<​  >    ​  ();
    private void (    );
    internal virtual void    ​ (    );
    [DebuggerHiddenAttribute]
private IEnumerable`1<​  >  ();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    public     ();
    public void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    protected      { get; }
    internal    (​   ,  , bool );
    public virtual     ​ ();
    public virtual ​      ​  ();
    protected virtual        ​  ();
    public     ();
    internal virtual ICollection`1<​  >    ​  ();
    internal virtual        ​ ();
    protected virtual     ​  ();
    protected virtual        ​  ();
    protected virtual void    ​  ();
    private static ​   (    , ​   );
    protected virtual long    ​ (​   );
    internal void (​   );
    protected virtual ​      ​ (int );
    internal virtual ​      ​ (    , ​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class     : Dictionary`2<,    <>> {
    public void ( ,  );
    public void ( ,  ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static Int32[] ;
    public  FilterType { get; }
    internal    (    , int );
    private static    ();
    public virtual  get_FilterType();
    private ​   ();
    private void (​   );
    public int ();
    public void (int );
    public  ();
    public void ( );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public bool ();
    public void (bool );
    internal virtual Stream    ​ ( , Stream , ​   );
    internal virtual bool    ​ ( );
    internal virtual bool    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    public virtual string    ​ ();
    public virtual string    ​ ();
    public virtual        ​ (Stream );
    public virtual bool    ​ ( );
    public virtual        ​ (    );
    public virtual Stream    ​ (Stream , double , double , double );
    public virtual bool    ​ (    ,    & );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual        ​ ();
    public abstract virtual        ​ ();
}
internal static class     : object {
    [NullableAttribute("1")]
private static Byte[] ;
    private static    ();
    public static void (double , double , double , double , Double& , Double& , Double& );
    public static void (byte , byte , byte , byte , Byte& , Byte& , Byte& );
    private static void (int , int , int , int , Int32& , Int32& , Int32& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    internal ​   Source { get; }
    private static    ();
    private    ( );
    internal sealed virtual ​   get_Source();
    internal sealed virtual     ​ ();
    internal static     (string , string , int );
    private     ();
    private void (    );
    private     ();
    private void (    );
    private ​   ();
    private void (​   );
    public string ();
    private void (string );
    public string ();
    private void (string );
    public int ();
    private void (int );
    internal  ();
    internal bool (    );
    internal      ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    public    ( );
    public double ();
    public double ();
    public double ();
    public  (   , double ,     ,     ,     ,     ,     ,   ,   , double  , double  );
    public     (   , double ,     ,     ,     ,     ,     );
    public     (string );
    public     ();
    public     (double );
    public     (string ,    , double ,     ,     ,     ,     ,      ,   );
    public     (    ,     , double );
    internal double (string ,     );
    internal     (string ,     ,    );
    internal     (string ,     ,     ,     ,    , Double& );
    public sealed virtual void Dispose();
    public virtual string ToString();
    internal void (    ,     , double );
    private void ();
    private sealed virtual override        ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private     ;
    private Dictionary`2<char, double> ;
    private     ;
    private     ;
    public    (    , Dictionary`2<char, double> ,     ,     );
    public     ();
    public Dictionary`2<char, double> ();
    public     ();
    public     ();
    public     ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
public double ;
    [DebuggerBrowsableAttribute("0")]
public double ;
    [DebuggerBrowsableAttribute("0")]
public double ;
    public    (double , double , double );
    public    (IList`1<double> );
    public static Nullable`1<   > (IList`1<double> );
    public bool ();
    public void (    ,     ,     );
    public void ();
    private static void (Double& ,     );
    public void (    );
    public virtual string ToString();
    public virtual int GetHashCode();
    public virtual bool Equals(object );
    public sealed virtual bool Equals(    );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    public static     op_Multiply(double ,     );
    public static     op_Addition(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private   <   > ;
    internal ​   Source { get; }
    private static    ();
    private    ( );
    internal sealed virtual ​   get_Source();
    internal sealed virtual     ​ ();
    internal static     ();
    internal static     (    );
    internal void ();
    internal virtual void    ​ ();
    internal sealed virtual     ​  ();
    internal sealed virtual void    ​ ( );
    public     ();
    internal void (    );
    public     ();
    internal void (    );
    public int ();
    internal void (int );
    private ​   ();
    internal     ();
    internal      ();
    internal      ();
    internal      ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected HashSet`1<<>>   { get; }
    private protected    (Stream ,  );
    protected abstract virtual IDictionary`2<, >    ​ ();
    protected abstract virtual    <, >    ​ ();
    protected abstract virtual HashSet`1<<>>    ​ ();
    protected abstract virtual     ​ (int );
    protected sealed virtual     ​ (int );
    protected abstract virtual int    ​ ( );
    protected abstract virtual bool    ​ (int , ArraySegment`1<byte> ,  ,  ​  , ArrayPool`1<byte> );
    protected sealed virtual void    ​ (int , Action`1<ArraySegment`1<byte>> ,  ,     ,  ​  , ArrayPool`1<byte> );
    private bool (int ,    <> ,  ,  ,     ,  ​  , ArrayPool`1<byte> , int  , int  , Int32&  , Byte[]&  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    public  FilterType { get; }
    internal    (    , int );
    private static    ();
    public virtual  get_FilterType();
    public int ();
    public void (int );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    public int ();
    public void (int );
    public int ();
    public void (int );
    public bool ();
    public void (bool );
    public bool  ();
    public void (bool );
    public int ();
    public void (int );
    internal virtual Stream    ​ ( , Stream , ​   );
    internal virtual bool    ​ ( );
    internal virtual bool    ​ ();
    private bool  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    private  ​  ;
    private bool ;
    private bool ;
    private bool ;
    private int ;
    private int ;
    protected    ( ​  , bool , bool , bool );
    public  ​  ();
    public bool ();
    public bool ();
    public bool ();
    internal int ();
    internal void (int );
    internal int ();
    internal void (int );
    public abstract virtual        ​ (object );
}
[ExtensionAttribute]
internal static class     : object {
    [ExtensionAttribute]
public static bool ( );
    [ExtensionAttribute]
public static  ( , bool );
    [ExtensionAttribute]
public static bool ( ,  );
    [ExtensionAttribute]
public static bool ( ,  );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private    [] ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
public      { get; }
    public    (    ,     , double , bool );
    public    (   [] , double , bool , bool );
    public    (    ,     );
    public    (   [] ,     );
    public     ();
    public virtual bool    ​ ();
    public virtual     ​ ();
    public sealed virtual int    ​ ();
    public virtual Double[]    ​ ();
    public virtual bool    ​ ();
    public virtual bool    ​ ();
    public virtual        ​ (Nullable`1<   > , double );
    public     (double );
    internal     ();
    public  ();
    public int ();
    public     (int );
    internal virtual bool    ​ (bool , Boolean& );
    internal virtual        ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,  , & modreq(System.Runtime.InteropServices.InAttribute) );
    internal     ();
    internal virtual void    ​ (   & );
    public virtual bool Equals(    );
    public bool (    );
    public virtual string ToString(string , IFormatProvider );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private   <   > ;
    private static    ();
    private    ( );
    internal    (    ,     , ​   ,     );
    internal static     ();
    internal virtual void    ​ ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    private ​   ();
    private void (​   );
    private ​   ();
    private void (​   );
    internal virtual bool    ​ ();
    internal virtual bool    ​ ();
    internal virtual        ​  ();
    internal     ();
    internal     ();
    internal      ();
    private     ();
    private     ();
    private      ();
    private protected virtual        ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    public    (long , int ,  , long );
    public long ();
    public int ();
    public  ();
    public long ();
    public void (long , Stream , Int64& , Int64& );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    private protected object  { get; private protected set; }
    private static    ();
    internal    ( );
    internal static     (    );
    private protected virtual void    ​ (    );
    public virtual     ​  ();
    public     ();
    private protected virtual        ​  ();
    public  ();
    public void ( );
    private protected virtual object    ​  ();
    private protected virtual void    ​ (object );
    internal virtual        ​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private ushort ;
    private  ;
    [NullableAttribute("2")]
private    [] ;
    private byte ;
    private IList`1<string> ;
    [NullableAttribute("2")]
public    []  { get; public set; }
    public ushort ();
    public void (ushort );
    public  ();
    public void ( );
    [NullableContextAttribute("2")]
public    [] ();
    [NullableContextAttribute("2")]
public void (   [] );
    public byte ();
    public void (byte );
    public IList`1<string> ();
    public void (IList`1<string> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private static Predicate`1<​  > ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    private ​    ;
    private   ;
    private long  ;
    private int  ;
    private bool  ;
    [NullableAttribute("2")]
public ​     { get; }
    [NullableAttribute("2")]
public       { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
protected       { get; }
    [NullableAttribute("2")]
public       { get; }
    [NullableAttribute("2")]
protected    { get; }
    internal    (​   ,  );
    private static    ();
    internal static     (long , ​   );
    public abstract virtual     ​ ();
    public ​   ();
    public ​   ();
    internal     ();
    internal virtual        ​ ();
    protected ​   (long , ​   , bool );
    internal void (​   );
    internal abstract virtual ​      ​ (    , ​   );
    internal     ();
    public ​    ();
    public   ();
    private void ( );
    [NullableContextAttribute("2")]
public abstract virtual ​      ​  ();
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
protected abstract virtual        ​  ();
    public long  ();
    protected void (long );
    internal abstract virtual ICollection`1<​  >    ​  ();
    internal int  ();
    private void (int );
    public bool  ();
    public int  ();
    public bool  ();
    private void (bool );
    [NullableContextAttribute("2")]
public     ();
    public long  ();
    protected void (long );
    public long  ();
    protected void (long );
    internal long  ();
    internal void (Int64& , Int64& );
    [NullableContextAttribute("2")]
protected virtual     ​  ();
    protected abstract virtual        ​  ();
    protected abstract virtual void    ​  ();
    protected abstract virtual long    ​ (​   );
    public void  ();
    public void (​   );
    protected abstract virtual ​      ​ (int );
    internal ​   (int );
    [IteratorStateMachineAttribute("   /")]
internal IEnumerable`1<​  >  ();
    [IteratorStateMachineAttribute("   /")]
internal IEnumerable`1<int>  ();
    [NullableContextAttribute("2")]
internal void (    );
    private void  ();
    private      ();
    protected void (int );
    private void  ();
}
[ExtensionAttribute]
internal static class     : object {
    [NullableAttribute("1")]
private static [] ;
    private static    ();
    [ExtensionAttribute]
public static int ( );
    [ExtensionAttribute]
public static  ( );
    [ExtensionAttribute]
public static  ( );
    [ExtensionAttribute]
public static bool ( );
    [ExtensionAttribute]
public static bool ( );
    [ExtensionAttribute]
public static bool ( );
    public static int (int , int );
    [ExtensionAttribute]
public static int ( , int );
    [ExtensionAttribute]
private static  ( );
    public static  (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    public  FilterType { get; }
    internal    (    , int );
    public virtual  get_FilterType();
    internal virtual Stream    ​ ( , Stream , ​   );
    internal virtual bool    ​ ( );
    internal static ArraySegment`1<byte> (Stream , ArrayPool`1<byte> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    public abstract virtual string    ​ ();
    public abstract virtual string    ​ ();
    public virtual bool    ​ ();
    public abstract virtual        ​ (Stream );
    public abstract virtual bool    ​ ( );
    public abstract virtual        ​ (    );
    public abstract virtual Stream    ​ (Stream , double , double , double );
    public virtual bool    ​ (Stream , double , double , double , double , Stream& );
    public virtual bool    ​ (    ,    & );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
    private protected static bool (int , int , double , double , double , Int32& , Int32& , Double&  );
    protected void (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private     ;
    internal    ( , Stream );
    private    ( , ​   );
    private static     ();
    protected virtual     ​ ();
    protected virtual ​      ​ ();
    protected virtual        ​  ();
}
internal static class     : object {
    public static bool (double );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Dictionary`2<int, double> ;
    public double  { get; }
    public    (Dictionary`2<int, double> );
    internal int ();
    public double (int );
    internal void (int , double );
    internal Nullable`1<double> ();
    internal ​   ();
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual        ​ ();
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private Double[] ;
    [DebuggerBrowsableAttribute("0")]
private byte ;
    [DebuggerBrowsableAttribute("0")]
private byte ;
    [DebuggerBrowsableAttribute("0")]
private byte ;
    public double  { get; }
    public    (byte , byte , Double[] );
    public byte ();
    public byte ();
    internal byte ();
    public double (byte );
    internal void (byte , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private Double[] ;
    public    (Double[] );
    public static     (IList`1<double> );
    public bool ();
    public bool ();
    public virtual string ToString();
    public virtual int GetHashCode();
    public virtual bool Equals(object );
    public sealed virtual bool Equals(    );
    private static void (Double[] , Double[] , Double[] );
    private static     (Double[] ,     );
    private static     (    , Double[] );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    public static     op_Multiply(    ,     );
    public static     op_Multiply(    ,     );
    public static     op_Multiply(    ,     );
}
[AttributeUsageAttribute("256")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : Attribute {
    [DebuggerBrowsableAttribute("0")]
private String[] ;
    public    (string , string , string , string );
    public    (string );
    public IList`1<string> ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [NullableAttribute("2")]
public       { get; }
    public static     (int , int ,  ,    <byte> ,    [] , Byte[] , double , double  ,      );
    public abstract virtual        ​ ();
    public abstract virtual int    ​ ();
    public abstract virtual int    ​ ();
    public abstract virtual double    ​ ();
    public abstract virtual double    ​ ();
    public abstract virtual     ​ ();
    public abstract virtual    []    ​ ();
    public abstract virtual Byte[]    ​  ();
    [NullableContextAttribute("2")]
public abstract virtual        ​  ();
    public abstract virtual void    ​ (Action`1<ArraySegment`1<byte>> ,  ,     ,  ​  , ArrayPool`1<byte> );
    public     (bool ,  ,     ,  ​  , ArrayPool`1<byte> );
    public     (Nullable`1<int> , Nullable`1<int> , Nullable`1<> ,    <byte> );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    public  FilterType { get; }
    internal    (    , int );
    public virtual  get_FilterType();
    internal virtual Stream    ​ ( , Stream , ​   );
    internal virtual bool    ​ ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
internal int ;
    [DebuggerBrowsableAttribute("0")]
private static FontStyle[] ;
    internal    (int );
    private static    ();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public virtual string ToString();
    private string (string , IFormatProvider );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    private sealed virtual override string    ​ (string , IFormatProvider );
    public static FontStyle op_Implicit(    );
    public static     op_Implicit(FontStyle );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private   <   > ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private   <   >  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private   <   >  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private   <   >  ;
    private protected    ( );
    internal    (    ,     ,     ,     ,     ,     );
    private static    ();
    internal sealed virtual bool    ​ ();
    internal sealed virtual bool    ​ ();
    internal ​   ();
    internal void (​   );
    private byte ();
    private void (byte );
    private byte ();
    private void (byte );
    private ​   ();
    private void (​   );
    private      ();
    private void (    );
    internal ​    ();
    internal void (​   );
    private bool ();
    private bool ();
    private bool ();
    internal      ();
    internal sealed virtual        ​  ();
    internal      ();
    internal      ();
    private      ();
    private static     (    , Dictionary`2<char, double> ,     );
    internal void  ();
    private      ();
    private      ();
    internal void (    );
    protected abstract virtual        ​  ();
    internal    (byte );
    private ​   (​   );
}
internal static class     : object {
    public static int (int );
    public static int (int );
}
internal class     :     {
    [NullableContextAttribute("1")]
internal    (string , int );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual        ​ ();
    public abstract virtual        ​ ();
    public abstract virtual bool    ​ (TBitmapFrame& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal ​     { get; internal set; }
    private protected    ( );
    private static    ();
    private protected virtual void    ​ (    );
    public     ();
    public int ();
    public void (int );
    public Nullable`1<   > ();
    public void (Nullable`1<   > );
    internal bool ();
    internal void (bool );
    public bool ();
    public void (bool );
    internal ​   ();
    internal void (​   );
    [NullableContextAttribute("2")]
internal ​    ();
    [NullableContextAttribute("2")]
internal void (​   );
    internal void (int );
    internal void (int );
    internal void (int );
    [IteratorStateMachineAttribute("   /")]
internal IEnumerable`1<int>  ();
    internal int (int );
    internal int ();
    internal void (int );
    internal void (int );
    internal void  ();
    internal bool  (int );
    internal int  (int );
    internal bool  (int );
    internal void (int , bool );
    internal void  ();
    private protected abstract virtual void    ​ (int , bool );
    private protected abstract virtual void    ​  ();
    private protected abstract virtual void    ​  ();
    internal void  ();
    private int (string );
    internal string  (int );
    private void (    );
    internal virtual void    ​ (    );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private Dictionary`2<,   > ;
    public     { get; }
    public    (IEnumerable`1<  > );
    public    ( );
    public sealed virtual void    ​ (   );
    protected virtual     ​ (   );
    protected virtual    <>    ​ ();
    public    <> ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    internal ​   Source { get; }
    internal    ( , ​   );
    internal    (    );
    private static    ();
    internal virtual ​   get_Source();
    internal virtual     ​ ();
    private protected virtual bool    ​ ();
    internal virtual ​      ​  ();
    public sealed virtual     ​ ();
    internal void ( );
    internal void (int );
    internal virtual void    ​  ();
    public virtual string ToString();
    private sealed virtual override int    ​ ();
    private sealed virtual override Nullable`1<long>    ​ ();
    private sealed virtual override     ​ ();
    private sealed virtual override     ​ ();
    private sealed virtual override ​      ​  ();
    private sealed virtual override     ​ ();
    private sealed virtual override ​      ​ ();
    private sealed virtual override void    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static     ;
    internal static    [] ;
    internal static      ;
    internal static      ;
    internal static      ;
    internal static      ;
    private    []  ;
    internal    (   [] );
    private static    ();
    private static     (bool );
    private static     ();
    private static     ();
    public TOutput (Stream , TParam , Func`3<   , TParam, TOutput> );
    public     (Stream );
    public void (    , TInput , Action`2<   , TInput> );
    public Stream (Stream , double , double , double );
    public Stream (Stream , double , double , double , double );
    public Stream (Stream ,     , double , double , double , Nullable`1<int> , ArrayPool`1<byte> );
    public Stream (Stream ,  );
    public     (Stream );
    public     (    );
    public void (    );
    public void (    );
    public void (    );
    public void (    );
    public void (    );
    public void (    );
    public void (    );
    private static Stream (    , ValueTuple`4<   ,    , ArrayPool`1<byte>,    > );
    private static     (int );
    private static bool (int , int ,     , Int32& , Int32& ,  ​ & , Int32& , Int32&  , Int32&  , Int32&  );
    private static bool (Int32& , Int32& );
    private TResult (Func`2<   ,  <TResult>> , string );
    [IteratorStateMachineAttribute("   / ")]
private IEnumerable`1<   > (TOptions );
    private void (TOptions , Func`2<   ,  <TOptions>> , string );
    private TResult (TOptions , Func`2<   ,  <TOptions, TResult>> , string );
    private void (Exception[] , string );
    private T (Exception[] , string );
    [NullableContextAttribute("0")]
private MemoryStream (    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    private ​   ;
    private protected    (​   );
    public ​   ();
    public void ();
    protected virtual bool    ​ ();
    protected virtual void    ​ ();
    protected abstract virtual ​      ​ ();
    protected abstract virtual ​      ​ ();
    protected abstract virtual        ​  ();
    protected virtual void    ​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<, > ;
    [DebuggerBrowsableAttribute("0")]
private static    <, > ;
    private static    ();
    private static bool (    , bool , bool , int , int , Func`5<SKCanvas, SKBitmap, SKPaint, SKRect, bool> );
    private static SKColor (    );
    private static SKPath (IList`1<   > );
    public virtual bool    ​ (    ,    & );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
    public virtual bool    ​ (    );
    public virtual string    ​ ();
    public virtual string    ​ ();
    public virtual        ​ (Stream );
    public virtual bool    ​ ( );
    public virtual        ​ (    );
    public virtual Stream    ​ (Stream , double , double , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    private protected    (    );
    private protected virtual        ​ ();
    public int ();
    public void (int );
    internal sealed virtual        ​  ();
    internal sealed virtual void    ​ (    );
    internal sealed virtual Nullable`1<int>    ​  ();
    internal sealed virtual void    ​ (Nullable`1<int> );
}
internal abstract class     : object {
    private static     ;
    private static     ;
    private static    ();
    protected static     (    ,     );
    public abstract virtual        ​ (    );
}
internal class     : object {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
public static     ;
    private static    ();
    public int (  & ,   & );
    public sealed virtual int Compare(   ,    );
    public int (  & ,   & );
    private sealed virtual override int    ​ (  & modreq(System.Runtime.InteropServices.InAttribute) ,   & modreq(System.Runtime.InteropServices.InAttribute) );
    private sealed virtual override int    ​ (  & modreq(System.Runtime.InteropServices.InAttribute) ,   & modreq(System.Runtime.InteropServices.InAttribute) );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    public static DependencyProperty ;
    private static    ();
    [ExtensionAttribute]
public static Nullable`1<   > (Brush );
    [ExtensionAttribute]
public static void (Brush , Nullable`1<   > );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [DebuggerBrowsableAttribute("0")]
private static   [] ;
    [DebuggerBrowsableAttribute("0")]
private static   [] ;
    private static    [] ;
    private static    ();
    public static   [] ();
    public static   [] ();
    [ExtensionAttribute]
public static     ( );
    public static     (​   , ​   );
    private static     ( );
}
internal class     :     {
    private static     ;
    private static     ;
    private     ;
    private double ;
    private     ;
    public    (    ,     );
    private static    ();
    public virtual        ​ (    );
}
[NullableContextAttribute("1")]
internal interface     {
    public abstract virtual int    ​ (int );
    public abstract virtual int    ​ (string );
    public abstract virtual int    ​ (string , Byte[] , int );
    public abstract virtual string    ​ (Byte[] , int , int );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static String[] ;
    private static [] ;
    private static String[] ;
    private static [] ;
    private static    ();
    [ExtensionAttribute]
public static string ( );
    [ExtensionAttribute]
public static bool ( , & );
    [ExtensionAttribute]
public static string ( );
    public static  (int );
    [ExtensionAttribute]
public static bool ( );
}
[DefaultMemberAttribute("Item")]
[ComVisibleAttribute("False")]
[DebuggerTypeProxyAttribute("GemBox.Collections.EnumerableDebugView`1")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private protected ​     { get; private protected set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private protected ​     { get; private protected set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal       { get; }
    public int Count { get; }
    public     Item { get; public set; }
    private static    ();
    [NullableContextAttribute("2")]
private protected abstract virtual ​      ​ ();
    [NullableContextAttribute("2")]
private protected abstract virtual void    ​ (​   );
    [NullableContextAttribute("2")]
private protected abstract virtual ​      ​ ();
    [NullableContextAttribute("2")]
private protected abstract virtual void    ​ (​   );
    [NullableContextAttribute("2")]
internal     ();
    internal bool ();
    internal Stream (Stream ,  , ​   , Predicate`1<   > );
    public     ( );
    public TPdfFilter ();
    public sealed virtual int get_Count();
    public sealed virtual     get_Item(int );
    public sealed virtual void set_Item(int ,     );
    public sealed virtual void Insert(int ,     );
    public sealed virtual void Add(    );
    public sealed virtual void RemoveAt(int );
    public sealed virtual int IndexOf(    );
    public sealed virtual bool Remove(    );
    public sealed virtual void Clear();
    public sealed virtual bool Contains(    );
    public sealed virtual void CopyTo(   [] , int );
    public   ();
    internal     (Int32& );
    private void (int );
    private void (int );
    private int ();
    internal ​   (int );
    private void (int , ​   );
    private void (int , ​   );
    private void (int );
    internal  (int );
    internal  (int );
    [NullableContextAttribute("2")]
private void (int ,  );
    [NullableContextAttribute("2")]
private void (int ,  );
    private void (int );
    private   (int );
    private int  ();
    internal void ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override IEnumerator`1<   >    ​  ();
    private sealed virtual override IEnumerator    ​  ();
}
internal static class     : object {
    public static bool ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    internal ​   Source { get; }
    [NullableAttribute("2")]
public string   { get; internal set; }
    [NullableAttribute("2")]
public       { get; internal set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal       { get; internal set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal       { get; internal set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal       { get; internal set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal string   { get; internal set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal ​     { get; internal set; }
    private static    ();
    private    ( );
    internal sealed virtual ​   get_Source();
    internal sealed virtual     ​ ();
    internal static     (    );
    internal static     (    );
    internal virtual void    ​ ();
    internal sealed virtual     ​  ();
    internal sealed virtual void    ​ ( );
    internal     ();
    internal void (    );
    [NullableContextAttribute("2")]
public string ();
    [NullableContextAttribute("2")]
internal void (string );
    public Nullable`1<> ();
    internal void (Nullable`1<> );
    public Nullable`1<> ();
    internal void (Nullable`1<> );
    public   ();
    internal void ( );
    [NullableContextAttribute("2")]
public      ();
    [NullableContextAttribute("2")]
internal void (    );
    public double  ();
    internal void (double );
    public Nullable`1<double>  ();
    internal void (Nullable`1<double> );
    public Nullable`1<double>  ();
    internal void (Nullable`1<double> );
    public double  ();
    internal void (double );
    public Nullable`1<double>  ();
    internal void (Nullable`1<double> );
    public double  ();
    internal void (double );
    public Nullable`1<double>  ();
    internal void (Nullable`1<double> );
    public double  ();
    internal void (double );
    public double  ();
    internal void (double );
    public double  ();
    internal void (double );
    public double  ();
    internal void (double );
    [NullableContextAttribute("2")]
internal      ();
    [NullableContextAttribute("2")]
internal void (    );
    [NullableContextAttribute("2")]
internal      ();
    [NullableContextAttribute("2")]
internal void (    );
    [NullableContextAttribute("2")]
internal      ();
    [NullableContextAttribute("2")]
internal void (    );
    [NullableContextAttribute("2")]
internal string ();
    [NullableContextAttribute("2")]
internal void (string );
    [NullableContextAttribute("2")]
internal ​    ();
    [NullableContextAttribute("2")]
internal void (​   );
    internal     ( , bool );
    private sealed virtual override bool    ​  ();
    private sealed virtual override string    ​ ();
    private sealed virtual override string    ​ ();
    private sealed virtual override int    ​  ();
    private sealed virtual override int    ​  ();
    private sealed virtual override bool    ​  ();
    private sealed virtual override double    ​  ();
    private sealed virtual override double    ​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    public abstract virtual     ​ ();
    internal abstract virtual void    ​ (   & );
    public abstract virtual bool Equals(    );
    public abstract virtual string    ​ (string , IFormatProvider );
    public virtual bool    ​ ();
    internal virtual        ​ ();
    public sealed virtual int GetHashCode();
    public sealed virtual bool Equals(object );
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private static    ();
    private    ( );
    internal    (    ,     ,     );
    internal static     ();
    internal virtual void    ​ ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    protected virtual        ​ ();
}
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private long ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public    (long ,  , int );
    public long ();
    public  ();
    public int ();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
private static ​    ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal       { get; }
    [NullableAttribute("2")]
public string   { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private protected object   { get; private protected set; }
    [NullableAttribute("2")]
public object   { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal string   { get; internal set; }
    private protected    ( );
    private static    ();
    [NullableContextAttribute("2")]
internal     ();
    internal bool ();
    internal  ();
    private protected virtual void    ​ (    );
    public sealed virtual     ​ ();
    public abstract virtual     ​  ();
    public      ();
    public string  ();
    public void (string );
    [NullableContextAttribute("2")]
public string  ();
    [NullableContextAttribute("2")]
public void (string );
    public bool ();
    public void (bool );
    public bool ();
    public void (bool );
    [NullableContextAttribute("2")]
private protected virtual object    ​  ();
    [NullableContextAttribute("2")]
private protected virtual void    ​ (object );
    [NullableContextAttribute("2")]
public object  ();
    [NullableContextAttribute("2")]
public void (object );
    private protected virtual object    ​  ();
    private protected virtual void    ​ (object );
    public object  ();
    public void (object );
    internal      ();
    internal void (    );
    internal      ();
    private void (    );
    internal      ();
    [NullableContextAttribute("2")]
internal string  ();
    [NullableContextAttribute("2")]
internal void (string );
    private protected   ();
    private protected void ( );
    public bool ();
    public void (bool );
    internal   ();
    internal void ( );
    private protected ​    ();
    private protected void (​   );
    private protected ​    ();
    private protected void (​   );
    public      ();
    private sealed virtual override        ​  ();
    private sealed virtual override void    ​ (    );
    private sealed virtual override string    ​  ();
    private sealed virtual override bool    ​ ();
    private sealed virtual override     ​  ();
    private sealed virtual override     ​  ();
    private sealed virtual override void    ​ ( );
    public virtual string ToString();
    internal ​    ();
    internal virtual void    ​ (    );
    internal virtual void    ​ (    );
    internal virtual void    ​ (    );
    [IteratorStateMachineAttribute("   /")]
private protected virtual IEnumerable`1<​  >    ​  ();
    internal void  ();
    private void (​   );
    private static ​   ( , ​   );
    internal ​   (​   );
    internal void  ();
    private void (​   );
    internal void  ();
    private void (​   );
    private string  ();
    internal static     ( );
    internal static ​   ( );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class     : object {
    private  ;
    private    [] ;
    private bool ;
    private byte ;
    private TimeSpan ;
    private  ;
    private ushort ;
    private ushort  ;
    public  ();
    public void ( );
    public    [] ();
    public void (   [] );
    public bool ();
    public void (bool );
    public byte ();
    public void (byte );
    public TimeSpan ();
    public void (TimeSpan );
    public  ();
    public void ( );
    public ushort ();
    public void (ushort );
    public ushort  ();
    public void (ushort );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private static     ;
    [DebuggerBrowsableAttribute("0")]
private static Regex ;
    internal    (Stream );
    private static    ();
    protected virtual ​      ​ ();
    protected virtual        ​  ();
    protected virtual void    ​ ();
    private static     (long , long , ​   );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    public static     ;
    public static     ;
    public static     ;
    public static     ;
    public static     ;
    public static     ;
    public static     ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static     ​;
    public static     ​;
    public static     ​;
    public static     ​;
    public static     ​;
    public static     ​;
    public static     ​;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static      ;
    public static Dictionary`2<   ,    >  ;
    private static Dictionary`2< ,    >  ;
    private static    ();
    public virtual     ​ ();
    public static     ( , byte , byte , byte );
    public static     ( ,  );
    public static     (    ,     );
    public static     (    ,     ,     );
    public static     (   [] );
    public virtual        ​ ();
    private static void (    ,    & , List`1& );
    internal static int (int , int , Int32& );
    protected virtual int    ​ ();
    public virtual int    ​ (int );
    public abstract virtual void    ​ (Byte[] , int , int , int );
    public virtual        ​ (   [] );
    public virtual string ToString();
    private static int (int );
    private static byte (int );
    private static int (int );
    private static int (byte );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    public  FilterType { get; }
    internal    (    , int );
    private static    ();
    public virtual  get_FilterType();
    public ​   ();
    public void (​   );
    internal virtual Stream    ​ ( , Stream , ​   );
    internal virtual bool    ​ ( );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [ExtensionAttribute]
public static double (double , double );
    [ExtensionAttribute]
public static int (    );
    [ExtensionAttribute]
public static int ( , int , int );
    [ExtensionAttribute]
public static    <byte> (    , ArrayPool`1<byte> ,  );
    [ExtensionAttribute]
public static    <byte> (    , int , ArrayPool`1<byte> ,  );
    [ExtensionAttribute]
public static void (    , ArrayPool`1<byte> , ArraySegment`1<byte> ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    private Nullable`1<> ;
    private Nullable`1<> ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IList`1<​  > ;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected IList`1<​  >  { get; private set; }
    internal    (    , ​   );
    protected IList`1<​  > ();
    private void (IList`1<​  > );
    protected virtual     ​ ();
    internal static     (    , ​   );
    protected sealed virtual bool    ​ ();
    protected virtual void    ​  ();
    protected virtual void    ​ ();
    protected virtual void    ​ ();
    protected ​   (    );
    protected sealed virtual void    ​  ();
    protected sealed virtual void    ​  ();
    protected sealed virtual ​      ​ ();
    protected virtual     ​ ();
    protected virtual ​      ​ ();
    private void ();
    protected void (IEnumerable`1<​  > );
    protected List`1<​  > (int );
}
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
public double ;
    [DebuggerBrowsableAttribute("0")]
public double ;
    public    (double , double , bool );
    private static    ();
    public double ();
    public double (double );
    public double (double );
    public sealed virtual bool Equals(    );
    [NullableContextAttribute("1")]
public virtual bool Equals(object );
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : object {
    private IDictionary`2<int,    > ;
    public Nullable`1<   >  { get; }
    public    (IDictionary`2<int,    > );
    public Nullable`1<   > (int );
    public double (int );
    public Nullable`1<   > (int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
internal int ;
    internal    (int );
    private int ();
    public static int (    ,     );
    public static     (int );
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public int ();
    public virtual string ToString();
    private string (string , IFormatProvider );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    public static bool op_LessThan(    ,     );
    public static bool op_GreaterThan(    ,     );
    public static bool op_LessThanOrEqual(    ,     );
    public static bool op_GreaterThanOrEqual(    ,     );
    private sealed virtual override string    ​ (string , IFormatProvider );
    public static FontWeight op_Implicit(    );
    public static     op_Implicit(FontWeight );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    [DebuggerBrowsableAttribute("0")]
internal static ​   ;
    private static     ;
    private static     ;
    private static     ;
    private static     ;
    private static     ;
    private static     ;
    private static    []  ;
    private static    ();
    public static     ();
    public static     ();
    public static     ();
    public static     ();
    public static     ();
    public static     ();
    public static     ( );
    private static void ();
    private static   [][] (string , int , int );
    private static   [][] (string ,    , int );
    [IteratorStateMachineAttribute("   /")]
private static IEnumerable`1<String[]> (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    private Nullable`1<   > ;
    private     ;
    private     ;
    public    (    , Nullable`1<   > , Nullable`1<   > ,     );
    public virtual        ​ (    );
    public void (Double[] , Double[] );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    [DebuggerBrowsableAttribute("0")]
internal IDictionary`2<  , > ;
    protected    (  [] , IDictionary`2<  , > );
    public    <> ();
    protected abstract virtual    <>    ​ ();
    protected sealed virtual        ​ ();
    internal int ();
    public virtual bool    ​ (  & modreq(System.Runtime.InteropServices.InAttribute) , & );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<string, > ;
    [DebuggerBrowsableAttribute("0")]
private static int ;
    [DebuggerBrowsableAttribute("0")]
private static Regex ;
    [DebuggerBrowsableAttribute("0")]
private static Regex ;
    [DebuggerBrowsableAttribute("0")]
private Stream ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    private protected    (Stream ,  );
    private static    ();
    public static  (Stream , String& );
    public Stream ();
    [CompilerGeneratedAttribute]
public sealed virtual     ​ ();
    public  ();
    private void ( );
    protected abstract virtual int    ​ ();
    protected abstract virtual void    ​ (int , Int32& , Int32& );
    protected abstract virtual void    ​ (int , Double& , Double& );
    protected abstract virtual     ​ (int );
    protected abstract virtual    []    ​ (int );
    protected abstract virtual Byte[]    ​ (int );
    [NullableContextAttribute("2")]
internal abstract virtual        ​ ();
    [NullableContextAttribute("2")]
internal abstract virtual        ​ (int );
    protected abstract virtual void    ​ (int , Action`1<ArraySegment`1<byte>> ,  ,     ,  ​  , ArrayPool`1<byte> );
    internal bool ();
    internal void (bool );
    internal bool ();
    internal void (bool );
    internal abstract virtual        ​ (int ,  );
    public virtual void Dispose();
    protected static void (double , double , double , Double& , Double& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    public  FilterType { get; }
    internal    (    , int );
    public virtual  get_FilterType();
    internal virtual Stream    ​ ( , Stream , ​   );
    internal virtual bool    ​ ( );
}
internal static class     : object {
    public static     ;
    public static     ;
    public static     ;
    public static     ;
    public static     ;
    private static    ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :    <int> {
    [DebuggerBrowsableAttribute("0")]
internal IDictionary`2<  , int> ;
    private     ;
    private     ;
    private bool ;
    private     ;
    public    (    ,     , bool ,     ,   [] , IDictionary`2<  , int> , IDictionary`2<  , int> );
    public     ();
    public     ();
    public bool ();
    public     ();
    protected virtual    <int>    ​ ();
    public virtual bool    ​ (  & modreq(System.Runtime.InteropServices.InAttribute) , Int32& );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private Double[] ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
public double  { get; }
    public    (Double[] , double );
    private    (Double[] , double , double );
    public double ();
    public int ();
    public double ();
    public bool ();
    public double (int );
    public     (double );
    public     ();
    public virtual int GetHashCode();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual string ToString();
    public sealed virtual string ToString(string , IFormatProvider );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    public static     op_Multiply(    , double );
    public static     op_Multiply(double ,     );
    public static DashStyle op_Explicit(    );
    public static     op_Explicit(DashStyle );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    internal    (​   );
    public    ( );
    public    (string );
    internal ​   ();
    internal ​   ();
    public  ();
    public virtual string ToString();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
private    ;
    public abstract virtual int    ​ ();
    public abstract virtual int    ​ ();
    public abstract virtual void    ​ (int );
    public    ();
    public void (   );
    public abstract virtual void    ​ ();
    private sealed virtual override void    ​ ();
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ (    ,     ,     );
    public abstract virtual void    ​ (    ,     ,     );
    public abstract virtual void    ​ (    ,     ,     ,     );
    public abstract virtual void    ​ (    ,     ,     ,     );
    public abstract virtual void    ​ (    ,    [] );
    public abstract virtual void    ​ (    ,     ,    [] ,  );
    public void (    ,     ,     , double , double );
    public abstract virtual void    ​ (    ,     ,  );
    internal void (bool , bool , bool ,     , double ,     ,     );
    public virtual void    ​ (    ,     , double );
    public abstract virtual void    ​ (    ,     );
    public abstract virtual void    ​ (   ,     );
    public abstract virtual void    ​ (    ,     ,     , double , double , double , double );
    public abstract virtual void    ​ ();
    public abstract virtual void    ​ ();
    public abstract virtual void    ​ ( );
    public abstract virtual void    ​ (    );
    public abstract virtual void    ​ ( );
    public abstract virtual void    ​ (string , bool , int , string );
    public abstract virtual void    ​ (    );
    public abstract virtual bool    ​ (object );
    public abstract virtual        ​ (    );
    public abstract virtual object    ​  ();
    public abstract virtual bool    ​  ();
    public abstract virtual bool    ​  ();
    public abstract virtual void    ​ (int , string );
    public abstract virtual       ​ (object );
    public abstract virtual        ​ (object ,     ,   & );
    public abstract virtual void    ​ (string );
    public virtual bool    ​  ();
    public static     (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private static ​   ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    internal ​   Source { get; }
    private static    ();
    private    ( );
    internal sealed virtual ​   get_Source();
    internal sealed virtual     ​ ();
    internal virtual     ​  ();
    internal virtual void    ​ ( );
    internal static     (    );
    internal void (    );
    internal virtual void    ​ ();
    private Nullable`1<> ();
    private ​   ();
    public     ();
    private     ();
    private static ​   (IDictionary`2<byte,   > );
}
[ExtensionAttribute]
internal static class     : object {
    [NullableAttribute("1")]
private static Int32[] ;
    private static    ();
    [ExtensionAttribute]
public static int ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     : ValueType {
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    internal    (    );
    internal    (​   );
    internal ​   ();
    public static     (    );
    public static     (​   );
    internal bool ();
    internal double ();
    internal int (int , int );
    internal     ();
    internal     (int , int );
    public virtual string ToString();
    public sealed virtual bool Equals(    );
    public virtual bool Equals(object );
    public virtual int GetHashCode();
    internal void (    );
    internal void (   & ,  );
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
}
internal abstract class     :     {
    public sealed virtual bool    ​ ();
    public abstract virtual bool    ​ ();
    [NullableContextAttribute("1")]
public abstract virtual bool    ​ (    , Double[] ,  ​  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class     :     {
    [DebuggerBrowsableAttribute("0")]
internal IDictionary`2<byte,   > ;
    private     ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<char, byte> ;
    public    (IDictionary`2<byte,   > ,     );
    public     ();
    internal byte (char );
    private Dictionary`2<char, byte> ();
    public virtual bool    ​ ();
    public virtual     ​ ();
    internal virtual Char[]    ​ ();
    internal virtual       ​ (byte );
    internal virtual int    ​ (char );
    internal virtual bool    ​ (byte , Char& );
    public virtual bool    ​ (Byte[] , int , int );
    private protected virtual string    ​ (Byte[] , int , int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static     ;
    public static    [] ;
    public static    [] ;
    private static    [] ;
    private static    [] ;
    private static    ();
    public static     (int , Double[] ,  );
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class     : object {
    private static Dictionary`2<,    []> ;
    private static    [] ;
    private static    ();
    private static Dictionary`2<,    []> ();
    private static     (string );
    [ExtensionAttribute]
public static     ( ,  );
    [ExtensionAttribute]
public static     ( );
    public static     (​   );
    public static     (​   , ​   );
    private static     ( );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     : object {
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
public static     ;
    [DebuggerBrowsableAttribute("0")]
public static     ;
    private static    ();
    public abstract virtual bool    ​ ();
    public abstract virtual     ​ ();
    public abstract virtual int    ​ ();
    public abstract virtual Double[]    ​ ();
    public virtual bool    ​ ();
    public virtual bool    ​ ();
    public virtual        ​ (Nullable`1<   > , double );
    internal bool ();
    internal virtual bool    ​ (bool , Boolean& );
    internal virtual        ​ (   & modreq(System.Runtime.InteropServices.InAttribute) ,  , & modreq(System.Runtime.InteropServices.InAttribute) );
    internal virtual void    ​ (   & );
    public virtual int GetHashCode();
    public abstract virtual bool Equals(    );
    public sealed virtual bool Equals(object );
    public abstract virtual string ToString(string , IFormatProvider );
    public sealed virtual string ToString();
    public static bool op_Equality(    ,     );
    public static bool op_Inequality(    ,     );
    protected static double (double , double , double );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class     :     {
    public ​    { get; }
    public abstract virtual bool    ​ ();
    public abstract virtual     ​ ();
    internal abstract virtual Char[]    ​ ();
    internal abstract virtual       ​ (byte );
    public ​   (byte );
    internal static     (​   );
    internal abstract virtual int    ​ (char );
    internal abstract virtual bool    ​ (byte , Char& );
    public abstract virtual bool    ​ (Byte[] , int , int );
    public bool (string );
    private protected sealed virtual bool    ​ ();
    private protected sealed virtual int    ​ (int );
    private protected sealed virtual int    ​ (string );
    private protected sealed virtual int    ​ (string , Byte[] , int );
}
internal enum External.CompoundFile.StgType : Enum {
    public int value__;
    public static StgType StgInvalid;
    public static StgType StgStorage;
    public static StgType StgStream;
    public static StgType StgLockbytes;
    public static StgType StgProperty;
    public static StgType StgRoot;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Fixed.CollectionDebugView`1 : object {
    [DebuggerBrowsableAttribute("0")]
private   <T> collection;
    public int Count { get; }
    [DebuggerBrowsableAttribute("3")]
public T[] Items { get; }
    public CollectionDebugView`1(  <T> collection);
    public int get_Count();
    public T[] get_Items();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Fixed.Content.GroupDrawingDebugView : object {
    [DebuggerBrowsableAttribute("0")]
private    group;
    public int Count { get; }
    [DebuggerBrowsableAttribute("3")]
public   [] Items { get; }
    public GroupDrawingDebugView(   group);
    public int get_Count();
    public   [] get_Items();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class External.Office.Doc.AnnotationOwnerList : List`1<string> {
    public AnnotationOwnerList(FileInformationBlock fib,    tableStream);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.AnnotationReferenceDescriptor : ByteStructure {
    public string UserInitials;
    public ushort AuthorIndex;
    public int BookmarkId;
    public AnnotationReferenceDescriptor(   reader, int length);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.AnnotationReferenceDescriptorExtra : ByteStructure {
    public DateAndTime Date;
    public int CommentDepth;
    public int ParentOffset;
    public AnnotationReferenceDescriptorExtra(   reader, int length);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class External.Office.Doc.AnnotationReferenceExtraTable : List`1<AnnotationReferenceDescriptorExtra> {
    private static int ARTDPost10_LENGTH;
    public AnnotationReferenceExtraTable(FileInformationBlock fib,    tableStream);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class External.Office.Doc.AuthorTable : List`1<string> {
    public AuthorTable(FileInformationBlock fib,    tableStream);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.AutoNumberedListDataDescriptor : object {
    public AutoNumberLevelDescriptor anlv;
    public bool fNumber1;
    public bool fNumberAcross;
    public bool fRestartHdn;
    public bool fSpareX;
    public Char[] rgxch;
    public AutoNumberedListDataDescriptor(Byte[] bytes);
    private void setDefaultValues();
}
internal class External.Office.Doc.AutoNumberLevelDescriptor : object {
    public byte nfc;
    public byte cxchTextBefore;
    public byte cxchTextAfter;
    public byte jc;
    public bool fPrev;
    public bool fHang;
    public bool fSetBold;
    public bool fSetItalic;
    public bool fSetSmallCaps;
    public bool fSetCaps;
    public bool fSetStrike;
    public bool fSetKul;
    public bool fPrevSpace;
    public bool fBold;
    public bool fItalic;
    public bool fSmallCaps;
    public bool fCaps;
    public bool fStrike;
    public byte kul;
    public byte ico;
    public short ftc;
    public ushort hps;
    public ushort iStartAt;
    public ushort dxaIndent;
    public ushort dxaSpace;
    public int cv;
    [NullableContextAttribute("1")]
public AutoNumberLevelDescriptor(Byte[] bytes);
    private void setDefaultValues();
}
internal class External.Office.Doc.AutoSummaryInfo : object {
    public bool fValid;
    public bool fView;
    public short iViewBy;
    public bool fUpdateProps;
    public short wDlgLevel;
    public int lHighestLevel;
    public int lCurrentLevel;
    [NullableContextAttribute("1")]
public AutoSummaryInfo(Byte[] bytes);
}
internal class External.Office.Doc.BookmarkFirst : ByteStructure {
    public short ibkl;
    public short bkc;
    [NullableContextAttribute("1")]
public BookmarkFirst(   reader, int length);
}
internal class External.Office.Doc.BorderCode : object {
    public int cv;
    public byte dptLineWidth;
    public byte brcType;
    public ColorIdentifier ico;
    public int dptSpace;
    public bool fShadow;
    public bool fFrame;
    public bool fNil;
    [NullableContextAttribute("1")]
public BorderCode(Byte[] bytes);
    [NullableContextAttribute("1")]
public sealed virtual void Convert(T mapping);
}
internal class External.Office.Doc.BreakDescriptor : ByteStructure {
    public short ipgd;
    public short itxbxs;
    public short dcpDepend;
    public ushort icol;
    public bool fTableBreak;
    public bool fColumnBreak;
    public bool fMarked;
    public bool fUnk;
    public bool fTextOverflow;
    [NullableContextAttribute("1")]
public BreakDescriptor(   reader, int length);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.ByteParseException : Exception {
    public ByteParseException(string message);
    public ByteParseException(string message, Exception innerException);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class External.Office.Doc.ByteStructure : object {
    protected    _reader;
    protected int _length;
    protected Byte[] _rawBytes;
    public static int VARIABLE_LENGTH;
    public Byte[] RawBytes { get; }
    public ByteStructure(   reader, int length);
    public Byte[] get_RawBytes();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.CharacterPropertyExceptions : PropertyExceptions {
    public CharacterPropertyExceptions(Byte[] bytes);
    public virtual void Convert(T mapping);
}
internal class External.Office.Doc.CharacterRange : object {
    public int CharacterPosition;
    public int CharacterCount;
    public CharacterRange(int cp, int ccp);
}
internal class External.Office.Doc.CommandIdentifier : ByteStructure {
    public static int CID_LENGTH;
    public short ibstMacro;
    [NullableContextAttribute("1")]
public CommandIdentifier(   reader);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.CommandTable : object {
    public StringTable CommandStringTable;
    public List`1<MacroData> MacroDatas;
    public Dictionary`2<int, string> MacroNames;
    public List`1<KeyMapEntry> KeyMapEntries;
    public CustomToolbarWrapper CustomToolbars;
    private bool breakWhile;
    public CommandTable(FileInformationBlock fib,    tableStream);
    public sealed virtual void Convert(T mapping);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.CustomToolbar : ByteStructure {
    public string name;
    public int cbTBData;
    public Byte[] tb;
    public Byte[] rVisualData;
    public int iWCTB;
    public int cCtls;
    public List`1<ToolbarControl> rTBC;
    public CustomToolbar(   reader);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.CustomToolbarWrapper : ByteStructure {
    public short cbTBD;
    public short cCust;
    public int cbDTBC;
    public List`1<ToolbarControl> rTBDC;
    public List`1<ToolbarCustomization> rCustomizations;
    public CustomToolbarWrapper(   reader);
}
internal class External.Office.Doc.DateAndTime : object {
    public short mint;
    public short hr;
    public short dom;
    public short mon;
    public short yr;
    public short wdy;
    [NullableContextAttribute("1")]
public DateAndTime(Byte[] bytes);
    public DateTime ToDateTime();
    private void setDefaultValues();
    [NullableContextAttribute("1")]
public virtual void Convert(T mapping);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.DocumentProperties : object {
    public bool fFacingPages;
    public bool fWindowControl;
    public bool fPMHMainDoc;
    public short grfSuppression;
    public short Fpc;
    public short rncFtn;
    public short nFtn;
    public bool fOutlineDirtySave;
    public bool fOnlyMacPics;
    public bool fOnlyWinPics;
    public bool fLabelDoc;
    public bool fHyphCapitals;
    public bool fAutoHyphen;
    public bool fFormNoFields;
    public bool fLinkStyles;
    public bool fRevMarking;
    public bool fBackup;
    public bool fExactWords;
    public bool fPagHidden;
    public bool fPagResults;
    public bool fLockAtn;
    public bool fMirrorMargins;
    public bool fDflttrueType;
    public bool fProtEnabled;
    public bool fDispFormFldSel;
    public bool fRMView;
    public bool fRMPrint;
    public bool fLockRev;
    public bool fEmbedFonts;
    public bool fNoTabForInd;
    public bool fNoSpaceRaiseLower;
    public bool fSuppressSpbfAfterPageBreak;
    public bool fWrapTrailSpaces;
    public bool fMapPrintTextColor;
    public bool fNoColumnBalance;
    public bool fConvMailMergeEsc;
    public bool fSuppressTopSpacing;
    public bool fOrigWordTableRules;
    public bool fTransparentMetafiles;
    public bool fShowBreaksInFrames;
    public bool fSwapBordersFacingPgs;
    public ushort dxaTab;
    public ushort dxaHotZ;
    public ushort cConsecHypLim;
    public DateAndTime dttmCreated;
    public DateAndTime dttmRevised;
    public DateAndTime dttmLastPrint;
    public short nRevision;
    public int tmEdited;
    public int cWords;
    public int cCh;
    public short cPg;
    public int cParas;
    public short rncEdn;
    public short nEdn;
    public short Epc;
    public short nfcFtnRef;
    public short nfcEdnRef;
    public bool fPrintFormData;
    public bool fSaveFormData;
    public bool fShadeFormData;
    public bool fWCFtnEdn;
    public int cLines;
    public int cWordsFtnEdn;
    public int cChFtnEdn;
    public int cPgFtnEdn;
    public int cParasFtnEdn;
    public int cLinesFtnEdn;
    public int lKeyProtDoc;
    public short wvkSaved;
    public short wScaleSaved;
    public short zkSaved;
    public bool fRotateFontW6;
    public bool iGutterPos;
    public bool fSuppressTopSpacingMac5;
    public bool fTruncDxaExpand;
    public bool fPrintBodyBeforeHdr;
    public bool fNoLeading;
    public bool fMWSmallCaps;
    public ushort adt;
    public DocumentTypographyInfo doptypography;
    public DrawingObjectGrid dogrid;
    public short lvl;
    public bool fGramAllDone;
    public bool fGramAllClean;
    public bool fSubsetFonts;
    public bool fHideLastVersion;
    public bool fHtmlDoc;
    public bool fSnapBorder;
    public bool fIncludeHeader;
    public bool fIncludeFooter;
    public bool fForcePageSizePag;
    public bool fMinFontSizePag;
    public bool fHaveVersions;
    public bool fAutoVersion;
    public AutoSummaryInfo asumyi;
    public int cChWS;
    public int cChWSFtnEdn;
    public int grfDocEvents;
    public bool fVirusPromted;
    public bool fVirusLoadSafe;
    public int KeyVirusSession30;
    public int cDBC;
    public int cDBCFtnEdn;
    public short hpsZoonFontPag;
    public short dywDispPag;
    public byte ilvlLastBulletMain;
    public byte ilvlLastNumberMain;
    public short istdClickTypePara;
    public bool fLADAllDone;
    public bool fEnvelopeVis;
    public bool fMaybeTentativeListInDoc;
    public bool fMaybeFitText;
    public bool fRelyOnCss_WebOpt;
    public bool fRelyOnVML_WebOpt;
    public bool fAllowPNG_WebOpt;
    public short screenSize_WebOpt;
    public bool fOrganizeInFolder_WebOpt;
    public bool fUseLongFileNames_WebOpt;
    public short iPixelsPerInch_WebOpt;
    public bool fWebOptionsInit;
    public bool fMaybeFEL;
    public bool fCharLineUnits;
    public bool fMaybeRTLTables;
    public bool fLeaveBackslashAlone;
    public bool fExpShRtn;
    public bool fDntULTrlSpc;
    public bool fDntBlnSbDbWid;
    public bool fMakeSpaceForUL;
    public bool f2ptExtLeadingOnly;
    public bool fTruncFontHeight;
    public bool fSubOnSize;
    public bool fLineWrapLikeWord6;
    public bool fWW6BorderRules;
    public bool fExactOnTop;
    public bool fExtraAfter;
    public bool fWPSpace;
    public bool fWPJust;
    public bool fPrintMet;
    public bool fSpLayoutLikeWW8;
    public bool fFtnLayoutLikeWW8;
    public bool fDontUseHTMLParagraphAutoSpacing;
    public bool fDontAdjustLineHeightInTable;
    public bool fForgetLastTabAlign;
    public bool fUseAutoSpaceForFullWidthAlpha;
    public bool fAlignTablesRowByRow;
    public bool fLayoutRawTableWidth;
    public bool fLayoutTableRowsApart;
    public bool fUserWord97LineBreakingRules;
    public bool fDontBreakWrappedTables;
    public bool fDontSnapToGridInCell;
    public bool fDontAllowFieldEndSelect;
    public bool fApplyBreakingRules;
    public bool fDontWrapTextWithPunct;
    public bool fDontUseAsianBreakRules;
    public bool fUseWord2002TableStyleRules;
    public bool fGrowAutofit;
    public ushort verCompatPreW10;
    public bool fNoMargPgvwSaved;
    public bool fNoMargPgvWPag;
    public bool fWebViewPag;
    public bool fSeeDrawingsPag;
    public bool fBulletProofed;
    public bool fCorrupted;
    public bool fSaveUim;
    public bool fFilterPrivacy;
    public bool fInFReplaceNoRM;
    public bool fSeenRepairs;
    public bool fHasXML;
    public bool fSeeScriptAnchorsPag;
    public bool fValidateXML;
    public bool fSaveIfInvalidXML;
    public bool fShowXMLErrors;
    public bool fAlwaysMergeEmptyNamespace;
    public int cpMaxListCacheMainDoc;
    public bool fDoNotEmbedSystemFont;
    public bool fWordCompact;
    public bool fLiveRecover;
    public bool fEmbedFactoids;
    public bool fFactoidXML;
    public bool fFactoidAllDone;
    public bool fFolioPrint;
    public bool fReverseFolio;
    public short iTextLineEnding;
    public bool fHideFcc;
    public bool fAcetateShowMarkup;
    public bool fAcetateShowAtn;
    public bool fAcetateShowInsDel;
    public bool fAcetateShowProps;
    public ushort istdTableDflt;
    public ushort verCompat;
    public ushort grfFmtFilter;
    public short iFolioPages;
    public ushort cpgText;
    public int cpMinRMText;
    public int cpMinRMFtn;
    public int cpMinRMHdd;
    public int cpMinRMAtn;
    public int cpMinRMEdn;
    public int cpMinRMTxbx;
    public int cpMinRMHdrTxbx;
    public int rsidRoot;
    public bool fTreatLockAtnAsReadOnly;
    public bool fStyleLock;
    public bool fAutoFmtOverride;
    public bool fRemoveWordML;
    public bool fApplyCustomXForm;
    public bool fStyeLockEnforced;
    public bool fFakeLockAtn;
    public bool fIgnoreMixedContent;
    public bool fShowPlaceholderText;
    public UInt32 grf;
    public bool fReadingModeInkLockDown;
    public bool fAcetateShowInkAtn;
    public bool fFilterDttm;
    public bool fEnforceDocProt;
    public ushort iDocProtCur;
    public bool fDispBkSpSaved;
    public int dxaPageLock;
    public int dyaPageLock;
    public int pctFontLock;
    public byte grfitbid;
    public ushort ilfoMacAtCleanup;
    public DocumentProperties(FileInformationBlock fib,    tableStream);
    private void setDefaultCompatibilityOptions(FibVersion nFib);
    public virtual void Convert(T mapping);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.DocumentTypographyInfo : object {
    public bool fKerningPunct;
    public short iJustification;
    public short iLevelOfKinsoku;
    public bool f2on1;
    public bool fOldDefineLineBaseOnGrid;
    public short iCustomKsu;
    public bool fJapaneseUseLevel2;
    public short cchFollowingPunct;
    public short cchLeadingPunct;
    public Char[] rgxchFPunct;
    public Char[] rgxchLPunct;
    public DocumentTypographyInfo(Byte[] bytes);
}
internal class External.Office.Doc.DrawingObjectGrid : object {
    public short xaGrid;
    public short yaGrid;
    public short dxaGrid;
    public short dyaGrid;
    public short dyGridDisplay;
    public bool fTurnItOff;
    public short dxGridDisplay;
    public bool fFollowMargins;
    [NullableContextAttribute("1")]
public DrawingObjectGrid(Byte[] bytes);
}
internal class External.Office.Doc.DropCapSpecifier : object {
    public byte Type;
    public byte Count;
    [NullableContextAttribute("1")]
public DropCapSpecifier(Byte[] bytes);
    private void setDefaultValues();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.FcCharacterPropertyExceptionsPair : ValueType {
    private int fc;
    private CharacterPropertyExceptions characterPropertyExceptions;
    public int Fc { get; }
    public CharacterPropertyExceptions CharacterPropertyExceptions { get; }
    public FcCharacterPropertyExceptionsPair(int fc, CharacterPropertyExceptions characterPropertyExceptions);
    public int get_Fc();
    public CharacterPropertyExceptions get_CharacterPropertyExceptions();
    public virtual int GetHashCode();
    public sealed virtual bool Equals(FcCharacterPropertyExceptionsPair other);
    public virtual bool Equals(object obj);
}
internal class External.Office.Doc.FcCharacterPropertyExceptionsPairComparer : object {
    public sealed virtual int Compare(FcCharacterPropertyExceptionsPair x, FcCharacterPropertyExceptionsPair y);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.FieldTable : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<UInt32, Grffld> <MainDocumentFields>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<UInt32, Grffld> <HeaderDocumentFields>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<UInt32, Grffld> <FootnoteDocumentFields>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<UInt32, Grffld> <CommentDocumentFields>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<UInt32, Grffld> <EndnoteDocumentFields>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<UInt32, Grffld> <TextboxDocumentFields>k__BackingField;
    public IDictionary`2<UInt32, Grffld> MainDocumentFields { get; }
    public IDictionary`2<UInt32, Grffld> HeaderDocumentFields { get; }
    public IDictionary`2<UInt32, Grffld> FootnoteDocumentFields { get; }
    public IDictionary`2<UInt32, Grffld> CommentDocumentFields { get; }
    public IDictionary`2<UInt32, Grffld> EndnoteDocumentFields { get; }
    public IDictionary`2<UInt32, Grffld> TextboxDocumentFields { get; }
    public FieldTable(FileInformationBlock fib,    tableStream);
    [CompilerGeneratedAttribute]
public IDictionary`2<UInt32, Grffld> get_MainDocumentFields();
    [CompilerGeneratedAttribute]
public IDictionary`2<UInt32, Grffld> get_HeaderDocumentFields();
    [CompilerGeneratedAttribute]
public IDictionary`2<UInt32, Grffld> get_FootnoteDocumentFields();
    [CompilerGeneratedAttribute]
public IDictionary`2<UInt32, Grffld> get_CommentDocumentFields();
    [CompilerGeneratedAttribute]
public IDictionary`2<UInt32, Grffld> get_EndnoteDocumentFields();
    [CompilerGeneratedAttribute]
public IDictionary`2<UInt32, Grffld> get_TextboxDocumentFields();
    private static void ReadFields(   tableStream, UInt32 offset, UInt32 length, IDictionary`2<UInt32, Grffld> fields);
}
internal class External.Office.Doc.FileInformationBlock : object {
    public ushort wIdent;
    public FibVersion nFib;
    public ushort lid;
    public short pnNext;
    public bool fDot;
    public bool fGlsy;
    public bool fComplex;
    public bool fHasPic;
    public ushort cQuickSaves;
    public bool fEncrypted;
    public bool fWhichTblStm;
    public bool fReadOnlyRecommended;
    public bool fWriteReservation;
    public bool fExtChar;
    public bool fLoadOverwrite;
    public bool fFarEast;
    public bool fCrypto;
    public ushort nFibBack;
    public int lKey;
    public byte envr;
    public bool fMac;
    public bool fEmptySpecial;
    public bool fLoadOverridePage;
    public bool fFutureSavedUndo;
    public bool fWord97Saved;
    public int fcMin;
    public int fcMac;
    public short lidFE;
    public int cbMac;
    public int ccpText;
    public int ccpFtn;
    public int ccpHdr;
    public int ccpAtn;
    public int ccpEdn;
    public int ccpTxbx;
    public int ccpHdrTxbx;
    public UInt32 fcStshfOrig;
    public UInt32 lcbStshfOrig;
    public UInt32 fcStshf;
    public UInt32 lcbStshf;
    public UInt32 fcPlcffndRef;
    public UInt32 lcbPlcffndRef;
    public UInt32 fcPlcffndTxt;
    public UInt32 lcbPlcffndTxt;
    public UInt32 fcPlcfandRef;
    public UInt32 lcbPlcfandRef;
    public UInt32 fcPlcfandTxt;
    public UInt32 lcbPlcfandTxt;
    public UInt32 fcPlcfSed;
    public UInt32 lcbPlcfSed;
    public UInt32 fcPlcPad;
    public UInt32 lcbPlcPad;
    public UInt32 fcPlcfPhe;
    public UInt32 lcbPlcfPhe;
    public UInt32 fcSttbfGlsy;
    public UInt32 lcbSttbfGlsy;
    public UInt32 fcPlcfGlsy;
    public UInt32 lcbPlcfGlsy;
    public UInt32 fcPlcfHdd;
    public UInt32 lcbPlcfHdd;
    public UInt32 fcPlcfBteChpx;
    public UInt32 lcbPlcfBteChpx;
    public UInt32 fcPlcfBtePapx;
    public UInt32 lcbPlcfBtePapx;
    public UInt32 fcPlcfSea;
    public UInt32 lcbPlcfSea;
    public UInt32 fcSttbfFfn;
    public UInt32 lcbSttbfFfn;
    public UInt32 fcPlcfFldMom;
    public UInt32 lcbPlcfFldMom;
    public UInt32 fcPlcfFldHdr;
    public UInt32 lcbPlcfFldHdr;
    public UInt32 fcPlcfFldFtn;
    public UInt32 lcbPlcfFldFtn;
    public UInt32 fcPlcfFldAtn;
    public UInt32 lcbPlcfFldAtn;
    public UInt32 fcPlcfFldMcr;
    public UInt32 lcbPlcfFldMcr;
    public UInt32 fcSttbfBkmk;
    public UInt32 lcbSttbfBkmk;
    public UInt32 fcPlcfBkf;
    public UInt32 lcbPlcfBkf;
    public UInt32 fcPlcfBkl;
    public UInt32 lcbPlcfBkl;
    public UInt32 fcCmds;
    public UInt32 lcbCmds;
    public UInt32 fcSttbfMcr;
    public UInt32 lcbSttbfMcr;
    public UInt32 fcPrDrvr;
    public UInt32 lcbPrDrvr;
    public UInt32 fcPrEnvPort;
    public UInt32 lcbPrEnvPort;
    public UInt32 fcPrEnvLand;
    public UInt32 lcbPrEnvLand;
    public UInt32 fcWss;
    public UInt32 lcbWss;
    public UInt32 fcDop;
    public UInt32 lcbDop;
    public UInt32 fcSttbfAssoc;
    public UInt32 lcbSttbfAssoc;
    public UInt32 fcClx;
    public UInt32 lcbClx;
    public UInt32 fcPlcfPgdFtn;
    public UInt32 lcbPlcfPgdFtn;
    public UInt32 fcAutosaveSource;
    public UInt32 lcbAutosaveSource;
    public UInt32 fcGrpXstAtnOwners;
    public UInt32 lcbGrpXstAtnOwners;
    public UInt32 fcSttbfAtnBkmk;
    public UInt32 lcbSttbfAtnBkmk;
    public UInt32 fcPlcSpaMom;
    public UInt32 lcbPlcSpaMom;
    public UInt32 fcPlcSpaHdr;
    public UInt32 lcbPlcSpaHdr;
    public UInt32 fcPlcfAtnBkf;
    public UInt32 lcbPlcfAtnBkf;
    public UInt32 fcPlcfAtnBkl;
    public UInt32 lcbPlcfAtnBkl;
    public UInt32 fcPms;
    public UInt32 lcbPms;
    public UInt32 fcFormFldSttbs;
    public UInt32 lcbFormFldSttbs;
    public UInt32 fcPlcfendRef;
    public UInt32 lcbPlcfendRef;
    public UInt32 fcPlcfendTxt;
    public UInt32 lcbPlcfendTxt;
    public UInt32 fcPlcfFldEdn;
    public UInt32 lcbPlcfFldEdn;
    public UInt32 fcDggInfo;
    public UInt32 lcbDggInfo;
    public UInt32 fcSttbfRMark;
    public UInt32 lcbSttbfRMark;
    public UInt32 fcSttbfCaption;
    public UInt32 lcbSttbfCaption;
    public UInt32 fcSttbfAutoCaption;
    public UInt32 lcbSttbfAutoCaption;
    public UInt32 fcPlcfWkb;
    public UInt32 lcbPlcfWkb;
    public UInt32 fcPlcfSpl;
    public UInt32 lcbPlcfSpl;
    public UInt32 fcPlcftxbxTxt;
    public UInt32 lcbPlcftxbxTxt;
    public UInt32 fcPlcfFldTxbx;
    public UInt32 lcbPlcfFldTxbx;
    public UInt32 fcPlcfHdrtxbxTxt;
    public UInt32 lcbPlcfHdrtxbxTxt;
    public UInt32 fcPlcffldHdrTxbx;
    public UInt32 lcbPlcffldHdrTxbx;
    public UInt32 fcStwUser;
    public UInt32 lcbStwUser;
    public UInt32 fcSttbTtmbd;
    public UInt32 lcbSttbTtmbd;
    public UInt32 fcCookieData;
    public UInt32 lcbCookieData;
    public UInt32 fcPgdMotherOldOld;
    public UInt32 lcbPgdMotherOldOld;
    public UInt32 fcBkdMotherOldOld;
    public UInt32 lcbBkdMotherOldOld;
    public UInt32 fcPgdFtnOldOld;
    public UInt32 lcbPgdFtnOldOld;
    public UInt32 fcBkdFtnOldOld;
    public UInt32 lcbBkdFtnOldOld;
    public UInt32 fcPgdEdnOldOld;
    public UInt32 lcbPgdEdnOldOld;
    public UInt32 fcBkdEdnOldOld;
    public UInt32 lcbBkdEdnOldOld;
    public UInt32 fcSttbfIntlFld;
    public UInt32 lcbSttbfIntlFld;
    public UInt32 fcRouteSlip;
    public UInt32 lcbRouteSlip;
    public UInt32 fcSttbSavedBy;
    public UInt32 lcbSttbSavedBy;
    public UInt32 fcSttbFnm;
    public UInt32 lcbSttbFnm;
    public UInt32 fcPlfLst;
    public UInt32 lcbPlfLst;
    public UInt32 fcPlfLfo;
    public UInt32 lcbPlfLfo;
    public UInt32 fcPlcfTxbxBkd;
    public UInt32 lcbPlcfTxbxBkd;
    public UInt32 fcPlcfTxbxHdrBkd;
    public UInt32 lcbPlcfTxbxHdrBkd;
    public UInt32 fcDocUndoWord9;
    public UInt32 lcbDocUndoWord9;
    public UInt32 fcRgbUse;
    public UInt32 lcbRgbUse;
    public UInt32 fcUsp;
    public UInt32 lcbUsp;
    public UInt32 fcUskf;
    public UInt32 lcbUskf;
    public UInt32 fcPlcupcRgbUse;
    public UInt32 lcbPlcupcRgbUse;
    public UInt32 fcPlcupcUsp;
    public UInt32 lcbPlcupcUsp;
    public UInt32 fcSttbGlsyStyle;
    public UInt32 lcbSttbGlsyStyle;
    public UInt32 fcPlgosl;
    public UInt32 lcbPlgosl;
    public UInt32 fcPlcocx;
    public UInt32 lcbPlcocx;
    public UInt32 fcPlcfBteLvc;
    public UInt32 lcbPlcfBteLvc;
    public UInt32 dwLowDateTime;
    public UInt32 dwHighDateTime;
    public UInt32 fcPlcfLvcPre10;
    public UInt32 lcbPlcfLvcPre10;
    public UInt32 fcPlcfAsumy;
    public UInt32 lcbPlcfAsumy;
    public UInt32 fcPlcfGram;
    public UInt32 lcbPlcfGram;
    public UInt32 fcSttbListNames;
    public UInt32 lcbSttbListNames;
    public UInt32 fcSttbfUssr;
    public UInt32 lcbSttbfUssr;
    public UInt32 fcPlcfTch;
    public UInt32 lcbPlcfTch;
    public UInt32 fcRmdThreading;
    public UInt32 lcbRmdThreading;
    public UInt32 fcMid;
    public UInt32 lcbMid;
    public UInt32 fcSttbRgtplc;
    public UInt32 lcbSttbRgtplc;
    public UInt32 fcMsoEnvelope;
    public UInt32 lcbMsoEnvelope;
    public UInt32 fcPlcfLad;
    public UInt32 lcbPlcfLad;
    public UInt32 fcRgDofr;
    public UInt32 lcbRgDofr;
    public UInt32 fcPlcosl;
    public UInt32 lcbPlcosl;
    public UInt32 fcPlcfCookieOld;
    public UInt32 lcbPlcfCookieOld;
    public UInt32 fcPgdMotherOld;
    public UInt32 lcbPgdMotherOld;
    public UInt32 fcBkdMotherOld;
    public UInt32 lcbBkdMotherOld;
    public UInt32 fcPgdFtnOld;
    public UInt32 lcbPgdFtnOld;
    public UInt32 fcBkdFtnOld;
    public UInt32 lcbBkdFtnOld;
    public UInt32 fcPgdEdnOld;
    public UInt32 lcbPgdEdnOld;
    public UInt32 fcBkdEdnOld;
    public UInt32 lcbBkdEdnOld;
    public UInt32 fcPlcfPgp;
    public UInt32 lcbPlcfPgp;
    public UInt32 fcPlcfuim;
    public UInt32 lcbPlcfuim;
    public UInt32 fcPlfguidUim;
    public UInt32 lcbPlfguidUim;
    public UInt32 fcAtrdExtra;
    public UInt32 lcbAtrdExtra;
    public UInt32 fcPlrsid;
    public UInt32 lcbPlrsid;
    public UInt32 fcSttbfBkmkFactoid;
    public UInt32 lcbSttbfBkmkFactoid;
    public UInt32 fcPlcfBkfFactoid;
    public UInt32 lcbPlcfBkfFactoid;
    public UInt32 fcPlcfcookie;
    public UInt32 lcbPlcfcookie;
    public UInt32 fcPlcfBklFactoid;
    public UInt32 lcbPlcfBklFactoid;
    public UInt32 fcFactoidData;
    public UInt32 lcbFactoidData;
    public UInt32 fcDocUndo;
    public UInt32 lcbDocUndo;
    public UInt32 fcSttbfBkmkFcc;
    public UInt32 lcbSttbfBkmkFcc;
    public UInt32 fcPlcfBkfFcc;
    public UInt32 lcbPlcfBkfFcc;
    public UInt32 fcPlcfBklFcc;
    public UInt32 lcbPlcfBklFcc;
    public UInt32 fcSttbfbkmkBPRepairs;
    public UInt32 lcbSttbfbkmkBPRepairs;
    public UInt32 fcPlcfbkfBPRepairs;
    public UInt32 lcbPlcfbkfBPRepairs;
    public UInt32 fcPlcfbklBPRepairs;
    public UInt32 lcbPlcfbklBPRepairs;
    public UInt32 fcPmsNew;
    public UInt32 lcbPmsNew;
    public UInt32 fcODSO;
    public UInt32 lcbODSO;
    public UInt32 fcPlcfpmiOldXP;
    public UInt32 lcbPlcfpmiOldXP;
    public UInt32 fcPlcfpmiNewXP;
    public UInt32 lcbPlcfpmiNewXP;
    public UInt32 fcPlcfpmiMixedXP;
    public UInt32 lcbPlcfpmiMixedXP;
    public UInt32 fcPlcffactoid;
    public UInt32 lcbPlcffactoid;
    public UInt32 fcPlcflvcOldXP;
    public UInt32 lcbPlcflvcOldXP;
    public UInt32 fcPlcflvcNewXP;
    public UInt32 lcbPlcflvcNewXP;
    public UInt32 fcPlcflvcMixedXP;
    public UInt32 lcbPlcflvcMixedXP;
    public UInt32 fcHplxsdr;
    public UInt32 lcbHplxsdr;
    public UInt32 fcSttbfBkmkSdt;
    public UInt32 lcbSttbfBkmkSdt;
    public UInt32 fcPlcfBkfSdt;
    public UInt32 lcbPlcfBkfSdt;
    public UInt32 fcPlcfBklSdt;
    public UInt32 lcbPlcfBklSdt;
    public UInt32 fcCustomXForm;
    public UInt32 lcbCustomXForm;
    public UInt32 fcSttbfBkmkProt;
    public UInt32 lcbSttbfBkmkProt;
    public UInt32 fcPlcfBkfProt;
    public UInt32 lcbPlcfBkfProt;
    public UInt32 fcPlcfBklProt;
    public UInt32 lcbPlcfBklProt;
    public UInt32 fcSttbProtUser;
    public UInt32 lcbSttbProtUser;
    public UInt32 fcPlcfpmiOld;
    public UInt32 lcbPlcfpmiOld;
    public UInt32 fcPlcfpmiOldInline;
    public UInt32 lcbPlcfpmiOldInline;
    public UInt32 fcPlcfpmiNew;
    public UInt32 lcbPlcfpmiNew;
    public UInt32 fcPlcfpmiNewInline;
    public UInt32 lcbPlcfpmiNewInline;
    public UInt32 fcPlcflvcOld;
    public UInt32 lcbPlcflvcOld;
    public UInt32 fcPlcflvcOldInline;
    public UInt32 lcbPlcflvcOldInline;
    public UInt32 fcPlcflvcNew;
    public UInt32 lcbPlcflvcNew;
    public UInt32 fcPlcflvcNewInline;
    public UInt32 lcbPlcflvcNewInline;
    public UInt32 fcPgdMother;
    public UInt32 lcbPgdMother;
    public UInt32 fcBkdMother;
    public UInt32 lcbBkdMother;
    public UInt32 fcAfdMother;
    public UInt32 lcbAfdMother;
    public UInt32 fcPgdFtn;
    public UInt32 lcbPgdFtn;
    public UInt32 fcBkdFtn;
    public UInt32 lcbBkdFtn;
    public UInt32 fcAfdFtn;
    public UInt32 lcbAfdFtn;
    public UInt32 fcPgdEdn;
    public UInt32 lcbPgdEdn;
    public UInt32 fcBkdEdn;
    public UInt32 lcbBkdEdn;
    public UInt32 fcAfdEdn;
    public UInt32 lcbAfdEdn;
    public UInt32 fcAfd;
    public UInt32 lcbAfd;
    public UInt32 fcPlcfmthd;
    public UInt32 lcbPlcfmthd;
    public UInt32 fcSttbfBkmkMoveFrom;
    public UInt32 lcbSttbfBkmkMoveFrom;
    public UInt32 fcPlcfBkfMoveFrom;
    public UInt32 lcbPlcfBkfMoveFrom;
    public UInt32 fcPlcfBklMoveFrom;
    public UInt32 lcbPlcfBklMoveFrom;
    public UInt32 fcSttbfBkmkMoveTo;
    public UInt32 lcbSttbfBkmkMoveTo;
    public UInt32 fcPlcfBkfMoveTo;
    public UInt32 lcbPlcfBkfMoveTo;
    public UInt32 fcPlcfBklMoveTo;
    public UInt32 lcbPlcfBklMoveTo;
    public UInt32 fcSttbfBkmkArto;
    public UInt32 lcbSttbfBkmkArto;
    public UInt32 fcPlcfBkfArto;
    public UInt32 lcbPlcfBkfArto;
    public UInt32 fcPlcfBklArto;
    public UInt32 lcbPlcfBklArto;
    public UInt32 fcArtoData;
    public UInt32 lcbArtoData;
    public UInt32 fcOssTheme;
    public UInt32 lcbOssTheme;
    public UInt32 fcColorSchemeMapping;
    public UInt32 lcbColorSchemeMapping;
    public FibVersion nFibNew;
    public ushort cQuickSavesNew;
    public ushort csw;
    public ushort cslw;
    public ushort cbRgFcLcb;
    public ushort cswNew;
    public int FootnoteDocumentStart { get; }
    public int HeaderDocumentStart { get; }
    public int CommentDocumentStart { get; }
    public int EndnoteDocumentStart { get; }
    public int TextboxDocumentStart { get; }
    [NullableContextAttribute("1")]
public FileInformationBlock(   reader);
    public int get_FootnoteDocumentStart();
    public int get_HeaderDocumentStart();
    public int get_CommentDocumentStart();
    public int get_EndnoteDocumentStart();
    public int get_TextboxDocumentStart();
}
internal class External.Office.Doc.FileShapeAddress : ByteStructure {
    public int spid;
    public int xaLeft;
    public int yaTop;
    public int xaRight;
    public int yaBottom;
    public bool fHdr;
    public AnchorType bx;
    public AnchorType by;
    public ushort wr;
    public ushort wrk;
    public bool fRcaSimple;
    public bool fBelowText;
    public bool fAnchorLock;
    public int cTxbx;
    [NullableContextAttribute("1")]
public FileShapeAddress(   reader, int length);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.FontFamilyName : ByteStructure {
    public bool fTrueType;
    public byte ff;
    public short wWeight;
    public byte chs;
    public byte prq;
    public string xszFtn;
    public string xszAlt;
    public Byte[] panose;
    public FontSignature fs;
    public FontFamilyName(   reader, int length);
    private long searchTerminationZero(   reader);
}
internal class External.Office.Doc.FormattedDiskPage : object {
    public FKPType Type;
    [NullableAttribute("1")]
public    WordStream;
    public byte crun;
    [NullableAttribute("1")]
public Int32[] rgfc;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.FormattedDiskPageCHPX : FormattedDiskPage {
    public Byte[] rgb;
    public CharacterPropertyExceptions[] grpchpx;
    public FormattedDiskPageCHPX(   wordStream, int offset);
    public static List`1<FormattedDiskPageCHPX> GetAllCHPXFKPs(FileInformationBlock fib,    wordStream,    tableStream);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.FormattedDiskPagePAPX : FormattedDiskPage {
    public BX[] rgbx;
    public ParagraphPropertyExceptions[] grppapx;
    public FormattedDiskPagePAPX(   wordStream, int offset,    dataStream);
    public static List`1<FormattedDiskPagePAPX> GetAllPAPXFKPs(FileInformationBlock fib,    wordStream,    tableStream,    dataStream);
    public static List`1<int> GetFileCharacterPositions(int fcMin, int fcMax, FileInformationBlock fib,    wordStream,    tableStream,    dataStream);
    public static List`1<ParagraphPropertyExceptions> GetParagraphPropertyExceptions(int fcMin, int fcMax, FileInformationBlock fib,    wordStream,    tableStream,    dataStream);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.FormFieldData : object {
    public UInt32 version;
    public FormFieldType iType;
    public ushort iRes;
    public bool fOwnHelp;
    public bool fOwnStat;
    public bool fProt;
    public byte iSize;
    public TextboxType iTypeTxt;
    public bool fRecalc;
    public bool fHasListBox;
    public ushort cch;
    public ushort hps;
    public string xstzName;
    public string xstzTextDef;
    public ushort wDef;
    public string xstzTextFormat;
    public string xstzHelpText;
    public string xstzStatText;
    public string xstzEntryMcr;
    public string xstzExitMcr;
    public StringTable hsttbDropList;
    public FormFieldData(Byte[] bytes);
    public virtual void Convert(T mapping);
}
internal class External.Office.Doc.Global : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.HeaderAndFooterTable : object {
    public List`1<CharacterRange> FirstHeaders;
    public List`1<CharacterRange> EvenHeaders;
    public List`1<CharacterRange> OddHeaders;
    public List`1<CharacterRange> FirstFooters;
    public List`1<CharacterRange> EvenFooters;
    public List`1<CharacterRange> OddFooters;
    public HeaderAndFooterTable(WordDocument doc);
}
internal class External.Office.Doc.KeyMapEntry : ByteStructure {
    public short kcm1;
    public short kcm2;
    public ActionType kt;
    public char paramChar;
    [NullableAttribute("1")]
public CommandIdentifier paramCid;
    private static int KME_LENGTH;
    [NullableContextAttribute("1")]
public KeyMapEntry(   reader);
}
internal class External.Office.Doc.LanguageId : object {
    public int Id;
    public LanguageCode Code;
    public LanguageId(int id);
    [NullableContextAttribute("1")]
public sealed virtual void Convert(T mapping);
}
internal class External.Office.Doc.LineSpacingDescriptor : object {
    public short dyaLine;
    public bool fMultLinespace;
    [NullableContextAttribute("1")]
public LineSpacingDescriptor(Byte[] bytes);
    private void setDefaultValues();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.ListData : ByteStructure {
    public int lsid;
    public int tplc;
    public Int16[] rgistd;
    public bool fSimpleList;
    public bool fRestartHdn;
    public bool fAutoNum;
    public bool fPreRTF;
    public bool fHybrid;
    public ListLevel[] rglvl;
    public byte grfhic;
    public static short ISTD_NIL;
    private static int LSTF_LENGTH;
    public ListData(   reader, int length);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.ListFormatOverride : ByteStructure {
    public int lsid;
    public byte clfolvl;
    public byte ibstFltAutoNum;
    public byte grfhic;
    public ListFormatOverrideLevel[] rgLfoLvl;
    private static int LFO_LENGTH;
    public ListFormatOverride(   reader, int length);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.ListFormatOverrideLevel : ByteStructure {
    public int iStartAt;
    public byte ilvl;
    public bool fStartAt;
    public bool fFormatting;
    public ListLevel lvl;
    private static int LFOLVL_LENGTH;
    public ListFormatOverrideLevel(   reader, int length);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class External.Office.Doc.ListFormatOverrideTable : List`1<ListFormatOverride> {
    private static int LFO_LENGTH;
    private static int LFOLVL_LENGTH;
    public ListFormatOverrideTable(FileInformationBlock fib,    tableStream);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.ListLevel : ByteStructure {
    public int iStartAt;
    public byte nfc;
    public byte jc;
    public bool fLegal;
    public bool fNoRestart;
    public bool fPrev;
    public bool fPrevSpace;
    public bool fWord6;
    public Byte[] rgbxchNums;
    public FollowingChar ixchFollow;
    public int dxaSpace;
    public int dxaIndent;
    public byte cbGrpprlChpx;
    public byte cbGrpprlPapx;
    public byte ilvlRestartLim;
    public byte grfhic;
    public ParagraphPropertyExceptions grpprlPapx;
    public CharacterPropertyExceptions grpprlChpx;
    public string xst;
    public ListLevel(   reader, int length);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class External.Office.Doc.ListTable : List`1<ListData> {
    public ListTable(FileInformationBlock fib,    tableStream);
    public sealed virtual void Convert(T mapping);
}
internal class External.Office.Doc.MacroData : ByteStructure {
    public short ibst;
    public short ibstName;
    private static int MCD_LENGTH;
    [NullableContextAttribute("1")]
public MacroData(   reader);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.NilPicfAndBinData : object {
    public int lcb;
    public short cbHeader;
    public Byte[] binData;
    public NilPicfAndBinData(CharacterPropertyExceptions chpx,    dataStream);
    private void parse(   stream, int fc);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.NumberRevisionMarkData : object {
    public bool fNumRM;
    public short ibstNumRM;
    public DateAndTime dttmNumRM;
    public Char[] rgbxchNums;
    public Char[] rgnfc;
    public Int32[] PNBR;
    public Char[] xst;
    public NumberRevisionMarkData(Byte[] bytes);
    private void setDefaultValues();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.OfficeArtContent : object {
    public DrawingGroup DrawingGroupData;
    public List`1<OfficeArtWordDrawing> Drawings;
    public OfficeArtContent(FileInformationBlock fib,    tableStream);
    public ShapeContainer GetShapeContainer(int spid);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class External.Office.Doc.OfficeDrawingTable : Dictionary`2<int, FileShapeAddress> {
    private static int FSPA_LENGTH;
    [NullableContextAttribute("1")]
public OfficeDrawingTable(WordDocument doc, OfficeDrawingTableType type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.OleObject : object {
    public string ObjectId;
    public Guid ClassId;
    public string Path;
    public bool fLinked;
    public string UserType;
    public string ClipboardFormat;
    public string Link;
    public string Program;
    public LinkUpdateOption UpdateMode;
    public Dictionary`2<string,   > Streams;
    private    _docStorage;
    public OleObject(CharacterPropertyExceptions chpx,    docStorage);
    private void processLinkInfoStream(string linkStream);
    private void processCompObjStream(string compStream);
    private void processOleStream(string oleStream);
    private string getOleEntryName(CharacterPropertyExceptions chpx);
    public sealed virtual void Convert(T mapping);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.OutlineLiSTData : object {
    public AutoNumberLevelDescriptor[] rganlv;
    public bool fRestartHdr;
    public bool fSpareOlst2;
    public bool fSpareOlst3;
    public bool fSpareOlst4;
    public Char[] rgxch;
    public OutlineLiSTData(Byte[] bytes);
    private void setDefaultValues();
}
internal class External.Office.Doc.ParagraphHeight : object {
    public bool fVolatile;
    public bool fUnk;
    public bool fDiffLines;
    public short clMac;
    public int dxaCol;
    public int dymLine;
    public int dymHeight;
    public short dcpTtpNext;
    public int dymTableHeight;
    public bool fSpare;
    [NullableContextAttribute("1")]
public ParagraphHeight(Byte[] bytes, bool fTtpMode);
    private void setDefaultValues();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.ParagraphPropertyExceptions : PropertyExceptions {
    public ushort istd;
    public ParagraphPropertyExceptions(Byte[] bytes,    dataStream);
    public virtual void Convert(T mapping);
}
internal class External.Office.Doc.PictureBulletInformation : object {
    public bool fPicBullet;
    public bool fNoAutoSize;
    public bool fDefaultPic;
    public bool fTemporary;
    public bool fFormatting;
    public int iBullet;
    [NullableContextAttribute("1")]
public PictureBulletInformation(Byte[] bytes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.PictureDescriptor : object {
    public Byte[] rcWinMf;
    public short dxaGoal;
    public short dyaGoal;
    public ushort mx;
    public ushort my;
    public MetafilePicture mfp;
    public short dxaCropLeft;
    public short dyaCropTop;
    public short dxaCropRight;
    public short dyaCropBottom;
    public BorderCode brcTop;
    public BorderCode brcLeft;
    public BorderCode brcBottom;
    public BorderCode brcRight;
    public short dxaOrigin;
    public short dyaOrigin;
    public short cProps;
    public string picName;
    public ShapeContainer ShapeContainer;
    public BlipStoreEntry BlipStoreEntry;
    public PictureDescriptor(CharacterPropertyExceptions chpx,    stream);
    private void parse(   stream, int fc);
    public static int GetFcPic(CharacterPropertyExceptions chpx);
    public virtual void Convert(T mapping);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.PieceDescriptor : object {
    public UInt32 fc;
    public Encoding encoding;
    public int cpStart;
    public int cpEnd;
    public PieceDescriptor(Byte[] bytes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.PieceTable : object {
    public List`1<PieceDescriptor> Pieces;
    public PieceTable(FileInformationBlock fib,    tableStream);
    public List`1<char> GetAllChars(   wordStream);
    public string GetChars(int fcStart, int fcEnd,    wordStream);
    public int GetFc(int cp);
    private static int GetFc(PieceDescriptor piece, int cp);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.Plex`1 : object {
    protected static int CP_LENGTH;
    public List`1<int> CharacterPositions;
    public List`1<T> Elements;
    public Plex`1(int structureLength,    tableStream, UInt32 fc, UInt32 lcb);
    public T GetStruct(int cp);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.PropertyExceptions : object {
    public List`1<SinglePropertyModifier> grpprl;
    public PropertyExceptions(Byte[] bytes);
    public virtual void Convert(T mapping);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.PropertySetStream : object {
    private static short CP_WINUNICODE;
    public UInt32 NumPropertySets;
    public Guid FMTID0;
    public UInt32 Offset0;
    public Guid FMTID1;
    public UInt32 Offset1;
    public PropertySet PropertySet0;
    public PropertySet PropertySet1;
    public PropertySetStream(   stream);
}
internal class External.Office.Doc.SectionDescriptor : ByteStructure {
    public short fn;
    public short fnMpr;
    public int fcMpr;
    public int fcSepx;
    private static int SED_LENGTH;
    [NullableContextAttribute("1")]
public SectionDescriptor(   reader, int length);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.SectionPropertyExceptions : PropertyExceptions {
    public SectionPropertyExceptions(Byte[] bytes);
    public virtual void Convert(T mapping);
}
internal class External.Office.Doc.ShadingDescriptor : object {
    public UInt32 cvFore;
    public UInt32 cvBack;
    public ShadingPattern ipat;
    public bool fAutoFore { get; }
    public bool fAutoBack { get; }
    public bool IsAutoOrNill { get; }
    [NullableContextAttribute("1")]
public ShadingDescriptor(Byte[] bytes);
    public bool get_fAutoFore();
    public bool get_fAutoBack();
    public bool get_IsAutoOrNill();
    private static UInt32 ConvertIdentifierToColor(ColorIdentifier ico);
    [NullableContextAttribute("1")]
public sealed virtual void Convert(T mapping);
}
internal class External.Office.Doc.SinglePropertyModifier : object {
    public OperationCode OpCode;
    public bool fSpec;
    public SprmType Type;
    [NullableAttribute("1")]
public Byte[] Arguments;
    [NullableContextAttribute("1")]
public SinglePropertyModifier(Byte[] bytes);
    public static byte GetOperandSize(byte spra);
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
public sealed virtual void Convert(T mapping);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.SprmTDefTable : object {
    public byte numberOfColumns;
    public Int16[] rgdxaCenter;
    public TC80[] rgTc80;
    public SprmTDefTable(Byte[] bytes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.StringTable : object {
    public bool fExtend;
    public int cData;
    public ushort cbExtra;
    public List`1<string> Strings;
    public List`1<ByteStructure> Data;
    private Encoding _enc;
    public StringTable(Type dataType,    reader);
    public StringTable(Type dataType,    tableStream, UInt32 fc, UInt32 lcb);
    private void parse(Type dataType,    reader, UInt32 fc);
    public sealed virtual void Convert(T mapping);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class External.Office.Doc.StwStructure : Dictionary`2<string, string> {
    public StwStructure(   tableStream, UInt32 fc, UInt32 lcb);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.StyleSheet : object {
    public StyleSheetInformation stshi;
    public List`1<StyleSheetDescription> Styles;
    public StyleSheet(FileInformationBlock fib,    tableStream,    dataStream);
    public sealed virtual void Convert(T mapping);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.StyleSheetDescription : object {
    public string xstzName;
    public StyleIdentifier sti;
    public bool fScratch;
    public bool fInvalHeight;
    public bool fHasUpe;
    public bool fMassCopy;
    public StyleKind stk;
    public UInt32 istdBase;
    public ushort cupx;
    public UInt32 istdNext;
    public ushort bchUpe;
    public bool fAutoRedef;
    public bool fHidden;
    public bool f97LidsSet;
    public bool fCopyLang;
    public bool fPersonalCompose;
    public bool fPersonalReply;
    public bool fPersonal;
    public bool fNoHtmlExport;
    public bool fSemiHidden;
    public bool fLocked;
    public bool fInternalUse;
    public bool fUnhideWhenUsed;
    public bool fQFormat;
    public UInt32 istdLink;
    public UInt32 iPriority;
    public bool fHasOriginalStyle;
    public UInt32 rsid;
    public ParagraphPropertyExceptions papx;
    public CharacterPropertyExceptions chpx;
    public TablePropertyExceptions tapx;
    public StyleSheetDescription(Byte[] bytes, int cbStdBase,    dataStream);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.StyleSheetInformation : object {
    public ushort cstd;
    public ushort cbSTDBaseInFile;
    public bool fStdStylenamesWritten;
    public ushort stiMaxWhenSaved;
    public ushort istdMaxFixedWhenSaved;
    public ushort nVerBuiltInNamesWhenSaved;
    public UInt16[] rgftcStandardChpStsh;
    public ushort cbLSD;
    public LatentStyleData[] mpstilsd;
    public StyleSheetInformation(Byte[] bytes);
}
internal class External.Office.Doc.TabDescriptor : object {
    public byte jc;
    public byte tlc;
    public TabDescriptor(byte b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.TablePropertyExceptions : PropertyExceptions {
    public TablePropertyExceptions(Byte[] bytes);
    public TablePropertyExceptions(ParagraphPropertyExceptions papx,    dataStream);
    public virtual void Convert(T mapping);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.TC80 : ValueType {
    public byte horzMerge;
    public TextFlow textFlow;
    public VerticalMergeFlag vertMerge;
    public VerticalAlign vertAlign;
    public CellWidthType ftsWidth;
    public bool fFitText;
    public bool fNoWrap;
    public bool fHideMark;
    public short wWidth;
    public BorderCode brcTop;
    public BorderCode brcLeft;
    public BorderCode brcBottom;
    public BorderCode brcRight;
}
internal static class External.Office.Doc.TextMark : object {
    public static char ParagraphEnd;
    public static char HardLineBreak;
    public static char BreakingHyphen;
    public static char NonRequiredHyphen;
    public static char NonBreakingHyphen;
    public static char NonBreakingSpace;
    public static char Space;
    public static char PageBreakOrSectionMark;
    public static char ColumnBreak;
    public static char Tab;
    public static char FieldBeginMark;
    public static char FieldEndMark;
    public static char FieldSeperator;
    public static char CellOrRowMark;
    public static char CurrentPageNumber;
    public static char Picture;
    public static char AutoNumberedFootnoteReference;
    public static char FootnoteSeparator;
    public static char FootnoteContinuation;
    public static char AnnotationReference;
    public static char LineNumber;
    public static char HandAnnotationPicture;
    public static char DrawnObject;
    public static char Symbol;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.ToolbarControl : ByteStructure {
    public byte bSignature;
    public byte bVersion;
    public bool fHidden;
    public bool fBeginGroup;
    public bool fOwnLine;
    public bool fNoCustomize;
    public bool fSaveDxy;
    public bool fBeginLine;
    public ToolbarControlType tct;
    public short tcid;
    public int tbct;
    public byte bPriority;
    public ushort width;
    public ushort height;
    public Byte[] cid;
    public bool fSaveText;
    public bool fSaveMiscUIStrings;
    public bool fSaveMiscCustom;
    public bool fDisabled;
    public string customText;
    public string descriptionText;
    public string tooltip;
    public string helpFile;
    public int idHelpContext;
    public string tag;
    public string onAction;
    public string param;
    public byte tbcu;
    public byte tbmg;
    public ToolbarControl(   reader);
}
internal class External.Office.Doc.ToolbarControlBitmap : ByteStructure {
    public int cbDIB;
    [NullableContextAttribute("1")]
public ToolbarControlBitmap(   reader);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.ToolbarCustomization : ByteStructure {
    public int tbidForTBD;
    public short ctbds;
    public CustomToolbar customToolbar;
    public List`1<ToolbarDelta> customToolbarDeltas;
    public ToolbarCustomization(   reader);
}
internal class External.Office.Doc.ToolbarDelta : ByteStructure {
    public static int TBDelta_LENGTH;
    public int dopr;
    public bool fAtEnd;
    public byte ibts;
    public int cidNext;
    public int cid;
    public int fc;
    public bool fOnDisk;
    public int iTB;
    public bool fDead;
    public ushort cbTBC;
    [NullableContextAttribute("1")]
public ToolbarDelta(   reader);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.UnspportedFileVersionException : Exception {
    private static string MSG;
    public UnspportedFileVersionException(string text);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Doc.WordDocument : object {
    private static FcCharacterPropertyExceptionsPairComparer fcCharacterPropertyExceptionsPairComparer;
    public Dictionary`2<int, SectionPropertyExceptions> AllSepx;
    public Dictionary`2<int, ParagraphPropertyExceptions> AllPapx;
    public PieceTable PieceTable;
    public CommandTable CommandTable;
    public Plex`1<SectionDescriptor> SectionPlex;
    public StringTable RevisionAuthorTable;
    public    WordDocumentStream;
    public    TableStream;
    public    DataStream;
    public    SummaryInformationStream;
    public    DocumentSummaryInformationStream;
    public    Storage;
    public FileInformationBlock FIB;
    public List`1<char> Text;
    public StyleSheet Styles;
    public StringTable FontTable;
    public StringTable BookmarkNames;
    public StringTable AutoTextNames;
    public StringTable AssociatedNames;
    public Plex`1<AnnotationReferenceDescriptor> AnnotationsReferencePlex;
    public AnnotationOwnerList AnnotationOwners;
    [CompilerGeneratedAttribute]
private FieldTable <FieldTable>k__BackingField;
    public AnnotationReferenceExtraTable AnnotationReferenceExtraTable;
    public ListTable ListTable;
    public OfficeArtContent OfficeArtContent;
    public Plex`1<FileShapeAddress> OfficeDrawingPlex;
    public Plex`1<FileShapeAddress> OfficeDrawingPlexHeader;
    public Plex`1<Exception> AutoTextPlex;
    public Plex`1<short> EndnoteReferencePlex;
    public Plex`1<short> FootnoteReferencePlex;
    public Plex`1<BreakDescriptor> TextboxBreakPlex;
    public Plex`1<BreakDescriptor> TextboxBreakPlexHeader;
    public Plex`1<BookmarkFirst> BookmarkStartPlex;
    public Plex`1<Exception> BookmarkEndPlex;
    public DocumentProperties DocumentProperties;
    public ListFormatOverrideTable ListFormatOverrideTable;
    public List`1<FormattedDiskPagePAPX> AllPapxFkps;
    public List`1<FormattedDiskPageCHPX> AllChpxFkps;
    public HeaderAndFooterTable HeaderAndFooterTable;
    public StwStructure UserVariables;
    public WordDocument Glossary;
    public PropertySetStream SummaryInformation;
    public PropertySetStream DocumentSummaryInformation;
    private List`1<FcCharacterPropertyExceptionsPair> fcCharacterPropertyExceptionsPairs;
    public FieldTable FieldTable { get; public set; }
    private static WordDocument();
    public WordDocument(   reader);
    public WordDocument(   reader, int fibFC);
    [CompilerGeneratedAttribute]
public FieldTable get_FieldTable();
    [CompilerGeneratedAttribute]
public void set_FieldTable(FieldTable value);
    private void parse(   reader, int fibFC);
    private void FillFcCharacterPropertyExceptionsPairs();
    public List`1<FcCharacterPropertyExceptionsPair> GetCharacterPropertyExceptions(int fcMin, int fcMax);
    public sealed virtual void Convert(T mapping);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[OfficeRecordAttribute("61469", "61470", "61471", "61481", "61482")]
internal class External.Office.Drawing.BitmapBlip : Record {
    public Byte[] m_rgbUid;
    public Byte[] m_rgbUidPrimary;
    public byte m_bTag;
    public Byte[] m_pvBits;
    public BitmapBlip(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
}
internal class External.Office.Drawing.BlipBooleanProperties : object {
    public bool fPictureActive;
    public bool fPictureBiLevel;
    public bool fPictureGray;
    public bool fNoHitTestPicture;
    public bool fLooping;
    public bool fRewind;
    public bool fPicturePreserveGrays;
    public bool fusefPictureActive;
    public bool fusefPictureBiLevel;
    public bool fusefPictureGray;
    public bool fusefNoHitTestPicture;
    public bool fusefLooping;
    public bool fusefRewind;
    public bool fusefPicturePreserveGrays;
    public BlipBooleanProperties(UInt32 entryOperand);
}
[OfficeRecordAttribute("61441")]
internal class External.Office.Drawing.BlipStoreContainer : RegularContainer {
    [NullableContextAttribute("1")]
public BlipStoreContainer(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
}
[OfficeRecordAttribute("61447")]
internal class External.Office.Drawing.BlipStoreEntry : Record {
    public BlipType btWin32;
    public BlipType btMacOS;
    [NullableAttribute("1")]
public Byte[] rgbUid;
    public short tag;
    public UInt32 size;
    public UInt32 cRef;
    public UInt32 foDelay;
    public BlipUsage usage;
    public byte cbName;
    public byte unused2;
    public byte unused3;
    [NullableAttribute("1")]
public Record Blip;
    [NullableContextAttribute("1")]
public BlipStoreEntry(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
}
[OfficeRecordAttribute("61455")]
internal class External.Office.Drawing.ChildAnchor : Record {
    public  ​  rcgBounds;
    public int Left;
    public int Top;
    public int Right;
    public int Bottom;
    [NullableContextAttribute("1")]
public ChildAnchor(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[OfficeRecordAttribute("61456")]
internal class External.Office.Drawing.ClientAnchor : Record {
    public Byte[] Bytes;
    public int Top { get; }
    public int Left { get; }
    public int Right { get; }
    public int Bottom { get; }
    public ClientAnchor(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
    public int get_Top();
    public int get_Left();
    public int get_Right();
    public int get_Bottom();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[OfficeRecordAttribute("61457")]
internal class External.Office.Drawing.ClientData : Record {
    public Byte[] bytes;
    public ClientData(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[OfficeRecordAttribute("61453")]
internal class External.Office.Drawing.ClientTextbox : Record {
    public Byte[] Bytes;
    public ClientTextbox(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
}
internal class External.Office.Drawing.DiagramBooleans : object {
    public bool fPseudoInline;
    public bool fDoLayout;
    public bool fReverse;
    public bool fDoFormat;
    public bool fUsefPseudoInline;
    public bool fUsefDoLayout;
    public bool fUsefReverse;
    public bool fUsefDoFormat;
    public DiagramBooleans(UInt32 entryOperand);
}
[OfficeRecordAttribute("61442")]
internal class External.Office.Drawing.DrawingContainer : RegularContainer {
    [NullableContextAttribute("1")]
public DrawingContainer(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
}
[OfficeRecordAttribute("61440")]
internal class External.Office.Drawing.DrawingGroup : RegularContainer {
    [NullableContextAttribute("1")]
public DrawingGroup(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[OfficeRecordAttribute("61446")]
internal class External.Office.Drawing.DrawingGroupRecord : Record {
    public UInt32 MaxShapeId;
    public UInt32 IdClustersCount;
    public UInt32 ShapesSavedCount;
    public UInt32 DrawingsSavedCount;
    public List`1<FileIdCluster> Clusters;
    public DrawingGroupRecord(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
    public virtual string ToString(UInt32 depth);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[OfficeRecordAttribute("61448")]
internal class External.Office.Drawing.DrawingRecord : Record {
    public UInt32 csp;
    public int spidCur;
    public DrawingRecord(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
    public virtual string ToString(UInt32 depth);
}
[OfficeRecordAttribute("61460")]
internal class External.Office.Drawing.FArcRule : Record {
    public UInt32 ruid;
    public UInt32 spid;
    [NullableContextAttribute("1")]
public FArcRule(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
}
[OfficeRecordAttribute("61463")]
internal class External.Office.Drawing.FCalloutRule : Record {
    public UInt32 ruid;
    public UInt32 spid;
    [NullableContextAttribute("1")]
public FCalloutRule(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
}
[OfficeRecordAttribute("61458")]
internal class External.Office.Drawing.FConnectorRule : Record {
    public UInt32 ruid;
    public UInt32 spidA;
    public UInt32 spidB;
    public UInt32 spidC;
    public UInt32 cptiA;
    public UInt32 cptiB;
    [NullableContextAttribute("1")]
public FConnectorRule(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
}
internal class External.Office.Drawing.FillStyleBooleanProperties : object {
    public bool fNoFillHitTest;
    public bool fillUseRect;
    public bool fillShape;
    public bool fHitTestFill;
    public bool fFilled;
    public bool fUseShapeAnchor;
    public bool fRecolorFillAsPicture;
    public bool fUsefNoFillHitTest;
    public bool fUsefillUseRect;
    public bool fUsefillShape;
    public bool fUseHitTestFill;
    public bool fUsefFilled;
    public bool fUsefUseShapeAnchor;
    public bool fUsefRecolorFillAsPicture;
    public FillStyleBooleanProperties(UInt32 entryOperand);
}
internal class External.Office.Drawing.GD : object {
    public int sgf;
    public bool fCalculatedParam1;
    public bool fCalculatedParam2;
    public bool fCalculatedParam3;
    public short param1;
    public short param2;
    public short param3;
    public GD(ushort flags, short p1, short p2, short p3);
}
internal class External.Office.Drawing.GeometryBooleans : object {
    public bool fFillOK;
    public bool fFillShadeShapeOK;
    public bool fGtextOK;
    public bool fLineOK;
    public bool f3DOK;
    public bool fShadowOK;
    public bool fUsefFillOK;
    public bool fUsefFillShadeShapeOK;
    public bool fUsefGtextOK;
    public bool fUsefLineOK;
    public bool fUsef3DOK;
    public bool fUsefShadowOK;
    public GeometryBooleans(UInt32 entryOperand);
}
internal class External.Office.Drawing.GeometryTextBooleanProperties : object {
    public bool gtextFStrikethrough;
    public bool gtextFSmallcaps;
    public bool gtextFShadow;
    public bool gtextFUnderline;
    public bool gtextFItalic;
    public bool gtextFBold;
    public bool gtextFDxMeasure;
    public bool gtextFNormalize;
    public bool gtextFBestFit;
    public bool gtextFShrinkFit;
    public bool gtextFStretch;
    public bool gtextFTight;
    public bool gtextFKern;
    public bool gtextFVertical;
    public bool fGtext;
    public bool gtextFReverseRows;
    public bool fUsegtextFSStrikeThrough;
    public bool fUsegtextFSmallcaps;
    public bool fUsegtextFShadow;
    public bool fUsegtextFUnderline;
    public bool fUsegtextFItalic;
    public bool fUsegtextFBold;
    public bool fUsegtextFDxMeasure;
    public bool fUsegtextFNormalize;
    public bool fUsegtextFBestFit;
    public bool fUsegtextFShrinkFit;
    public bool fUsegtextFStretch;
    public bool fUsegtextFTight;
    public bool fUsegtextFKern;
    public bool fUsegtextFVertical;
    public bool fUsefGtext;
    public bool fUsegtextFReverseRows;
    public GeometryTextBooleanProperties(UInt32 entryOperand);
}
[OfficeRecordAttribute("61443")]
internal class External.Office.Drawing.GroupContainer : RegularContainer {
    public int Index;
    [NullableContextAttribute("1")]
public GroupContainer(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
}
internal class External.Office.Drawing.GroupShapeBooleans : object {
    public bool fPrint;
    public bool fHidden;
    public bool fOneD;
    public bool fIsButton;
    public bool fOnDblClickNotify;
    public bool fBehindDocument;
    public bool fEditedWrap;
    public bool fScriptAnchor;
    public bool fReallyHidden;
    public bool fAllowOverlap;
    public bool fUserDrawn;
    public bool fHorizRule;
    public bool fNoshadeHR;
    public bool fStandardHR;
    public bool fIsBullet;
    public bool fLayoutInCell;
    public bool fUsefPrint;
    public bool fUsefHidden;
    public bool fUsefOneD;
    public bool fUsefIsButton;
    public bool fUsefOnDblClickNotify;
    public bool fUsefBehindDocument;
    public bool fUsefEditedWrap;
    public bool fUsefScriptAnchor;
    public bool fUsefReallyHidden;
    public bool fUsefAllowOverlap;
    public bool fUsefUserDrawn;
    public bool fUsefHorizRule;
    public bool fUsefNoshadeHR;
    public bool fUsefStandardHR;
    public bool fUsefIsBullet;
    public bool fUsefLayoutInCell;
    public GroupShapeBooleans(UInt32 entryOperand);
}
[OfficeRecordAttribute("61449")]
internal class External.Office.Drawing.GroupShapeRecord : Record {
    public  ​  rcgBounds;
    [NullableContextAttribute("1")]
public GroupShapeRecord(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Drawing.InvalidRecordException : Exception {
    public InvalidRecordException(string msg);
    public InvalidRecordException(string msg, Exception innerException);
}
internal class External.Office.Drawing.LineStyleBooleans : object {
    public bool fNoLineDrawDash;
    public bool fLineFillShape;
    public bool fHitTestLine;
    public bool fLine;
    public bool fArrowheadsOK;
    public bool fInsetPenOK;
    public bool fInsetPen;
    public bool fLineOpaqueBackColor;
    public bool fUsefNoLineDrawDash;
    public bool fUsefLineFillShape;
    public bool fUsefHitTestLine;
    public bool fUsefLine;
    public bool fUsefArrowheadsOK;
    public bool fUsefInsetPenOK;
    public bool fUsefInsetPen;
    public bool fUsefLineOpaqueBackColor;
    public LineStyleBooleans(UInt32 entryOperand);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[OfficeRecordAttribute("61466", "61467", "61468")]
internal class External.Office.Drawing.MetafilePictBlip : Record {
    public Byte[] m_rgbUid;
    public Byte[] m_rgbUidPrimary;
    public int m_cb;
    public  ​  m_rcBounds;
    public  ​  m_ptSize;
    public int m_cbSave;
    public BlipCompression m_fCompression;
    public bool m_fFilter;
    public Byte[] m_pvBits;
    public MetafilePictBlip(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
    public Byte[] Decrompress();
}
[AttributeUsageAttribute("4")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Drawing.OfficeRecordAttribute : Attribute {
    [CompilerGeneratedAttribute]
private UInt16[] <TypeCodes>k__BackingField;
    public UInt16[] TypeCodes { get; private set; }
    private OfficeRecordAttribute(UInt16[] typecodes);
    public OfficeRecordAttribute(ushort typecode);
    public OfficeRecordAttribute(ushort typecode1, ushort typecode2, ushort typecode3);
    public OfficeRecordAttribute(ushort typecode1, ushort typecode2, ushort typecode3, ushort typecode4, ushort typecode5);
    [CompilerGeneratedAttribute]
public UInt16[] get_TypeCodes();
    [CompilerGeneratedAttribute]
private void set_TypeCodes(UInt16[] value);
}
[AttributeUsageAttribute("4")]
internal class External.Office.Drawing.OfficeShapeTypeAttribute : Attribute {
    public UInt32 TypeCode;
    public OfficeShapeTypeAttribute(UInt32 typecode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Drawing.PathParser : object {
    [CompilerGeneratedAttribute]
private List`1< ​ > <Values>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<GD> <Guides>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<PathSegment> <Segments>k__BackingField;
    public ushort cbElemVert;
    public List`1< ​ > Values { get; public set; }
    public List`1<GD> Guides { get; public set; }
    public List`1<PathSegment> Segments { get; public set; }
    public PathParser(Byte[] pSegmentInfo, Byte[] pVertices);
    public PathParser(Byte[] pSegmentInfo, Byte[] pVertices, Byte[] pGuides);
    [CompilerGeneratedAttribute]
public List`1< ​ > get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(List`1< ​ > value);
    [CompilerGeneratedAttribute]
public List`1<GD> get_Guides();
    [CompilerGeneratedAttribute]
public void set_Guides(List`1<GD> value);
    [CompilerGeneratedAttribute]
public List`1<PathSegment> get_Segments();
    [CompilerGeneratedAttribute]
public void set_Segments(List`1<PathSegment> value);
}
internal class External.Office.Drawing.PathSegment : object {
    [CompilerGeneratedAttribute]
private SegmentType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private int <EscapeCode>k__BackingField;
    [CompilerGeneratedAttribute]
private int <VertexCount>k__BackingField;
    public SegmentType Type { get; public set; }
    public int Count { get; public set; }
    public int EscapeCode { get; public set; }
    public int VertexCount { get; public set; }
    public PathSegment(ushort segment);
    [CompilerGeneratedAttribute]
public SegmentType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(SegmentType value);
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(int value);
    [CompilerGeneratedAttribute]
public int get_EscapeCode();
    [CompilerGeneratedAttribute]
public void set_EscapeCode(int value);
    [CompilerGeneratedAttribute]
public int get_VertexCount();
    [CompilerGeneratedAttribute]
public void set_VertexCount(int value);
}
internal class External.Office.Drawing.ProtectionBooleans : object {
    public bool fLockAgainstGrouping;
    public bool fLockAdjustHandles;
    public bool fLockText;
    public bool fLockVertices;
    public bool fLockCropping;
    public bool fLockAgainstSelect;
    public bool fLockPosition;
    public bool fLockAspectRatio;
    public bool fLockRotation;
    public bool fLockAgainstUngrouping;
    public bool fUsefLockAgainstGrouping;
    public bool fUsefLockAdjustHandles;
    public bool fUsefLockText;
    public bool fUsefLockVertices;
    public bool fUsefLockCropping;
    public bool fUsefLockAgainstSelect;
    public bool fUsefLockPosition;
    public bool fUsefLockAspectRatio;
    public bool fUsefLockRotation;
    public bool fUsefLockAgainstUngrouping;
    public ProtectionBooleans(UInt32 entryOperand);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Drawing.Record : object {
    public static UInt32 HEADER_SIZE_IN_BYTES;
    private Record _ParentRecord;
    public UInt32 HeaderSize;
    public UInt32 BodySize;
    public Byte[] RawData;
    protected BinaryReader Reader;
    public UInt32 SiblingIdx;
    public UInt32 TypeCode;
    public UInt32 Version;
    public UInt32 Instance;
    private static Dictionary`2<ushort, Type> TypeToRecordClassMapping;
    public UInt32 TotalSize { get; }
    public Record ParentRecord { get; public set; }
    public bool DoAutomaticVerifyReadToEnd { get; }
    public Record(BinaryReader _reader, UInt32 bodySize, UInt32 typeCode, UInt32 version, UInt32 instance);
    private static Record();
    public UInt32 get_TotalSize();
    public Record get_ParentRecord();
    public void set_ParentRecord(Record value);
    public virtual void AfterParentSet();
    public string GetIdentifier();
    public string FormatType();
    public virtual string ToString(UInt32 depth);
    public virtual string ToString();
    public virtual bool get_DoAutomaticVerifyReadToEnd();
    public void VerifyReadToEnd();
    public T FirstAncestorWithType();
    private sealed virtual override void External.Office.Common.Translator.IVisitable.Convert(T mapping);
    [IteratorStateMachineAttribute("External.Office.Drawing.Record/<GetEnumerator>d__27")]
public virtual IEnumerator`1<Record> GetEnumerator();
    [IteratorStateMachineAttribute("External.Office.Drawing.Record/<System-Collections-IEnumerable-GetEnumerator>d__28")]
private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public static string IndentationForDepth(UInt32 depth);
    public static void UpdateTypeToRecordClassMapping(Assembly assembly, string ns);
    public static Record ReadRecord(Stream stream);
    public static Record ReadRecord(BinaryReader reader);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Drawing.RegularContainer : Record {
    public List`1<Record> Children;
    public RegularContainer(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
    public virtual string ToString(UInt32 depth);
    public List`1<T> AllChildrenWithType();
    public T FirstChildWithType();
    public T FirstDescendantWithType();
    [IteratorStateMachineAttribute("External.Office.Drawing.RegularContainer/<GetEnumerator>d__6")]
public virtual IEnumerator`1<Record> GetEnumerator();
}
internal class External.Office.Drawing.ShadowStyleBooleanProperties : object {
    public bool fShadowObscured;
    public bool fShadow;
    public bool fUsefshadowObscured;
    public bool fUsefShadow;
    public ShadowStyleBooleanProperties(UInt32 entryOperand);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[OfficeRecordAttribute("61450")]
internal class External.Office.Drawing.Shape : Record {
    public int spid;
    public bool fGroup;
    public bool fChild;
    public bool fPatriarch;
    public bool fDeleted;
    public bool fOleShape;
    public bool fHaveMaster;
    public bool fFlipH;
    public bool fFlipV;
    public bool fConnector;
    public bool fHaveAnchor;
    public bool fBackground;
    public bool fHaveSpt;
    public ShapeType ShapeType;
    public Shape(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
    public virtual string ToString(UInt32 depth);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[OfficeRecordAttribute("61444")]
internal class External.Office.Drawing.ShapeContainer : RegularContainer {
    public int Index;
    public ShapeContainer(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
    public List`1<OptionEntry> ExtractOptions();
    public sealed virtual void Convert(T mapping);
}
[OfficeRecordAttribute("61451", "61729", "61730")]
internal class External.Office.Drawing.ShapeOptions : Record {
    [NullableAttribute("1")]
public OptionEntry[] Options;
    [NullableAttribute("1")]
public Dictionary`2<PropertyId, OptionEntry> OptionsByID;
    [NullableContextAttribute("1")]
public ShapeOptions(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
}
[OfficeShapeTypeAttribute("50")]
internal class External.Office.Drawing.Shapetypes.AccentBorderCallout1Type : ShapeType {
}
[OfficeShapeTypeAttribute("51")]
internal class External.Office.Drawing.Shapetypes.AccentBorderCallout2Type : ShapeType {
}
[OfficeShapeTypeAttribute("52")]
internal class External.Office.Drawing.Shapetypes.AccentBorderCallout3Type : ShapeType {
}
[OfficeShapeTypeAttribute("181")]
internal class External.Office.Drawing.Shapetypes.AccentBorderCallout90Type : ShapeType {
}
[OfficeShapeTypeAttribute("44")]
internal class External.Office.Drawing.Shapetypes.AccentCallout1Type : ShapeType {
}
[OfficeShapeTypeAttribute("45")]
internal class External.Office.Drawing.Shapetypes.AccentCallout2Type : ShapeType {
}
[OfficeShapeTypeAttribute("46")]
internal class External.Office.Drawing.Shapetypes.AccentCallout3Type : ShapeType {
}
[OfficeShapeTypeAttribute("179")]
internal class External.Office.Drawing.Shapetypes.AccentCallout90Type : ShapeType {
}
[OfficeShapeTypeAttribute("189")]
internal class External.Office.Drawing.Shapetypes.ActionButtonBlank : ShapeType {
}
[OfficeShapeTypeAttribute("19")]
internal class External.Office.Drawing.Shapetypes.ArcType : ShapeType {
}
[OfficeShapeTypeAttribute("91")]
internal class External.Office.Drawing.Shapetypes.BentArrowType : ShapeType {
}
[OfficeShapeTypeAttribute("90")]
internal class External.Office.Drawing.Shapetypes.BentUpArrowType : ShapeType {
}
[OfficeShapeTypeAttribute("84")]
internal class External.Office.Drawing.Shapetypes.BevelType : ShapeType {
}
[OfficeShapeTypeAttribute("95")]
internal class External.Office.Drawing.Shapetypes.BlockArcType : ShapeType {
}
[OfficeShapeTypeAttribute("47")]
internal class External.Office.Drawing.Shapetypes.BorderCallout1Type : ShapeType {
}
[OfficeShapeTypeAttribute("48")]
internal class External.Office.Drawing.Shapetypes.BorderCallout2Type : ShapeType {
}
[OfficeShapeTypeAttribute("49")]
internal class External.Office.Drawing.Shapetypes.BorderCallout3Type : ShapeType {
}
[OfficeShapeTypeAttribute("180")]
internal class External.Office.Drawing.Shapetypes.BorderCallout90Type : ShapeType {
}
[OfficeShapeTypeAttribute("186")]
internal class External.Office.Drawing.Shapetypes.BracePairType : ShapeType {
}
[OfficeShapeTypeAttribute("185")]
internal class External.Office.Drawing.Shapetypes.BracketPairType : ShapeType {
}
[OfficeShapeTypeAttribute("41")]
internal class External.Office.Drawing.Shapetypes.Callout1Type : ShapeType {
}
[OfficeShapeTypeAttribute("42")]
internal class External.Office.Drawing.Shapetypes.Callout2Type : ShapeType {
}
[OfficeShapeTypeAttribute("43")]
internal class External.Office.Drawing.Shapetypes.Callout3Type : ShapeType {
}
[OfficeShapeTypeAttribute("178")]
internal class External.Office.Drawing.Shapetypes.Callout90Type : ShapeType {
}
[OfficeShapeTypeAttribute("22")]
internal class External.Office.Drawing.Shapetypes.CanType : ShapeType {
}
[OfficeShapeTypeAttribute("55")]
internal class External.Office.Drawing.Shapetypes.ChevronType : ShapeType {
}
[OfficeShapeTypeAttribute("99")]
internal class External.Office.Drawing.Shapetypes.CircularArrowType : ShapeType {
}
[OfficeShapeTypeAttribute("106")]
internal class External.Office.Drawing.Shapetypes.CloudCalloutType : ShapeType {
}
[OfficeShapeTypeAttribute("16")]
internal class External.Office.Drawing.Shapetypes.CubeType : ShapeType {
}
[OfficeShapeTypeAttribute("105")]
internal class External.Office.Drawing.Shapetypes.CurvedDownArrowType : ShapeType {
}
[OfficeShapeTypeAttribute("103")]
internal class External.Office.Drawing.Shapetypes.CurvedLeftArrowType : ShapeType {
}
[OfficeShapeTypeAttribute("102")]
internal class External.Office.Drawing.Shapetypes.CurvedRightArrowType : ShapeType {
}
[OfficeShapeTypeAttribute("104")]
internal class External.Office.Drawing.Shapetypes.CurvedUpArrowType : ShapeType {
}
[OfficeShapeTypeAttribute("4")]
internal class External.Office.Drawing.Shapetypes.DiamondType : ShapeType {
}
[OfficeShapeTypeAttribute("23")]
internal class External.Office.Drawing.Shapetypes.DonutType : ShapeType {
}
[OfficeShapeTypeAttribute("188")]
internal class External.Office.Drawing.Shapetypes.DoubleWaveType : ShapeType {
}
[OfficeShapeTypeAttribute("80")]
internal class External.Office.Drawing.Shapetypes.DownArrowCalloutType : ShapeType {
}
[OfficeShapeTypeAttribute("67")]
internal class External.Office.Drawing.Shapetypes.DownArrowType : ShapeType {
}
[OfficeShapeTypeAttribute("108")]
internal class External.Office.Drawing.Shapetypes.EllipsedRibbon2Type : ShapeType {
}
[OfficeShapeTypeAttribute("107")]
internal class External.Office.Drawing.Shapetypes.EllipseRibbonType : ShapeType {
}
[OfficeShapeTypeAttribute("176")]
internal class External.Office.Drawing.Shapetypes.FlowChartAlternateProcessType : ShapeType {
}
[OfficeShapeTypeAttribute("125")]
internal class External.Office.Drawing.Shapetypes.FlowChartCollateType : ShapeType {
}
[OfficeShapeTypeAttribute("120")]
internal class External.Office.Drawing.Shapetypes.FlowChartConnectorType : ShapeType {
}
[OfficeShapeTypeAttribute("110")]
internal class External.Office.Drawing.Shapetypes.FlowChartDecisionType : ShapeType {
}
[OfficeShapeTypeAttribute("135")]
internal class External.Office.Drawing.Shapetypes.FlowChartDelayType : ShapeType {
}
[OfficeShapeTypeAttribute("134")]
internal class External.Office.Drawing.Shapetypes.FlowChartDisplayType : ShapeType {
}
[OfficeShapeTypeAttribute("114")]
internal class External.Office.Drawing.Shapetypes.FlowChartDocumentType : ShapeType {
}
[OfficeShapeTypeAttribute("127")]
internal class External.Office.Drawing.Shapetypes.FlowChartExtractType : ShapeType {
}
[OfficeShapeTypeAttribute("111")]
internal class External.Office.Drawing.Shapetypes.FlowChartInputOutputType : ShapeType {
}
[OfficeShapeTypeAttribute("113")]
internal class External.Office.Drawing.Shapetypes.FlowChartInternalStorageType : ShapeType {
}
[OfficeShapeTypeAttribute("132")]
internal class External.Office.Drawing.Shapetypes.FlowChartMagneticDiskType : ShapeType {
}
[OfficeShapeTypeAttribute("133")]
internal class External.Office.Drawing.Shapetypes.FlowChartMagneticDrumType : ShapeType {
}
[OfficeShapeTypeAttribute("131")]
internal class External.Office.Drawing.Shapetypes.FlowChartMagneticTapeType : ShapeType {
}
[OfficeShapeTypeAttribute("118")]
internal class External.Office.Drawing.Shapetypes.FlowChartManualInputType : ShapeType {
}
[OfficeShapeTypeAttribute("119")]
internal class External.Office.Drawing.Shapetypes.FlowChartManualOperationType : ShapeType {
}
[OfficeShapeTypeAttribute("128")]
internal class External.Office.Drawing.Shapetypes.FlowChartMergeType : ShapeType {
}
[OfficeShapeTypeAttribute("115")]
internal class External.Office.Drawing.Shapetypes.FlowChartMultidocumentType : ShapeType {
}
[OfficeShapeTypeAttribute("177")]
internal class External.Office.Drawing.Shapetypes.FlowChartOffpageConnectorType : ShapeType {
}
[OfficeShapeTypeAttribute("130")]
internal class External.Office.Drawing.Shapetypes.FlowChartOnlineStorageType : ShapeType {
}
[OfficeShapeTypeAttribute("124")]
internal class External.Office.Drawing.Shapetypes.FlowChartOrType : ShapeType {
}
[OfficeShapeTypeAttribute("112")]
internal class External.Office.Drawing.Shapetypes.FlowChartPredefinedProcessType : ShapeType {
}
[OfficeShapeTypeAttribute("117")]
internal class External.Office.Drawing.Shapetypes.FlowChartPreparationType : ShapeType {
}
[OfficeShapeTypeAttribute("109")]
internal class External.Office.Drawing.Shapetypes.FlowChartProcessType : ShapeType {
}
[OfficeShapeTypeAttribute("121")]
internal class External.Office.Drawing.Shapetypes.FlowChartPunchedCardType : ShapeType {
}
[OfficeShapeTypeAttribute("122")]
internal class External.Office.Drawing.Shapetypes.FlowChartPunchedTapeType : ShapeType {
}
[OfficeShapeTypeAttribute("126")]
internal class External.Office.Drawing.Shapetypes.FlowChartSortType : ShapeType {
}
[OfficeShapeTypeAttribute("123")]
internal class External.Office.Drawing.Shapetypes.FlowChartSummingJunctionType : ShapeType {
}
[OfficeShapeTypeAttribute("116")]
internal class External.Office.Drawing.Shapetypes.FlowChartTerminatorType : ShapeType {
}
[OfficeShapeTypeAttribute("65")]
internal class External.Office.Drawing.Shapetypes.FoldedCornerType : ShapeType {
}
[OfficeShapeTypeAttribute("74")]
internal class External.Office.Drawing.Shapetypes.HeartType : ShapeType {
}
[OfficeShapeTypeAttribute("9")]
internal class External.Office.Drawing.Shapetypes.HexagonType : ShapeType {
}
[OfficeShapeTypeAttribute("15")]
internal class External.Office.Drawing.Shapetypes.HomePlateType : ShapeType {
}
[OfficeShapeTypeAttribute("98")]
internal class External.Office.Drawing.Shapetypes.HorizontalScrollType : ShapeType {
}
[OfficeShapeTypeAttribute("71")]
internal class External.Office.Drawing.Shapetypes.IrregularSealOneType : ShapeType {
}
[OfficeShapeTypeAttribute("72")]
internal class External.Office.Drawing.Shapetypes.IrregularSealTwo : ShapeType {
}
[OfficeShapeTypeAttribute("5")]
internal class External.Office.Drawing.Shapetypes.IsoscelesTriangleType : ShapeType {
}
[OfficeShapeTypeAttribute("77")]
internal class External.Office.Drawing.Shapetypes.LeftArrowCalloutType : ShapeType {
}
[OfficeShapeTypeAttribute("66")]
internal class External.Office.Drawing.Shapetypes.LeftArrowType : ShapeType {
}
[OfficeShapeTypeAttribute("87")]
internal class External.Office.Drawing.Shapetypes.LeftBraceType : ShapeType {
}
[OfficeShapeTypeAttribute("85")]
internal class External.Office.Drawing.Shapetypes.LeftBracketType : ShapeType {
}
[OfficeShapeTypeAttribute("81")]
internal class External.Office.Drawing.Shapetypes.LeftRightArrowCalloutType : ShapeType {
}
[OfficeShapeTypeAttribute("69")]
internal class External.Office.Drawing.Shapetypes.LeftRightArrowType : ShapeType {
}
[OfficeShapeTypeAttribute("182")]
internal class External.Office.Drawing.Shapetypes.LeftRightUpArrow : ShapeType {
}
[OfficeShapeTypeAttribute("89")]
internal class External.Office.Drawing.Shapetypes.LeftUpArrowType : ShapeType {
}
[OfficeShapeTypeAttribute("73")]
internal class External.Office.Drawing.Shapetypes.LightningBoltType : ShapeType {
}
[OfficeShapeTypeAttribute("20")]
internal class External.Office.Drawing.Shapetypes.LineType : ShapeType {
}
[OfficeShapeTypeAttribute("184")]
internal class External.Office.Drawing.Shapetypes.MoonType : ShapeType {
}
[OfficeShapeTypeAttribute("57")]
internal class External.Office.Drawing.Shapetypes.NoSmokingType : ShapeType {
}
[OfficeShapeTypeAttribute("94")]
internal class External.Office.Drawing.Shapetypes.NotchedRightArrowType : ShapeType {
}
[OfficeShapeTypeAttribute("10")]
internal class External.Office.Drawing.Shapetypes.OctagonType : ShapeType {
}
[OfficeShapeTypeAttribute("3")]
internal class External.Office.Drawing.Shapetypes.OvalType : ShapeType {
}
[OfficeShapeTypeAttribute("7")]
internal class External.Office.Drawing.Shapetypes.ParallelogramType : ShapeType {
}
[OfficeShapeTypeAttribute("56")]
internal class External.Office.Drawing.Shapetypes.PentagonType : ShapeType {
}
[OfficeShapeTypeAttribute("75")]
internal class External.Office.Drawing.Shapetypes.PictureFrameType : ShapeType {
}
[OfficeShapeTypeAttribute("21")]
internal class External.Office.Drawing.Shapetypes.PlaqueType : ShapeType {
}
[OfficeShapeTypeAttribute("11")]
internal class External.Office.Drawing.Shapetypes.PlusType : ShapeType {
}
[OfficeShapeTypeAttribute("83")]
internal class External.Office.Drawing.Shapetypes.QuadArrowCalloutType : ShapeType {
}
[OfficeShapeTypeAttribute("76")]
internal class External.Office.Drawing.Shapetypes.QuadArrowType : ShapeType {
}
[OfficeShapeTypeAttribute("1")]
internal class External.Office.Drawing.Shapetypes.RectangleType : ShapeType {
}
[OfficeShapeTypeAttribute("53")]
internal class External.Office.Drawing.Shapetypes.RibbonDownType : ShapeType {
}
[OfficeShapeTypeAttribute("54")]
internal class External.Office.Drawing.Shapetypes.RibbonUpType : ShapeType {
}
[OfficeShapeTypeAttribute("78")]
internal class External.Office.Drawing.Shapetypes.RightArrowCalloutType : ShapeType {
}
[OfficeShapeTypeAttribute("13")]
internal class External.Office.Drawing.Shapetypes.RightArrowType : ShapeType {
}
[OfficeShapeTypeAttribute("88")]
internal class External.Office.Drawing.Shapetypes.RightBracetype : ShapeType {
}
[OfficeShapeTypeAttribute("86")]
internal class External.Office.Drawing.Shapetypes.RightBracketType : ShapeType {
}
[OfficeShapeTypeAttribute("6")]
internal class External.Office.Drawing.Shapetypes.RightTriangleType : ShapeType {
}
[OfficeShapeTypeAttribute("2")]
internal class External.Office.Drawing.Shapetypes.RoundedRectangleType : RectangleType {
}
[OfficeShapeTypeAttribute("59")]
internal class External.Office.Drawing.Shapetypes.Seal16Type : ShapeType {
}
[OfficeShapeTypeAttribute("92")]
internal class External.Office.Drawing.Shapetypes.Seal24Type : ShapeType {
}
[OfficeShapeTypeAttribute("60")]
internal class External.Office.Drawing.Shapetypes.Seal32Type : ShapeType {
}
[OfficeShapeTypeAttribute("187")]
internal class External.Office.Drawing.Shapetypes.Seal4Type : ShapeType {
}
[OfficeShapeTypeAttribute("58")]
internal class External.Office.Drawing.Shapetypes.Seal8Type : ShapeType {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Drawing.Shapetypes.ShapeType : object {
    public string Path;
    public List`1<string> Formulas;
    public string AdjustmentValues;
    public string ConnectorLocations;
    public string ConnectorType;
    public bool PreferRelative;
    public bool ExtrusionOk;
    public List`1<Handle> Handles;
    public string TextboxRectangle;
    public bool ShapeConcentricFill;
    public JoinStyle Joins;
    public string Limo;
    public string ConnectorAngles;
    public bool Filled;
    public bool Stroked;
    public ProtectionBooleans Lock;
    public bool LockShapeType;
    public bool TextPath;
    public bool TextKerning;
    private static Dictionary`2<UInt32, Type> TypeToShapeClassMapping;
    public UInt32 TypeCode { get; }
    private static ShapeType();
    public UInt32 get_TypeCode();
    public static ShapeType GetShapeType(UInt32 typeCode);
    public static void UpdateTypeToShapeClassMapping(Assembly assembly, string ns);
    public sealed virtual void Convert(T mapping);
}
[OfficeShapeTypeAttribute("96")]
internal class External.Office.Drawing.Shapetypes.SmileyFaceType : ShapeType {
}
[OfficeShapeTypeAttribute("12")]
internal class External.Office.Drawing.Shapetypes.Startype : ShapeType {
}
[OfficeShapeTypeAttribute("32")]
internal class External.Office.Drawing.Shapetypes.StraightConnectorType : ShapeType {
}
[OfficeShapeTypeAttribute("93")]
internal class External.Office.Drawing.Shapetypes.StripedRightArrowType : ShapeType {
}
[OfficeShapeTypeAttribute("183")]
internal class External.Office.Drawing.Shapetypes.SunType : ShapeType {
}
[OfficeShapeTypeAttribute("144")]
internal class External.Office.Drawing.Shapetypes.TextArchUpCurve : ShapeType {
}
[OfficeShapeTypeAttribute("148")]
internal class External.Office.Drawing.Shapetypes.TextArchUpPour : ShapeType {
}
[OfficeShapeTypeAttribute("202")]
internal class External.Office.Drawing.Shapetypes.TextboxType : ShapeType {
}
[OfficeShapeTypeAttribute("175")]
internal class External.Office.Drawing.Shapetypes.TextCanDown : ShapeType {
}
[OfficeShapeTypeAttribute("154")]
internal class External.Office.Drawing.Shapetypes.TextCascadeUp : ShapeType {
}
[OfficeShapeTypeAttribute("150")]
internal class External.Office.Drawing.Shapetypes.TextCirclePour : ShapeType {
}
[OfficeShapeTypeAttribute("153")]
internal class External.Office.Drawing.Shapetypes.TextCurveDown : ShapeType {
}
[OfficeShapeTypeAttribute("152")]
internal class External.Office.Drawing.Shapetypes.TextCurveUp : ShapeType {
}
[OfficeShapeTypeAttribute("161")]
internal class External.Office.Drawing.Shapetypes.TextDeflate : ShapeType {
}
[OfficeShapeTypeAttribute("163")]
internal class External.Office.Drawing.Shapetypes.TextDeflateBottom : ShapeType {
}
[OfficeShapeTypeAttribute("166")]
internal class External.Office.Drawing.Shapetypes.TextDeflateInflate : ShapeType {
}
[OfficeShapeTypeAttribute("170")]
internal class External.Office.Drawing.Shapetypes.TextFadeUp : ShapeType {
}
[OfficeShapeTypeAttribute("136")]
internal class External.Office.Drawing.Shapetypes.TextPlainText : ShapeType {
}
[OfficeShapeTypeAttribute("142")]
internal class External.Office.Drawing.Shapetypes.TextRingInside : ShapeType {
}
[OfficeShapeTypeAttribute("172")]
internal class External.Office.Drawing.Shapetypes.TextSlantUp : ShapeType {
}
[OfficeShapeTypeAttribute("137")]
internal class External.Office.Drawing.Shapetypes.TextStop : ShapeType {
}
[OfficeShapeTypeAttribute("138")]
internal class External.Office.Drawing.Shapetypes.TextTriangle : ShapeType {
}
[OfficeShapeTypeAttribute("156")]
internal class External.Office.Drawing.Shapetypes.TextWave1 : ShapeType {
}
[OfficeShapeTypeAttribute("158")]
internal class External.Office.Drawing.Shapetypes.TextWave3 : ShapeType {
}
[OfficeShapeTypeAttribute("159")]
internal class External.Office.Drawing.Shapetypes.TextWave4 : ShapeType {
}
[OfficeShapeTypeAttribute("8")]
internal class External.Office.Drawing.Shapetypes.TrapezoidType : ShapeType {
}
[OfficeShapeTypeAttribute("79")]
internal class External.Office.Drawing.Shapetypes.UpArrowCalloutType : ShapeType {
}
[OfficeShapeTypeAttribute("68")]
internal class External.Office.Drawing.Shapetypes.UpArrowType : ShapeType {
}
[OfficeShapeTypeAttribute("82")]
internal class External.Office.Drawing.Shapetypes.UpDownArrowCalloutType : ShapeType {
}
[OfficeShapeTypeAttribute("70")]
internal class External.Office.Drawing.Shapetypes.UpDownArrowType : ShapeType {
}
[OfficeShapeTypeAttribute("101")]
internal class External.Office.Drawing.Shapetypes.UturnArrowType : ShapeType {
}
[OfficeShapeTypeAttribute("97")]
internal class External.Office.Drawing.Shapetypes.VerticalScrollType : ShapeType {
}
[OfficeShapeTypeAttribute("64")]
internal class External.Office.Drawing.Shapetypes.WaveType : ShapeType {
}
[OfficeShapeTypeAttribute("63")]
internal class External.Office.Drawing.Shapetypes.WedgeEllipseCalloutType : ShapeType {
}
[OfficeShapeTypeAttribute("61")]
internal class External.Office.Drawing.Shapetypes.WedgeRectCalloutType : ShapeType {
}
[OfficeShapeTypeAttribute("62")]
internal class External.Office.Drawing.Shapetypes.WedgeRoundedRectCalloutType : ShapeType {
}
[OfficeRecordAttribute("61445")]
internal class External.Office.Drawing.SolverContainer : RegularContainer {
    [NullableContextAttribute("1")]
public SolverContainer(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
}
internal class External.Office.Drawing.TextBooleanProperties : object {
    public bool fFitShapeToText;
    public bool fAutoTextMargin;
    public bool fSelectText;
    public bool fUsefFitShapeToText;
    public bool fUsefAutoTextMargin;
    public bool fUsefSelectText;
    public TextBooleanProperties(UInt32 entryOperand);
}
internal class External.Office.Drawing.ThreeDObjectProperties : object {
    public bool fc3DLightFace;
    public bool fc3UseExtrusionColor;
    public bool fc3DMetallic;
    public bool fc3D;
    public bool fUsefc3DLightFace;
    public bool fUsefc3DUseExtrusionColor;
    public bool fUsefc3DMetallic;
    public bool fUsefc3D;
    public ThreeDObjectProperties(UInt32 entryOperand);
}
internal class External.Office.Drawing.ThreeDStyleProperties : object {
    public bool fc3DFillHarsh;
    public bool fc3DKeyHarsh;
    public bool fc3DParallel;
    public bool fc3DRotationCenterAuto;
    public bool fc3DConstrainRotation;
    public bool fUsefc3DFillHarsh;
    public bool fUsefc3DKeyHarsh;
    public bool fUsefc3DParallel;
    public bool fUsefc3DRotationCenterAuto;
    public bool fUsefc3DConstrainRotation;
    public ThreeDStyleProperties(UInt32 entryOperand);
}
internal class External.Office.Drawing.UnknownRecord : Record {
    [NullableContextAttribute("1")]
public UnknownRecord(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Drawing.XmlContainer : XmlRecord {
    public XmlContainer(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
    protected static XmlNodeList GetRelations(ZipArchive zipReader, string forPartPath);
    protected static string GetRelationPath(string forPartPath);
    protected virtual XmlElement ExtractDocumentElement(ZipArchive zipReader, XmlNodeList rels);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Office.Drawing.XmlRecord : Record {
    public XmlElement XmlDocumentElement;
    public XmlRecord(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
}
internal class External.Office.Drawing.XmlStringAtom : XmlRecord {
    [NullableContextAttribute("1")]
public XmlStringAtom(BinaryReader _reader, UInt32 size, UInt32 typeCode, UInt32 version, UInt32 instance);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.AttributeEventArgs : SVGArg {
    public string Attribute;
    public object Value;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ChildAddedEventArgs : SVGArg {
    public SvgElement NewChild;
    public SvgElement BeforeSibling;
}
internal class External.Svg.ContentEventArgs : SVGArg {
    [NullableAttribute("1")]
public string Content;
}
internal class External.Svg.CoordinateParser : object {
    [NullableAttribute("1")]
private string _coords;
    private NumState _currState;
    private NumState _newState;
    private int i;
    [CompilerGeneratedAttribute]
private int <Position>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasMore>k__BackingField;
    public int Position { get; private set; }
    public bool HasMore { get; private set; }
    [NullableContextAttribute("1")]
public CoordinateParser(string coords);
    [CompilerGeneratedAttribute]
public int get_Position();
    [CompilerGeneratedAttribute]
private void set_Position(int value);
    [CompilerGeneratedAttribute]
public bool get_HasMore();
    [CompilerGeneratedAttribute]
private void set_HasMore(bool value);
    private bool MarkState(bool state);
    public bool TryGetBool(Boolean& result);
    public bool TryGetFloat(Single& result);
    private static bool IsCoordSeparator(char value);
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class External.Svg.Css.CssQuery : object {
    public static IEnumerable`1<SvgElement> QuerySelectorAll(IEnumerable`1<SvgElement> items, string selectorRawText, SvgElementOps ops);
    [ExtensionAttribute]
public static int GetSpecificity(BaseSelector selector);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.Css.SvgElementOps : object {
    private SvgElementFactory _elementFactory;
    public SvgElementOps(SvgElementFactory elementFactory);
    public sealed virtual Selector`1<SvgElement> Type(NamespacePrefix prefix, string name);
    public sealed virtual Selector`1<SvgElement> Universal(NamespacePrefix prefix);
    public sealed virtual Selector`1<SvgElement> Id(string id);
    public sealed virtual Selector`1<SvgElement> Class(string clazz);
    public sealed virtual Selector`1<SvgElement> AttributeExists(NamespacePrefix prefix, string name);
    public sealed virtual Selector`1<SvgElement> AttributeExact(NamespacePrefix prefix, string name, string value);
    public sealed virtual Selector`1<SvgElement> AttributeIncludes(NamespacePrefix prefix, string name, string value);
    public sealed virtual Selector`1<SvgElement> AttributeDashMatch(NamespacePrefix prefix, string name, string value);
    public sealed virtual Selector`1<SvgElement> AttributePrefixMatch(NamespacePrefix prefix, string name, string value);
    public sealed virtual Selector`1<SvgElement> AttributeSuffixMatch(NamespacePrefix prefix, string name, string value);
    public sealed virtual Selector`1<SvgElement> AttributeSubstring(NamespacePrefix prefix, string name, string value);
    public sealed virtual Selector`1<SvgElement> FirstChild();
    public sealed virtual Selector`1<SvgElement> LastChild();
    [IteratorStateMachineAttribute("External.Svg.Css.SvgElementOps/<GetByIds>d__15`1")]
private IEnumerable`1<T> GetByIds(IList`1<T> items, IEnumerable`1<int> indices);
    public sealed virtual Selector`1<SvgElement> NthChild(int a, int b);
    public sealed virtual Selector`1<SvgElement> OnlyChild();
    public sealed virtual Selector`1<SvgElement> Empty();
    public sealed virtual Selector`1<SvgElement> Child();
    public sealed virtual Selector`1<SvgElement> Descendant();
    [IteratorStateMachineAttribute("External.Svg.Css.SvgElementOps/<Descendants>d__21")]
private IEnumerable`1<SvgElement> Descendants(SvgElement elem);
    public sealed virtual Selector`1<SvgElement> Adjacent();
    public sealed virtual Selector`1<SvgElement> GeneralSibling();
    private IEnumerable`1<SvgElement> ElementsAfterSelf(SvgElement self);
    public sealed virtual Selector`1<SvgElement> NthLastChild(int a, int b);
    [CompilerGeneratedAttribute]
private IEnumerable`1<SvgElement> <Descendant>b__20_0(IEnumerable`1<SvgElement> nodes);
    [CompilerGeneratedAttribute]
[NullableContextAttribute("0")]
private IEnumerable`1<SvgElement> <Descendant>b__20_1(SvgElement n);
    [CompilerGeneratedAttribute]
private IEnumerable`1<SvgElement> <Adjacent>b__22_0(IEnumerable`1<SvgElement> nodes);
    [CompilerGeneratedAttribute]
[NullableContextAttribute("0")]
private IEnumerable`1<SvgElement> <Adjacent>b__22_1(SvgElement n);
    [CompilerGeneratedAttribute]
private IEnumerable`1<SvgElement> <GeneralSibling>b__23_0(IEnumerable`1<SvgElement> nodes);
    [CompilerGeneratedAttribute]
[NullableContextAttribute("0")]
private IEnumerable`1<SvgElement> <GeneralSibling>b__23_1(SvgElement n);
}
[NullableContextAttribute("1")]
internal interface External.Svg.CssSelector.IElementOps`1 {
    public abstract virtual Selector`1<TElement> Adjacent();
    public abstract virtual Selector`1<TElement> AttributeDashMatch(NamespacePrefix prefix, string name, string value);
    public abstract virtual Selector`1<TElement> AttributeExact(NamespacePrefix prefix, string name, string value);
    public abstract virtual Selector`1<TElement> AttributeExists(NamespacePrefix prefix, string name);
    public abstract virtual Selector`1<TElement> AttributeIncludes(NamespacePrefix prefix, string name, string value);
    public abstract virtual Selector`1<TElement> AttributePrefixMatch(NamespacePrefix prefix, string name, string value);
    public abstract virtual Selector`1<TElement> AttributeSubstring(NamespacePrefix prefix, string name, string value);
    public abstract virtual Selector`1<TElement> AttributeSuffixMatch(NamespacePrefix prefix, string name, string value);
    public abstract virtual Selector`1<TElement> Child();
    public abstract virtual Selector`1<TElement> Class(string clazz);
    public abstract virtual Selector`1<TElement> Descendant();
    public abstract virtual Selector`1<TElement> Empty();
    public abstract virtual Selector`1<TElement> FirstChild();
    public abstract virtual Selector`1<TElement> GeneralSibling();
    public abstract virtual Selector`1<TElement> Id(string id);
    public abstract virtual Selector`1<TElement> LastChild();
    public abstract virtual Selector`1<TElement> NthChild(int a, int b);
    public abstract virtual Selector`1<TElement> NthLastChild(int a, int b);
    public abstract virtual Selector`1<TElement> OnlyChild();
    public abstract virtual Selector`1<TElement> Type(NamespacePrefix prefix, string name);
    public abstract virtual Selector`1<TElement> Universal(NamespacePrefix prefix);
}
[NullableContextAttribute("1")]
internal interface External.Svg.CssSelector.ISelectorGenerator {
    public abstract virtual void Adjacent();
    public abstract virtual void AttributeDashMatch(NamespacePrefix prefix, string name, string value);
    public abstract virtual void AttributeExact(NamespacePrefix prefix, string name, string value);
    public abstract virtual void AttributeExists(NamespacePrefix prefix, string name);
    public abstract virtual void AttributeIncludes(NamespacePrefix prefix, string name, string value);
    public abstract virtual void AttributePrefixMatch(NamespacePrefix prefix, string name, string value);
    public abstract virtual void AttributeSubstring(NamespacePrefix prefix, string name, string value);
    public abstract virtual void AttributeSuffixMatch(NamespacePrefix prefix, string name, string value);
    public abstract virtual void Child();
    public abstract virtual void Class(string clazz);
    public abstract virtual void Descendant();
    public abstract virtual void Empty();
    public abstract virtual void FirstChild();
    public abstract virtual void GeneralSibling();
    public abstract virtual void Id(string id);
    public abstract virtual void LastChild();
    public abstract virtual void NthChild(int a, int b);
    public abstract virtual void NthLastChild(int a, int b);
    public abstract virtual void OnClose();
    public abstract virtual void OnInit();
    public abstract virtual void OnlyChild();
    public abstract virtual void OnSelector();
    public abstract virtual void Type(NamespacePrefix prefix, string name);
    public abstract virtual void Universal(NamespacePrefix prefix);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.CssSelector.NamespacePrefix : ValueType {
    public static NamespacePrefix None;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsNone>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAny>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEmpty>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSpecific>k__BackingField;
    public string Text { get; }
    public bool IsNone { get; }
    public bool IsAny { get; }
    public bool IsEmpty { get; }
    public bool IsSpecific { get; }
    public NamespacePrefix(string text);
    private static NamespacePrefix();
    [CompilerGeneratedAttribute]
[IsReadOnlyAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
[IsReadOnlyAttribute]
public bool get_IsNone();
    [CompilerGeneratedAttribute]
[IsReadOnlyAttribute]
public bool get_IsAny();
    [CompilerGeneratedAttribute]
[IsReadOnlyAttribute]
public bool get_IsEmpty();
    [CompilerGeneratedAttribute]
[IsReadOnlyAttribute]
public bool get_IsSpecific();
    public virtual bool Equals(object obj);
    public bool Equals(NamespacePrefix other);
    public string Format(string name);
    public virtual int GetHashCode();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.CssSelector.Parser : object {
    public static TGenerator Parse(string selectors, TGenerator generator);
    public static T Parse(string selectors, TGenerator generator, Func`2<TGenerator, T> resultor);
    public static TGenerator Parse(IEnumerable`1<Token> tokens, TGenerator generator);
    public static T Parse(IEnumerable`1<Token> tokens, TGenerator generator, Func`2<TGenerator, T> resultor);
}
internal class External.Svg.CssSelector.Selector`1 : MulticastDelegate {
    public Selector`1(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual IEnumerable`1<TElement> Invoke(IEnumerable`1<TElement> elements);
    public virtual IAsyncResult BeginInvoke(IEnumerable`1<TElement> elements, AsyncCallback callback, object object);
    public virtual IEnumerable`1<TElement> EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.CssSelector.SelectorGenerator`1 : object {
    [CompilerGeneratedAttribute]
private Selector`1<TElement> <Selector>k__BackingField;
    [CompilerGeneratedAttribute]
private IElementOps`1<TElement> <Ops>k__BackingField;
    public Selector`1<TElement> Selector { get; }
    public IElementOps`1<TElement> Ops { get; }
    public SelectorGenerator`1(IElementOps`1<TElement> ops);
    public SelectorGenerator`1(IElementOps`1<TElement> ops, IEqualityComparer`1<TElement> equalityComparer);
    [CompilerGeneratedAttribute]
public Selector`1<TElement> get_Selector();
    [CompilerGeneratedAttribute]
public IElementOps`1<TElement> get_Ops();
    public virtual void Adjacent();
    public virtual void AttributeDashMatch(NamespacePrefix prefix, string name, string value);
    public virtual void AttributeExact(NamespacePrefix prefix, string name, string value);
    public virtual void AttributeExists(NamespacePrefix prefix, string name);
    public virtual void AttributeIncludes(NamespacePrefix prefix, string name, string value);
    public sealed virtual void AttributePrefixMatch(NamespacePrefix prefix, string name, string value);
    public sealed virtual void AttributeSubstring(NamespacePrefix prefix, string name, string value);
    public sealed virtual void AttributeSuffixMatch(NamespacePrefix prefix, string name, string value);
    public virtual void Child();
    public virtual void Class(string clazz);
    public virtual void Descendant();
    public virtual void Empty();
    public virtual void FirstChild();
    public virtual void GeneralSibling();
    public IEnumerable`1<Selector`1<TElement>> GetSelectors();
    public virtual void Id(string id);
    public virtual void LastChild();
    public virtual void NthChild(int a, int b);
    public sealed virtual void NthLastChild(int a, int b);
    public virtual void OnClose();
    public virtual void OnInit();
    public virtual void OnlyChild();
    public virtual void OnSelector();
    public virtual void Type(NamespacePrefix prefix, string type);
    public virtual void Universal(NamespacePrefix prefix);
    protected void Add(Selector`1<TElement> selector);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.CssSelector.Token : ValueType {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private TokenKind <Kind>k__BackingField;
    public string Text { get; }
    public TokenKind Kind { get; }
    [CompilerGeneratedAttribute]
[IsReadOnlyAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
[IsReadOnlyAttribute]
public TokenKind get_Kind();
    public static Token Char(char ch);
    public static Token Colon();
    public static Token Comma();
    public static Token DashMatch();
    public static Token Dot();
    public static Token Eoi();
    public static Token Equals();
    public static Token Function(string text);
    public static Token Greater();
    public static Token Hash(string text);
    public static Token Ident(string text);
    public static Token Includes();
    public static Token Integer(string text);
    public static Token LeftBracket();
    public static Token Pipe();
    public static Token Plus();
    public static Token PrefixMatch();
    public static Token RightBracket();
    public static Token RightParenthesis();
    public static Token Star();
    public static Token String(string text);
    public static Token SubstringMatch();
    public static Token SuffixMatch();
    public static Token Tilde();
    public static Token WhiteSpace(string space);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(Token other);
    public virtual int GetHashCode();
    public virtual string ToString();
    public static bool op_Equality(Token a, Token b);
    public static bool op_Inequality(Token a, Token b);
}
internal enum External.Svg.CssSelector.TokenKind : Enum {
    public int value__;
    public static TokenKind Eoi;
    public static TokenKind Ident;
    public static TokenKind Hash;
    public static TokenKind Includes;
    public static TokenKind DashMatch;
    public static TokenKind PrefixMatch;
    public static TokenKind SuffixMatch;
    public static TokenKind SubstringMatch;
    public static TokenKind String;
    public static TokenKind Plus;
    public static TokenKind Greater;
    public static TokenKind WhiteSpace;
    public static TokenKind Function;
    public static TokenKind Integer;
    public static TokenKind Tilde;
    public static TokenKind Char;
}
[TypeConverterAttribute("External.Svg.SvgColourInterpolationConverter")]
internal enum External.Svg.DataTypes.SvgColourInterpolation : Enum {
    public int value__;
    public static SvgColourInterpolation Auto;
    public static SvgColourInterpolation SRGB;
    public static SvgColourInterpolation LinearRGB;
    public static SvgColourInterpolation Inherit;
}
[TypeConverterAttribute("External.Svg.SvgMarkerUnitsConverter")]
internal enum External.Svg.DataTypes.SvgMarkerUnits : Enum {
    public int value__;
    public static SvgMarkerUnits StrokeWidth;
    public static SvgMarkerUnits UserSpaceOnUse;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.DataTypes.SvgOrientConverter : TypeConverter {
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
    public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType);
    public virtual bool CanConvertTo(ITypeDescriptorContext context, Type destinationType);
    public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.DataTypes.SvgPreserveAspectRatioConverter : TypeConverter {
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
    public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType);
    public virtual bool CanConvertTo(ITypeDescriptorContext context, Type destinationType);
    public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("symbol")]
internal class External.Svg.Document_Structure.SvgSymbol : SvgVisualElement {
    [SvgAttributeAttribute("viewBox")]
public SvgViewBox ViewBox { get; public set; }
    [SvgAttributeAttribute("preserveAspectRatio")]
public SvgAspectRatio AspectRatio { get; public set; }
    public RectangleF Bounds { get; }
    protected bool Renderable { get; }
    public SvgViewBox get_ViewBox();
    public void set_ViewBox(SvgViewBox value);
    public SvgAspectRatio get_AspectRatio();
    public void set_AspectRatio(SvgAspectRatio value);
    public virtual GraphicsPath Path(ISvgRenderer renderer);
    public virtual RectangleF get_Bounds();
    protected virtual bool get_Renderable();
    protected internal virtual bool PushTransforms(ISvgRenderer renderer);
    protected virtual void Render(ISvgRenderer renderer);
    public virtual SvgElement DeepCopy();
}
internal abstract class External.Svg.EnumBaseConverter`1 : TypeConverter {
    [CompilerGeneratedAttribute]
private CaseHandling<T> <CaseHandlingMode>k__BackingField;
    public CaseHandling<T> CaseHandlingMode { get; }
    internal EnumBaseConverter`1(CaseHandling<T> caseHandling);
    [CompilerGeneratedAttribute]
public CaseHandling<T> get_CaseHandlingMode();
    [NullableContextAttribute("1")]
public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType);
    [NullableContextAttribute("1")]
public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
    [NullableContextAttribute("1")]
public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType);
}
internal static class External.Svg.Enums : object {
    public static bool TryParse(string value, bool ignoreCase, TEnum& result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.Exceptions.SvgMemoryException : Exception {
    public SvgMemoryException(string message);
    public SvgMemoryException(string message, Exception inner);
    protected SvgMemoryException(SerializationInfo info, StreamingContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class External.Svg.ExCSS.AggregateRule : RuleSet {
    [CompilerGeneratedAttribute]
private List`1<RuleSet> <RuleSets>k__BackingField;
    public List`1<RuleSet> RuleSets { get; private set; }
    [CompilerGeneratedAttribute]
public sealed virtual List`1<RuleSet> get_RuleSets();
    [CompilerGeneratedAttribute]
private void set_RuleSets(List`1<RuleSet> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.AggregateSelectorList : SelectorList {
    public string Delimiter;
    public AggregateSelectorList(string delimiter);
    public virtual string ToString(bool friendlyFormat, int indentation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class External.Svg.ExCSS.BaseSelector : object {
    public sealed virtual string ToString();
    public abstract virtual string ToString(bool friendlyFormat, int indentation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.CharacterSetRule : RuleSet {
    [CompilerGeneratedAttribute]
private string <Encoding>k__BackingField;
    public string Encoding { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Encoding();
    [CompilerGeneratedAttribute]
internal void set_Encoding(string value);
    public virtual string ToString();
    public virtual string ToString(bool friendlyFormat, int indentation);
}
internal enum External.Svg.ExCSS.Combinator : Enum {
    public int value__;
    public static Combinator Child;
    public static Combinator Descendent;
    public static Combinator AdjacentSibling;
    public static Combinator Sibling;
    public static Combinator Namespace;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.CombinatorSelector : ValueType {
    public BaseSelector Selector;
    public Combinator Delimiter;
    public char Character { get; }
    public CombinatorSelector(BaseSelector selector, Combinator delimiter);
    public char get_Character();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.ComplexSelector : BaseSelector {
    private List`1<CombinatorSelector> _selectors;
    public int Length { get; }
    public ComplexSelector AppendSelector(BaseSelector selector, Combinator combinator);
    public sealed virtual IEnumerator`1<CombinatorSelector> GetEnumerator();
    internal void ConcludeSelector(BaseSelector selector);
    public int get_Length();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public virtual string ToString(bool friendlyFormat, int indentation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class External.Svg.ExCSS.ConditionalRule : AggregateRule {
    public string Condition { get; public set; }
    public virtual string get_Condition();
    public virtual void set_Condition(string value);
}
internal enum External.Svg.ExCSS.DirectionMode : Enum {
    public int value__;
    public static DirectionMode LeftToRight;
    public static DirectionMode RightToLeft;
}
internal enum External.Svg.ExCSS.DocumentFunction : Enum {
    public int value__;
    public static DocumentFunction Url;
    public static DocumentFunction UrlPrefix;
    public static DocumentFunction Domain;
    public static DocumentFunction RegExp;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.DocumentRule : AggregateRule {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<KeyValuePair`2<DocumentFunction, string>> _conditions;
    public string ConditionText { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal List`1<KeyValuePair`2<DocumentFunction, string>> Conditions { get; }
    public string get_ConditionText();
    internal List`1<KeyValuePair`2<DocumentFunction, string>> get_Conditions();
    public virtual string ToString();
    public virtual string ToString(bool friendlyFormat, int indentation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class External.Svg.ExCSS.ErrorMessages : object {
    internal static string InvalidCharacter;
    internal static string LineBreakEof;
    internal static string UnexpectedCommentToken;
    internal static string DoubleQuotedString;
    internal static string DoubleQuotedStringEof;
    internal static string SingleQuotedString;
    internal static string SingleQuotedStringEof;
    internal static string InvalidCharacterAfterHash;
    internal static string InvalidIdentAfterHash;
    internal static string InvalidUrlEnd;
    internal static string InvalidUrlQuote;
    internal static string InvalidUrlCharacter;
    internal static string ExpectedCommentEnd;
    internal static string Default;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.FirstChildSelector : BaseSelector {
    private static FirstChildSelector _instance;
    public static FirstChildSelector Instance { get; }
    public static FirstChildSelector get_Instance();
    public virtual string ToString(bool friendlyFormat, int indentation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.FontFaceRule : RuleSet {
    private StyleDeclaration _declarations;
    public StyleDeclaration Declarations { get; }
    public string FontFamily { get; public set; }
    public string Src { get; public set; }
    public string FontStyle { get; public set; }
    public string FontWeight { get; public set; }
    public string Stretch { get; public set; }
    public string UnicodeRange { get; public set; }
    public string FontVariant { get; public set; }
    public string FeatureSettings { get; public set; }
    internal FontFaceRule AppendRule(Property rule);
    public sealed virtual StyleDeclaration get_Declarations();
    public string get_FontFamily();
    public void set_FontFamily(string value);
    public string get_Src();
    public void set_Src(string value);
    public string get_FontStyle();
    public void set_FontStyle(string value);
    public string get_FontWeight();
    public void set_FontWeight(string value);
    public string get_Stretch();
    public void set_Stretch(string value);
    public string get_UnicodeRange();
    public void set_UnicodeRange(string value);
    public string get_FontVariant();
    public void set_FontVariant(string value);
    public string get_FeatureSettings();
    public void set_FeatureSettings(string value);
    public virtual string ToString();
    public virtual string ToString(bool friendlyFormat, int indentation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.GenericFunction : Term {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private TermList <Arguments>k__BackingField;
    public string Name { get; public set; }
    public TermList Arguments { get; public set; }
    public GenericFunction(string name, List`1<Term> arguments);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public TermList get_Arguments();
    [CompilerGeneratedAttribute]
public void set_Arguments(TermList value);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.GenericRule : AggregateRule {
    private string _text;
    private bool _stopped;
    internal void SetInstruction(string text);
    internal void SetCondition(string text);
    public virtual string ToString();
    public virtual string ToString(bool friendlyFormat, int indentation);
}
internal enum External.Svg.ExCSS.GrammarSegment : Enum {
    public int value__;
    public static GrammarSegment String;
    public static GrammarSegment Url;
    public static GrammarSegment UrlPrefix;
    public static GrammarSegment Domain;
    public static GrammarSegment Hash;
    public static GrammarSegment AtRule;
    public static GrammarSegment Ident;
    public static GrammarSegment Function;
    public static GrammarSegment Number;
    public static GrammarSegment Percentage;
    public static GrammarSegment Dimension;
    public static GrammarSegment Range;
    public static GrammarSegment CommentOpen;
    public static GrammarSegment CommentClose;
    public static GrammarSegment Column;
    public static GrammarSegment Delimiter;
    public static GrammarSegment IncludeMatch;
    public static GrammarSegment DashMatch;
    public static GrammarSegment PrefixMatch;
    public static GrammarSegment SuffixMatch;
    public static GrammarSegment SubstringMatch;
    public static GrammarSegment NegationMatch;
    public static GrammarSegment ParenOpen;
    public static GrammarSegment ParenClose;
    public static GrammarSegment CurlyBraceOpen;
    public static GrammarSegment CurlyBracketClose;
    public static GrammarSegment SquareBraceOpen;
    public static GrammarSegment SquareBracketClose;
    public static GrammarSegment Colon;
    public static GrammarSegment Comma;
    public static GrammarSegment Semicolon;
    public static GrammarSegment Whitespace;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.HtmlColor : Term {
    public byte A;
    public byte R;
    public byte G;
    public byte B;
    public double Alpha { get; }
    public HtmlColor(byte r, byte g, byte b);
    public HtmlColor(byte a, byte r, byte g, byte b);
    public HtmlColor(double a, byte r, byte g, byte b);
    public static HtmlColor FromRgba(byte r, byte g, byte b, float a);
    public static HtmlColor FromRgba(byte r, byte g, byte b, double a);
    public static HtmlColor FromRgb(byte r, byte g, byte b);
    public static HtmlColor FromHsl(float h, float s, float l);
    public static HtmlColor FromHex(string color);
    public static bool TryFromHex(string color, HtmlColor& htmlColor);
    public double get_Alpha();
    public static bool op_Equality(HtmlColor a, HtmlColor b);
    public static bool op_Inequality(HtmlColor a, HtmlColor b);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    public string ToString(bool friendlyFormat, int indentation);
    public string ToString(bool forceLong, bool friendlyFormat, int indentation);
    private string ToCss(bool forceLong);
    public sealed virtual bool Equals(HtmlColor other);
    private static float HueToRgb(float m1, float m2, float h);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.ImportRule : RuleSet {
    private string _href;
    private MediaTypeList _media;
    public string Href { get; public set; }
    public MediaTypeList Media { get; }
    public string get_Href();
    public void set_Href(string value);
    public sealed virtual MediaTypeList get_Media();
    public virtual string ToString();
    public virtual string ToString(bool friendlyFormat, int indentation);
}
internal class External.Svg.ExCSS.InheritTerm : Term {
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
internal interface External.Svg.ExCSS.IRuleContainer {
    public List`1<RuleSet> Declarations { get; }
    public abstract virtual List`1<RuleSet> get_Declarations();
}
[NullableContextAttribute("1")]
internal interface External.Svg.ExCSS.IToString {
    public abstract virtual string ToString(bool friendlyFormat, int indentation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.KeyframeRule : RuleSet {
    private string _value;
    [CompilerGeneratedAttribute]
private StyleDeclaration <Declarations>k__BackingField;
    public string Value { get; public set; }
    public StyleDeclaration Declarations { get; private set; }
    public string get_Value();
    public void set_Value(string value);
    [CompilerGeneratedAttribute]
public sealed virtual StyleDeclaration get_Declarations();
    [CompilerGeneratedAttribute]
private void set_Declarations(StyleDeclaration value);
    public virtual string ToString();
    public virtual string ToString(bool friendlyFormat, int indentation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.KeyframesRule : RuleSet {
    private List`1<RuleSet> _ruleSets;
    private string _identifier;
    public string Identifier { get; public set; }
    public List`1<RuleSet> Declarations { get; }
    public string get_Identifier();
    public void set_Identifier(string value);
    public sealed virtual List`1<RuleSet> get_Declarations();
    public virtual string ToString();
    public virtual string ToString(bool friendlyFormat, int indentation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.LastChildSelector : BaseSelector {
    private static LastChildSelector _instance;
    public static LastChildSelector Instance { get; }
    public static LastChildSelector get_Instance();
    public virtual string ToString(bool friendlyFormat, int indentation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.Lexer : object {
    private StringBuilder _buffer;
    private StylesheetReader _stylesheetReader;
    private bool _ignoreWhitespace;
    private bool _ignoreComments;
    [CompilerGeneratedAttribute]
private Action`2<ParserError, string> <ErrorHandler>k__BackingField;
    internal Action`2<ParserError, string> ErrorHandler { get; internal set; }
    internal bool IgnoreWhitespace { get; internal set; }
    internal bool IgnoreComments { get; internal set; }
    internal StylesheetReader Stream { get; }
    internal IEnumerable`1<Block> Tokens { get; }
    internal Lexer(StylesheetReader source);
    [CompilerGeneratedAttribute]
internal Action`2<ParserError, string> get_ErrorHandler();
    [CompilerGeneratedAttribute]
internal void set_ErrorHandler(Action`2<ParserError, string> value);
    private Block DataBlock(char current);
    private Block DoubleQuoteString(char current);
    private Block SingleQuoteString(char current);
    private Block HashStart(char current);
    private Block HashRest(char current);
    private Block Comment(char current);
    private Block AtKeywordStart(char current);
    private Block AtKeywordRest(char current);
    private Block IdentStart(char current);
    private Block IdentRest(char current);
    private Block NumberStart(char current);
    private Block NumberRest(char current);
    private Block NumberFraction(char current);
    private Block Dimension(char current, string number);
    private Block SciNotation(char current);
    private Block UrlStart(char current);
    private Block DoubleQuotedUrl(char current);
    private Block SingleQuoteUrl(char current);
    private Block UnquotedUrl(char current);
    private Block UrlEnd(char current);
    private Block BadUrl(char current);
    private Block UnicodeRange(char current);
    private string FlushBuffer();
    private Block NumberExponential(char current);
    private Block NumberDash(char current);
    private string ConsumeEscape(char current);
    private bool IsValidEscape(char current);
    internal bool get_IgnoreWhitespace();
    internal void set_IgnoreWhitespace(bool value);
    internal bool get_IgnoreComments();
    internal void set_IgnoreComments(bool value);
    internal StylesheetReader get_Stream();
    [IteratorStateMachineAttribute("External.Svg.ExCSS.Lexer/<get_Tokens>d__45")]
internal IEnumerable`1<Block> get_Tokens();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.MediaRule : ConditionalRule {
    private MediaTypeList _media;
    public string Condition { get; public set; }
    public MediaTypeList Media { get; }
    public virtual string get_Condition();
    public virtual void set_Condition(string value);
    public sealed virtual MediaTypeList get_Media();
    public virtual string ToString();
    public virtual string ToString(bool friendlyFormat, int indentation);
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.MediaTypeList : object {
    private List`1<string> _media;
    private string _buffer;
    public string Item { get; public set; }
    public int Count { get; }
    public string MediaType { get; public set; }
    public string get_Item(int index);
    public void set_Item(int index, string value);
    public int get_Count();
    public string get_MediaType();
    public void set_MediaType(string value);
    internal MediaTypeList AppendMedium(string newMedium);
    public virtual string ToString();
    public string ToString(bool friendlyFormat, int indentation);
    public sealed virtual IEnumerator`1<string> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class External.Svg.ExCSS.Model.Extensions.CharacterExtensions : object {
    [ExtensionAttribute]
public static int FromHex(char character);
    [ExtensionAttribute]
public static string TrimArray(Char[] array);
    [ExtensionAttribute]
public static String[] SplitOnCommas(string value);
    [ExtensionAttribute]
public static string ToHex(byte num);
    [ExtensionAttribute]
public static char ToHexChar(byte num);
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class External.Svg.ExCSS.Model.Extensions.StringExtensions : object {
    [ExtensionAttribute]
public static string Indent(string value, bool friendlyForamt, int indentation);
    [ExtensionAttribute]
public static string NewLineIndent(string value, bool friendlyFormat, int indentation);
    [ExtensionAttribute]
public static string TrimFirstLine(string value);
    [ExtensionAttribute]
public static StringBuilder TrimLastLine(StringBuilder builder);
    [ExtensionAttribute]
public static StringBuilder TrimFirstLine(StringBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.Model.FunctionBuffer : object {
    private string _function;
    private List`1<Term> _termList;
    private Term _term;
    public List`1<Term> TermList { get; }
    public Term Term { get; public set; }
    internal FunctionBuffer(string function);
    public List`1<Term> get_TermList();
    public Term get_Term();
    public void set_Term(Term value);
    public void Include();
    public Term Done();
    private Term BuildFunctionTerm(string name, List`1<Term> terms);
    private static bool CheckNumber(Term cssValue);
    private static float ToSingle(Term cssValue);
    private static byte ToByte(Nullable`1<float> value);
    private static byte ToByte(Term cssValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class External.Svg.ExCSS.Model.HtmlEncoding : object {
    internal static string Extract(string content);
    internal static bool IsSupported(string charset);
    internal static Encoding Resolve(string charset);
    internal static Encoding Suggest(string local);
}
[NullableContextAttribute("1")]
internal interface External.Svg.ExCSS.Model.ISupportsDeclarations {
    public StyleDeclaration Declarations { get; }
    public abstract virtual StyleDeclaration get_Declarations();
}
[NullableContextAttribute("1")]
internal interface External.Svg.ExCSS.Model.ISupportsMedia {
    public MediaTypeList Media { get; }
    public abstract virtual MediaTypeList get_Media();
}
[NullableContextAttribute("1")]
internal interface External.Svg.ExCSS.Model.ISupportsRuleSets {
    public List`1<RuleSet> RuleSets { get; }
    public abstract virtual List`1<RuleSet> get_RuleSets();
}
[NullableContextAttribute("1")]
internal interface External.Svg.ExCSS.Model.ISupportsSelector {
    public BaseSelector Selector { get; public set; }
    public abstract virtual BaseSelector get_Selector();
    public abstract virtual void set_Selector(BaseSelector value);
}
[ExtensionAttribute]
internal static class External.Svg.ExCSS.Model.Specification : object {
    internal static char EndOfFile;
    internal static char Tilde;
    internal static char Pipe;
    internal static char Null;
    internal static char Ampersand;
    internal static char Hash;
    internal static char DollarSign;
    internal static char Simicolon;
    internal static char Asterisk;
    internal static char EqualSign;
    internal static char PlusSign;
    internal static char Comma;
    internal static char Period;
    internal static char Accent;
    internal static char At;
    internal static char LessThan;
    internal static char GreaterThan;
    internal static char SingleQuote;
    internal static char DoubleQuote;
    internal static char QuestionMark;
    internal static char Tab;
    internal static char LineFeed;
    internal static char CarriageReturn;
    internal static char FormFeed;
    internal static char Space;
    internal static char Solidus;
    internal static char ReverseSolidus;
    internal static char Colon;
    internal static char Em;
    internal static char MinusSign;
    internal static char Replacement;
    internal static char Underscore;
    internal static char ParenOpen;
    internal static char ParenClose;
    internal static char Percent;
    internal static char SquareBracketOpen;
    internal static char SquareBracketClose;
    internal static char CurlyBraceOpen;
    internal static char CurlyBraceClose;
    internal static int MaxPoint;
    [ExtensionAttribute]
internal static bool IsNonPrintable(char c);
    [ExtensionAttribute]
internal static bool IsLetter(char c);
    [ExtensionAttribute]
internal static bool IsName(char c);
    [ExtensionAttribute]
internal static bool IsNameStart(char c);
    [ExtensionAttribute]
internal static bool IsLineBreak(char c);
    [ExtensionAttribute]
internal static bool IsSpaceCharacter(char c);
    [ExtensionAttribute]
internal static bool IsDigit(char c);
    [ExtensionAttribute]
internal static bool IsUppercaseAscii(char c);
    [ExtensionAttribute]
internal static bool IsLowercaseAscii(char c);
    [ExtensionAttribute]
internal static bool IsHex(char c);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class External.Svg.ExCSS.Model.TextBlocks.Block : object {
    [CompilerGeneratedAttribute]
private GrammarSegment <GrammarSegment>k__BackingField;
    internal GrammarSegment GrammarSegment { get; internal set; }
    internal static PipeBlock Column { get; }
    [CompilerGeneratedAttribute]
internal GrammarSegment get_GrammarSegment();
    [CompilerGeneratedAttribute]
internal void set_GrammarSegment(GrammarSegment value);
    internal static PipeBlock get_Column();
    internal static DelimiterBlock Delim(char value);
    internal static NumericBlock Number(string value);
    internal static RangeBlock Range(string start, string end);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.Model.TextBlocks.BracketBlock : Block {
    private static BracketBlock RoundOpen;
    private static BracketBlock RoundClose;
    private static BracketBlock CurlyOpen;
    private static BracketBlock CurlyClose;
    private static BracketBlock SquareOpen;
    private static BracketBlock SquareClose;
    private GrammarSegment _mirror;
    internal char Open { get; }
    internal char Close { get; }
    internal GrammarSegment Mirror { get; }
    internal static BracketBlock OpenRound { get; }
    internal static BracketBlock CloseRound { get; }
    internal static BracketBlock OpenCurly { get; }
    internal static BracketBlock CloseCurly { get; }
    internal static BracketBlock OpenSquare { get; }
    internal static BracketBlock CloseSquare { get; }
    private static BracketBlock();
    internal char get_Open();
    internal char get_Close();
    internal GrammarSegment get_Mirror();
    internal static BracketBlock get_OpenRound();
    internal static BracketBlock get_CloseRound();
    internal static BracketBlock get_OpenCurly();
    internal static BracketBlock get_CloseCurly();
    internal static BracketBlock get_OpenSquare();
    internal static BracketBlock get_CloseSquare();
    public virtual string ToString();
    public string ToString(bool friendlyFormat, int indentation);
}
internal abstract class External.Svg.ExCSS.Model.TextBlocks.CharacterBlock : Block {
    private char _value;
    internal char Value { get; }
    protected CharacterBlock(char value);
    internal char get_Value();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.Model.TextBlocks.CommentBlock : Block {
    private static CommentBlock OpenBlock;
    private static CommentBlock CloseBlock;
    internal static CommentBlock Open { get; }
    internal static CommentBlock Close { get; }
    private static CommentBlock();
    internal static CommentBlock get_Open();
    internal static CommentBlock get_Close();
    public virtual string ToString();
}
internal class External.Svg.ExCSS.Model.TextBlocks.DelimiterBlock : CharacterBlock {
    internal DelimiterBlock(char value);
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.Model.TextBlocks.MatchBlock : Block {
    internal static MatchBlock Include;
    internal static MatchBlock Dash;
    internal static Block Prefix;
    internal static Block Substring;
    internal static Block Suffix;
    internal static Block Not;
    private static MatchBlock();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.Model.TextBlocks.NumericBlock : Block {
    private string _data;
    public float Value { get; }
    internal NumericBlock(string number);
    public float get_Value();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.Model.TextBlocks.PipeBlock : Block {
    private static PipeBlock TokenBlock;
    internal static PipeBlock Token { get; }
    private static PipeBlock();
    internal static PipeBlock get_Token();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.Model.TextBlocks.RangeBlock : Block {
    [CompilerGeneratedAttribute]
private String[] <SelectedRange>k__BackingField;
    internal bool IsEmpty { get; }
    internal String[] SelectedRange { get; private set; }
    internal bool get_IsEmpty();
    [CompilerGeneratedAttribute]
internal String[] get_SelectedRange();
    [CompilerGeneratedAttribute]
private void set_SelectedRange(String[] value);
    internal RangeBlock SetRange(string start, string end);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.Model.TextBlocks.SpecialCharacter : CharacterBlock {
    internal static SpecialCharacter Colon;
    internal static SpecialCharacter Comma;
    internal static SpecialCharacter Semicolon;
    internal static SpecialCharacter Whitespace;
    private SpecialCharacter(char specialCharacter, GrammarSegment type);
    private static SpecialCharacter();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.Model.TextBlocks.StringBlock : Block {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsBad>k__BackingField;
    internal string Value { get; private set; }
    internal bool IsBad { get; private set; }
    private StringBlock(GrammarSegment type);
    internal static StringBlock Plain(string data, bool bad);
    internal static StringBlock Url(string data, bool bad);
    [CompilerGeneratedAttribute]
internal string get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(string value);
    [CompilerGeneratedAttribute]
internal bool get_IsBad();
    [CompilerGeneratedAttribute]
private void set_IsBad(bool value);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.Model.TextBlocks.SymbolBlock : Block {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    internal string Value { get; private set; }
    private SymbolBlock(GrammarSegment type);
    internal static SymbolBlock Function(string name);
    internal static SymbolBlock Ident(string identifier);
    internal static SymbolBlock At(string name);
    internal static SymbolBlock Hash(string characters);
    [CompilerGeneratedAttribute]
internal string get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(string value);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.Model.TextBlocks.UnitBlock : Block {
    private string _value;
    [CompilerGeneratedAttribute]
private string <Unit>k__BackingField;
    internal float Value { get; }
    internal string Unit { get; private set; }
    private UnitBlock(GrammarSegment type);
    internal float get_Value();
    [CompilerGeneratedAttribute]
internal string get_Unit();
    [CompilerGeneratedAttribute]
private void set_Unit(string value);
    internal static UnitBlock Percentage(string value);
    internal static UnitBlock Dimension(string value, string dimension);
    public virtual string ToString();
}
internal class External.Svg.ExCSS.MultipleSelectorList : SelectorList {
    [CompilerGeneratedAttribute]
private bool <IsInvalid>k__BackingField;
    internal bool IsInvalid { get; internal set; }
    [NullableContextAttribute("1")]
internal static MultipleSelectorList Create(SimpleSelector[] selectors);
    [CompilerGeneratedAttribute]
internal bool get_IsInvalid();
    [CompilerGeneratedAttribute]
internal void set_IsInvalid(bool value);
    [NullableContextAttribute("1")]
public virtual string ToString(bool friendlyFormat, int indentation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.NamespaceRule : RuleSet {
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    public string Uri { get; public set; }
    public string Prefix { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(string value);
    [CompilerGeneratedAttribute]
public string get_Prefix();
    [CompilerGeneratedAttribute]
public void set_Prefix(string value);
    public virtual string ToString();
    public virtual string ToString(bool friendlyFormat, int indentation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class External.Svg.ExCSS.NthChildSelector : BaseSelector {
    public int Step;
    public int Offset;
    [CompilerGeneratedAttribute]
private string <FunctionText>k__BackingField;
    internal string FunctionText { get; internal set; }
    [CompilerGeneratedAttribute]
internal string get_FunctionText();
    [CompilerGeneratedAttribute]
internal void set_FunctionText(string value);
    internal string FormatSelector(string functionName);
    public abstract virtual string ToString(bool friendlyFormat, int indentation);
}
internal class External.Svg.ExCSS.NthFirstChildSelector : NthChildSelector {
    [NullableContextAttribute("1")]
public virtual string ToString(bool friendlyFormat, int indentation);
}
internal class External.Svg.ExCSS.NthLastChildSelector : NthChildSelector {
    [NullableContextAttribute("1")]
public virtual string ToString(bool friendlyFormat, int indentation);
}
internal class External.Svg.ExCSS.NthLastOfTypeSelector : NthChildSelector {
    [NullableContextAttribute("1")]
public virtual string ToString(bool friendlyFormat, int indentation);
}
internal class External.Svg.ExCSS.NthOfTypeSelector : NthChildSelector {
    [NullableContextAttribute("1")]
public virtual string ToString(bool friendlyFormat, int indentation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.PageRule : RuleSet {
    private StyleDeclaration _declarations;
    private BaseSelector _selector;
    private string _selectorText;
    public BaseSelector Selector { get; public set; }
    public StyleDeclaration Declarations { get; }
    internal PageRule AppendRule(Property rule);
    public sealed virtual BaseSelector get_Selector();
    public sealed virtual void set_Selector(BaseSelector value);
    public sealed virtual StyleDeclaration get_Declarations();
    public virtual string ToString();
    public virtual string ToString(bool friendlyFormat, int indentation);
}
internal class External.Svg.ExCSS.ParseErrorEventHandler : MulticastDelegate {
    public ParseErrorEventHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(StylesheetParseError e);
    public virtual IAsyncResult BeginInvoke(StylesheetParseError e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.Parser : object {
    private SelectorFactory _selectorFactory;
    private Stack`1<FunctionBuffer> _functionBuffers;
    private Lexer _lexer;
    private bool _isFraction;
    private Property _property;
    private TermList _terms;
    private StyleSheet _styleSheet;
    private Stack`1<RuleSet> _activeRuleSets;
    private StringBuilder _buffer;
    private ParsingContext _parsingContext;
    internal RuleSet CurrentRule { get; }
    private bool ParseTokenBlock(Block token);
    private bool ParseSymbol(Block token);
    private bool ParseUnknown(Block token);
    private bool ParseSelector(Block token);
    private bool ParseDeclaration(Block token);
    private bool ParsePostInstruction(Block token);
    private bool ParseCondition(Block token);
    private bool ParseLeadingPrefix(Block token);
    private bool ParsePostProperty(Block token);
    private bool ParseValue(Block token);
    private bool ParseSingleValue(Block token);
    private bool ParseValueFunction(Block token);
    private bool ParseValueList(Block token);
    private bool ParseValuePool(Block token);
    private bool ParseHexValue(Block token);
    private bool ParsePostValue(Block token);
    private bool ParseImportant(Block token);
    private bool ParseValueDelimiter(DelimiterBlock token);
    private bool ParseSingleValueIdent(SymbolBlock token);
    private bool ParseSingleValueHexColor(string color);
    private bool ParseNamespace(Block token);
    private bool ParseCharacterSet(Block token);
    private bool ParseImport(Block token);
    private bool ParseFontface(Block token);
    private bool ParseKeyframesName(Block token);
    private bool ParsePreKeyframesData(Block token);
    private bool ParseKeyframesData(Block token);
    private bool ParseKeyframeText(Block token);
    private bool ParsePageSelector(Block token);
    private bool ParsePreDocumentFunction(Block token);
    private bool ParseDocumentFunction(Block token);
    private bool ParsePostDocumentFunction(Block token);
    private bool ParseDocumentFunctions(Block token);
    private bool ParseMediaList(Block token);
    private bool ParseMediaValue(Block token);
    public StyleSheet Parse(string css);
    internal static BaseSelector ParseSelector(string selector);
    internal static RuleSet ParseRule(string css);
    internal static StyleDeclaration ParseDeclarations(string declarations, bool quirksMode);
    internal static void AppendDeclarations(StyleDeclaration list, string css, bool quirksMode);
    internal void HandleLexerError(ParserError error, string message);
    private bool AddTerm(Term value);
    private void FinalizeProperty();
    private bool FinalizeRule();
    private void AddRuleSet(RuleSet rule);
    private void AddProperty(Property property);
    private void RemoveCurrentProperty();
    private T CastRuleSet();
    private void SetParsingContext(ParsingContext newState);
    internal RuleSet get_CurrentRule();
}
internal enum External.Svg.ExCSS.ParserError : Enum {
    public int value__;
    public static ParserError EndOfFile;
    public static ParserError UnexpectedLineBreak;
    public static ParserError InvalidCharacter;
    public static ParserError UnexpectedCommentToken;
}
internal enum External.Svg.ExCSS.ParsingContext : Enum {
    public int value__;
    public static ParsingContext DataBlock;
    public static ParsingContext InSelector;
    public static ParsingContext InDeclaration;
    public static ParsingContext AfterProperty;
    public static ParsingContext BeforeValue;
    public static ParsingContext InValuePool;
    public static ParsingContext InValueList;
    public static ParsingContext InSingleValue;
    public static ParsingContext InMediaList;
    public static ParsingContext InMediaValue;
    public static ParsingContext BeforeImport;
    public static ParsingContext BeforeCharset;
    public static ParsingContext BeforeNamespacePrefix;
    public static ParsingContext AfterNamespacePrefix;
    public static ParsingContext BeforeFontFace;
    public static ParsingContext FontfaceData;
    public static ParsingContext FontfaceProperty;
    public static ParsingContext AfterInstruction;
    public static ParsingContext InCondition;
    public static ParsingContext BeforeKeyframesName;
    public static ParsingContext BeforeKeyframesData;
    public static ParsingContext KeyframesData;
    public static ParsingContext InKeyframeText;
    public static ParsingContext BeforePageSelector;
    public static ParsingContext BeforeDocumentFunction;
    public static ParsingContext InDocumentFunction;
    public static ParsingContext AfterDocumentFunction;
    public static ParsingContext BetweenDocumentFunctions;
    public static ParsingContext InUnknown;
    public static ParsingContext ValueImportant;
    public static ParsingContext AfterValue;
    public static ParsingContext InHexValue;
    public static ParsingContext InFunction;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.PrimitiveTerm : Term {
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private UnitType <PrimitiveType>k__BackingField;
    public object Value { get; public set; }
    public UnitType PrimitiveType { get; public set; }
    public PrimitiveTerm(UnitType unitType, string value);
    public PrimitiveTerm(UnitType unitType, float value);
    public PrimitiveTerm(string unit, float value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(object value);
    [CompilerGeneratedAttribute]
public UnitType get_PrimitiveType();
    [CompilerGeneratedAttribute]
public void set_PrimitiveType(UnitType value);
    public Nullable`1<float> GetFloatValue(UnitType unit);
    public virtual string ToString();
    internal static UnitType ConvertStringToUnitType(string unit);
    internal static string ConvertUnitTypeToString(UnitType unit);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.Property : object {
    private Term _term;
    private bool _important;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; private set; }
    public Term Term { get; public set; }
    public bool Important { get; public set; }
    public Property(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    public Term get_Term();
    public void set_Term(Term value);
    public bool get_Important();
    public void set_Important(bool value);
    public virtual string ToString();
    public string ToString(bool friendlyFormat, int indentation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class External.Svg.ExCSS.PseudoSelectorPrefix : object {
    internal static string NthChildOdd;
    internal static string NthChildEven;
    internal static string NthChildN;
    internal static string PseudoFunctionNthchild;
    internal static string PseudoFunctionNthlastchild;
    internal static string PseudoFunctionNthOfType;
    internal static string PseudoFunctionNthLastOfType;
    internal static string PseudoRoot;
    internal static string PseudoFirstOfType;
    internal static string PseudoLastoftype;
    internal static string PseudoOnlychild;
    internal static string PseudoOnlyOfType;
    internal static string PseudoFirstchild;
    internal static string PseudoLastchild;
    internal static string PseudoEmpty;
    internal static string PseudoLink;
    internal static string PseudoVisited;
    internal static string PseudoActive;
    internal static string PseudoHover;
    internal static string PseudoFocus;
    internal static string PseudoTarget;
    internal static string PseudoEnabled;
    internal static string PseudoDisabled;
    internal static string PseudoChecked;
    internal static string PseudoUnchecked;
    internal static string PseudoIndeterminate;
    internal static string PseudoDefault;
    internal static string PseudoValid;
    internal static string PseudoInvalid;
    internal static string PseudoRequired;
    internal static string PseudoInrange;
    internal static string PseudoOutofrange;
    internal static string PseudoOptional;
    internal static string PseudoReadonly;
    internal static string PseudoReadwrite;
    internal static string PseudoFunctionDir;
    internal static string PseudoFunctionNot;
    internal static string PseudoFunctionLang;
    internal static string PseudoFunctionContains;
    internal static string PseudoElementBefore;
    internal static string PseudoElementAfter;
    internal static string PseudoElementSelection;
    internal static string PseudoElementFirstline;
    internal static string PseudoElementFirstletter;
}
internal abstract class External.Svg.ExCSS.RuleSet : object {
    [CompilerGeneratedAttribute]
private RuleType <RuleType>k__BackingField;
    public RuleType RuleType { get; public set; }
    [CompilerGeneratedAttribute]
public RuleType get_RuleType();
    [CompilerGeneratedAttribute]
public void set_RuleType(RuleType value);
    [NullableContextAttribute("1")]
public abstract virtual string ToString(bool friendlyFormat, int indentation);
}
internal enum External.Svg.ExCSS.RuleType : Enum {
    public int value__;
    public static RuleType Unknown;
    public static RuleType Style;
    public static RuleType Charset;
    public static RuleType Import;
    public static RuleType Media;
    public static RuleType FontFace;
    public static RuleType Page;
    public static RuleType Keyframes;
    public static RuleType Keyframe;
    public static RuleType Namespace;
    public static RuleType CounterStyle;
    public static RuleType Supports;
    public static RuleType Document;
    public static RuleType FontFeatureValues;
    public static RuleType Viewport;
    public static RuleType RegionStyle;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class External.Svg.ExCSS.RuleTypes : object {
    internal static string CharacterSet;
    internal static string Keyframes;
    internal static string Media;
    internal static string Page;
    internal static string Import;
    internal static string FontFace;
    internal static string Namespace;
    internal static string Supports;
    internal static string Document;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.SelectorFactory : object {
    private SelectorOperation _selectorOperation;
    private BaseSelector _currentSelector;
    private AggregateSelectorList _aggregateSelectorList;
    private ComplexSelector _complexSelector;
    private bool _hasCombinator;
    private Combinator _combinator;
    private SelectorFactory _nestedSelectorFactory;
    private string _attributeName;
    private string _attributeValue;
    private string _attributeOperator;
    internal BaseSelector GetSelector();
    internal void Apply(Block token);
    internal SelectorFactory ResetFactory();
    private void ParseSymbol(Block token);
    private void ParseAttribute(Block token);
    private void ParseAttributeOperator(Block token);
    private void ParseAttributeValue(Block token);
    private void ParseAttributeEnd(Block token);
    private void ParsePseudoClass(Block token);
    private void ParsePseudoElement(Block token);
    private void PraseClass(Block token);
    private void ParsePseudoClassFunction(Block token);
    private void PrasePseudoClassFunctionEnd(Block token);
    private void InsertCommaDelimited();
    private void Insert(BaseSelector selector);
    private void Insert(Combinator combinator);
    private void ParseDelimiter(Block token);
    private BaseSelector GetChildSelector();
    private static BaseSelector GetPseudoSelector(Block token);
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class External.Svg.ExCSS.SelectorList : BaseSelector {
    protected List`1<BaseSelector> Selectors;
    public int Length { get; }
    public BaseSelector Item { get; public set; }
    public int get_Length();
    public BaseSelector get_Item(int index);
    public void set_Item(int index, BaseSelector value);
    public SelectorList AppendSelector(BaseSelector selector);
    public SelectorList RemoveSelector(SimpleSelector selector);
    public SelectorList ClearSelectors();
    public sealed virtual IEnumerator`1<BaseSelector> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public abstract virtual string ToString(bool friendlyFormat, int indentation);
}
internal enum External.Svg.ExCSS.SelectorOperation : Enum {
    public int value__;
    public static SelectorOperation Data;
    public static SelectorOperation Attribute;
    public static SelectorOperation AttributeOperator;
    public static SelectorOperation AttributeValue;
    public static SelectorOperation AttributeEnd;
    public static SelectorOperation Class;
    public static SelectorOperation PseudoClass;
    public static SelectorOperation PseudoClassFunction;
    public static SelectorOperation PseudoClassFunctionEnd;
    public static SelectorOperation PseudoElement;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.SimpleSelector : BaseSelector {
    private string _code;
    internal static SimpleSelector All;
    public SimpleSelector(string selectorText);
    private static SimpleSelector();
    internal static SimpleSelector PseudoElement(string pseudoElement);
    internal static SimpleSelector PseudoClass(string pseudoClass);
    internal static SimpleSelector Class(string match);
    internal static SimpleSelector Id(string match);
    internal static SimpleSelector AttributeUnmatched(string match);
    internal static SimpleSelector AttributeMatch(string match, string value);
    internal static SimpleSelector AttributeNegatedMatch(string match, string value);
    internal static SimpleSelector AttributeSpaceSeparated(string match, string value);
    internal static SimpleSelector AttributeStartsWith(string match, string value);
    internal static SimpleSelector AttributeEndsWith(string match, string value);
    internal static SimpleSelector AttributeContains(string match, string value);
    internal static SimpleSelector AttributeDashSeparated(string match, string value);
    internal static SimpleSelector Type(string match);
    private static string GetValueAsString(string value);
    public virtual string ToString(bool friendlyFormat, int indentation);
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.StyleDeclaration : object {
    private List`1<Property> _properties;
    private Func`1<string> _getter;
    private Action`1<string> _setter;
    private bool _blocking;
    [CompilerGeneratedAttribute]
private RuleSet <ParentRule>k__BackingField;
    public string Value { get; public set; }
    public RuleSet ParentRule { get; public set; }
    public Property Item { get; public set; }
    public List`1<Property> Properties { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public string get_Value();
    public void set_Value(string value);
    [CompilerGeneratedAttribute]
public RuleSet get_ParentRule();
    [CompilerGeneratedAttribute]
public void set_ParentRule(RuleSet value);
    public sealed virtual void Add(Property item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(Property item);
    public sealed virtual void CopyTo(Property[] array, int arrayIndex);
    public sealed virtual bool Remove(Property item);
    public sealed virtual int IndexOf(Property item);
    public sealed virtual void Insert(int index, Property item);
    public sealed virtual void RemoveAt(int index);
    public virtual string ToString();
    public string ToString(bool friendlyFormat, int indentation);
    internal string RemoveProperty(string propertyName);
    internal string GetPropertyValue(string propertyName);
    public sealed virtual IEnumerator`1<Property> GetEnumerator();
    public sealed virtual Property get_Item(int index);
    public sealed virtual void set_Item(int index, Property value);
    public List`1<Property> get_Properties();
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    internal StyleDeclaration SetProperty(string propertyName, string propertyValue);
    internal void Update(string value);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private void Propagate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.StyleRule : RuleSet {
    private string _value;
    private BaseSelector _selector;
    private StyleDeclaration _declarations;
    public BaseSelector Selector { get; public set; }
    public string Value { get; public set; }
    public StyleDeclaration Declarations { get; }
    public StyleRule(StyleDeclaration declarations);
    public sealed virtual BaseSelector get_Selector();
    public sealed virtual void set_Selector(BaseSelector value);
    public string get_Value();
    public void set_Value(string value);
    public sealed virtual StyleDeclaration get_Declarations();
    public virtual string ToString();
    public virtual string ToString(bool friendlyFormat, int indentation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.StyleSheet : object {
    private List`1<RuleSet> _rules;
    [CompilerGeneratedAttribute]
private List`1<StylesheetParseError> <Errors>k__BackingField;
    public List`1<RuleSet> Rules { get; }
    public IList`1<StyleRule> StyleRules { get; }
    public IList`1<CharacterSetRule> CharsetDirectives { get; }
    public IList`1<ImportRule> ImportDirectives { get; }
    public IList`1<FontFaceRule> FontFaceDirectives { get; }
    public IList`1<KeyframesRule> KeyframeDirectives { get; }
    public IList`1<MediaRule> MediaDirectives { get; }
    public IList`1<PageRule> PageDirectives { get; }
    public IList`1<SupportsRule> SupportsDirectives { get; }
    public IList`1<NamespaceRule> NamespaceDirectives { get; }
    public List`1<StylesheetParseError> Errors { get; private set; }
    public List`1<RuleSet> get_Rules();
    public StyleSheet RemoveRule(int index);
    public StyleSheet InsertRule(string rule, int index);
    public IList`1<StyleRule> get_StyleRules();
    public IList`1<CharacterSetRule> get_CharsetDirectives();
    public IList`1<ImportRule> get_ImportDirectives();
    public IList`1<FontFaceRule> get_FontFaceDirectives();
    public IList`1<KeyframesRule> get_KeyframeDirectives();
    public IList`1<MediaRule> get_MediaDirectives();
    public IList`1<PageRule> get_PageDirectives();
    public IList`1<SupportsRule> get_SupportsDirectives();
    public IList`1<NamespaceRule> get_NamespaceDirectives();
    private IList`1<T> GetDirectives(RuleType ruleType);
    [CompilerGeneratedAttribute]
public List`1<StylesheetParseError> get_Errors();
    [CompilerGeneratedAttribute]
private void set_Errors(List`1<StylesheetParseError> value);
    public virtual string ToString();
    public string ToString(bool friendlyFormat, int indentation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.StylesheetParseError : object {
    [CompilerGeneratedAttribute]
private ParserError <ParserError>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Line>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Column>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public ParserError ParserError { get; public set; }
    public int Line { get; public set; }
    public int Column { get; public set; }
    public string Message { get; private set; }
    public StylesheetParseError(ParserError error, string errorMessage, int line, int column);
    [CompilerGeneratedAttribute]
public ParserError get_ParserError();
    [CompilerGeneratedAttribute]
public void set_ParserError(ParserError value);
    [CompilerGeneratedAttribute]
public int get_Line();
    [CompilerGeneratedAttribute]
public void set_Line(int value);
    [CompilerGeneratedAttribute]
public int get_Column();
    [CompilerGeneratedAttribute]
public void set_Column(int value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(string value);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.StylesheetReader : object {
    private int _insertion;
    private Stack`1<int> _collengths;
    private TextReader _reader;
    private StringBuilder _buffer;
    private bool _lineWithReturn;
    [CompilerGeneratedAttribute]
private int <Line>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Column>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEnded>k__BackingField;
    [CompilerGeneratedAttribute]
private char <Current>k__BackingField;
    internal bool IsBeginning { get; }
    internal int Line { get; private set; }
    internal int Column { get; private set; }
    internal bool IsEnded { get; private set; }
    internal bool IsEnding { get; }
    internal char Current { get; private set; }
    internal char Next { get; }
    internal char Previous { get; }
    internal StylesheetReader(string styleText);
    internal StylesheetReader(Stream styleStream);
    internal bool get_IsBeginning();
    [CompilerGeneratedAttribute]
internal int get_Line();
    [CompilerGeneratedAttribute]
private void set_Line(int value);
    [CompilerGeneratedAttribute]
internal int get_Column();
    [CompilerGeneratedAttribute]
private void set_Column(int value);
    [CompilerGeneratedAttribute]
internal bool get_IsEnded();
    [CompilerGeneratedAttribute]
private void set_IsEnded(bool value);
    internal bool get_IsEnding();
    [CompilerGeneratedAttribute]
internal char get_Current();
    [CompilerGeneratedAttribute]
private void set_Current(char value);
    internal char get_Next();
    internal char get_Previous();
    internal void Advance();
    internal void Advance(int positions);
    internal void Back();
    internal void Back(int positions);
    private void ReadCurrent();
    private void AdvanceUnsafe();
    private void BackUnsafe();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.SupportsRule : ConditionalRule {
    private string _condition;
    [CompilerGeneratedAttribute]
private bool <IsSupported>k__BackingField;
    public string Condition { get; public set; }
    public bool IsSupported { get; public set; }
    public virtual string get_Condition();
    public virtual void set_Condition(string value);
    [CompilerGeneratedAttribute]
public bool get_IsSupported();
    [CompilerGeneratedAttribute]
public void set_IsSupported(bool value);
    public virtual string ToString();
    public virtual string ToString(bool friendlyFormat, int indentation);
}
internal abstract class External.Svg.ExCSS.Term : object {
    [NullableAttribute("1")]
public static InheritTerm Inherit;
    private static Term();
}
[DefaultMemberAttribute("ListItems")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.ExCSS.TermList : Term {
    private List`1<GrammarSegment> _separator;
    private List`1<Term> _items;
    private static GrammarSegment DefaultSeparator;
    public int Length { get; }
    public Term ListItems { get; }
    public TermList(Term[] terms);
    public void AddTerm(Term term);
    public void AddSeparator(TermSeparator termSeparator);
    internal void AddSeparator(GrammarSegment termSeparator);
    public int get_Length();
    public Term get_ListItems(int index);
    public Term Item(int index);
    public virtual string ToString();
    internal void SetLastTerm(Term term);
}
internal enum External.Svg.ExCSS.UnitType : Enum {
    public int value__;
    public static UnitType Unknown;
    public static UnitType Number;
    public static UnitType Percentage;
    public static UnitType Ems;
    public static UnitType Exs;
    public static UnitType Pixel;
    public static UnitType Centimeter;
    public static UnitType Millimeter;
    public static UnitType Inch;
    public static UnitType Point;
    public static UnitType Percent;
    public static UnitType Degree;
    public static UnitType Radian;
    public static UnitType Grad;
    public static UnitType Millisecond;
    public static UnitType Second;
    public static UnitType Hertz;
    public static UnitType KiloHertz;
    public static UnitType Dimension;
    public static UnitType String;
    public static UnitType Uri;
    public static UnitType Ident;
    public static UnitType Attribute;
    public static UnitType Counter;
    public static UnitType Rect;
    public static UnitType RGB;
    public static UnitType ViewportWidth;
    public static UnitType ViewportHeight;
    public static UnitType ViewportMin;
    public static UnitType ViewportMax;
    public static UnitType Turn;
}
[ExtensionAttribute]
internal static class External.Svg.ExtensionMethods.UriExtensions : object {
    [ExtensionAttribute]
[NullableContextAttribute("1")]
public static Uri ReplaceWithNullIfNone(Uri uri);
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class External.Svg.Extensions : object {
    [ExtensionAttribute]
public static IEnumerable`1<SvgElement> Descendants(IEnumerable`1<T> source);
    [IteratorStateMachineAttribute("External.Svg.Extensions/<GetAncestors>d__1`1")]
private static IEnumerable`1<SvgElement> GetAncestors(IEnumerable`1<T> source, bool self);
    [IteratorStateMachineAttribute("External.Svg.Extensions/<GetDescendants>d__2`1")]
private static IEnumerable`1<SvgElement> GetDescendants(IEnumerable`1<T> source, bool self);
}
internal enum External.Svg.FilterEffects.BlurType : Enum {
    public int value__;
    public static BlurType Both;
    public static BlurType HorizontalOnly;
    public static BlurType VerticalOnly;
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class External.Svg.FilterEffects.DictionaryExtensions : object {
    [ExtensionAttribute]
public static void Clear(Dictionary`2<TKey, TValue> self, Action`1<TValue> action);
    [ExtensionAttribute]
public static bool Remove(Dictionary`2<TKey, TValue> self, TKey key, Action`1<TValue> action);
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class External.Svg.FilterEffects.ImageBuffer : Dictionary`2<string, Bitmap> {
    private static string BufferKey;
    private RectangleF _bounds;
    private ISvgRenderer _renderer;
    private Action`1<ISvgRenderer> _renderMethod;
    private float _inflate;
    private Matrix _transform;
    public Matrix Transform { get; public set; }
    public Bitmap Buffer { get; }
    public Bitmap Item { get; public set; }
    public ImageBuffer(RectangleF bounds, float inflate, ISvgRenderer renderer, Action`1<ISvgRenderer> renderMethod);
    public Matrix get_Transform();
    public void set_Transform(Matrix value);
    public Bitmap get_Buffer();
    public Bitmap get_Item(string key);
    public void set_Item(string key, Bitmap value);
    public void Add(string key, Bitmap value);
    public bool ContainsKey(string key);
    public void Clear();
    public bool Remove(string key);
    public bool TryGetValue(string key, Bitmap& value);
    private Bitmap ProcessResult(string key, Bitmap curr);
    private string ProcessKey(string key);
    private Bitmap CreateSourceGraphic();
    private Bitmap CreateSourceAlpha();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
internal interface External.Svg.FilterEffects.ISvgFilterable {
    public SvgFilter Filter { get; public set; }
    public abstract virtual SvgFilter get_Filter();
    public abstract virtual void set_Filter(SvgFilter value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.FilterEffects.RawBitmap : object {
    private Bitmap _originBitmap;
    private BitmapData _bitmapData;
    private IntPtr _ptr;
    private int _bytes;
    private Byte[] _argbValues;
    public int Stride { get; }
    public int Width { get; }
    public int Height { get; }
    public Byte[] ArgbValues { get; public set; }
    public Bitmap Bitmap { get; }
    public RawBitmap(Bitmap originBitmap);
    public sealed virtual void Dispose();
    public int get_Stride();
    public int get_Width();
    public int get_Height();
    public Byte[] get_ArgbValues();
    public void set_ArgbValues(Byte[] value);
    public Bitmap get_Bitmap();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("feBlend")]
internal class External.Svg.FilterEffects.SvgBlend : SvgFilterPrimitive {
    [SvgAttributeAttribute("mode")]
public SvgBlendMode Mode { get; public set; }
    [SvgAttributeAttribute("in2")]
public string Input2 { get; public set; }
    public SvgBlendMode get_Mode();
    public void set_Mode(SvgBlendMode value);
    public string get_Input2();
    public void set_Input2(string value);
    public virtual void Process(ImageBuffer buffer);
    public virtual SvgElement DeepCopy();
}
[TypeConverterAttribute("External.Svg.SvgBlendModeConverter")]
internal enum External.Svg.FilterEffects.SvgBlendMode : Enum {
    public int value__;
    public static SvgBlendMode Normal;
    public static SvgBlendMode Multiply;
    public static SvgBlendMode Screen;
    public static SvgBlendMode Overlay;
    public static SvgBlendMode Darken;
    public static SvgBlendMode Lighten;
    public static SvgBlendMode ColorDodge;
    public static SvgBlendMode ColorBurn;
    public static SvgBlendMode HardLight;
    public static SvgBlendMode SoftLight;
    public static SvgBlendMode Difference;
    public static SvgBlendMode Exclusion;
    public static SvgBlendMode Hue;
    public static SvgBlendMode Saturation;
    public static SvgBlendMode Color;
    public static SvgBlendMode Luminosity;
}
[TypeConverterAttribute("External.Svg.SvgChannelSelectorConverter")]
internal enum External.Svg.FilterEffects.SvgChannelSelector : Enum {
    public int value__;
    public static SvgChannelSelector R;
    public static SvgChannelSelector G;
    public static SvgChannelSelector B;
    public static SvgChannelSelector A;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("feColorMatrix")]
internal class External.Svg.FilterEffects.SvgColourMatrix : SvgFilterPrimitive {
    private SvgColourMatrixType _type;
    private string _values;
    [SvgAttributeAttribute("type")]
public SvgColourMatrixType Type { get; public set; }
    [SvgAttributeAttribute("values")]
public string Values { get; public set; }
    public SvgColourMatrixType get_Type();
    public void set_Type(SvgColourMatrixType value);
    public string get_Values();
    public void set_Values(string value);
    public virtual void Process(ImageBuffer buffer);
    public virtual SvgElement DeepCopy();
    public virtual SvgElement DeepCopy();
}
[TypeConverterAttribute("External.Svg.SvgColourMatrixTypeConverter")]
internal enum External.Svg.FilterEffects.SvgColourMatrixType : Enum {
    public int value__;
    public static SvgColourMatrixType Matrix;
    public static SvgColourMatrixType Saturate;
    public static SvgColourMatrixType HueRotate;
    public static SvgColourMatrixType LuminanceToAlpha;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("feComponentTransfer")]
internal class External.Svg.FilterEffects.SvgComponentTransfer : SvgFilterPrimitive {
    public virtual void Process(ImageBuffer buffer);
    public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class External.Svg.FilterEffects.SvgComponentTransferFunction : SvgElement {
    [SvgAttributeAttribute("type")]
public SvgComponentTransferType Type { get; public set; }
    [SvgAttributeAttribute("tableValues")]
public SvgNumberCollection TableValues { get; public set; }
    [SvgAttributeAttribute("slope")]
public float Slope { get; public set; }
    [SvgAttributeAttribute("intercept")]
public float Intercept { get; public set; }
    [SvgAttributeAttribute("amplitude")]
public float Amplitude { get; public set; }
    [SvgAttributeAttribute("exponent")]
public float Exponent { get; public set; }
    [SvgAttributeAttribute("offset")]
public float Offset { get; public set; }
    public SvgComponentTransferType get_Type();
    public void set_Type(SvgComponentTransferType value);
    public SvgNumberCollection get_TableValues();
    public void set_TableValues(SvgNumberCollection value);
    public float get_Slope();
    public void set_Slope(float value);
    public float get_Intercept();
    public void set_Intercept(float value);
    public float get_Amplitude();
    public void set_Amplitude(float value);
    public float get_Exponent();
    public void set_Exponent(float value);
    public float get_Offset();
    public void set_Offset(float value);
}
[TypeConverterAttribute("External.Svg.SvgComponentTransferTypeConverter")]
internal enum External.Svg.FilterEffects.SvgComponentTransferType : Enum {
    public int value__;
    public static SvgComponentTransferType Identity;
    public static SvgComponentTransferType Table;
    public static SvgComponentTransferType Discrete;
    public static SvgComponentTransferType Linear;
    public static SvgComponentTransferType Gamma;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("feComposite")]
internal class External.Svg.FilterEffects.SvgComposite : SvgFilterPrimitive {
    [SvgAttributeAttribute("operator")]
public SvgCompositeOperator Operator { get; public set; }
    [SvgAttributeAttribute("k1")]
public float K1 { get; public set; }
    [SvgAttributeAttribute("k2")]
public float K2 { get; public set; }
    [SvgAttributeAttribute("k3")]
public float K3 { get; public set; }
    [SvgAttributeAttribute("k4")]
public float K4 { get; public set; }
    [SvgAttributeAttribute("in2")]
public string Input2 { get; public set; }
    public SvgCompositeOperator get_Operator();
    public void set_Operator(SvgCompositeOperator value);
    public float get_K1();
    public void set_K1(float value);
    public float get_K2();
    public void set_K2(float value);
    public float get_K3();
    public void set_K3(float value);
    public float get_K4();
    public void set_K4(float value);
    public string get_Input2();
    public void set_Input2(string value);
    public virtual void Process(ImageBuffer buffer);
    public virtual SvgElement DeepCopy();
}
[TypeConverterAttribute("External.Svg.SvgCompositeOperatorConverter")]
internal enum External.Svg.FilterEffects.SvgCompositeOperator : Enum {
    public int value__;
    public static SvgCompositeOperator Over;
    public static SvgCompositeOperator In;
    public static SvgCompositeOperator Out;
    public static SvgCompositeOperator Atop;
    public static SvgCompositeOperator Xor;
    public static SvgCompositeOperator Arithmetic;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("feConvolveMatrix")]
internal class External.Svg.FilterEffects.SvgConvolveMatrix : SvgFilterPrimitive {
    [SvgAttributeAttribute("order")]
public SvgNumberCollection Order { get; public set; }
    [SvgAttributeAttribute("kernelMatrix")]
public SvgNumberCollection KernelMatrix { get; public set; }
    [SvgAttributeAttribute("divisor")]
public float Divisor { get; public set; }
    [SvgAttributeAttribute("bias")]
public float Bias { get; public set; }
    [SvgAttributeAttribute("targetX")]
public int TargetX { get; public set; }
    [SvgAttributeAttribute("targetY")]
public int TargetY { get; public set; }
    [SvgAttributeAttribute("edgeMode")]
public SvgEdgeMode EdgeMode { get; public set; }
    [SvgAttributeAttribute("kernelUnitLength")]
public SvgNumberCollection KernelUnitLength { get; public set; }
    [SvgAttributeAttribute("preserveAlpha")]
public bool PreserveAlpha { get; public set; }
    public SvgNumberCollection get_Order();
    public void set_Order(SvgNumberCollection value);
    public SvgNumberCollection get_KernelMatrix();
    public void set_KernelMatrix(SvgNumberCollection value);
    public float get_Divisor();
    public void set_Divisor(float value);
    public float get_Bias();
    public void set_Bias(float value);
    public int get_TargetX();
    public void set_TargetX(int value);
    public int get_TargetY();
    public void set_TargetY(int value);
    public SvgEdgeMode get_EdgeMode();
    public void set_EdgeMode(SvgEdgeMode value);
    public SvgNumberCollection get_KernelUnitLength();
    public void set_KernelUnitLength(SvgNumberCollection value);
    public bool get_PreserveAlpha();
    public void set_PreserveAlpha(bool value);
    public virtual void Process(ImageBuffer buffer);
    public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("feDiffuseLighting")]
internal class External.Svg.FilterEffects.SvgDiffuseLighting : SvgFilterPrimitive {
    [SvgAttributeAttribute("surfaceScale")]
public float SurfaceScale { get; public set; }
    [SvgAttributeAttribute("diffuseConstant")]
public float DiffuseConstant { get; public set; }
    [SvgAttributeAttribute("kernelUnitLength")]
public SvgNumberCollection KernelUnitLength { get; public set; }
    [TypeConverterAttribute("External.Svg.SvgPaintServerFactory")]
[SvgAttributeAttribute("lighting-color")]
public SvgPaintServer LightingColor { get; public set; }
    public SvgElement LightSource { get; }
    public float get_SurfaceScale();
    public void set_SurfaceScale(float value);
    public float get_DiffuseConstant();
    public void set_DiffuseConstant(float value);
    public SvgNumberCollection get_KernelUnitLength();
    public void set_KernelUnitLength(SvgNumberCollection value);
    public SvgPaintServer get_LightingColor();
    public void set_LightingColor(SvgPaintServer value);
    public SvgElement get_LightSource();
    public virtual void Process(ImageBuffer buffer);
    public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("feDisplacementMap")]
internal class External.Svg.FilterEffects.SvgDisplacementMap : SvgFilterPrimitive {
    [SvgAttributeAttribute("scale")]
public float Scale { get; public set; }
    [SvgAttributeAttribute("xChannelSelector")]
public SvgChannelSelector XChannelSelector { get; public set; }
    [SvgAttributeAttribute("yChannelSelector")]
public SvgChannelSelector YChannelSelector { get; public set; }
    [SvgAttributeAttribute("in2")]
public string Input2 { get; public set; }
    public float get_Scale();
    public void set_Scale(float value);
    public SvgChannelSelector get_XChannelSelector();
    public void set_XChannelSelector(SvgChannelSelector value);
    public SvgChannelSelector get_YChannelSelector();
    public void set_YChannelSelector(SvgChannelSelector value);
    public string get_Input2();
    public void set_Input2(string value);
    public virtual void Process(ImageBuffer buffer);
    public virtual SvgElement DeepCopy();
}
[SvgElementAttribute("feDistantLight")]
internal class External.Svg.FilterEffects.SvgDistantLight : SvgElement {
    [SvgAttributeAttribute("azimuth")]
public float Azimuth { get; public set; }
    [SvgAttributeAttribute("elevation")]
public float Elevation { get; public set; }
    public float get_Azimuth();
    public void set_Azimuth(float value);
    public float get_Elevation();
    public void set_Elevation(float value);
    [NullableContextAttribute("1")]
public virtual SvgElement DeepCopy();
}
[TypeConverterAttribute("External.Svg.SvgEdgeModeConverter")]
internal enum External.Svg.FilterEffects.SvgEdgeMode : Enum {
    public int value__;
    public static SvgEdgeMode Duplicate;
    public static SvgEdgeMode Wrap;
    public static SvgEdgeMode None;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("filter")]
internal class External.Svg.FilterEffects.SvgFilter : SvgElement {
    [SvgAttributeAttribute("filterUnits")]
public SvgCoordinateUnits FilterUnits { get; public set; }
    [SvgAttributeAttribute("primitiveUnits")]
public SvgCoordinateUnits PrimitiveUnits { get; public set; }
    [SvgAttributeAttribute("x")]
public SvgUnit X { get; public set; }
    [SvgAttributeAttribute("y")]
public SvgUnit Y { get; public set; }
    [SvgAttributeAttribute("width")]
public SvgUnit Width { get; public set; }
    [SvgAttributeAttribute("height")]
public SvgUnit Height { get; public set; }
    [SvgAttributeAttribute("href", "http://www.w3.org/1999/xlink")]
public Uri Href { get; public set; }
    public SvgCoordinateUnits get_FilterUnits();
    public void set_FilterUnits(SvgCoordinateUnits value);
    public SvgCoordinateUnits get_PrimitiveUnits();
    public void set_PrimitiveUnits(SvgCoordinateUnits value);
    public SvgUnit get_X();
    public void set_X(SvgUnit value);
    public SvgUnit get_Y();
    public void set_Y(SvgUnit value);
    public SvgUnit get_Width();
    public void set_Width(SvgUnit value);
    public SvgUnit get_Height();
    public void set_Height(SvgUnit value);
    public Uri get_Href();
    public void set_Href(Uri value);
    protected virtual void Render(ISvgRenderer renderer);
    private Matrix GetTransform(SvgVisualElement element);
    private RectangleF GetPathBounds(SvgVisualElement element, ISvgRenderer renderer, Matrix transform);
    public void ApplyFilter(SvgVisualElement element, ISvgRenderer renderer, Action`1<ISvgRenderer> renderMethod);
    public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class External.Svg.FilterEffects.SvgFilterPrimitive : SvgElement {
    public static string SourceGraphic;
    public static string SourceAlpha;
    public static string BackgroundImage;
    public static string BackgroundAlpha;
    public static string FillPaint;
    public static string StrokePaint;
    [SvgAttributeAttribute("x")]
public SvgUnit X { get; public set; }
    [SvgAttributeAttribute("y")]
public SvgUnit Y { get; public set; }
    [SvgAttributeAttribute("width")]
public SvgUnit Width { get; public set; }
    [SvgAttributeAttribute("height")]
public SvgUnit Height { get; public set; }
    [SvgAttributeAttribute("in")]
public string Input { get; public set; }
    [SvgAttributeAttribute("result")]
public string Result { get; public set; }
    protected SvgFilter Owner { get; }
    public SvgUnit get_X();
    public void set_X(SvgUnit value);
    public SvgUnit get_Y();
    public void set_Y(SvgUnit value);
    public SvgUnit get_Width();
    public void set_Width(SvgUnit value);
    public SvgUnit get_Height();
    public void set_Height(SvgUnit value);
    public string get_Input();
    public void set_Input(string value);
    public string get_Result();
    public void set_Result(string value);
    protected SvgFilter get_Owner();
    public abstract virtual void Process(ImageBuffer buffer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("feFlood")]
internal class External.Svg.FilterEffects.SvgFlood : SvgFilterPrimitive {
    [SvgAttributeAttribute("flood-color")]
public SvgPaintServer FloodColor { get; public set; }
    [SvgAttributeAttribute("flood-opacity")]
public float FloodOpacity { get; public set; }
    public virtual SvgPaintServer get_FloodColor();
    public virtual void set_FloodColor(SvgPaintServer value);
    public virtual float get_FloodOpacity();
    public virtual void set_FloodOpacity(float value);
    public virtual void Process(ImageBuffer buffer);
    public virtual SvgElement DeepCopy();
}
[SvgElementAttribute("feFuncA")]
internal class External.Svg.FilterEffects.SvgFuncA : SvgComponentTransferFunction {
    [NullableContextAttribute("1")]
public virtual SvgElement DeepCopy();
}
[SvgElementAttribute("feFuncB")]
internal class External.Svg.FilterEffects.SvgFuncB : SvgComponentTransferFunction {
    [NullableContextAttribute("1")]
public virtual SvgElement DeepCopy();
}
[SvgElementAttribute("feFuncG")]
internal class External.Svg.FilterEffects.SvgFuncG : SvgComponentTransferFunction {
    [NullableContextAttribute("1")]
public virtual SvgElement DeepCopy();
}
[SvgElementAttribute("feFuncR")]
internal class External.Svg.FilterEffects.SvgFuncR : SvgComponentTransferFunction {
    [NullableContextAttribute("1")]
public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("feGaussianBlur")]
internal class External.Svg.FilterEffects.SvgGaussianBlur : SvgFilterPrimitive {
    private float _stdDeviationX;
    private float _stdDeviationY;
    private bool _isPrecalculated;
    private Int32[] _kernel;
    private int _kernelSum;
    private Int32[0...,0...] _multable;
    [SvgAttributeAttribute("stdDeviation")]
public SvgNumberCollection StdDeviation { get; public set; }
    private void PreCalculate();
    public Bitmap Apply(Image inputImage);
    public SvgNumberCollection get_StdDeviation();
    public void set_StdDeviation(SvgNumberCollection value);
    public virtual void Process(ImageBuffer buffer);
    public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("feImage")]
internal class External.Svg.FilterEffects.SvgImage : SvgFilterPrimitive {
    [SvgAttributeAttribute("href", "http://www.w3.org/1999/xlink")]
public string Href { get; public set; }
    [SvgAttributeAttribute("preserveAspectRatio")]
public SvgAspectRatio AspectRatio { get; public set; }
    public virtual string get_Href();
    public virtual void set_Href(string value);
    public SvgAspectRatio get_AspectRatio();
    public void set_AspectRatio(SvgAspectRatio value);
    public virtual void Process(ImageBuffer buffer);
    public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("feMerge")]
internal class External.Svg.FilterEffects.SvgMerge : SvgFilterPrimitive {
    public virtual void Process(ImageBuffer buffer);
    public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("feMergeNode")]
internal class External.Svg.FilterEffects.SvgMergeNode : SvgElement {
    [SvgAttributeAttribute("in")]
public string Input { get; public set; }
    public string get_Input();
    public void set_Input(string value);
    public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("feMorphology")]
internal class External.Svg.FilterEffects.SvgMorphology : SvgFilterPrimitive {
    [SvgAttributeAttribute("operator")]
public SvgMorphologyOperator Operator { get; public set; }
    [SvgAttributeAttribute("radius")]
public SvgNumberCollection Radius { get; public set; }
    public SvgMorphologyOperator get_Operator();
    public void set_Operator(SvgMorphologyOperator value);
    public SvgNumberCollection get_Radius();
    public void set_Radius(SvgNumberCollection value);
    public virtual void Process(ImageBuffer buffer);
    public virtual SvgElement DeepCopy();
}
[TypeConverterAttribute("External.Svg.SvgMorphologyOperatorConverter")]
internal enum External.Svg.FilterEffects.SvgMorphologyOperator : Enum {
    public int value__;
    public static SvgMorphologyOperator Erode;
    public static SvgMorphologyOperator Dilate;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("feOffset")]
internal class External.Svg.FilterEffects.SvgOffset : SvgFilterPrimitive {
    private SvgUnit _dx;
    private SvgUnit _dy;
    [SvgAttributeAttribute("dx")]
public SvgUnit Dx { get; public set; }
    [SvgAttributeAttribute("dy")]
public SvgUnit Dy { get; public set; }
    public SvgUnit get_Dx();
    public void set_Dx(SvgUnit value);
    public SvgUnit get_Dy();
    public void set_Dy(SvgUnit value);
    public virtual void Process(ImageBuffer buffer);
    public virtual SvgElement DeepCopy();
}
[SvgElementAttribute("fePointLight")]
internal class External.Svg.FilterEffects.SvgPointLight : SvgElement {
    [SvgAttributeAttribute("x")]
public float X { get; public set; }
    [SvgAttributeAttribute("y")]
public float Y { get; public set; }
    [SvgAttributeAttribute("z")]
public float Z { get; public set; }
    public float get_X();
    public void set_X(float value);
    public float get_Y();
    public void set_Y(float value);
    public float get_Z();
    public void set_Z(float value);
    [NullableContextAttribute("1")]
public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("feSpecularLighting")]
internal class External.Svg.FilterEffects.SvgSpecularLighting : SvgFilterPrimitive {
    [SvgAttributeAttribute("surfaceScale")]
public float SurfaceScale { get; public set; }
    [SvgAttributeAttribute("specularConstant")]
public float SpecularConstant { get; public set; }
    [SvgAttributeAttribute("specularExponent")]
public float SpecularExponent { get; public set; }
    [SvgAttributeAttribute("kernelUnitLength")]
public SvgNumberCollection KernelUnitLength { get; public set; }
    [TypeConverterAttribute("External.Svg.SvgPaintServerFactory")]
[SvgAttributeAttribute("lighting-color")]
public SvgPaintServer LightingColor { get; public set; }
    public SvgElement LightSource { get; }
    public float get_SurfaceScale();
    public void set_SurfaceScale(float value);
    public float get_SpecularConstant();
    public void set_SpecularConstant(float value);
    public float get_SpecularExponent();
    public void set_SpecularExponent(float value);
    public SvgNumberCollection get_KernelUnitLength();
    public void set_KernelUnitLength(SvgNumberCollection value);
    public SvgPaintServer get_LightingColor();
    public void set_LightingColor(SvgPaintServer value);
    public SvgElement get_LightSource();
    public virtual void Process(ImageBuffer buffer);
    public virtual SvgElement DeepCopy();
}
[SvgElementAttribute("feSpotLight")]
internal class External.Svg.FilterEffects.SvgSpotLight : SvgElement {
    [SvgAttributeAttribute("x")]
public float X { get; public set; }
    [SvgAttributeAttribute("y")]
public float Y { get; public set; }
    [SvgAttributeAttribute("z")]
public float Z { get; public set; }
    [SvgAttributeAttribute("pointsAtX")]
public float PointsAtX { get; public set; }
    [SvgAttributeAttribute("pointsAtY")]
public float PointsAtY { get; public set; }
    [SvgAttributeAttribute("pointsAtZ")]
public float PointsAtZ { get; public set; }
    [SvgAttributeAttribute("specularExponent")]
public float SpecularExponent { get; public set; }
    [SvgAttributeAttribute("limitingConeAngle")]
public float LimitingConeAngle { get; public set; }
    public float get_X();
    public void set_X(float value);
    public float get_Y();
    public void set_Y(float value);
    public float get_Z();
    public void set_Z(float value);
    public float get_PointsAtX();
    public void set_PointsAtX(float value);
    public float get_PointsAtY();
    public void set_PointsAtY(float value);
    public float get_PointsAtZ();
    public void set_PointsAtZ(float value);
    public float get_SpecularExponent();
    public void set_SpecularExponent(float value);
    public float get_LimitingConeAngle();
    public void set_LimitingConeAngle(float value);
    [NullableContextAttribute("1")]
public virtual SvgElement DeepCopy();
}
[TypeConverterAttribute("External.Svg.SvgStitchTypeConverter")]
internal enum External.Svg.FilterEffects.SvgStitchType : Enum {
    public int value__;
    public static SvgStitchType Stitch;
    public static SvgStitchType NoStitch;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("feTile")]
internal class External.Svg.FilterEffects.SvgTile : SvgFilterPrimitive {
    public virtual void Process(ImageBuffer buffer);
    public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("feTurbulence")]
internal class External.Svg.FilterEffects.SvgTurbulence : SvgFilterPrimitive {
    [SvgAttributeAttribute("baseFrequency")]
public SvgNumberCollection BaseFrequency { get; public set; }
    [SvgAttributeAttribute("numOctaves")]
public int NumOctaves { get; public set; }
    [SvgAttributeAttribute("seed")]
public float Seed { get; public set; }
    [SvgAttributeAttribute("stitchTiles")]
public SvgStitchType StitchTiles { get; public set; }
    [SvgAttributeAttribute("type")]
public SvgTurbulenceType Type { get; public set; }
    public SvgNumberCollection get_BaseFrequency();
    public void set_BaseFrequency(SvgNumberCollection value);
    public int get_NumOctaves();
    public void set_NumOctaves(int value);
    public float get_Seed();
    public void set_Seed(float value);
    public SvgStitchType get_StitchTiles();
    public void set_StitchTiles(SvgStitchType value);
    public SvgTurbulenceType get_Type();
    public void set_Type(SvgTurbulenceType value);
    public virtual void Process(ImageBuffer buffer);
    public virtual SvgElement DeepCopy();
}
[TypeConverterAttribute("External.Svg.SvgTurbulenceTypeConverter")]
internal enum External.Svg.FilterEffects.SvgTurbulenceType : Enum {
    public int value__;
    public static SvgTurbulenceType FractalNoise;
    public static SvgTurbulenceType Turbulence;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.GdiFontDefn : object {
    private Font _font;
    public float Size { get; }
    public float SizeInPoints { get; }
    public GdiFontDefn(Font font);
    public sealed virtual float get_Size();
    public sealed virtual float get_SizeInPoints();
    public sealed virtual void AddStringToPath(ISvgRenderer renderer, GraphicsPath path, string text, PointF location);
    public sealed virtual float Ascent(ISvgRenderer renderer);
    public sealed virtual IList`1<RectangleF> MeasureCharacters(ISvgRenderer renderer, string text);
    public sealed virtual SizeF MeasureString(ISvgRenderer renderer, string text);
    private Graphics GetGraphics(ISvgRenderer renderer);
    public sealed virtual void Dispose();
}
internal class External.Svg.GenericBoundable : object {
    private RectangleF _rect;
    public PointF Location { get; }
    public SizeF Size { get; }
    public RectangleF Bounds { get; }
    public GenericBoundable(RectangleF rect);
    public GenericBoundable(float x, float y, float width, float height);
    public sealed virtual PointF get_Location();
    public sealed virtual SizeF get_Size();
    public sealed virtual RectangleF get_Bounds();
}
[NullableContextAttribute("1")]
internal interface External.Svg.IFontDefn {
    public float Size { get; }
    public float SizeInPoints { get; }
    public abstract virtual float get_Size();
    public abstract virtual float get_SizeInPoints();
    public abstract virtual void AddStringToPath(ISvgRenderer renderer, GraphicsPath path, string text, PointF location);
    public abstract virtual float Ascent(ISvgRenderer renderer);
    public abstract virtual IList`1<RectangleF> MeasureCharacters(ISvgRenderer renderer, string text);
    public abstract virtual SizeF MeasureString(ISvgRenderer renderer, string text);
}
[NullableContextAttribute("1")]
internal interface External.Svg.IGraphicsProvider {
    public abstract virtual Graphics GetGraphics();
}
internal interface External.Svg.ISvgBoundable {
    public PointF Location { get; }
    public SizeF Size { get; }
    public RectangleF Bounds { get; }
    public abstract virtual PointF get_Location();
    public abstract virtual SizeF get_Size();
    public abstract virtual RectangleF get_Bounds();
}
[NullableContextAttribute("1")]
internal interface External.Svg.ISvgClipable {
    public Uri ClipPath { get; public set; }
    public SvgClipRule ClipRule { get; public set; }
    public abstract virtual Uri get_ClipPath();
    public abstract virtual void set_ClipPath(Uri value);
    public abstract virtual SvgClipRule get_ClipRule();
    public abstract virtual void set_ClipRule(SvgClipRule value);
    public abstract virtual void SetClip(ISvgRenderer renderer);
}
internal interface External.Svg.ISvgDescriptiveElement {
}
[NullableContextAttribute("1")]
internal interface External.Svg.ISvgElement {
    public SvgElement Parent { get; }
    public SvgElementCollection Children { get; }
    public IList`1<ISvgNode> Nodes { get; }
    public abstract virtual SvgElement get_Parent();
    public abstract virtual SvgElementCollection get_Children();
    public abstract virtual IList`1<ISvgNode> get_Nodes();
    public abstract virtual void Render(ISvgRenderer renderer);
}
[NullableContextAttribute("1")]
internal interface External.Svg.ISvgNode {
    public string Content { get; }
    public abstract virtual string get_Content();
    public abstract virtual ISvgNode DeepCopy();
}
[NullableContextAttribute("1")]
internal interface External.Svg.ISvgRenderer {
    public float DpiY { get; }
    public SmoothingMode SmoothingMode { get; public set; }
    public abstract virtual float get_DpiY();
    public abstract virtual SmoothingMode get_SmoothingMode();
    public abstract virtual void set_SmoothingMode(SmoothingMode value);
    public abstract virtual void DrawImage(Image image, RectangleF destRect, RectangleF srcRect, GraphicsUnit graphicsUnit);
    public abstract virtual void DrawImage(Image image, RectangleF destRect, RectangleF srcRect, GraphicsUnit graphicsUnit, float opacity);
    public abstract virtual void DrawImageUnscaled(Image image, Point location);
    public abstract virtual void DrawPath(Pen pen, GraphicsPath path);
    public abstract virtual void FillPath(Brush brush, GraphicsPath path);
    public abstract virtual ISvgBoundable GetBoundable();
    public abstract virtual ISvgBoundable PopBoundable();
    public abstract virtual void SetBoundable(ISvgBoundable boundable);
    public abstract virtual void TransformPrepend(Matrix transform);
    public abstract virtual void TranslatePrepend(float dx, float dy);
    public abstract virtual void RotatePrepend(float fAngle);
    public abstract virtual void ScalePrepend(float sx, float sy);
    public abstract virtual void IntersectClip(RectangleF rectangle);
    public abstract virtual void IntersectClip(GraphicsPath path);
    public abstract virtual void Push();
    public abstract virtual void Pop();
}
[NullableContextAttribute("1")]
internal interface External.Svg.ISvgStylable {
    public SvgPaintServer Fill { get; public set; }
    public SvgPaintServer Stroke { get; public set; }
    public SvgFillRule FillRule { get; public set; }
    public float Opacity { get; public set; }
    public float FillOpacity { get; public set; }
    public float StrokeOpacity { get; public set; }
    public SvgUnit StrokeWidth { get; public set; }
    public SvgStrokeLineCap StrokeLineCap { get; public set; }
    public SvgStrokeLineJoin StrokeLineJoin { get; public set; }
    public float StrokeMiterLimit { get; public set; }
    public SvgUnitCollection StrokeDashArray { get; public set; }
    public SvgUnit StrokeDashOffset { get; public set; }
    public abstract virtual SvgPaintServer get_Fill();
    public abstract virtual void set_Fill(SvgPaintServer value);
    public abstract virtual SvgPaintServer get_Stroke();
    public abstract virtual void set_Stroke(SvgPaintServer value);
    public abstract virtual SvgFillRule get_FillRule();
    public abstract virtual void set_FillRule(SvgFillRule value);
    public abstract virtual float get_Opacity();
    public abstract virtual void set_Opacity(float value);
    public abstract virtual float get_FillOpacity();
    public abstract virtual void set_FillOpacity(float value);
    public abstract virtual float get_StrokeOpacity();
    public abstract virtual void set_StrokeOpacity(float value);
    public abstract virtual SvgUnit get_StrokeWidth();
    public abstract virtual void set_StrokeWidth(SvgUnit value);
    public abstract virtual SvgStrokeLineCap get_StrokeLineCap();
    public abstract virtual void set_StrokeLineCap(SvgStrokeLineCap value);
    public abstract virtual SvgStrokeLineJoin get_StrokeLineJoin();
    public abstract virtual void set_StrokeLineJoin(SvgStrokeLineJoin value);
    public abstract virtual float get_StrokeMiterLimit();
    public abstract virtual void set_StrokeMiterLimit(float value);
    public abstract virtual SvgUnitCollection get_StrokeDashArray();
    public abstract virtual void set_StrokeDashArray(SvgUnitCollection value);
    public abstract virtual SvgUnit get_StrokeDashOffset();
    public abstract virtual void set_StrokeDashOffset(SvgUnit value);
    public abstract virtual GraphicsPath Path(ISvgRenderer renderer);
}
[ObsoleteAttribute("ISvgSupportsCoordinateUnits will be removed.")]
internal interface External.Svg.ISvgSupportsCoordinateUnits {
    public abstract virtual SvgCoordinateUnits GetUnits();
}
[NullableContextAttribute("1")]
internal interface External.Svg.ISvgTransformable {
    public SvgTransformCollection Transforms { get; public set; }
    public abstract virtual SvgTransformCollection get_Transforms();
    public abstract virtual void set_Transforms(SvgTransformCollection value);
    public abstract virtual void PushTransforms(ISvgRenderer renderer);
    public abstract virtual void PopTransforms(ISvgRenderer renderer);
}
[NullableContextAttribute("1")]
internal interface External.Svg.ISvgViewPort {
    public SvgViewBox ViewBox { get; public set; }
    public SvgAspectRatio AspectRatio { get; public set; }
    public SvgOverflow Overflow { get; public set; }
    public abstract virtual SvgViewBox get_ViewBox();
    public abstract virtual void set_ViewBox(SvgViewBox value);
    public abstract virtual SvgAspectRatio get_AspectRatio();
    public abstract virtual void set_AspectRatio(SvgAspectRatio value);
    public abstract virtual SvgOverflow get_Overflow();
    public abstract virtual void set_Overflow(SvgOverflow value);
}
internal class External.Svg.MouseArg : SVGArg {
}
internal class External.Svg.MouseScrollArg : SVGArg {
    public int Scroll;
    public bool AltKey;
    public bool ShiftKey;
    public bool CtrlKey;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.NonSvgElement : SvgElement {
    public string Name { get; }
    public NonSvgElement(string elementName);
    public virtual SvgElement DeepCopy();
    public string get_Name();
}
internal interface External.Svg.Pathing.ISvgPathElement {
    public abstract virtual void OnPathUpdated();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.Pathing.SvgArcSegment : SvgPathSegment {
    private static double RadiansPerDegree;
    private static double DoublePI;
    [CompilerGeneratedAttribute]
private float <RadiusX>k__BackingField;
    [CompilerGeneratedAttribute]
private float <RadiusY>k__BackingField;
    [CompilerGeneratedAttribute]
private float <Angle>k__BackingField;
    [CompilerGeneratedAttribute]
private SvgArcSweep <Sweep>k__BackingField;
    [CompilerGeneratedAttribute]
private SvgArcSize <Size>k__BackingField;
    public float RadiusX { get; public set; }
    public float RadiusY { get; public set; }
    public float Angle { get; public set; }
    public SvgArcSweep Sweep { get; public set; }
    public SvgArcSize Size { get; public set; }
    public SvgArcSegment(PointF start, float radiusX, float radiusY, float angle, SvgArcSize size, SvgArcSweep sweep, PointF end);
    [CompilerGeneratedAttribute]
public float get_RadiusX();
    [CompilerGeneratedAttribute]
public void set_RadiusX(float value);
    [CompilerGeneratedAttribute]
public float get_RadiusY();
    [CompilerGeneratedAttribute]
public void set_RadiusY(float value);
    [CompilerGeneratedAttribute]
public float get_Angle();
    [CompilerGeneratedAttribute]
public void set_Angle(float value);
    [CompilerGeneratedAttribute]
public SvgArcSweep get_Sweep();
    [CompilerGeneratedAttribute]
public void set_Sweep(SvgArcSweep value);
    [CompilerGeneratedAttribute]
public SvgArcSize get_Size();
    [CompilerGeneratedAttribute]
public void set_Size(SvgArcSize value);
    private static double CalculateVectorAngle(double ux, double uy, double vx, double vy);
    public virtual void AddToPath(GraphicsPath graphicsPath);
    public virtual string ToString();
}
[FlagsAttribute]
internal enum External.Svg.Pathing.SvgArcSize : Enum {
    public int value__;
    public static SvgArcSize Small;
    public static SvgArcSize Large;
}
[FlagsAttribute]
internal enum External.Svg.Pathing.SvgArcSweep : Enum {
    public int value__;
    public static SvgArcSweep Negative;
    public static SvgArcSweep Positive;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.Pathing.SvgClosePathSegment : SvgPathSegment {
    public virtual void AddToPath(GraphicsPath graphicsPath);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.Pathing.SvgCubicCurveSegment : SvgPathSegment {
    [CompilerGeneratedAttribute]
private PointF <FirstControlPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private PointF <SecondControlPoint>k__BackingField;
    public PointF FirstControlPoint { get; public set; }
    public PointF SecondControlPoint { get; public set; }
    public SvgCubicCurveSegment(PointF start, PointF firstControlPoint, PointF secondControlPoint, PointF end);
    [CompilerGeneratedAttribute]
public PointF get_FirstControlPoint();
    [CompilerGeneratedAttribute]
public void set_FirstControlPoint(PointF value);
    [CompilerGeneratedAttribute]
public PointF get_SecondControlPoint();
    [CompilerGeneratedAttribute]
public void set_SecondControlPoint(PointF value);
    public virtual void AddToPath(GraphicsPath graphicsPath);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.Pathing.SvgLineSegment : SvgPathSegment {
    public SvgLineSegment(PointF start, PointF end);
    public virtual void AddToPath(GraphicsPath graphicsPath);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.Pathing.SvgMoveToSegment : SvgPathSegment {
    public SvgMoveToSegment(PointF moveTo);
    public virtual void AddToPath(GraphicsPath graphicsPath);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class External.Svg.Pathing.SvgPathSegment : object {
    [CompilerGeneratedAttribute]
private PointF <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private PointF <End>k__BackingField;
    public PointF Start { get; public set; }
    public PointF End { get; public set; }
    protected SvgPathSegment(PointF start, PointF end);
    [CompilerGeneratedAttribute]
public PointF get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(PointF value);
    [CompilerGeneratedAttribute]
public PointF get_End();
    [CompilerGeneratedAttribute]
public void set_End(PointF value);
    public abstract virtual void AddToPath(GraphicsPath graphicsPath);
    public SvgPathSegment Clone();
}
[DefaultMemberAttribute("Item")]
[TypeConverterAttribute("External.Svg.SvgPathBuilder")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.Pathing.SvgPathSegmentList : object {
    private List`1<SvgPathSegment> _segments;
    [CompilerGeneratedAttribute]
private ISvgPathElement <Owner>k__BackingField;
    public ISvgPathElement Owner { get; public set; }
    public SvgPathSegment First { get; }
    public SvgPathSegment Last { get; }
    public SvgPathSegment Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    [CompilerGeneratedAttribute]
public ISvgPathElement get_Owner();
    [CompilerGeneratedAttribute]
public void set_Owner(ISvgPathElement value);
    public SvgPathSegment get_First();
    public SvgPathSegment get_Last();
    public sealed virtual int IndexOf(SvgPathSegment item);
    public sealed virtual void Insert(int index, SvgPathSegment item);
    public sealed virtual void RemoveAt(int index);
    public sealed virtual SvgPathSegment get_Item(int index);
    public sealed virtual void set_Item(int index, SvgPathSegment value);
    public sealed virtual void Add(SvgPathSegment item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(SvgPathSegment item);
    public sealed virtual void CopyTo(SvgPathSegment[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual bool Remove(SvgPathSegment item);
    public sealed virtual IEnumerator`1<SvgPathSegment> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual object Clone();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.Pathing.SvgQuadraticCurveSegment : SvgPathSegment {
    [CompilerGeneratedAttribute]
private PointF <ControlPoint>k__BackingField;
    public PointF ControlPoint { get; public set; }
    private PointF FirstControlPoint { get; }
    private PointF SecondControlPoint { get; }
    public SvgQuadraticCurveSegment(PointF start, PointF controlPoint, PointF end);
    [CompilerGeneratedAttribute]
public PointF get_ControlPoint();
    [CompilerGeneratedAttribute]
public void set_ControlPoint(PointF value);
    private PointF get_FirstControlPoint();
    private PointF get_SecondControlPoint();
    public virtual void AddToPath(GraphicsPath graphicsPath);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.PathStatistics : object {
    private static double GqBreak_TwoPoint;
    private static double GqBreak_ThreePoint;
    private static double GqBreak_FourPoint_01;
    private static double GqBreak_FourPoint_02;
    private static double GqWeight_FourPoint_01;
    private static double GqWeight_FourPoint_02;
    private PathData _data;
    private double _totalLength;
    private List`1<ISegment> _segments;
    public double TotalLength { get; }
    public PathStatistics(PathData data);
    public double get_TotalLength();
    public void LocationAngleAtOffset(double offset, PointF& point, Single& angle);
    public bool OffsetOnPath(double offset);
    private int BinarySearchForSegment(double offset, int first, int last);
}
[ExtensionAttribute]
internal static class External.Svg.PointFExtensions : object {
    [ExtensionAttribute]
[NullableContextAttribute("1")]
public static string ToSvgString(PointF p);
}
internal class External.Svg.StringArg : SVGArg {
    [NullableAttribute("1")]
public string s;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("a")]
internal class External.Svg.SvgAnchor : SvgElement {
    [SvgAttributeAttribute("href", "http://www.w3.org/1999/xlink")]
public string Href { get; public set; }
    [SvgAttributeAttribute("show", "http://www.w3.org/1999/xlink")]
public string Show { get; public set; }
    [SvgAttributeAttribute("title", "http://www.w3.org/1999/xlink")]
public string Title { get; public set; }
    [SvgAttributeAttribute("target")]
public string Target { get; public set; }
    public string get_Href();
    public void set_Href(string value);
    public string get_Show();
    public void set_Show(string value);
    public string get_Title();
    public void set_Title(string value);
    public string get_Target();
    public void set_Target(string value);
    public virtual SvgElement DeepCopy();
}
internal class External.Svg.SVGArg : EventArgs {
    [NullableAttribute("1")]
public string SessionID;
}
[TypeConverterAttribute("External.Svg.DataTypes.SvgPreserveAspectRatioConverter")]
internal class External.Svg.SvgAspectRatio : object {
    [CompilerGeneratedAttribute]
private SvgPreserveAspectRatio <Align>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Slice>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Defer>k__BackingField;
    public SvgPreserveAspectRatio Align { get; public set; }
    public bool Slice { get; public set; }
    public bool Defer { get; public set; }
    public SvgAspectRatio(SvgPreserveAspectRatio align);
    public SvgAspectRatio(SvgPreserveAspectRatio align, bool slice);
    public SvgAspectRatio(SvgPreserveAspectRatio align, bool slice, bool defer);
    [CompilerGeneratedAttribute]
public SvgPreserveAspectRatio get_Align();
    [CompilerGeneratedAttribute]
public void set_Align(SvgPreserveAspectRatio value);
    [CompilerGeneratedAttribute]
public bool get_Slice();
    [CompilerGeneratedAttribute]
public void set_Slice(bool value);
    [CompilerGeneratedAttribute]
public bool get_Defer();
    [CompilerGeneratedAttribute]
public void set_Defer(bool value);
    [NullableContextAttribute("1")]
public sealed virtual object Clone();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[AttributeUsageAttribute("640")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgAttributeAttribute : Attribute {
    public static string SvgNamespace;
    public static string XLinkPrefix;
    public static string XLinkNamespace;
    public static string XmlPrefix;
    public static string XmlNamespace;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static List`1<KeyValuePair`2<string, string>> Namespaces;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NameSpace>k__BackingField;
    public string NamespaceAndName { get; }
    public string Name { get; private set; }
    public string NameSpace { get; private set; }
    internal SvgAttributeAttribute(string name);
    public SvgAttributeAttribute(string name, string nameSpace);
    private static SvgAttributeAttribute();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public string get_NamespaceAndName();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_NameSpace();
    [CompilerGeneratedAttribute]
private void set_NameSpace(string value);
    [CompilerGeneratedAttribute]
[NullableContextAttribute("0")]
private bool <get_NamespaceAndName>b__9_0(KeyValuePair`2<string, string> x);
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class External.Svg.SvgAttributeCollection : Dictionary`2<string, object> {
    private SvgElement _owner;
    [CompilerGeneratedAttribute]
private EventHandler`1<AttributeEventArgs> AttributeChanged;
    public object Item { get; public set; }
    public SvgAttributeCollection(SvgElement owner);
    public TAttributeType GetAttribute(string attributeName, TAttributeType defaultValue);
    public TAttributeType GetInheritedAttribute(string attributeName, bool inherited, TAttributeType defaultValue);
    private bool IsInheritValue(object value);
    public object get_Item(string attributeName);
    public void set_Item(string attributeName, object value);
    private bool TryUnboxedCheck(object a, object b);
    private bool UnboxAndCheck(object a, object b);
    private bool IsValueType(object obj);
    [CompilerGeneratedAttribute]
public void add_AttributeChanged(EventHandler`1<AttributeEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_AttributeChanged(EventHandler`1<AttributeEventArgs> value);
    private void OnAttributeChanged(string attribute, object value);
}
internal class External.Svg.SvgBlendModeConverter : EnumBaseConverter`1<SvgBlendMode> {
}
internal class External.Svg.SvgChannelSelectorConverter : EnumBaseConverter`1<SvgChannelSelector> {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("circle")]
internal class External.Svg.SvgCircle : SvgPathBasedElement {
    private SvgUnit _centerX;
    private SvgUnit _centerY;
    private SvgUnit _radius;
    private GraphicsPath _path;
    public SvgPoint Center { get; }
    [SvgAttributeAttribute("cx")]
public SvgUnit CenterX { get; public set; }
    [SvgAttributeAttribute("cy")]
public SvgUnit CenterY { get; public set; }
    [SvgAttributeAttribute("r")]
public SvgUnit Radius { get; public set; }
    public SvgPoint get_Center();
    public virtual SvgUnit get_CenterX();
    public virtual void set_CenterX(SvgUnit value);
    public virtual SvgUnit get_CenterY();
    public virtual void set_CenterY(SvgUnit value);
    public virtual SvgUnit get_Radius();
    public virtual void set_Radius(SvgUnit value);
    public virtual GraphicsPath Path(ISvgRenderer renderer);
    protected virtual void Render(ISvgRenderer renderer);
    public virtual SvgElement DeepCopy();
    public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("clipPath")]
internal class External.Svg.SvgClipPath : SvgElement {
    private GraphicsPath _path;
    [SvgAttributeAttribute("clipPathUnits")]
public SvgCoordinateUnits ClipPathUnits { get; public set; }
    public SvgCoordinateUnits get_ClipPathUnits();
    public void set_ClipPathUnits(SvgCoordinateUnits value);
    public GraphicsPath GetClipPath(SvgVisualElement owner, ISvgRenderer renderer);
    private void CombinePaths(GraphicsPath path, SvgElement element, ISvgRenderer renderer);
    protected virtual void AddElement(SvgElement child, int index);
    protected virtual void RemoveElement(SvgElement child);
    protected virtual void Render(ISvgRenderer renderer);
    public virtual SvgElement DeepCopy();
}
[TypeConverterAttribute("External.Svg.SvgClipRuleConverter")]
internal enum External.Svg.SvgClipRule : Enum {
    public int value__;
    public static SvgClipRule NonZero;
    public static SvgClipRule EvenOdd;
    public static SvgClipRule Inherit;
}
internal class External.Svg.SvgClipRuleConverter : EnumBaseConverter`1<SvgClipRule> {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgColourConverter : ColorConverter {
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
    public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType);
    public virtual bool CanConvertTo(ITypeDescriptorContext context, Type destinationType);
    public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType);
    private static Color Hsl2Rgb(double h, double sl, double l);
}
internal class External.Svg.SvgColourInterpolationConverter : EnumBaseConverter`1<SvgColourInterpolation> {
}
internal class External.Svg.SvgColourMatrixTypeConverter : EnumBaseConverter`1<SvgColourMatrixType> {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgColourServer : SvgPaintServer {
    private Color _colour;
    public Color Colour { get; public set; }
    public SvgColourServer(Color colour);
    public Color get_Colour();
    public void set_Colour(Color value);
    public virtual Brush GetBrush(SvgVisualElement styleOwner, ISvgRenderer renderer, float opacity, bool forStroke);
    public virtual string ToString();
    public virtual SvgElement DeepCopy();
    public virtual SvgElement DeepCopy();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
internal class External.Svg.SvgComponentTransferTypeConverter : EnumBaseConverter`1<SvgComponentTransferType> {
}
internal class External.Svg.SvgCompositeOperatorConverter : EnumBaseConverter`1<SvgCompositeOperator> {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgContentNode : object {
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    public string Content { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Content();
    [CompilerGeneratedAttribute]
public void set_Content(string value);
    public sealed virtual ISvgNode DeepCopy();
}
[TypeConverterAttribute("External.Svg.SvgCoordinateUnitsConverter")]
internal enum External.Svg.SvgCoordinateUnits : Enum {
    public int value__;
    public static SvgCoordinateUnits ObjectBoundingBox;
    public static SvgCoordinateUnits UserSpaceOnUse;
}
internal class External.Svg.SvgCoordinateUnitsConverter : EnumBaseConverter`1<SvgCoordinateUnits> {
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class External.Svg.SvgCustomAttributeCollection : Dictionary`2<string, string> {
    private SvgElement _owner;
    [CompilerGeneratedAttribute]
private EventHandler`1<AttributeEventArgs> AttributeChanged;
    public string Item { get; public set; }
    public SvgCustomAttributeCollection(SvgElement owner);
    public string get_Item(string attributeName);
    public void set_Item(string attributeName, string value);
    [CompilerGeneratedAttribute]
public void add_AttributeChanged(EventHandler`1<AttributeEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_AttributeChanged(EventHandler`1<AttributeEventArgs> value);
    private void OnAttributeChanged(string attribute, object value);
}
[TypeConverterAttribute("External.Svg.SvgDeferredPaintServerFactory")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgDeferredPaintServer : SvgPaintServer {
    private bool _serverLoaded;
    private SvgPaintServer _concreteServer;
    private SvgPaintServer _fallbackServer;
    [CompilerGeneratedAttribute]
private SvgDocument <Document>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeferredId>k__BackingField;
    [CompilerGeneratedAttribute]
private SvgPaintServer <FallbackServer>k__BackingField;
    [ObsoleteAttribute("Will be removed.")]
public SvgDocument Document { get; public set; }
    public string DeferredId { get; public set; }
    public SvgPaintServer FallbackServer { get; private set; }
    [ObsoleteAttribute("Will be removed.")]
public SvgDeferredPaintServer(SvgDocument document, string id);
    public SvgDeferredPaintServer(string id);
    public SvgDeferredPaintServer(string id, SvgPaintServer fallbackServer);
    [CompilerGeneratedAttribute]
public SvgDocument get_Document();
    [CompilerGeneratedAttribute]
public void set_Document(SvgDocument value);
    [CompilerGeneratedAttribute]
public string get_DeferredId();
    [CompilerGeneratedAttribute]
public void set_DeferredId(string value);
    [CompilerGeneratedAttribute]
public SvgPaintServer get_FallbackServer();
    [CompilerGeneratedAttribute]
private void set_FallbackServer(SvgPaintServer value);
    public void EnsureServer(SvgElement styleOwner);
    public virtual Brush GetBrush(SvgVisualElement styleOwner, ISvgRenderer renderer, float opacity, bool forStroke);
    public virtual SvgElement DeepCopy();
    public virtual SvgElement DeepCopy();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    public static T TryGet(SvgPaintServer server, SvgElement parent);
}
internal class External.Svg.SvgDeferredPaintServerFactory : SvgPaintServerFactory {
    [NullableContextAttribute("1")]
public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("defs")]
internal class External.Svg.SvgDefinitionList : SvgElement {
    protected virtual void Render(ISvgRenderer renderer);
    public virtual SvgElement DeepCopy();
}
[DefaultPropertyAttribute("Text")]
[SvgElementAttribute("desc")]
internal class External.Svg.SvgDescription : SvgElement {
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgDocument : SvgFragment {
    [CompilerGeneratedAttribute]
private static bool <SkipGdiPlusCapabilityCheck>k__BackingField;
    private static Nullable`1<int> pointsPerInch;
    private SvgElementIdManager _idManager;
    private Dictionary`2<string, IEnumerable`1<SvgFontFace>> _fontDefns;
    private Uri baseUri;
    [CompilerGeneratedAttribute]
private int <Ppi>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExternalCSSHref>k__BackingField;
    [CompilerGeneratedAttribute]
private SvgFontManager <FontManager>k__BackingField;
    public static bool SkipGdiPlusCapabilityCheck { get; public set; }
    public static int PointsPerInch { get; public set; }
    public SvgOverflow Overflow { get; public set; }
    public Uri BaseUri { get; public set; }
    protected internal SvgElementIdManager IdManager { get; }
    public int Ppi { get; public set; }
    public string ExternalCSSHref { get; public set; }
    internal SvgFontManager FontManager { get; private set; }
    private IContainer System.ComponentModel.ITypeDescriptorContext.Container { get; }
    private object System.ComponentModel.ITypeDescriptorContext.Instance { get; }
    private PropertyDescriptor System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor { get; }
    [CompilerGeneratedAttribute]
public static bool get_SkipGdiPlusCapabilityCheck();
    [CompilerGeneratedAttribute]
public static void set_SkipGdiPlusCapabilityCheck(bool value);
    public static int get_PointsPerInch();
    public static void set_PointsPerInch(int value);
    public virtual SvgOverflow get_Overflow();
    public virtual void set_Overflow(SvgOverflow value);
    private static int GetSystemDpi();
    internal Dictionary`2<string, IEnumerable`1<SvgFontFace>> FontDefns();
    public Uri get_BaseUri();
    public void set_BaseUri(Uri value);
    protected internal virtual SvgElementIdManager get_IdManager();
    public void OverwriteIdManager(SvgElementIdManager manager);
    [CompilerGeneratedAttribute]
public int get_Ppi();
    [CompilerGeneratedAttribute]
public void set_Ppi(int value);
    [CompilerGeneratedAttribute]
public string get_ExternalCSSHref();
    [CompilerGeneratedAttribute]
public void set_ExternalCSSHref(string value);
    [CompilerGeneratedAttribute]
internal SvgFontManager get_FontManager();
    [CompilerGeneratedAttribute]
private void set_FontManager(SvgFontManager value);
    private sealed virtual override IContainer System.ComponentModel.ITypeDescriptorContext.get_Container();
    private sealed virtual override object System.ComponentModel.ITypeDescriptorContext.get_Instance();
    private sealed virtual override void System.ComponentModel.ITypeDescriptorContext.OnComponentChanged();
    private sealed virtual override bool System.ComponentModel.ITypeDescriptorContext.OnComponentChanging();
    private sealed virtual override PropertyDescriptor System.ComponentModel.ITypeDescriptorContext.get_PropertyDescriptor();
    private sealed virtual override object System.IServiceProvider.GetService(Type serviceType);
    public virtual SvgElement GetElementById(string id);
    public virtual TSvgElement GetElementById(string id);
    public static bool SystemIsGdiPlusCapable();
    public static void EnsureSystemIsGdiPlusCapable();
    private static bool ExceptionCaughtIsGdiPlusRelated(Exception e);
    public static SvgDocument Open(string path);
    public static T Open(string path);
    public static T Open(string path, Dictionary`2<string, string> entities);
    public static T Open(Stream stream);
    public static T FromSvg(string svg);
    public static T Open(Stream stream, Dictionary`2<string, string> entities);
    private static T Open(XmlReader reader);
    public static SvgDocument Open(XmlDocument document);
    public static Bitmap OpenAsBitmap(string path);
    public static Bitmap OpenAsBitmap(XmlDocument document);
    private void Draw(ISvgRenderer renderer, ISvgBoundable boundable);
    public void Draw(ISvgRenderer renderer);
    public void Draw(Graphics graphics);
    public void Draw(Graphics graphics, Nullable`1<SizeF> size);
    public virtual Bitmap Draw();
    public virtual void Draw(Bitmap bitmap);
    public virtual Bitmap Draw(int rasterWidth, int rasterHeight);
    public virtual void RasterizeDimensions(SizeF& size, int rasterWidth, int rasterHeight);
    public virtual void Write(XmlTextWriter writer);
    public void Write(Stream stream, bool useBom);
    public void Write(string path, bool useBom);
    protected virtual void WriteStartElement(XmlTextWriter writer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("metadata")]
internal class External.Svg.SvgDocumentMetadata : SvgElement {
    protected virtual void Render(ISvgRenderer renderer);
    protected virtual void WriteChildren(XmlTextWriter writer);
    public virtual SvgElement DeepCopy();
    public virtual void InitialiseFromXML(XmlTextReader reader, SvgDocument document);
}
internal class External.Svg.SvgDtdResolver : XmlUrlResolver {
    [NullableContextAttribute("1")]
public virtual object GetEntity(Uri absoluteUri, string role, Type ofObjectToReturn);
}
internal class External.Svg.SvgEdgeModeConverter : EnumBaseConverter`1<SvgEdgeMode> {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class External.Svg.SvgElement : object {
    internal static int StyleSpecificity_PresAttribute;
    internal static int StyleSpecificity_InlineStyle;
    private IEnumerable`1<PropertyAttributeTuple> _svgPropertyAttributes;
    private IEnumerable`1<EventAttributeTuple> _svgEventAttributes;
    internal SvgElement _parent;
    private string _elementName;
    private SvgAttributeCollection _attributes;
    private EventHandlerList _eventHandlers;
    private SvgElementCollection _children;
    private static object _loadEventKey;
    private SvgCustomAttributeCollection _customAttributes;
    private List`1<ISvgNode> _nodes;
    private Dictionary`2<string, SortedDictionary`2<int, string>> _styles;
    private string _content;
    [CompilerGeneratedAttribute]
private bool <Writing>k__BackingField;
    [CompilerGeneratedAttribute]
private EventHandler`1<ChildAddedEventArgs> ChildAdded;
    public bool AutoPublishEvents;
    [CompilerGeneratedAttribute]
private EventHandler`1<AttributeEventArgs> AttributeChanged;
    [CompilerGeneratedAttribute]
private EventHandler`1<ContentEventArgs> ContentChanged;
    [CompilerGeneratedAttribute]
private EventHandler`1<MouseArg> Click;
    [CompilerGeneratedAttribute]
private EventHandler`1<MouseArg> MouseDown;
    [CompilerGeneratedAttribute]
private EventHandler`1<MouseArg> MouseUp;
    [CompilerGeneratedAttribute]
private EventHandler`1<MouseArg> MouseMove;
    [CompilerGeneratedAttribute]
private EventHandler`1<MouseScrollArg> MouseScroll;
    [CompilerGeneratedAttribute]
private EventHandler`1<MouseArg> MouseOver;
    [CompilerGeneratedAttribute]
private EventHandler`1<MouseArg> MouseOut;
    private bool _dirty;
    protected internal string ElementName { get; internal set; }
    [SvgAttributeAttribute("color")]
public SvgPaintServer Color { get; public set; }
    public string Content { get; public set; }
    protected EventHandlerList Events { get; }
    public SvgElementCollection Children { get; }
    public IList`1<ISvgNode> Nodes { get; }
    public SvgElement Parent { get; }
    public IEnumerable`1<SvgElement> Parents { get; }
    public IEnumerable`1<SvgElement> ParentsAndSelf { get; }
    public SvgDocument OwnerDocument { get; }
    protected internal SvgAttributeCollection Attributes { get; }
    protected bool Writing { get; protected set; }
    public SvgCustomAttributeCollection CustomAttributes { get; }
    [SvgAttributeAttribute("transform")]
public SvgTransformCollection Transforms { get; public set; }
    [SvgAttributeAttribute("id")]
public string ID { get; public set; }
    [SvgAttributeAttribute("space", "http://www.w3.org/XML/1998/namespace")]
public XmlSpaceHandling SpaceHandling { get; public set; }
    protected bool IsPathDirty { get; protected set; }
    [SvgAttributeAttribute("fill")]
public SvgPaintServer Fill { get; public set; }
    [SvgAttributeAttribute("stroke")]
public SvgPaintServer Stroke { get; public set; }
    [SvgAttributeAttribute("fill-rule")]
public SvgFillRule FillRule { get; public set; }
    [SvgAttributeAttribute("fill-opacity")]
public float FillOpacity { get; public set; }
    [SvgAttributeAttribute("stroke-width")]
public SvgUnit StrokeWidth { get; public set; }
    [SvgAttributeAttribute("stroke-linecap")]
public SvgStrokeLineCap StrokeLineCap { get; public set; }
    [SvgAttributeAttribute("stroke-linejoin")]
public SvgStrokeLineJoin StrokeLineJoin { get; public set; }
    [SvgAttributeAttribute("stroke-miterlimit")]
public float StrokeMiterLimit { get; public set; }
    [TypeConverterAttribute("External.Svg.SvgStrokeDashArrayConverter")]
[SvgAttributeAttribute("stroke-dasharray")]
public SvgUnitCollection StrokeDashArray { get; public set; }
    [SvgAttributeAttribute("stroke-dashoffset")]
public SvgUnit StrokeDashOffset { get; public set; }
    [SvgAttributeAttribute("stroke-opacity")]
public float StrokeOpacity { get; public set; }
    [SvgAttributeAttribute("opacity")]
public float Opacity { get; public set; }
    [SvgAttributeAttribute("shape-rendering")]
public SvgShapeRendering ShapeRendering { get; public set; }
    [SvgAttributeAttribute("color-interpolation")]
public SvgColourInterpolation ColorInterpolation { get; public set; }
    [SvgAttributeAttribute("color-interpolation-filters")]
public SvgColourInterpolation ColorInterpolationFilters { get; public set; }
    [SvgAttributeAttribute("visibility")]
public string Visibility { get; public set; }
    [SvgAttributeAttribute("display")]
public string Display { get; public set; }
    [SvgAttributeAttribute("text-anchor")]
public SvgTextAnchor TextAnchor { get; public set; }
    [SvgAttributeAttribute("baseline-shift")]
public string BaselineShift { get; public set; }
    [SvgAttributeAttribute("font-family")]
public string FontFamily { get; public set; }
    [SvgAttributeAttribute("font-size")]
public SvgUnit FontSize { get; public set; }
    [SvgAttributeAttribute("font-style")]
public SvgFontStyle FontStyle { get; public set; }
    [SvgAttributeAttribute("font-variant")]
public SvgFontVariant FontVariant { get; public set; }
    [SvgAttributeAttribute("text-decoration")]
public SvgTextDecoration TextDecoration { get; public set; }
    [SvgAttributeAttribute("font-weight")]
public SvgFontWeight FontWeight { get; public set; }
    [SvgAttributeAttribute("font-stretch")]
public SvgFontStretch FontStretch { get; public set; }
    [SvgAttributeAttribute("text-transform")]
public SvgTextTransformation TextTransformation { get; public set; }
    [SvgAttributeAttribute("font")]
public string Font { get; public set; }
    private static SvgElement();
    public void AddStyle(string name, string value, int specificity);
    public void FlushStyles(bool children);
    private void FlushStyles();
    public bool ContainsAttribute(string name);
    public bool TryGetAttribute(string name, String& value);
    protected internal string get_ElementName();
    internal void set_ElementName(string value);
    public virtual SvgPaintServer get_Color();
    public virtual void set_Color(SvgPaintServer value);
    public virtual string get_Content();
    public virtual void set_Content(string value);
    protected virtual EventHandlerList get_Events();
    public void add_Load(EventHandler value);
    public void remove_Load(EventHandler value);
    public virtual SvgElementCollection get_Children();
    public sealed virtual IList`1<ISvgNode> get_Nodes();
    public IEnumerable`1<SvgElement> Descendants();
    [IteratorStateMachineAttribute("External.Svg.SvgElement/<AsEnumerable>d__40")]
private IEnumerable`1<SvgElement> AsEnumerable();
    public virtual bool HasChildren();
    public virtual SvgElement get_Parent();
    [IteratorStateMachineAttribute("External.Svg.SvgElement/<get_Parents>d__45")]
public IEnumerable`1<SvgElement> get_Parents();
    [IteratorStateMachineAttribute("External.Svg.SvgElement/<get_ParentsAndSelf>d__47")]
public IEnumerable`1<SvgElement> get_ParentsAndSelf();
    public virtual SvgDocument get_OwnerDocument();
    protected internal virtual SvgAttributeCollection get_Attributes();
    [CompilerGeneratedAttribute]
protected bool get_Writing();
    [CompilerGeneratedAttribute]
protected void set_Writing(bool value);
    protected internal TAttributeType GetAttribute(string attributeName, bool inherited, TAttributeType defaultValue);
    public SvgCustomAttributeCollection get_CustomAttributes();
    protected internal virtual bool PushTransforms(ISvgRenderer renderer);
    protected internal virtual void PopTransforms(ISvgRenderer renderer);
    private sealed virtual override void External.Svg.ISvgTransformable.PushTransforms(ISvgRenderer renderer);
    private sealed virtual override void External.Svg.ISvgTransformable.PopTransforms(ISvgRenderer renderer);
    public sealed virtual SvgTransformCollection get_Transforms();
    public sealed virtual void set_Transforms(SvgTransformCollection value);
    protected RectangleF TransformedBounds(RectangleF bounds);
    public string get_ID();
    public void set_ID(string value);
    public virtual XmlSpaceHandling get_SpaceHandling();
    public virtual void set_SpaceHandling(XmlSpaceHandling value);
    public void SetAndForceUniqueID(string value, bool autoForceUniqueID, Action`3<SvgElement, string, string> logElementOldIDNewID);
    internal void ForceUniqueID(string newID);
    protected virtual void AddElement(SvgElement child, int index);
    [CompilerGeneratedAttribute]
public void add_ChildAdded(EventHandler`1<ChildAddedEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_ChildAdded(EventHandler`1<ChildAddedEventArgs> value);
    internal void OnElementAdded(SvgElement child, int index);
    protected virtual void RemoveElement(SvgElement child);
    internal void OnElementRemoved(SvgElement child);
    private void Attributes_AttributeChanged(object sender, AttributeEventArgs e);
    public virtual void InitialiseFromXML(XmlTextReader reader, SvgDocument document);
    public void RenderElement(ISvgRenderer renderer);
    public virtual bool ShouldWriteElement();
    protected virtual void WriteStartElement(XmlTextWriter writer);
    protected virtual void WriteEndElement(XmlTextWriter writer);
    protected virtual void WriteAttributes(XmlTextWriter writer);
    private Dictionary`2<string, string> WritePropertyAttributes(XmlTextWriter writer);
    private bool TryResolveParentAttributeValue(string attributeKey, Object& parentAttributeValue);
    public virtual void Write(XmlTextWriter writer);
    protected virtual void WriteChildren(XmlTextWriter writer);
    protected virtual void Render(ISvgRenderer renderer);
    protected virtual void RenderChildren(ISvgRenderer renderer);
    private sealed virtual override void External.Svg.ISvgElement.Render(ISvgRenderer renderer);
    protected void AddPaths(SvgElement elem, GraphicsPath path);
    protected GraphicsPath GetPaths(SvgElement elem, ISvgRenderer renderer);
    public virtual object Clone();
    public abstract virtual SvgElement DeepCopy();
    private sealed virtual override ISvgNode External.Svg.ISvgNode.DeepCopy();
    public virtual SvgElement DeepCopy();
    [CompilerGeneratedAttribute]
public void add_AttributeChanged(EventHandler`1<AttributeEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_AttributeChanged(EventHandler`1<AttributeEventArgs> value);
    protected void OnAttributeChanged(AttributeEventArgs args);
    [CompilerGeneratedAttribute]
public void add_ContentChanged(EventHandler`1<ContentEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_ContentChanged(EventHandler`1<ContentEventArgs> value);
    protected void OnContentChanged(ContentEventArgs args);
    [CompilerGeneratedAttribute]
public void add_Click(EventHandler`1<MouseArg> value);
    [CompilerGeneratedAttribute]
public void remove_Click(EventHandler`1<MouseArg> value);
    [CompilerGeneratedAttribute]
public void add_MouseDown(EventHandler`1<MouseArg> value);
    [CompilerGeneratedAttribute]
public void remove_MouseDown(EventHandler`1<MouseArg> value);
    [CompilerGeneratedAttribute]
public void add_MouseUp(EventHandler`1<MouseArg> value);
    [CompilerGeneratedAttribute]
public void remove_MouseUp(EventHandler`1<MouseArg> value);
    [CompilerGeneratedAttribute]
public void add_MouseMove(EventHandler`1<MouseArg> value);
    [CompilerGeneratedAttribute]
public void remove_MouseMove(EventHandler`1<MouseArg> value);
    [CompilerGeneratedAttribute]
public void add_MouseScroll(EventHandler`1<MouseScrollArg> value);
    [CompilerGeneratedAttribute]
public void remove_MouseScroll(EventHandler`1<MouseScrollArg> value);
    [CompilerGeneratedAttribute]
public void add_MouseOver(EventHandler`1<MouseArg> value);
    [CompilerGeneratedAttribute]
public void remove_MouseOver(EventHandler`1<MouseArg> value);
    [CompilerGeneratedAttribute]
public void add_MouseOut(EventHandler`1<MouseArg> value);
    [CompilerGeneratedAttribute]
public void remove_MouseOut(EventHandler`1<MouseArg> value);
    protected void RaiseMouseClick(object sender, MouseArg e);
    protected void RaiseMouseDown(object sender, MouseArg e);
    protected void RaiseMouseUp(object sender, MouseArg e);
    protected void RaiseMouseMove(object sender, MouseArg e);
    protected void RaiseMouseOver(object sender, MouseArg args);
    protected void RaiseMouseOut(object sender, MouseArg args);
    protected void OnMouseScroll(int scroll, bool ctrlKey, bool shiftKey, bool altKey, string sessionID);
    protected void RaiseMouseScroll(object sender, MouseScrollArg e);
    protected virtual bool get_IsPathDirty();
    protected virtual void set_IsPathDirty(bool value);
    public void InvalidateChildPaths();
    protected static float FixOpacityValue(float value);
    public virtual SvgPaintServer get_Fill();
    public virtual void set_Fill(SvgPaintServer value);
    public virtual SvgPaintServer get_Stroke();
    public virtual void set_Stroke(SvgPaintServer value);
    public virtual SvgFillRule get_FillRule();
    public virtual void set_FillRule(SvgFillRule value);
    public virtual float get_FillOpacity();
    public virtual void set_FillOpacity(float value);
    public virtual SvgUnit get_StrokeWidth();
    public virtual void set_StrokeWidth(SvgUnit value);
    public virtual SvgStrokeLineCap get_StrokeLineCap();
    public virtual void set_StrokeLineCap(SvgStrokeLineCap value);
    public virtual SvgStrokeLineJoin get_StrokeLineJoin();
    public virtual void set_StrokeLineJoin(SvgStrokeLineJoin value);
    public virtual float get_StrokeMiterLimit();
    public virtual void set_StrokeMiterLimit(float value);
    public virtual SvgUnitCollection get_StrokeDashArray();
    public virtual void set_StrokeDashArray(SvgUnitCollection value);
    public virtual SvgUnit get_StrokeDashOffset();
    public virtual void set_StrokeDashOffset(SvgUnit value);
    public virtual float get_StrokeOpacity();
    public virtual void set_StrokeOpacity(float value);
    public virtual float get_Opacity();
    public virtual void set_Opacity(float value);
    public virtual SvgShapeRendering get_ShapeRendering();
    public virtual void set_ShapeRendering(SvgShapeRendering value);
    public SvgColourInterpolation get_ColorInterpolation();
    public void set_ColorInterpolation(SvgColourInterpolation value);
    public SvgColourInterpolation get_ColorInterpolationFilters();
    public void set_ColorInterpolationFilters(SvgColourInterpolation value);
    public virtual string get_Visibility();
    public virtual void set_Visibility(string value);
    public virtual string get_Display();
    public virtual void set_Display(string value);
    public virtual SvgTextAnchor get_TextAnchor();
    public virtual void set_TextAnchor(SvgTextAnchor value);
    public virtual string get_BaselineShift();
    public virtual void set_BaselineShift(string value);
    public virtual string get_FontFamily();
    public virtual void set_FontFamily(string value);
    public virtual SvgUnit get_FontSize();
    public virtual void set_FontSize(SvgUnit value);
    public virtual SvgFontStyle get_FontStyle();
    public virtual void set_FontStyle(SvgFontStyle value);
    public virtual SvgFontVariant get_FontVariant();
    public virtual void set_FontVariant(SvgFontVariant value);
    public virtual SvgTextDecoration get_TextDecoration();
    public virtual void set_TextDecoration(SvgTextDecoration value);
    public virtual SvgFontWeight get_FontWeight();
    public virtual void set_FontWeight(SvgFontWeight value);
    public virtual SvgFontStretch get_FontStretch();
    public virtual void set_FontStretch(SvgFontStretch value);
    public virtual SvgTextTransformation get_TextTransformation();
    public virtual void set_TextTransformation(SvgTextTransformation value);
    public virtual string get_Font();
    public virtual void set_Font(string value);
    internal IFontDefn GetFont(ISvgRenderer renderer, SvgFontManager fontManager);
    public static object ValidateFontFamily(string fontFamilyList, SvgDocument doc, SvgFontManager fontManager);
}
[AttributeUsageAttribute("4")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgElementAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ElementName>k__BackingField;
    public string ElementName { get; private set; }
    public SvgElementAttribute(string elementName);
    [CompilerGeneratedAttribute]
public string get_ElementName();
    [CompilerGeneratedAttribute]
private void set_ElementName(string value);
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgElementCollection : object {
    private List`1<SvgElement> _elements;
    private SvgElement _owner;
    private bool _mock;
    public SvgElement Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    internal SvgElementCollection(SvgElement owner);
    internal SvgElementCollection(SvgElement owner, bool mock);
    public sealed virtual int IndexOf(SvgElement item);
    public sealed virtual void Insert(int index, SvgElement item);
    private void LogIDChange(SvgElement elem, string oldId, string newID);
    public void InsertAndForceUniqueID(int index, SvgElement item, bool autoForceUniqueID, bool autoFixChildrenID, Action`3<SvgElement, string, string> logElementOldIDNewID);
    public sealed virtual void RemoveAt(int index);
    public sealed virtual SvgElement get_Item(int index);
    public sealed virtual void set_Item(int index, SvgElement value);
    public sealed virtual void Add(SvgElement item);
    public void AddAndForceUniqueID(SvgElement item, bool autoForceUniqueID, bool autoFixChildrenID, Action`3<SvgElement, string, string> logElementOldIDNewID);
    private void AddToIdManager(SvgElement item, SvgElement sibling, bool autoForceUniqueID, bool autoFixChildrenID, Action`3<SvgElement, string, string> logElementOldIDNewID);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(SvgElement item);
    public sealed virtual void CopyTo(SvgElement[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual bool Remove(SvgElement item);
    public IEnumerable`1<T> FindSvgElementsOf();
    public T FindSvgElementOf();
    public T GetSvgElementOf();
    public sealed virtual IEnumerator`1<SvgElement> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
internal class External.Svg.SvgElementEventArgs : EventArgs {
    [NullableAttribute("1")]
public SvgElement Element;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgElementFactory : object {
    private List`1<ElementInfo> availableElements;
    private Parser cssParser;
    private static Dictionary`2<Type, Dictionary`2<string, PropertyDescriptorCollection>> _propertyDescriptors;
    private static object syncLock;
    public List`1<ElementInfo> AvailableElements { get; }
    private static SvgElementFactory();
    public List`1<ElementInfo> get_AvailableElements();
    public T CreateDocument(XmlReader reader);
    public SvgElement CreateElement(XmlReader reader, SvgDocument document);
    private SvgElement CreateElement(XmlReader reader, bool fragmentIsDocument, SvgDocument document);
    private void SetAttributes(SvgElement element, XmlReader reader, SvgDocument document);
    private static bool IsStyleAttribute(string name);
    internal static bool SetPropertyValue(SvgElement element, string attributeName, string attributeValue, SvgDocument document, bool isStyle);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgElementIdManager : object {
    private SvgDocument _document;
    private Dictionary`2<string, SvgElement> _idValueMap;
    private static Regex regex;
    [CompilerGeneratedAttribute]
private EventHandler`1<SvgElementEventArgs> ElementAdded;
    [CompilerGeneratedAttribute]
private EventHandler`1<SvgElementEventArgs> ElementRemoved;
    public SvgElementIdManager(SvgDocument document);
    private static SvgElementIdManager();
    public virtual SvgElement GetElementById(string id);
    public virtual SvgElement GetElementById(Uri uri);
    private static string GetUrlString(string url);
    public virtual void Add(SvgElement element);
    public virtual bool AddAndForceUniqueID(SvgElement element, SvgElement sibling, bool autoForceUniqueID, Action`3<SvgElement, string, string> logElementOldIDNewID);
    public virtual void Remove(SvgElement element);
    public string EnsureValidId(string id, bool autoForceUniqueID);
    [CompilerGeneratedAttribute]
public void add_ElementAdded(EventHandler`1<SvgElementEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_ElementAdded(EventHandler`1<SvgElementEventArgs> value);
    [CompilerGeneratedAttribute]
public void add_ElementRemoved(EventHandler`1<SvgElementEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_ElementRemoved(EventHandler`1<SvgElementEventArgs> value);
    protected void OnAdded(SvgElement element);
    protected void OnRemoved(SvgElement element);
}
internal class External.Svg.SvgElementStyle : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("ellipse")]
internal class External.Svg.SvgEllipse : SvgPathBasedElement {
    private SvgUnit _centerX;
    private SvgUnit _centerY;
    private SvgUnit _radiusX;
    private SvgUnit _radiusY;
    private GraphicsPath _path;
    [SvgAttributeAttribute("cx")]
public SvgUnit CenterX { get; public set; }
    [SvgAttributeAttribute("cy")]
public SvgUnit CenterY { get; public set; }
    [SvgAttributeAttribute("rx")]
public SvgUnit RadiusX { get; public set; }
    [SvgAttributeAttribute("ry")]
public SvgUnit RadiusY { get; public set; }
    public virtual SvgUnit get_CenterX();
    public virtual void set_CenterX(SvgUnit value);
    public virtual SvgUnit get_CenterY();
    public virtual void set_CenterY(SvgUnit value);
    public virtual SvgUnit get_RadiusX();
    public virtual void set_RadiusX(SvgUnit value);
    public virtual SvgUnit get_RadiusY();
    public virtual void set_RadiusY(SvgUnit value);
    public virtual GraphicsPath Path(ISvgRenderer renderer);
    protected virtual void Render(ISvgRenderer renderer);
    public virtual SvgElement DeepCopy();
    public virtual SvgElement DeepCopy();
}
internal class External.Svg.SvgException : FormatException {
    [NullableContextAttribute("1")]
public SvgException(string message);
}
[ExtensionAttribute]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class External.Svg.SvgExtentions : object {
    [ExtensionAttribute]
public static void SetRectangle(SvgRectangle r, RectangleF bounds);
    [ExtensionAttribute]
public static RectangleF GetRectangle(SvgRectangle r);
    [ExtensionAttribute]
public static string GetXML(SvgDocument doc);
    [ExtensionAttribute]
public static string GetXML(SvgElement elem);
    [ExtensionAttribute]
public static bool HasNonEmptyCustomAttribute(SvgElement element, string name);
    [ExtensionAttribute]
public static void ApplyRecursive(SvgElement elem, Action`1<SvgElement> action);
    [ExtensionAttribute]
public static void ApplyRecursiveDepthFirst(SvgElement elem, Action`1<SvgElement> action);
    [IteratorStateMachineAttribute("External.Svg.SvgExtentions/<Traverse>d__7`1")]
[ExtensionAttribute]
public static IEnumerable`1<T> Traverse(IEnumerable`1<T> items, Func`2<T, IEnumerable`1<T>> childrenSelector);
    [ExtensionAttribute]
public static IEnumerable`1<T> Traverse(T root, Func`2<T, IEnumerable`1<T>> childrenSelector);
    [IteratorStateMachineAttribute("External.Svg.SvgExtentions/<TraverseDepthFirst>d__9`1")]
[ExtensionAttribute]
public static IEnumerable`1<T> TraverseDepthFirst(IEnumerable`1<T> items, Func`2<T, IEnumerable`1<T>> childrenSelector);
    [ExtensionAttribute]
public static IEnumerable`1<T> TraverseDepthFirst(T root, Func`2<T, IEnumerable`1<T>> childrenSelector);
}
[ObsoleteAttribute("Will be removed.Use SvgDeferredPaintServer class instead.")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgFallbackPaintServer : SvgPaintServer {
    private IEnumerable`1<SvgPaintServer> _fallbacks;
    private SvgPaintServer _primary;
    public SvgFallbackPaintServer(SvgPaintServer primary, IEnumerable`1<SvgPaintServer> fallbacks);
    public virtual Brush GetBrush(SvgVisualElement styleOwner, ISvgRenderer renderer, float opacity, bool forStroke);
    public virtual SvgElement DeepCopy();
    public virtual SvgElement DeepCopy();
    [CompilerGeneratedAttribute]
private SvgPaintServer <GetBrush>b__4_0();
}
[TypeConverterAttribute("External.Svg.SvgFillRuleConverter")]
internal enum External.Svg.SvgFillRule : Enum {
    public int value__;
    public static SvgFillRule NonZero;
    public static SvgFillRule EvenOdd;
    public static SvgFillRule Inherit;
}
internal class External.Svg.SvgFillRuleConverter : EnumBaseConverter`1<SvgFillRule> {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("font")]
internal class External.Svg.SvgFont : SvgElement {
    [SvgAttributeAttribute("horiz-adv-x")]
public float HorizAdvX { get; public set; }
    [SvgAttributeAttribute("horiz-origin-x")]
public float HorizOriginX { get; public set; }
    [SvgAttributeAttribute("horiz-origin-y")]
public float HorizOriginY { get; public set; }
    [SvgAttributeAttribute("vert-adv-y")]
public float VertAdvY { get; public set; }
    [SvgAttributeAttribute("vert-origin-x")]
public float VertOriginX { get; public set; }
    [SvgAttributeAttribute("vert-origin-y")]
public float VertOriginY { get; public set; }
    public float get_HorizAdvX();
    public void set_HorizAdvX(float value);
    public float get_HorizOriginX();
    public void set_HorizOriginX(float value);
    public float get_HorizOriginY();
    public void set_HorizOriginY(float value);
    public float get_VertAdvY();
    public void set_VertAdvY(float value);
    public float get_VertOriginX();
    public void set_VertOriginX(float value);
    public float get_VertOriginY();
    public void set_VertOriginY(float value);
    public virtual SvgElement DeepCopy();
    protected virtual void Render(ISvgRenderer renderer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgFontDefn : object {
    private SvgFont _font;
    private float _emScale;
    private float _ppi;
    private float _size;
    private Dictionary`2<string, SvgGlyph> _glyphs;
    private Dictionary`2<string, SvgKern> _kerning;
    public float Size { get; }
    public float SizeInPoints { get; }
    public SvgFontDefn(SvgFont font, float size, float ppi);
    public sealed virtual float get_Size();
    public sealed virtual float get_SizeInPoints();
    public sealed virtual float Ascent(ISvgRenderer renderer);
    public sealed virtual IList`1<RectangleF> MeasureCharacters(ISvgRenderer renderer, string text);
    public sealed virtual SizeF MeasureString(ISvgRenderer renderer, string text);
    public sealed virtual void AddStringToPath(ISvgRenderer renderer, GraphicsPath path, string text, PointF location);
    private GraphicsPath GetPath(ISvgRenderer renderer, string text, IList`1<RectangleF> ranges, bool measureSpaces);
    private void EnsureDictionaries();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("font-face")]
internal class External.Svg.SvgFontFace : SvgElement {
    [SvgAttributeAttribute("alphabetic")]
public float Alphabetic { get; public set; }
    [SvgAttributeAttribute("ascent")]
public float Ascent { get; public set; }
    [SvgAttributeAttribute("ascent-height")]
public float AscentHeight { get; public set; }
    [SvgAttributeAttribute("descent")]
public float Descent { get; public set; }
    [SvgAttributeAttribute("panose-1")]
public string Panose1 { get; public set; }
    [SvgAttributeAttribute("units-per-em")]
public float UnitsPerEm { get; public set; }
    [SvgAttributeAttribute("x-height")]
public float XHeight { get; public set; }
    public float get_Alphabetic();
    public void set_Alphabetic(float value);
    public float get_Ascent();
    public void set_Ascent(float value);
    public float get_AscentHeight();
    public void set_AscentHeight(float value);
    public float get_Descent();
    public void set_Descent(float value);
    public string get_Panose1();
    public void set_Panose1(string value);
    public float get_UnitsPerEm();
    public void set_UnitsPerEm(float value);
    public float get_XHeight();
    public void set_XHeight(float value);
    public virtual SvgElement DeepCopy();
}
[SvgElementAttribute("font-face-src")]
internal class External.Svg.SvgFontFaceSrc : SvgElement {
    [NullableContextAttribute("1")]
public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("font-face-uri")]
internal class External.Svg.SvgFontFaceUri : SvgElement {
    [SvgAttributeAttribute("href", "http://www.w3.org/1999/xlink")]
public Uri ReferencedElement { get; public set; }
    public virtual Uri get_ReferencedElement();
    public virtual void set_ReferencedElement(Uri value);
    public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgFontManager : object {
    private static String[][] defaultLocalizedFamilyNames;
    [CompilerGeneratedAttribute]
private static List`1<String[]> <LocalizedFamilyNames>k__BackingField;
    [CompilerGeneratedAttribute]
private static List`1<string> <PrivateFontPathList>k__BackingField;
    [CompilerGeneratedAttribute]
private static List`1<Byte[]> <PrivateFontDataList>k__BackingField;
    private List`1<FontFamily> families;
    private List`1<String[]> localizedFamilyNames;
    public static List`1<String[]> LocalizedFamilyNames { get; private set; }
    public static List`1<string> PrivateFontPathList { get; private set; }
    public static List`1<Byte[]> PrivateFontDataList { get; private set; }
    private static SvgFontManager();
    [CompilerGeneratedAttribute]
public static List`1<String[]> get_LocalizedFamilyNames();
    [CompilerGeneratedAttribute]
private static void set_LocalizedFamilyNames(List`1<String[]> value);
    [CompilerGeneratedAttribute]
public static List`1<string> get_PrivateFontPathList();
    [CompilerGeneratedAttribute]
private static void set_PrivateFontPathList(List`1<string> value);
    [CompilerGeneratedAttribute]
public static List`1<Byte[]> get_PrivateFontDataList();
    [CompilerGeneratedAttribute]
private static void set_PrivateFontDataList(List`1<Byte[]> value);
    public FontFamily FindFont(string name);
    public sealed virtual void Dispose();
}
[TypeConverterAttribute("External.Svg.SvgFontStretchConverter")]
internal enum External.Svg.SvgFontStretch : Enum {
    public int value__;
    public static SvgFontStretch Normal;
    public static SvgFontStretch Wider;
    public static SvgFontStretch Narrower;
    public static SvgFontStretch UltraCondensed;
    public static SvgFontStretch ExtraCondensed;
    public static SvgFontStretch Condensed;
    public static SvgFontStretch SemiCondensed;
    public static SvgFontStretch SemiExpanded;
    public static SvgFontStretch Expanded;
    public static SvgFontStretch ExtraExpanded;
    public static SvgFontStretch UltraExpanded;
    public static SvgFontStretch Inherit;
}
internal class External.Svg.SvgFontStretchConverter : EnumBaseConverter`1<SvgFontStretch> {
}
[TypeConverterAttribute("External.Svg.SvgFontStyleConverter")]
[FlagsAttribute]
internal enum External.Svg.SvgFontStyle : Enum {
    public int value__;
    public static SvgFontStyle Inherit;
    public static SvgFontStyle Normal;
    public static SvgFontStyle Oblique;
    public static SvgFontStyle Italic;
    public static SvgFontStyle All;
}
internal class External.Svg.SvgFontStyleConverter : EnumBaseConverter`1<SvgFontStyle> {
}
[TypeConverterAttribute("External.Svg.SvgFontVariantConverter")]
internal enum External.Svg.SvgFontVariant : Enum {
    public int value__;
    public static SvgFontVariant Normal;
    public static SvgFontVariant SmallCaps;
    public static SvgFontVariant Inherit;
}
internal class External.Svg.SvgFontVariantConverter : EnumBaseConverter`1<SvgFontVariant> {
}
[TypeConverterAttribute("External.Svg.SvgFontWeightConverter")]
[FlagsAttribute]
internal enum External.Svg.SvgFontWeight : Enum {
    public int value__;
    public static SvgFontWeight Inherit;
    public static SvgFontWeight Normal;
    public static SvgFontWeight Bold;
    public static SvgFontWeight Bolder;
    public static SvgFontWeight Lighter;
    public static SvgFontWeight W100;
    public static SvgFontWeight W200;
    public static SvgFontWeight W300;
    public static SvgFontWeight W400;
    public static SvgFontWeight W500;
    public static SvgFontWeight W600;
    public static SvgFontWeight W700;
    public static SvgFontWeight W800;
    public static SvgFontWeight W900;
    public static SvgFontWeight All;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgFontWeightConverter : EnumBaseConverter`1<SvgFontWeight> {
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
    public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("foreignObject")]
internal class External.Svg.SvgForeignObject : SvgVisualElement {
    public RectangleF Bounds { get; }
    protected bool Renderable { get; }
    public virtual GraphicsPath Path(ISvgRenderer renderer);
    public virtual RectangleF get_Bounds();
    protected virtual bool get_Renderable();
    public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("svg")]
internal class External.Svg.SvgFragment : SvgElement {
    private int _boundsRecursionCount;
    private SvgUnit _x;
    private SvgUnit _y;
    public static Uri Namespace;
    private PointF External.Svg.ISvgBoundable.Location { get; }
    private SizeF External.Svg.ISvgBoundable.Size { get; }
    private RectangleF External.Svg.ISvgBoundable.Bounds { get; }
    [SvgAttributeAttribute("x")]
public SvgUnit X { get; public set; }
    [SvgAttributeAttribute("y")]
public SvgUnit Y { get; public set; }
    [SvgAttributeAttribute("width")]
public SvgUnit Width { get; public set; }
    [SvgAttributeAttribute("height")]
public SvgUnit Height { get; public set; }
    [SvgAttributeAttribute("overflow")]
public SvgOverflow Overflow { get; public set; }
    [SvgAttributeAttribute("viewBox")]
public SvgViewBox ViewBox { get; public set; }
    [SvgAttributeAttribute("preserveAspectRatio")]
public SvgAspectRatio AspectRatio { get; public set; }
    [SvgAttributeAttribute("font-size")]
public SvgUnit FontSize { get; public set; }
    [SvgAttributeAttribute("font-family")]
public string FontFamily { get; public set; }
    public XmlSpaceHandling SpaceHandling { get; public set; }
    public GraphicsPath Path { get; }
    public RectangleF Bounds { get; }
    private static SvgFragment();
    private sealed virtual override PointF External.Svg.ISvgBoundable.get_Location();
    private sealed virtual override SizeF External.Svg.ISvgBoundable.get_Size();
    private sealed virtual override RectangleF External.Svg.ISvgBoundable.get_Bounds();
    public SvgUnit get_X();
    public void set_X(SvgUnit value);
    public SvgUnit get_Y();
    public void set_Y(SvgUnit value);
    public SvgUnit get_Width();
    public void set_Width(SvgUnit value);
    public SvgUnit get_Height();
    public void set_Height(SvgUnit value);
    public virtual SvgOverflow get_Overflow();
    public virtual void set_Overflow(SvgOverflow value);
    public sealed virtual SvgViewBox get_ViewBox();
    public sealed virtual void set_ViewBox(SvgViewBox value);
    public sealed virtual SvgAspectRatio get_AspectRatio();
    public sealed virtual void set_AspectRatio(SvgAspectRatio value);
    public virtual SvgUnit get_FontSize();
    public virtual void set_FontSize(SvgUnit value);
    public virtual string get_FontFamily();
    public virtual void set_FontFamily(string value);
    public virtual XmlSpaceHandling get_SpaceHandling();
    public virtual void set_SpaceHandling(XmlSpaceHandling value);
    protected internal virtual bool PushTransforms(ISvgRenderer renderer);
    protected virtual void Render(ISvgRenderer renderer);
    public GraphicsPath get_Path();
    public RectangleF get_Bounds();
    public SizeF GetDimensions();
    public virtual SvgElement DeepCopy();
    public virtual SvgElement DeepCopy();
}
internal class External.Svg.SvgGdiPlusCannotBeLoadedException : Exception {
    [NullableContextAttribute("1")]
public SvgGdiPlusCannotBeLoadedException(Exception inner);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("glyph")]
internal class External.Svg.SvgGlyph : SvgPathBasedElement {
    private GraphicsPath _path;
    [SvgAttributeAttribute("d")]
public SvgPathSegmentList PathData { get; public set; }
    [SvgAttributeAttribute("glyph-name")]
public string GlyphName { get; public set; }
    [SvgAttributeAttribute("horiz-adv-x")]
public float HorizAdvX { get; public set; }
    [SvgAttributeAttribute("unicode")]
public string Unicode { get; public set; }
    [SvgAttributeAttribute("vert-adv-y")]
public float VertAdvY { get; public set; }
    [SvgAttributeAttribute("vert-origin-x")]
public float VertOriginX { get; public set; }
    [SvgAttributeAttribute("vert-origin-y")]
public float VertOriginY { get; public set; }
    public SvgPathSegmentList get_PathData();
    public void set_PathData(SvgPathSegmentList value);
    public virtual string get_GlyphName();
    public virtual void set_GlyphName(string value);
    public float get_HorizAdvX();
    public void set_HorizAdvX(float value);
    public string get_Unicode();
    public void set_Unicode(string value);
    public float get_VertAdvY();
    public void set_VertAdvY(float value);
    public float get_VertOriginX();
    public void set_VertOriginX(float value);
    public float get_VertOriginY();
    public void set_VertOriginY(float value);
    public virtual GraphicsPath Path(ISvgRenderer renderer);
    public sealed virtual void OnPathUpdated();
    public virtual SvgElement DeepCopy();
    public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class External.Svg.SvgGradientServer : SvgPaintServer {
    [CompilerGeneratedAttribute]
private List`1<SvgGradientStop> <Stops>k__BackingField;
    public List`1<SvgGradientStop> Stops { get; private set; }
    [SvgAttributeAttribute("spreadMethod")]
public SvgGradientSpreadMethod SpreadMethod { get; public set; }
    [SvgAttributeAttribute("gradientUnits")]
public SvgCoordinateUnits GradientUnits { get; public set; }
    [SvgAttributeAttribute("href", "http://www.w3.org/1999/xlink")]
public SvgDeferredPaintServer InheritGradient { get; public set; }
    [SvgAttributeAttribute("gradientTransform")]
public SvgTransformCollection GradientTransform { get; public set; }
    [TypeConverterAttribute("External.Svg.SvgPaintServerFactory")]
[SvgAttributeAttribute("stop-color")]
public SvgPaintServer StopColor { get; public set; }
    [SvgAttributeAttribute("stop-opacity")]
public float StopOpacity { get; public set; }
    protected Matrix EffectiveGradientTransform { get; }
    protected virtual void AddElement(SvgElement child, int index);
    protected virtual void RemoveElement(SvgElement child);
    [CompilerGeneratedAttribute]
public List`1<SvgGradientStop> get_Stops();
    [CompilerGeneratedAttribute]
private void set_Stops(List`1<SvgGradientStop> value);
    public SvgGradientSpreadMethod get_SpreadMethod();
    public void set_SpreadMethod(SvgGradientSpreadMethod value);
    public SvgCoordinateUnits get_GradientUnits();
    public void set_GradientUnits(SvgCoordinateUnits value);
    public SvgDeferredPaintServer get_InheritGradient();
    public void set_InheritGradient(SvgDeferredPaintServer value);
    public SvgTransformCollection get_GradientTransform();
    public void set_GradientTransform(SvgTransformCollection value);
    public SvgPaintServer get_StopColor();
    public void set_StopColor(SvgPaintServer value);
    public float get_StopOpacity();
    public void set_StopOpacity(float value);
    protected Matrix get_EffectiveGradientTransform();
    protected ColorBlend GetColorBlend(ISvgRenderer renderer, float opacity, bool radial);
    protected void LoadStops(SvgVisualElement parent);
    protected static double CalculateDistance(PointF first, PointF second);
    protected static float CalculateLength(PointF vector);
}
[TypeConverterAttribute("External.Svg.SvgGradientSpreadMethodConverter")]
internal enum External.Svg.SvgGradientSpreadMethod : Enum {
    public int value__;
    public static SvgGradientSpreadMethod Pad;
    public static SvgGradientSpreadMethod Reflect;
    public static SvgGradientSpreadMethod Repeat;
}
internal class External.Svg.SvgGradientSpreadMethodConverter : EnumBaseConverter`1<SvgGradientSpreadMethod> {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("stop")]
internal class External.Svg.SvgGradientStop : SvgElement {
    private SvgUnit _offset;
    [SvgAttributeAttribute("offset")]
public SvgUnit Offset { get; public set; }
    [TypeConverterAttribute("External.Svg.SvgPaintServerFactory")]
[SvgAttributeAttribute("stop-color")]
public SvgPaintServer StopColor { get; public set; }
    [SvgAttributeAttribute("stop-opacity")]
public float StopOpacity { get; public set; }
    public SvgGradientStop(SvgUnit offset, Color colour);
    public SvgUnit get_Offset();
    public void set_Offset(SvgUnit value);
    public SvgPaintServer get_StopColor();
    public void set_StopColor(SvgPaintServer value);
    public float get_StopOpacity();
    public void set_StopOpacity(float value);
    public Color GetColor(SvgElement parent);
    public virtual SvgElement DeepCopy();
    public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("g")]
internal class External.Svg.SvgGroup : SvgMarkerElement {
    public RectangleF Bounds { get; }
    protected bool Renderable { get; }
    public virtual GraphicsPath Path(ISvgRenderer renderer);
    public virtual RectangleF get_Bounds();
    protected virtual bool get_Renderable();
    public virtual SvgElement DeepCopy();
}
[SvgElementAttribute("hkern")]
internal class External.Svg.SvgHorizontalKern : SvgKern {
    [NullableContextAttribute("1")]
public virtual SvgElement DeepCopy();
}
internal class External.Svg.SvgIDException : FormatException {
    [NullableContextAttribute("1")]
public SvgIDException(string message);
}
internal class External.Svg.SvgIDExistsException : SvgIDException {
    [NullableContextAttribute("1")]
public SvgIDExistsException(string message);
}
internal class External.Svg.SvgIDWrongFormatException : SvgIDException {
    [NullableContextAttribute("1")]
public SvgIDWrongFormatException(string message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("image")]
internal class External.Svg.SvgImage : SvgVisualElement {
    private static string MimeTypeSvg;
    private GraphicsPath _path;
    private bool _gettingBounds;
    public SvgPoint Location { get; }
    [SvgAttributeAttribute("preserveAspectRatio")]
public SvgAspectRatio AspectRatio { get; public set; }
    [SvgAttributeAttribute("x")]
public SvgUnit X { get; public set; }
    [SvgAttributeAttribute("y")]
public SvgUnit Y { get; public set; }
    [SvgAttributeAttribute("width")]
public SvgUnit Width { get; public set; }
    [SvgAttributeAttribute("height")]
public SvgUnit Height { get; public set; }
    [SvgAttributeAttribute("href", "http://www.w3.org/1999/xlink")]
public string Href { get; public set; }
    public RectangleF Bounds { get; }
    public SvgPoint get_Location();
    public SvgAspectRatio get_AspectRatio();
    public void set_AspectRatio(SvgAspectRatio value);
    public virtual SvgUnit get_X();
    public virtual void set_X(SvgUnit value);
    public virtual SvgUnit get_Y();
    public virtual void set_Y(SvgUnit value);
    public virtual SvgUnit get_Width();
    public virtual void set_Width(SvgUnit value);
    public virtual SvgUnit get_Height();
    public virtual void set_Height(SvgUnit value);
    public virtual string get_Href();
    public virtual void set_Href(string value);
    public virtual RectangleF get_Bounds();
    public virtual GraphicsPath Path(ISvgRenderer renderer);
    protected virtual void Render(ISvgRenderer renderer);
    public object GetImage();
    public object GetImage(string uriString);
    private object GetImageFromDataUri(string uriString);
    private SvgDocument LoadSvg(Stream stream, Uri baseUri);
    public virtual SvgElement DeepCopy();
}
[TypeConverterAttribute("External.Svg.SvgImageRenderingConverter")]
internal enum External.Svg.SvgImageRendering : Enum {
    public int value__;
    public static SvgImageRendering Inherit;
    public static SvgImageRendering Auto;
    public static SvgImageRendering OptimizeSpeed;
    public static SvgImageRendering OptimizeQuality;
}
internal class External.Svg.SvgImageRenderingConverter : EnumBaseConverter`1<SvgImageRendering> {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class External.Svg.SvgKern : SvgElement {
    [SvgAttributeAttribute("g1")]
public string Glyph1 { get; public set; }
    [SvgAttributeAttribute("g2")]
public string Glyph2 { get; public set; }
    [SvgAttributeAttribute("u1")]
public string Unicode1 { get; public set; }
    [SvgAttributeAttribute("u2")]
public string Unicode2 { get; public set; }
    [SvgAttributeAttribute("k")]
public float Kerning { get; public set; }
    public string get_Glyph1();
    public void set_Glyph1(string value);
    public string get_Glyph2();
    public void set_Glyph2(string value);
    public string get_Unicode1();
    public void set_Unicode1(string value);
    public string get_Unicode2();
    public void set_Unicode2(string value);
    public float get_Kerning();
    public void set_Kerning(float value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("line")]
internal class External.Svg.SvgLine : SvgMarkerElement {
    private SvgUnit _startX;
    private SvgUnit _startY;
    private SvgUnit _endX;
    private SvgUnit _endY;
    private GraphicsPath _path;
    [SvgAttributeAttribute("x1")]
public SvgUnit StartX { get; public set; }
    [SvgAttributeAttribute("y1")]
public SvgUnit StartY { get; public set; }
    [SvgAttributeAttribute("x2")]
public SvgUnit EndX { get; public set; }
    [SvgAttributeAttribute("y2")]
public SvgUnit EndY { get; public set; }
    public SvgPaintServer Fill { get; public set; }
    public SvgUnit get_StartX();
    public void set_StartX(SvgUnit value);
    public SvgUnit get_StartY();
    public void set_StartY(SvgUnit value);
    public SvgUnit get_EndX();
    public void set_EndX(SvgUnit value);
    public SvgUnit get_EndY();
    public void set_EndY(SvgUnit value);
    public virtual SvgPaintServer get_Fill();
    public virtual void set_Fill(SvgPaintServer value);
    public virtual GraphicsPath Path(ISvgRenderer renderer);
    public virtual SvgElement DeepCopy();
    public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("linearGradient")]
internal class External.Svg.SvgLinearGradientServer : SvgGradientServer {
    [SvgAttributeAttribute("x1")]
public SvgUnit X1 { get; public set; }
    [SvgAttributeAttribute("y1")]
public SvgUnit Y1 { get; public set; }
    [SvgAttributeAttribute("x2")]
public SvgUnit X2 { get; public set; }
    [SvgAttributeAttribute("y2")]
public SvgUnit Y2 { get; public set; }
    public SvgUnit get_X1();
    public void set_X1(SvgUnit value);
    public SvgUnit get_Y1();
    public void set_Y1(SvgUnit value);
    public SvgUnit get_X2();
    public void set_X2(SvgUnit value);
    public SvgUnit get_Y2();
    public void set_Y2(SvgUnit value);
    public virtual Brush GetBrush(SvgVisualElement renderingElement, ISvgRenderer renderer, float opacity, bool forStroke);
    private SvgUnit NormalizeUnit(SvgUnit orig);
    private LinePoints PointsToMove(ISvgBoundable boundable, PointF specifiedStart, PointF specifiedEnd);
    private GradientPoints ExpandGradient(ISvgBoundable boundable, PointF specifiedStart, PointF specifiedEnd);
    private IList`1<PointF> CandidateIntersections(RectangleF bounds, PointF p1, PointF p2);
    private ColorBlend CalculateColorBlend(ISvgRenderer renderer, float opacity, PointF specifiedStart, PointF effectiveStart, PointF specifiedEnd, PointF effectiveEnd);
    private static PointF CalculateClosestIntersectionPoint(PointF sourcePoint, IList`1<PointF> targetPoints);
    private static PointF MovePointAlongVector(PointF start, PointF unitVector, float distance);
    public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("marker")]
internal class External.Svg.SvgMarker : SvgPathBasedElement {
    private SvgVisualElement _markerElement;
    private SvgVisualElement MarkerElement { get; }
    [SvgAttributeAttribute("refX")]
public SvgUnit RefX { get; public set; }
    [SvgAttributeAttribute("refY")]
public SvgUnit RefY { get; public set; }
    [SvgAttributeAttribute("orient")]
public SvgOrient Orient { get; public set; }
    [SvgAttributeAttribute("overflow")]
public SvgOverflow Overflow { get; public set; }
    [SvgAttributeAttribute("viewBox")]
public SvgViewBox ViewBox { get; public set; }
    [SvgAttributeAttribute("preserveAspectRatio")]
public SvgAspectRatio AspectRatio { get; public set; }
    [SvgAttributeAttribute("markerWidth")]
public SvgUnit MarkerWidth { get; public set; }
    [SvgAttributeAttribute("markerHeight")]
public SvgUnit MarkerHeight { get; public set; }
    [SvgAttributeAttribute("markerUnits")]
public SvgMarkerUnits MarkerUnits { get; public set; }
    public SvgPaintServer Fill { get; }
    public SvgPaintServer Stroke { get; }
    private SvgVisualElement get_MarkerElement();
    public virtual SvgUnit get_RefX();
    public virtual void set_RefX(SvgUnit value);
    public virtual SvgUnit get_RefY();
    public virtual void set_RefY(SvgUnit value);
    public virtual SvgOrient get_Orient();
    public virtual void set_Orient(SvgOrient value);
    public virtual SvgOverflow get_Overflow();
    public virtual void set_Overflow(SvgOverflow value);
    public virtual SvgViewBox get_ViewBox();
    public virtual void set_ViewBox(SvgViewBox value);
    public virtual SvgAspectRatio get_AspectRatio();
    public virtual void set_AspectRatio(SvgAspectRatio value);
    public virtual SvgUnit get_MarkerWidth();
    public virtual void set_MarkerWidth(SvgUnit value);
    public virtual SvgUnit get_MarkerHeight();
    public virtual void set_MarkerHeight(SvgUnit value);
    public virtual SvgMarkerUnits get_MarkerUnits();
    public virtual void set_MarkerUnits(SvgMarkerUnits value);
    public virtual SvgPaintServer get_Fill();
    public virtual SvgPaintServer get_Stroke();
    public virtual GraphicsPath Path(ISvgRenderer renderer);
    public virtual SvgElement DeepCopy();
    public void RenderMarker(ISvgRenderer pRenderer, SvgVisualElement pOwner, PointF pRefPoint, PointF pMarkerPoint1, PointF pMarkerPoint2, bool isStartMarker);
    public void RenderMarker(ISvgRenderer pRenderer, SvgVisualElement pOwner, PointF pRefPoint, PointF pMarkerPoint1, PointF pMarkerPoint2, PointF pMarkerPoint3);
    private void RenderPart2(float fAngle, ISvgRenderer pRenderer, SvgVisualElement pOwner, PointF pMarkerPoint);
    private Pen CreatePen(SvgVisualElement pPath, ISvgRenderer renderer);
    private GraphicsPath GetClone(SvgVisualElement pPath, ISvgRenderer renderer);
    private float AdjustForViewBoxWidth(float fWidth);
    private float AdjustForViewBoxHeight(float fHeight);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class External.Svg.SvgMarkerElement : SvgPathBasedElement {
    [SvgAttributeAttribute("marker-end")]
public Uri MarkerEnd { get; public set; }
    [SvgAttributeAttribute("marker-mid")]
public Uri MarkerMid { get; public set; }
    [SvgAttributeAttribute("marker-start")]
public Uri MarkerStart { get; public set; }
    public Uri get_MarkerEnd();
    public void set_MarkerEnd(Uri value);
    public Uri get_MarkerMid();
    public void set_MarkerMid(Uri value);
    public Uri get_MarkerStart();
    public void set_MarkerStart(Uri value);
    protected internal virtual bool RenderStroke(ISvgRenderer renderer);
}
internal class External.Svg.SvgMarkerUnitsConverter : EnumBaseConverter`1<SvgMarkerUnits> {
}
[SvgElementAttribute("mask")]
internal class External.Svg.SvgMask : SvgElement {
    [SvgAttributeAttribute("maskUnits")]
public SvgCoordinateUnits MaskUnits { get; public set; }
    [SvgAttributeAttribute("maskContentUnits")]
public SvgCoordinateUnits MaskContentUnits { get; public set; }
    [SvgAttributeAttribute("x")]
public SvgUnit X { get; public set; }
    [SvgAttributeAttribute("y")]
public SvgUnit Y { get; public set; }
    [SvgAttributeAttribute("width")]
public SvgUnit Width { get; public set; }
    [SvgAttributeAttribute("height")]
public SvgUnit Height { get; public set; }
    public SvgCoordinateUnits get_MaskUnits();
    public void set_MaskUnits(SvgCoordinateUnits value);
    public SvgCoordinateUnits get_MaskContentUnits();
    public void set_MaskContentUnits(SvgCoordinateUnits value);
    public SvgUnit get_X();
    public void set_X(SvgUnit value);
    public SvgUnit get_Y();
    public void set_Y(SvgUnit value);
    public SvgUnit get_Width();
    public void set_Width(SvgUnit value);
    public SvgUnit get_Height();
    public void set_Height(SvgUnit value);
    [NullableContextAttribute("1")]
public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("missing-glyph")]
internal class External.Svg.SvgMissingGlyph : SvgGlyph {
    [SvgAttributeAttribute("glyph-name")]
public string GlyphName { get; public set; }
    public virtual string get_GlyphName();
    public virtual void set_GlyphName(string value);
    public virtual SvgElement DeepCopy();
}
internal class External.Svg.SvgMorphologyOperatorConverter : EnumBaseConverter`1<SvgMorphologyOperator> {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgNodeReader : XmlNodeReader {
    private Dictionary`2<string, string> _entities;
    private string _value;
    private bool _customValue;
    private string _localName;
    public string Value { get; }
    public string LocalName { get; }
    public SvgNodeReader(XmlNode node, Dictionary`2<string, string> entities);
    public virtual string get_Value();
    public virtual string get_LocalName();
    public virtual bool MoveToNextAttribute();
    public virtual bool Read();
    private void ParseEntities();
    public virtual void ResolveEntity();
}
[TypeConverterAttribute("External.Svg.SvgNumberCollectionConverter")]
internal class External.Svg.SvgNumberCollection : List`1<float> {
    [NullableContextAttribute("1")]
public sealed virtual object Clone();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
internal class External.Svg.SvgNumberCollectionConverter : TypeConverter {
    [NullableContextAttribute("1")]
public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
}
[TypeConverterAttribute("External.Svg.DataTypes.SvgOrientConverter")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgOrient : object {
    private bool _isAuto;
    private float _angle;
    [CompilerGeneratedAttribute]
private bool <IsAutoStartReverse>k__BackingField;
    public float Angle { get; public set; }
    public bool IsAuto { get; public set; }
    public bool IsAutoStartReverse { get; public set; }
    public SvgOrient(bool isAuto);
    public SvgOrient(bool isAuto, bool isAutoStartReverse);
    public SvgOrient(float angle);
    public float get_Angle();
    public void set_Angle(float value);
    public bool get_IsAuto();
    public void set_IsAuto(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsAutoStartReverse();
    [CompilerGeneratedAttribute]
public void set_IsAutoStartReverse(bool value);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    public static SvgOrient op_Implicit(float value);
}
[TypeConverterAttribute("External.Svg.SvgOverflowConverter")]
internal enum External.Svg.SvgOverflow : Enum {
    public int value__;
    public static SvgOverflow Hidden;
    public static SvgOverflow Inherit;
    public static SvgOverflow Auto;
    public static SvgOverflow Visible;
    public static SvgOverflow Scroll;
}
internal class External.Svg.SvgOverflowConverter : EnumBaseConverter`1<SvgOverflow> {
}
[TypeConverterAttribute("External.Svg.SvgPaintServerFactory")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class External.Svg.SvgPaintServer : SvgElement {
    [CompilerGeneratedAttribute]
private Func`1<SvgPaintServer> <GetCallback>k__BackingField;
    public static SvgPaintServer None;
    public static SvgPaintServer Inherit;
    public static SvgPaintServer NotSet;
    public Func`1<SvgPaintServer> GetCallback { get; public set; }
    private static SvgPaintServer();
    [CompilerGeneratedAttribute]
public Func`1<SvgPaintServer> get_GetCallback();
    [CompilerGeneratedAttribute]
public void set_GetCallback(Func`1<SvgPaintServer> value);
    protected virtual void Render(ISvgRenderer renderer);
    public abstract virtual Brush GetBrush(SvgVisualElement styleOwner, ISvgRenderer renderer, float opacity, bool forStroke);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgPaintServerFactory : TypeConverter {
    private static SvgColourConverter _colourConverter;
    private static SvgPaintServerFactory();
    public static SvgPaintServer Create(string value, SvgDocument document);
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
    public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType);
    public virtual bool CanConvertTo(ITypeDescriptorContext context, Type destinationType);
    public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("path")]
internal class External.Svg.SvgPath : SvgMarkerElement {
    private GraphicsPath _path;
    [SvgAttributeAttribute("d")]
public SvgPathSegmentList PathData { get; public set; }
    [SvgAttributeAttribute("pathLength")]
public float PathLength { get; public set; }
    public RectangleF Bounds { get; }
    public SvgPathSegmentList get_PathData();
    public void set_PathData(SvgPathSegmentList value);
    public float get_PathLength();
    public void set_PathLength(float value);
    public virtual GraphicsPath Path(ISvgRenderer renderer);
    public sealed virtual void OnPathUpdated();
    public virtual RectangleF get_Bounds();
    public virtual SvgElement DeepCopy();
    public virtual SvgElement DeepCopy();
}
internal abstract class External.Svg.SvgPathBasedElement : SvgVisualElement {
    public RectangleF Bounds { get; }
    public virtual RectangleF get_Bounds();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgPathBuilder : TypeConverter {
    public static SvgPathSegmentList Parse(string path);
    private static void CreatePathSegment(char command, SvgPathSegmentList segments, CoordinateParser parser);
    private static PointF Reflect(PointF point, PointF mirror);
    private static PointF ToAbsolute(float x, float y, SvgPathSegmentList segments, bool isRelativeBoth);
    private static PointF ToAbsolute(float x, float y, SvgPathSegmentList segments, bool isRelativeX, bool isRelativeY);
    [IteratorStateMachineAttribute("External.Svg.SvgPathBuilder/<SplitCommands>d__5")]
private static IEnumerable`1<string> SplitCommands(string path);
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("pattern")]
internal class External.Svg.SvgPatternServer : SvgPaintServer {
    private SvgUnit _x;
    private SvgUnit _y;
    private SvgUnit _width;
    private SvgUnit _height;
    private Nullable`1<SvgCoordinateUnits> _patternUnits;
    private Nullable`1<SvgCoordinateUnits> _patternContentUnits;
    private SvgViewBox _viewBox;
    [SvgAttributeAttribute("x")]
public SvgUnit X { get; public set; }
    [SvgAttributeAttribute("y")]
public SvgUnit Y { get; public set; }
    [SvgAttributeAttribute("width")]
public SvgUnit Width { get; public set; }
    [SvgAttributeAttribute("height")]
public SvgUnit Height { get; public set; }
    [SvgAttributeAttribute("patternUnits")]
public SvgCoordinateUnits PatternUnits { get; public set; }
    [SvgAttributeAttribute("patternContentUnits")]
public SvgCoordinateUnits PatternContentUnits { get; public set; }
    [SvgAttributeAttribute("viewBox")]
public SvgViewBox ViewBox { get; public set; }
    [SvgAttributeAttribute("href", "http://www.w3.org/1999/xlink")]
public SvgDeferredPaintServer InheritGradient { get; public set; }
    [SvgAttributeAttribute("overflow")]
public SvgOverflow Overflow { get; public set; }
    [SvgAttributeAttribute("preserveAspectRatio")]
public SvgAspectRatio AspectRatio { get; public set; }
    [SvgAttributeAttribute("patternTransform")]
public SvgTransformCollection PatternTransform { get; public set; }
    private Matrix EffectivePatternTransform { get; }
    public SvgUnit get_X();
    public void set_X(SvgUnit value);
    public SvgUnit get_Y();
    public void set_Y(SvgUnit value);
    public SvgUnit get_Width();
    public void set_Width(SvgUnit value);
    public SvgUnit get_Height();
    public void set_Height(SvgUnit value);
    public SvgCoordinateUnits get_PatternUnits();
    public void set_PatternUnits(SvgCoordinateUnits value);
    public SvgCoordinateUnits get_PatternContentUnits();
    public void set_PatternContentUnits(SvgCoordinateUnits value);
    public sealed virtual SvgViewBox get_ViewBox();
    public sealed virtual void set_ViewBox(SvgViewBox value);
    public SvgDeferredPaintServer get_InheritGradient();
    public void set_InheritGradient(SvgDeferredPaintServer value);
    public sealed virtual SvgOverflow get_Overflow();
    public sealed virtual void set_Overflow(SvgOverflow value);
    public sealed virtual SvgAspectRatio get_AspectRatio();
    public sealed virtual void set_AspectRatio(SvgAspectRatio value);
    public SvgTransformCollection get_PatternTransform();
    public void set_PatternTransform(SvgTransformCollection value);
    private Matrix get_EffectivePatternTransform();
    public virtual Brush GetBrush(SvgVisualElement renderingElement, ISvgRenderer renderer, float opacity, bool forStroke);
    public virtual SvgElement DeepCopy();
    public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgPoint : ValueType {
    private SvgUnit x;
    private SvgUnit y;
    public SvgUnit X { get; public set; }
    public SvgUnit Y { get; public set; }
    public SvgPoint(string x, string y);
    public SvgPoint(SvgUnit x, SvgUnit y);
    public SvgUnit get_X();
    public void set_X(SvgUnit value);
    public SvgUnit get_Y();
    public void set_Y(SvgUnit value);
    public PointF ToDeviceValue(ISvgRenderer renderer, SvgElement owner);
    public bool IsEmpty();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[TypeConverterAttribute("External.Svg.SvgPointCollectionConverter")]
internal class External.Svg.SvgPointCollection : List`1<SvgUnit> {
    [NullableContextAttribute("1")]
public sealed virtual object Clone();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
internal class External.Svg.SvgPointCollectionConverter : TypeConverter {
    [NullableContextAttribute("1")]
public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("polygon")]
internal class External.Svg.SvgPolygon : SvgMarkerElement {
    private GraphicsPath _path;
    [SvgAttributeAttribute("points")]
public SvgPointCollection Points { get; public set; }
    public SvgPointCollection get_Points();
    public void set_Points(SvgPointCollection value);
    public virtual GraphicsPath Path(ISvgRenderer renderer);
    public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("polyline")]
internal class External.Svg.SvgPolyline : SvgPolygon {
    private GraphicsPath _Path;
    public virtual GraphicsPath Path(ISvgRenderer renderer);
    public virtual SvgElement DeepCopy();
}
[TypeConverterAttribute("External.Svg.DataTypes.SvgPreserveAspectRatioConverter")]
internal enum External.Svg.SvgPreserveAspectRatio : Enum {
    public int value__;
    public static SvgPreserveAspectRatio xMidYMid;
    public static SvgPreserveAspectRatio none;
    public static SvgPreserveAspectRatio xMinYMin;
    public static SvgPreserveAspectRatio xMidYMin;
    public static SvgPreserveAspectRatio xMaxYMin;
    public static SvgPreserveAspectRatio xMinYMid;
    public static SvgPreserveAspectRatio xMaxYMid;
    public static SvgPreserveAspectRatio xMinYMax;
    public static SvgPreserveAspectRatio xMidYMax;
    public static SvgPreserveAspectRatio xMaxYMax;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("radialGradient")]
internal class External.Svg.SvgRadialGradientServer : SvgGradientServer {
    private object _lockObj;
    [SvgAttributeAttribute("cx")]
public SvgUnit CenterX { get; public set; }
    [SvgAttributeAttribute("cy")]
public SvgUnit CenterY { get; public set; }
    [SvgAttributeAttribute("r")]
public SvgUnit Radius { get; public set; }
    [SvgAttributeAttribute("fx")]
public SvgUnit FocalX { get; public set; }
    [SvgAttributeAttribute("fy")]
public SvgUnit FocalY { get; public set; }
    public SvgUnit get_CenterX();
    public void set_CenterX(SvgUnit value);
    public SvgUnit get_CenterY();
    public void set_CenterY(SvgUnit value);
    public SvgUnit get_Radius();
    public void set_Radius(SvgUnit value);
    public SvgUnit get_FocalX();
    public void set_FocalX(SvgUnit value);
    public SvgUnit get_FocalY();
    public void set_FocalY(SvgUnit value);
    private SvgUnit NormalizeUnit(SvgUnit orig);
    public virtual Brush GetBrush(SvgVisualElement renderingElement, ISvgRenderer renderer, float opacity, bool forStroke);
    private float CalcScale(RectangleF bounds, GraphicsPath path, Graphics graphics);
    [IteratorStateMachineAttribute("External.Svg.SvgRadialGradientServer/<GetDifference>d__19")]
private static IEnumerable`1<GraphicsPath> GetDifference(RectangleF subject, GraphicsPath clip);
    private static GraphicsPath CreateGraphicsPath(PointF origin, PointF centerPoint, float effectiveRadius);
    private ColorBlend CalculateColorBlend(ISvgRenderer renderer, float opacity, float scale, Single& outScale);
    public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("rect")]
internal class External.Svg.SvgRectangle : SvgPathBasedElement {
    private SvgUnit _x;
    private SvgUnit _y;
    private SvgUnit _width;
    private SvgUnit _height;
    private SvgUnit _cornerRadiusX;
    private SvgUnit _cornerRadiusY;
    private GraphicsPath _path;
    public SvgPoint Location { get; }
    [SvgAttributeAttribute("x")]
public SvgUnit X { get; public set; }
    [SvgAttributeAttribute("y")]
public SvgUnit Y { get; public set; }
    [SvgAttributeAttribute("width")]
public SvgUnit Width { get; public set; }
    [SvgAttributeAttribute("height")]
public SvgUnit Height { get; public set; }
    [SvgAttributeAttribute("rx")]
public SvgUnit CornerRadiusX { get; public set; }
    [SvgAttributeAttribute("ry")]
public SvgUnit CornerRadiusY { get; public set; }
    protected bool RequiresSmoothRendering { get; }
    public SvgPoint get_Location();
    public SvgUnit get_X();
    public void set_X(SvgUnit value);
    public SvgUnit get_Y();
    public void set_Y(SvgUnit value);
    public SvgUnit get_Width();
    public void set_Width(SvgUnit value);
    public SvgUnit get_Height();
    public void set_Height(SvgUnit value);
    public SvgUnit get_CornerRadiusX();
    public void set_CornerRadiusX(SvgUnit value);
    public SvgUnit get_CornerRadiusY();
    public void set_CornerRadiusY(SvgUnit value);
    protected virtual bool get_RequiresSmoothRendering();
    public virtual GraphicsPath Path(ISvgRenderer renderer);
    protected virtual void Render(ISvgRenderer renderer);
    public virtual SvgElement DeepCopy();
    public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgRenderer : object {
    private Graphics _innerGraphics;
    private bool _disposable;
    private Image _image;
    private Stack`1<ISvgBoundable> _boundables;
    private Stack`1<GraphicsState> graphicsStates;
    public float DpiY { get; }
    public SmoothingMode SmoothingMode { get; public set; }
    private SvgRenderer(Graphics graphics, bool disposable);
    private SvgRenderer(Graphics graphics, Image image);
    public sealed virtual float get_DpiY();
    public sealed virtual SmoothingMode get_SmoothingMode();
    public sealed virtual void set_SmoothingMode(SmoothingMode value);
    public sealed virtual void SetBoundable(ISvgBoundable boundable);
    public sealed virtual ISvgBoundable GetBoundable();
    public sealed virtual ISvgBoundable PopBoundable();
    public sealed virtual void DrawImage(Image image, RectangleF destRect, RectangleF srcRect, GraphicsUnit graphicsUnit);
    public sealed virtual void DrawImage(Image image, RectangleF destRect, RectangleF srcRect, GraphicsUnit graphicsUnit, float opacity);
    public sealed virtual void DrawImageUnscaled(Image image, Point location);
    public sealed virtual void DrawPath(Pen pen, GraphicsPath path);
    public sealed virtual void FillPath(Brush brush, GraphicsPath path);
    public sealed virtual void IntersectClip(RectangleF rectangle);
    public sealed virtual void IntersectClip(GraphicsPath path);
    public sealed virtual void TransformPrepend(Matrix transform);
    public sealed virtual void TranslatePrepend(float dx, float dy);
    public sealed virtual void RotatePrepend(float fAngle);
    public sealed virtual void ScalePrepend(float sx, float sy);
    public sealed virtual void Push();
    public sealed virtual void Pop();
    public sealed virtual void Dispose();
    private sealed virtual override Graphics External.Svg.IGraphicsProvider.GetGraphics();
    private static Graphics CreateGraphics(Image image);
    public static ISvgRenderer FromImage(Image image);
    public static ISvgRenderer FromGraphics(Graphics graphics);
    public static ISvgRenderer FromNull();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("script")]
internal class External.Svg.SvgScript : SvgElement {
    public string Script { get; public set; }
    [SvgAttributeAttribute("type")]
public string ScriptType { get; public set; }
    [SvgAttributeAttribute("crossorigin")]
public string CrossOrigin { get; public set; }
    [SvgAttributeAttribute("href", "http://www.w3.org/1999/xlink")]
public string Href { get; public set; }
    public string get_Script();
    public void set_Script(string value);
    public string get_ScriptType();
    public void set_ScriptType(string value);
    public string get_CrossOrigin();
    public void set_CrossOrigin(string value);
    public string get_Href();
    public void set_Href(string value);
    public virtual SvgElement DeepCopy();
    protected virtual void WriteChildren(XmlTextWriter writer);
}
[TypeConverterAttribute("External.Svg.SvgShapeRenderingConverter")]
internal enum External.Svg.SvgShapeRendering : Enum {
    public int value__;
    public static SvgShapeRendering Inherit;
    public static SvgShapeRendering Auto;
    public static SvgShapeRendering OptimizeSpeed;
    public static SvgShapeRendering CrispEdges;
    public static SvgShapeRendering GeometricPrecision;
}
internal class External.Svg.SvgShapeRenderingConverter : EnumBaseConverter`1<SvgShapeRendering> {
}
internal class External.Svg.SvgStitchTypeConverter : EnumBaseConverter`1<SvgStitchType> {
}
internal class External.Svg.SvgStrokeDashArrayConverter : SvgUnitCollectionConverter {
    [NullableContextAttribute("1")]
public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
}
[TypeConverterAttribute("External.Svg.SvgStrokeLineCapConverter")]
internal enum External.Svg.SvgStrokeLineCap : Enum {
    public int value__;
    public static SvgStrokeLineCap Inherit;
    public static SvgStrokeLineCap Butt;
    public static SvgStrokeLineCap Round;
    public static SvgStrokeLineCap Square;
}
internal class External.Svg.SvgStrokeLineCapConverter : EnumBaseConverter`1<SvgStrokeLineCap> {
}
[TypeConverterAttribute("External.Svg.SvgStrokeLineJoinConverter")]
internal enum External.Svg.SvgStrokeLineJoin : Enum {
    public int value__;
    public static SvgStrokeLineJoin Inherit;
    public static SvgStrokeLineJoin Miter;
    public static SvgStrokeLineJoin Round;
    public static SvgStrokeLineJoin Bevel;
}
internal class External.Svg.SvgStrokeLineJoinConverter : EnumBaseConverter`1<SvgStrokeLineJoin> {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("switch")]
internal class External.Svg.SvgSwitch : SvgVisualElement {
    public RectangleF Bounds { get; }
    public virtual GraphicsPath Path(ISvgRenderer renderer);
    public virtual RectangleF get_Bounds();
    protected virtual void Render(ISvgRenderer renderer);
    public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("text")]
internal class External.Svg.SvgText : SvgTextBase {
    public SvgText(string text);
    public virtual SvgElement DeepCopy();
}
[TypeConverterAttribute("External.Svg.SvgTextAnchorConverter")]
internal enum External.Svg.SvgTextAnchor : Enum {
    public int value__;
    public static SvgTextAnchor Inherit;
    public static SvgTextAnchor Start;
    public static SvgTextAnchor Middle;
    public static SvgTextAnchor End;
}
internal class External.Svg.SvgTextAnchorConverter : EnumBaseConverter`1<SvgTextAnchor> {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class External.Svg.SvgTextBase : SvgVisualElement {
    private SvgUnitCollection _x;
    private SvgUnitCollection _y;
    private SvgUnitCollection _dy;
    private SvgUnitCollection _dx;
    private string _rotate;
    private List`1<float> _rotations;
    private GraphicsPath _path;
    private static Regex MultipleSpaces;
    [CompilerGeneratedAttribute]
private EventHandler`1<StringArg> Change;
    public string Text { get; public set; }
    unknown XmlSpaceHandling SpaceHandling {public set; }
    [SvgAttributeAttribute("x")]
public SvgUnitCollection X { get; public set; }
    [SvgAttributeAttribute("dx")]
public SvgUnitCollection Dx { get; public set; }
    [SvgAttributeAttribute("y")]
public SvgUnitCollection Y { get; public set; }
    [SvgAttributeAttribute("dy")]
public SvgUnitCollection Dy { get; public set; }
    [SvgAttributeAttribute("rotate")]
public string Rotate { get; public set; }
    [SvgAttributeAttribute("textLength")]
public SvgUnit TextLength { get; public set; }
    [SvgAttributeAttribute("lengthAdjust")]
public SvgTextLengthAdjust LengthAdjust { get; public set; }
    [SvgAttributeAttribute("letter-spacing")]
public SvgUnit LetterSpacing { get; public set; }
    [SvgAttributeAttribute("word-spacing")]
public SvgUnit WordSpacing { get; public set; }
    public SvgPaintServer Fill { get; public set; }
    public RectangleF Bounds { get; }
    private static SvgTextBase();
    public virtual string get_Text();
    public virtual void set_Text(string value);
    public virtual void set_SpaceHandling(XmlSpaceHandling value);
    public virtual SvgUnitCollection get_X();
    public virtual void set_X(SvgUnitCollection value);
    private void OnXChanged(object sender, NotifyCollectionChangedEventArgs e);
    public virtual SvgUnitCollection get_Dx();
    public virtual void set_Dx(SvgUnitCollection value);
    private void OnDxChanged(object sender, NotifyCollectionChangedEventArgs e);
    public virtual SvgUnitCollection get_Y();
    public virtual void set_Y(SvgUnitCollection value);
    private void OnYChanged(object sender, NotifyCollectionChangedEventArgs e);
    public virtual SvgUnitCollection get_Dy();
    public virtual void set_Dy(SvgUnitCollection value);
    private void OnDyChanged(object sender, NotifyCollectionChangedEventArgs e);
    public virtual string get_Rotate();
    public virtual void set_Rotate(string value);
    public virtual SvgUnit get_TextLength();
    public virtual void set_TextLength(SvgUnit value);
    public virtual SvgTextLengthAdjust get_LengthAdjust();
    public virtual void set_LengthAdjust(SvgTextLengthAdjust value);
    public virtual SvgUnit get_LetterSpacing();
    public virtual void set_LetterSpacing(SvgUnit value);
    public virtual SvgUnit get_WordSpacing();
    public virtual void set_WordSpacing(SvgUnit value);
    public virtual SvgPaintServer get_Fill();
    public virtual void set_Fill(SvgPaintServer value);
    public virtual string ToString();
    public virtual RectangleF get_Bounds();
    protected internal virtual void RenderFillAndStroke(ISvgRenderer renderer);
    internal virtual IEnumerable`1<ISvgNode> GetContentNodes();
    protected virtual GraphicsPath GetBaselinePath(ISvgRenderer renderer);
    protected virtual float GetAuthorPathLength();
    public virtual GraphicsPath Path(ISvgRenderer renderer);
    private void SetPath(TextDrawingState state);
    private void SetPath(TextDrawingState state, bool doMeasurements);
    protected string PrepareText(string value);
    private string ApplyTransformation(string value);
    [CompilerGeneratedAttribute]
public void add_Change(EventHandler`1<StringArg> value);
    [CompilerGeneratedAttribute]
public void remove_Change(EventHandler`1<StringArg> value);
    protected void OnChange(string newString, string sessionID);
    protected void RaiseChange(object sender, StringArg s);
    public virtual SvgElement DeepCopy();
    public virtual bool ShouldWriteElement();
}
[TypeConverterAttribute("External.Svg.SvgTextDecorationConverter")]
[FlagsAttribute]
internal enum External.Svg.SvgTextDecoration : Enum {
    public int value__;
    public static SvgTextDecoration Inherit;
    public static SvgTextDecoration None;
    public static SvgTextDecoration Underline;
    public static SvgTextDecoration Overline;
    public static SvgTextDecoration LineThrough;
    public static SvgTextDecoration Blink;
}
internal class External.Svg.SvgTextDecorationConverter : EnumBaseConverter`1<SvgTextDecoration> {
}
[TypeConverterAttribute("External.Svg.SvgTextLengthAdjustConverter")]
internal enum External.Svg.SvgTextLengthAdjust : Enum {
    public int value__;
    public static SvgTextLengthAdjust Spacing;
    public static SvgTextLengthAdjust SpacingAndGlyphs;
}
internal class External.Svg.SvgTextLengthAdjustConverter : EnumBaseConverter`1<SvgTextLengthAdjust> {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("textPath")]
internal class External.Svg.SvgTextPath : SvgTextBase {
    public SvgUnitCollection Dx { get; public set; }
    [SvgAttributeAttribute("startOffset")]
public SvgUnit StartOffset { get; public set; }
    [SvgAttributeAttribute("method")]
public SvgTextPathMethod Method { get; public set; }
    [SvgAttributeAttribute("spacing")]
public SvgTextPathSpacing Spacing { get; public set; }
    [SvgAttributeAttribute("href", "http://www.w3.org/1999/xlink")]
public Uri ReferencedPath { get; public set; }
    public virtual SvgUnitCollection get_Dx();
    public virtual void set_Dx(SvgUnitCollection value);
    public virtual SvgUnit get_StartOffset();
    public virtual void set_StartOffset(SvgUnit value);
    public virtual SvgTextPathMethod get_Method();
    public virtual void set_Method(SvgTextPathMethod value);
    public virtual SvgTextPathSpacing get_Spacing();
    public virtual void set_Spacing(SvgTextPathSpacing value);
    public virtual Uri get_ReferencedPath();
    public virtual void set_ReferencedPath(Uri value);
    protected virtual GraphicsPath GetBaselinePath(ISvgRenderer renderer);
    protected virtual float GetAuthorPathLength();
    public virtual SvgElement DeepCopy();
}
[TypeConverterAttribute("External.Svg.SvgTextPathMethodConverter")]
internal enum External.Svg.SvgTextPathMethod : Enum {
    public int value__;
    public static SvgTextPathMethod Align;
    public static SvgTextPathMethod Stretch;
}
internal class External.Svg.SvgTextPathMethodConverter : EnumBaseConverter`1<SvgTextPathMethod> {
}
[TypeConverterAttribute("External.Svg.SvgTextPathSpacingConverter")]
internal enum External.Svg.SvgTextPathSpacing : Enum {
    public int value__;
    public static SvgTextPathSpacing Exact;
    public static SvgTextPathSpacing Auto;
}
internal class External.Svg.SvgTextPathSpacingConverter : EnumBaseConverter`1<SvgTextPathSpacing> {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgTextReader : XmlTextReader {
    private Dictionary`2<string, string> _entities;
    private string _value;
    private bool _customValue;
    private string _localName;
    public string Value { get; }
    public string LocalName { get; }
    private IDictionary`2<string, string> Entities { get; }
    public SvgTextReader(Stream stream, Dictionary`2<string, string> entities);
    public SvgTextReader(TextReader reader, Dictionary`2<string, string> entities);
    public virtual string get_Value();
    public virtual string get_LocalName();
    private IDictionary`2<string, string> get_Entities();
    public virtual bool MoveToNextAttribute();
    public virtual bool Read();
    private void ParseEntities();
    public virtual void ResolveEntity();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("tref")]
internal class External.Svg.SvgTextRef : SvgTextBase {
    [SvgAttributeAttribute("href", "http://www.w3.org/1999/xlink")]
public Uri ReferencedElement { get; public set; }
    public virtual Uri get_ReferencedElement();
    public virtual void set_ReferencedElement(Uri value);
    internal virtual IEnumerable`1<ISvgNode> GetContentNodes();
    public virtual SvgElement DeepCopy();
}
[TypeConverterAttribute("External.Svg.SvgTextRenderingConverter")]
internal enum External.Svg.SvgTextRendering : Enum {
    public int value__;
    public static SvgTextRendering Inherit;
    public static SvgTextRendering Auto;
    public static SvgTextRendering OptimizeSpeed;
    public static SvgTextRendering OptimizeLegibility;
    public static SvgTextRendering GeometricPrecision;
}
internal class External.Svg.SvgTextRenderingConverter : EnumBaseConverter`1<SvgTextRendering> {
}
[SvgElementAttribute("tspan")]
internal class External.Svg.SvgTextSpan : SvgTextBase {
    [NullableContextAttribute("1")]
public virtual SvgElement DeepCopy();
}
[TypeConverterAttribute("External.Svg.SvgTextTransformationConverter")]
[FlagsAttribute]
internal enum External.Svg.SvgTextTransformation : Enum {
    public int value__;
    public static SvgTextTransformation Inherit;
    public static SvgTextTransformation None;
    public static SvgTextTransformation Capitalize;
    public static SvgTextTransformation Uppercase;
    public static SvgTextTransformation Lowercase;
}
internal class External.Svg.SvgTextTransformationConverter : EnumBaseConverter`1<SvgTextTransformation> {
}
[SvgElementAttribute("title")]
internal class External.Svg.SvgTitle : SvgElement {
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
public virtual SvgElement DeepCopy();
}
internal class External.Svg.SvgTurbulenceTypeConverter : EnumBaseConverter`1<SvgTurbulenceType> {
}
[TypeConverterAttribute("External.Svg.SvgUnitConverter")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgUnit : ValueType {
    private SvgUnitType _type;
    private float _value;
    private bool _isEmpty;
    private Nullable`1<float> _deviceValue;
    public static SvgUnit Empty;
    public static SvgUnit None;
    public bool IsEmpty { get; }
    public bool IsNone { get; }
    public float Value { get; }
    public SvgUnitType Type { get; }
    public SvgUnit(SvgUnitType type, float value);
    public SvgUnit(float value);
    private static SvgUnit();
    public bool get_IsEmpty();
    public bool get_IsNone();
    public float get_Value();
    public SvgUnitType get_Type();
    public float ToDeviceValue(ISvgRenderer renderer, UnitRenderingType renderType, SvgElement owner);
    private IFontDefn GetFont(ISvgRenderer renderer, SvgElement owner, SvgFontManager fontManager);
    public SvgUnit ToPercentage();
    public virtual bool Equals(object obj);
    public bool Equals(SvgUnit other);
    public virtual int GetHashCode();
    public static bool op_Equality(SvgUnit lhs, SvgUnit rhs);
    public static bool op_Inequality(SvgUnit lhs, SvgUnit rhs);
    public virtual string ToString();
    public static float op_Implicit(SvgUnit value);
    public static SvgUnit op_Implicit(float value);
    public static PointF GetDevicePoint(SvgUnit x, SvgUnit y, ISvgRenderer renderer, SvgElement owner);
    public static PointF GetDevicePointOffset(SvgUnit x, SvgUnit y, ISvgRenderer renderer, SvgElement owner);
    public static SizeF GetDeviceSize(SvgUnit width, SvgUnit height, ISvgRenderer renderer, SvgElement owner);
}
[TypeConverterAttribute("External.Svg.SvgUnitCollectionConverter")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgUnitCollection : ObservableCollection`1<SvgUnit> {
    public static string None;
    public static string Inherit;
    [CompilerGeneratedAttribute]
private string <StringForEmptyValue>k__BackingField;
    public string StringForEmptyValue { get; public set; }
    [CompilerGeneratedAttribute]
public string get_StringForEmptyValue();
    [CompilerGeneratedAttribute]
public void set_StringForEmptyValue(string value);
    public void AddRange(IEnumerable`1<SvgUnit> collection);
    public virtual string ToString();
    public static bool IsNullOrEmpty(SvgUnitCollection collection);
    public sealed virtual object Clone();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgUnitCollectionConverter : TypeConverter {
    private static SvgUnitConverter _unitConverter;
    private static SvgUnitCollectionConverter();
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgUnitConverter : TypeConverter {
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
    public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType);
    public virtual bool CanConvertTo(ITypeDescriptorContext context, Type destinationType);
    public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType);
}
internal enum External.Svg.SvgUnitType : Enum {
    public int value__;
    public static SvgUnitType None;
    public static SvgUnitType Pixel;
    public static SvgUnitType Em;
    public static SvgUnitType Ex;
    public static SvgUnitType Percentage;
    public static SvgUnitType User;
    public static SvgUnitType Inch;
    public static SvgUnitType Centimeter;
    public static SvgUnitType Millimeter;
    public static SvgUnitType Pica;
    public static SvgUnitType Point;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgUnknownElement : SvgElement {
    public SvgUnknownElement(string elementName);
    public virtual SvgElement DeepCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SvgElementAttribute("use")]
internal class External.Svg.SvgUse : SvgVisualElement {
    [SvgAttributeAttribute("href", "http://www.w3.org/1999/xlink")]
public Uri ReferencedElement { get; public set; }
    [SvgAttributeAttribute("x")]
public SvgUnit X { get; public set; }
    [SvgAttributeAttribute("y")]
public SvgUnit Y { get; public set; }
    [SvgAttributeAttribute("width")]
public SvgUnit Width { get; public set; }
    [SvgAttributeAttribute("height")]
public SvgUnit Height { get; public set; }
    public SvgPoint Location { get; }
    public RectangleF Bounds { get; }
    protected bool Renderable { get; }
    public virtual Uri get_ReferencedElement();
    public virtual void set_ReferencedElement(Uri value);
    private bool ElementReferencesUri(SvgElement element, List`1<Uri> elementUris);
    private bool ReferencedElementReferencesUri(List`1<Uri> elementUris);
    private bool HasRecursiveReference();
    public virtual SvgUnit get_X();
    public virtual void set_X(SvgUnit value);
    public virtual SvgUnit get_Y();
    public virtual void set_Y(SvgUnit value);
    public virtual SvgUnit get_Width();
    public virtual void set_Width(SvgUnit value);
    public virtual SvgUnit get_Height();
    public virtual void set_Height(SvgUnit value);
    protected internal virtual bool PushTransforms(ISvgRenderer renderer);
    public virtual GraphicsPath Path(ISvgRenderer renderer);
    public SvgPoint get_Location();
    public virtual RectangleF get_Bounds();
    protected virtual bool get_Renderable();
    protected virtual void RenderChildren(ISvgRenderer renderer);
    public virtual SvgElement DeepCopy();
}
[SvgElementAttribute("vkern")]
internal class External.Svg.SvgVerticalKern : SvgKern {
    [NullableContextAttribute("1")]
public virtual SvgElement DeepCopy();
}
[TypeConverterAttribute("External.Svg.SvgViewBoxConverter")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgViewBox : ValueType {
    public static SvgViewBox Empty;
    [CompilerGeneratedAttribute]
private float <MinX>k__BackingField;
    [CompilerGeneratedAttribute]
private float <MinY>k__BackingField;
    [CompilerGeneratedAttribute]
private float <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private float <Height>k__BackingField;
    public float MinX { get; public set; }
    public float MinY { get; public set; }
    public float Width { get; public set; }
    public float Height { get; public set; }
    public SvgViewBox(float minX, float minY, float width, float height);
    private static SvgViewBox();
    [CompilerGeneratedAttribute]
[IsReadOnlyAttribute]
public float get_MinX();
    [CompilerGeneratedAttribute]
public void set_MinX(float value);
    [CompilerGeneratedAttribute]
[IsReadOnlyAttribute]
public float get_MinY();
    [CompilerGeneratedAttribute]
public void set_MinY(float value);
    [CompilerGeneratedAttribute]
[IsReadOnlyAttribute]
public float get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(float value);
    [CompilerGeneratedAttribute]
[IsReadOnlyAttribute]
public float get_Height();
    [CompilerGeneratedAttribute]
public void set_Height(float value);
    public static RectangleF op_Implicit(SvgViewBox value);
    public static SvgViewBox op_Implicit(RectangleF value);
    public virtual bool Equals(object obj);
    public bool Equals(SvgViewBox other);
    public virtual int GetHashCode();
    public static bool op_Equality(SvgViewBox lhs, SvgViewBox rhs);
    public static bool op_Inequality(SvgViewBox lhs, SvgViewBox rhs);
    public void AddViewBoxTransform(SvgAspectRatio aspectRatio, ISvgRenderer renderer, SvgFragment frag);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.SvgViewBoxConverter : TypeConverter {
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
    public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType);
    public virtual bool CanConvertTo(ITypeDescriptorContext context, Type destinationType);
    public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType);
}
internal enum External.Svg.SvgVisibility : Enum {
    public int value__;
    public static SvgVisibility Visible;
    public static SvgVisibility Hidden;
    public static SvgVisibility Inherit;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class External.Svg.SvgVisualElement : SvgElement {
    private Nullable`1<bool> _requiresSmoothRendering;
    private PointF External.Svg.ISvgBoundable.Location { get; }
    private SizeF External.Svg.ISvgBoundable.Size { get; }
    public RectangleF Bounds { get; }
    [SvgAttributeAttribute("clip")]
public string Clip { get; public set; }
    [SvgAttributeAttribute("clip-path")]
public Uri ClipPath { get; public set; }
    [SvgAttributeAttribute("clip-rule")]
public SvgClipRule ClipRule { get; public set; }
    [SvgAttributeAttribute("filter")]
public Uri Filter { get; public set; }
    protected bool RequiresSmoothRendering { get; }
    protected bool Renderable { get; }
    public bool Visible { get; }
    protected bool Displayable { get; }
    [SvgAttributeAttribute("enable-background")]
public string EnableBackground { get; public set; }
    public abstract virtual GraphicsPath Path(ISvgRenderer renderer);
    private sealed virtual override PointF External.Svg.ISvgBoundable.get_Location();
    private sealed virtual override SizeF External.Svg.ISvgBoundable.get_Size();
    public abstract virtual RectangleF get_Bounds();
    public virtual string get_Clip();
    public virtual void set_Clip(string value);
    public virtual Uri get_ClipPath();
    public virtual void set_ClipPath(Uri value);
    public sealed virtual SvgClipRule get_ClipRule();
    public sealed virtual void set_ClipRule(SvgClipRule value);
    public virtual Uri get_Filter();
    public virtual void set_Filter(Uri value);
    protected virtual bool get_RequiresSmoothRendering();
    private bool ConvertShapeRendering2AntiAlias(SvgShapeRendering shapeRendering);
    protected virtual bool get_Renderable();
    protected virtual void Render(ISvgRenderer renderer);
    private void RenderInternal(ISvgRenderer renderer, bool renderFilter);
    private void RenderInternal(ISvgRenderer renderer);
    private bool RenderFilter(ISvgRenderer renderer);
    protected internal virtual void RenderFillAndStroke(ISvgRenderer renderer);
    protected internal virtual void RenderFill(ISvgRenderer renderer);
    protected internal virtual bool RenderStroke(ISvgRenderer renderer);
    protected internal virtual void SetClip(ISvgRenderer renderer);
    private sealed virtual override void External.Svg.ISvgClipable.SetClip(ISvgRenderer renderer);
    public virtual bool get_Visible();
    protected virtual bool get_Displayable();
    public virtual string get_EnableBackground();
    public virtual void set_EnableBackground(string value);
    [CompilerGeneratedAttribute]
private void <RenderFilter>b__29_0(ISvgRenderer r);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.Transforms.SvgMatrix : SvgTransform {
    [CompilerGeneratedAttribute]
private List`1<float> <Points>k__BackingField;
    public List`1<float> Points { get; public set; }
    public Matrix Matrix { get; }
    public SvgMatrix(List`1<float> m);
    [CompilerGeneratedAttribute]
public List`1<float> get_Points();
    [CompilerGeneratedAttribute]
public void set_Points(List`1<float> value);
    public virtual Matrix get_Matrix();
    public virtual string WriteToString();
    public virtual object Clone();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.Transforms.SvgRotate : SvgTransform {
    [CompilerGeneratedAttribute]
private float <Angle>k__BackingField;
    [CompilerGeneratedAttribute]
private float <CenterX>k__BackingField;
    [CompilerGeneratedAttribute]
private float <CenterY>k__BackingField;
    public float Angle { get; public set; }
    public float CenterX { get; public set; }
    public float CenterY { get; public set; }
    public Matrix Matrix { get; }
    public SvgRotate(float angle);
    public SvgRotate(float angle, float centerX, float centerY);
    [CompilerGeneratedAttribute]
public float get_Angle();
    [CompilerGeneratedAttribute]
public void set_Angle(float value);
    [CompilerGeneratedAttribute]
public float get_CenterX();
    [CompilerGeneratedAttribute]
public void set_CenterX(float value);
    [CompilerGeneratedAttribute]
public float get_CenterY();
    [CompilerGeneratedAttribute]
public void set_CenterY(float value);
    public virtual Matrix get_Matrix();
    public virtual string WriteToString();
    public virtual object Clone();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.Transforms.SvgScale : SvgTransform {
    [CompilerGeneratedAttribute]
private float <X>k__BackingField;
    [CompilerGeneratedAttribute]
private float <Y>k__BackingField;
    public float X { get; public set; }
    public float Y { get; public set; }
    public Matrix Matrix { get; }
    public SvgScale(float x);
    public SvgScale(float x, float y);
    [CompilerGeneratedAttribute]
public float get_X();
    [CompilerGeneratedAttribute]
public void set_X(float value);
    [CompilerGeneratedAttribute]
public float get_Y();
    [CompilerGeneratedAttribute]
public void set_Y(float value);
    public virtual Matrix get_Matrix();
    public virtual string WriteToString();
    public virtual object Clone();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.Transforms.SvgShear : SvgTransform {
    [CompilerGeneratedAttribute]
private float <X>k__BackingField;
    [CompilerGeneratedAttribute]
private float <Y>k__BackingField;
    public float X { get; public set; }
    public float Y { get; public set; }
    public Matrix Matrix { get; }
    public SvgShear(float x);
    public SvgShear(float x, float y);
    [CompilerGeneratedAttribute]
public float get_X();
    [CompilerGeneratedAttribute]
public void set_X(float value);
    [CompilerGeneratedAttribute]
public float get_Y();
    [CompilerGeneratedAttribute]
public void set_Y(float value);
    public virtual Matrix get_Matrix();
    public virtual string WriteToString();
    public virtual object Clone();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.Transforms.SvgSkew : SvgTransform {
    [CompilerGeneratedAttribute]
private float <AngleX>k__BackingField;
    [CompilerGeneratedAttribute]
private float <AngleY>k__BackingField;
    public float AngleX { get; public set; }
    public float AngleY { get; public set; }
    public Matrix Matrix { get; }
    public SvgSkew(float x, float y);
    [CompilerGeneratedAttribute]
public float get_AngleX();
    [CompilerGeneratedAttribute]
public void set_AngleX(float value);
    [CompilerGeneratedAttribute]
public float get_AngleY();
    [CompilerGeneratedAttribute]
public void set_AngleY(float value);
    public virtual Matrix get_Matrix();
    public virtual string WriteToString();
    public virtual object Clone();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class External.Svg.Transforms.SvgTransform : object {
    public Matrix Matrix { get; }
    public abstract virtual Matrix get_Matrix();
    public abstract virtual string WriteToString();
    public abstract virtual object Clone();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(SvgTransform lhs, SvgTransform rhs);
    public static bool op_Inequality(SvgTransform lhs, SvgTransform rhs);
    public virtual string ToString();
}
[DefaultMemberAttribute("Item")]
[TypeConverterAttribute("External.Svg.Transforms.SvgTransformConverter")]
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class External.Svg.Transforms.SvgTransformCollection : List`1<SvgTransform> {
    [CompilerGeneratedAttribute]
private EventHandler`1<AttributeEventArgs> TransformChanged;
    public SvgTransform Item { get; public set; }
    private void AddItem(SvgTransform item);
    public void Add(SvgTransform item);
    public void AddRange(IEnumerable`1<SvgTransform> collection);
    public void Remove(SvgTransform item);
    public void RemoveAt(int index);
    public Matrix GetMatrix();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public SvgTransform get_Item(int i);
    public void set_Item(int i, SvgTransform value);
    [CompilerGeneratedAttribute]
public void add_TransformChanged(EventHandler`1<AttributeEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_TransformChanged(EventHandler`1<AttributeEventArgs> value);
    protected void OnTransformChanged();
    public sealed virtual object Clone();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.Transforms.SvgTransformConverter : TypeConverter {
    [IteratorStateMachineAttribute("External.Svg.Transforms.SvgTransformConverter/<SplitTransforms>d__0")]
private static IEnumerable`1<string> SplitTransforms(string transforms);
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
    public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType);
    public virtual bool CanConvertTo(ITypeDescriptorContext context, Type destinationType);
    public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class External.Svg.Transforms.SvgTranslate : SvgTransform {
    [CompilerGeneratedAttribute]
private float <X>k__BackingField;
    [CompilerGeneratedAttribute]
private float <Y>k__BackingField;
    public float X { get; public set; }
    public float Y { get; public set; }
    public Matrix Matrix { get; }
    public SvgTranslate(float x, float y);
    public SvgTranslate(float x);
    [CompilerGeneratedAttribute]
public float get_X();
    [CompilerGeneratedAttribute]
public void set_X(float value);
    [CompilerGeneratedAttribute]
public float get_Y();
    [CompilerGeneratedAttribute]
public void set_Y(float value);
    public virtual Matrix get_Matrix();
    public virtual string WriteToString();
    public virtual object Clone();
}
internal enum External.Svg.UnitRenderingType : Enum {
    public int value__;
    public static UnitRenderingType Other;
    public static UnitRenderingType Horizontal;
    public static UnitRenderingType HorizontalOffset;
    public static UnitRenderingType Vertical;
    public static UnitRenderingType VerticalOffset;
}
internal enum External.Svg.XmlSpaceHandling : Enum {
    public int value__;
    public static XmlSpaceHandling default;
    public static XmlSpaceHandling inherit;
    public static XmlSpaceHandling preserve;
}
[DebuggerDisplayAttribute("{Value,nq}")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.Binary.DebuggerByte : ValueType {
    [DebuggerBrowsableAttribute("0")]
private byte value;
    [DebuggerBrowsableAttribute("0")]
public string Value { get; }
    public DebuggerByte(byte value);
    public string get_Value();
    private static string EscapeControlCodePoint(int controlCodePoint);
    private static string EscapeChar(char value);
    public static string EscapeString(string value);
}
[DebuggerDisplayAttribute("Length = {Length}")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.Binary.DebuggerByteArray : object {
    [DebuggerBrowsableAttribute("0")]
private    value;
    [DebuggerBrowsableAttribute("0")]
public int Length { get; }
    [DebuggerBrowsableAttribute("3")]
public DebuggerByte[] Items { get; }
    internal DebuggerByteArray(   value);
    public int get_Length();
    public DebuggerByte[] get_Items();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.Collections.CollectionDebugView : object {
    private IEnumerable sequence;
    [DebuggerBrowsableAttribute("3")]
public Object[] Items { get; }
    public CollectionDebugView(IEnumerable sequence);
    public Object[] get_Items();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.Collections.CollectionDebugView`1 : object {
    private IEnumerable`1<T> sequence;
    [DebuggerBrowsableAttribute("3")]
public T[] Items { get; }
    public CollectionDebugView`1(IEnumerable`1<T> sequence);
    public T[] get_Items();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.Collections.DictionaryDebugView`2 : object {
    private IDictionary`2<K, V> dictionary;
    [DebuggerBrowsableAttribute("3")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public KeyValuePair`2[] Items { get; }
    public DictionaryDebugView`2(IDictionary`2<K, V> dictionary);
    public KeyValuePair`2[] get_Items();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.Collections.EnumerableDebugView`1 : object {
    private IEnumerable`1<T> enumerable;
    [DebuggerBrowsableAttribute("3")]
public T[] Items { get; }
    public EnumerableDebugView`1(IEnumerable`1<T> enumerable);
    public T[] get_Items();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.AlignmentTab : Inline {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private TabStopAlignment ;
    [DebuggerBrowsableAttribute("0")]
private TabStopLeader ;
    [DebuggerBrowsableAttribute("0")]
private TabPositioningBase ;
    public CharacterFormat CharacterFormat { get; public set; }
    [NullableAttribute("2")]
public CharacterFormatRevision CharacterFormatRevision { get; public set; }
    public TabStopLeader Leader { get; public set; }
    public TabStopAlignment Alignment { get; public set; }
    public TabPositioningBase RelativeTo { get; public set; }
    public ElementType ElementType { get; }
    [DebuggerBrowsableAttribute("0")]
public DocumentModel Document { get; }
    public AlignmentTab(DocumentModel document, TabStopAlignment alignment);
    public CharacterFormat get_CharacterFormat();
    public void set_CharacterFormat(CharacterFormat value);
    [NullableContextAttribute("2")]
public CharacterFormatRevision get_CharacterFormatRevision();
    [NullableContextAttribute("2")]
public void set_CharacterFormatRevision(CharacterFormatRevision value);
    [CompilerGeneratedAttribute]
public TabStopLeader get_Leader();
    [CompilerGeneratedAttribute]
public void set_Leader(TabStopLeader value);
    public TabStopAlignment get_Alignment();
    public void set_Alignment(TabStopAlignment value);
    [CompilerGeneratedAttribute]
public TabPositioningBase get_RelativeTo();
    [CompilerGeneratedAttribute]
public void set_RelativeTo(TabPositioningBase value);
    public virtual ElementType get_ElementType();
    public virtual DocumentModel get_Document();
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    public AlignmentTab Clone();
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
    private sealed virtual override     q272vj5f59p4ckrlsg6j569dw6dgf8gg​ ();
    private sealed virtual override void q272vj5f59p4ckrlsg6j569dw6dgf8gg​ (    );
    private sealed virtual override  ​ <   > q272vj5f59p4ckrlsg6j569dw6dgf8gg​ ();
    private sealed virtual override bool q272vj5f59p4ckrlsg6j569dw6dgf8gg​ (Func`2<   , U> , U& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class GemBox.Document.Block : Element {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public BlockCollection ParentCollection { get; }
    private protected Block(DocumentModel );
    [NullableContextAttribute("2")]
public BlockCollection get_ParentCollection();
    public Block Clone(bool cloneDescendants);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class GemBox.Document.BlockCollection : ElementCollection`1<Block> {
    internal BlockCollection(Element );
}
[DebuggerDisplayAttribute("{Name}")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Bookmark : object {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private BookmarkStart ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private BookmarkEnd ;
    public string Name { get; }
    [NullableAttribute("2")]
public BookmarkStart Start { get; internal set; }
    [NullableAttribute("2")]
public BookmarkEnd End { get; internal set; }
    internal Bookmark(string );
    public string get_Name();
    [NullableContextAttribute("2")]
public BookmarkStart get_Start();
    [NullableContextAttribute("2")]
internal void (BookmarkStart );
    [NullableContextAttribute("2")]
public BookmarkEnd get_End();
    [NullableContextAttribute("2")]
internal void (BookmarkEnd );
    [NullableContextAttribute("2")]
public ContentRange GetContent(bool includeBookmarkStartEnd);
    private Func`2<CharacterFormat, IEnumerable`1<Inline>> (string );
    private void (Func`2<CharacterFormat, IEnumerable`1<Inline>> , bool );
    private void (bool , BookmarkEnd , int , Element );
    private bool (Func`2<CharacterFormat, IEnumerable`1<Inline>> , bool , Int32& );
    private static Element (Element , Element );
    private static bool (Element );
    private static Element (Element , bool , bool );
    private static int (InlineCollection , int , Func`2<CharacterFormat, IEnumerable`1<Inline>> , CharacterFormat );
    private static int (Element );
    private static Element (Element , Func`2<Element, bool> );
    [ObsoleteAttribute("Use 'GemBox.Document.Bookmark.GetContent(false).Set(string)' instead.")]
[EditorBrowsableAttribute("1")]
public void SetBookmarkContent(string text);
    [ObsoleteAttribute("Use 'GemBox.Document.Bookmark.GetContent(false).Set(ContentRange)' instead.")]
[EditorBrowsableAttribute("1")]
public void SetBookmarkContent(Inline[] content);
    [ObsoleteAttribute("Use 'GemBox.Document.Bookmark.GetContent(false).Set(ContentRange)' instead.")]
[EditorBrowsableAttribute("1")]
public void SetBookmarkContent(IEnumerable`1<Inline> content);
    [ObsoleteAttribute("Use 'GemBox.Document.Bookmark.GetContent(true).Set(string)' instead.")]
[EditorBrowsableAttribute("1")]
public void ReplaceBookmark(string text);
    [ObsoleteAttribute("Use 'GemBox.Document.Bookmark.GetContent(true).Set(ContentRange)' instead.")]
[EditorBrowsableAttribute("1")]
public void ReplaceBookmark(Inline[] content);
    [ObsoleteAttribute("Use 'GemBox.Document.Bookmark.GetContent(true).Set(ContentRange)' instead.")]
[EditorBrowsableAttribute("1")]
public void ReplaceBookmark(IEnumerable`1<Inline> content);
}
[DefaultMemberAttribute("Item")]
[DebuggerDisplayAttribute("Count = {Count}")]
[DebuggerTypeProxyAttribute("GemBox.Collections.CollectionDebugView")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.BookmarkCollection : object {
    [DebuggerBrowsableAttribute("0")]
private IList`1<Bookmark> ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<string, Bookmark> ;
    [ComVisibleAttribute("False")]
public Bookmark Item { get; }
    [ComVisibleAttribute("True")]
[NullableAttribute("2")]
public Bookmark Item { get; }
    public int Count { get; }
    private bool System.Collections.Generic.ICollection<GemBox.Document.Bookmark>.IsReadOnly { get; }
    private Bookmark System.Collections.Generic.IList<GemBox.Document.Bookmark>.Item { get; private set; }
    internal void (Bookmark );
    public sealed virtual void RemoveAt(int index);
    private static void (Bookmark );
    [NullableContextAttribute("2")]
private static bool (Inline );
    public sealed virtual bool Remove(Bookmark item);
    public sealed virtual void Clear();
    public Bookmark get_Item(int index);
    public Bookmark get_Item(string name);
    public sealed virtual int IndexOf(Bookmark item);
    public sealed virtual bool Contains(Bookmark item);
    public sealed virtual void CopyTo(Bookmark[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public sealed virtual IEnumerator`1<Bookmark> GetEnumerator();
    private sealed virtual override bool System.Collections.Generic.ICollection<GemBox.Document.Bookmark>.get_IsReadOnly();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override void System.Collections.Generic.IList<GemBox.Document.Bookmark>.Insert(int index, Bookmark item);
    private sealed virtual override Bookmark System.Collections.Generic.IList<GemBox.Document.Bookmark>.get_Item(int index);
    private sealed virtual override void System.Collections.Generic.IList<GemBox.Document.Bookmark>.set_Item(int index, Bookmark value);
    private sealed virtual override void System.Collections.Generic.ICollection<GemBox.Document.Bookmark>.Add(Bookmark item);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.BookmarkEnd : Inline {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
public ElementType ElementType { get; }
    public string Name { get; }
    [DebuggerBrowsableAttribute("0")]
protected string DebuggerDisplay { get; }
    public BookmarkEnd(DocumentModel document, string name);
    private BookmarkEnd(DocumentModel , BookmarkEnd );
    internal bool ();
    internal void (bool );
    public virtual ElementType get_ElementType();
    public string get_Name();
    protected virtual string get_DebuggerDisplay();
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    public BookmarkEnd Clone();
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.BookmarkStart : Inline {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
public ElementType ElementType { get; }
    public string Name { get; }
    [DebuggerBrowsableAttribute("0")]
protected string DebuggerDisplay { get; }
    public BookmarkStart(DocumentModel document, string name);
    private BookmarkStart(DocumentModel , BookmarkStart );
    public virtual ElementType get_ElementType();
    public string get_Name();
    protected virtual string get_DebuggerDisplay();
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    public BookmarkStart Clone();
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
}
public enum GemBox.Document.BorderStyle : Enum {
    public int value__;
    public static BorderStyle None;
    public static BorderStyle Single;
    public static BorderStyle Double;
    public static BorderStyle Triple;
    public static BorderStyle Dotted;
    public static BorderStyle Dashed;
    public static BorderStyle DotDash;
    public static BorderStyle DotDotDash;
    public static BorderStyle Wave;
    public static BorderStyle DoubleWave;
    public static BorderStyle Outset;
    public static BorderStyle Inset;
    public static BorderStyle DashSmallGap;
    public static BorderStyle ThickThinLargeGap;
    public static BorderStyle ThickThinMediumGap;
    public static BorderStyle ThickThinSmallGap;
    public static BorderStyle ThinThickLargeGap;
    public static BorderStyle ThinThickMediumGap;
    public static BorderStyle ThinThickSmallGap;
    public static BorderStyle ThinThickThinLargeGap;
    public static BorderStyle ThinThickThinMediumGap;
    public static BorderStyle ThinThickThinSmallGap;
    public static BorderStyle DashDotStroked;
    public static BorderStyle Emboss3D;
    public static BorderStyle Engrave3D;
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class GemBox.Document.BuiltInDocumentPropertiesDictionary : DictionaryBase`2<BuiltInDocumentProperty, string> {
    protected virtual void ValidateBeforeAdd(BuiltInDocumentProperty key, string value);
}
public enum GemBox.Document.BuiltInDocumentProperty : Enum {
    public int value__;
    public static BuiltInDocumentProperty Title;
    public static BuiltInDocumentProperty Author;
    public static BuiltInDocumentProperty Subject;
    public static BuiltInDocumentProperty Comments;
    public static BuiltInDocumentProperty DateContentCreated;
    public static BuiltInDocumentProperty DateLastSaved;
    public static BuiltInDocumentProperty Category;
    public static BuiltInDocumentProperty Status;
    public static BuiltInDocumentProperty Keywords;
    public static BuiltInDocumentProperty LastSavedBy;
    public static BuiltInDocumentProperty Manager;
    public static BuiltInDocumentProperty Company;
    public static BuiltInDocumentProperty HyperlinkBase;
    public static BuiltInDocumentProperty Application;
    public static BuiltInDocumentProperty DateLastPrinted;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class GemBox.Document.CharacterFonts : object {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private    ;
    public string FontNameAscii { get; public set; }
    public string FontNameHighAnsi { get; public set; }
    public string FontNameEastAsian { get; public set; }
    public string FontNameComplexScript { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
internal string  { get; internal set; }
    [NullableContextAttribute("1")]
internal CharacterFonts(   );
    internal  ();
    public string get_FontNameAscii();
    public void set_FontNameAscii(string value);
    public string get_FontNameHighAnsi();
    public void set_FontNameHighAnsi(string value);
    public string get_FontNameEastAsian();
    public void set_FontNameEastAsian(string value);
    public string get_FontNameComplexScript();
    public void set_FontNameComplexScript(string value);
    [NullableContextAttribute("1")]
internal string ();
    [NullableContextAttribute("1")]
internal void (string );
    [NullableContextAttribute("1")]
private static string (string );
    [NullableContextAttribute("1")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public static bool op_Equality(CharacterFonts first, CharacterFonts second);
    [NullableContextAttribute("1")]
public static bool op_Inequality(CharacterFonts first, CharacterFonts second);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.CharacterFormat : Format {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<Color, object> ;
    [DebuggerBrowsableAttribute("0")]
internal   <   > ;
    [DebuggerBrowsableAttribute("0")]
private CharacterFonts ;
    protected DocumentModel DocumentCore { get; }
    public CharacterStyle Style { get; public set; }
    public bool Strikethrough { get; public set; }
    public bool DoubleStrikethrough { get; public set; }
    public bool Superscript { get; public set; }
    public bool Subscript { get; public set; }
    public bool SmallCaps { get; public set; }
    public bool AllCaps { get; public set; }
    public bool Hidden { get; public set; }
    public bool Bold { get; public set; }
    public bool Italic { get; public set; }
    public bool RightToLeft { get; public set; }
    public double Size { get; public set; }
    public string FontName { get; public set; }
    public CharacterFonts Fonts { get; }
    public UnderlineType UnderlineStyle { get; public set; }
    public Color FontColor { get; public set; }
    public Color HighlightColor { get; public set; }
    public Color BackgroundColor { get; public set; }
    public Color UnderlineColor { get; public set; }
    public double Kerning { get; public set; }
    public double Spacing { get; public set; }
    public double Position { get; public set; }
    public int Scaling { get; public set; }
    public SingleBorder Border { get; public set; }
    public CultureInfo Language { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal CharacterFormatRevision   { get; internal set; }
    internal CharacterFormat(  <   > );
    private static CharacterFormat();
    internal     ();
    internal void (    );
    protected virtual DocumentModel get_DocumentCore();
    internal void (  <   > ,    & );
    internal void (  <   > );
    public CharacterStyle get_Style();
    public void set_Style(CharacterStyle value);
    public bool get_Strikethrough();
    public void set_Strikethrough(bool value);
    public bool get_DoubleStrikethrough();
    public void set_DoubleStrikethrough(bool value);
    public bool get_Superscript();
    public void set_Superscript(bool value);
    public bool get_Subscript();
    public void set_Subscript(bool value);
    public bool get_SmallCaps();
    public void set_SmallCaps(bool value);
    public bool get_AllCaps();
    public void set_AllCaps(bool value);
    public bool get_Hidden();
    public void set_Hidden(bool value);
    public bool get_Bold();
    public void set_Bold(bool value);
    public bool get_Italic();
    public void set_Italic(bool value);
    public bool get_RightToLeft();
    public void set_RightToLeft(bool value);
    private bool ();
    public double get_Size();
    public void set_Size(double value);
    public string get_FontName();
    public void set_FontName(string value);
    public CharacterFonts get_Fonts();
    public UnderlineType get_UnderlineStyle();
    public void set_UnderlineStyle(UnderlineType value);
    public Color get_FontColor();
    public void set_FontColor(Color value);
    public Color get_HighlightColor();
    public void set_HighlightColor(Color value);
    public Color get_BackgroundColor();
    public void set_BackgroundColor(Color value);
    internal Color ();
    public Color get_UnderlineColor();
    public void set_UnderlineColor(Color value);
    public double get_Kerning();
    public void set_Kerning(double value);
    public double get_Spacing();
    public void set_Spacing(double value);
    public double get_Position();
    public void set_Position(double value);
    public int get_Scaling();
    public void set_Scaling(int value);
    public SingleBorder get_Border();
    public void set_Border(SingleBorder value);
    public CultureInfo get_Language();
    public void set_Language(CultureInfo value);
    private Color ();
    internal Revision ();
    internal void (Revision );
    [NullableContextAttribute("2")]
internal CharacterFormatRevision ();
    [NullableContextAttribute("2")]
internal void (CharacterFormatRevision );
    internal  ();
    private void (Action`1<   > );
    public virtual void ClearFormatting();
    public virtual bool Equals(object obj);
    internal bool (CharacterFormat );
    public virtual int GetHashCode();
    public static bool op_Equality(CharacterFormat first, CharacterFormat second);
    public static bool op_Inequality(CharacterFormat first, CharacterFormat second);
    public CharacterFormat Clone();
    public CharacterFormat Clone(bool resolveValues);
    private T (Func`2<   , T> );
    private bool (Func`2<   , Nullable`1<bool>> , Func`2<   , Nullable`1<bool>> );
    internal static bool (Color );
    private sealed virtual override object 6ejt6xvzzfedsvnyckkhqx7svzz2waf8​  ();
    private sealed virtual override  6ejt6xvzzfedsvnyckkhqx7svzz2waf8​  ();
    private sealed virtual override string 6ejt6xvzzfedsvnyckkhqx7svzz2waf8​ (Func`2<FontsData, string> );
    private sealed virtual override void 6ejt6xvzzfedsvnyckkhqx7svzz2waf8​ (Func`2<FontsData, FontsData> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.CharacterStyle : Style {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private CharacterStyle ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
public StyleType StyleType { get; }
    public CharacterFormat CharacterFormat { get; public set; }
    [NullableAttribute("2")]
public CharacterStyle BaseStyle { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
protected Style BaseStyleCore { get; protected set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public DocumentModel Document { get; protected set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private  ​ <   >  { get; }
    public CharacterStyle(string name);
    public virtual StyleType get_StyleType();
    public CharacterFormat get_CharacterFormat();
    public void set_CharacterFormat(CharacterFormat value);
    internal     ();
    [NullableContextAttribute("2")]
public CharacterStyle get_BaseStyle();
    [NullableContextAttribute("2")]
public void set_BaseStyle(CharacterStyle value);
    [NullableContextAttribute("2")]
protected virtual Style get_BaseStyleCore();
    [NullableContextAttribute("2")]
protected virtual void set_BaseStyleCore(Style value);
    [NullableContextAttribute("2")]
public virtual DocumentModel get_Document();
    [NullableContextAttribute("2")]
protected virtual void set_Document(DocumentModel value);
    private sealed virtual override     qxjpxgfwz3aj46p36f6bhkt3ufsekv42​ ();
    private sealed virtual override void qxjpxgfwz3aj46p36f6bhkt3ufsekv42​ (    );
    private sealed virtual override  ​ <   > qxjpxgfwz3aj46p36f6bhkt3ufsekv42​ ();
    private sealed virtual override bool qxjpxgfwz3aj46p36f6bhkt3ufsekv42​ (Func`2<   , U> , U& );
    internal virtual Style 68fp7mkt9fybxft862un8hgms2ez5evk​  ();
    internal virtual bool 68fp7mkt9fybxft862un8hgms2ez5evk​ (Style );
    internal virtual bool 68fp7mkt9fybxft862un8hgms2ez5evk​ (Style );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Chart : DrawingElement {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private object ;
    [DebuggerBrowsableAttribute("0")]
private object ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal object  { get; internal set; }
    public object ExcelChart { get; }
    public ElementType ElementType { get; }
    public ChartType ChartType { get; }
    [DebuggerBrowsableAttribute("0")]
protected string DebuggerDisplay { get; }
    internal Chart(DocumentModel , object );
    public Chart(DocumentModel document, ChartType chartType, ChartGrouping chartGrouping, Layout layout);
    public Chart(DocumentModel document, ChartType chartType, Layout layout);
    public Chart(DocumentModel document, ChartType chartType, ChartGrouping chartGrouping);
    public Chart(DocumentModel document, ChartType chartType);
    [NullableContextAttribute("2")]
internal object ();
    [NullableContextAttribute("2")]
internal void (object );
    [CompilerGeneratedAttribute]
public object get_ExcelChart();
    private void (object );
    public virtual ElementType get_ElementType();
    public ChartType get_ChartType();
    public Chart Clone();
    protected virtual string get_DebuggerDisplay();
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
}
public enum GemBox.Document.ChartGrouping : Enum {
    public int value__;
    public static ChartGrouping Standard;
    public static ChartGrouping Clustered;
    public static ChartGrouping Stacked;
    public static ChartGrouping PercentStacked;
}
public enum GemBox.Document.ChartType : Enum {
    public int value__;
    public static ChartType Column;
    public static ChartType Bar;
    public static ChartType Line;
    public static ChartType Area;
    public static ChartType Pie;
    public static ChartType Combo;
    public static ChartType Scatter;
    public static ChartType Doughnut;
}
public class GemBox.Document.Color : ValueType {
    [DebuggerBrowsableAttribute("0")]
internal static Color ;
    public static Color Empty;
    public static Color White;
    public static Color Black;
    public static Color Blue;
    public static Color Brown;
    public static Color Gray;
    public static Color Green;
    public static Color Orange;
    public static Color Pink;
    public static Color Purple;
    public static Color Red;
    public static Color Yellow;
    public static Color Cyan;
    public static Color DarkBlue;
    public static Color DarkCyan;
    public static Color DarkGray;
    public static Color DarkGreen;
    public static Color DarkMagenta;
    public static Color DarkRed;
    public static Color DarkYellow;
    public static Color LightGray;
    public static Color Magenta;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public byte R { get; }
    public byte G { get; }
    public byte B { get; }
    public bool IsEmpty { get; }
    public Color(byte red, byte green, byte blue);
    public Color(int hex);
    private Color(byte , byte , byte , byte );
    internal Color(byte , Color );
    private static Color();
    internal byte ();
    public byte get_R();
    public byte get_G();
    public byte get_B();
    [IsReadOnlyAttribute]
internal int ();
    internal bool ();
    public bool get_IsEmpty();
    public sealed virtual bool Equals(Color other);
    [NullableContextAttribute("1")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static bool op_Equality(Color first, Color second);
    public static bool op_Inequality(Color first, Color second);
    internal static Color (double , double , double );
    internal void (Double& , Double& , Double& );
    internal static double (double , double );
    internal double ();
    private static double (byte );
}
[ComVisibleAttribute("True")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.ComHelper : object {
    public void ComSetLicense(string serialKey);
    public DocumentModel Load(string path);
    public DocumentModel LoadWithOptions(string path, object options);
    public void SaveWithOptions(object document, string path, object options);
    public ArrayList GetChildElements(object parent, bool recursively, int filterElement);
    public int GetElementCollectionCount(object elements);
    public Element GetElementCollectionItem(object elements, int index);
    public void RemoveElementCollectionItem(object elements, int index);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class GemBox.Document.Comment : Element {
    [DebuggerBrowsableAttribute("0")]
private CommentStart ;
    [DebuggerBrowsableAttribute("0")]
private CommentEnd ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private Dictionary`2<DocumentModel, Comment> ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private DocumentModel ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private BlockCollection ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private DateTime  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private Comment  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private PreservedInline  ;
    public string Initials { get; public set; }
    public string Author { get; public set; }
    public DateTime Date { get; public set; }
    public bool Resolved { get; public set; }
    public Comment ReplyTo { get; public set; }
    [NullableAttribute("1")]
public BlockCollection Blocks { get; }
    public CommentStart Start { get; }
    public CommentEnd End { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
internal PreservedInline  { get; internal set; }
    public ElementType ElementType { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.Content { get; }
    [NullableContextAttribute("1")]
public Comment(DocumentModel document);
    internal int ();
    internal void (int );
    internal bool ();
    [CompilerGeneratedAttribute]
public string get_Initials();
    [CompilerGeneratedAttribute]
public void set_Initials(string value);
    [CompilerGeneratedAttribute]
public string get_Author();
    [CompilerGeneratedAttribute]
public void set_Author(string value);
    [CompilerGeneratedAttribute]
public DateTime get_Date();
    [CompilerGeneratedAttribute]
public void set_Date(DateTime value);
    [CompilerGeneratedAttribute]
public bool get_Resolved();
    [CompilerGeneratedAttribute]
public void set_Resolved(bool value);
    [CompilerGeneratedAttribute]
public Comment get_ReplyTo();
    [CompilerGeneratedAttribute]
public void set_ReplyTo(Comment value);
    [NullableContextAttribute("1")]
public BlockCollection get_Blocks();
    public CommentStart get_Start();
    internal void (CommentStart );
    public CommentEnd get_End();
    internal void (CommentEnd );
    [NullableContextAttribute("1")]
internal PreservedInline ();
    [NullableContextAttribute("1")]
internal void (PreservedInline );
    public virtual ElementType get_ElementType();
    [NullableContextAttribute("1")]
internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    [NullableContextAttribute("1")]
internal Comment (DocumentModel , bool );
    [NullableContextAttribute("1")]
internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
    [IteratorStateMachineAttribute("GemBox.Document.Comment/")]
[NullableContextAttribute("1")]
internal virtual IEnumerable`1<ElementType> p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (ElementCollection );
    [IteratorStateMachineAttribute("GemBox.Document.Comment/")]
[NullableContextAttribute("1")]
private sealed virtual override IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.get_Content();
}
[DefaultMemberAttribute("Item")]
[DebuggerDisplayAttribute("Count = {Count}")]
[DebuggerTypeProxyAttribute("GemBox.Collections.CollectionDebugView")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.CommentCollection : ElementCollection {
    [DebuggerBrowsableAttribute("0")]
private IList`1<Comment> ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<int, Comment> ;
    [ComVisibleAttribute("False")]
public Comment Item { get; }
    protected int CountCore { get; }
    private bool System.Collections.Generic.ICollection<GemBox.Document.Comment>.IsReadOnly { get; }
    private Comment System.Collections.Generic.IList<GemBox.Document.Comment>.Item { get; private set; }
    internal CommentCollection(Element );
    internal void (Comment );
    protected virtual void RemoveAtCore(int index);
    private static void (Comment );
    [NullableContextAttribute("2")]
private static bool (Inline );
    public sealed virtual bool Remove(Comment item);
    protected virtual void ClearCore();
    public Comment get_Item(int index);
    public sealed virtual int IndexOf(Comment item);
    public sealed virtual bool Contains(Comment item);
    public sealed virtual void CopyTo(Comment[] array, int arrayIndex);
    protected virtual int get_CountCore();
    protected virtual void InsertCore(int index, Element item);
    protected virtual int IndexOfCore(Element item);
    protected virtual Element GetCore(int index);
    protected virtual void SetCore(int index, Element value);
    [IteratorStateMachineAttribute("GemBox.Document.CommentCollection/")]
protected virtual IEnumerator`1<Element> GetEnumeratorCore();
    public sealed virtual IEnumerator`1<Comment> GetEnumerator();
    private sealed virtual override bool System.Collections.Generic.ICollection<GemBox.Document.Comment>.get_IsReadOnly();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override void System.Collections.Generic.IList<GemBox.Document.Comment>.Insert(int index, Comment item);
    private sealed virtual override Comment System.Collections.Generic.IList<GemBox.Document.Comment>.get_Item(int index);
    private sealed virtual override void System.Collections.Generic.IList<GemBox.Document.Comment>.set_Item(int index, Comment value);
    private sealed virtual override void System.Collections.Generic.ICollection<GemBox.Document.Comment>.Add(Comment item);
    [NullableContextAttribute("2")]
internal Comment (int );
    internal int ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.CommentEnd : Inline {
    [DebuggerBrowsableAttribute("0")]
private Comment ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    public Comment Comment { get; }
    public ElementType ElementType { get; }
    public CommentEnd(DocumentModel document, Comment comment);
    [CompilerGeneratedAttribute]
public Comment get_Comment();
    internal string ();
    internal void (string );
    public virtual ElementType get_ElementType();
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.CommentStart : Inline {
    [DebuggerBrowsableAttribute("0")]
private Comment ;
    public Comment Comment { get; }
    public ElementType ElementType { get; }
    public CommentStart(DocumentModel document, Comment comment);
    [CompilerGeneratedAttribute]
public Comment get_Comment();
    public virtual ElementType get_ElementType();
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class GemBox.Document.ComponentInfo : object {
    [DebuggerBrowsableAttribute("0")]
private static EventHandler`1<FreeLimitEventArgs> ;
    [DebuggerBrowsableAttribute("0")]
private static     ;
    [DebuggerBrowsableAttribute("0")]
internal static Nullable`1<bool> ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal static Tuple`3<int, int, int> ;
    public static string Title { get; }
    public static string FullVersion { get; }
    private static ComponentInfo();
    [CompilerGeneratedAttribute]
public static void add_FreeLimitReached(EventHandler`1<FreeLimitEventArgs> value);
    [CompilerGeneratedAttribute]
public static void remove_FreeLimitReached(EventHandler`1<FreeLimitEventArgs> value);
    internal static Version ();
    internal static string ();
    internal static string ();
    private static string ();
    public static string get_Title();
    public static string get_FullVersion();
    internal static void (DocumentModel );
    public static void SetLicense(string serialKey);
    internal static FreeLimitReachedAction (DocumentModel );
    internal static void RefreshSecurityContext();
    internal static void DisableFontsResetOnOnSecurityContextRefreshed();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.ContentPosition : object {
    [DebuggerBrowsableAttribute("0")]
private Element ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private static LoadOptions[] ;
    public Element Parent { get; }
    internal ContentPosition(Element );
    internal ContentPosition(Element , int );
    internal ContentPosition(Element , bool , bool );
    internal ContentPosition(Element , bool );
    private ContentPosition(Element , int , bool );
    private static ContentPosition();
    public Element get_Parent();
    internal bool ();
    internal int ();
    internal bool ();
    internal static CharacterFormat (Element , bool );
    internal static ParagraphFormat (Element , CharacterFormat& );
    internal ContentPosition ();
    internal ContentPosition (Element ,     );
    internal ContentPosition (IEnumerable`1<Element> ,     );
    public ContentPosition InsertRange(ContentRange range);
    public ContentPosition LoadText(string text);
    public ContentPosition LoadText(string text, CharacterFormat format);
    internal ContentPosition (string , CharacterFormat , CharacterFormat , ParagraphFormat , CharacterFormat );
    public ContentPosition LoadText(string text, TxtLoadOptions options);
    [IteratorStateMachineAttribute("GemBox.Document.ContentPosition/")]
private static IEnumerable`1<object> (string , DocumentModel , CharacterFormat , CharacterFormat , ParagraphFormat , CharacterFormat );
    private static object (string , int , int , DocumentModel , CharacterFormat );
    public ContentPosition LoadText(string html, HtmlLoadOptions options);
    internal     (HtmlLoadOptions );
    internal ContentPosition (string , HtmlLoadOptions ,     );
    public ContentPosition LoadText(string text, RtfLoadOptions options);
    public void LoadFromClipboard(LoadOptions[] listOfOptions);
    public void LoadFromClipboard(IEnumerable`1<LoadOptions> listOfOptions);
    private bool (LoadOptions );
    private static bool (TextDataFormat , String& );
    [ObsoleteAttribute("Use 'GemBox.Document.ContentPosition.LoadText(System.String)' instead.")]
[EditorBrowsableAttribute("1")]
public ContentPosition InsertText(string text);
    [ObsoleteAttribute("Use 'GemBox.Document.ContentPosition.LoadText(System.String, GemBox.Document.CharacterFormat)' instead.")]
[EditorBrowsableAttribute("1")]
public ContentPosition InsertText(string text, CharacterFormat format);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.ContentRange : object {
    [DebuggerBrowsableAttribute("0")]
private ContentPosition ;
    [DebuggerBrowsableAttribute("0")]
private ContentPosition ;
    [DebuggerBrowsableAttribute("0")]
private FormFieldDataCollection ;
    [DebuggerBrowsableAttribute("0")]
private static SaveOptions[] ;
    public ContentPosition Start { get; }
    public ContentPosition End { get; }
    public FormFieldDataCollection FormFieldsData { get; }
    public ContentRange(ContentPosition start, ContentPosition end);
    internal ContentRange(Element );
    internal ContentRange(Element , Element );
    private static ContentRange();
    public ContentPosition get_Start();
    public ContentPosition get_End();
    public FormFieldDataCollection get_FormFieldsData();
    internal bool ();
    internal IEnumerable`1<Element> (DocumentModel ,    & );
    internal IEnumerable`1<Element> (DocumentModel ,    & );
    internal Element ();
    public void Delete();
    internal ContentPosition ();
    private ContentPosition (bool );
    internal ContentPosition ();
    internal ContentRange (IEnumerable`1<Element> ,     );
    internal ContentPosition (ContentPosition , IEnumerable`1<Element> );
    private static bool (Block );
    public ContentRange Set(ContentRange range);
    public ContentRange LoadText(string text);
    public ContentRange LoadText(string text, CharacterFormat format);
    public ContentRange LoadText(string text, TxtLoadOptions options);
    public ContentRange LoadText(string html, HtmlLoadOptions options);
    public ContentRange LoadText(string text, RtfLoadOptions options);
    public IEnumerable`1<ContentRange> Find(string text);
    public IEnumerable`1<ContentRange> Find(Regex regex);
    [ComVisibleAttribute("True")]
public void Replace(string oldValue, string newValue);
    [ComVisibleAttribute("False")]
public void Replace(string oldValue, string newValue, CharacterFormat format);
    [ComVisibleAttribute("False")]
public void Replace(Regex regex, string replacement);
    [ComVisibleAttribute("False")]
public void Replace(Regex regex, string replacement, CharacterFormat format);
    private void (Regex , string , bool , CharacterFormat );
    [ComVisibleAttribute("False")]
public void Replace(Regex regex, ContentRangeEvaluator evaluator);
    private static void (Regex , ContentRange , ContentRangeEvaluator );
    private CharacterFormat ();
    public void SaveToClipboard(SaveOptions[] listOfOptions);
    public void SaveToClipboard(IEnumerable`1<SaveOptions> listOfOptions);
    private static void (DataObject , DocumentModel , SaveOptions );
    private static void (DocumentModel , SaveOptions , DataObject , TextDataFormat );
    public virtual string ToString();
    internal bool ();
    public IEnumerable`1<Element> GetChildElements();
    public IEnumerable`1<Element> GetChildElements(ElementType[] filterElements);
    public int CountWords();
    private sealed virtual override void lpt9fmgkxm2vql6d68umgmtsnn4hqs4t​ (int ,   & ,   & );
    private sealed virtual override object lpt9fmgkxm2vql6d68umgmtsnn4hqs4t​ ();
    private sealed virtual override object lpt9fmgkxm2vql6d68umgmtsnn4hqs4t​ (bool );
    [ObsoleteAttribute("Use 'GemBox.Document.ContentRange.LoadText(System.String)' instead.")]
[EditorBrowsableAttribute("1")]
public ContentRange Set(string text);
    [ObsoleteAttribute("Use 'GemBox.Document.ContentRange.LoadText(System.String, GemBox.Document.CharacterFormat)' instead.")]
[EditorBrowsableAttribute("1")]
public ContentRange Set(string text, CharacterFormat format);
}
public class GemBox.Document.ContentRangeEvaluator : MulticastDelegate {
    public ContentRangeEvaluator(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual ContentRange Invoke(ContentRange range);
    public virtual IAsyncResult BeginInvoke(ContentRange range, AsyncCallback callback, object object);
    public virtual ContentRange EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class GemBox.Document.CustomDocumentPropertiesDictionary : DictionaryBase`2<string, object> {
    [DebuggerBrowsableAttribute("0")]
private IDictionary`2<string, string> ;
    public IDictionary`2<string, string> LinkedSources { get; }
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_LinkedSources();
    protected virtual void ValidateBeforeAdd(string key, object value);
    private void (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.CustomMarkups.BlockContentControl : Block {
    [DebuggerBrowsableAttribute("0")]
private BlockCollection ;
    [DebuggerBrowsableAttribute("0")]
private ContentControlProperties ;
    [DebuggerBrowsableAttribute("0")]
private object ;
    [DebuggerBrowsableAttribute("0")]
private ContentControlType ;
    public ContentControlProperties Properties { get; }
    public BlockCollection Blocks { get; }
    public ContentControlType ContentControlType { get; }
    public ElementType ElementType { get; }
    [DebuggerBrowsableAttribute("0")]
private IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.Content { get; }
    internal BlockContentControl(DocumentModel );
    public BlockContentControl(DocumentModel document, ContentControlType contentControlType);
    public BlockContentControl(DocumentModel document, ContentControlType contentControlType, IEnumerable`1<Block> items);
    public BlockContentControl(DocumentModel document, ContentControlType contentControlType, Block[] items);
    internal object ();
    internal void (object );
    public sealed virtual ContentControlProperties get_Properties();
    internal void (ContentControlProperties );
    public BlockCollection get_Blocks();
    [CompilerGeneratedAttribute]
public sealed virtual ContentControlType get_ContentControlType();
    internal void (ContentControlType );
    public virtual ElementType get_ElementType();
    public sealed virtual void Update();
    public sealed virtual void UpdateSource();
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
    [IteratorStateMachineAttribute("GemBox.Document.CustomMarkups.BlockContentControl/")]
internal virtual IEnumerable`1<ElementType> p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (ElementCollection );
    [IteratorStateMachineAttribute("GemBox.Document.CustomMarkups.BlockContentControl/")]
private sealed virtual override IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.get_Content();
    private sealed virtual override object vbw7lmk3ab882l875fxsv5wbwj9pye32​ ();
    private sealed virtual override void vbw7lmk3ab882l875fxsv5wbwj9pye32​ (string , CharacterFormat , bool );
    private sealed virtual override bool vbw7lmk3ab882l875fxsv5wbwj9pye32​ (string );
    private sealed virtual override bool vbw7lmk3ab882l875fxsv5wbwj9pye32​ ();
}
public enum GemBox.Document.CustomMarkups.CalendarType : Enum {
    public int value__;
    public static CalendarType Gregorian;
    public static CalendarType GregorianArabic;
    public static CalendarType GregorianEnglish;
    public static CalendarType GregorianMiddleEastFrench;
    public static CalendarType GregorianTransliteratedEnglish;
    public static CalendarType GregorianTransliteratedFrench;
    public static CalendarType Hebrew;
    public static CalendarType Hijri;
    public static CalendarType Japan;
    public static CalendarType Korean;
    public static CalendarType Saka;
    public static CalendarType Taiwan;
    public static CalendarType Thai;
    public static CalendarType None;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.CustomMarkups.CheckBoxSymbol : object {
    [DebuggerBrowsableAttribute("0")]
private char ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    public char Character { get; public set; }
    public string FontName { get; public set; }
    internal CheckBoxSymbol(char , string );
    [CompilerGeneratedAttribute]
public char get_Character();
    [CompilerGeneratedAttribute]
public void set_Character(char value);
    [CompilerGeneratedAttribute]
public string get_FontName();
    [CompilerGeneratedAttribute]
public void set_FontName(string value);
    internal CheckBoxSymbol ();
}
public enum GemBox.Document.CustomMarkups.ContentControlDisplayMode : Enum {
    public int value__;
    public static ContentControlDisplayMode BoundingBox;
    public static ContentControlDisplayMode StartEndTag;
    public static ContentControlDisplayMode None;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.CustomMarkups.ContentControlListItem : object {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    public string DisplayName { get; public set; }
    public string Value { get; public set; }
    public ContentControlListItem(string displayName);
    public ContentControlListItem(string displayName, string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    internal ContentControlListItem ();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class GemBox.Document.CustomMarkups.ContentControlProperties : object {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int> ;
    [DebuggerBrowsableAttribute("0")]
private ContentControlDisplayMode ;
    [DebuggerBrowsableAttribute("0")]
private Color ;
    [DebuggerBrowsableAttribute("0")]
private CharacterFormat ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private XmlMapping  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private CheckBoxSymbol  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private CheckBoxSymbol  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private IList`1<ContentControlListItem>  ;
    [DebuggerBrowsableAttribute("0")]
private DateTime  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private CultureInfo  ;
    [DebuggerBrowsableAttribute("0")]
private CalendarType  ;
    [DebuggerBrowsableAttribute("0")]
private DateStorageFormat  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
internal     { get; internal set; }
    public string Title { get; public set; }
    public string Tag { get; public set; }
    public Nullable`1<int> Id { get; public set; }
    public ContentControlDisplayMode DisplayMode { get; public set; }
    public Color Color { get; public set; }
    public CharacterFormat CharacterFormat { get; public set; }
    public bool RemoveWhenEdited { get; public set; }
    public bool LockEditing { get; public set; }
    public bool LockDeleting { get; public set; }
    public XmlMapping XmlMapping { get; public set; }
    public bool Multiline { get; public set; }
    public string Gallery { get; public set; }
    public string Category { get; public set; }
    public bool Unique { get; public set; }
    public bool Checked { get; public set; }
    [NullableAttribute("1")]
public CheckBoxSymbol CheckedSymbol { get; private set; }
    [NullableAttribute("1")]
public CheckBoxSymbol UncheckedSymbol { get; private set; }
    [NullableAttribute("1")]
public IList`1<ContentControlListItem> ListItems { get; private set; }
    public ContentControlListItem SelectedListItem { get; public set; }
    public DateTime Date { get; public set; }
    public string DateDisplayFormat { get; public set; }
    public CultureInfo DateLocale { get; public set; }
    public CalendarType DateCalendarType { get; public set; }
    public DateStorageFormat DateStorageFormat { get; public set; }
    public bool LockAddDeleteSection { get; public set; }
    public string SectionTitle { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
internal     { get; internal set; }
    public bool IsShowingPlaceholderText { get; public set; }
    public string PlaceholderText { get; public set; }
    [NullableContextAttribute("1")]
internal ContentControlProperties(   );
    [NullableContextAttribute("1")]
internal    ();
    [NullableContextAttribute("1")]
internal void (   );
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Tag();
    [CompilerGeneratedAttribute]
public void set_Tag(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public ContentControlDisplayMode get_DisplayMode();
    [CompilerGeneratedAttribute]
public void set_DisplayMode(ContentControlDisplayMode value);
    [CompilerGeneratedAttribute]
public Color get_Color();
    [CompilerGeneratedAttribute]
public void set_Color(Color value);
    [CompilerGeneratedAttribute]
public CharacterFormat get_CharacterFormat();
    [CompilerGeneratedAttribute]
public void set_CharacterFormat(CharacterFormat value);
    [CompilerGeneratedAttribute]
public bool get_RemoveWhenEdited();
    [CompilerGeneratedAttribute]
public void set_RemoveWhenEdited(bool value);
    [CompilerGeneratedAttribute]
public bool get_LockEditing();
    [CompilerGeneratedAttribute]
public void set_LockEditing(bool value);
    [CompilerGeneratedAttribute]
public bool get_LockDeleting();
    [CompilerGeneratedAttribute]
public void set_LockDeleting(bool value);
    [CompilerGeneratedAttribute]
public XmlMapping get_XmlMapping();
    [CompilerGeneratedAttribute]
public void set_XmlMapping(XmlMapping value);
    [CompilerGeneratedAttribute]
public bool get_Multiline();
    [CompilerGeneratedAttribute]
public void set_Multiline(bool value);
    [CompilerGeneratedAttribute]
public string get_Gallery();
    [CompilerGeneratedAttribute]
public void set_Gallery(string value);
    [CompilerGeneratedAttribute]
public string get_Category();
    [CompilerGeneratedAttribute]
public void set_Category(string value);
    [CompilerGeneratedAttribute]
public bool get_Unique();
    [CompilerGeneratedAttribute]
public void set_Unique(bool value);
    internal void (bool );
    public bool get_Checked();
    public void set_Checked(bool value);
    [CompilerGeneratedAttribute]
[NullableContextAttribute("1")]
public CheckBoxSymbol get_CheckedSymbol();
    [NullableContextAttribute("1")]
private void (CheckBoxSymbol );
    [CompilerGeneratedAttribute]
[NullableContextAttribute("1")]
public CheckBoxSymbol get_UncheckedSymbol();
    [NullableContextAttribute("1")]
private void (CheckBoxSymbol );
    [CompilerGeneratedAttribute]
[NullableContextAttribute("1")]
public IList`1<ContentControlListItem> get_ListItems();
    [NullableContextAttribute("1")]
private void (IList`1<ContentControlListItem> );
    public ContentControlListItem get_SelectedListItem();
    public void set_SelectedListItem(ContentControlListItem value);
    internal void (DateTime );
    public DateTime get_Date();
    public void set_Date(DateTime value);
    [CompilerGeneratedAttribute]
public string get_DateDisplayFormat();
    [CompilerGeneratedAttribute]
public void set_DateDisplayFormat(string value);
    [CompilerGeneratedAttribute]
public CultureInfo get_DateLocale();
    [CompilerGeneratedAttribute]
public void set_DateLocale(CultureInfo value);
    [CompilerGeneratedAttribute]
public CalendarType get_DateCalendarType();
    [CompilerGeneratedAttribute]
public void set_DateCalendarType(CalendarType value);
    [CompilerGeneratedAttribute]
public DateStorageFormat get_DateStorageFormat();
    [CompilerGeneratedAttribute]
public void set_DateStorageFormat(DateStorageFormat value);
    [CompilerGeneratedAttribute]
public bool get_LockAddDeleteSection();
    [CompilerGeneratedAttribute]
public void set_LockAddDeleteSection(bool value);
    [CompilerGeneratedAttribute]
public string get_SectionTitle();
    [CompilerGeneratedAttribute]
public void set_SectionTitle(string value);
    [NullableContextAttribute("1")]
internal    ();
    [NullableContextAttribute("1")]
internal void (   );
    [CompilerGeneratedAttribute]
public bool get_IsShowingPlaceholderText();
    [CompilerGeneratedAttribute]
public void set_IsShowingPlaceholderText(bool value);
    public string get_PlaceholderText();
    public void set_PlaceholderText(string value);
    internal void ();
    internal void ();
    [NullableContextAttribute("1")]
internal ContentControlProperties ();
}
public enum GemBox.Document.CustomMarkups.ContentControlType : Enum {
    public int value__;
    public static ContentControlType RichText;
    public static ContentControlType PlainText;
    public static ContentControlType Picture;
    public static ContentControlType BuildingBlockGallery;
    public static ContentControlType CheckBox;
    public static ContentControlType ComboBox;
    public static ContentControlType DropDownList;
    public static ContentControlType Date;
    public static ContentControlType RepeatingSection;
    public static ContentControlType RepeatingSectionItem;
    public static ContentControlType Equation;
    public static ContentControlType Citation;
    public static ContentControlType Bibliography;
    public static ContentControlType DocPartObj;
    public static ContentControlType Group;
}
public enum GemBox.Document.CustomMarkups.DateStorageFormat : Enum {
    public int value__;
    public static DateStorageFormat Date;
    public static DateStorageFormat DateTime;
    public static DateStorageFormat Text;
}
[NullableContextAttribute("1")]
public interface GemBox.Document.CustomMarkups.IContentControl {
    public ContentControlProperties Properties { get; }
    public ContentControlType ContentControlType { get; }
    public DocumentModel Document { get; }
    public ContentRange Content { get; }
    public ElementType ElementType { get; }
    public ElementCollection ParentCollection { get; }
    public Element Parent { get; }
    public abstract virtual ContentControlProperties get_Properties();
    public abstract virtual ContentControlType get_ContentControlType();
    public abstract virtual DocumentModel get_Document();
    public abstract virtual ContentRange get_Content();
    public abstract virtual ElementType get_ElementType();
    public abstract virtual ElementCollection get_ParentCollection();
    public abstract virtual Element get_Parent();
    public abstract virtual void Update();
    public abstract virtual void UpdateSource();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.CustomMarkups.InlineContentControl : Inline {
    [DebuggerBrowsableAttribute("0")]
private InlineCollection ;
    [DebuggerBrowsableAttribute("0")]
private ContentControlProperties ;
    [DebuggerBrowsableAttribute("0")]
private object ;
    [DebuggerBrowsableAttribute("0")]
private ContentControlType ;
    public ContentControlProperties Properties { get; public set; }
    public InlineCollection Inlines { get; }
    public ContentControlType ContentControlType { get; }
    public ElementType ElementType { get; }
    [DebuggerBrowsableAttribute("0")]
private IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.Content { get; }
    internal InlineContentControl(DocumentModel );
    public InlineContentControl(DocumentModel document, ContentControlType contentControlType);
    public InlineContentControl(DocumentModel document, ContentControlType contentControlType, IEnumerable`1<Inline> items);
    public InlineContentControl(DocumentModel document, ContentControlType contentControlType, Inline[] items);
    internal object ();
    internal void (object );
    public sealed virtual ContentControlProperties get_Properties();
    public void set_Properties(ContentControlProperties value);
    public InlineCollection get_Inlines();
    [CompilerGeneratedAttribute]
public sealed virtual ContentControlType get_ContentControlType();
    internal void (ContentControlType );
    public virtual ElementType get_ElementType();
    public sealed virtual void Update();
    public sealed virtual void UpdateSource();
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
    [IteratorStateMachineAttribute("GemBox.Document.CustomMarkups.InlineContentControl/")]
internal virtual IEnumerable`1<ElementType> p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (ElementCollection );
    [IteratorStateMachineAttribute("GemBox.Document.CustomMarkups.InlineContentControl/")]
private sealed virtual override IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.get_Content();
    private sealed virtual override object 3pmkdry8bqlsm57nxhzhjrse8taqeg55​ ();
    private sealed virtual override void 3pmkdry8bqlsm57nxhzhjrse8taqeg55​ (string , CharacterFormat , bool );
    internal static void (string , CharacterFormat , InlineCollection , bool );
    private sealed virtual override bool 3pmkdry8bqlsm57nxhzhjrse8taqeg55​ (string );
    private sealed virtual override bool 3pmkdry8bqlsm57nxhzhjrse8taqeg55​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.CustomMarkups.XmlMapping : object {
    [DebuggerBrowsableAttribute("0")]
private static Regex ;
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<BuiltInDocumentProperty> ;
    public string PrefixMappings { get; public set; }
    public string XPath { get; public set; }
    public CustomXmlPart CustomXmlPart { get; public set; }
    public Nullable`1<BuiltInDocumentProperty> BuiltInDocumentProperty { get; }
    public XmlMapping(DocumentModel document);
    private static XmlMapping();
    [CompilerGeneratedAttribute]
public string get_PrefixMappings();
    [CompilerGeneratedAttribute]
public void set_PrefixMappings(string value);
    [CompilerGeneratedAttribute]
public string get_XPath();
    [CompilerGeneratedAttribute]
public void set_XPath(string value);
    public CustomXmlPart get_CustomXmlPart();
    public void set_CustomXmlPart(CustomXmlPart value);
    internal string ();
    internal void (string );
    [CompilerGeneratedAttribute]
public Nullable`1<BuiltInDocumentProperty> get_BuiltInDocumentProperty();
    internal void (Nullable`1<BuiltInDocumentProperty> );
    internal XmlMapping (DocumentModel );
    internal string ();
    internal void (string );
    private XmlNode ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.CustomXmlPart : object {
    [DebuggerBrowsableAttribute("0")]
private static Byte[] ;
    [DebuggerBrowsableAttribute("0")]
internal CustomXmlPartCollection ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private IList`1<string> ;
    public IList`1<string> Schemas { get; }
    [NullableAttribute("2")]
public string Id { get; public set; }
    public Byte[] Data { get; public set; }
    private CustomXmlPart(string , Byte[] , IEnumerable`1<string> );
    private static CustomXmlPart();
    [CompilerGeneratedAttribute]
public IList`1<string> get_Schemas();
    private void (IList`1<string> );
    [NullableContextAttribute("2")]
public string get_Id();
    [NullableContextAttribute("2")]
public void set_Id(string value);
    public Byte[] get_Data();
    public void set_Data(Byte[] value);
    internal CustomXmlPart ();
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class GemBox.Document.CustomXmlPartCollection : Collection`1<CustomXmlPart> {
    [NullableAttribute("2")]
public CustomXmlPart Item { get; }
    internal CustomXmlPartCollection(CustomXmlPartCollection );
    public CustomXmlPart get_Item(string id);
    protected virtual void InsertItem(int index, CustomXmlPart item);
    protected virtual void SetItem(int index, CustomXmlPart item);
    protected virtual void RemoveItem(int index);
    protected virtual void ClearItems();
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class GemBox.Document.DictionaryBase`2 : object {
    [DebuggerBrowsableAttribute("0")]
private IDictionary`2<TKey, TValue> ;
    [DebuggerBrowsableAttribute("0")]
private Action`1<TKey> ;
    protected bool IsReadOnly { get; }
    public int Count { get; }
    public ICollection`1<TKey> Keys { get; }
    public ICollection`1<TValue> Values { get; }
    public TValue Item { get; public set; }
    private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly { get; }
    internal DictionaryBase`2(IEqualityComparer`1<TKey> );
    private protected void (Action`1<TKey> );
    private protected void (Action`1<TKey> );
    protected bool get_IsReadOnly();
    public sealed virtual int get_Count();
    public sealed virtual ICollection`1<TKey> get_Keys();
    public sealed virtual ICollection`1<TValue> get_Values();
    public sealed virtual TValue get_Item(TKey key);
    public sealed virtual void set_Item(TKey key, TValue value);
    protected virtual void ValidateBeforeAdd(TKey key, TValue value);
    public sealed virtual void Add(TKey key, TValue value);
    public sealed virtual bool ContainsKey(TKey key);
    public sealed virtual bool Remove(TKey key);
    public sealed virtual bool TryGetValue(TKey key, TValue& value);
    public sealed virtual void Add(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int arrayIndex);
    public sealed virtual bool Remove(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator();
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class GemBox.Document.DigitalSignatureSaveOptions : object {
    [DebuggerBrowsableAttribute("0")]
private object ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private DrawingElement  ;
    [DebuggerBrowsableAttribute("0")]
private DrawingElement  ;
    public object Certificate { get; public set; }
    public Byte[] CertificateBytes { get; public set; }
    public string CertificatePath { get; public set; }
    public bool UseMachineKeySet { get; public set; }
    public string CertificatePassword { get; public set; }
    public string Reason { get; public set; }
    public DrawingElement SignatureLine { get; public set; }
    public DrawingElement Signature { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private protected object   { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private protected      { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private object   { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private object   { get; }
    public object get_Certificate();
    public void set_Certificate(object value);
    public Byte[] get_CertificateBytes();
    public void set_CertificateBytes(Byte[] value);
    public string get_CertificatePath();
    public void set_CertificatePath(string value);
    [CompilerGeneratedAttribute]
public bool get_UseMachineKeySet();
    [CompilerGeneratedAttribute]
public void set_UseMachineKeySet(bool value);
    [CompilerGeneratedAttribute]
public string get_CertificatePassword();
    [CompilerGeneratedAttribute]
public void set_CertificatePassword(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public DrawingElement get_SignatureLine();
    [CompilerGeneratedAttribute]
public void set_SignatureLine(DrawingElement value);
    [CompilerGeneratedAttribute]
public DrawingElement get_Signature();
    [CompilerGeneratedAttribute]
public void set_Signature(DrawingElement value);
    [NullableContextAttribute("1")]
private protected object ();
    [NullableContextAttribute("1")]
private protected     ();
    private protected int  ();
    private protected virtual void n34ly367ey84wm98cqed9ujs9erztndg​ ();
    [NullableContextAttribute("1")]
private sealed virtual override object n34ly367ey84wm98cqed9ujs9erztndg​ ();
    [NullableContextAttribute("1")]
private sealed virtual override object n34ly367ey84wm98cqed9ujs9erztndg​ ();
    private sealed virtual override X509KeyStorageFlags n34ly367ey84wm98cqed9ujs9erztndg​  ();
    private sealed virtual override bool n34ly367ey84wm98cqed9ujs9erztndg​ ();
    private sealed virtual override bool n34ly367ey84wm98cqed9ujs9erztndg​ ();
    private sealed virtual override bool n34ly367ey84wm98cqed9ujs9erztndg​ ();
    private sealed virtual override bool n34ly367ey84wm98cqed9ujs9erztndg​  ();
    [NullableContextAttribute("1")]
private sealed virtual override Byte[] n34ly367ey84wm98cqed9ujs9erztndg​ (Byte[] , string , object );
    [NullableContextAttribute("1")]
private sealed virtual override bool n34ly367ey84wm98cqed9ujs9erztndg​ (Byte[] , Byte[] , string , object );
}
public class GemBox.Document.DocLoadOptions : LoadOptions {
    internal virtual bool 7k4lmxmhj5tk8h83eglk6fss34tasuhn​ ();
    [NullableContextAttribute("1")]
internal virtual DocumentModel 7k4lmxmhj5tk8h83eglk6fss34tasuhn​ (Stream , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.DocumentModel : Element {
    [DebuggerBrowsableAttribute("0")]
internal int ;
    [DebuggerBrowsableAttribute("0")]
internal int ;
    [DebuggerBrowsableAttribute("0")]
internal int ;
    [DebuggerBrowsableAttribute("0")]
private SectionCollection ;
    [DebuggerBrowsableAttribute("0")]
private BookmarkCollection ;
    [DebuggerBrowsableAttribute("0")]
private CommentCollection ;
    [DebuggerBrowsableAttribute("0")]
private StyleCollection ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private ViewOptions  ;
    [DebuggerBrowsableAttribute("0")]
private HyphenationOptions  ;
    [DebuggerBrowsableAttribute("0")]
private RevisionOptions  ;
    [DebuggerBrowsableAttribute("0")]
private WriteProtection  ;
    [DebuggerBrowsableAttribute("0")]
private DocumentProtection  ;
    [DebuggerBrowsableAttribute("0")]
private DocumentSettings  ;
    [DebuggerBrowsableAttribute("0")]
private DocumentProperties  ;
    [DebuggerBrowsableAttribute("0")]
private MailMerge  ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
private VariablesDictionary  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private static HyphenationDictionaryCollection  ;
    [DebuggerBrowsableAttribute("0")]
private RevisionCollection  ;
    [DebuggerBrowsableAttribute("0")]
private object  ;
    [DebuggerBrowsableAttribute("0")]
private ImportMapping  ;
    [DebuggerBrowsableAttribute("0")]
internal      ;
    [DebuggerBrowsableAttribute("0")]
internal IDictionary`2<string, IEnumerable`1<string>>  ;
    [DebuggerBrowsableAttribute("0")]
private FontInfoCollection  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal VbaProject  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private CustomXmlPartCollection  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
public ElementType ElementType { get; }
    public static HyphenationDictionaryCollection HyphenationDictionaries { get; }
    public SectionCollection Sections { get; }
    public BookmarkCollection Bookmarks { get; }
    public CommentCollection Comments { get; }
    public StyleCollection Styles { get; }
    public DocumentProperties DocumentProperties { get; }
    public ViewOptions ViewOptions { get; public set; }
    public HyphenationOptions HyphenationOptions { get; public set; }
    public RevisionOptions RevisionOptions { get; public set; }
    public WriteProtection WriteProtection { get; public set; }
    public DocumentProtection Protection { get; public set; }
    public DocumentSettings Settings { get; public set; }
    public CharacterFormat DefaultCharacterFormat { get; public set; }
    public ParagraphFormat DefaultParagraphFormat { get; public set; }
    public MailMerge MailMerge { get; }
    public CustomXmlPartCollection CustomXmlParts { get; }
    public VariablesDictionary Variables { get; }
    public RevisionCollection Revisions { get; }
    public FontInfoCollection EmbeddedFonts { get; }
    public VbaProject VbaProject { get; }
    [DebuggerBrowsableAttribute("0")]
private IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.Content { get; }
    [ObsoleteAttribute("This property is obsolete and should not be used.", "True")]
[EditorBrowsableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
public string FileName { get; }
    private DocumentModel(DocumentModel );
    internal object ();
    internal void (object );
    internal ImportMapping ();
    internal void (ImportMapping );
    internal string ();
    private void (string );
    internal IEnumerable`1<string> (string );
    public virtual ElementType get_ElementType();
    internal    ();
    public static HyphenationDictionaryCollection get_HyphenationDictionaries();
    public SectionCollection get_Sections();
    public BookmarkCollection get_Bookmarks();
    public CommentCollection get_Comments();
    public StyleCollection get_Styles();
    public DocumentProperties get_DocumentProperties();
    public ViewOptions get_ViewOptions();
    public void set_ViewOptions(ViewOptions value);
    public HyphenationOptions get_HyphenationOptions();
    public void set_HyphenationOptions(HyphenationOptions value);
    public RevisionOptions get_RevisionOptions();
    public void set_RevisionOptions(RevisionOptions value);
    public WriteProtection get_WriteProtection();
    public void set_WriteProtection(WriteProtection value);
    public DocumentProtection get_Protection();
    public void set_Protection(DocumentProtection value);
    internal bool ();
    public DocumentSettings get_Settings();
    public void set_Settings(DocumentSettings value);
    internal bool ();
    public CharacterFormat get_DefaultCharacterFormat();
    public void set_DefaultCharacterFormat(CharacterFormat value);
    public ParagraphFormat get_DefaultParagraphFormat();
    public void set_DefaultParagraphFormat(ParagraphFormat value);
    public MailMerge get_MailMerge();
    [CompilerGeneratedAttribute]
public CustomXmlPartCollection get_CustomXmlParts();
    private void (CustomXmlPartCollection );
    public VariablesDictionary get_Variables();
    public RevisionCollection get_Revisions();
    public FontInfoCollection get_EmbeddedFonts();
    internal bool  ();
    internal string ();
    internal void (string );
    internal     ();
    internal void (   );
    internal     ();
    public VbaProject get_VbaProject();
    internal void (VbaProject );
    public static DocumentModel Load(Stream stream);
    public static DocumentModel Load(Stream stream, LoadOptions options);
    public static DocumentModel Load(string path);
    public static DocumentModel Load(string path, LoadOptions options);
    [ComVisibleAttribute("False")]
public void Save(Stream stream, SaveOptions options);
    [ComVisibleAttribute("False")]
public void Save(string path, SaveOptions options);
    [ComVisibleAttribute("True")]
public void Save(string path);
    [ComVisibleAttribute("False")]
public void Save(XmlWriter writer, HtmlSaveOptions options);
    [ComVisibleAttribute("False")]
public void Save(object httpResponse, string fileName);
    [ComVisibleAttribute("False")]
public void Save(object httpResponse, string fileName, SaveOptions options);
    public XpsDocument ConvertToXpsDocument(XpsSaveOptions options);
    public ImageSource ConvertToImageSource(ImageSaveOptions options);
    public void Print();
    [NullableContextAttribute("2")]
public void Print(string printerName);
    [NullableContextAttribute("2")]
public void Print(string printerName, PrintOptions options);
    public DocumentModelPaginator GetPaginator();
    public DocumentModelPaginator GetPaginator(PaginatorOptions options);
    internal DocumentModelPaginator (PaginatorOptions , ​  ,     , bool );
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    public DocumentModel Clone(bool cloneDescendants);
    [IteratorStateMachineAttribute("GemBox.Document.DocumentModel/")]
internal virtual IEnumerable`1<ElementType> p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (ElementCollection );
    [IteratorStateMachineAttribute("GemBox.Document.DocumentModel/")]
private sealed virtual override IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.get_Content();
    public T Import(T sourceElement, bool importDescendants);
    public T Import(T sourceElement, bool importDescendants, bool useDestinationStyles);
    public T Import(T sourceElement, bool importDescendants, ImportMapping importMapping);
    private static T (T , bool , ImportMapping );
    public IEnumerable`1<ListItem> CalculateListItems();
    internal     (bool );
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
    private sealed virtual override bool lvzl9reca59qbaks6uwunp27t6gzq994​ (Func`2<   , U> , U& );
    private sealed virtual override     lvzl9reca59qbaks6uwunp27t6gzq994​  ();
    private sealed virtual override void lvzl9reca59qbaks6uwunp27t6gzq994​ (    );
    private sealed virtual override  ​ <   > lvzl9reca59qbaks6uwunp27t6gzq994​  ();
    private sealed virtual override bool lvzl9reca59qbaks6uwunp27t6gzq994​ (Func`2<   , U> , U& );
    private sealed virtual override     lvzl9reca59qbaks6uwunp27t6gzq994​  ();
    private sealed virtual override void lvzl9reca59qbaks6uwunp27t6gzq994​ (    );
    private sealed virtual override  ​ <   > lvzl9reca59qbaks6uwunp27t6gzq994​  ();
    private sealed virtual override DocumentModel lvzl9reca59qbaks6uwunp27t6gzq994​  ();
    private sealed virtual override ElementCollection lvzl9reca59qbaks6uwunp27t6gzq994​  ();
    private sealed virtual override    lvzl9reca59qbaks6uwunp27t6gzq994​  ();
    public string get_FileName();
    private    (string , bool , bool , int ,    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.DocumentModelPage : object {
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private FrameworkElement ;
    [DebuggerBrowsableAttribute("0")]
private  ​  ;
    [DebuggerBrowsableAttribute("0")]
private MultiContentRange ;
    public double Width { get; }
    public double Height { get; }
    public FrameworkElement PageContent { get; }
    public MultiContentRange Range { get; }
    internal DocumentModelPage(   , int );
    public double get_Width();
    public double get_Height();
    public FrameworkElement get_PageContent();
    public MultiContentRange get_Range();
    public FloatingLayout GetElementLayout(Element element);
    public DocumentModel ConvertToDocument();
    public void Save(Stream stream, SaveOptions options);
    public void Save(string path, SaveOptions options);
    public void Save(string path);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.DocumentModelPaginator : object {
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<Type, object> ;
    [DebuggerBrowsableAttribute("0")]
private ReadOnlyCollection`1<DocumentModelPage> ;
    public ReadOnlyCollection`1<DocumentModelPage> Pages { get; }
    internal DocumentModelPaginator(DocumentModel ,    , Dictionary`2<Type, object> );
    public ReadOnlyCollection`1<DocumentModelPage> get_Pages();
    public DocumentModelPaginator GetRange(int pageNumber, int pageCount);
    public void Save(Stream stream, SaveOptions options);
    public void Save(string path, SaveOptions options);
    public void Save(string path);
    public DocumentModel ConvertToDocument();
    public XpsDocument ConvertToXpsDocument(XpsSaveOptions options);
    public ImageSource ConvertToImageSource(ImageSaveOptions options);
    public void Print();
    [NullableContextAttribute("2")]
public void Print(string printerName);
    [NullableContextAttribute("2")]
public void Print(string printerName, PrintOptions options);
    private void (string , PrintOptions );
    internal Dictionary`2<Type, object> ();
    private sealed virtual override    dca75czcds9lmgv2y95q5srjljs9plta​ ();
    private sealed virtual override int dca75czcds9lmgv2y95q5srjljs9plta​ ();
    private sealed virtual override  ​ dca75czcds9lmgv2y95q5srjljs9plta​ ();
    private sealed virtual override int dca75czcds9lmgv2y95q5srjljs9plta​ ();
    private sealed virtual override    dca75czcds9lmgv2y95q5srjljs9plta​ ();
    private sealed virtual override     dca75czcds9lmgv2y95q5srjljs9plta​ (int );
    private sealed virtual override     dca75czcds9lmgv2y95q5srjljs9plta​ (int , object );
    private sealed virtual override void dca75czcds9lmgv2y95q5srjljs9plta​ (int , object , object );
    private sealed virtual override    dca75czcds9lmgv2y95q5srjljs9plta​ (int ,    );
    private sealed virtual override object dca75czcds9lmgv2y95q5srjljs9plta​ (Type );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.DocumentProperties : object {
    [DebuggerBrowsableAttribute("0")]
private BuiltInDocumentPropertiesDictionary ;
    [DebuggerBrowsableAttribute("0")]
private CustomDocumentPropertiesDictionary ;
    public BuiltInDocumentPropertiesDictionary BuiltIn { get; }
    public CustomDocumentPropertiesDictionary Custom { get; }
    public BuiltInDocumentPropertiesDictionary get_BuiltIn();
    public CustomDocumentPropertiesDictionary get_Custom();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.DocumentProtection : object {
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private EditingRestrictionType ;
    [DebuggerBrowsableAttribute("0")]
private  ;
    public bool LimitFormatting { get; public set; }
    public bool EnforceEditingRestriction { get; public set; }
    public EditingRestrictionType EditingRestriction { get; public set; }
    public bool HasPassword { get; }
    internal DocumentModel ();
    internal void (DocumentModel );
    [CompilerGeneratedAttribute]
public bool get_LimitFormatting();
    [CompilerGeneratedAttribute]
public void set_LimitFormatting(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnforceEditingRestriction();
    [CompilerGeneratedAttribute]
public void set_EnforceEditingRestriction(bool value);
    [CompilerGeneratedAttribute]
public EditingRestrictionType get_EditingRestriction();
    [CompilerGeneratedAttribute]
public void set_EditingRestriction(EditingRestrictionType value);
    internal  ();
    internal void ( );
    public bool get_HasPassword();
    internal bool ();
    [NullableContextAttribute("2")]
public void SetPassword(string password);
    [NullableContextAttribute("2")]
public void StartEnforcingProtection(EditingRestrictionType editingRestriction, string password);
    public void StopProtection();
    internal DocumentProtection ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.DocumentSettings : object {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private NoteSettings  ;
    [DebuggerBrowsableAttribute("0")]
private NoteSettings  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    public bool TrackRevisions { get; public set; }
    [NullableAttribute("2")]
public string AttachedTemplate { get; public set; }
    public bool UpdateStylesOnOpen { get; public set; }
    public NoteSettings Footnote { get; }
    public NoteSettings Endnote { get; }
    public bool MirrorPageMargins { get; public set; }
    public bool BookFoldPrinting { get; public set; }
    public bool BookFoldPrintingReverse { get; public set; }
    public int BookFoldPrintingSheets { get; public set; }
    public bool TwoPagesOnOne { get; public set; }
    public double DefaultTabStop { get; public set; }
    public bool DoNotExpandShiftReturn { get; public set; }
    public int CompatibilityMode { get; public set; }
    public string DecimalSeparator { get; public set; }
    [ObsoleteAttribute("Use 'GemBox.Document.DocumentSettings.MirrorPageMargins' property instead.")]
[EditorBrowsableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
public bool MirrorPageMarings { get; public set; }
    private DocumentSettings(DocumentSettings );
    private DocumentSettings(DocumentSettings , DocumentModel );
    internal bool ();
    internal void (bool );
    internal bool ();
    internal void (bool );
    [CompilerGeneratedAttribute]
public bool get_TrackRevisions();
    [CompilerGeneratedAttribute]
public void set_TrackRevisions(bool value);
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public string get_AttachedTemplate();
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public void set_AttachedTemplate(string value);
    [CompilerGeneratedAttribute]
public bool get_UpdateStylesOnOpen();
    [CompilerGeneratedAttribute]
public void set_UpdateStylesOnOpen(bool value);
    [CompilerGeneratedAttribute]
public NoteSettings get_Footnote();
    private void (NoteSettings );
    [CompilerGeneratedAttribute]
public NoteSettings get_Endnote();
    private void (NoteSettings );
    [CompilerGeneratedAttribute]
public bool get_MirrorPageMargins();
    [CompilerGeneratedAttribute]
public void set_MirrorPageMargins(bool value);
    [CompilerGeneratedAttribute]
public bool get_BookFoldPrinting();
    [CompilerGeneratedAttribute]
public void set_BookFoldPrinting(bool value);
    [CompilerGeneratedAttribute]
public bool get_BookFoldPrintingReverse();
    [CompilerGeneratedAttribute]
public void set_BookFoldPrintingReverse(bool value);
    [CompilerGeneratedAttribute]
public int get_BookFoldPrintingSheets();
    [CompilerGeneratedAttribute]
public void set_BookFoldPrintingSheets(int value);
    [CompilerGeneratedAttribute]
public bool get_TwoPagesOnOne();
    [CompilerGeneratedAttribute]
public void set_TwoPagesOnOne(bool value);
    internal bool ();
    internal void (bool );
    internal bool ();
    internal void (bool );
    internal bool ();
    internal void (bool );
    internal DocumentModel  ();
    internal void (DocumentModel );
    internal bool ();
    internal void (bool );
    public double get_DefaultTabStop();
    public void set_DefaultTabStop(double value);
    [CompilerGeneratedAttribute]
public bool get_DoNotExpandShiftReturn();
    [CompilerGeneratedAttribute]
public void set_DoNotExpandShiftReturn(bool value);
    internal bool ();
    internal void (bool );
    [CompilerGeneratedAttribute]
public int get_CompatibilityMode();
    [CompilerGeneratedAttribute]
public void set_CompatibilityMode(int value);
    public string get_DecimalSeparator();
    public void set_DecimalSeparator(string value);
    public DocumentSettings Clone();
    public DocumentSettings Clone(DocumentModel destinationDocument);
    public bool get_MirrorPageMarings();
    public void set_MirrorPageMarings(bool value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class GemBox.Document.DocxDigitalSignatureSaveOptions : DigitalSignatureSaveOptions {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private DigitalSignatureCommitmentType ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private IList`1<Certificate>  ;
    public bool IsAdvancedElectronicSignature { get; public set; }
    public DigitalSignatureCommitmentType CommitmentType { get; public set; }
    public string SignerRole { get; public set; }
    public string Address { get; public set; }
    public string Address2 { get; public set; }
    public string City { get; public set; }
    public string State { get; public set; }
    public string PostalCode { get; public set; }
    public string Country { get; public set; }
    [NullableAttribute("1")]
public IList`1<Certificate> Certificates { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
internal     { get; }
    [CompilerGeneratedAttribute]
public bool get_IsAdvancedElectronicSignature();
    [CompilerGeneratedAttribute]
public void set_IsAdvancedElectronicSignature(bool value);
    [CompilerGeneratedAttribute]
public DigitalSignatureCommitmentType get_CommitmentType();
    [CompilerGeneratedAttribute]
public void set_CommitmentType(DigitalSignatureCommitmentType value);
    [CompilerGeneratedAttribute]
public string get_SignerRole();
    [CompilerGeneratedAttribute]
public void set_SignerRole(string value);
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
    [CompilerGeneratedAttribute]
public string get_Address2();
    [CompilerGeneratedAttribute]
public void set_Address2(string value);
    [CompilerGeneratedAttribute]
public string get_City();
    [CompilerGeneratedAttribute]
public void set_City(string value);
    [CompilerGeneratedAttribute]
public string get_State();
    [CompilerGeneratedAttribute]
public void set_State(string value);
    [CompilerGeneratedAttribute]
public string get_PostalCode();
    [CompilerGeneratedAttribute]
public void set_PostalCode(string value);
    [CompilerGeneratedAttribute]
public string get_Country();
    [CompilerGeneratedAttribute]
public void set_Country(string value);
    [CompilerGeneratedAttribute]
[NullableContextAttribute("1")]
public IList`1<Certificate> get_Certificates();
    [NullableContextAttribute("1")]
internal    ();
    [IteratorStateMachineAttribute("GemBox.Document.DocxDigitalSignatureSaveOptions/")]
[NullableContextAttribute("1")]
private IEnumerable`1<  > (   );
}
public enum GemBox.Document.DocxFormat : Enum {
    public int value__;
    public static DocxFormat Docx;
    public static DocxFormat Docm;
    public static DocxFormat Dotx;
    public static DocxFormat Dotm;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.DocxLoadOptions : LoadOptions {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private EventHandler`1<OperationProgressChangedEventArgs> ;
    [NullableAttribute("2")]
public string Password { get; public set; }
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public string get_Password();
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public void add_ProgressChanged(EventHandler`1<OperationProgressChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_ProgressChanged(EventHandler`1<OperationProgressChangedEventArgs> value);
    internal EventHandler`1<OperationProgressChangedEventArgs> ();
    public static bool IsEncrypted(string path);
    public static bool IsEncrypted(Stream stream);
    internal virtual bool 7k4lmxmhj5tk8h83eglk6fss34tasuhn​ ();
    internal virtual DocumentModel 7k4lmxmhj5tk8h83eglk6fss34tasuhn​ (Stream , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.DocxSaveOptions : SaveOptions {
    [DebuggerBrowsableAttribute("0")]
private DocxFormat ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private EventHandler`1<OperationProgressChangedEventArgs> ;
    [DebuggerBrowsableAttribute("0")]
private IList`1<DocxDigitalSignatureSaveOptions> ;
    public DocxFormat Format { get; public set; }
    [NullableAttribute("2")]
public string Password { get; public set; }
    public int ImageDpi { get; public set; }
    public IList`1<DocxDigitalSignatureSaveOptions> DigitalSignatures { get; }
    public string ContentType { get; }
    [CompilerGeneratedAttribute]
public DocxFormat get_Format();
    [CompilerGeneratedAttribute]
public void set_Format(DocxFormat value);
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public string get_Password();
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public int get_ImageDpi();
    [CompilerGeneratedAttribute]
public void set_ImageDpi(int value);
    [CompilerGeneratedAttribute]
public void add_ProgressChanged(EventHandler`1<OperationProgressChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_ProgressChanged(EventHandler`1<OperationProgressChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public IList`1<DocxDigitalSignatureSaveOptions> get_DigitalSignatures();
    internal virtual void 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ (DocumentModel , Stream , string );
    public virtual string get_ContentType();
    internal virtual bool 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Drawing.Brush : object {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    public bool IsEmpty { get; }
    internal Brush( );
    internal  ();
    private void ( );
    internal    ();
    internal void (   );
    internal virtual Color yadjc6t8nyxlm35mx8quun4zaux2kjyh​ ();
    public bool get_IsEmpty();
    public SolidColorBrush SetSolid(Color color);
    public SolidColorBrush SetSolid(Color color, byte opacity);
    public Brush SetEmpty();
    public Brush SetDefault();
    internal virtual Brush yadjc6t8nyxlm35mx8quun4zaux2kjyh​ ();
    public sealed virtual string ToString();
    protected virtual string ToStringCore();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Drawing.Canvas : Shape {
    [DebuggerBrowsableAttribute("0")]
private    ;
    public ElementType ElementType { get; }
    public IEnumerable`1<DrawingElement> Drawings { get; }
    [DebuggerBrowsableAttribute("0")]
private IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.Content { get; }
    internal Canvas(DocumentModel );
    public Canvas(DocumentModel document, Layout layout);
    public Canvas(DocumentModel document, Layout layout, IEnumerable`1<DrawingElement> items);
    public Canvas(DocumentModel document, Layout layout, DrawingElement[] items);
    internal    ();
    public virtual ElementType get_ElementType();
    [IteratorStateMachineAttribute("GemBox.Document.Drawing.Canvas/")]
internal virtual IEnumerable`1<ElementType> p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (ElementCollection );
    public IEnumerable`1<DrawingElement> get_Drawings();
    internal static bool (DrawingElement );
    internal bool (DrawingElement );
    public void Add(DrawingElement drawing);
    public void Remove(DrawingElement drawing);
    public Canvas Clone(bool cloneDescendants);
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
    [IteratorStateMachineAttribute("GemBox.Document.Drawing.Canvas/")]
private sealed virtual override IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.get_Content();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class GemBox.Document.Drawing.DrawingElement : Inline {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private Layout ;
    [DebuggerBrowsableAttribute("0")]
private DrawingMetadata ;
    [DebuggerBrowsableAttribute("0")]
private object ;
    [NullableAttribute("2")]
public Layout Layout { get; public set; }
    public CharacterFormat CharacterFormat { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal CharacterFormatRevision   { get; internal set; }
    public bool Hidden { get; public set; }
    public DrawingMetadata Metadata { get; }
    internal DrawingElement(DocumentModel );
    internal DrawingElement(DocumentModel , Layout );
    internal object ();
    internal void (object );
    [NullableContextAttribute("2")]
public Layout get_Layout();
    [NullableContextAttribute("2")]
public void set_Layout(Layout value);
    private sealed virtual override     zfvy346h4dvvrzpn2qf4e2leq2tffyxx​ ();
    private sealed virtual override void zfvy346h4dvvrzpn2qf4e2leq2tffyxx​ (    );
    private sealed virtual override  ​ <   > zfvy346h4dvvrzpn2qf4e2leq2tffyxx​ ();
    private sealed virtual override bool zfvy346h4dvvrzpn2qf4e2leq2tffyxx​ (Func`2<   , U> , U& );
    public CharacterFormat get_CharacterFormat();
    public void set_CharacterFormat(CharacterFormat value);
    [NullableContextAttribute("2")]
internal CharacterFormatRevision ();
    [NullableContextAttribute("2")]
internal void (CharacterFormatRevision );
    internal Size ();
    private double (PageSetup );
    private double (PageSetup );
    public bool get_Hidden();
    public void set_Hidden(bool value);
    public DrawingMetadata get_Metadata();
    internal void (DrawingMetadata );
    internal bool ();
    internal virtual Padding zfvy346h4dvvrzpn2qf4e2leq2tffyxx​ ();
    public DrawingElement Clone(bool cloneDescendants);
    [NullableContextAttribute("2")]
public FormattedDrawingElement FormatDrawing();
    [NullableContextAttribute("2")]
public FormattedDrawingElement FormatDrawing(PaginatorOptions options);
    [NullableContextAttribute("2")]
public FormattedDrawingElement FormatDrawing(double width, double height, LengthUnit unit);
    [NullableContextAttribute("2")]
public FormattedDrawingElement FormatDrawing(double width, double height, LengthUnit unit, PaginatorOptions options);
    private sealed virtual override    zfvy346h4dvvrzpn2qf4e2leq2tffyxx​  ();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class GemBox.Document.Drawing.DrawingMetadata : object {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public string Name { get; public set; }
    public string Description { get; public set; }
    public string Title { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    internal bool ();
    internal void (bool );
    internal bool ();
    [NullableContextAttribute("1")]
internal DrawingMetadata ();
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Drawing.FormattedDrawingElement : object {
    [DebuggerBrowsableAttribute("0")]
private DrawingElement ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<Type, object> ;
    [DebuggerBrowsableAttribute("0")]
private FrameworkElement ;
    public double Width { get; }
    public double Height { get; }
    public FrameworkElement Content { get; }
    internal FormattedDrawingElement(DrawingElement ,    , Dictionary`2<Type, object> );
    public double get_Width();
    public double get_Height();
    public FrameworkElement get_Content();
    public void Save(Stream stream, SaveOptions options);
    public void Save(string path, SaveOptions options);
    public void Save(string path);
    public void Save(object httpResponse, string fileName);
    public void Save(object httpResponse, string fileName, SaveOptions options);
    public void Print();
    [NullableContextAttribute("2")]
public void Print(string printerName);
    [NullableContextAttribute("2")]
public void Print(string printerName, PrintOptions options);
    private void (string , PrintOptions );
    private sealed virtual override    tqwtt2kc53dw74pemswgtvh3stujneyq​ ();
    private sealed virtual override int tqwtt2kc53dw74pemswgtvh3stujneyq​ ();
    private sealed virtual override  ​ tqwtt2kc53dw74pemswgtvh3stujneyq​ ();
    private sealed virtual override int tqwtt2kc53dw74pemswgtvh3stujneyq​ ();
    private sealed virtual override    tqwtt2kc53dw74pemswgtvh3stujneyq​ ();
    private sealed virtual override     tqwtt2kc53dw74pemswgtvh3stujneyq​ (int );
    private sealed virtual override     tqwtt2kc53dw74pemswgtvh3stujneyq​ (int , object );
    private sealed virtual override void tqwtt2kc53dw74pemswgtvh3stujneyq​ (int , object , object );
    private sealed virtual override    tqwtt2kc53dw74pemswgtvh3stujneyq​ (int ,    );
    private sealed virtual override object tqwtt2kc53dw74pemswgtvh3stujneyq​ (Type );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Drawing.Group : DrawingElement {
    [DebuggerBrowsableAttribute("0")]
private Brush ;
    [DebuggerBrowsableAttribute("0")]
private object ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public ElementType ElementType { get; }
    public Brush Fill { get; }
    public IEnumerable`1<DrawingElement> Drawings { get; }
    [DebuggerBrowsableAttribute("0")]
private IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.Content { get; }
    [ObsoleteAttribute("The internal implementation of Group layout was changed and this property has no longer any effect.")]
[EditorBrowsableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
public bool IsCustomSize { get; public set; }
    internal Group(DocumentModel );
    public Group(DocumentModel document, Layout layout);
    public Group(DocumentModel document, Layout layout, IEnumerable`1<DrawingElement> items);
    public Group(DocumentModel document, Layout layout, DrawingElement[] items);
    internal object ();
    internal void (object );
    internal    ();
    public virtual ElementType get_ElementType();
    public Brush get_Fill();
    internal void (Brush );
    public IEnumerable`1<DrawingElement> get_Drawings();
    public void Add(DrawingElement drawing);
    public void Remove(DrawingElement drawing);
    public Group Clone(bool cloneDescendants);
    private static bool (double );
    internal void (bool );
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
    [IteratorStateMachineAttribute("GemBox.Document.Drawing.Group/")]
internal virtual IEnumerable`1<ElementType> p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (ElementCollection );
    internal static bool (DrawingElement );
    internal bool (DrawingElement );
    internal virtual Padding zfvy346h4dvvrzpn2qf4e2leq2tffyxx​ ();
    [IteratorStateMachineAttribute("GemBox.Document.Drawing.Group/")]
private sealed virtual override IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.get_Content();
    private sealed virtual override Color 48bjq8pqwwufccfrkx83wamumvczyy3a​ ();
    private sealed virtual override void 48bjq8pqwwufccfrkx83wamumvczyy3a​ (Brush );
    [CompilerGeneratedAttribute]
public bool get_IsCustomSize();
    [CompilerGeneratedAttribute]
public void set_IsCustomSize(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Drawing.OnlineVideo : object {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public string EmbeddedHtml { get; public set; }
    public int Width { get; public set; }
    public int Height { get; public set; }
    public OnlineVideo(string embeddedHtml, int width, int height);
    [CompilerGeneratedAttribute]
public string get_EmbeddedHtml();
    [CompilerGeneratedAttribute]
public void set_EmbeddedHtml(string value);
    [CompilerGeneratedAttribute]
public int get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(int value);
    [CompilerGeneratedAttribute]
public int get_Height();
    [CompilerGeneratedAttribute]
public void set_Height(int value);
    internal OnlineVideo ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Drawing.Pen : object {
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private Brush ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> ;
    [DebuggerBrowsableAttribute("0")]
private object ;
    [DebuggerBrowsableAttribute("0")]
private PenCompoundType ;
    public Brush Fill { get; }
    public double Width { get; public set; }
    public PenCompoundType CompoundType { get; public set; }
    internal    ();
    internal void (   );
    internal object ();
    internal void (object );
    public Brush get_Fill();
    internal void (Brush );
    public double get_Width();
    public void set_Width(double value);
    [CompilerGeneratedAttribute]
public PenCompoundType get_CompoundType();
    [CompilerGeneratedAttribute]
public void set_CompoundType(PenCompoundType value);
    internal bool ();
    internal void (bool );
    internal bool ();
    internal Pen ();
    public virtual string ToString();
    private sealed virtual override void dw5wcgssv23d4y4g68ybff3lzwkxzdy3​ (Brush );
    private sealed virtual override Color dw5wcgssv23d4y4g68ybff3lzwkxzdy3​ ();
}
public enum GemBox.Document.Drawing.PenCompoundType : Enum {
    public int value__;
    public static PenCompoundType Simple;
    public static PenCompoundType Double;
    public static PenCompoundType ThickThin;
    public static PenCompoundType ThinThick;
    public static PenCompoundType Triple;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Drawing.PreservedDrawingElement : DrawingElement {
    public ElementType ElementType { get; }
    internal PreservedDrawingElement(DocumentModel );
    public virtual ElementType get_ElementType();
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Drawing.Shape : DrawingElement {
    [DebuggerBrowsableAttribute("0")]
private ShapeType ;
    [DebuggerBrowsableAttribute("0")]
private Brush ;
    [DebuggerBrowsableAttribute("0")]
private Brush ;
    [DebuggerBrowsableAttribute("0")]
private Pen ;
    [DebuggerBrowsableAttribute("0")]
private Pen ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private      ;
    [DebuggerBrowsableAttribute("0")]
private IDictionary`2<string, double>  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal       { get; internal set; }
    public ShapeType ShapeType { get; }
    public IDictionary`2<string, double> AdjustValues { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal string   { get; internal set; }
    public Brush Fill { get; }
    public Pen Outline { get; }
    [DebuggerBrowsableAttribute("0")]
protected Color DefaultFillColor { get; }
    [DebuggerBrowsableAttribute("0")]
protected double DefaultOutlineWidth { get; }
    [DebuggerBrowsableAttribute("0")]
protected Color DefaultOutlineColor { get; }
    public ElementType ElementType { get; }
    [DebuggerBrowsableAttribute("0")]
protected string DebuggerDisplay { get; }
    internal Shape(DocumentModel );
    public Shape(DocumentModel document, ShapeType shapeType, Layout layout);
    private protected virtual Color cjw9gdljmuaqz8q2wen98dkryjv5xh34​ ();
    private protected virtual Color cjw9gdljmuaqz8q2wen98dkryjv5xh34​ ();
    private protected virtual Color cjw9gdljmuaqz8q2wen98dkryjv5xh34​ ();
    private protected virtual Color cjw9gdljmuaqz8q2wen98dkryjv5xh34​ ();
    private protected virtual Color cjw9gdljmuaqz8q2wen98dkryjv5xh34​ ();
    internal bool  ();
    internal void (bool );
    internal bool  ();
    internal void (bool );
    internal     ();
    internal void (   );
    internal     ();
    internal void (   );
    internal     ();
    internal void (   );
    internal bool  ();
    internal void (bool );
    [NullableContextAttribute("2")]
internal      ();
    [NullableContextAttribute("2")]
internal void (    );
    public ShapeType get_ShapeType();
    internal void (ShapeType );
    [CompilerGeneratedAttribute]
public IDictionary`2<string, double> get_AdjustValues();
    internal void (IDictionary`2<string, double> );
    [NullableContextAttribute("2")]
internal string  ();
    [NullableContextAttribute("2")]
internal void (string );
    public Brush get_Fill();
    internal void (Brush );
    internal bool  ();
    internal Brush  ();
    internal void (Brush );
    internal Brush  ();
    internal Brush  ();
    public Pen get_Outline();
    internal void (Pen );
    internal bool  ();
    internal Pen  ();
    internal void (Pen );
    internal Pen  ();
    internal Pen  ();
    internal bool  ();
    protected virtual Color get_DefaultFillColor();
    protected virtual double get_DefaultOutlineWidth();
    protected virtual Color get_DefaultOutlineColor();
    public virtual ElementType get_ElementType();
    private    (ShapeType );
    protected virtual string get_DebuggerDisplay();
    protected static bool IsShapeTypeClosed(ShapeType shapeType);
    protected virtual void VerifyShapeType(ShapeType value);
    internal void (ShapeType );
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
    internal virtual Padding zfvy346h4dvvrzpn2qf4e2leq2tffyxx​ ();
    public Shape Clone(bool cloneDescendants);
    private sealed virtual override void cjw9gdljmuaqz8q2wen98dkryjv5xh34​ (Brush );
    private sealed virtual override Color cjw9gdljmuaqz8q2wen98dkryjv5xh34​ ();
    private sealed virtual override void cjw9gdljmuaqz8q2wen98dkryjv5xh34​ (Pen );
    private sealed virtual override double cjw9gdljmuaqz8q2wen98dkryjv5xh34​  ();
    private sealed virtual override Color cjw9gdljmuaqz8q2wen98dkryjv5xh34​ ();
}
internal enum GemBox.Document.Drawing.ShapeStyleFontReference : Enum {
    public int value__;
    [XEnumAttribute("none")]
public static ShapeStyleFontReference None;
    [XEnumAttribute("minor")]
public static ShapeStyleFontReference Minor;
    [XEnumAttribute("major")]
public static ShapeStyleFontReference Major;
}
public enum GemBox.Document.Drawing.ShapeType : Enum {
    public int value__;
    [DescriptionAttribute("None")]
[XEnumAttribute("")]
public static ShapeType None;
    [DescriptionAttribute("Straight Connector")]
[XEnumAttribute("line")]
public static ShapeType Line;
    [DescriptionAttribute("Elbow Connector")]
[XEnumAttribute("bentConnector3")]
public static ShapeType ElbowConnector;
    [DescriptionAttribute("Curved Connector")]
[XEnumAttribute("curvedConnector3")]
public static ShapeType CurvedConnector;
    [DescriptionAttribute("Rectangle")]
[XEnumAttribute("rect")]
public static ShapeType Rectangle;
    [DescriptionAttribute("Rounded Rectangle")]
[XEnumAttribute("roundRect")]
public static ShapeType RoundedRectangle;
    [DescriptionAttribute("Snip Single Corner Rectangle")]
[XEnumAttribute("snip1Rect")]
public static ShapeType SnipSingleCornerRectangle;
    [DescriptionAttribute("Snip Same Side Corner Rectangle")]
[XEnumAttribute("snip2SameRect")]
public static ShapeType SnipSameSideCornerRectangle;
    [DescriptionAttribute("Snip Diagonal Corner Rectangle")]
[XEnumAttribute("snip2DiagRect")]
public static ShapeType SnipDiagonalCornerRectangle;
    [DescriptionAttribute("Snip and Round Single Corner Rectangle")]
[XEnumAttribute("snipRoundRect")]
public static ShapeType SnipAndRoundSingleCornerRectangle;
    [DescriptionAttribute("Round Single Corner Rectangle")]
[XEnumAttribute("round1Rect")]
public static ShapeType RoundSingleCornerRectangle;
    [DescriptionAttribute("Round Same Side Corner Rectangle")]
[XEnumAttribute("round2SameRect")]
public static ShapeType RoundSameSideCornerRectangle;
    [DescriptionAttribute("Round Diagonal Corner Rectangle")]
[XEnumAttribute("round2DiagRect")]
public static ShapeType RoundDiagonalCornerRectangle;
    [DescriptionAttribute("Oval")]
[XEnumAttribute("ellipse")]
public static ShapeType Oval;
    [DescriptionAttribute("Isosceles Triangle")]
[XEnumAttribute("triangle")]
public static ShapeType IsoscelesTriangle;
    [DescriptionAttribute("Right Triangle")]
[XEnumAttribute("rtTriangle")]
public static ShapeType RightTriangle;
    [DescriptionAttribute("Parallelogram")]
[XEnumAttribute("parallelogram")]
public static ShapeType Parallelogram;
    [DescriptionAttribute("Trapezoid")]
[XEnumAttribute("trapezoid")]
public static ShapeType Trapezoid;
    [DescriptionAttribute("Diamond")]
[XEnumAttribute("diamond")]
public static ShapeType Diamond;
    [DescriptionAttribute("Regular Pentagon")]
[XEnumAttribute("pentagon")]
public static ShapeType RegularPentagon;
    [DescriptionAttribute("Hexagon")]
[XEnumAttribute("hexagon")]
public static ShapeType Hexagon;
    [DescriptionAttribute("Heptagon")]
[XEnumAttribute("heptagon")]
public static ShapeType Heptagon;
    [DescriptionAttribute("Octagon")]
[XEnumAttribute("octagon")]
public static ShapeType Octagon;
    [DescriptionAttribute("Decagon")]
[XEnumAttribute("decagon")]
public static ShapeType Decagon;
    [DescriptionAttribute("Dodecagon")]
[XEnumAttribute("dodecagon")]
public static ShapeType Dodecagon;
    [DescriptionAttribute("Pie")]
[XEnumAttribute("pie")]
public static ShapeType Pie;
    [DescriptionAttribute("Chord")]
[XEnumAttribute("chord")]
public static ShapeType Chord;
    [DescriptionAttribute("Teardrop")]
[XEnumAttribute("teardrop")]
public static ShapeType Teardrop;
    [DescriptionAttribute("Frame")]
[XEnumAttribute("frame")]
public static ShapeType Frame;
    [DescriptionAttribute("Half Frame")]
[XEnumAttribute("halfFrame")]
public static ShapeType HalfFrame;
    [DescriptionAttribute("L-Shape")]
[XEnumAttribute("corner")]
public static ShapeType LShape;
    [DescriptionAttribute("Diagonal Stripe")]
[XEnumAttribute("diagStripe")]
public static ShapeType DiagonalStripe;
    [DescriptionAttribute("Cross")]
[XEnumAttribute("plus")]
public static ShapeType Cross;
    [DescriptionAttribute("Plaque")]
[XEnumAttribute("plaque")]
public static ShapeType Plaque;
    [DescriptionAttribute("Can")]
[XEnumAttribute("can")]
public static ShapeType Can;
    [DescriptionAttribute("Cube")]
[XEnumAttribute("cube")]
public static ShapeType Cube;
    [DescriptionAttribute("Bevel")]
[XEnumAttribute("bevel")]
public static ShapeType Bevel;
    [DescriptionAttribute("Donut")]
[XEnumAttribute("donut")]
public static ShapeType Donut;
    [DescriptionAttribute(""No" Symbol")]
[XEnumAttribute("noSmoking")]
public static ShapeType NoSymbol;
    [DescriptionAttribute("Block Arc")]
[XEnumAttribute("blockArc")]
public static ShapeType BlockArc;
    [DescriptionAttribute("Folded Corner")]
[XEnumAttribute("foldedCorner")]
public static ShapeType FoldedCorner;
    [DescriptionAttribute("Smiley Face")]
[XEnumAttribute("smileyFace")]
public static ShapeType SmileyFace;
    [DescriptionAttribute("Heart")]
[XEnumAttribute("heart")]
public static ShapeType Heart;
    [DescriptionAttribute("Lightning Bolt")]
[XEnumAttribute("lightningBolt")]
public static ShapeType LightningBolt;
    [DescriptionAttribute("Sun")]
[XEnumAttribute("sun")]
public static ShapeType Sun;
    [DescriptionAttribute("Moon")]
[XEnumAttribute("moon")]
public static ShapeType Moon;
    [DescriptionAttribute("Cloud")]
[XEnumAttribute("cloud")]
public static ShapeType Cloud;
    [DescriptionAttribute("Arc")]
[XEnumAttribute("arc")]
public static ShapeType Arc;
    [DescriptionAttribute("Double Bracket")]
[XEnumAttribute("bracketPair")]
public static ShapeType DoubleBracket;
    [DescriptionAttribute("Double Brace")]
[XEnumAttribute("bracePair")]
public static ShapeType DoubleBrace;
    [DescriptionAttribute("Left Bracket")]
[XEnumAttribute("leftBracket")]
public static ShapeType LeftBracket;
    [DescriptionAttribute("Right Bracket")]
[XEnumAttribute("rightBracket")]
public static ShapeType RightBracket;
    [DescriptionAttribute("Left Brace")]
[XEnumAttribute("leftBrace")]
public static ShapeType LeftBrace;
    [DescriptionAttribute("Right Brace")]
[XEnumAttribute("rightBrace")]
public static ShapeType RightBrace;
    [DescriptionAttribute("Right Arrow")]
[XEnumAttribute("rightArrow")]
public static ShapeType RightArrow;
    [DescriptionAttribute("Left Arrow")]
[XEnumAttribute("leftArrow")]
public static ShapeType LeftArrow;
    [DescriptionAttribute("Up Arrow")]
[XEnumAttribute("upArrow")]
public static ShapeType UpArrow;
    [DescriptionAttribute("Down Arrow")]
[XEnumAttribute("downArrow")]
public static ShapeType DownArrow;
    [DescriptionAttribute("Left-Right Arrow")]
[XEnumAttribute("leftRightArrow")]
public static ShapeType LeftRightArrow;
    [DescriptionAttribute("Up-Down Arrow")]
[XEnumAttribute("upDownArrow")]
public static ShapeType UpDownArrow;
    [DescriptionAttribute("Quad Arrow")]
[XEnumAttribute("quadArrow")]
public static ShapeType QuadArrow;
    [DescriptionAttribute("Left-Right-Up Arrow")]
[XEnumAttribute("leftRightUpArrow")]
public static ShapeType LeftRightUpArrow;
    [DescriptionAttribute("Bent Arrow")]
[XEnumAttribute("bentArrow")]
public static ShapeType BentArrow;
    [DescriptionAttribute("U-Turn Arrow")]
[XEnumAttribute("uturnArrow")]
public static ShapeType UTurnArrow;
    [DescriptionAttribute("Left-Up Arrow")]
[XEnumAttribute("leftUpArrow")]
public static ShapeType LeftUpArrow;
    [DescriptionAttribute("Bent-Up Arrow")]
[XEnumAttribute("bentUpArrow")]
public static ShapeType BentUpArrow;
    [DescriptionAttribute("Curved Right Arrow")]
[XEnumAttribute("curvedRightArrow")]
public static ShapeType CurvedRightArrow;
    [DescriptionAttribute("Curved Left Arrow")]
[XEnumAttribute("curvedLeftArrow")]
public static ShapeType CurvedLeftArrow;
    [DescriptionAttribute("Curved Up Arrow")]
[XEnumAttribute("curvedUpArrow")]
public static ShapeType CurvedUpArrow;
    [DescriptionAttribute("Curved Down Arrow")]
[XEnumAttribute("curvedDownArrow")]
public static ShapeType CurvedDownArrow;
    [DescriptionAttribute("Striped Right Arrow")]
[XEnumAttribute("stripedRightArrow")]
public static ShapeType StripedRightArrow;
    [DescriptionAttribute("Notched Right Arrow")]
[XEnumAttribute("notchedRightArrow")]
public static ShapeType NotchedRightArrow;
    [DescriptionAttribute("Pentagon")]
[XEnumAttribute("homePlate")]
public static ShapeType Pentagon;
    [DescriptionAttribute("Chevron")]
[XEnumAttribute("chevron")]
public static ShapeType Chevron;
    [DescriptionAttribute("Right Arrow Callout")]
[XEnumAttribute("rightArrowCallout")]
public static ShapeType RightArrowCallout;
    [DescriptionAttribute("Down Arrow Callout")]
[XEnumAttribute("downArrowCallout")]
public static ShapeType DownArrowCallout;
    [DescriptionAttribute("Left Arrow Callout")]
[XEnumAttribute("leftArrowCallout")]
public static ShapeType LeftArrowCallout;
    [DescriptionAttribute("Up Arrow Callout")]
[XEnumAttribute("upArrowCallout")]
public static ShapeType UpArrowCallout;
    [DescriptionAttribute("Left-Right Arrow Callout")]
[XEnumAttribute("leftRightArrowCallout")]
public static ShapeType LeftRightArrowCallout;
    [DescriptionAttribute("Quad Arrow Callout")]
[XEnumAttribute("quadArrowCallout")]
public static ShapeType QuadArrowCallout;
    [DescriptionAttribute("Circular Arrow")]
[XEnumAttribute("circularArrow")]
public static ShapeType CircularArrow;
    [DescriptionAttribute("Plus")]
[XEnumAttribute("mathPlus")]
public static ShapeType Plus;
    [DescriptionAttribute("Minus")]
[XEnumAttribute("mathMinus")]
public static ShapeType Minus;
    [DescriptionAttribute("Multiply")]
[XEnumAttribute("mathMultiply")]
public static ShapeType Multiply;
    [DescriptionAttribute("Division")]
[XEnumAttribute("mathDivide")]
public static ShapeType Division;
    [DescriptionAttribute("Equal")]
[XEnumAttribute("mathEqual")]
public static ShapeType Equal;
    [DescriptionAttribute("Not Equal")]
[XEnumAttribute("mathNotEqual")]
public static ShapeType NotEqual;
    [DescriptionAttribute("Flowchart: Process")]
[XEnumAttribute("flowChartProcess")]
public static ShapeType FlowchartProcess;
    [DescriptionAttribute("Flowchart: Alternate Process")]
[XEnumAttribute("flowChartAlternateProcess")]
public static ShapeType FlowchartAlternateProcess;
    [DescriptionAttribute("Flowchart: Decision")]
[XEnumAttribute("flowChartDecision")]
public static ShapeType FlowchartDecision;
    [DescriptionAttribute("Flowchart: Data")]
[XEnumAttribute("flowChartInputOutput")]
public static ShapeType FlowchartData;
    [DescriptionAttribute("Flowchart: Predefined Process")]
[XEnumAttribute("flowChartPredefinedProcess")]
public static ShapeType FlowchartPredefinedProcess;
    [DescriptionAttribute("Flowchart: Internal Storage")]
[XEnumAttribute("flowChartInternalStorage")]
public static ShapeType FlowchartInternalStorage;
    [DescriptionAttribute("Flowchart: Document")]
[XEnumAttribute("flowChartDocument")]
public static ShapeType FlowchartDocument;
    [DescriptionAttribute("Flowchart: Multidocument")]
[XEnumAttribute("flowChartMultidocument")]
public static ShapeType FlowchartMultidocument;
    [DescriptionAttribute("Flowchart: Terminator")]
[XEnumAttribute("flowChartTerminator")]
public static ShapeType FlowchartTerminator;
    [DescriptionAttribute("Flowchart: Preparation")]
[XEnumAttribute("flowChartPreparation")]
public static ShapeType FlowchartPreparation;
    [DescriptionAttribute("Flowchart: Manual Input")]
[XEnumAttribute("flowChartManualInput")]
public static ShapeType FlowchartManualInput;
    [DescriptionAttribute("Flowchart: Manual Operation")]
[XEnumAttribute("flowChartManualOperation")]
public static ShapeType FlowchartManualOperation;
    [DescriptionAttribute("Flowchart: Connector")]
[XEnumAttribute("flowChartConnector")]
public static ShapeType FlowchartConnector;
    [DescriptionAttribute("Flowchart: Off-page Connector")]
[XEnumAttribute("flowChartOffpageConnector")]
public static ShapeType FlowchartOffPageConnector;
    [DescriptionAttribute("Flowchart: Card")]
[XEnumAttribute("flowChartPunchedCard")]
public static ShapeType FlowchartCard;
    [DescriptionAttribute("Flowchart: Punched Tape")]
[XEnumAttribute("flowChartPunchedTape")]
public static ShapeType FlowchartPunchedTape;
    [DescriptionAttribute("Flowchart: Summing Junction")]
[XEnumAttribute("flowChartSummingJunction")]
public static ShapeType FlowchartSummingJunction;
    [DescriptionAttribute("Flowchart: Or")]
[XEnumAttribute("flowChartOr")]
public static ShapeType FlowchartOr;
    [DescriptionAttribute("Flowchart: Collate")]
[XEnumAttribute("flowChartCollate")]
public static ShapeType FlowchartCollate;
    [DescriptionAttribute("Flowchart: Sort")]
[XEnumAttribute("flowChartSort")]
public static ShapeType FlowchartSort;
    [DescriptionAttribute("Flowchart: Extract")]
[XEnumAttribute("flowChartExtract")]
public static ShapeType FlowchartExtract;
    [DescriptionAttribute("Flowchart: Merge")]
[XEnumAttribute("flowChartMerge")]
public static ShapeType FlowchartMerge;
    [DescriptionAttribute("Flowchart: Stored Data")]
[XEnumAttribute("flowChartOnlineStorage")]
public static ShapeType FlowchartStoredData;
    [DescriptionAttribute("Flowchart: Delay")]
[XEnumAttribute("flowChartDelay")]
public static ShapeType FlowchartDelay;
    [DescriptionAttribute("Flowchart: Sequential Access Storage")]
[XEnumAttribute("flowChartMagneticTape")]
public static ShapeType FlowchartSequentialAccessStorage;
    [DescriptionAttribute("Flowchart: Magnetic Disk")]
[XEnumAttribute("flowChartMagneticDisk")]
public static ShapeType FlowchartMagneticDisk;
    [DescriptionAttribute("Flowchart: Direct Access Storage")]
[XEnumAttribute("flowChartMagneticDrum")]
public static ShapeType FlowchartDirectAccessStorage;
    [DescriptionAttribute("Flowchart: Display")]
[XEnumAttribute("flowChartDisplay")]
public static ShapeType FlowchartDisplay;
    [DescriptionAttribute("Explosion 1")]
[XEnumAttribute("irregularSeal1")]
public static ShapeType Explosion1;
    [DescriptionAttribute("Explosion 2")]
[XEnumAttribute("irregularSeal2")]
public static ShapeType Explosion2;
    [DescriptionAttribute("4-Point Star")]
[XEnumAttribute("star4")]
public static ShapeType Star4Point;
    [DescriptionAttribute("5-Point Star")]
[XEnumAttribute("star5")]
public static ShapeType Star5Point;
    [DescriptionAttribute("6-Point Star")]
[XEnumAttribute("star6")]
public static ShapeType Star6Point;
    [DescriptionAttribute("7-Point Star")]
[XEnumAttribute("star7")]
public static ShapeType Star7Point;
    [DescriptionAttribute("8-Point Star")]
[XEnumAttribute("star8")]
public static ShapeType Star8Point;
    [DescriptionAttribute("10-Point Star")]
[XEnumAttribute("star10")]
public static ShapeType Star10Point;
    [DescriptionAttribute("12-Point Star")]
[XEnumAttribute("star12")]
public static ShapeType Star12Point;
    [DescriptionAttribute("16-Point Star")]
[XEnumAttribute("star16")]
public static ShapeType Star16Point;
    [DescriptionAttribute("24-Point Star")]
[XEnumAttribute("star24")]
public static ShapeType Star24Point;
    [DescriptionAttribute("32-Point Star")]
[XEnumAttribute("star32")]
public static ShapeType Star32Point;
    [DescriptionAttribute("Up Ribbon")]
[XEnumAttribute("ribbon2")]
public static ShapeType UpRibbon;
    [DescriptionAttribute("Down Ribbon")]
[XEnumAttribute("ribbon")]
public static ShapeType DownRibbon;
    [DescriptionAttribute("Curved Up Ribbon")]
[XEnumAttribute("ellipseRibbon2")]
public static ShapeType CurvedUpRibbon;
    [DescriptionAttribute("Curved Down Ribbon")]
[XEnumAttribute("ellipseRibbon")]
public static ShapeType CurvedDownRibbon;
    [DescriptionAttribute("Vertical Scroll")]
[XEnumAttribute("verticalScroll")]
public static ShapeType VerticalScroll;
    [DescriptionAttribute("Horizontal Scroll")]
[XEnumAttribute("horizontalScroll")]
public static ShapeType HorizontalScroll;
    [DescriptionAttribute("Wave")]
[XEnumAttribute("wave")]
public static ShapeType Wave;
    [DescriptionAttribute("Double Wave")]
[XEnumAttribute("doubleWave")]
public static ShapeType DoubleWave;
    [DescriptionAttribute("Rectangular Callout")]
[XEnumAttribute("wedgeRectCallout")]
public static ShapeType RectangularCallout;
    [DescriptionAttribute("Rounded Rectangular Callout")]
[XEnumAttribute("wedgeRoundRectCallout")]
public static ShapeType RoundedRectangularCallout;
    [DescriptionAttribute("Oval Callout")]
[XEnumAttribute("wedgeEllipseCallout")]
public static ShapeType OvalCallout;
    [DescriptionAttribute("Cloud Callout")]
[XEnumAttribute("cloudCallout")]
public static ShapeType CloudCallout;
    [DescriptionAttribute("Line Callout 1")]
[XEnumAttribute("borderCallout1")]
public static ShapeType LineCallout1;
    [DescriptionAttribute("Line Callout 2")]
[XEnumAttribute("borderCallout2")]
public static ShapeType LineCallout2;
    [DescriptionAttribute("Line Callout 3")]
[XEnumAttribute("borderCallout3")]
public static ShapeType LineCallout3;
    [DescriptionAttribute("Line Callout 1 (Accent Bar)")]
[XEnumAttribute("accentCallout1")]
public static ShapeType LineCallout1AccentBar;
    [DescriptionAttribute("Line Callout 2 (Accent Bar)")]
[XEnumAttribute("accentCallout2")]
public static ShapeType LineCallout2AccentBar;
    [DescriptionAttribute("Line Callout 3 (Accent Bar)")]
[XEnumAttribute("accentCallout3")]
public static ShapeType LineCallout3AccentBar;
    [DescriptionAttribute("Line Callout 1 (No Border)")]
[XEnumAttribute("callout1")]
public static ShapeType LineCallout1NoBorder;
    [DescriptionAttribute("Line Callout 2 (No Border)")]
[XEnumAttribute("callout2")]
public static ShapeType LineCallout2NoBorder;
    [DescriptionAttribute("Line Callout 3 (No Border)")]
[XEnumAttribute("callout3")]
public static ShapeType LineCallout3NoBorder;
    [DescriptionAttribute("Line Callout 1 (Border and Accent Bar)")]
[XEnumAttribute("accentBorderCallout1")]
public static ShapeType LineCallout1BorderAndAccentBar;
    [DescriptionAttribute("Line Callout 2 (Border and Accent Bar)")]
[XEnumAttribute("accentBorderCallout2")]
public static ShapeType LineCallout2BorderAndAccentBar;
    [DescriptionAttribute("Line Callout 3 (Border and Accent Bar)")]
[XEnumAttribute("accentBorderCallout3")]
public static ShapeType LineCallout3BorderAndAccentBar;
    [DescriptionAttribute("Action Button: Back or Previous")]
[XEnumAttribute("actionButtonBackPrevious")]
public static ShapeType ActionButtonBackOrPrevious;
    [DescriptionAttribute("Action Button: Forward or Next")]
[XEnumAttribute("actionButtonForwardNext")]
public static ShapeType ActionButtonForwardOrNext;
    [DescriptionAttribute("Action Button: Beginning")]
[XEnumAttribute("actionButtonBeginning")]
public static ShapeType ActionButtonBeginning;
    [DescriptionAttribute("Action Button: End")]
[XEnumAttribute("actionButtonEnd")]
public static ShapeType ActionButtonEnd;
    [DescriptionAttribute("Action Button: Home")]
[XEnumAttribute("actionButtonHome")]
public static ShapeType ActionButtonHome;
    [DescriptionAttribute("Action Button: Information")]
[XEnumAttribute("actionButtonInformation")]
public static ShapeType ActionButtonInformation;
    [DescriptionAttribute("Action Button: Return")]
[XEnumAttribute("actionButtonReturn")]
public static ShapeType ActionButtonReturn;
    [DescriptionAttribute("Action Button: Movie")]
[XEnumAttribute("actionButtonMovie")]
public static ShapeType ActionButtonMovie;
    [DescriptionAttribute("Action Button: Document")]
[XEnumAttribute("actionButtonDocument")]
public static ShapeType ActionButtonDocument;
    [DescriptionAttribute("Action Button: Sound")]
[XEnumAttribute("actionButtonSound")]
public static ShapeType ActionButtonSound;
    [DescriptionAttribute("Action Button: Help")]
[XEnumAttribute("actionButtonHelp")]
public static ShapeType ActionButtonHelp;
    [DescriptionAttribute("Action Button: Custom")]
[XEnumAttribute("actionButtonBlank")]
public static ShapeType ActionButtonCustom;
    [DescriptionAttribute("Curved Connector 2")]
[XEnumAttribute("curvedConnector2")]
public static ShapeType CurvedConnector2;
    [DescriptionAttribute("Curved Connector 4")]
[XEnumAttribute("curvedConnector4")]
public static ShapeType CurvedConnector4;
    [DescriptionAttribute("Curved Connector 5")]
[XEnumAttribute("curvedConnector5")]
public static ShapeType CurvedConnector5;
    [DescriptionAttribute("Bent Connector 2")]
[XEnumAttribute("bentConnector2")]
public static ShapeType ElbowConnector2;
    [DescriptionAttribute("Bent Connector 4")]
[XEnumAttribute("bentConnector4")]
public static ShapeType ElbowConnector4;
    [DescriptionAttribute("Bent Connector 5")]
[XEnumAttribute("bentConnector5")]
public static ShapeType ElbowConnector5;
    [DescriptionAttribute("Line Inverse")]
[XEnumAttribute("lineInv")]
public static ShapeType LineInverse;
    [DescriptionAttribute("Straight Connector")]
[XEnumAttribute("straightConnector1")]
public static ShapeType StraightConnector;
    [DescriptionAttribute("Chart Plus")]
[XEnumAttribute("chartPlus")]
public static ShapeType ChartPlus;
    [DescriptionAttribute("Chart Star")]
[XEnumAttribute("chartStar")]
public static ShapeType ChartStar;
    [DescriptionAttribute("Chart X")]
[XEnumAttribute("chartX")]
public static ShapeType ChartX;
    [DescriptionAttribute("Corner Tabs")]
[XEnumAttribute("cornerTabs")]
public static ShapeType CornerTabs;
    [DescriptionAttribute("Funnel")]
[XEnumAttribute("funnel")]
public static ShapeType Funnel;
    [DescriptionAttribute("Gear 6")]
[XEnumAttribute("gear6")]
public static ShapeType Gear6;
    [DescriptionAttribute("Gear 9")]
[XEnumAttribute("gear9")]
public static ShapeType Gear9;
    [DescriptionAttribute("Non-Isosceles Trapezoid")]
[XEnumAttribute("nonIsoscelesTrapezoid")]
public static ShapeType NonIsoscelesTrapezoid;
    [DescriptionAttribute("Pie Wedge")]
[XEnumAttribute("pieWedge")]
public static ShapeType PieWedge;
    [DescriptionAttribute("Plaque Tabs")]
[XEnumAttribute("plaqueTabs")]
public static ShapeType PlaqueTabs;
    [DescriptionAttribute("Square Tabs")]
[XEnumAttribute("squareTabs")]
public static ShapeType SquareTabs;
    [DescriptionAttribute("Left Circular Arrow")]
[XEnumAttribute("leftCircularArrow")]
public static ShapeType LeftCircularArrow;
    [DescriptionAttribute("Left-Right Circular Arrow")]
[XEnumAttribute("leftRightCircularArrow")]
public static ShapeType LeftRightCircularArrow;
    [DescriptionAttribute("Swoosh Arrow")]
[XEnumAttribute("swooshArrow")]
public static ShapeType SwooshArrow;
    [DescriptionAttribute("Up-Down Arrow Callout")]
[XEnumAttribute("upDownArrowCallout")]
public static ShapeType UpDownArrowCallout;
    [DescriptionAttribute("Flowchart: Off-line Storage")]
[XEnumAttribute("flowChartOfflineStorage")]
public static ShapeType FlowchartOfflineStorage;
    [DescriptionAttribute("Left-Right Ribbon")]
[XEnumAttribute("leftRightRibbon")]
public static ShapeType LeftRightRibbon;
    [DescriptionAttribute("Custom")]
[XEnumAttribute("custom")]
public static ShapeType Custom;
    [DescriptionAttribute("Text Path")]
[XEnumAttribute("textPath")]
public static ShapeType TextPath;
    [DescriptionAttribute("Pentagon Arrow")]
[XEnumAttribute("pentagonArrow")]
public static ShapeType PentagonArrow;
}
public class GemBox.Document.Drawing.SolidColorBrush : Brush {
    [DebuggerBrowsableAttribute("0")]
private Color ;
    public Color Color { get; public set; }
    [CompilerGeneratedAttribute]
public Color get_Color();
    [CompilerGeneratedAttribute]
public void set_Color(Color value);
    internal virtual Color yadjc6t8nyxlm35mx8quun4zaux2kjyh​ ();
    [NullableContextAttribute("1")]
internal virtual Brush yadjc6t8nyxlm35mx8quun4zaux2kjyh​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Drawing.TextBoxFormat : object {
    [DebuggerBrowsableAttribute("0")]
internal static Padding ;
    [DebuggerBrowsableAttribute("0")]
private Padding ;
    [DebuggerBrowsableAttribute("0")]
private VerticalAlignment ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private TextAutoFit ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double> ;
    [DebuggerBrowsableAttribute("0")]
private TextDirection  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private object  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    public Padding InternalMargin { get; public set; }
    public VerticalAlignment VerticalAlignment { get; public set; }
    public bool WrapText { get; public set; }
    public TextAutoFit AutoFit { get; public set; }
    public double AutoFitShrinkTextFontScale { get; public set; }
    public double AutoFitShrinkTextLineSpaceReduction { get; public set; }
    public TextDirection TextDirection { get; public set; }
    private static TextBoxFormat();
    [CompilerGeneratedAttribute]
public Padding get_InternalMargin();
    [CompilerGeneratedAttribute]
public void set_InternalMargin(Padding value);
    [CompilerGeneratedAttribute]
public VerticalAlignment get_VerticalAlignment();
    [CompilerGeneratedAttribute]
public void set_VerticalAlignment(VerticalAlignment value);
    [CompilerGeneratedAttribute]
public bool get_WrapText();
    [CompilerGeneratedAttribute]
public void set_WrapText(bool value);
    [CompilerGeneratedAttribute]
public TextAutoFit get_AutoFit();
    [CompilerGeneratedAttribute]
public void set_AutoFit(TextAutoFit value);
    internal Nullable`1<double> ();
    internal void (Nullable`1<double> );
    internal Nullable`1<double> ();
    internal void (Nullable`1<double> );
    public double get_AutoFitShrinkTextFontScale();
    public void set_AutoFitShrinkTextFontScale(double value);
    public double get_AutoFitShrinkTextLineSpaceReduction();
    public void set_AutoFitShrinkTextLineSpaceReduction(double value);
    [CompilerGeneratedAttribute]
public TextDirection get_TextDirection();
    [CompilerGeneratedAttribute]
public void set_TextDirection(TextDirection value);
    internal bool ();
    internal void (bool );
    internal object ();
    internal void (object );
    internal bool ();
    internal void (bool );
    internal bool ();
    internal TextBoxFormat ();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Drawing.Transform : object {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public double Rotation { get; public set; }
    public bool FlipHorizontal { get; public set; }
    public bool FlipVertical { get; public set; }
    [CompilerGeneratedAttribute]
public double get_Rotation();
    [CompilerGeneratedAttribute]
public void set_Rotation(double value);
    [CompilerGeneratedAttribute]
public bool get_FlipHorizontal();
    [CompilerGeneratedAttribute]
public void set_FlipHorizontal(bool value);
    [CompilerGeneratedAttribute]
public bool get_FlipVertical();
    [CompilerGeneratedAttribute]
public void set_FlipVertical(bool value);
    public virtual string ToString();
    internal Transform ();
}
public enum GemBox.Document.EditingRestrictionType : Enum {
    public int value__;
    public static EditingRestrictionType None;
    public static EditingRestrictionType TrackedChanges;
    public static EditingRestrictionType Comments;
    public static EditingRestrictionType FillingForms;
    public static EditingRestrictionType NoChanges;
}
[DebuggerDisplayAttribute("{DebuggerDisplayValue,nq}")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class GemBox.Document.Element : object {
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
protected string DebuggerDisplay { get; }
    [DebuggerBrowsableAttribute("0")]
private string DebuggerDisplayValue { get; }
    public ContentRange Content { get; }
    public ElementType ElementType { get; }
    public DocumentModel Document { get; }
    [NullableAttribute("2")]
public ElementCollection ParentCollection { get; internal set; }
    [NullableAttribute("2")]
public Element Parent { get; }
    private protected Element(DocumentModel );
    protected virtual string get_DebuggerDisplay();
    private string get_DebuggerDisplayValue();
    public sealed virtual ContentRange get_Content();
    public abstract virtual ElementType get_ElementType();
    public virtual DocumentModel get_Document();
    internal Section ();
    [NullableContextAttribute("2")]
public sealed virtual ElementCollection get_ParentCollection();
    [NullableContextAttribute("2")]
internal void (ElementCollection );
    [NullableContextAttribute("2")]
public sealed virtual Element get_Parent();
    internal    ();
    internal bool ();
    internal Color ();
    protected virtual void OnParentChanged();
    [IteratorStateMachineAttribute("GemBox.Document.Element/")]
internal virtual IEnumerable`1<ElementType> p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (ElementCollection );
    internal abstract virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    public Element Clone(bool cloneDescendants);
    public IEnumerable`1<Element> GetChildElements(bool recursively);
    public IEnumerable`1<Element> GetChildElements(bool recursively, ElementType[] filterElements);
    public IEnumerable`1<Element> GetParentElements();
    public IEnumerable`1<Element> GetParentElements(ElementType[] filterElements);
    [IteratorStateMachineAttribute("GemBox.Document.Element/")]
internal IEnumerable`1<Element> (bool , ElementType[] );
    internal IEnumerable`1<Element> (Predicate`1<Element> );
    internal abstract virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
    internal bool (ElementCollection );
    internal bool (Element );
    private sealed virtual override object p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ ();
    private sealed virtual override object p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (bool );
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class GemBox.Document.ElementCollection : object {
    [DebuggerBrowsableAttribute("0")]
private Element ;
    [DebuggerBrowsableAttribute("0")]
private object ;
    public ContentRange Content { get; }
    public IEnumerable`1<ElementType> SupportedElementTypes { get; }
    [DebuggerBrowsableAttribute("0")]
protected static bool IsReadOnly { get; }
    protected int CountCore { get; }
    public int Count { get; }
    public Element Item { get; internal set; }
    private bool System.Collections.IList.IsReadOnly { get; }
    private bool System.Collections.IList.IsFixedSize { get; }
    private bool System.Collections.ICollection.IsSynchronized { get; }
    private object System.Collections.ICollection.SyncRoot { get; }
    private object System.Collections.IList.Item { get; private set; }
    internal ElementCollection(Element );
    internal object ();
    internal void (object );
    internal Element ();
    public ContentRange get_Content();
    public IEnumerable`1<ElementType> get_SupportedElementTypes();
    protected static bool get_IsReadOnly();
    protected abstract virtual int get_CountCore();
    public sealed virtual int get_Count();
    protected abstract virtual void InsertCore(int index, Element item);
    internal void Insert(int , Element );
    internal void Add(Element );
    internal bool Contains(Element );
    protected abstract virtual int IndexOfCore(Element item);
    public int IndexOf(Element item);
    protected abstract virtual void RemoveAtCore(int index);
    public sealed virtual void RemoveAt(int index);
    internal bool Remove(Element );
    protected abstract virtual void ClearCore();
    public sealed virtual void Clear();
    protected abstract virtual Element GetCore(int index);
    protected abstract virtual void SetCore(int index, Element value);
    public Element get_Item(int index);
    internal void set_Item(int , Element );
    protected abstract virtual IEnumerator`1<Element> GetEnumeratorCore();
    public IEnumerator`1<Element> GetEnumerator();
    protected virtual void OnChange();
    private Element[] ();
    private void (Array , int );
    public void CopyTo(Element[] array, int arrayIndex);
    private sealed virtual override bool System.Collections.IList.get_IsReadOnly();
    private sealed virtual override bool System.Collections.IList.get_IsFixedSize();
    private sealed virtual override bool System.Collections.ICollection.get_IsSynchronized();
    private sealed virtual override object System.Collections.ICollection.get_SyncRoot();
    private sealed virtual override void System.Collections.IList.Insert(int index, object value);
    private sealed virtual override int System.Collections.IList.Add(object value);
    private sealed virtual override bool System.Collections.IList.Contains(object value);
    private sealed virtual override int System.Collections.IList.IndexOf(object value);
    private sealed virtual override void System.Collections.IList.Remove(object value);
    private sealed virtual override object System.Collections.IList.get_Item(int index);
    private sealed virtual override void System.Collections.IList.set_Item(int index, object value);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override void System.Collections.ICollection.CopyTo(Array array, int index);
    private sealed virtual override DocumentModel q6zwhvgbn42vnhj62vwqa62myqk48kk4​ ();
    private sealed virtual override ElementCollection q6zwhvgbn42vnhj62vwqa62myqk48kk4​ ();
}
[DefaultMemberAttribute("Item")]
[DebuggerDisplayAttribute("Count = {Count}")]
[DebuggerTypeProxyAttribute("GemBox.Collections.CollectionDebugView`1")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class GemBox.Document.ElementCollection`1 : ElementCollection {
    [DebuggerBrowsableAttribute("0")]
private IList`1<T> ;
    public int Count { get; }
    protected int CountCore { get; }
    public T Item { get; public set; }
    private bool System.Collections.Generic.ICollection<T>.IsReadOnly { get; }
    internal ElementCollection`1(Element );
    public sealed virtual int get_Count();
    protected sealed virtual int get_CountCore();
    internal bool (ElementType );
    protected virtual void VerifyItem(T item, string paramName, int index, bool isSet);
    public TElement Cast(int index);
    public sealed virtual void Insert(int index, T item);
    protected sealed virtual void InsertCore(int index, Element item);
    public sealed virtual void Add(T item);
    public sealed virtual bool Contains(T item);
    public sealed virtual int IndexOf(T item);
    protected sealed virtual int IndexOfCore(Element item);
    public sealed virtual void RemoveAt(int index);
    protected sealed virtual void RemoveAtCore(int index);
    public sealed virtual bool Remove(T item);
    public sealed virtual void Clear();
    protected sealed virtual void ClearCore();
    public sealed virtual T get_Item(int index);
    public sealed virtual void set_Item(int index, T value);
    protected sealed virtual Element GetCore(int index);
    protected sealed virtual void SetCore(int index, Element value);
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    [IteratorStateMachineAttribute("GemBox.Document.ElementCollection`1/")]
protected sealed virtual IEnumerator`1<Element> GetEnumeratorCore();
    public sealed virtual void CopyTo(T[] array, int arrayIndex);
    private sealed virtual override bool System.Collections.Generic.ICollection<T>.get_IsReadOnly();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public enum GemBox.Document.ElementType : Enum {
    public int value__;
    public static ElementType Document;
    public static ElementType Section;
    public static ElementType HeaderFooter;
    public static ElementType Paragraph;
    public static ElementType TableOfEntries;
    public static ElementType Table;
    public static ElementType TableRow;
    public static ElementType TableCell;
    public static ElementType BookmarkStart;
    public static ElementType BookmarkEnd;
    public static ElementType Field;
    public static ElementType Hyperlink;
    public static ElementType Shape;
    public static ElementType Group;
    public static ElementType PreservedDrawingElement;
    public static ElementType TextBox;
    public static ElementType Picture;
    public static ElementType Run;
    public static ElementType SpecialCharacter;
    public static ElementType PreservedInline;
    public static ElementType Note;
    public static ElementType BlockContentControl;
    public static ElementType InlineContentControl;
    public static ElementType Chart;
    public static ElementType Comment;
    public static ElementType CommentStart;
    public static ElementType CommentEnd;
    public static ElementType MoveRangeSeparator;
    public static ElementType AlignmentTab;
    public static ElementType Canvas;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Field : Inline {
    [DebuggerBrowsableAttribute("0")]
private FieldType ;
    [DebuggerBrowsableAttribute("0")]
private InlineCollection ;
    [DebuggerBrowsableAttribute("0")]
private InlineCollection ;
    [DebuggerBrowsableAttribute("0")]
private FormFieldData ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    public bool IsDirty { get; public set; }
    public bool IsLocked { get; public set; }
    [DebuggerBrowsableAttribute("0")]
public ElementType ElementType { get; }
    [DebuggerBrowsableAttribute("0")]
public DocumentModel Document { get; }
    public CharacterFormat CharacterFormat { get; public set; }
    public FieldType FieldType { get; }
    public InlineCollection InstructionInlines { get; }
    public InlineCollection ResultInlines { get; }
    [NullableAttribute("2")]
public ListItem ListItem { get; }
    public FormFieldData FormData { get; }
    [DebuggerBrowsableAttribute("0")]
protected string DebuggerDisplay { get; }
    [DebuggerBrowsableAttribute("0")]
private IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.Content { get; }
    public Field(DocumentModel document, FieldType fieldType);
    public Field(DocumentModel document, FieldType fieldType, IEnumerable`1<Inline> instructionInlines, IEnumerable`1<Inline> resultInlines);
    public Field(DocumentModel document, FieldType fieldType, IEnumerable`1<Inline> instructionInlines, Inline[] resultInlines);
    public Field(DocumentModel document, FieldType fieldType, Inline[] instructionInlines);
    public Field(DocumentModel document, FieldType fieldType, string instructionText, IEnumerable`1<Inline> resultInlines);
    public Field(DocumentModel document, FieldType fieldType, string instructionText, Inline[] resultInlines);
    public Field(DocumentModel document, FieldType fieldType, string instructionText, string resultText);
    private Field(DocumentModel , Field );
    internal bool ();
    internal void (bool );
    internal    ();
    private void (   );
    [CompilerGeneratedAttribute]
public bool get_IsDirty();
    [CompilerGeneratedAttribute]
public void set_IsDirty(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsLocked();
    [CompilerGeneratedAttribute]
public void set_IsLocked(bool value);
    internal string ();
    internal void (string );
    public virtual ElementType get_ElementType();
    public virtual DocumentModel get_Document();
    public CharacterFormat get_CharacterFormat();
    public void set_CharacterFormat(CharacterFormat value);
    public FieldType get_FieldType();
    public InlineCollection get_InstructionInlines();
    public InlineCollection get_ResultInlines();
    internal InlineCollection (    );
    [NullableContextAttribute("2")]
public ListItem get_ListItem();
    public FormFieldData get_FormData();
    internal void (FormFieldData );
    internal bool ();
    internal bool ();
    protected virtual string get_DebuggerDisplay();
    internal void  ();
    internal void  ();
    public string GetInstructionText();
    private static void (StringBuilder , IEnumerable`1<Inline> );
    public void Update();
    public Field Clone(bool cloneResult);
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
    [IteratorStateMachineAttribute("GemBox.Document.Field/")]
internal virtual IEnumerable`1<ElementType> p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (ElementCollection );
    internal void (string );
    internal CharacterFormat ();
    internal CharacterFormat (bool );
    internal bool ();
    [IteratorStateMachineAttribute("GemBox.Document.Field/")]
private sealed virtual override IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.get_Content();
    private sealed virtual override bool dfd97gj87thv4l3wnwn2gxqmjbru8d8k​ (Func`2<   , U> , U& );
    private sealed virtual override     dfd97gj87thv4l3wnwn2gxqmjbru8d8k​  ();
    private sealed virtual override void dfd97gj87thv4l3wnwn2gxqmjbru8d8k​ (    );
    private sealed virtual override  ​ <   > dfd97gj87thv4l3wnwn2gxqmjbru8d8k​  ();
    private sealed virtual override Color dfd97gj87thv4l3wnwn2gxqmjbru8d8k​  ();
}
public enum GemBox.Document.FieldType : Enum {
    public int value__;
    public static FieldType Unknown;
    public static FieldType CreateDate;
    public static FieldType Date;
    public static FieldType EditTime;
    public static FieldType PrintDate;
    public static FieldType SaveDate;
    public static FieldType Time;
    public static FieldType Compare;
    public static FieldType DocVariable;
    public static FieldType GoToButton;
    public static FieldType If;
    public static FieldType MacroButton;
    public static FieldType Print;
    public static FieldType Author;
    public static FieldType Comments;
    public static FieldType DocProperty;
    public static FieldType FileName;
    public static FieldType FileSize;
    public static FieldType Info;
    public static FieldType Keywords;
    public static FieldType LastSavedBy;
    public static FieldType NumChars;
    public static FieldType NumPages;
    public static FieldType NumWords;
    public static FieldType Subject;
    public static FieldType Template;
    public static FieldType Title;
    public static FieldType Formula;
    public static FieldType Advance;
    public static FieldType Eq;
    public static FieldType Symbol;
    public static FieldType Index;
    public static FieldType RD;
    public static FieldType TA;
    public static FieldType TC;
    public static FieldType TOA;
    public static FieldType TOC;
    public static FieldType XE;
    public static FieldType AutoText;
    public static FieldType AutoTextList;
    public static FieldType Bibliography;
    public static FieldType Citation;
    public static FieldType Hyperlink;
    public static FieldType IncludePicture;
    public static FieldType IncludeText;
    public static FieldType Link;
    public static FieldType NoteRef;
    public static FieldType PageRef;
    public static FieldType Quote;
    public static FieldType Ref;
    public static FieldType StyleRef;
    public static FieldType AddressBlock;
    public static FieldType Ask;
    public static FieldType Database;
    public static FieldType FillIn;
    public static FieldType GreetingLine;
    public static FieldType MergeField;
    public static FieldType MergeRec;
    public static FieldType MergeSeq;
    public static FieldType Next;
    public static FieldType NextIf;
    public static FieldType Set;
    public static FieldType SkipIf;
    public static FieldType AutoNum;
    public static FieldType AutoNumLgl;
    public static FieldType AutoNumOut;
    public static FieldType BarCode;
    public static FieldType ListNum;
    public static FieldType Page;
    public static FieldType RevNum;
    public static FieldType Section;
    public static FieldType SectionPages;
    public static FieldType Seq;
    public static FieldType UserAddress;
    public static FieldType UserInitials;
    public static FieldType UserName;
    public static FieldType FormCheckBox;
    public static FieldType FormDropDown;
    public static FieldType FormText;
    public static FieldType DisplayBarcode;
    public static FieldType MergeBarcode;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.FloatingLayout : Layout {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private TextWrappingStyle ;
    [DebuggerBrowsableAttribute("0")]
private HorizontalPosition ;
    [DebuggerBrowsableAttribute("0")]
private VerticalPosition ;
    [DebuggerBrowsableAttribute("0")]
private WrapTextType ;
    [DebuggerBrowsableAttribute("0")]
private Padding ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int>  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    public HorizontalPosition HorizontalPosition { get; public set; }
    public VerticalPosition VerticalPosition { get; public set; }
    public TextWrappingStyle WrappingStyle { get; public set; }
    public WrapTextType WrapText { get; public set; }
    public Padding DistanceFromText { get; public set; }
    public bool IsFloating { get; }
    [DebuggerBrowsableAttribute("0")]
protected string DebuggerDisplay { get; }
    public FloatingLayout(HorizontalPosition horizontalPosition, VerticalPosition verticalPosition, Size size);
    [CompilerGeneratedAttribute]
public HorizontalPosition get_HorizontalPosition();
    [CompilerGeneratedAttribute]
public void set_HorizontalPosition(HorizontalPosition value);
    [CompilerGeneratedAttribute]
public VerticalPosition get_VerticalPosition();
    [CompilerGeneratedAttribute]
public void set_VerticalPosition(VerticalPosition value);
    public TextWrappingStyle get_WrappingStyle();
    public void set_WrappingStyle(TextWrappingStyle value);
    internal bool ();
    internal void (bool );
    internal bool ();
    internal void (bool );
    [CompilerGeneratedAttribute]
public WrapTextType get_WrapText();
    [CompilerGeneratedAttribute]
public void set_WrapText(WrapTextType value);
    [CompilerGeneratedAttribute]
public Padding get_DistanceFromText();
    [CompilerGeneratedAttribute]
public void set_DistanceFromText(Padding value);
    internal Nullable`1<int> ();
    internal void (Nullable`1<int> );
    internal bool ();
    internal void (bool );
    internal bool ();
    internal void (bool );
    public virtual bool get_IsFloating();
    protected virtual string get_DebuggerDisplay();
    protected virtual Layout CreateInstance();
    protected virtual void CloneMembers(Layout source);
    private void (FloatingLayout );
    internal void (double , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.FontFile : object {
    [DebuggerBrowsableAttribute("0")]
private  ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public string FamilyName { get; }
    public bool Italic { get; }
    public int Weight { get; }
    public int Stretch { get; }
    internal FontFile( ,     ,     );
    internal FontFile(    );
    public string get_FamilyName();
    public bool get_Italic();
    public int get_Weight();
    public int get_Stretch();
    internal bool ();
    public bool ContainsCharacter(int character);
    public sealed virtual bool Equals(FontFile other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    private sealed virtual override bool System.IEquatable<GemBox.Drawing.ITypeface>.Equals(   other);
    private sealed virtual override    67susdv28vbxz8gnlgf46vfvj3use8vb​ ();
    private sealed virtual override     67susdv28vbxz8gnlgf46vfvj3use8vb​ ();
    private sealed virtual override    67susdv28vbxz8gnlgf46vfvj3use8vb​ ();
    private sealed virtual override     67susdv28vbxz8gnlgf46vfvj3use8vb​ ();
    private sealed virtual override void 67susdv28vbxz8gnlgf46vfvj3use8vb​ (    );
    private sealed virtual override bool 67susdv28vbxz8gnlgf46vfvj3use8vb​ ();
    private sealed virtual override void 67susdv28vbxz8gnlgf46vfvj3use8vb​ (bool );
    private sealed virtual override bool 67susdv28vbxz8gnlgf46vfvj3use8vb​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.FontFileSelectionEventArgs : EventArgs {
    [DebuggerBrowsableAttribute("0")]
private FontFile ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public string FontName { get; }
    public bool Italic { get; }
    public bool Bold { get; }
    public int Character { get; }
    public FontFile Font { get; public set; }
    internal FontFileSelectionEventArgs(string , bool , bool , int , FontFile );
    [CompilerGeneratedAttribute]
public string get_FontName();
    [CompilerGeneratedAttribute]
public bool get_Italic();
    [CompilerGeneratedAttribute]
public bool get_Bold();
    [CompilerGeneratedAttribute]
public int get_Character();
    public FontFile get_Font();
    public void set_Font(FontFile value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.FontInfo : object {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal string ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal string ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal string ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal string ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal string ;
    [DebuggerBrowsableAttribute("0")]
internal bool ;
    [DebuggerBrowsableAttribute("0")]
internal Byte[]  ;
    [DebuggerBrowsableAttribute("0")]
internal Byte[]  ;
    [DebuggerBrowsableAttribute("0")]
internal Byte[]  ;
    [DebuggerBrowsableAttribute("0")]
internal Byte[]  ;
    public string Name { get; }
    [CompilerGeneratedAttribute]
public string get_Name();
    internal void (string );
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.FontInfoCollection : object {
    [DebuggerBrowsableAttribute("0")]
private IList`1<FontInfo> ;
    public int Count { get; }
    [ComVisibleAttribute("False")]
public FontInfo Item { get; }
    public int get_Count();
    public FontInfo get_Item(int index);
    public bool Remove(FontInfo item);
    public void Clear();
    public sealed virtual IEnumerator`1<FontInfo> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    internal void (FontInfo );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public static class GemBox.Document.FontSettings : object {
    [DebuggerBrowsableAttribute("0")]
private static Uri ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ReadOnlyCollection`1<FontFile> ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
internal static  modreq(System.Runtime.CompilerServices.IsVolatile) ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static EventHandler`1<FontFileSelectionEventArgs> ;
    [NullableAttribute("1")]
public static IList`1<FontFile> Fonts { get; }
    public static Uri FontsBaseUri { get; public set; }
    public static string FontsBaseDirectory { get; public set; }
    public static string FontsBaseResourceLocation { get; public set; }
    private static FontSettings();
    [NullableContextAttribute("1")]
public static IList`1<FontFile> get_Fonts();
    public static Uri get_FontsBaseUri();
    public static void set_FontsBaseUri(Uri value);
    public static string get_FontsBaseDirectory();
    public static void set_FontsBaseDirectory(string value);
    public static string get_FontsBaseResourceLocation();
    public static void set_FontsBaseResourceLocation(string value);
    [CompilerGeneratedAttribute]
public static void add_FontSelection(EventHandler`1<FontFileSelectionEventArgs> value);
    [CompilerGeneratedAttribute]
public static void remove_FontSelection(EventHandler`1<FontFileSelectionEventArgs> value);
    private static string (Uri );
    private static Uri (string );
    private static string (Uri );
    private static Uri (string );
    [NullableContextAttribute("1")]
private static string (string );
    [NullableContextAttribute("1")]
internal static FontFile (string , bool , bool , int , FontFile , DocumentModel );
    [NullableContextAttribute("1")]
private static ReadOnlyCollection`1<> (Uri , string , bool );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class GemBox.Document.Format : object {
    public DocumentModel Document { get; }
    protected DocumentModel DocumentCore { get; }
    public DocumentModel get_Document();
    public abstract virtual void ClearFormatting();
    protected abstract virtual DocumentModel get_DocumentCore();
    protected void CheckStyleSetting(Style style);
    [NullableContextAttribute("1")]
internal static void (  <T> ,   & , T& );
    [NullableContextAttribute("1")]
internal static void (TFormatProvider , TFormatProvider& );
    [NullableContextAttribute("1")]
internal static U (  <T> , Func`2<T, U> );
    [NullableContextAttribute("1")]
internal static U (  <T> , Func`2<T, U> , Func`2<DocumentModel,   <T>> );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.FormCheckBoxData : FormFieldData {
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double> ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> ;
    public Nullable`1<double> Size { get; public set; }
    public bool DefaultValue { get; public set; }
    public Nullable`1<bool> Value { get; public set; }
    [DebuggerBrowsableAttribute("0")]
protected string DebuggerDisplay { get; }
    [DebuggerBrowsableAttribute("0")]
protected object ValueCore { get; }
    [DebuggerBrowsableAttribute("0")]
protected object DefaultValueCore { get; }
    [DebuggerBrowsableAttribute("0")]
protected bool HasDataCore { get; }
    public bool ValueOrDefault { get; }
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Size();
    [CompilerGeneratedAttribute]
public void set_Size(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public bool get_DefaultValue();
    [CompilerGeneratedAttribute]
public void set_DefaultValue(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(Nullable`1<bool> value);
    internal virtual FieldType v62566f5ncmt6gdrz8jpcxrawfbt7xh6​ ();
    protected virtual string get_DebuggerDisplay();
    protected virtual object get_ValueCore();
    protected virtual object get_DefaultValueCore();
    protected virtual bool get_HasDataCore();
    public bool get_ValueOrDefault();
    internal virtual bool v62566f5ncmt6gdrz8jpcxrawfbt7xh6​ (FormFieldData );
    protected virtual void ResetCore();
    protected virtual FormFieldData CreateInstance();
    protected virtual void Copy(FormFieldData source);
    private void (FormCheckBoxData );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.FormDropDownData : FormFieldData {
    [DebuggerBrowsableAttribute("0")]
private List`1<string> ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int> ;
    public int DefaultItemIndex { get; public set; }
    public Nullable`1<int> SelectedItemIndex { get; public set; }
    public IList`1<string> Items { get; }
    [DebuggerBrowsableAttribute("0")]
protected string DebuggerDisplay { get; }
    [DebuggerBrowsableAttribute("0")]
protected object ValueCore { get; }
    [DebuggerBrowsableAttribute("0")]
protected object DefaultValueCore { get; }
    [NullableAttribute("2")]
public string Value { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string  { get; }
    [NullableAttribute("2")]
public string ValueOrDefault { get; }
    [DebuggerBrowsableAttribute("0")]
protected bool HasDataCore { get; }
    [CompilerGeneratedAttribute]
public int get_DefaultItemIndex();
    [CompilerGeneratedAttribute]
public void set_DefaultItemIndex(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_SelectedItemIndex();
    [CompilerGeneratedAttribute]
public void set_SelectedItemIndex(Nullable`1<int> value);
    public IList`1<string> get_Items();
    internal virtual FieldType v62566f5ncmt6gdrz8jpcxrawfbt7xh6​ ();
    protected virtual string get_DebuggerDisplay();
    protected virtual object get_ValueCore();
    protected virtual object get_DefaultValueCore();
    [NullableContextAttribute("2")]
public string get_Value();
    [NullableContextAttribute("2")]
private string ();
    [NullableContextAttribute("2")]
public string get_ValueOrDefault();
    internal virtual bool v62566f5ncmt6gdrz8jpcxrawfbt7xh6​ (FormFieldData );
    protected virtual bool get_HasDataCore();
    protected virtual void ResetCore();
    protected virtual FormFieldData CreateInstance();
    protected virtual void Copy(FormFieldData source);
    private void (FormDropDownData );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class GemBox.Document.FormFieldData : object {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private Field ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [NullableAttribute("1")]
public Field Field { get; internal set; }
    public string Name { get; public set; }
    public bool Enabled { get; public set; }
    public bool CalculateOnExit { get; public set; }
    public string EntryMacro { get; public set; }
    public string ExitMacro { get; public set; }
    public string HelpText { get; public set; }
    public bool IsHelpTextAutoEntry { get; public set; }
    public string StatusText { get; public set; }
    public bool IsStatusTextAutoEntry { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
protected string DebuggerDisplay { get; }
    [DebuggerBrowsableAttribute("0")]
protected object ValueCore { get; }
    [DebuggerBrowsableAttribute("0")]
protected object DefaultValueCore { get; }
    public object Value { get; }
    public object ValueOrDefault { get; }
    [DebuggerBrowsableAttribute("0")]
protected bool HasDataCore { get; }
    [CompilerGeneratedAttribute]
[NullableContextAttribute("1")]
public Field get_Field();
    [NullableContextAttribute("1")]
internal void (Field );
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_CalculateOnExit();
    [CompilerGeneratedAttribute]
public void set_CalculateOnExit(bool value);
    [CompilerGeneratedAttribute]
public string get_EntryMacro();
    [CompilerGeneratedAttribute]
public void set_EntryMacro(string value);
    [CompilerGeneratedAttribute]
public string get_ExitMacro();
    [CompilerGeneratedAttribute]
public void set_ExitMacro(string value);
    [CompilerGeneratedAttribute]
public string get_HelpText();
    [CompilerGeneratedAttribute]
public void set_HelpText(string value);
    [CompilerGeneratedAttribute]
public bool get_IsHelpTextAutoEntry();
    [CompilerGeneratedAttribute]
public void set_IsHelpTextAutoEntry(bool value);
    [CompilerGeneratedAttribute]
public string get_StatusText();
    [CompilerGeneratedAttribute]
public void set_StatusText(string value);
    [CompilerGeneratedAttribute]
public bool get_IsStatusTextAutoEntry();
    [CompilerGeneratedAttribute]
public void set_IsStatusTextAutoEntry(bool value);
    internal abstract virtual FieldType v62566f5ncmt6gdrz8jpcxrawfbt7xh6​ ();
    [NullableContextAttribute("1")]
protected abstract virtual string get_DebuggerDisplay();
    protected abstract virtual object get_ValueCore();
    protected abstract virtual object get_DefaultValueCore();
    public object get_Value();
    public object get_ValueOrDefault();
    internal bool ();
    protected virtual bool get_HasDataCore();
    [NullableContextAttribute("1")]
internal static FormFieldData (Field );
    internal static bool (FieldType );
    [NullableContextAttribute("1")]
internal FormFieldData ();
    [NullableContextAttribute("1")]
internal abstract virtual bool v62566f5ncmt6gdrz8jpcxrawfbt7xh6​ (FormFieldData );
    [NullableContextAttribute("1")]
private protected bool (FormFieldData );
    public void Reset();
    protected abstract virtual void ResetCore();
    [NullableContextAttribute("1")]
protected abstract virtual FormFieldData CreateInstance();
    [NullableContextAttribute("1")]
protected virtual void Copy(FormFieldData source);
    [NullableContextAttribute("1")]
public sealed virtual string ToString();
}
[DefaultMemberAttribute("Item")]
[DebuggerDisplayAttribute("Count = {Count}")]
[DebuggerTypeProxyAttribute("GemBox.Collections.CollectionDebugView")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.FormFieldDataCollection : object {
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    [DebuggerBrowsableAttribute("0")]
private List`1<FormFieldData> ;
    [DebuggerBrowsableAttribute("0")]
private int Count { get; }
    public bool Shading { get; public set; }
    public FormFieldData Item { get; }
    internal FormFieldDataCollection(ContentRange );
    [IteratorStateMachineAttribute("GemBox.Document.FormFieldDataCollection/")]
private static IEnumerable`1<FormFieldData> (ContentRange );
    private int get_Count();
    public bool get_Shading();
    public void set_Shading(bool value);
    public FormFieldData get_Item(string name);
    public IEnumerable`1<FormFieldData> Get(string name);
    public void Reset();
    public sealed virtual IEnumerator`1<FormFieldData> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class GemBox.Document.FormTextData : FormFieldData {
    [DebuggerBrowsableAttribute("0")]
private FormTextType ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public FormTextType TextType { get; public set; }
    public string DefaultValue { get; public set; }
    public string ValueFormat { get; public set; }
    public int MaximumLength { get; public set; }
    public object Value { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
protected string DebuggerDisplay { get; }
    [DebuggerBrowsableAttribute("0")]
protected object ValueCore { get; }
    [DebuggerBrowsableAttribute("0")]
protected object DefaultValueCore { get; }
    [DebuggerBrowsableAttribute("0")]
protected bool HasDataCore { get; }
    [CompilerGeneratedAttribute]
public FormTextType get_TextType();
    [CompilerGeneratedAttribute]
public void set_TextType(FormTextType value);
    [CompilerGeneratedAttribute]
public string get_DefaultValue();
    [CompilerGeneratedAttribute]
public void set_DefaultValue(string value);
    [CompilerGeneratedAttribute]
public string get_ValueFormat();
    [CompilerGeneratedAttribute]
public void set_ValueFormat(string value);
    [CompilerGeneratedAttribute]
public int get_MaximumLength();
    [CompilerGeneratedAttribute]
public void set_MaximumLength(int value);
    public object get_Value();
    public void set_Value(object value);
    internal virtual FieldType v62566f5ncmt6gdrz8jpcxrawfbt7xh6​ ();
    [NullableContextAttribute("1")]
internal virtual bool v62566f5ncmt6gdrz8jpcxrawfbt7xh6​ (FormFieldData );
    [NullableContextAttribute("1")]
protected virtual string get_DebuggerDisplay();
    protected virtual object get_ValueCore();
    protected virtual object get_DefaultValueCore();
    protected virtual bool get_HasDataCore();
    protected virtual void ResetCore();
    [NullableContextAttribute("1")]
protected virtual FormFieldData CreateInstance();
    [NullableContextAttribute("1")]
protected virtual void Copy(FormFieldData source);
    [NullableContextAttribute("1")]
private void (FormTextData );
    private FormTextType ();
    [NullableContextAttribute("1")]
private static object (string , FormTextType , IFormatProvider );
}
public enum GemBox.Document.FormTextType : Enum {
    public int value__;
    public static FormTextType RegularText;
    public static FormTextType Number;
    public static FormTextType Date;
    public static FormTextType CurrentDate;
    public static FormTextType CurrentTime;
    public static FormTextType Calculation;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.FreeLimitEventArgs : EventArgs {
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    [DebuggerBrowsableAttribute("0")]
private FreeLimitReachedAction ;
    public FreeLimitReachedAction FreeLimitReachedAction { get; public set; }
    public DocumentModel Document { get; }
    internal FreeLimitEventArgs(DocumentModel );
    [CompilerGeneratedAttribute]
public FreeLimitReachedAction get_FreeLimitReachedAction();
    [CompilerGeneratedAttribute]
public void set_FreeLimitReachedAction(FreeLimitReachedAction value);
    public DocumentModel get_Document();
}
public enum GemBox.Document.FreeLimitReachedAction : Enum {
    public int value__;
    public static FreeLimitReachedAction ThrowException;
    public static FreeLimitReachedAction Stop;
    public static FreeLimitReachedAction ContinueAsTrial;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.FreeLimitReachedException : Exception {
    internal FreeLimitReachedException(string );
    internal FreeLimitReachedException(string , Exception );
    private FreeLimitReachedException(SerializationInfo , StreamingContext );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.HeaderFooter : Element {
    [DebuggerBrowsableAttribute("0")]
private BlockCollection ;
    [DebuggerBrowsableAttribute("0")]
private HeaderFooterType ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private Watermark ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private object ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal object  { get; internal set; }
    public ElementType ElementType { get; }
    public HeaderFooterType HeaderFooterType { get; }
    public bool IsHeader { get; }
    [NullableAttribute("2")]
public HeaderFooterCollection ParentCollection { get; }
    [NullableAttribute("2")]
public Section Parent { get; }
    public BlockCollection Blocks { get; }
    [NullableAttribute("2")]
public Watermark Watermark { get; public set; }
    [DebuggerBrowsableAttribute("0")]
protected string DebuggerDisplay { get; }
    private IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.Content { get; }
    public HeaderFooter(DocumentModel document, HeaderFooterType headerFooterType);
    public HeaderFooter(DocumentModel document, HeaderFooterType headerFooterType, IEnumerable`1<Block> items);
    public HeaderFooter(DocumentModel document, HeaderFooterType headerFooterType, Block[] items);
    private HeaderFooter(DocumentModel , HeaderFooter );
    [NullableContextAttribute("2")]
internal object ();
    [NullableContextAttribute("2")]
internal void (object );
    public virtual ElementType get_ElementType();
    public HeaderFooterType get_HeaderFooterType();
    public bool get_IsHeader();
    [NullableContextAttribute("2")]
public HeaderFooterCollection get_ParentCollection();
    [NullableContextAttribute("2")]
public Section get_Parent();
    public BlockCollection get_Blocks();
    [NullableContextAttribute("2")]
public Watermark get_Watermark();
    [NullableContextAttribute("2")]
public void set_Watermark(Watermark value);
    internal void (Watermark );
    internal void ();
    protected virtual string get_DebuggerDisplay();
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    public HeaderFooter Clone(bool cloneDescendants);
    public HeaderFooter Clone(HeaderFooterType newType);
    [IteratorStateMachineAttribute("GemBox.Document.HeaderFooter/")]
internal virtual IEnumerable`1<ElementType> p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (ElementCollection );
    [IteratorStateMachineAttribute("GemBox.Document.HeaderFooter/")]
private sealed virtual override IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.get_Content();
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
    internal static bool (HeaderFooterType );
    internal static bool (HeaderFooterType );
    private static void (DocumentModel );
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class GemBox.Document.HeaderFooterCollection : ElementCollection`1<HeaderFooter> {
    public HeaderFooter Item { get; public set; }
    [NullableAttribute("2")]
public HeaderFooter Item { get; internal set; }
    internal HeaderFooterCollection(Section );
    public HeaderFooter get_Item(int index);
    public void set_Item(int index, HeaderFooter value);
    [NullableContextAttribute("2")]
public HeaderFooter get_Item(HeaderFooterType type);
    [NullableContextAttribute("2")]
internal void (HeaderFooterType , HeaderFooter );
    public HeaderFooter GetOrAdd(HeaderFooterType type);
    protected virtual void VerifyItem(HeaderFooter item, string paramName, int index, bool isSet);
}
public enum GemBox.Document.HeaderFooterType : Enum {
    public int value__;
    public static HeaderFooterType HeaderDefault;
    public static HeaderFooterType HeaderEven;
    public static HeaderFooterType HeaderFirst;
    public static HeaderFooterType FooterDefault;
    public static HeaderFooterType FooterEven;
    public static HeaderFooterType FooterFirst;
}
public enum GemBox.Document.HorizontalAlignment : Enum {
    public int value__;
    public static HorizontalAlignment Left;
    public static HorizontalAlignment Center;
    public static HorizontalAlignment Right;
    public static HorizontalAlignment Justify;
}
public class GemBox.Document.HorizontalPosition : ValueType {
    [DebuggerBrowsableAttribute("0")]
private HorizontalPositionAnchor ;
    [DebuggerBrowsableAttribute("0")]
private HorizontalPositionType ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public HorizontalPositionAnchor RelativeTo { get; }
    public HorizontalPositionType PositionType { get; }
    public double Value { get; }
    internal HorizontalPosition(HorizontalPositionAnchor , double , HorizontalPositionType );
    public HorizontalPosition(double absolutePosition, LengthUnit unit, HorizontalPositionAnchor rightOf);
    public HorizontalPosition(HorizontalPositionType alignment, HorizontalPositionAnchor relativeTo);
    [ObsoleteAttribute("Use any other constructor which accepts 'GemBox.Document.HorizontalPositionAnchor' as parameter instead.")]
[EditorBrowsableAttribute("1")]
public HorizontalPosition(double value, HorizontalPositionType positionType);
    public HorizontalPositionAnchor get_RelativeTo();
    public HorizontalPositionType get_PositionType();
    public double get_Value();
    internal HorizontalPosition (HorizontalPositionAnchor );
    internal HorizontalPosition (HorizontalPosition );
    public sealed virtual bool Equals(HorizontalPosition other);
    [NullableContextAttribute("1")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static bool op_Equality(HorizontalPosition first, HorizontalPosition second);
    public static bool op_Inequality(HorizontalPosition first, HorizontalPosition second);
}
public enum GemBox.Document.HorizontalPositionAnchor : Enum {
    public int value__;
    public static HorizontalPositionAnchor Margin;
    public static HorizontalPositionAnchor Page;
    public static HorizontalPositionAnchor Column;
    public static HorizontalPositionAnchor Character;
    public static HorizontalPositionAnchor LeftMargin;
    public static HorizontalPositionAnchor RightMargin;
    public static HorizontalPositionAnchor InsideMargin;
    public static HorizontalPositionAnchor OutsideMargin;
    public static HorizontalPositionAnchor TopLeftCorner;
}
public enum GemBox.Document.HorizontalPositionType : Enum {
    public int value__;
    public static HorizontalPositionType Absolute;
    public static HorizontalPositionType Left;
    public static HorizontalPositionType Center;
    public static HorizontalPositionType Right;
    public static HorizontalPositionType Inside;
    public static HorizontalPositionType Outside;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.HtmlLoadOptions : LoadOptions {
    [DebuggerBrowsableAttribute("0")]
private Encoding ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private EventHandler`1<ResourceLoadingEventArgs> ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private HtmlType  ;
    public Encoding Encoding { get; public set; }
    [NullableAttribute("2")]
public string BaseAddress { get; public set; }
    public bool InheritCharacterFormat { get; public set; }
    public bool InheritParagraphFormat { get; public set; }
    public HtmlType HtmlType { get; public set; }
    [CompilerGeneratedAttribute]
public void add_ResourceLoading(EventHandler`1<ResourceLoadingEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_ResourceLoading(EventHandler`1<ResourceLoadingEventArgs> value);
    internal bool ();
    internal bool ();
    private void (bool );
    internal string ();
    internal void (string );
    public Encoding get_Encoding();
    public void set_Encoding(Encoding value);
    [NullableContextAttribute("2")]
public string get_BaseAddress();
    [NullableContextAttribute("2")]
public void set_BaseAddress(string value);
    [CompilerGeneratedAttribute]
public bool get_InheritCharacterFormat();
    [CompilerGeneratedAttribute]
public void set_InheritCharacterFormat(bool value);
    [CompilerGeneratedAttribute]
public bool get_InheritParagraphFormat();
    [CompilerGeneratedAttribute]
public void set_InheritParagraphFormat(bool value);
    [CompilerGeneratedAttribute]
public HtmlType get_HtmlType();
    [CompilerGeneratedAttribute]
public void set_HtmlType(HtmlType value);
    internal virtual DocumentModel 7k4lmxmhj5tk8h83eglk6fss34tasuhn​ (Stream , string );
    private sealed virtual override     kc3l5njc2j9lzyqh27lq9mqh9nvqyzxh​ (Uri , string );
    private sealed virtual override void kc3l5njc2j9lzyqh27lq9mqh9nvqyzxh​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.HtmlSaveOptions : SaveOptions {
    [DebuggerBrowsableAttribute("0")]
private Encoding ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private HtmlType ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [NullableAttribute("2")]
public string FilesDirectoryPath { get; public set; }
    [NullableAttribute("2")]
public string FilesDirectorySrcPath { get; public set; }
    public HtmlType HtmlType { get; public set; }
    public bool EmbedImages { get; public set; }
    public bool EmbedOnlineVideos { get; public set; }
    public bool KeepImageLinks { get; public set; }
    public bool UseContentIdHeaders { get; public set; }
    public bool UseSemanticElements { get; public set; }
    public bool IgnoreStyles { get; public set; }
    public string ContentType { get; }
    public Encoding Encoding { get; public set; }
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public string get_FilesDirectoryPath();
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public void set_FilesDirectoryPath(string value);
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public string get_FilesDirectorySrcPath();
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public void set_FilesDirectorySrcPath(string value);
    [CompilerGeneratedAttribute]
public HtmlType get_HtmlType();
    [CompilerGeneratedAttribute]
public void set_HtmlType(HtmlType value);
    [CompilerGeneratedAttribute]
public bool get_EmbedImages();
    [CompilerGeneratedAttribute]
public void set_EmbedImages(bool value);
    [CompilerGeneratedAttribute]
public bool get_EmbedOnlineVideos();
    [CompilerGeneratedAttribute]
public void set_EmbedOnlineVideos(bool value);
    [CompilerGeneratedAttribute]
public bool get_KeepImageLinks();
    [CompilerGeneratedAttribute]
public void set_KeepImageLinks(bool value);
    [CompilerGeneratedAttribute]
public bool get_UseContentIdHeaders();
    [CompilerGeneratedAttribute]
public void set_UseContentIdHeaders(bool value);
    [CompilerGeneratedAttribute]
public bool get_UseSemanticElements();
    [CompilerGeneratedAttribute]
public void set_UseSemanticElements(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreStyles();
    [CompilerGeneratedAttribute]
public void set_IgnoreStyles(bool value);
    public virtual string get_ContentType();
    internal virtual bool 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ ();
    public Encoding get_Encoding();
    public void set_Encoding(Encoding value);
    internal virtual void 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ (DocumentModel , Stream , string );
    internal void (DocumentModel , XmlWriter );
    private void (XmlWriter , string , DocumentModel );
    internal XmlWriterSettings ();
}
public enum GemBox.Document.HtmlType : Enum {
    public int value__;
    public static HtmlType Html;
    public static HtmlType HtmlInline;
    public static HtmlType Mhtml;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Hyperlink : Inline {
    [DebuggerBrowsableAttribute("0")]
private InlineCollection ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    public bool IsBookmarkLink { get; public set; }
    [NullableAttribute("2")]
public string ScreenTip { get; public set; }
    [NullableAttribute("2")]
public string TargetFrame { get; public set; }
    public ElementType ElementType { get; }
    public string Address { get; public set; }
    public InlineCollection DisplayInlines { get; }
    [DebuggerBrowsableAttribute("0")]
protected string DebuggerDisplay { get; }
    [DebuggerBrowsableAttribute("0")]
private IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.Content { get; }
    public Hyperlink(DocumentModel document, string address, IEnumerable`1<Inline> displayInlines);
    public Hyperlink(DocumentModel document, string address, Inline[] displayInlines);
    public Hyperlink(DocumentModel document, string address, string displayText);
    internal Hyperlink(DocumentModel , string , InlineCollection );
    private Hyperlink(DocumentModel , Hyperlink );
    [CompilerGeneratedAttribute]
public bool get_IsBookmarkLink();
    [CompilerGeneratedAttribute]
public void set_IsBookmarkLink(bool value);
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public string get_ScreenTip();
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public void set_ScreenTip(string value);
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public string get_TargetFrame();
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public void set_TargetFrame(string value);
    internal bool ();
    public virtual ElementType get_ElementType();
    public string get_Address();
    public void set_Address(string value);
    public InlineCollection get_DisplayInlines();
    [IteratorStateMachineAttribute("GemBox.Document.Hyperlink/")]
internal IEnumerable`1<Inline> ();
    protected virtual string get_DebuggerDisplay();
    private static void (string , string );
    public Hyperlink Clone(bool cloneDisplay);
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
    [IteratorStateMachineAttribute("GemBox.Document.Hyperlink/")]
internal virtual IEnumerable`1<ElementType> p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (ElementCollection );
    [IteratorStateMachineAttribute("GemBox.Document.Hyperlink/")]
private sealed virtual override IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.get_Content();
    public static Run CreateHyperlinkStyledRun(DocumentModel document, string text);
    private static CharacterStyle (DocumentModel );
    private static bool (StyleCollection , string , CharacterStyle& );
    private static CharacterStyle (StyleCollection , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class GemBox.Document.Hyphenation.HyphenationDictionary : object {
    public abstract virtual IList`1<int> Hyphenate(string word);
    internal virtual void   ​ (string , List`1<int> );
    private sealed virtual override void 9ams4duhxqjjv7zk9dk9dv2mymlhwhuz​ (string , List`1<int> );
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Hyphenation.HyphenationDictionaryCollection : object {
    [DebuggerBrowsableAttribute("0")]
private IDictionary`2<CultureInfo, HyphenationDictionary> ;
    [DebuggerBrowsableAttribute("0")]
private HyphenationDictionary ;
    [DebuggerBrowsableAttribute("0")]
private EventHandler`1<HyphenationDictionaryLoadingEventArgs> ;
    public HyphenationDictionary Item { get; public set; }
    public ICollection`1<CultureInfo> Keys { get; }
    public ICollection`1<HyphenationDictionary> Values { get; }
    public int Count { get; }
    private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Globalization.CultureInfo,GemBox.Document.Hyphenation.HyphenationDictionary>>.IsReadOnly { get; }
    [CompilerGeneratedAttribute]
public void add_HyphenationDictionaryLoading(EventHandler`1<HyphenationDictionaryLoadingEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_HyphenationDictionaryLoading(EventHandler`1<HyphenationDictionaryLoadingEventArgs> value);
    public sealed virtual HyphenationDictionary get_Item(CultureInfo key);
    public sealed virtual void set_Item(CultureInfo key, HyphenationDictionary value);
    public sealed virtual ICollection`1<CultureInfo> get_Keys();
    public sealed virtual ICollection`1<HyphenationDictionary> get_Values();
    public sealed virtual int get_Count();
    private HyphenationDictionary ();
    public sealed virtual void Add(CultureInfo key, HyphenationDictionary value);
    public sealed virtual bool Remove(CultureInfo key);
    public sealed virtual void Clear();
    public sealed virtual bool ContainsKey(CultureInfo key);
    public sealed virtual bool TryGetValue(CultureInfo key, HyphenationDictionary& value);
    private HyphenationDictionary (CultureInfo );
    internal    (CultureInfo );
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Globalization.CultureInfo,GemBox.Document.Hyphenation.HyphenationDictionary>>.get_IsReadOnly();
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Globalization.CultureInfo,GemBox.Document.Hyphenation.HyphenationDictionary>>.Add(KeyValuePair`2<CultureInfo, HyphenationDictionary> item);
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Globalization.CultureInfo,GemBox.Document.Hyphenation.HyphenationDictionary>>.Remove(KeyValuePair`2<CultureInfo, HyphenationDictionary> item);
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Globalization.CultureInfo,GemBox.Document.Hyphenation.HyphenationDictionary>>.Contains(KeyValuePair`2<CultureInfo, HyphenationDictionary> item);
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Globalization.CultureInfo,GemBox.Document.Hyphenation.HyphenationDictionary>>.CopyTo(KeyValuePair`2[] array, int arrayIndex);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IEnumerator`1<KeyValuePair`2<CultureInfo, HyphenationDictionary>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Globalization.CultureInfo,GemBox.Document.Hyphenation.HyphenationDictionary>>.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Hyphenation.HyphenationDictionaryLoadingEventArgs : EventArgs {
    [DebuggerBrowsableAttribute("0")]
private CultureInfo ;
    public CultureInfo CultureInfo { get; }
    public HyphenationDictionary HyphenationDictionary { get; public set; }
    internal HyphenationDictionaryLoadingEventArgs(CultureInfo );
    [CompilerGeneratedAttribute]
public CultureInfo get_CultureInfo();
    public HyphenationDictionary get_HyphenationDictionary();
    public void set_HyphenationDictionary(HyphenationDictionary value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Hyphenation.TexHyphenationDictionary : HyphenationDictionary {
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<string, Int32[]> ;
    [DebuggerBrowsableAttribute("0")]
private [] ;
    public static TexHyphenationDictionary Load(string path);
    public static TexHyphenationDictionary Load(Stream stream);
    public virtual IList`1<int> Hyphenate(string word);
    internal virtual void   ​ (string , List`1<int> );
    private void (string , int , int , List`1<int> );
    private void (TextReader );
    private void ( );
    private void ( );
}
public class GemBox.Document.HyphenationOptions : object {
    [DebuggerBrowsableAttribute("0")]
internal int ;
    [DebuggerBrowsableAttribute("0")]
internal double ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public bool AutoHyphenation { get; public set; }
    public bool HyphenateCaps { get; public set; }
    public int ConsecutiveHyphensLimit { get; public set; }
    public double HyphenationZone { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_AutoHyphenation();
    [CompilerGeneratedAttribute]
public void set_AutoHyphenation(bool value);
    [CompilerGeneratedAttribute]
public bool get_HyphenateCaps();
    [CompilerGeneratedAttribute]
public void set_HyphenateCaps(bool value);
    public int get_ConsecutiveHyphensLimit();
    public void set_ConsecutiveHyphensLimit(int value);
    public double get_HyphenationZone();
    public void set_HyphenationZone(double value);
    [NullableContextAttribute("1")]
public HyphenationOptions Clone();
}
[NullableContextAttribute("1")]
public interface GemBox.Document.IContentElement {
    public IEnumerable`1<ElementCollection> Content { get; }
    public abstract virtual IEnumerable`1<ElementCollection> get_Content();
}
public enum GemBox.Document.ImageSaveFormat : Enum {
    public int value__;
    public static ImageSaveFormat Bmp;
    public static ImageSaveFormat Gif;
    public static ImageSaveFormat Jpeg;
    public static ImageSaveFormat Png;
    public static ImageSaveFormat Tiff;
    public static ImageSaveFormat Wmp;
    public static ImageSaveFormat Svg;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.ImageSaveOptions : SaveOptions {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private ImageSaveFormat ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private PixelFormat  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private TiffCompression  ;
    [DebuggerBrowsableAttribute("0")]
private EventHandler`1<OperationProgressChangedEventArgs>  ;
    [DebuggerBrowsableAttribute("0")]
private RenderingMode  ;
    public ImageSaveFormat Format { get; public set; }
    public double Width { get; public set; }
    public double Height { get; public set; }
    public PixelFormat PixelFormat { get; public set; }
    public bool Dither { get; public set; }
    public TiffCompression TiffCompression { get; public set; }
    public RenderingMode RenderingMode { get; public set; }
    public double DpiX { get; public set; }
    public double DpiY { get; public set; }
    public double MetafileScaleFactor { get; public set; }
    public string ContentType { get; }
    public ImageSaveOptions(ImageSaveFormat imageFormat);
    internal bool ();
    internal void (bool );
    [CompilerGeneratedAttribute]
public ImageSaveFormat get_Format();
    [CompilerGeneratedAttribute]
public void set_Format(ImageSaveFormat value);
    [CompilerGeneratedAttribute]
public double get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(double value);
    [CompilerGeneratedAttribute]
public double get_Height();
    [CompilerGeneratedAttribute]
public void set_Height(double value);
    [CompilerGeneratedAttribute]
public PixelFormat get_PixelFormat();
    [CompilerGeneratedAttribute]
public void set_PixelFormat(PixelFormat value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Dither();
    [CompilerGeneratedAttribute]
public void set_Dither(bool value);
    [CompilerGeneratedAttribute]
public TiffCompression get_TiffCompression();
    [CompilerGeneratedAttribute]
public void set_TiffCompression(TiffCompression value);
    [CompilerGeneratedAttribute]
public void add_ProgressChanged(EventHandler`1<OperationProgressChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_ProgressChanged(EventHandler`1<OperationProgressChangedEventArgs> value);
    public RenderingMode get_RenderingMode();
    public void set_RenderingMode(RenderingMode value);
    private RenderingMode ();
    public sealed virtual double get_DpiX();
    public void set_DpiX(double value);
    public sealed virtual double get_DpiY();
    public void set_DpiY(double value);
    public double get_MetafileScaleFactor();
    public void set_MetafileScaleFactor(double value);
    public virtual string get_ContentType();
    internal virtual bool 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ ();
    internal virtual void 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ (DocumentModel , Stream , string );
    internal virtual void 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ (DocumentModel , Stream , string , bool );
    internal virtual void 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ (   , Stream , bool );
    private void (   , Stream , bool );
    private void (   , Stream , bool );
    private    (DocumentModel , Stream , string );
    private sealed virtual override bool dfaz2msgtj35sud8dt2kh67afad25dzz​ ();
    private sealed virtual override Nullable`1<int> dfaz2msgtj35sud8dt2kh67afad25dzz​ ();
    private sealed virtual override Nullable`1<int> dfaz2msgtj35sud8dt2kh67afad25dzz​ ();
    private sealed virtual override int dfaz2msgtj35sud8dt2kh67afad25dzz​ ();
    private sealed virtual override bool dfaz2msgtj35sud8dt2kh67afad25dzz​ ();
    private sealed virtual override int dfaz2msgtj35sud8dt2kh67afad25dzz​  ();
    private sealed virtual override int dfaz2msgtj35sud8dt2kh67afad25dzz​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.ImportMapping : object {
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<Style, Style> ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<   ,    > ;
    [DebuggerBrowsableAttribute("0")]
private Dictionary`2<Picture, Picture> ;
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private IDictionary`2<Element, Element>  ;
    public DocumentModel SourceDocument { get; }
    public DocumentModel DestinationDocument { get; }
    public bool UseDestinationStyles { get; }
    public bool ResolveFormatting { get; }
    public ImportMapping(DocumentModel sourceDocument, DocumentModel destinationDocument, bool useDestinationStyles);
    public ImportMapping(DocumentModel sourceDocument, DocumentModel destinationDocument, bool useDestinationStyles, bool resolveFormatting);
    [CompilerGeneratedAttribute]
public DocumentModel get_SourceDocument();
    private void (DocumentModel );
    [CompilerGeneratedAttribute]
public DocumentModel get_DestinationDocument();
    private void (DocumentModel );
    [CompilerGeneratedAttribute]
public bool get_UseDestinationStyles();
    private void (bool );
    [CompilerGeneratedAttribute]
public bool get_ResolveFormatting();
    private void (bool );
    internal IDictionary`2<Element, Element> ();
    internal void (IDictionary`2<Element, Element> );
    public Style GetDestinationStyle(Style sourceStyle);
    public void SetDestinationStyle(Style sourceStyle, Style destinationStyle);
    public Style GetOrAddDestinationStyle(Style sourceStyle);
    private bool (Style , Style& );
    internal static void (Element , Element , Action`2<string, string> );
    private static void (    ,    & ,    & );
    private static string (string ,   <string,    > );
    private static int (  <string,    > , string );
    private static int (IEnumerable`1<   > , string );
    private static string (string , string );
    private void (Style );
    private     (    );
    private Picture (Picture );
    private void (Style , Style , string );
    internal void (  <T> ,   <T> , bool );
    internal void (    ,     , bool );
    private void ( ​  ,  ​  , bool );
    internal void (  <T> , Format ,   <T> , bool );
    private static void (  <T> , T );
    private static   <T> (Format );
    private static void (DocumentModel , DocumentModel , string , string );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class GemBox.Document.Inline : Element {
    [DebuggerBrowsableAttribute("0")]
private Revision ;
    [DebuggerBrowsableAttribute("0")]
public InlineCollection ParentCollection { get; }
    public Revision Revision { get; public set; }
    [NullableContextAttribute("1")]
private protected Inline(DocumentModel );
    public InlineCollection get_ParentCollection();
    internal void (InlineCollection );
    public Revision get_Revision();
    public void set_Revision(Revision value);
    [NullableContextAttribute("1")]
public Inline Clone(bool cloneDescendants);
    [NullableContextAttribute("1")]
internal Inline (InlineCollection );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class GemBox.Document.InlineCollection : ElementCollection`1<Inline> {
    internal InlineCollection(Element );
    protected virtual void VerifyItem(Inline item, string paramName, int index, bool isSet);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.InlineLayout : Layout {
    public bool IsFloating { get; }
    [DebuggerBrowsableAttribute("0")]
protected string DebuggerDisplay { get; }
    public InlineLayout(Size size);
    public virtual bool get_IsFloating();
    protected virtual string get_DebuggerDisplay();
    protected virtual Layout CreateInstance();
}
[DebuggerDisplayAttribute("{DebuggerDisplay,nq}")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class GemBox.Document.Layout : object {
    [DebuggerBrowsableAttribute("0")]
private Size ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private Transform ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private Padding ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    public bool LockAspectRatio { get; public set; }
    public Size Size { get; public set; }
    public Padding EffectPadding { get; public set; }
    public Transform Transform { get; public set; }
    public bool IsFloating { get; }
    [DebuggerBrowsableAttribute("0")]
protected string DebuggerDisplay { get; }
    internal Layout(Size );
    [CompilerGeneratedAttribute]
public bool get_LockAspectRatio();
    [CompilerGeneratedAttribute]
public void set_LockAspectRatio(bool value);
    public Size get_Size();
    public void set_Size(Size value);
    [CompilerGeneratedAttribute]
public Padding get_EffectPadding();
    [CompilerGeneratedAttribute]
public void set_EffectPadding(Padding value);
    public Transform get_Transform();
    public void set_Transform(Transform value);
    internal    ();
    internal void (   );
    public abstract virtual bool get_IsFloating();
    protected abstract virtual string get_DebuggerDisplay();
    public static InlineLayout Inline(Size size);
    public static InlineLayout Inline(double width, double height, LengthUnit unit);
    public static FloatingLayout Floating(HorizontalPosition horizontalPosition, VerticalPosition verticalPosition, Size size);
    protected abstract virtual Layout CreateInstance();
    protected virtual void CloneMembers(Layout source);
    internal Layout ();
}
public enum GemBox.Document.LengthUnit : Enum {
    public int value__;
    public static LengthUnit Point;
    public static LengthUnit Pixel;
    public static LengthUnit Inch;
    public static LengthUnit Millimeter;
    public static LengthUnit Centimeter;
    public static LengthUnit Pica;
    public static LengthUnit Twip;
    public static LengthUnit Emu;
}
public static class GemBox.Document.LengthUnitConverter : object {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("1")]
private static Int32[] ;
    private static LengthUnitConverter();
    public static double Convert(double length, LengthUnit sourceUnit, LengthUnit destinationUnit);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.LicenseException : Exception {
    internal LicenseException(string );
    internal LicenseException(string , Exception );
    private LicenseException(SerializationInfo , StreamingContext );
}
public enum GemBox.Document.LineNumberRestartSetting : Enum {
    public int value__;
    public static LineNumberRestartSetting None;
    public static LineNumberRestartSetting Continuous;
    public static LineNumberRestartSetting NewPage;
    public static LineNumberRestartSetting NewSection;
}
public enum GemBox.Document.LineSpacingRule : Enum {
    public int value__;
    public static LineSpacingRule AtLeast;
    public static LineSpacingRule Exactly;
    public static LineSpacingRule Multiple;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.ListFormat : Format {
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [NullableAttribute("2")]
public ListStyle Style { get; public set; }
    public bool IsList { get; }
    public int ListLevelNumber { get; public set; }
    public ListLevelFormat ListLevelFormat { get; }
    protected DocumentModel DocumentCore { get; }
    internal ListFormat(    );
    internal     ();
    internal void (    );
    [NullableContextAttribute("2")]
public ListStyle get_Style();
    [NullableContextAttribute("2")]
public void set_Style(ListStyle value);
    public bool get_IsList();
    public int get_ListLevelNumber();
    public void set_ListLevelNumber(int value);
    public ListLevelFormat get_ListLevelFormat();
    internal ListLevelFormat (int );
    internal void (    );
    public ListFormat Clone();
    protected virtual DocumentModel get_DocumentCore();
    public virtual void ClearFormatting();
    public virtual string ToString();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(ListFormat first, ListFormat second);
    public static bool op_Inequality(ListFormat first, ListFormat second);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.ListItem : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private Int32[] ;
    [DebuggerBrowsableAttribute("0")]
private InlineCollection ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [NullableAttribute("2")]
public Paragraph Paragraph { get; }
    public Element Element { get; }
    public IList`1<int> Numbers { get; }
    public InlineCollection Inlines { get; }
    internal ListItem(    , Int32[] );
    [NullableContextAttribute("2")]
public Paragraph get_Paragraph();
    public Element get_Element();
    public IList`1<int> get_Numbers();
    public InlineCollection get_Inlines();
    public virtual string ToString();
    private void ();
    private static Element (    );
    [IteratorStateMachineAttribute("GemBox.Document.ListItem/")]
private static IEnumerable (Int32[] , ListFormat , bool );
    private static string (int , NumberStyle , ListLevelFormat );
    private static string (ListTrailingCharacter );
    private static Picture (Picture , CharacterFormat );
    private sealed virtual override object wrqdwm9duz4cn4vvqqpgnbmfcjbqb2um​ ();
    private sealed virtual override object wrqdwm9duz4cn4vvqqpgnbmfcjbqb2um​ (bool );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.ListLevelFormat : Format {
    [DebuggerBrowsableAttribute("0")]
internal  ​  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ParagraphFormat ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private CharacterFormat ;
    public int Level { get; }
    public int StartAt { get; public set; }
    public NumberStyle NumberStyle { get; public set; }
    public int RestartAfterLevel { get; public set; }
    public ParagraphStyle AssociatedParagraphStyle { get; public set; }
    public bool IsLegal { get; public set; }
    public ListTrailingCharacter TrailingCharacter { get; public set; }
    public string NumberFormat { get; public set; }
    public Picture BulletPicture { get; public set; }
    public HorizontalAlignment Alignment { get; public set; }
    public ParagraphFormat ParagraphFormat { get; }
    public CharacterFormat CharacterFormat { get; public set; }
    public double NumberPosition { get; public set; }
    public double TextPosition { get; public set; }
    protected DocumentModel DocumentCore { get; }
    internal ListLevelFormat( ​  );
    public int get_Level();
    public int get_StartAt();
    public void set_StartAt(int value);
    internal Nullable`1<int> ();
    public NumberStyle get_NumberStyle();
    public void set_NumberStyle(NumberStyle value);
    internal string ();
    public int get_RestartAfterLevel();
    public void set_RestartAfterLevel(int value);
    public ParagraphStyle get_AssociatedParagraphStyle();
    public void set_AssociatedParagraphStyle(ParagraphStyle value);
    public bool get_IsLegal();
    public void set_IsLegal(bool value);
    public ListTrailingCharacter get_TrailingCharacter();
    public void set_TrailingCharacter(ListTrailingCharacter value);
    public string get_NumberFormat();
    public void set_NumberFormat(string value);
    internal bool ();
    public Picture get_BulletPicture();
    public void set_BulletPicture(Picture value);
    public HorizontalAlignment get_Alignment();
    public void set_Alignment(HorizontalAlignment value);
    public ParagraphFormat get_ParagraphFormat();
    public CharacterFormat get_CharacterFormat();
    public void set_CharacterFormat(CharacterFormat value);
    public double get_NumberPosition();
    public void set_NumberPosition(double value);
    public double get_TextPosition();
    public void set_TextPosition(double value);
    protected virtual DocumentModel get_DocumentCore();
    public virtual void ClearFormatting();
    public virtual string ToString();
    public virtual bool Equals(object obj);
    internal bool (ListLevelFormat );
    public virtual int GetHashCode();
    public static bool op_Equality(ListLevelFormat first, ListLevelFormat second);
    public static bool op_Inequality(ListLevelFormat first, ListLevelFormat second);
    private T (Func`2<   , T> );
    private void (Action`1<   > );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class GemBox.Document.ListLevelFormatCollection : ReadOnlyCollection`1<ListLevelFormat> {
    internal ListLevelFormatCollection(    );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.ListStyle : Style {
    [DebuggerBrowsableAttribute("0")]
internal    [] ;
    [DebuggerBrowsableAttribute("0")]
internal ListTemplateType ;
    [DebuggerBrowsableAttribute("0")]
internal DocumentModel ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ListStyle ;
    [DebuggerBrowsableAttribute("0")]
private ListLevelFormatCollection ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int>  ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    public StyleType StyleType { get; }
    [NullableAttribute("2")]
public ListStyle BaseStyle { get; public set; }
    public ListLevelFormatCollection ListLevelFormats { get; }
    [NullableAttribute("2")]
protected Style BaseStyleCore { get; protected set; }
    public DocumentModel Document { get; protected set; }
    [DebuggerBrowsableAttribute("0")]
internal   { get; }
    public ListStyle(string name, ListTemplateType type);
    public ListStyle(ListTemplateType type);
    private ListStyle(ListStyle );
    internal Nullable`1<int> ();
    internal void (Nullable`1<int> );
    internal Nullable`1<> ();
    internal void (Nullable`1<> );
    internal Nullable`1<int> ();
    internal void (Nullable`1<int> );
    internal string ();
    internal void (string );
    public virtual StyleType get_StyleType();
    [NullableContextAttribute("2")]
public ListStyle get_BaseStyle();
    [NullableContextAttribute("2")]
public void set_BaseStyle(ListStyle value);
    public ListLevelFormatCollection get_ListLevelFormats();
    [NullableContextAttribute("2")]
protected virtual Style get_BaseStyleCore();
    [NullableContextAttribute("2")]
protected virtual void set_BaseStyleCore(Style value);
    public virtual DocumentModel get_Document();
    protected virtual void set_Document(DocumentModel value);
    internal static void (   [] , DocumentModel , Func`2<int, TFormatProvider> );
    internal virtual Style 68fp7mkt9fybxft862un8hgms2ez5evk​  ();
    internal virtual bool 68fp7mkt9fybxft862un8hgms2ez5evk​ (Style );
    internal virtual bool 68fp7mkt9fybxft862un8hgms2ez5evk​ (Style );
    internal     (int );
    internal  (int );
    private sealed virtual override  ​  x5dn4ttj58rvn8xt2q2pucbdyhadux9c​ (int );
    private  (int );
}
public enum GemBox.Document.ListTemplateType : Enum {
    public int value__;
    public static ListTemplateType Bullet;
    public static ListTemplateType BulletCircle;
    public static ListTemplateType BulletSquare;
    public static ListTemplateType BulletDiamonds;
    public static ListTemplateType BulletArrow;
    public static ListTemplateType BulletCheckmark;
    public static ListTemplateType LowerLetterWithBracket;
    public static ListTemplateType NumberWithDot;
    public static ListTemplateType NumberWithBracket;
    public static ListTemplateType UpperRomanNumberWithDot;
    public static ListTemplateType UpperLetterWithDot;
    public static ListTemplateType LowerLetterWithDot;
    public static ListTemplateType LowerRomanNumberWithDot;
    public static ListTemplateType None;
}
public enum GemBox.Document.ListTrailingCharacter : Enum {
    public int value__;
    public static ListTrailingCharacter Tab;
    public static ListTrailingCharacter Space;
    public static ListTrailingCharacter Nothing;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class GemBox.Document.LoadOptions : object {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public bool PreserveUnsupportedFeatures { get; public set; }
    public static DocxLoadOptions DocxDefault { get; }
    public static DocLoadOptions DocDefault { get; }
    public static HtmlLoadOptions HtmlDefault { get; }
    public static OdtLoadOptions OdtDefault { get; }
    public static RtfLoadOptions RtfDefault { get; }
    public static PdfLoadOptions PdfDefault { get; }
    public static TxtLoadOptions TxtDefault { get; }
    public static XmlLoadOptions XmlDefault { get; }
    [CompilerGeneratedAttribute]
public bool get_PreserveUnsupportedFeatures();
    [CompilerGeneratedAttribute]
public void set_PreserveUnsupportedFeatures(bool value);
    public static DocxLoadOptions get_DocxDefault();
    public static DocLoadOptions get_DocDefault();
    public static HtmlLoadOptions get_HtmlDefault();
    public static OdtLoadOptions get_OdtDefault();
    public static RtfLoadOptions get_RtfDefault();
    public static PdfLoadOptions get_PdfDefault();
    public static TxtLoadOptions get_TxtDefault();
    public static XmlLoadOptions get_XmlDefault();
    internal virtual bool 7k4lmxmhj5tk8h83eglk6fss34tasuhn​ ();
    internal static LoadOptions (string , bool );
    internal abstract virtual DocumentModel 7k4lmxmhj5tk8h83eglk6fss34tasuhn​ (Stream , string );
}
[DefaultMemberAttribute("")]
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class GemBox.Document.MailMerging.FieldMappingDictionary : DictionaryBase`2<string, string> {
    [DebuggerBrowsableAttribute("0")]
internal string  { get; }
    protected virtual void ValidateBeforeAdd(string key, string value);
    public void Add(string fieldName, string valueName);
    internal string (string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.MailMerging.FieldMergingEventArgs : CancelEventArgs {
    [DebuggerBrowsableAttribute("0")]
private List`1<Inline> ;
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    [DebuggerBrowsableAttribute("0")]
private Field ;
    [DebuggerBrowsableAttribute("0")]
private object ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private MailMergeContext ;
    public IList`1<Inline> Inlines { get; }
    [NullableAttribute("2")]
public Inline Inline { get; public set; }
    public DocumentModel Document { get; }
    public Field Field { get; }
    [NullableAttribute("2")]
public string FieldName { get; }
    public object Value { get; }
    public bool IsValueFound { get; }
    public MailMergeContext MergeContext { get; }
    [ObsoleteAttribute("Use MergeContext.RecordIndex + 1 instead.")]
[EditorBrowsableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
public int RecordNumber { get; }
    [ObsoleteAttribute("Use MergeContext.RangeName instead.")]
[EditorBrowsableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
public string RangeName { get; }
    internal FieldMergingEventArgs(DocumentModel );
    internal void (Field , bool , object , MailMergeContext , IEnumerable`1<Inline> );
    internal void ();
    public IList`1<Inline> get_Inlines();
    [NullableContextAttribute("2")]
public Inline get_Inline();
    [NullableContextAttribute("2")]
public void set_Inline(Inline value);
    [CompilerGeneratedAttribute]
public DocumentModel get_Document();
    [CompilerGeneratedAttribute]
public Field get_Field();
    private void (Field );
    [NullableContextAttribute("2")]
public string get_FieldName();
    [CompilerGeneratedAttribute]
public object get_Value();
    private void (object );
    [CompilerGeneratedAttribute]
public bool get_IsValueFound();
    private void (bool );
    [CompilerGeneratedAttribute]
public MailMergeContext get_MergeContext();
    private void (MailMergeContext );
    public int get_RecordNumber();
    public string get_RangeName();
}
[NullableContextAttribute("1")]
public interface GemBox.Document.MailMerging.IMailMergeDataSource {
    public string Name { get; }
    public abstract virtual string get_Name();
    public abstract virtual bool MoveNext();
    public abstract virtual bool TryGetValue(string valueName, Object& value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.MailMerging.MailMerge : object {
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    [DebuggerBrowsableAttribute("0")]
private FieldMergingEventArgs ;
    [DebuggerBrowsableAttribute("0")]
private FieldMappingDictionary ;
    [DebuggerBrowsableAttribute("0")]
private HashSet`1<Field> ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string  ;
    [DebuggerBrowsableAttribute("0")]
private EventHandler`1<FieldMergingEventArgs>  ;
    [DebuggerBrowsableAttribute("0")]
private MailMergeClearOptions  ;
    public MailMergeClearOptions ClearOptions { get; public set; }
    public DocumentModel Document { get; }
    public string RangeStartPrefix { get; public set; }
    public string RangeEndPrefix { get; public set; }
    public string PicturePrefix { get; public set; }
    public string PictureBasePath { get; public set; }
    public FieldMappingDictionary FieldMappings { get; }
    [ObsoleteAttribute("Use 'GemBox.Document.DocumentModel.DefaultCharacterFormat.Language' or 'GemBox.Document.Field.CharacterFormat.Language' instead.", "True")]
[EditorBrowsableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
public CultureInfo DefaultFormattingCulture { get; public set; }
    [ObsoleteAttribute("Use 'GemBox.Document.MailMerging.MailMerge.ClearOptions' property with 'GemBox.Document.MailMerging.MailMergeClearOptions.RemoveEmptyRanges' value instead.")]
[EditorBrowsableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
public bool RemoveEmptyRanges { get; public set; }
    internal MailMerge(DocumentModel );
    [CompilerGeneratedAttribute]
public void add_FieldMerging(EventHandler`1<FieldMergingEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_FieldMerging(EventHandler`1<FieldMergingEventArgs> value);
    [CompilerGeneratedAttribute]
public MailMergeClearOptions get_ClearOptions();
    [CompilerGeneratedAttribute]
public void set_ClearOptions(MailMergeClearOptions value);
    public DocumentModel get_Document();
    public string get_RangeStartPrefix();
    public void set_RangeStartPrefix(string value);
    public string get_RangeEndPrefix();
    public void set_RangeEndPrefix(string value);
    public string get_PicturePrefix();
    public void set_PicturePrefix(string value);
    public string get_PictureBasePath();
    public void set_PictureBasePath(string value);
    public FieldMappingDictionary get_FieldMappings();
    public CultureInfo get_DefaultFormattingCulture();
    public void set_DefaultFormattingCulture(CultureInfo value);
    public void RemoveMergeFields();
    public void RemoveMergeFields(bool allRelatedMergeFields);
    private static void (ElementCollection , bool );
    [IteratorStateMachineAttribute("GemBox.Document.MailMerging.MailMerge/")]
private static IEnumerable`1<Field> (ElementCollection );
    [IteratorStateMachineAttribute("GemBox.Document.MailMerging.MailMerge/")]
public IEnumerable`1<string> GetMergeFieldNames();
    [ComVisibleAttribute("True")]
public void Execute(object dataSource);
    [ComVisibleAttribute("False")]
public void Execute(object dataSource, string rangeName);
    private void (object , string , bool );
    private bool (MailMergeClearOptions );
    private bool (string , IMailMergeDataSource , MailMergeContext , Field& , Field& );
    private bool (ElementCollection , MailMergeContext , Field& , Field& );
    private string (string , Boolean& );
    private string (string );
    private  ​  (Field , Field );
    private static bool (Element , ElementCollection , bool );
    private static Element (ElementCollection , bool );
    private static bool (Dictionary`2<ElementCollection, int> , Element& , ElementCollection& , Int32& , Int32& );
    private static void (Field );
    private bool (IMailMergeDataSource ,  ​  , string , Field , Field , MailMergeContext );
    private  ​  ( ​  ,  ​  , string );
    private bool (IMailMergeDataSource ,  ​  , MailMergeContext , & );
    private static List`1<Field> (Field );
    private bool (IMailMergeDataSource , MailMergeContext , & , Field );
    private bool (Field , bool , object ,  ​  , MailMergeContext , & , Int32& , Inline  );
    private bool (Field , MailMergeContext ,  );
    public bool get_RemoveEmptyRanges();
    public void set_RemoveEmptyRanges(bool value);
    [ObsoleteAttribute("Use 'GemBox.Document.MailMerging.MailMerge.Execute(System.Object)' method instead.")]
[EditorBrowsableAttribute("1")]
public void ExecuteRange(object dataSource);
    [ObsoleteAttribute("Use 'GemBox.Document.MailMerging.MailMerge.Execute(System.Object, System.String)' method instead.")]
[EditorBrowsableAttribute("1")]
public void ExecuteRange(string rangeName, object dataSource);
}
[FlagsAttribute]
public enum GemBox.Document.MailMerging.MailMergeClearOptions : Enum {
    public int value__;
    public static MailMergeClearOptions None;
    public static MailMergeClearOptions RemoveUnusedFields;
    public static MailMergeClearOptions RemoveEmptyRanges;
    public static MailMergeClearOptions RemoveEmptyParagraphs;
    public static MailMergeClearOptions RemoveEmptyTableRows;
    public static MailMergeClearOptions RemoveEmptyTables;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.MailMerging.MailMergeContext : object {
    [DebuggerBrowsableAttribute("0")]
private IMailMergeDataSource ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Stack`1<KeyValuePair`2<string, Field>> ;
    [DebuggerBrowsableAttribute("0")]
private List`1< ​ > ;
    [DebuggerBrowsableAttribute("0")]
private IList`1<Field> ;
    [DebuggerBrowsableAttribute("0")]
private IList`1<Field> ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private Field ;
    [DebuggerBrowsableAttribute("0")]
private Field  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private MailMergeContext  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    public string RangeName { get; }
    public Field RangeStartField { get; }
    public Field RangeEndField { get; }
    [NullableAttribute("2")]
public MailMergeContext ParentContext { get; }
    public int RecordIndex { get; }
    public object Record { get; }
    internal MailMergeContext(string , IMailMergeDataSource , MailMergeContext );
    [CompilerGeneratedAttribute]
public string get_RangeName();
    [CompilerGeneratedAttribute]
public Field get_RangeStartField();
    internal void (Field );
    [CompilerGeneratedAttribute]
public Field get_RangeEndField();
    internal void (Field );
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public MailMergeContext get_ParentContext();
    internal bool ();
    internal string ();
    internal IEnumerable`1< ​ > ();
    internal IList`1<Field> ();
    internal void (IList`1<Field> );
    [CompilerGeneratedAttribute]
public int get_RecordIndex();
    internal void (int );
    public object get_Record();
    internal int  ();
    internal void (int );
    internal bool ();
    internal void (bool );
    internal bool ();
    internal void (bool );
    internal bool ();
    internal void (bool );
    public virtual string ToString();
    internal void (string , Field );
    internal void (string , Field );
    internal void (string , Field , IMailMergeDataSource );
    internal void  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.MultiContentRange : object {
    [DebuggerBrowsableAttribute("0")]
private IList`1<ContentPosition> ;
    [DebuggerBrowsableAttribute("0")]
private IList`1<ContentPosition> ;
    public IList`1<ContentPosition> Start { get; }
    public IList`1<ContentPosition> End { get; }
    internal MultiContentRange(IList`1<ContentPosition> , IList`1<ContentPosition> );
    internal MultiContentRange(ContentPosition , ContentPosition );
    internal MultiContentRange(Element );
    [CompilerGeneratedAttribute]
public IList`1<ContentPosition> get_Start();
    [CompilerGeneratedAttribute]
public IList`1<ContentPosition> get_End();
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.MultipleBorders : object {
    [DebuggerBrowsableAttribute("0")]
internal object ;
    [DebuggerBrowsableAttribute("0")]
private IList`1<SingleBorderType> ;
    [DebuggerBrowsableAttribute("0")]
private Func`2<int, Nullable`1<SingleBorder>> ;
    [DebuggerBrowsableAttribute("0")]
private Action`1<Func`2<   ,    >> ;
    public IEnumerable`1<SingleBorderType> SupportedBorderTypes { get; }
    public SingleBorder Item { get; }
    internal MultipleBorders(object , IList`1<SingleBorderType> , Func`2<int, Nullable`1<SingleBorder>> , Action`1<Func`2<   ,    >> );
    [IteratorStateMachineAttribute("GemBox.Document.MultipleBorders/ ")]
public IEnumerable`1<SingleBorderType> get_SupportedBorderTypes();
    [IteratorStateMachineAttribute("GemBox.Document.MultipleBorders/")]
public static IEnumerable`1<SingleBorderType> ToSingleBorderTypes(MultipleBorderTypes borderTypes);
    [IteratorStateMachineAttribute("GemBox.Document.MultipleBorders/")]
private IEnumerable`1<int> (MultipleBorderTypes );
    public void SetBorders(MultipleBorderTypes borderTypes, BorderStyle borderStyle, Color borderColor, double borderWidth);
    public void SetBorders(MultipleBorderTypes borderTypes, BorderStyle borderStyle, Color borderColor, double borderWidth, double borderSpace);
    internal void (MultipleBorderTypes , SingleBorder );
    internal void ();
    public void ClearBorders(MultipleBorderTypes borderTypes);
    public void ClearBorders();
    public SingleBorder get_Item(SingleBorderType borderType);
    internal Nullable`1<SingleBorder> (SingleBorderType );
    internal void (SingleBorderType , Nullable`1<SingleBorder> );
    internal int (SingleBorderType , bool );
    internal bool (SingleBorderType );
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(MultipleBorders first, MultipleBorders second);
    public static bool op_Inequality(MultipleBorders first, MultipleBorders second);
    [EditorBrowsableAttribute("1")]
public void Add(MultipleBorderTypes borderTypes, BorderStyle borderStyle, Color borderColor, double borderWidth);
    [IteratorStateMachineAttribute("GemBox.Document.MultipleBorders/")]
private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[FlagsAttribute]
public enum GemBox.Document.MultipleBorderTypes : Enum {
    public int value__;
    public static MultipleBorderTypes None;
    public static MultipleBorderTypes Left;
    public static MultipleBorderTypes Top;
    public static MultipleBorderTypes Right;
    public static MultipleBorderTypes Bottom;
    public static MultipleBorderTypes InsideHorizontal;
    public static MultipleBorderTypes InsideVertical;
    public static MultipleBorderTypes DiagonalDown;
    public static MultipleBorderTypes DiagonalUp;
    public static MultipleBorderTypes Outside;
    public static MultipleBorderTypes Inside;
    public static MultipleBorderTypes Diagonal;
    public static MultipleBorderTypes All;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Note : Inline {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private BlockCollection ;
    [DebuggerBrowsableAttribute("0")]
private NoteType ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal string  { get; internal set; }
    public BlockCollection Blocks { get; }
    public NoteType NoteType { get; }
    [NullableAttribute("2")]
public string CustomMark { get; public set; }
    private IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.Content { get; }
    [DebuggerBrowsableAttribute("0")]
public DocumentModel Document { get; }
    public ElementType ElementType { get; }
    public CharacterFormat CharacterFormat { get; public set; }
    private Note(DocumentModel , Note );
    internal Note(DocumentModel , NoteType , bool );
    public Note(DocumentModel document, NoteType noteType);
    public Note(DocumentModel document, NoteType noteType, string text);
    public Note(DocumentModel document, NoteType noteType, Block[] items);
    public Note(DocumentModel document, NoteType noteType, IEnumerable`1<Block> items);
    [NullableContextAttribute("2")]
internal string ();
    [NullableContextAttribute("2")]
internal void (string );
    [CompilerGeneratedAttribute]
public BlockCollection get_Blocks();
    [CompilerGeneratedAttribute]
public NoteType get_NoteType();
    private void (NoteType );
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public string get_CustomMark();
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public void set_CustomMark(string value);
    [IteratorStateMachineAttribute("GemBox.Document.Note/")]
private sealed virtual override IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.get_Content();
    public virtual DocumentModel get_Document();
    private sealed virtual override     9ts6skymfx6r8tway5e54z7z6x9mdtss​ ();
    private sealed virtual override void 9ts6skymfx6r8tway5e54z7z6x9mdtss​ (    );
    private sealed virtual override  ​ <   > 9ts6skymfx6r8tway5e54z7z6x9mdtss​ ();
    private sealed virtual override bool 9ts6skymfx6r8tway5e54z7z6x9mdtss​ (Func`2<   , U> , U& );
    public virtual ElementType get_ElementType();
    public CharacterFormat get_CharacterFormat();
    public void set_CharacterFormat(CharacterFormat value);
    private static ParagraphStyle (DocumentModel , NoteType );
    private static Paragraph (DocumentModel , NoteType , Inline[] );
    private static SpecialCharacter (DocumentModel , NoteType );
    [IteratorStateMachineAttribute("GemBox.Document.Note/")]
internal virtual IEnumerable`1<ElementType> p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (ElementCollection );
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
}
public enum GemBox.Document.NoteLocation : Enum {
    public int value__;
    public static NoteLocation BottomOfPage;
    public static NoteLocation BelowText;
    public static NoteLocation EndOfDocument;
    public static NoteLocation EndOfSection;
}
public enum GemBox.Document.NoteNumbering : Enum {
    public int value__;
    public static NoteNumbering Continuous;
    public static NoteNumbering RestartEachSection;
    public static NoteNumbering RestartEachPage;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.NoteSettings : object {
    [DebuggerBrowsableAttribute("0")]
private NoteLocation ;
    [DebuggerBrowsableAttribute("0")]
private NumberStyle ;
    [DebuggerBrowsableAttribute("0")]
private NoteNumbering ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private DocumentSettings ;
    [DebuggerBrowsableAttribute("0")]
private NoteType ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<int, Tuple`2<Note, bool>>  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal Dictionary`2<int, Tuple`2<Note, bool>>  { get; internal set; }
    public NoteLocation Location { get; public set; }
    public int ColumnCount { get; public set; }
    public NumberStyle NumberStyle { get; public set; }
    public NoteNumbering Numbering { get; public set; }
    public int StartAt { get; public set; }
    [NullableContextAttribute("2")]
internal NoteSettings(DocumentSettings , NoteType );
    internal NoteType ();
    internal Dictionary`2<int, Tuple`2<Note, bool>> ();
    internal void (Dictionary`2<int, Tuple`2<Note, bool>> );
    private void (Action`1<NoteSettings> );
    internal bool ();
    public NoteLocation get_Location();
    public void set_Location(NoteLocation value);
    public int get_ColumnCount();
    public void set_ColumnCount(int value);
    public NumberStyle get_NumberStyle();
    public void set_NumberStyle(NumberStyle value);
    public NoteNumbering get_Numbering();
    public void set_Numbering(NoteNumbering value);
    public int get_StartAt();
    public void set_StartAt(int value);
    internal NoteSettings (DocumentSettings );
}
public enum GemBox.Document.NoteType : Enum {
    public int value__;
    public static NoteType Footnote;
    public static NoteType Endnote;
}
public enum GemBox.Document.NumberStyle : Enum {
    public int value__;
    public static NumberStyle Decimal;
    public static NumberStyle UpperRoman;
    public static NumberStyle LowerRoman;
    public static NumberStyle UpperLetter;
    public static NumberStyle LowerLetter;
    public static NumberStyle Bullet;
    public static NumberStyle None;
    public static NumberStyle DecimalZero;
    public static NumberStyle Chicago;
    public static NumberStyle JapaneseCounting;
    public static NumberStyle ChineseCounting;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.OdtLoadOptions : LoadOptions {
    internal virtual DocumentModel 7k4lmxmhj5tk8h83eglk6fss34tasuhn​ (Stream , string );
    private DocumentModel (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.OdtSaveOptions : SaveOptions {
    public string ContentType { get; }
    public virtual string get_ContentType();
    internal virtual bool 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ ();
    internal virtual void 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ (DocumentModel , Stream , string );
}
public class GemBox.Document.OperationProgressChangedEventArgs : ProgressChangedEventArgs {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [NullableContextAttribute("1")]
internal OperationProgressChangedEventArgs(int , object );
    internal bool ();
    private void (bool );
    public void CancelOperation();
}
public enum GemBox.Document.Orientation : Enum {
    public int value__;
    public static Orientation Portrait;
    public static Orientation Landscape;
}
public enum GemBox.Document.OutlineLevel : Enum {
    public int value__;
    public static OutlineLevel BodyText;
    public static OutlineLevel Level1;
    public static OutlineLevel Level2;
    public static OutlineLevel Level3;
    public static OutlineLevel Level4;
    public static OutlineLevel Level5;
    public static OutlineLevel Level6;
    public static OutlineLevel Level7;
    public static OutlineLevel Level8;
    public static OutlineLevel Level9;
}
public class GemBox.Document.Padding : ValueType {
    [DebuggerBrowsableAttribute("0")]
public static Padding None;
    [DebuggerBrowsableAttribute("0")]
internal static Padding ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public double Left { get; }
    public double Top { get; }
    public double Right { get; }
    public double Bottom { get; }
    public Padding(double left, double top, double right, double bottom);
    public Padding(double leftRight, double topBottom);
    public Padding(double leftTopRightBottom);
    public Padding(double left, double top, double right, double bottom, LengthUnit unit);
    public Padding(double leftRight, double topBottom, LengthUnit unit);
    public Padding(double leftTopRightBottom, LengthUnit unit);
    private static Padding();
    public double get_Left();
    public double get_Top();
    public double get_Right();
    public double get_Bottom();
    internal bool ();
    internal bool ();
    internal bool ();
    internal bool ();
    internal bool ();
    private static double (double );
    public sealed virtual bool Equals(Padding other);
    [NullableContextAttribute("1")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static bool op_Equality(Padding first, Padding second);
    public static bool op_Inequality(Padding first, Padding second);
    internal Padding (Padding );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.PageBorders : MultipleBorders {
    [DebuggerBrowsableAttribute("0")]
internal static SingleBorderType[] ;
    [DebuggerBrowsableAttribute("0")]
internal Nullable`1<bool> ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public bool ApplyToFirstPageOnly { get; public set; }
    public bool ApplyToAllExceptFirstPage { get; public set; }
    public bool MeasureFromEdgeOfPage { get; public set; }
    public bool AlignParagraphBordersAndTableEdgesWithPageBorder { get; public set; }
    public bool AlwaysDisplayInFront { get; public set; }
    public bool SurroundHeader { get; public set; }
    public bool SurroundFooter { get; public set; }
    internal PageBorders(PageSetup );
    private static PageBorders();
    public bool get_ApplyToFirstPageOnly();
    public void set_ApplyToFirstPageOnly(bool value);
    public bool get_ApplyToAllExceptFirstPage();
    public void set_ApplyToAllExceptFirstPage(bool value);
    [CompilerGeneratedAttribute]
public bool get_MeasureFromEdgeOfPage();
    [CompilerGeneratedAttribute]
public void set_MeasureFromEdgeOfPage(bool value);
    public bool get_AlignParagraphBordersAndTableEdgesWithPageBorder();
    public void set_AlignParagraphBordersAndTableEdgesWithPageBorder(bool value);
    [CompilerGeneratedAttribute]
public bool get_AlwaysDisplayInFront();
    [CompilerGeneratedAttribute]
public void set_AlwaysDisplayInFront(bool value);
    public bool get_SurroundHeader();
    public void set_SurroundHeader(bool value);
    public bool get_SurroundFooter();
    public void set_SurroundFooter(bool value);
    private DocumentSettings (bool );
    internal void (PageBorders );
}
public class GemBox.Document.PageMargins : object {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public double Top { get; public set; }
    public double Bottom { get; public set; }
    public double Left { get; public set; }
    public double Right { get; public set; }
    public double Gutter { get; public set; }
    public double Header { get; public set; }
    public double Footer { get; public set; }
    public double get_Top();
    public void set_Top(double value);
    public double get_Bottom();
    public void set_Bottom(double value);
    public double get_Left();
    public void set_Left(double value);
    public double get_Right();
    public void set_Right(double value);
    public double get_Gutter();
    public void set_Gutter(double value);
    public double get_Header();
    public void set_Header(double value);
    public double get_Footer();
    public void set_Footer(double value);
    [NullableContextAttribute("1")]
public PageMargins Clone();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.PageSetup : object {
    [DebuggerBrowsableAttribute("0")]
private Section ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private Orientation ;
    [DebuggerBrowsableAttribute("0")]
internal Nullable`1<int> ;
    [DebuggerBrowsableAttribute("0")]
private PageMargins ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private PageBorders  ;
    [DebuggerBrowsableAttribute("0")]
private double  ;
    [DebuggerBrowsableAttribute("0")]
private LineNumberRestartSetting  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private TextColumnCollection  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int>  ;
    [DebuggerBrowsableAttribute("0")]
private Color  ;
    [DebuggerBrowsableAttribute("0")]
internal Nullable`1<bool>  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private   ;
    [DebuggerBrowsableAttribute("0")]
private SectionStart  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private NumberStyle  ;
    [DebuggerBrowsableAttribute("0")]
private PageVerticalAlignment  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private object  ;
    [DebuggerBrowsableAttribute("0")]
private ​   ;
    public SectionStart SectionStart { get; public set; }
    public bool RightToLeft { get; public set; }
    public NumberStyle PageNumberStyle { get; public set; }
    public PageVerticalAlignment VerticalAlignment { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal object   { get; internal set; }
    public double PageWidth { get; public set; }
    public double PageHeight { get; public set; }
    public PaperType PaperType { get; public set; }
    public Orientation Orientation { get; public set; }
    public PageMargins PageMargins { get; public set; }
    public PageBorders PageBorders { get; }
    public double LineNumberDistanceFromText { get; public set; }
    public LineNumberRestartSetting LineNumberRestartSetting { get; public set; }
    public int LineStartingNumber { get; public set; }
    public int LineNumberCountBy { get; public set; }
    public TextColumnCollection TextColumns { get; public set; }
    public Nullable`1<int> PageStartingNumber { get; public set; }
    public Color PageColor { get; public set; }
    private PageSetup(PageSetup );
    internal Section ();
    internal void (Section );
    [CompilerGeneratedAttribute]
public SectionStart get_SectionStart();
    [CompilerGeneratedAttribute]
public void set_SectionStart(SectionStart value);
    [CompilerGeneratedAttribute]
public bool get_RightToLeft();
    [CompilerGeneratedAttribute]
public void set_RightToLeft(bool value);
    [CompilerGeneratedAttribute]
public NumberStyle get_PageNumberStyle();
    [CompilerGeneratedAttribute]
public void set_PageNumberStyle(NumberStyle value);
    [CompilerGeneratedAttribute]
public PageVerticalAlignment get_VerticalAlignment();
    [CompilerGeneratedAttribute]
public void set_VerticalAlignment(PageVerticalAlignment value);
    [NullableContextAttribute("2")]
internal object ();
    [NullableContextAttribute("2")]
internal void (object );
    public double get_PageWidth();
    public void set_PageWidth(double value);
    public double get_PageHeight();
    public void set_PageHeight(double value);
    public PaperType get_PaperType();
    public void set_PaperType(PaperType value);
    public Orientation get_Orientation();
    public void set_Orientation(Orientation value);
    public PageMargins get_PageMargins();
    public void set_PageMargins(PageMargins value);
    internal bool ();
    public PageBorders get_PageBorders();
    public double get_LineNumberDistanceFromText();
    public void set_LineNumberDistanceFromText(double value);
    public LineNumberRestartSetting get_LineNumberRestartSetting();
    public void set_LineNumberRestartSetting(LineNumberRestartSetting value);
    public int get_LineStartingNumber();
    public void set_LineStartingNumber(int value);
    public int get_LineNumberCountBy();
    public void set_LineNumberCountBy(int value);
    public TextColumnCollection get_TextColumns();
    public void set_TextColumns(TextColumnCollection value);
    public Nullable`1<int> get_PageStartingNumber();
    public void set_PageStartingNumber(Nullable`1<int> value);
    public Color get_PageColor();
    public void set_PageColor(Color value);
    internal bool ();
    internal void (bool );
    internal int  ();
    internal void (int );
    internal   ();
    internal void ( );
    internal ​   ();
    internal void (​  );
    internal bool ();
    internal double ();
    internal double ();
    public PageSetup Clone();
    internal Nullable`1<SingleBorder> (int );
    internal void (Func`2<   ,    > );
}
public enum GemBox.Document.PageVerticalAlignment : Enum {
    public int value__;
    public static PageVerticalAlignment Top;
    public static PageVerticalAlignment Center;
    public static PageVerticalAlignment Justify;
    public static PageVerticalAlignment Bottom;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.PaginatorOptions : object {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int  ;
    [DebuggerBrowsableAttribute("0")]
private EventHandler`1<OperationProgressChangedEventArgs>  ;
    public bool UpdateTableColumnWidths { get; public set; }
    public bool UpdateTableCellWidths { get; public set; }
    public bool UpdateTableWidth { get; public set; }
    public bool UpdateFields { get; public set; }
    public bool TrimExcessTableCellSpans { get; public set; }
    public bool UpdateTextBoxHeights { get; public set; }
    public int PageNumber { get; public set; }
    public int PageCount { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_UpdateTableColumnWidths();
    [CompilerGeneratedAttribute]
public void set_UpdateTableColumnWidths(bool value);
    [CompilerGeneratedAttribute]
public bool get_UpdateTableCellWidths();
    [CompilerGeneratedAttribute]
public void set_UpdateTableCellWidths(bool value);
    [CompilerGeneratedAttribute]
public bool get_UpdateTableWidth();
    [CompilerGeneratedAttribute]
public void set_UpdateTableWidth(bool value);
    [CompilerGeneratedAttribute]
public bool get_UpdateFields();
    [CompilerGeneratedAttribute]
public void set_UpdateFields(bool value);
    [CompilerGeneratedAttribute]
public bool get_TrimExcessTableCellSpans();
    [CompilerGeneratedAttribute]
public void set_TrimExcessTableCellSpans(bool value);
    [CompilerGeneratedAttribute]
public bool get_UpdateTextBoxHeights();
    [CompilerGeneratedAttribute]
public void set_UpdateTextBoxHeights(bool value);
    [CompilerGeneratedAttribute]
public int get_PageNumber();
    [CompilerGeneratedAttribute]
public void set_PageNumber(int value);
    [CompilerGeneratedAttribute]
public int get_PageCount();
    [CompilerGeneratedAttribute]
public void set_PageCount(int value);
    [CompilerGeneratedAttribute]
public void add_ProgressChanged(EventHandler`1<OperationProgressChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_ProgressChanged(EventHandler`1<OperationProgressChangedEventArgs> value);
    internal ​  (DocumentModel );
}
public enum GemBox.Document.PaperType : Enum {
    public int value__;
    public static PaperType Custom;
    public static PaperType Letter;
    public static PaperType Legal;
    public static PaperType Executive;
    public static PaperType A3;
    public static PaperType A4;
    public static PaperType A5;
    public static PaperType B4;
    public static PaperType Paper11x17;
    public static PaperType EnvelopeDL;
    public static PaperType EnvelopeC5;
    public static PaperType B5;
    public static PaperType A2;
    public static PaperType A6;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Paragraph : Block {
    [DebuggerBrowsableAttribute("0")]
private InlineCollection ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private static Random ;
    [DebuggerBrowsableAttribute("0")]
public ElementType ElementType { get; }
    [DebuggerBrowsableAttribute("0")]
public DocumentModel Document { get; }
    public InlineCollection Inlines { get; }
    public ParagraphFormat ParagraphFormat { get; public set; }
    public ListFormat ListFormat { get; public set; }
    public CharacterFormat CharacterFormatForParagraphMark { get; public set; }
    [NullableAttribute("2")]
public ListItem ListItem { get; }
    [NullableAttribute("2")]
public Revision Revision { get; public set; }
    [NullableAttribute("2")]
public CharacterFormatRevision CharacterFormatForParagraphMarkRevision { get; public set; }
    [NullableAttribute("2")]
public ParagraphFormatRevision ParagraphFormatRevision { get; public set; }
    [DebuggerBrowsableAttribute("0")]
private IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.Content { get; }
    public Paragraph(DocumentModel document);
    public Paragraph(DocumentModel document, string text);
    public Paragraph(DocumentModel document, IEnumerable`1<Inline> items);
    public Paragraph(DocumentModel document, Inline[] items);
    private Paragraph(DocumentModel , Paragraph );
    private static Paragraph();
    public virtual ElementType get_ElementType();
    public virtual DocumentModel get_Document();
    public InlineCollection get_Inlines();
    public ParagraphFormat get_ParagraphFormat();
    public void set_ParagraphFormat(ParagraphFormat value);
    public sealed virtual ListFormat get_ListFormat();
    public void set_ListFormat(ListFormat value);
    public CharacterFormat get_CharacterFormatForParagraphMark();
    public void set_CharacterFormatForParagraphMark(CharacterFormat value);
    [NullableContextAttribute("2")]
public ListItem get_ListItem();
    [NullableContextAttribute("2")]
public Revision get_Revision();
    [NullableContextAttribute("2")]
public void set_Revision(Revision value);
    [NullableContextAttribute("2")]
public CharacterFormatRevision get_CharacterFormatForParagraphMarkRevision();
    [NullableContextAttribute("2")]
public void set_CharacterFormatForParagraphMarkRevision(CharacterFormatRevision value);
    [NullableContextAttribute("2")]
public ParagraphFormatRevision get_ParagraphFormatRevision();
    [NullableContextAttribute("2")]
public void set_ParagraphFormatRevision(ParagraphFormatRevision value);
    internal bool (Style );
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    public Paragraph Clone(bool cloneDescendants);
    [IteratorStateMachineAttribute("GemBox.Document.Paragraph/")]
internal virtual IEnumerable`1<ElementType> p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (ElementCollection );
    private     ();
    internal int ();
    internal void (int );
    [IteratorStateMachineAttribute("GemBox.Document.Paragraph/")]
private sealed virtual override IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.get_Content();
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
    private sealed virtual override bool aukwtulkxyley9uf4qqvqdhhsdtm7sby​ (Func`2<   , U> , U& );
    private sealed virtual override     aukwtulkxyley9uf4qqvqdhhsdtm7sby​ ();
    private sealed virtual override void aukwtulkxyley9uf4qqvqdhhsdtm7sby​ (    );
    private sealed virtual override  ​ <   > aukwtulkxyley9uf4qqvqdhhsdtm7sby​ ();
    private sealed virtual override     aukwtulkxyley9uf4qqvqdhhsdtm7sby​ ();
    private sealed virtual override void aukwtulkxyley9uf4qqvqdhhsdtm7sby​ (    );
    private sealed virtual override  ​ <   > aukwtulkxyley9uf4qqvqdhhsdtm7sby​  ();
    private sealed virtual override bool aukwtulkxyley9uf4qqvqdhhsdtm7sby​ (Func`2<   , U> , U& );
    private sealed virtual override Color aukwtulkxyley9uf4qqvqdhhsdtm7sby​  ();
    private sealed virtual override Element aukwtulkxyley9uf4qqvqdhhsdtm7sby​  ();
    private sealed virtual override Element aukwtulkxyley9uf4qqvqdhhsdtm7sby​ (CharacterFormat& );
    private sealed virtual override int aukwtulkxyley9uf4qqvqdhhsdtm7sby​ ();
    private sealed virtual override void aukwtulkxyley9uf4qqvqdhhsdtm7sby​ (int );
    private sealed virtual override     aukwtulkxyley9uf4qqvqdhhsdtm7sby​ ();
    private sealed virtual override void aukwtulkxyley9uf4qqvqdhhsdtm7sby​ (    );
    private sealed virtual override  ​ <   > aukwtulkxyley9uf4qqvqdhhsdtm7sby​  ();
    private sealed virtual override bool aukwtulkxyley9uf4qqvqdhhsdtm7sby​ (Func`2<   , U> , U& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.ParagraphFormat : Format {
    [DebuggerBrowsableAttribute("0")]
internal static SingleBorderType[] ;
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
internal   <   > ;
    [DebuggerBrowsableAttribute("0")]
private MultipleBorders ;
    [DebuggerBrowsableAttribute("0")]
private TabStopCollection ;
    protected DocumentModel DocumentCore { get; }
    [NullableAttribute("2")]
public ParagraphStyle Style { get; public set; }
    public HorizontalAlignment Alignment { get; public set; }
    public OutlineLevel OutlineLevel { get; public set; }
    public double LeftIndentation { get; public set; }
    public double RightIndentation { get; public set; }
    public double SpecialIndentation { get; public set; }
    public bool MirrorIndents { get; public set; }
    public double SpaceBefore { get; public set; }
    public double SpaceAfter { get; public set; }
    public double LineSpacing { get; public set; }
    public LineSpacingRule LineSpacingRule { get; public set; }
    public bool NoSpaceBetweenParagraphsOfSameStyle { get; public set; }
    public bool KeepWithNext { get; public set; }
    public bool KeepLinesTogether { get; public set; }
    public bool PageBreakBefore { get; public set; }
    public bool WidowControl { get; public set; }
    public bool RightToLeft { get; public set; }
    public Color BackgroundColor { get; public set; }
    public bool SuppressLineNumbers { get; public set; }
    public bool WordWrap { get; public set; }
    public MultipleBorders Borders { get; }
    public TabStopCollection Tabs { get; }
    internal ParagraphFormat(  <   > );
    private static ParagraphFormat();
    internal     ();
    internal void (    );
    protected virtual DocumentModel get_DocumentCore();
    internal void (  <   > ,    & );
    [NullableContextAttribute("2")]
public ParagraphStyle get_Style();
    [NullableContextAttribute("2")]
public void set_Style(ParagraphStyle value);
    public HorizontalAlignment get_Alignment();
    public void set_Alignment(HorizontalAlignment value);
    public OutlineLevel get_OutlineLevel();
    public void set_OutlineLevel(OutlineLevel value);
    public double get_LeftIndentation();
    public void set_LeftIndentation(double value);
    internal double ();
    internal void (double );
    public double get_RightIndentation();
    public void set_RightIndentation(double value);
    public double get_SpecialIndentation();
    public void set_SpecialIndentation(double value);
    internal double ();
    internal void (double );
    public bool get_MirrorIndents();
    public void set_MirrorIndents(bool value);
    public double get_SpaceBefore();
    public void set_SpaceBefore(double value);
    internal bool ();
    internal void (bool );
    public double get_SpaceAfter();
    public void set_SpaceAfter(double value);
    internal bool ();
    internal void (bool );
    public double get_LineSpacing();
    public void set_LineSpacing(double value);
    public LineSpacingRule get_LineSpacingRule();
    public void set_LineSpacingRule(LineSpacingRule value);
    public bool get_NoSpaceBetweenParagraphsOfSameStyle();
    public void set_NoSpaceBetweenParagraphsOfSameStyle(bool value);
    public bool get_KeepWithNext();
    public void set_KeepWithNext(bool value);
    public bool get_KeepLinesTogether();
    public void set_KeepLinesTogether(bool value);
    public bool get_PageBreakBefore();
    public void set_PageBreakBefore(bool value);
    public bool get_WidowControl();
    public void set_WidowControl(bool value);
    public bool get_RightToLeft();
    public void set_RightToLeft(bool value);
    public Color get_BackgroundColor();
    public void set_BackgroundColor(Color value);
    internal bool ();
    internal void (bool );
    public bool get_SuppressLineNumbers();
    public void set_SuppressLineNumbers(bool value);
    public bool get_WordWrap();
    public void set_WordWrap(bool value);
    internal bool ();
    internal void (bool );
    public MultipleBorders get_Borders();
    public TabStopCollection get_Tabs();
    internal bool  ();
    internal void (bool );
    internal ParagraphFormatRevision  ();
    internal void (ParagraphFormatRevision );
    private void (Action`1<   > );
    public virtual void ClearFormatting();
    public virtual bool Equals(object obj);
    internal bool (ParagraphFormat );
    public virtual int GetHashCode();
    public static bool op_Equality(ParagraphFormat first, ParagraphFormat second);
    public static bool op_Inequality(ParagraphFormat first, ParagraphFormat second);
    public ParagraphFormat Clone();
    public ParagraphFormat Clone(bool resolveValues);
    internal bool  ();
    internal void (bool );
    internal IList`1<TabStop> (Double& );
    private T (Func`2<   , T> );
    private Nullable`1<SingleBorder> (int );
    private void (Func`2<   ,    > );
    private      ();
    private void (Func`2<   ,    > );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.ParagraphStyle : Style {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private ParagraphStyle ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
public StyleType StyleType { get; }
    public ParagraphFormat ParagraphFormat { get; public set; }
    public ListFormat ListFormat { get; public set; }
    public CharacterFormat CharacterFormat { get; public set; }
    [NullableAttribute("2")]
public ParagraphStyle BaseStyle { get; public set; }
    public ParagraphStyle NextParagraphStyle { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
protected Style BaseStyleCore { get; protected set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public DocumentModel Document { get; protected set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private  ​ <   >   { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private  ​ <   >   { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private  ​ <   >   { get; }
    public ParagraphStyle(string name);
    internal     ();
    internal void (    );
    public virtual StyleType get_StyleType();
    public ParagraphFormat get_ParagraphFormat();
    public void set_ParagraphFormat(ParagraphFormat value);
    public ListFormat get_ListFormat();
    public void set_ListFormat(ListFormat value);
    public CharacterFormat get_CharacterFormat();
    public void set_CharacterFormat(CharacterFormat value);
    internal int ();
    internal     ();
    [NullableContextAttribute("2")]
public ParagraphStyle get_BaseStyle();
    [NullableContextAttribute("2")]
public void set_BaseStyle(ParagraphStyle value);
    public ParagraphStyle get_NextParagraphStyle();
    public void set_NextParagraphStyle(ParagraphStyle value);
    [NullableContextAttribute("2")]
protected virtual Style get_BaseStyleCore();
    [NullableContextAttribute("2")]
protected virtual void set_BaseStyleCore(Style value);
    [NullableContextAttribute("2")]
public virtual DocumentModel get_Document();
    [NullableContextAttribute("2")]
protected virtual void set_Document(DocumentModel value);
    private sealed virtual override     ea295p8k9snzwyde72ed9fhrfmc236um​ ();
    private sealed virtual override void ea295p8k9snzwyde72ed9fhrfmc236um​ (    );
    private sealed virtual override  ​ <   > ea295p8k9snzwyde72ed9fhrfmc236um​ ();
    private sealed virtual override bool ea295p8k9snzwyde72ed9fhrfmc236um​ (Func`2<   , U> , U& );
    internal bool (Func`2<   , U> , bool , U& );
    private sealed virtual override     ea295p8k9snzwyde72ed9fhrfmc236um​ ();
    private sealed virtual override void ea295p8k9snzwyde72ed9fhrfmc236um​ (    );
    private sealed virtual override  ​ <   > ea295p8k9snzwyde72ed9fhrfmc236um​  ();
    private sealed virtual override bool ea295p8k9snzwyde72ed9fhrfmc236um​ (Func`2<   , U> , U& );
    internal virtual Style 68fp7mkt9fybxft862un8hgms2ez5evk​  ();
    internal virtual bool 68fp7mkt9fybxft862un8hgms2ez5evk​ (Style );
    internal virtual bool 68fp7mkt9fybxft862un8hgms2ez5evk​ (Style );
    private sealed virtual override int ea295p8k9snzwyde72ed9fhrfmc236um​ ();
    private sealed virtual override void ea295p8k9snzwyde72ed9fhrfmc236um​ (int );
    private sealed virtual override     ea295p8k9snzwyde72ed9fhrfmc236um​  ();
    private sealed virtual override void ea295p8k9snzwyde72ed9fhrfmc236um​ (    );
    private sealed virtual override  ​ <   > ea295p8k9snzwyde72ed9fhrfmc236um​  ();
    private sealed virtual override bool ea295p8k9snzwyde72ed9fhrfmc236um​ (Func`2<   , U> , U& );
}
[FlagsAttribute]
public enum GemBox.Document.PdfBookmarksCreateOptions : Enum {
    public int value__;
    public static PdfBookmarksCreateOptions None;
    public static PdfBookmarksCreateOptions UsingHeadings;
    public static PdfBookmarksCreateOptions UsingBookmarks;
}
public enum GemBox.Document.PdfConformanceLevel : Enum {
    public int value__;
    public static PdfConformanceLevel None;
    public static PdfConformanceLevel PdfA1a;
    public static PdfConformanceLevel PdfA1b;
    public static PdfConformanceLevel PdfA2a;
    public static PdfConformanceLevel PdfA2b;
    public static PdfConformanceLevel PdfA2u;
    public static PdfConformanceLevel PdfA3a;
    public static PdfConformanceLevel PdfA3b;
    public static PdfConformanceLevel PdfA3u;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.PdfDigitalSignatureSaveOptions : DigitalSignatureSaveOptions {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    public bool IsAdvancedElectronicSignature { get; public set; }
    [NullableAttribute("2")]
public string Location { get; public set; }
    [NullableAttribute("2")]
public string ContactInfo { get; public set; }
    protected int EstimatedSignatureLength { get; }
    [CompilerGeneratedAttribute]
public bool get_IsAdvancedElectronicSignature();
    [CompilerGeneratedAttribute]
public void set_IsAdvancedElectronicSignature(bool value);
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public string get_Location();
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public void set_Location(string value);
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public string get_ContactInfo();
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public void set_ContactInfo(string value);
    public static PdfDigitalSignatureSaveOptions FromSigner(Func`1<string> signatureFormatFunc, Func`1<int> estimatedSignatureLengthFunc, Func`2<Stream, Byte[]> computeSignatureFunc);
    private    ();
    private bool ();
    internal bool ();
    private protected virtual string    ​ ();
    private protected virtual void n34ly367ey84wm98cqed9ujs9erztndg​ ();
    protected virtual int get_EstimatedSignatureLength();
    protected virtual Byte[] Sign(Stream pdfFile);
    private    ();
    private sealed virtual override string xhqjce8bg44md6slwezsm6tlz4cp6hp9​ ();
    private sealed virtual override int xhqjce8bg44md6slwezsm6tlz4cp6hp9​ ();
    private sealed virtual override Byte[] xhqjce8bg44md6slwezsm6tlz4cp6hp9​ (Stream );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class GemBox.Document.PdfLoadOptions : LoadOptions {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private PdfLoadType ;
    public string Password { get; public set; }
    public PdfLoadType LoadType { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public PdfLoadType get_LoadType();
    [CompilerGeneratedAttribute]
public void set_LoadType(PdfLoadType value);
    [NullableContextAttribute("1")]
internal virtual DocumentModel 7k4lmxmhj5tk8h83eglk6fss34tasuhn​ (Stream , string );
    [NullableContextAttribute("1")]
private DocumentModel (Stream , string );
    [NullableContextAttribute("1")]
private DocumentModel (Stream );
}
public enum GemBox.Document.PdfLoadType : Enum {
    public int value__;
    public static PdfLoadType Logical;
    public static PdfLoadType HighFidelity;
}
[FlagsAttribute]
public enum GemBox.Document.PdfPermissions : Enum {
    public int value__;
    public static PdfPermissions None;
    public static PdfPermissions Printing;
    public static PdfPermissions HighResolutionPrinting;
    public static PdfPermissions ChangingTheDocument;
    public static PdfPermissions ContentCopying;
    public static PdfPermissions ContentAccessibilityEnabled;
    public static PdfPermissions DocumentAssembly;
    public static PdfPermissions ModifyAnnotations;
    public static PdfPermissions All;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.PdfSaveOptions : SaveOptions {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private PdfDigitalSignatureSaveOptions ;
    [DebuggerBrowsableAttribute("0")]
private PdfPermissions ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private PdfBookmarksCreateOptions ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private PdfConformanceLevel  ;
    [DebuggerBrowsableAttribute("0")]
private bool  ;
    [DebuggerBrowsableAttribute("0")]
private EventHandler`1<OperationProgressChangedEventArgs>  ;
    [DebuggerBrowsableAttribute("0")]
private RenderingMode  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<PdfVersion>  ;
    public PdfPermissions Permissions { get; public set; }
    [NullableAttribute("2")]
public string DocumentOpenPassword { get; public set; }
    [NullableAttribute("2")]
public string PermissionsPassword { get; public set; }
    public PdfBookmarksCreateOptions BookmarksCreateOptions { get; public set; }
    public int ImageDpi { get; public set; }
    public PdfConformanceLevel ConformanceLevel { get; public set; }
    public bool RasterizeVectorPictures { get; public set; }
    public double MetafileScaleFactor { get; public set; }
    public PdfDigitalSignatureSaveOptions DigitalSignature { get; public set; }
    public string ContentType { get; }
    public Nullable`1<PdfVersion> Version { get; public set; }
    [CompilerGeneratedAttribute]
public PdfPermissions get_Permissions();
    [CompilerGeneratedAttribute]
public void set_Permissions(PdfPermissions value);
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public string get_DocumentOpenPassword();
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public void set_DocumentOpenPassword(string value);
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public string get_PermissionsPassword();
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public void set_PermissionsPassword(string value);
    [CompilerGeneratedAttribute]
public PdfBookmarksCreateOptions get_BookmarksCreateOptions();
    [CompilerGeneratedAttribute]
public void set_BookmarksCreateOptions(PdfBookmarksCreateOptions value);
    [CompilerGeneratedAttribute]
public int get_ImageDpi();
    [CompilerGeneratedAttribute]
public void set_ImageDpi(int value);
    [CompilerGeneratedAttribute]
public PdfConformanceLevel get_ConformanceLevel();
    [CompilerGeneratedAttribute]
public void set_ConformanceLevel(PdfConformanceLevel value);
    [CompilerGeneratedAttribute]
public bool get_RasterizeVectorPictures();
    [CompilerGeneratedAttribute]
public void set_RasterizeVectorPictures(bool value);
    [CompilerGeneratedAttribute]
public void add_ProgressChanged(EventHandler`1<OperationProgressChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_ProgressChanged(EventHandler`1<OperationProgressChangedEventArgs> value);
    internal RenderingMode ();
    internal void (RenderingMode );
    private RenderingMode ();
    public double get_MetafileScaleFactor();
    public void set_MetafileScaleFactor(double value);
    public PdfDigitalSignatureSaveOptions get_DigitalSignature();
    public void set_DigitalSignature(PdfDigitalSignatureSaveOptions value);
    public virtual string get_ContentType();
    [CompilerGeneratedAttribute]
public Nullable`1<PdfVersion> get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(Nullable`1<PdfVersion> value);
    internal virtual bool 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ ();
    internal virtual void 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ (DocumentModel , Stream , string );
    internal virtual void 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ (   , Stream , bool );
    private void (   , Stream );
    private void (   , Stream );
    private    (DocumentModel , Stream , string );
    private sealed virtual override string ny738g7a9cv7nfp35r7yemd92qef6qrp​ ();
    private sealed virtual override string ny738g7a9cv7nfp35r7yemd92qef6qrp​ ();
    private sealed virtual override  ny738g7a9cv7nfp35r7yemd92qef6qrp​ ();
    private sealed virtual override     ny738g7a9cv7nfp35r7yemd92qef6qrp​ ();
    private sealed virtual override  ny738g7a9cv7nfp35r7yemd92qef6qrp​ ();
    private sealed virtual override Nullable`1<> ny738g7a9cv7nfp35r7yemd92qef6qrp​  ();
}
public enum GemBox.Document.PdfVersion : Enum {
    public int value__;
    public static PdfVersion PDF_1_0;
    public static PdfVersion PDF_1_1;
    public static PdfVersion PDF_1_2;
    public static PdfVersion PDF_1_3;
    public static PdfVersion PDF_1_4;
    public static PdfVersion PDF_1_5;
    public static PdfVersion PDF_1_6;
    public static PdfVersion PDF_1_7;
    public static PdfVersion PDF_2_0;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Picture : Shape {
    [DebuggerBrowsableAttribute("0")]
internal  ​  ;
    [DebuggerBrowsableAttribute("0")]
internal RelativePadding ;
    [DebuggerBrowsableAttribute("0")]
private float ;
    [DebuggerBrowsableAttribute("0")]
private float ;
    [DebuggerBrowsableAttribute("0")]
internal  ​  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private object ;
    [DebuggerBrowsableAttribute("0")]
private OnlineVideo ;
    [DebuggerBrowsableAttribute("0")]
private static []  ;
    [ObsoleteAttribute("Use 'GemBox.Document.Picture.Layout' property instead. If value is 'GemBox.Document.TextWrappingStyle.InLineWithText', set it to instance of 'GemBox.Document.InlineLayout', otherwise cast or set it to instance of 'GemBox.Document.FloatingLayout' and set 'GemBox.Document.FloatingLayout.WrappingStyle' property instead.")]
[EditorBrowsableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
public TextWrappingStyle WrappingStyle { get; public set; }
    [ObsoleteAttribute("Use 'GemBox.Document.Picture.Layout.Size.Width' property instead. To change a width, use new instance of 'GemBox.Document.Size' struct.")]
[EditorBrowsableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
public double Width { get; public set; }
    [ObsoleteAttribute("Use 'GemBox.Document.Picture.Layout.Size.Height' property instead. To change a height, use new instance of 'GemBox.Document.Size' struct.")]
[EditorBrowsableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
public double Height { get; public set; }
    [ObsoleteAttribute("Use 'GemBox.Document.Picture.Layout' property instead. Cast or set it to instance of 'GemBox.Document.FloatingLayout' and use 'GemBox.Document.FloatingLayout.HorizontalPosition' property instead.")]
[EditorBrowsableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
public HorizontalPosition HorizontalPosition { get; public set; }
    [ObsoleteAttribute("Use 'GemBox.Document.Picture.Layout' property instead. Cast or set it to instance of 'GemBox.Document.FloatingLayout' and use 'GemBox.Document.FloatingLayout.HorizontalPosition' property instead. To change horizontal position base, use new instance of 'GemBox.Document.HorizontalPosition' struct.")]
[EditorBrowsableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
public HorizontalPositionAnchor HorizontalRelativeTo { get; public set; }
    [ObsoleteAttribute("Use 'GemBox.Document.Picture.Layout' property instead. Cast or set it to instance of 'GemBox.Document.FloatingLayout' and use 'GemBox.Document.FloatingLayout.VerticalPosition' property instead.")]
[EditorBrowsableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
public VerticalPosition VerticalPosition { get; public set; }
    [ObsoleteAttribute("Use 'GemBox.Document.Picture.Layout' property instead. Cast or set it to instance of 'GemBox.Document.FloatingLayout' and use 'GemBox.Document.FloatingLayout.VerticalPosition' property instead. To change vertical position base, use new instance of 'GemBox.Document.VerticalPosition' struct.")]
[EditorBrowsableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
public VerticalPositionAnchor VerticalRelativeTo { get; public set; }
    [ObsoleteAttribute("Use 'GemBox.Document.Picture.Layout' property instead. Cast or set it to instance of 'GemBox.Document.FloatingLayout' and use 'GemBox.Document.FloatingLayout.WrapText' property instead.")]
[EditorBrowsableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
public WrapTextType WrapTextType { get; public set; }
    public MemoryStream PictureStream { get; public set; }
    public string Link { get; public set; }
    public PictureFormat Format { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal object   { get; internal set; }
    public OnlineVideo OnlineVideo { get; public set; }
    [DebuggerBrowsableAttribute("0")]
protected Color DefaultFillColor { get; }
    [DebuggerBrowsableAttribute("0")]
protected double DefaultOutlineWidth { get; }
    [DebuggerBrowsableAttribute("0")]
protected Color DefaultOutlineColor { get; }
    public ElementType ElementType { get; }
    [DebuggerBrowsableAttribute("0")]
protected string DebuggerDisplay { get; }
    internal Picture(DocumentModel ,  ​  );
    internal Picture(DocumentModel ,  ​  , Layout , ShapeType );
    internal Picture(DocumentModel ,  ​  , Size );
    internal Picture(DocumentModel , Tuple`2< ​ , Size> );
    public Picture(DocumentModel document, Stream pictureStream);
    public Picture(DocumentModel document, Stream pictureStream, Layout layout, ShapeType shapeType);
    public Picture(DocumentModel document, Stream pictureStream, PictureFormat format, Layout layout);
    public Picture(DocumentModel document, Stream pictureStream, PictureFormat format, Layout layout, ShapeType shapeType);
    public Picture(DocumentModel document, Stream pictureStream, PictureFormat format, double width, double height);
    public Picture(DocumentModel document, Stream pictureStream, PictureFormat format, double width, double height, LengthUnit unit);
    public Picture(DocumentModel document, Stream pictureStream, double width, double height);
    public Picture(DocumentModel document, Stream pictureStream, double width, double height, LengthUnit unit);
    public Picture(DocumentModel document, string picturePath);
    public Picture(DocumentModel document, string picturePath, bool isLink);
    public Picture(DocumentModel document, string picturePath, double width, double height);
    public Picture(DocumentModel document, string picturePath, double width, double height, bool isLink);
    public Picture(DocumentModel document, string picturePath, double width, double height, LengthUnit unit);
    public Picture(DocumentModel document, string picturePath, double width, double height, LengthUnit unit, bool isLink);
    public Picture(DocumentModel document, string picturePath, PictureFormat format, double width, double height, bool isLink);
    public Picture(DocumentModel document, string picturePath, PictureFormat format, double width, double height, LengthUnit unit, bool isLink);
    private Picture(DocumentModel , Picture );
    private static Picture();
    private static T (Layout , Func`2<FloatingLayout, T> , T );
    private static FloatingLayout (Layout , Action`1<FloatingLayout> );
    public TextWrappingStyle get_WrappingStyle();
    public void set_WrappingStyle(TextWrappingStyle value);
    public double get_Width();
    public void set_Width(double value);
    public double get_Height();
    public void set_Height(double value);
    public HorizontalPosition get_HorizontalPosition();
    public void set_HorizontalPosition(HorizontalPosition value);
    public HorizontalPositionAnchor get_HorizontalRelativeTo();
    public void set_HorizontalRelativeTo(HorizontalPositionAnchor value);
    public VerticalPosition get_VerticalPosition();
    public void set_VerticalPosition(VerticalPosition value);
    public VerticalPositionAnchor get_VerticalRelativeTo();
    public void set_VerticalRelativeTo(VerticalPositionAnchor value);
    public WrapTextType get_WrapTextType();
    public void set_WrapTextType(WrapTextType value);
    internal float ();
    internal void (float );
    internal float ();
    internal void (float );
    internal RelativePadding ();
    internal void (RelativePadding );
    public MemoryStream get_PictureStream();
    public void set_PictureStream(MemoryStream value);
    public string get_Link();
    public void set_Link(string value);
    public PictureFormat get_Format();
    [NullableContextAttribute("2")]
internal object ();
    [NullableContextAttribute("2")]
internal void (object );
    [CompilerGeneratedAttribute]
public OnlineVideo get_OnlineVideo();
    [CompilerGeneratedAttribute]
public void set_OnlineVideo(OnlineVideo value);
    protected virtual Color get_DefaultFillColor();
    protected virtual double get_DefaultOutlineWidth();
    protected virtual Color get_DefaultOutlineColor();
    public sealed virtual ElementType get_ElementType();
    protected virtual string get_DebuggerDisplay();
    private Size (Size );
    private Size  ();
    protected virtual void VerifyShapeType(ShapeType value);
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    public Picture Clone();
    internal bool (Picture );
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
    internal static bool ( , PictureFormat& );
    private sealed virtual override object sdugjmsmnpwb676npgxuzdhap8sdawnh​  ();
    private sealed virtual override  sdugjmsmnpwb676npgxuzdhap8sdawnh​  ();
    private sealed virtual override Stream sdugjmsmnpwb676npgxuzdhap8sdawnh​  ();
    private sealed virtual override double sdugjmsmnpwb676npgxuzdhap8sdawnh​ ();
    private sealed virtual override double sdugjmsmnpwb676npgxuzdhap8sdawnh​ ();
    private sealed virtual override double sdugjmsmnpwb676npgxuzdhap8sdawnh​ ();
}
public enum GemBox.Document.PictureFormat : Enum {
    public int value__;
    public static PictureFormat Jpeg;
    public static PictureFormat Gif;
    public static PictureFormat Png;
    public static PictureFormat Tiff;
    public static PictureFormat Emf;
    public static PictureFormat Wmf;
    public static PictureFormat Svg;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.PictureWatermark : Watermark {
    [DebuggerBrowsableAttribute("0")]
private Picture ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public Picture Picture { get; public set; }
    public bool Washout { get; public set; }
    public PictureWatermark(DocumentModel document, Picture picture);
    public Picture get_Picture();
    public void set_Picture(Picture value);
    internal virtual Shape mmyx33fhl4japg4ytmd3xrl4km39zecn​ ();
    internal virtual void mmyx33fhl4japg4ytmd3xrl4km39zecn​ ();
    public bool get_Washout();
    public void set_Washout(bool value);
    public void AutoScale();
    private void ();
}
public enum GemBox.Document.PixelFormat : Enum {
    public int value__;
    public static PixelFormat Default;
    public static PixelFormat Bgr101010;
    public static PixelFormat Bgr24;
    public static PixelFormat Bgr32;
    public static PixelFormat Bgr555;
    public static PixelFormat Bgr565;
    public static PixelFormat Bgra32;
    public static PixelFormat BlackWhite;
    public static PixelFormat Cmyk32;
    public static PixelFormat Gray16;
    public static PixelFormat Gray2;
    public static PixelFormat Gray32Float;
    public static PixelFormat Gray4;
    public static PixelFormat Gray8;
    public static PixelFormat Pbgra32;
    public static PixelFormat Prgba128Float;
    public static PixelFormat Prgba64;
    public static PixelFormat Rgb128Float;
    public static PixelFormat Rgb24;
    public static PixelFormat Rgb48;
    public static PixelFormat Rgba128Float;
    public static PixelFormat Rgba64;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.PreservedInline : Inline {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private object ;
    [DebuggerBrowsableAttribute("0")]
public ElementType ElementType { get; }
    [DebuggerBrowsableAttribute("0")]
protected string DebuggerDisplay { get; }
    internal PreservedInline(DocumentModel );
    internal object ();
    internal void (object );
    public virtual ElementType get_ElementType();
    protected virtual string get_DebuggerDisplay();
    internal CharacterFormat ();
    internal void (CharacterFormat );
    private sealed virtual override     leg2rcclrkagj4rgvd6tbfhgmkxhj8kn​ ();
    private sealed virtual override void leg2rcclrkagj4rgvd6tbfhgmkxhj8kn​ (    );
    private sealed virtual override  ​ <   > leg2rcclrkagj4rgvd6tbfhgmkxhj8kn​ ();
    private sealed virtual override bool leg2rcclrkagj4rgvd6tbfhgmkxhj8kn​ (Func`2<   , U> , U& );
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
    public PreservedInline Clone();
    public virtual string ToString();
    private sealed virtual override Color leg2rcclrkagj4rgvd6tbfhgmkxhj8kn​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.PrintOptions : object {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private PrintTicket ;
    public int CopyCount { get; public set; }
    public int PagesPerSheet { get; public set; }
    public int FromPage { get; public set; }
    public int ToPage { get; public set; }
    public double MetafileScaleFactor { get; public set; }
    public string DocumentName { get; public set; }
    [NullableContextAttribute("2")]
public PrintOptions(Stream xmlStream);
    internal PrintTicket ();
    public int get_CopyCount();
    public void set_CopyCount(int value);
    public int get_PagesPerSheet();
    public void set_PagesPerSheet(int value);
    public int get_FromPage();
    public void set_FromPage(int value);
    public int get_ToPage();
    public void set_ToPage(int value);
    public double get_MetafileScaleFactor();
    public void set_MetafileScaleFactor(double value);
    public string get_DocumentName();
    public void set_DocumentName(string value);
}
public class GemBox.Document.RelativePadding : ValueType {
    [DebuggerBrowsableAttribute("0")]
public static RelativePadding None;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public double Left { get; }
    public double Top { get; }
    public double Right { get; }
    public double Bottom { get; }
    public RelativePadding(double left, double top, double right, double bottom);
    public RelativePadding(double leftRight, double topBottom);
    public RelativePadding(double leftTopRightBottom);
    private static RelativePadding();
    [CompilerGeneratedAttribute]
[IsReadOnlyAttribute]
public double get_Left();
    [CompilerGeneratedAttribute]
[IsReadOnlyAttribute]
public double get_Top();
    [CompilerGeneratedAttribute]
[IsReadOnlyAttribute]
public double get_Right();
    [CompilerGeneratedAttribute]
[IsReadOnlyAttribute]
public double get_Bottom();
    public sealed virtual bool Equals(RelativePadding other);
    [NullableContextAttribute("1")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static bool op_Equality(RelativePadding first, RelativePadding second);
    public static bool op_Inequality(RelativePadding first, RelativePadding second);
    internal     ();
}
public enum GemBox.Document.RenderingMode : Enum {
    public int value__;
    public static RenderingMode Default;
    public static RenderingMode WPF;
    public static RenderingMode Skia;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.ResourceLoadingEventArgs : CancelEventArgs {
    [DebuggerBrowsableAttribute("0")]
private Uri ;
    [DebuggerBrowsableAttribute("0")]
private Byte[] ;
    [DebuggerBrowsableAttribute("0")]
private ResourceType ;
    public Uri Uri { get; public set; }
    public Byte[] Data { get; public set; }
    public ResourceType Type { get; }
    internal ResourceLoadingEventArgs(Uri , string );
    [CompilerGeneratedAttribute]
public sealed virtual Uri get_Uri();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Uri(Uri value);
    [CompilerGeneratedAttribute]
public sealed virtual Byte[] get_Data();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Data(Byte[] value);
    [CompilerGeneratedAttribute]
public ResourceType get_Type();
    private sealed virtual override bool zt6upbtz7jgawa5dj4anppvad27hzlft​ ();
    private sealed virtual override void zt6upbtz7jgawa5dj4anppvad27hzlft​ (bool );
}
public enum GemBox.Document.ResourceType : Enum {
    public int value__;
    public static ResourceType Image;
    public static ResourceType StyleSheet;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.RtfLoadOptions : LoadOptions {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal Encoding ;
    public Encoding Encoding { get; public set; }
    public Encoding get_Encoding();
    public void set_Encoding(Encoding value);
    internal virtual DocumentModel 7k4lmxmhj5tk8h83eglk6fss34tasuhn​ (Stream , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.RtfSaveOptions : SaveOptions {
    [DebuggerBrowsableAttribute("0")]
private Encoding ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public bool ExportPictureWithMetafile { get; public set; }
    public Encoding Encoding { get; public set; }
    public string ContentType { get; }
    [CompilerGeneratedAttribute]
public bool get_ExportPictureWithMetafile();
    [CompilerGeneratedAttribute]
public void set_ExportPictureWithMetafile(bool value);
    public Encoding get_Encoding();
    public void set_Encoding(Encoding value);
    internal virtual void 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ (DocumentModel , Stream , string );
    public virtual string get_ContentType();
    internal virtual bool 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Run : Inline {
    [DebuggerBrowsableAttribute("0")]
private static Char[] ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public string Text { get; public set; }
    [DebuggerBrowsableAttribute("0")]
public ElementType ElementType { get; }
    [DebuggerBrowsableAttribute("0")]
public DocumentModel Document { get; }
    public CharacterFormat CharacterFormat { get; public set; }
    [NullableAttribute("2")]
public CharacterFormatRevision CharacterFormatRevision { get; public set; }
    public Run(DocumentModel document);
    public Run(DocumentModel document, string text);
    private Run(DocumentModel , Run );
    private static Run();
    public string get_Text();
    public void set_Text(string value);
    public virtual ElementType get_ElementType();
    public virtual DocumentModel get_Document();
    private sealed virtual override     9vnuucp4qz48534tnpz66zc95da5cqj5​ ();
    private sealed virtual override void 9vnuucp4qz48534tnpz66zc95da5cqj5​ (    );
    private sealed virtual override  ​ <   > 9vnuucp4qz48534tnpz66zc95da5cqj5​ ();
    private sealed virtual override bool 9vnuucp4qz48534tnpz66zc95da5cqj5​ (Func`2<   , U> , U& );
    public CharacterFormat get_CharacterFormat();
    public void set_CharacterFormat(CharacterFormat value);
    [NullableContextAttribute("2")]
public CharacterFormatRevision get_CharacterFormatRevision();
    [NullableContextAttribute("2")]
public void set_CharacterFormatRevision(CharacterFormatRevision value);
    internal     ();
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    public Run Clone();
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
    [IteratorStateMachineAttribute("GemBox.Document.Run/")]
internal static IEnumerable`1<Inline> (DocumentModel , string , CharacterFormat , InlineCollection );
    private static bool (int , string );
    private static SpecialCharacterType (char );
    private sealed virtual override Color 9vnuucp4qz48534tnpz66zc95da5cqj5​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class GemBox.Document.SaveOptions : object {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public static DocxSaveOptions DocxDefault { get; }
    public static PdfSaveOptions PdfDefault { get; }
    public static XpsSaveOptions XpsDefault { get; }
    public static ImageSaveOptions ImageDefault { get; }
    public static HtmlSaveOptions HtmlDefault { get; }
    public static TxtSaveOptions TxtDefault { get; }
    public static RtfSaveOptions RtfDefault { get; }
    public static XmlSaveOptions XmlDefault { get; }
    public static OdtSaveOptions OdtDefault { get; }
    public int PageNumber { get; public set; }
    public int PageCount { get; public set; }
    public string ContentType { get; }
    public static DocxSaveOptions get_DocxDefault();
    public static PdfSaveOptions get_PdfDefault();
    public static XpsSaveOptions get_XpsDefault();
    public static ImageSaveOptions get_ImageDefault();
    public static HtmlSaveOptions get_HtmlDefault();
    public static TxtSaveOptions get_TxtDefault();
    public static RtfSaveOptions get_RtfDefault();
    public static XmlSaveOptions get_XmlDefault();
    public static OdtSaveOptions get_OdtDefault();
    [CompilerGeneratedAttribute]
public int get_PageNumber();
    [CompilerGeneratedAttribute]
public void set_PageNumber(int value);
    [CompilerGeneratedAttribute]
public int get_PageCount();
    [CompilerGeneratedAttribute]
public void set_PageCount(int value);
    public abstract virtual string get_ContentType();
    internal abstract virtual bool 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ ();
    internal static SaveOptions (string );
    internal abstract virtual void 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ (DocumentModel , Stream , string );
    internal virtual void 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ (DocumentModel , Stream , string , bool );
    internal virtual void 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ (   , Stream , bool );
    internal static void (Double& , double );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Section : Element {
    [DebuggerBrowsableAttribute("0")]
private BlockCollection ;
    [DebuggerBrowsableAttribute("0")]
private HeaderFooterCollection ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private PageSetup ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private NoteSettings ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private NoteSettings ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private SectionPropertiesRevision ;
    [DebuggerBrowsableAttribute("0")]
public ElementType ElementType { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public SectionCollection ParentCollection { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public DocumentModel Parent { get; }
    public BlockCollection Blocks { get; }
    public HeaderFooterCollection HeadersFooters { get; }
    public PageSetup PageSetup { get; public set; }
    public NoteSettings FootnoteSettings { get; }
    public NoteSettings EndnoteSettings { get; }
    public bool ProtectedForForms { get; public set; }
    [NullableAttribute("2")]
public SectionPropertiesRevision SectionPropertiesRevision { get; public set; }
    [DebuggerBrowsableAttribute("0")]
private IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.Content { get; }
    public Section(DocumentModel document);
    public Section(DocumentModel document, IEnumerable`1<Block> items);
    public Section(DocumentModel document, Block[] items);
    private Section(DocumentModel , Section );
    public virtual ElementType get_ElementType();
    [NullableContextAttribute("2")]
public SectionCollection get_ParentCollection();
    [NullableContextAttribute("2")]
public DocumentModel get_Parent();
    public BlockCollection get_Blocks();
    public HeaderFooterCollection get_HeadersFooters();
    public PageSetup get_PageSetup();
    public void set_PageSetup(PageSetup value);
    public NoteSettings get_FootnoteSettings();
    internal void (NoteSettings );
    public NoteSettings get_EndnoteSettings();
    internal void (NoteSettings );
    public bool get_ProtectedForForms();
    public void set_ProtectedForForms(bool value);
    [NullableContextAttribute("2")]
public SectionPropertiesRevision get_SectionPropertiesRevision();
    [NullableContextAttribute("2")]
public void set_SectionPropertiesRevision(SectionPropertiesRevision value);
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    public Section Clone(bool cloneDescendants);
    [IteratorStateMachineAttribute("GemBox.Document.Section/")]
internal virtual IEnumerable`1<ElementType> p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (ElementCollection );
    [IteratorStateMachineAttribute("GemBox.Document.Section/")]
private sealed virtual override IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.get_Content();
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
    private sealed virtual override Color ny5z4p2a7heudm43zy3fl5e7gwve7ybg​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class GemBox.Document.SectionCollection : ElementCollection`1<Section> {
    internal SectionCollection(DocumentModel );
}
public enum GemBox.Document.SectionStart : Enum {
    public int value__;
    public static SectionStart NewPage;
    public static SectionStart Continuous;
    public static SectionStart EvenPage;
    public static SectionStart OddPage;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Security.Certificate : object {
    [DebuggerBrowsableAttribute("0")]
private object ;
    [DebuggerBrowsableAttribute("0")]
private    ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public string Subject { get; }
    public string SubjectCommonName { get; }
    public Certificate(string fileName);
    internal Certificate(Byte[] );
    public Certificate(object source);
    private Certificate(object , string );
    internal Certificate(   );
    internal object ();
    private static object (object );
    internal    ();
    public string get_Subject();
    public string get_SubjectCommonName();
    internal int ();
    internal String[] ();
    internal String[]  ();
    internal String[]  ();
    internal string ();
    public Byte[] GetRawData();
    public bool Equals(Certificate other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    private sealed virtual override object 6mrndbtpc8lewxseye2wv62usultjeeg​ ();
    private sealed virtual override object 6mrndbtpc8lewxseye2wv62usultjeeg​ ();
    private sealed virtual override X509KeyStorageFlags 6mrndbtpc8lewxseye2wv62usultjeeg​  ();
    private sealed virtual override bool 6mrndbtpc8lewxseye2wv62usultjeeg​  ();
    private sealed virtual override bool 6mrndbtpc8lewxseye2wv62usultjeeg​  ();
    private sealed virtual override bool 6mrndbtpc8lewxseye2wv62usultjeeg​  ();
    private sealed virtual override bool 6mrndbtpc8lewxseye2wv62usultjeeg​  ();
    private sealed virtual override Byte[] 6mrndbtpc8lewxseye2wv62usultjeeg​ (Byte[] , string , object );
    private sealed virtual override bool 6mrndbtpc8lewxseye2wv62usultjeeg​ (Byte[] , Byte[] , string , object );
}
public enum GemBox.Document.Security.DigitalSignatureCommitmentType : Enum {
    public int value__;
    public static DigitalSignatureCommitmentType None;
    public static DigitalSignatureCommitmentType Created;
    public static DigitalSignatureCommitmentType Approved;
    public static DigitalSignatureCommitmentType CreatedAndApproved;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.SingleBorder : ValueType {
    public static SingleBorder None;
    [DebuggerBrowsableAttribute("0")]
private BorderStyle ;
    [DebuggerBrowsableAttribute("0")]
private Color ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
internal string ;
    [DebuggerBrowsableAttribute("0")]
internal Nullable`1<double> ;
    public BorderStyle Style { get; }
    public Color Color { get; }
    public double Width { get; }
    public double Space { get; }
    public SingleBorder(BorderStyle style, Color color, double width);
    internal SingleBorder(BorderStyle , Color , double , double );
    internal SingleBorder(BorderStyle , Color , double , double , bool , string , Nullable`1<double> );
    internal BorderStyle ();
    public BorderStyle get_Style();
    public Color get_Color();
    public double get_Width();
    public double get_Space();
    internal bool ();
    public sealed virtual bool Equals(SingleBorder other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    public static bool op_Equality(SingleBorder first, SingleBorder second);
    public static bool op_Inequality(SingleBorder first, SingleBorder second);
}
public enum GemBox.Document.SingleBorderType : Enum {
    public int value__;
    public static SingleBorderType Left;
    public static SingleBorderType Top;
    public static SingleBorderType Right;
    public static SingleBorderType Bottom;
    public static SingleBorderType InsideHorizontal;
    public static SingleBorderType InsideVertical;
    public static SingleBorderType DiagonalDown;
    public static SingleBorderType DiagonalUp;
}
public class GemBox.Document.Size : ValueType {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public double Width { get; }
    public double Height { get; }
    public Size(double width, double height);
    public Size(double width, double height, LengthUnit unit);
    [CompilerGeneratedAttribute]
[IsReadOnlyAttribute]
public double get_Width();
    private void (double );
    [CompilerGeneratedAttribute]
[IsReadOnlyAttribute]
public double get_Height();
    private void (double );
    internal bool ();
    internal Size (double );
    internal Size (double );
    internal Size (double );
    internal Size (double );
    public sealed virtual bool Equals(Size other);
    [NullableContextAttribute("1")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static bool op_Equality(Size first, Size second);
    public static bool op_Inequality(Size first, Size second);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.SpecialCharacter : Inline {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private SpecialCharacterType ;
    public SpecialCharacterType CharacterType { get; public set; }
    [DebuggerBrowsableAttribute("0")]
public ElementType ElementType { get; }
    [DebuggerBrowsableAttribute("0")]
public DocumentModel Document { get; }
    public CharacterFormat CharacterFormat { get; public set; }
    [NullableAttribute("2")]
public CharacterFormatRevision CharacterFormatRevision { get; public set; }
    [DebuggerBrowsableAttribute("0")]
protected string DebuggerDisplay { get; }
    public SpecialCharacter(DocumentModel document, SpecialCharacterType specialCharacterType);
    private SpecialCharacter(DocumentModel , SpecialCharacter );
    [CompilerGeneratedAttribute]
public SpecialCharacterType get_CharacterType();
    [CompilerGeneratedAttribute]
public void set_CharacterType(SpecialCharacterType value);
    public virtual ElementType get_ElementType();
    public virtual DocumentModel get_Document();
    private sealed virtual override     yuyflcbsuzc6bbkdygufflb4tt2pgr24​ ();
    private sealed virtual override void yuyflcbsuzc6bbkdygufflb4tt2pgr24​ (    );
    private sealed virtual override  ​ <   > yuyflcbsuzc6bbkdygufflb4tt2pgr24​ ();
    private sealed virtual override bool yuyflcbsuzc6bbkdygufflb4tt2pgr24​ (Func`2<   , U> , U& );
    public CharacterFormat get_CharacterFormat();
    public void set_CharacterFormat(CharacterFormat value);
    [NullableContextAttribute("2")]
public CharacterFormatRevision get_CharacterFormatRevision();
    [NullableContextAttribute("2")]
public void set_CharacterFormatRevision(CharacterFormatRevision value);
    protected virtual string get_DebuggerDisplay();
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    public SpecialCharacter Clone();
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
}
public enum GemBox.Document.SpecialCharacterType : Enum {
    public int value__;
    public static SpecialCharacterType LineBreak;
    public static SpecialCharacterType PageBreak;
    public static SpecialCharacterType ColumnBreak;
    public static SpecialCharacterType Tab;
    public static SpecialCharacterType NoteMark;
    public static SpecialCharacterType Separator;
    public static SpecialCharacterType ContinuationSeparator;
    public static SpecialCharacterType CarriageReturn;
    public static SpecialCharacterType ClearedLineBreak;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class GemBox.Document.Style : object {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int> ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool>  ;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool>  ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public DocumentModel Document { get; protected set; }
    [NullableAttribute("2")]
public Style BaseStyle { get; public set; }
    public StyleType StyleType { get; }
    public string Name { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
protected Style BaseStyleCore { get; protected set; }
    internal Style(string );
    internal string ();
    internal void (string );
    internal bool ();
    internal void (bool );
    internal string ();
    internal void (string );
    internal string ();
    internal void (string );
    internal string ();
    internal void (string );
    internal Nullable`1<int> ();
    internal void (Nullable`1<int> );
    internal Nullable`1<bool> ();
    internal void (Nullable`1<bool> );
    internal Nullable`1<bool>  ();
    internal void (Nullable`1<bool> );
    internal Nullable`1<bool>  ();
    internal void (Nullable`1<bool> );
    [NullableContextAttribute("2")]
public abstract virtual DocumentModel get_Document();
    [NullableContextAttribute("2")]
protected abstract virtual void set_Document(DocumentModel value);
    [NullableContextAttribute("2")]
public Style get_BaseStyle();
    [NullableContextAttribute("2")]
public void set_BaseStyle(Style value);
    public abstract virtual StyleType get_StyleType();
    public string get_Name();
    public void set_Name(string value);
    [NullableContextAttribute("2")]
protected abstract virtual Style get_BaseStyleCore();
    [NullableContextAttribute("2")]
protected abstract virtual void set_BaseStyleCore(Style value);
    internal      ();
    internal      ();
    internal      ();
    internal      ();
    [NullableContextAttribute("2")]
protected void CheckBaseStyle(Style newStyle);
    [NullableContextAttribute("2")]
private void (DocumentModel , Style , bool );
    private void (DocumentModel , string );
    internal void (DocumentModel , bool , bool );
    internal void (DocumentModel );
    private static bool (List`1<Style> );
    internal bool (Func`2<T, U> , U& );
    internal void (Style );
    internal abstract virtual Style 68fp7mkt9fybxft862un8hgms2ez5evk​  ();
    internal abstract virtual bool 68fp7mkt9fybxft862un8hgms2ez5evk​ (Style );
    internal virtual bool 68fp7mkt9fybxft862un8hgms2ez5evk​ (Style );
    private static bool (Style , Style );
    public static Style CreateStyle(StyleTemplateType templateType, DocumentModel document);
    public virtual string ToString();
}
[DefaultMemberAttribute("Item")]
[DebuggerDisplayAttribute("Count = {Count}")]
[DebuggerTypeProxyAttribute("GemBox.Collections.CollectionDebugView")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.StyleCollection : object {
    [DebuggerBrowsableAttribute("0")]
internal ListStyle ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
private List`1<Style> ;
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    public Style Item { get; }
    public Style Item { get; }
    public int Count { get; }
    internal StyleCollection(DocumentModel );
    public void Add(Style item);
    public Style GetOrAdd(StyleTemplateType templateType);
    public Style get_Item(int index);
    public Style get_Item(string styleName);
    public int get_Count();
    public int IndexOf(Style item);
    public bool Contains(Style item);
    public bool Contains(string styleName);
    public bool Remove(Style item);
    public sealed virtual IEnumerator`1<Style> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    internal Style (string );
    internal Style (string );
    [NullableContextAttribute("2")]
internal ParagraphStyle ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.Document.StyleImplementation.FontsData : ValueType {
    private Nullable`1<> hint;
    private string ascii;
    private string highAnsi;
    private string eastAsian;
    private string cs;
    public Nullable`1<> Hint { get; }
    public string ASCII { get; }
    public string EastAsian { get; }
    public string HighANSI { get; }
    public string CS { get; }
    public bool IsEmpty { get; }
    public string FontName { get; }
    public FontsData(string fontName);
    public FontsData(Nullable`1<> hint, string ascii, string highAnsi, string eastAsian, string cs);
    public Nullable`1<> get_Hint();
    public string get_ASCII();
    public string get_EastAsian();
    public string get_HighANSI();
    public string get_CS();
    public bool get_IsEmpty();
    public string get_FontName();
    public FontsData SetASCII(string value);
    public FontsData SetHighANSI(string value);
    public FontsData SetEastAsian(string value);
    public FontsData SetCS(string value);
    public sealed virtual bool Equals(FontsData other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(FontsData first, FontsData second);
    public static bool op_Inequality(FontsData first, FontsData second);
}
public enum GemBox.Document.StyleTemplateType : Enum {
    public int value__;
    public static StyleTemplateType Normal;
    public static StyleTemplateType Heading1;
    public static StyleTemplateType Heading2;
    public static StyleTemplateType Heading3;
    public static StyleTemplateType Heading4;
    public static StyleTemplateType Heading5;
    public static StyleTemplateType Heading6;
    public static StyleTemplateType Heading7;
    public static StyleTemplateType Heading8;
    public static StyleTemplateType Heading9;
    public static StyleTemplateType Title;
    public static StyleTemplateType DefaultParagraphFont;
    public static StyleTemplateType Subtitle;
    public static StyleTemplateType Strong;
    public static StyleTemplateType Emphasis;
    public static StyleTemplateType NoSpacing;
    public static StyleTemplateType Quote;
    public static StyleTemplateType IntenseQuote;
    public static StyleTemplateType ListParagraph;
    public static StyleTemplateType SubtleEmphasis;
    public static StyleTemplateType IntenseEmphasis;
    public static StyleTemplateType SubtleReference;
    public static StyleTemplateType IntenseReference;
    public static StyleTemplateType BookTitle;
    public static StyleTemplateType PlaceholderText;
    public static StyleTemplateType TableNormal;
    public static StyleTemplateType TableGrid;
    public static StyleTemplateType LightShading;
    public static StyleTemplateType LightShadingAccent1;
    public static StyleTemplateType LightShadingAccent2;
    public static StyleTemplateType LightShadingAccent3;
    public static StyleTemplateType LightShadingAccent4;
    public static StyleTemplateType LightShadingAccent5;
    public static StyleTemplateType LightShadingAccent6;
    public static StyleTemplateType LightList;
    public static StyleTemplateType LightListAccent1;
    public static StyleTemplateType LightListAccent2;
    public static StyleTemplateType LightListAccent3;
    public static StyleTemplateType LightListAccent4;
    public static StyleTemplateType LightListAccent5;
    public static StyleTemplateType LightListAccent6;
    public static StyleTemplateType LightGrid;
    public static StyleTemplateType LightGridAccent1;
    public static StyleTemplateType LightGridAccent2;
    public static StyleTemplateType LightGridAccent3;
    public static StyleTemplateType LightGridAccent4;
    public static StyleTemplateType LightGridAccent5;
    public static StyleTemplateType LightGridAccent6;
    public static StyleTemplateType ColorfulGrid;
    public static StyleTemplateType ColorfulGridAccent1;
    public static StyleTemplateType ColorfulGridAccent2;
    public static StyleTemplateType ColorfulGridAccent3;
    public static StyleTemplateType ColorfulGridAccent4;
    public static StyleTemplateType ColorfulGridAccent5;
    public static StyleTemplateType ColorfulGridAccent6;
    public static StyleTemplateType TableGridLight;
    public static StyleTemplateType PlainTable1;
    public static StyleTemplateType PlainTable2;
    public static StyleTemplateType PlainTable3;
    public static StyleTemplateType PlainTable4;
    public static StyleTemplateType PlainTable5;
    public static StyleTemplateType GridTable1Light;
    public static StyleTemplateType GridTable1LightAccent1;
    public static StyleTemplateType GridTable1LightAccent2;
    public static StyleTemplateType GridTable1LightAccent3;
    public static StyleTemplateType GridTable1LightAccent4;
    public static StyleTemplateType GridTable1LightAccent5;
    public static StyleTemplateType GridTable1LightAccent6;
    public static StyleTemplateType GridTable2;
    public static StyleTemplateType GridTable2Accent1;
    public static StyleTemplateType GridTable2Accent2;
    public static StyleTemplateType GridTable2Accent3;
    public static StyleTemplateType GridTable2Accent4;
    public static StyleTemplateType GridTable2Accent5;
    public static StyleTemplateType GridTable2Accent6;
    public static StyleTemplateType ListTable1Light;
    public static StyleTemplateType ListTable1LightAccent1;
    public static StyleTemplateType ListTable1LightAccent2;
    public static StyleTemplateType ListTable1LightAccent3;
    public static StyleTemplateType ListTable1LightAccent4;
    public static StyleTemplateType ListTable1LightAccent5;
    public static StyleTemplateType ListTable1LightAccent6;
    public static StyleTemplateType ListTable2;
    public static StyleTemplateType ListTable2Accent1;
    public static StyleTemplateType ListTable2Accent2;
    public static StyleTemplateType ListTable2Accent3;
    public static StyleTemplateType ListTable2Accent4;
    public static StyleTemplateType ListTable2Accent5;
    public static StyleTemplateType ListTable2Accent6;
    public static StyleTemplateType FootnoteTextChar;
    public static StyleTemplateType FootnoteText;
    public static StyleTemplateType FootnoteReference;
    public static StyleTemplateType EndnoteTextChar;
    public static StyleTemplateType EndnoteText;
    public static StyleTemplateType EndnoteReference;
    public static StyleTemplateType LineNumber;
    public static StyleTemplateType Heading1Char;
    public static StyleTemplateType Heading2Char;
    public static StyleTemplateType Heading3Char;
    public static StyleTemplateType Heading4Char;
    public static StyleTemplateType Heading5Char;
    public static StyleTemplateType Heading6Char;
    public static StyleTemplateType Heading7Char;
    public static StyleTemplateType Heading8Char;
    public static StyleTemplateType Heading9Char;
}
public enum GemBox.Document.StyleType : Enum {
    public int value__;
    public static StyleType Paragraph;
    public static StyleType Character;
    public static StyleType List;
    public static StyleType Table;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.TableOfEntries : Block {
    [DebuggerBrowsableAttribute("0")]
internal static IList`1<FieldType> ;
    [DebuggerBrowsableAttribute("0")]
private FieldType ;
    [DebuggerBrowsableAttribute("0")]
private BlockCollection ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public bool IsDirty { get; public set; }
    public bool IsLocked { get; public set; }
    [DebuggerBrowsableAttribute("0")]
public ElementType ElementType { get; }
    [DebuggerBrowsableAttribute("0")]
public Section Parent { get; }
    public FieldType FieldType { get; }
    public string InstructionText { get; public set; }
    public BlockCollection Entries { get; }
    [DebuggerBrowsableAttribute("0")]
protected string DebuggerDisplay { get; }
    private IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.Content { get; }
    public TableOfEntries(DocumentModel document, FieldType fieldType);
    public TableOfEntries(DocumentModel document, FieldType fieldType, string instructionText, Block[] entries);
    public TableOfEntries(DocumentModel document, FieldType fieldType, string instructionText, IEnumerable`1<Block> entries);
    private static TableOfEntries();
    [CompilerGeneratedAttribute]
public bool get_IsDirty();
    [CompilerGeneratedAttribute]
public void set_IsDirty(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsLocked();
    [CompilerGeneratedAttribute]
public void set_IsLocked(bool value);
    public virtual ElementType get_ElementType();
    public Section get_Parent();
    public FieldType get_FieldType();
    public string get_InstructionText();
    public void set_InstructionText(string value);
    public BlockCollection get_Entries();
    protected virtual string get_DebuggerDisplay();
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    public TableOfEntries Clone(bool cloneDescendants);
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
    [IteratorStateMachineAttribute("GemBox.Document.TableOfEntries/")]
internal virtual IEnumerable`1<ElementType> p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (ElementCollection );
    [IteratorStateMachineAttribute("GemBox.Document.TableOfEntries/")]
private sealed virtual override IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.get_Content();
    public void Update();
}
public class GemBox.Document.Tables.CreateTableCell : MulticastDelegate {
    public CreateTableCell(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual TableCell Invoke(int rowIndex, int columnIndex);
    public virtual IAsyncResult BeginInvoke(int rowIndex, int columnIndex, AsyncCallback callback, object object);
    public virtual TableCell EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Tables.Table : Block {
    [DebuggerBrowsableAttribute("0")]
private TableRowCollection ;
    [DebuggerBrowsableAttribute("0")]
private TableColumnCollection ;
    [DebuggerBrowsableAttribute("0")]
private TableMetadata ;
    [DebuggerBrowsableAttribute("0")]
private TableColumnCollectionRevision ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
public ElementType ElementType { get; }
    [DebuggerBrowsableAttribute("0")]
public DocumentModel Document { get; }
    public TableRowCollection Rows { get; }
    public TableColumnCollection Columns { get; }
    public TableMetadata Metadata { get; }
    public TableFormat TableFormat { get; public set; }
    [NullableAttribute("2")]
public TableFormatRevision TableFormatRevision { get; public set; }
    [NullableAttribute("2")]
public TableColumnCollectionRevision ColumnsRevision { get; public set; }
    [DebuggerBrowsableAttribute("0")]
protected string DebuggerDisplay { get; }
    [DebuggerBrowsableAttribute("0")]
private IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.Content { get; }
    public Table(DocumentModel document);
    public Table(DocumentModel document, IEnumerable`1<TableRow> rows);
    public Table(DocumentModel document, TableRow[] rows);
    public Table(DocumentModel document, int rowCount, int columnCount, CreateTableCell tableCellCreator);
    public Table(DocumentModel document, int rowCount, int columnCount);
    internal Table(DocumentModel , bool );
    private Table(DocumentModel , Table );
    internal bool ();
    internal void (bool );
    public virtual ElementType get_ElementType();
    public virtual DocumentModel get_Document();
    public TableRowCollection get_Rows();
    public TableColumnCollection get_Columns();
    public TableMetadata get_Metadata();
    internal void (TableMetadata );
    internal bool ();
    public TableFormat get_TableFormat();
    public void set_TableFormat(TableFormat value);
    [NullableContextAttribute("2")]
public TableFormatRevision get_TableFormatRevision();
    [NullableContextAttribute("2")]
public void set_TableFormatRevision(TableFormatRevision value);
    [NullableContextAttribute("2")]
public TableColumnCollectionRevision get_ColumnsRevision();
    [NullableContextAttribute("2")]
public void set_ColumnsRevision(TableColumnCollectionRevision value);
    internal int ();
    internal int ();
    internal void (int );
    protected virtual string get_DebuggerDisplay();
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    public Table Clone(bool cloneDescendants);
    internal void ();
    [IteratorStateMachineAttribute("GemBox.Document.Tables.Table/")]
internal virtual IEnumerable`1<ElementType> p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (ElementCollection );
    internal void ();
    [IteratorStateMachineAttribute("GemBox.Document.Tables.Table/")]
private sealed virtual override IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.get_Content();
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
    private sealed virtual override bool jcuprvrqj7vrv36x9b2l469a3feypc6q​ (Func`2<   , U> , U& );
    private sealed virtual override     jcuprvrqj7vrv36x9b2l469a3feypc6q​ ();
    private sealed virtual override void jcuprvrqj7vrv36x9b2l469a3feypc6q​ (    );
    private sealed virtual override  ​ <   > jcuprvrqj7vrv36x9b2l469a3feypc6q​  ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Tables.TableCell : Element {
    [DebuggerBrowsableAttribute("0")]
private BlockCollection ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private object ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal object  { get; internal set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public TableCellCollection ParentCollection { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public TableRow Parent { get; }
    [DebuggerBrowsableAttribute("0")]
public ElementType ElementType { get; }
    [DebuggerBrowsableAttribute("0")]
public DocumentModel Document { get; }
    public BlockCollection Blocks { get; }
    public int ColumnSpan { get; public set; }
    public int RowSpan { get; public set; }
    public TableCellFormat CellFormat { get; public set; }
    [NullableAttribute("2")]
public Revision Revision { get; public set; }
    [NullableAttribute("2")]
public TableCellFormatRevision CellFormatRevision { get; public set; }
    [DebuggerBrowsableAttribute("0")]
protected string DebuggerDisplay { get; }
    [DebuggerBrowsableAttribute("0")]
private IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.Content { get; }
    public TableCell(DocumentModel document);
    public TableCell(DocumentModel document, string text);
    public TableCell(DocumentModel document, IEnumerable`1<Block> blocks);
    public TableCell(DocumentModel document, Block[] blocks);
    private TableCell(DocumentModel , TableCell );
    [NullableContextAttribute("2")]
internal object ();
    [NullableContextAttribute("2")]
internal void (object );
    [NullableContextAttribute("2")]
public TableCellCollection get_ParentCollection();
    [NullableContextAttribute("2")]
public TableRow get_Parent();
    public virtual ElementType get_ElementType();
    public virtual DocumentModel get_Document();
    public BlockCollection get_Blocks();
    public int get_ColumnSpan();
    public void set_ColumnSpan(int value);
    public int get_RowSpan();
    public void set_RowSpan(int value);
    public TableCellFormat get_CellFormat();
    public void set_CellFormat(TableCellFormat value);
    [NullableContextAttribute("2")]
public Revision get_Revision();
    [NullableContextAttribute("2")]
public void set_Revision(Revision value);
    [NullableContextAttribute("2")]
public TableCellFormatRevision get_CellFormatRevision();
    [NullableContextAttribute("2")]
public void set_CellFormatRevision(TableCellFormatRevision value);
    internal int ();
    internal int ();
    internal void (int );
    protected virtual string get_DebuggerDisplay();
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    public TableCell Clone(bool cloneDescendants);
    [IteratorStateMachineAttribute("GemBox.Document.Tables.TableCell/")]
internal virtual IEnumerable`1<ElementType> p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (ElementCollection );
    [IteratorStateMachineAttribute("GemBox.Document.Tables.TableCell/")]
private sealed virtual override IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.get_Content();
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
    private sealed virtual override bool a3wk3j7c8txvpydatrjkx6fl6t7xmfxm​ (Func`2<   , U> , U& );
    private sealed virtual override     a3wk3j7c8txvpydatrjkx6fl6t7xmfxm​ ();
    private sealed virtual override void a3wk3j7c8txvpydatrjkx6fl6t7xmfxm​ (    );
    private sealed virtual override  ​ <   > a3wk3j7c8txvpydatrjkx6fl6t7xmfxm​ ();
    private sealed virtual override Color a3wk3j7c8txvpydatrjkx6fl6t7xmfxm​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class GemBox.Document.Tables.TableCellCollection : ElementCollection`1<TableCell> {
    internal TableCellCollection(TableRow );
    protected virtual void OnChange();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Tables.TableCellFormat : Format {
    [DebuggerBrowsableAttribute("0")]
private static SingleBorderType[] ;
    [DebuggerBrowsableAttribute("0")]
private static     ;
    [DebuggerBrowsableAttribute("0")]
private static  [] ;
    [DebuggerBrowsableAttribute("0")]
internal   <   > ;
    [DebuggerBrowsableAttribute("0")]
private MultipleBorders ;
    protected DocumentModel DocumentCore { get; }
    public TableWidth PreferredWidth { get; public set; }
    public VerticalAlignment VerticalAlignment { get; public set; }
    public Padding Padding { get; public set; }
    public bool WrapText { get; public set; }
    public bool FitText { get; public set; }
    public MultipleBorders Borders { get; }
    public Color BackgroundColor { get; public set; }
    public TableCellTextDirection TextDirection { get; public set; }
    internal TableCellFormat(  <   > );
    private static TableCellFormat();
    internal     ();
    protected virtual DocumentModel get_DocumentCore();
    internal void (  <   > ,    & );
    private void (Action`1<   > );
    public TableWidth get_PreferredWidth();
    public void set_PreferredWidth(TableWidth value);
    public VerticalAlignment get_VerticalAlignment();
    public void set_VerticalAlignment(VerticalAlignment value);
    public Padding get_Padding();
    public void set_Padding(Padding value);
    private double ();
    private double ();
    private double ();
    private double ();
    private double ();
    private double ();
    private double  ();
    private double  ();
    public bool get_WrapText();
    public void set_WrapText(bool value);
    public bool get_FitText();
    public void set_FitText(bool value);
    public MultipleBorders get_Borders();
    public Color get_BackgroundColor();
    public void set_BackgroundColor(Color value);
    internal void (Nullable`1<   > );
    public TableCellTextDirection get_TextDirection();
    public void set_TextDirection(TableCellTextDirection value);
    internal bool  ();
    internal void (bool );
    internal Revision  ();
    internal void (Revision );
    internal TableCellFormatRevision  ();
    internal void (TableCellFormatRevision );
    public virtual void ClearFormatting();
    public virtual bool Equals(object obj);
    internal bool (TableCellFormat );
    public virtual int GetHashCode();
    public static bool op_Equality(TableCellFormat first, TableCellFormat second);
    public static bool op_Inequality(TableCellFormat first, TableCellFormat second);
    public TableCellFormat Clone();
    public TableCellFormat Clone(bool resolveValues);
    internal void (TableCellFormat );
    private T (Func`2<   , T> );
    private Nullable`1<SingleBorder> (int );
    private void (Func`2<   ,    > );
}
public enum GemBox.Document.Tables.TableCellTextDirection : Enum {
    public int value__;
    public static TableCellTextDirection LeftToRight;
    public static TableCellTextDirection TopToBottom;
    public static TableCellTextDirection BottomToTop;
    public static TableCellTextDirection TopToBottomEastAsian;
    public static TableCellTextDirection TopToBottomEastAsianLeft;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Tables.TableColumn : object {
    [DebuggerBrowsableAttribute("0")]
private double ;
    public double PreferredWidth { get; public set; }
    public TableColumn(double preferredWidth);
    public double get_PreferredWidth();
    public void set_PreferredWidth(double value);
    internal TableColumn ();
    internal void (TableColumn );
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class GemBox.Document.Tables.TableColumnCollection : Collection`1<TableColumn> {
    public TableColumnCollection(TableColumn[] columns);
    protected virtual void InsertItem(int index, TableColumn item);
    protected virtual void SetItem(int index, TableColumn item);
    internal TableColumnCollection ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Tables.TableFormat : Format {
    [DebuggerBrowsableAttribute("0")]
internal static SingleBorderType[] ;
    [DebuggerBrowsableAttribute("0")]
internal static     ;
    [DebuggerBrowsableAttribute("0")]
internal   <   > ;
    [DebuggerBrowsableAttribute("0")]
private TablePositioning ;
    [DebuggerBrowsableAttribute("0")]
private MultipleBorders ;
    protected DocumentModel DocumentCore { get; }
    public TableStyle Style { get; public set; }
    public TableStyleOptions StyleOptions { get; public set; }
    public int RowBandSize { get; public set; }
    public int ColumnBandSize { get; public set; }
    public TableWidth PreferredWidth { get; public set; }
    public HorizontalAlignment Alignment { get; public set; }
    public double IndentFromLeft { get; public set; }
    public Color BackgroundColor { get; public set; }
    public MultipleBorders Borders { get; }
    public TablePositioning Positioning { get; }
    public Padding DefaultCellPadding { get; public set; }
    public double DefaultCellSpacing { get; public set; }
    public bool AutomaticallyResizeToFitContents { get; public set; }
    public bool RightToLeft { get; public set; }
    internal TableFormat(  <   > );
    private static TableFormat();
    internal     ();
    protected virtual DocumentModel get_DocumentCore();
    internal void (  <   > ,    & );
    public TableStyle get_Style();
    public void set_Style(TableStyle value);
    public TableStyleOptions get_StyleOptions();
    public void set_StyleOptions(TableStyleOptions value);
    public int get_RowBandSize();
    public void set_RowBandSize(int value);
    public int get_ColumnBandSize();
    public void set_ColumnBandSize(int value);
    public TableWidth get_PreferredWidth();
    public void set_PreferredWidth(TableWidth value);
    public HorizontalAlignment get_Alignment();
    public void set_Alignment(HorizontalAlignment value);
    public double get_IndentFromLeft();
    public void set_IndentFromLeft(double value);
    public Color get_BackgroundColor();
    public void set_BackgroundColor(Color value);
    internal void (Nullable`1<   > );
    public MultipleBorders get_Borders();
    internal bool ();
    public TablePositioning get_Positioning();
    public Padding get_DefaultCellPadding();
    public void set_DefaultCellPadding(Padding value);
    internal double ();
    internal double ();
    internal double ();
    internal double ();
    public double get_DefaultCellSpacing();
    public void set_DefaultCellSpacing(double value);
    internal bool  ();
    public bool get_AutomaticallyResizeToFitContents();
    public void set_AutomaticallyResizeToFitContents(bool value);
    public bool get_RightToLeft();
    public void set_RightToLeft(bool value);
    internal TableFormatRevision  ();
    internal void (TableFormatRevision );
    internal void ();
    private void (Action`1<   > );
    public virtual void ClearFormatting();
    public virtual bool Equals(object obj);
    internal bool (TableFormat );
    public virtual int GetHashCode();
    public static bool op_Equality(TableFormat first, TableFormat second);
    public static bool op_Inequality(TableFormat first, TableFormat second);
    public TableFormat Clone();
    public TableFormat Clone(bool resolveValues);
    private T (Func`2<   , T> );
    private Nullable`1<SingleBorder> (int );
    private void (Func`2<   ,    > );
    private      ();
    private void (Func`2<   ,    > );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class GemBox.Document.Tables.TableMetadata : object {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    public string Title { get; public set; }
    public string Description { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    internal bool ();
    [NullableContextAttribute("1")]
internal TableMetadata ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Tables.TablePositioning : object {
    [DebuggerBrowsableAttribute("0")]
private object ;
    [DebuggerBrowsableAttribute("0")]
private Func`1<   > ;
    [DebuggerBrowsableAttribute("0")]
private Action`1<Func`2<   ,    >> ;
    public HorizontalPosition HorizontalPosition { get; public set; }
    [ObsoleteAttribute("Use 'GemBox.Document.Tables.TablePositioning.HorizontalPosition' property instead. To change horizontal position base, use new instance of 'GemBox.Document.HorizontalPosition' struct.", "True")]
[EditorBrowsableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
public HorizontalPositionAnchor HorizontalRelativeTo { get; public set; }
    public VerticalPosition VerticalPosition { get; public set; }
    [ObsoleteAttribute("Use 'GemBox.Document.Tables.TablePositioning.VerticalPosition' property instead. To change vertical position base, use new instance of 'GemBox.Document.VerticalPosition' struct.", "True")]
[EditorBrowsableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
public VerticalPositionAnchor VerticalRelativeTo { get; public set; }
    public Padding DistanceFromSurroundingText { get; public set; }
    internal TablePositioning(object , Func`1<   > , Action`1<Func`2<   ,    >> );
    internal bool ();
    internal void (bool );
    public HorizontalPosition get_HorizontalPosition();
    public void set_HorizontalPosition(HorizontalPosition value);
    public HorizontalPositionAnchor get_HorizontalRelativeTo();
    public void set_HorizontalRelativeTo(HorizontalPositionAnchor value);
    public VerticalPosition get_VerticalPosition();
    public void set_VerticalPosition(VerticalPosition value);
    public VerticalPositionAnchor get_VerticalRelativeTo();
    public void set_VerticalRelativeTo(VerticalPositionAnchor value);
    public Padding get_DistanceFromSurroundingText();
    public void set_DistanceFromSurroundingText(Padding value);
    public void ClearPositioning();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(TablePositioning first, TablePositioning second);
    public static bool op_Inequality(TablePositioning first, TablePositioning second);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Tables.TableRow : Element {
    [DebuggerBrowsableAttribute("0")]
private TableCellCollection ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private object ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal object   { get; internal set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public TableRowCollection ParentCollection { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public Table Parent { get; }
    [DebuggerBrowsableAttribute("0")]
public ElementType ElementType { get; }
    [DebuggerBrowsableAttribute("0")]
public DocumentModel Document { get; }
    public TableCellCollection Cells { get; }
    public TableRowFormat RowFormat { get; public set; }
    [NullableAttribute("2")]
public Revision Revision { get; public set; }
    [NullableAttribute("2")]
public TableRowFormatRevision RowFormatRevision { get; public set; }
    private IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.Content { get; }
    public TableRow(DocumentModel document);
    public TableRow(DocumentModel document, IEnumerable`1<TableCell> cells);
    public TableRow(DocumentModel document, TableCell[] cells);
    [NullableContextAttribute("2")]
internal object ();
    [NullableContextAttribute("2")]
internal void (object );
    [NullableContextAttribute("2")]
public TableRowCollection get_ParentCollection();
    [NullableContextAttribute("2")]
public Table get_Parent();
    public virtual ElementType get_ElementType();
    public virtual DocumentModel get_Document();
    public TableCellCollection get_Cells();
    public TableRowFormat get_RowFormat();
    public void set_RowFormat(TableRowFormat value);
    [NullableContextAttribute("2")]
public Revision get_Revision();
    [NullableContextAttribute("2")]
public void set_Revision(Revision value);
    [NullableContextAttribute("2")]
public TableRowFormatRevision get_RowFormatRevision();
    [NullableContextAttribute("2")]
public void set_RowFormatRevision(TableRowFormatRevision value);
    internal     ();
    internal void (    );
    internal int ();
    internal void (int );
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    public TableRow Clone(bool cloneDescendants);
    [IteratorStateMachineAttribute("GemBox.Document.Tables.TableRow/")]
internal virtual IEnumerable`1<ElementType> p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (ElementCollection );
    [IteratorStateMachineAttribute("GemBox.Document.Tables.TableRow/")]
private sealed virtual override IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.get_Content();
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
    private sealed virtual override bool phjg4qj9f937cx9mdgusm2epbqz9vljf​ (Func`2<   , U> , U& );
    private sealed virtual override     phjg4qj9f937cx9mdgusm2epbqz9vljf​ ();
    private sealed virtual override void phjg4qj9f937cx9mdgusm2epbqz9vljf​ (    );
    private sealed virtual override  ​ <   > phjg4qj9f937cx9mdgusm2epbqz9vljf​ ();
    private sealed virtual override bool phjg4qj9f937cx9mdgusm2epbqz9vljf​ (Func`2<   , U> , U& );
    private sealed virtual override     phjg4qj9f937cx9mdgusm2epbqz9vljf​ ();
    private sealed virtual override void phjg4qj9f937cx9mdgusm2epbqz9vljf​ (    );
    private sealed virtual override  ​ <   > phjg4qj9f937cx9mdgusm2epbqz9vljf​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class GemBox.Document.Tables.TableRowCollection : ElementCollection`1<TableRow> {
    internal TableRowCollection(Table );
    protected virtual void OnChange();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Tables.TableRowFormat : Format {
    [DebuggerBrowsableAttribute("0")]
internal   <   > ;
    public TableRowHeight Height { get; public set; }
    public bool AllowBreakAcrossPages { get; public set; }
    public bool RepeatOnEachPage { get; public set; }
    public bool Hidden { get; public set; }
    protected DocumentModel DocumentCore { get; }
    internal TableRowFormat(  <   > );
    public TableRowHeight get_Height();
    public void set_Height(TableRowHeight value);
    public bool get_AllowBreakAcrossPages();
    public void set_AllowBreakAcrossPages(bool value);
    public bool get_RepeatOnEachPage();
    public void set_RepeatOnEachPage(bool value);
    public bool get_Hidden();
    public void set_Hidden(bool value);
    internal TableRowFormatRevision ();
    internal void (TableRowFormatRevision );
    internal int ();
    internal void (int );
    internal int ();
    internal void (int );
    internal TableWidth ();
    internal void (TableWidth );
    internal TableWidth ();
    internal void (TableWidth );
    internal Revision ();
    internal void (Revision );
    internal     ();
    protected virtual DocumentModel get_DocumentCore();
    internal void (  <   > ,    & );
    private void (Action`1<   > );
    public virtual void ClearFormatting();
    public virtual bool Equals(object obj);
    internal bool (TableRowFormat );
    public virtual int GetHashCode();
    public static bool op_Equality(TableRowFormat first, TableRowFormat second);
    public static bool op_Inequality(TableRowFormat first, TableRowFormat second);
    public TableRowFormat Clone();
    public TableRowFormat Clone(bool resolveValues);
    private T (Func`2<   , T> );
}
public class GemBox.Document.Tables.TableRowHeight : ValueType {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private TableRowHeightRule ;
    public double Value { get; }
    public TableRowHeightRule Rule { get; }
    public TableRowHeight(double value, TableRowHeightRule rule);
    public double get_Value();
    public TableRowHeightRule get_Rule();
    public sealed virtual bool Equals(TableRowHeight other);
    [NullableContextAttribute("1")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static bool op_Equality(TableRowHeight first, TableRowHeight second);
    public static bool op_Inequality(TableRowHeight first, TableRowHeight second);
}
public enum GemBox.Document.Tables.TableRowHeightRule : Enum {
    public int value__;
    public static TableRowHeightRule Auto;
    public static TableRowHeightRule AtLeast;
    public static TableRowHeightRule Exact;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Tables.TableStyle : Style {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private TableStyle ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private TableStyleFormatCollection ;
    public StyleType StyleType { get; }
    public TableStyleFormatCollection ConditionalFormats { get; }
    public TableFormat TableFormat { get; public set; }
    public TableRowFormat RowFormat { get; public set; }
    public TableCellFormat CellFormat { get; public set; }
    public ParagraphFormat ParagraphFormat { get; public set; }
    public CharacterFormat CharacterFormat { get; public set; }
    [NullableAttribute("2")]
public TableStyle BaseStyle { get; public set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
protected Style BaseStyleCore { get; protected set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
public DocumentModel Document { get; protected set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private  ​ <   >   { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private  ​ <   >   { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private  ​ <   >   { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private  ​ <   >   { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private  ​ <   >   { get; }
    public TableStyle(string name);
    public virtual StyleType get_StyleType();
    public TableStyleFormatCollection get_ConditionalFormats();
    public TableFormat get_TableFormat();
    public void set_TableFormat(TableFormat value);
    public TableRowFormat get_RowFormat();
    public void set_RowFormat(TableRowFormat value);
    public TableCellFormat get_CellFormat();
    public void set_CellFormat(TableCellFormat value);
    public ParagraphFormat get_ParagraphFormat();
    public void set_ParagraphFormat(ParagraphFormat value);
    public CharacterFormat get_CharacterFormat();
    public void set_CharacterFormat(CharacterFormat value);
    [NullableContextAttribute("2")]
public TableStyle get_BaseStyle();
    [NullableContextAttribute("2")]
public void set_BaseStyle(TableStyle value);
    [NullableContextAttribute("2")]
protected virtual Style get_BaseStyleCore();
    [NullableContextAttribute("2")]
protected virtual void set_BaseStyleCore(Style value);
    [NullableContextAttribute("2")]
public virtual DocumentModel get_Document();
    [NullableContextAttribute("2")]
protected virtual void set_Document(DocumentModel value);
    private sealed virtual override     jt6fuqqujrxyk82jkcle3ulzw9klqyqn​ ();
    private sealed virtual override void jt6fuqqujrxyk82jkcle3ulzw9klqyqn​ (    );
    private sealed virtual override  ​ <   > jt6fuqqujrxyk82jkcle3ulzw9klqyqn​ ();
    private sealed virtual override bool jt6fuqqujrxyk82jkcle3ulzw9klqyqn​ (Func`2<   , U> , U& );
    private sealed virtual override     jt6fuqqujrxyk82jkcle3ulzw9klqyqn​ ();
    private sealed virtual override void jt6fuqqujrxyk82jkcle3ulzw9klqyqn​ (    );
    private sealed virtual override  ​ <   > jt6fuqqujrxyk82jkcle3ulzw9klqyqn​ ();
    private sealed virtual override bool jt6fuqqujrxyk82jkcle3ulzw9klqyqn​ (Func`2<   , U> , U& );
    private sealed virtual override     jt6fuqqujrxyk82jkcle3ulzw9klqyqn​ ();
    private sealed virtual override void jt6fuqqujrxyk82jkcle3ulzw9klqyqn​ (    );
    private sealed virtual override  ​ <   > jt6fuqqujrxyk82jkcle3ulzw9klqyqn​ ();
    private sealed virtual override bool jt6fuqqujrxyk82jkcle3ulzw9klqyqn​ (Func`2<   , U> , U& );
    private sealed virtual override     jt6fuqqujrxyk82jkcle3ulzw9klqyqn​ ();
    private sealed virtual override void jt6fuqqujrxyk82jkcle3ulzw9klqyqn​ (    );
    private sealed virtual override  ​ <   > jt6fuqqujrxyk82jkcle3ulzw9klqyqn​  ();
    private sealed virtual override bool jt6fuqqujrxyk82jkcle3ulzw9klqyqn​ (Func`2<   , U> , U& );
    private sealed virtual override     jt6fuqqujrxyk82jkcle3ulzw9klqyqn​  ();
    private sealed virtual override void jt6fuqqujrxyk82jkcle3ulzw9klqyqn​ (    );
    private sealed virtual override  ​ <   > jt6fuqqujrxyk82jkcle3ulzw9klqyqn​  ();
    private sealed virtual override bool jt6fuqqujrxyk82jkcle3ulzw9klqyqn​ (Func`2<   , U> , U& );
    internal virtual Style 68fp7mkt9fybxft862un8hgms2ez5evk​  ();
    internal virtual bool 68fp7mkt9fybxft862un8hgms2ez5evk​ (Style );
    internal virtual bool 68fp7mkt9fybxft862un8hgms2ez5evk​ (Style );
    private sealed virtual override bool jt6fuqqujrxyk82jkcle3ulzw9klqyqn​ (TableStyleOptions , Element , Func`2<   , U> , U& );
    private sealed virtual override bool jt6fuqqujrxyk82jkcle3ulzw9klqyqn​ (TableStyleOptions , Element , Func`2<   , U> , U& );
    private sealed virtual override bool jt6fuqqujrxyk82jkcle3ulzw9klqyqn​  (TableStyleOptions , Element , Func`2<   , U> , U& );
    private sealed virtual override bool jt6fuqqujrxyk82jkcle3ulzw9klqyqn​  (TableStyleOptions , Element , Func`2<   , U> , U& );
    private sealed virtual override bool jt6fuqqujrxyk82jkcle3ulzw9klqyqn​  (TableStyleOptions , Element , Func`2<   , U> , U& );
    private bool  (TableStyleOptions , Element , Func`2<T, U> , U& , bool );
    internal IEnumerable`1<TableStyleFormat> (TableStyleOptions , TableRow );
    internal IEnumerable`1<TableStyleFormat> (TableStyleOptions , TableCell );
    [IteratorStateMachineAttribute("GemBox.Document.Tables.TableStyle/")]
private IEnumerable`1<TableStyleFormat> (TableStyleOptions , TableRow ,  );
    [IteratorStateMachineAttribute("GemBox.Document.Tables.TableStyle/")]
private IEnumerable`1<TableStyleFormat> (TableStyleOptions , TableCell ,  );
    private static bool (TableStyleFormatType , TableRow , int ,  );
    private static bool (TableStyleFormatType , TableCell , int , int ,  );
    private static bool (SingleBorderType , TableStyleFormatType , TableCell , int , int ,  );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Tables.TableStyleFormat : Format {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private TableStyleFormatType ;
    public TableStyleFormatType FormatType { get; }
    public TableFormat TableFormat { get; public set; }
    public TableRowFormat RowFormat { get; public set; }
    public TableCellFormat CellFormat { get; public set; }
    public ParagraphFormat ParagraphFormat { get; public set; }
    public CharacterFormat CharacterFormat { get; public set; }
    [NullableAttribute("2")]
public DocumentModel Document { get; internal set; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private  ​ <   >   { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private  ​ <   >   { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private  ​ <   >   { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private  ​ <   >   { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private  ​ <   >   { get; }
    [NullableAttribute("2")]
protected DocumentModel DocumentCore { get; }
    public TableStyleFormat(TableStyleFormatType formatType);
    [CompilerGeneratedAttribute]
public TableStyleFormatType get_FormatType();
    private void (TableStyleFormatType );
    public TableFormat get_TableFormat();
    public void set_TableFormat(TableFormat value);
    public TableRowFormat get_RowFormat();
    public void set_RowFormat(TableRowFormat value);
    public TableCellFormat get_CellFormat();
    public void set_CellFormat(TableCellFormat value);
    public ParagraphFormat get_ParagraphFormat();
    public void set_ParagraphFormat(ParagraphFormat value);
    public CharacterFormat get_CharacterFormat();
    public void set_CharacterFormat(CharacterFormat value);
    [NullableContextAttribute("2")]
public DocumentModel get_Document();
    [NullableContextAttribute("2")]
internal void (DocumentModel );
    private sealed virtual override     s8scnrl6wrtkmf47tcqbzscdgt3ets26​ ();
    private sealed virtual override void s8scnrl6wrtkmf47tcqbzscdgt3ets26​ (    );
    private sealed virtual override  ​ <   > s8scnrl6wrtkmf47tcqbzscdgt3ets26​ ();
    private sealed virtual override bool s8scnrl6wrtkmf47tcqbzscdgt3ets26​ (Func`2<   , U> , U& );
    private sealed virtual override     s8scnrl6wrtkmf47tcqbzscdgt3ets26​ ();
    private sealed virtual override void s8scnrl6wrtkmf47tcqbzscdgt3ets26​ (    );
    private sealed virtual override  ​ <   > s8scnrl6wrtkmf47tcqbzscdgt3ets26​ ();
    private sealed virtual override bool s8scnrl6wrtkmf47tcqbzscdgt3ets26​ (Func`2<   , U> , U& );
    private sealed virtual override     s8scnrl6wrtkmf47tcqbzscdgt3ets26​ ();
    private sealed virtual override void s8scnrl6wrtkmf47tcqbzscdgt3ets26​ (    );
    private sealed virtual override  ​ <   > s8scnrl6wrtkmf47tcqbzscdgt3ets26​ ();
    private sealed virtual override bool s8scnrl6wrtkmf47tcqbzscdgt3ets26​ (Func`2<   , U> , U& );
    private sealed virtual override     s8scnrl6wrtkmf47tcqbzscdgt3ets26​ ();
    private sealed virtual override void s8scnrl6wrtkmf47tcqbzscdgt3ets26​ (    );
    private sealed virtual override  ​ <   > s8scnrl6wrtkmf47tcqbzscdgt3ets26​  ();
    private sealed virtual override bool s8scnrl6wrtkmf47tcqbzscdgt3ets26​ (Func`2<   , U> , U& );
    private sealed virtual override     s8scnrl6wrtkmf47tcqbzscdgt3ets26​  ();
    private sealed virtual override void s8scnrl6wrtkmf47tcqbzscdgt3ets26​ (    );
    private sealed virtual override  ​ <   > s8scnrl6wrtkmf47tcqbzscdgt3ets26​  ();
    private sealed virtual override bool s8scnrl6wrtkmf47tcqbzscdgt3ets26​ (Func`2<   , U> , U& );
    public virtual void ClearFormatting();
    [NullableContextAttribute("2")]
protected virtual DocumentModel get_DocumentCore();
    internal bool (TableStyleFormat );
    internal bool (TableStyleFormat );
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Tables.TableStyleFormatCollection : object {
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private TableStyleFormat[] ;
    public TableStyleFormat Item { get; }
    public TableStyleFormat get_Item(TableStyleFormatType formatType);
    public bool Contains(TableStyleFormatType formatType);
    public bool Remove(TableStyleFormatType formatType);
    public void Clear();
    [IteratorStateMachineAttribute("GemBox.Document.Tables.TableStyleFormatCollection/")]
internal IEnumerable`1<TableStyleFormat> (TableStyleOptions );
    private int (TableStyleFormatType );
    [EditorBrowsableAttribute("1")]
public void Add(TableStyleFormat styleFormat);
    [IteratorStateMachineAttribute("GemBox.Document.Tables.TableStyleFormatCollection/")]
public sealed virtual IEnumerator`1<TableStyleFormat> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private static bool (TableStyleFormatType , TableStyleOptions );
    internal static bool (TableStyleOptions , TableStyleOptions );
}
public enum GemBox.Document.Tables.TableStyleFormatType : Enum {
    public int value__;
    public static TableStyleFormatType WholeTable;
    public static TableStyleFormatType OddBandedRows;
    public static TableStyleFormatType EvenBandedRows;
    public static TableStyleFormatType OddBandedColumns;
    public static TableStyleFormatType EvenBandedColumns;
    public static TableStyleFormatType FirstColumn;
    public static TableStyleFormatType LastColumn;
    public static TableStyleFormatType FirstRow;
    public static TableStyleFormatType LastRow;
    public static TableStyleFormatType TopLeftCell;
    public static TableStyleFormatType TopRightCell;
    public static TableStyleFormatType BottomLeftCell;
    public static TableStyleFormatType BottomRightCell;
}
[FlagsAttribute]
public enum GemBox.Document.Tables.TableStyleOptions : Enum {
    public int value__;
    public static TableStyleOptions None;
    public static TableStyleOptions FirstRow;
    public static TableStyleOptions LastRow;
    public static TableStyleOptions FirstColumn;
    public static TableStyleOptions LastColumn;
    public static TableStyleOptions BandedRows;
    public static TableStyleOptions BandedColumns;
    public static TableStyleOptions All;
}
public class GemBox.Document.Tables.TableWidth : ValueType {
    public static TableWidth Auto;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private TableWidthUnit ;
    public double Value { get; }
    public TableWidthUnit Unit { get; }
    public TableWidth(double value, TableWidthUnit unit);
    public double get_Value();
    public TableWidthUnit get_Unit();
    public sealed virtual bool Equals(TableWidth other);
    [NullableContextAttribute("1")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static bool op_Equality(TableWidth first, TableWidth second);
    public static bool op_Inequality(TableWidth first, TableWidth second);
}
public enum GemBox.Document.Tables.TableWidthUnit : Enum {
    public int value__;
    public static TableWidthUnit Auto;
    public static TableWidthUnit Point;
    public static TableWidthUnit Percentage;
}
public enum GemBox.Document.TabPositioningBase : Enum {
    public int value__;
    public static TabPositioningBase Margin;
    public static TabPositioningBase Indent;
}
public class GemBox.Document.TabStop : ValueType {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private TabStopAlignment ;
    [DebuggerBrowsableAttribute("0")]
private TabStopLeader ;
    public double Position { get; }
    public TabStopAlignment Alignment { get; }
    public TabStopLeader Leader { get; }
    public TabStop(double position, TabStopAlignment alignment, TabStopLeader leader);
    public TabStop(double position, TabStopAlignment alignment);
    public double get_Position();
    public TabStopAlignment get_Alignment();
    public TabStopLeader get_Leader();
    public sealed virtual bool Equals(TabStop other);
    [NullableContextAttribute("1")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(TabStop first, TabStop second);
    public static bool op_Inequality(TabStop first, TabStop second);
}
public enum GemBox.Document.TabStopAlignment : Enum {
    public int value__;
    public static TabStopAlignment None;
    public static TabStopAlignment Left;
    public static TabStopAlignment Center;
    public static TabStopAlignment Right;
    public static TabStopAlignment Decimal;
    public static TabStopAlignment Bar;
    public static TabStopAlignment List;
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.TabStopCollection : object {
    [DebuggerBrowsableAttribute("0")]
private object ;
    [DebuggerBrowsableAttribute("0")]
private Func`1<   > ;
    [DebuggerBrowsableAttribute("0")]
private Action`1<Func`2<   ,    >> ;
    public TabStop Item { get; public set; }
    public int Count { get; }
    private bool System.Collections.Generic.ICollection<GemBox.Document.TabStop>.IsReadOnly { get; }
    internal TabStopCollection(object , Func`1<   > , Action`1<Func`2<   ,    >> );
    public sealed virtual int IndexOf(TabStop item);
    public sealed virtual void Insert(int index, TabStop item);
    public sealed virtual void RemoveAt(int index);
    public sealed virtual TabStop get_Item(int index);
    public sealed virtual void set_Item(int index, TabStop value);
    public sealed virtual void Add(TabStop item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(TabStop item);
    public sealed virtual void CopyTo(TabStop[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public sealed virtual bool Remove(TabStop item);
    private sealed virtual override bool System.Collections.Generic.ICollection<GemBox.Document.TabStop>.get_IsReadOnly();
    public sealed virtual IEnumerator`1<TabStop> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(TabStopCollection first, TabStopCollection second);
    public static bool op_Inequality(TabStopCollection first, TabStopCollection second);
}
public enum GemBox.Document.TabStopLeader : Enum {
    public int value__;
    public static TabStopLeader None;
    public static TabStopLeader Dot;
    public static TabStopLeader Hyphen;
    public static TabStopLeader Underscore;
}
public enum GemBox.Document.TextAutoFit : Enum {
    public int value__;
    public static TextAutoFit None;
    public static TextAutoFit ShrinkTextOnOverflow;
    public static TextAutoFit ResizeShapeToFitText;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.TextBox : Shape {
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int> ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private BlockCollection ;
    [DebuggerBrowsableAttribute("0")]
private TextBoxFormat ;
    public BlockCollection Blocks { get; }
    public TextBoxFormat TextBoxFormat { get; }
    [DebuggerBrowsableAttribute("0")]
protected double DefaultOutlineWidth { get; }
    public ElementType ElementType { get; }
    [DebuggerBrowsableAttribute("0")]
private IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.Content { get; }
    internal TextBox(DocumentModel );
    internal TextBox(DocumentModel , Layout ,     , Block[] );
    public TextBox(DocumentModel document, Layout layout, ShapeType shapeType);
    public TextBox(DocumentModel document, Layout layout);
    public TextBox(DocumentModel document, Layout layout, IEnumerable`1<Block> blocks);
    public TextBox(DocumentModel document, Layout layout, Block[] blocks);
    private protected virtual Color cjw9gdljmuaqz8q2wen98dkryjv5xh34​ ();
    private protected virtual Color cjw9gdljmuaqz8q2wen98dkryjv5xh34​ ();
    private protected virtual Color cjw9gdljmuaqz8q2wen98dkryjv5xh34​ ();
    internal Nullable`1<int> ();
    internal void (Nullable`1<int> );
    internal bool ();
    internal void (bool );
    internal     ();
    internal void (    );
    [CompilerGeneratedAttribute]
public BlockCollection get_Blocks();
    private void (BlockCollection );
    public TextBoxFormat get_TextBoxFormat();
    internal void (TextBoxFormat );
    protected virtual double get_DefaultOutlineWidth();
    public sealed virtual ElementType get_ElementType();
    protected virtual void VerifyShapeType(ShapeType value);
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    public TextBox Clone(bool cloneDescendants);
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
    [IteratorStateMachineAttribute("GemBox.Document.TextBox/")]
internal virtual IEnumerable`1<ElementType> p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (ElementCollection );
    internal void (double );
    private bool ();
    private static    ();
    internal     ();
    [IteratorStateMachineAttribute("GemBox.Document.TextBox/")]
private sealed virtual override IEnumerable`1<ElementCollection> GemBox.Document.IContentElement.get_Content();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.TextColumn : object {
    [DebuggerBrowsableAttribute("0")]
private TextColumnCollection ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public double Width { get; public set; }
    public double SpaceAfter { get; public set; }
    internal TextColumn(TextColumnCollection );
    internal TextColumn(TextColumnCollection , TextColumn );
    public double get_Width();
    public void set_Width(double value);
    public double get_SpaceAfter();
    public void set_SpaceAfter(double value);
    private void ();
    internal void ();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class GemBox.Document.TextColumnCollection : ReadOnlyCollection`1<TextColumn> {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public bool LineBetween { get; public set; }
    public bool EvenlySpaced { get; public set; }
    public double SpaceAfter { get; public set; }
    public TextColumnCollection(int columnsCount);
    private TextColumnCollection(TextColumnCollection );
    [CompilerGeneratedAttribute]
public bool get_LineBetween();
    [CompilerGeneratedAttribute]
public void set_LineBetween(bool value);
    private void (TextColumnCollection );
    public bool get_EvenlySpaced();
    public void set_EvenlySpaced(bool value);
    public double get_SpaceAfter();
    public void set_SpaceAfter(double value);
    internal TextColumnCollection ();
}
public enum GemBox.Document.TextDirection : Enum {
    public int value__;
    public static TextDirection Horizontal;
    public static TextDirection Rotate90;
    public static TextDirection Rotate270;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.TextWatermark : Watermark {
    [DebuggerBrowsableAttribute("0")]
private TextBox ;
    public Size Size { get; public set; }
    public string Text { get; public set; }
    public string FontName { get; public set; }
    public Color Color { get; public set; }
    public bool Semitransparent { get; public set; }
    public TextBox TextBox { get; }
    public TextWatermark(DocumentModel document, string text);
    public TextWatermark(DocumentModel document, string text, double width, double height);
    public TextWatermark(DocumentModel document, string text, double width, double height, LengthUnit lengthUnit);
    internal TextWatermark(TextBox );
    private CharacterFormat ();
    [IteratorStateMachineAttribute("GemBox.Document.TextWatermark/")]
private IEnumerable`1<CharacterFormat> ();
    public Size get_Size();
    public void set_Size(Size value);
    public string get_Text();
    public void set_Text(string value);
    public string get_FontName();
    public void set_FontName(string value);
    public Color get_Color();
    public void set_Color(Color value);
    public bool get_Semitransparent();
    public void set_Semitransparent(bool value);
    public TextBox get_TextBox();
    public void SetDiagonal();
    public void SetHorizontal();
    internal void ();
    private Size ();
    internal virtual Shape mmyx33fhl4japg4ytmd3xrl4km39zecn​ ();
    internal virtual void mmyx33fhl4japg4ytmd3xrl4km39zecn​ ();
}
public enum GemBox.Document.TextWrappingStyle : Enum {
    public int value__;
    [ObsoleteAttribute("Use 'GemBox.Document.InlineLayout' type instead.")]
[EditorBrowsableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
public static TextWrappingStyle InLineWithText;
    public static TextWrappingStyle Square;
    public static TextWrappingStyle Tight;
    public static TextWrappingStyle Through;
    public static TextWrappingStyle TopAndBottom;
    public static TextWrappingStyle BehindText;
    public static TextWrappingStyle InFrontOfText;
}
public enum GemBox.Document.TiffCompression : Enum {
    public int value__;
    public static TiffCompression Default;
    public static TiffCompression None;
    public static TiffCompression Ccitt3;
    public static TiffCompression Ccitt4;
    public static TiffCompression Lzw;
    public static TiffCompression Rle;
    public static TiffCompression Zip;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Tracking.CharacterFormatRevision : Revision {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    public CharacterFormat CharacterFormat { get; public set; }
    public CharacterFormatRevision(DocumentModel document);
    internal void (DocumentModel );
    public CharacterFormat get_CharacterFormat();
    public void set_CharacterFormat(CharacterFormat value);
    internal CharacterFormatRevision ();
    private sealed virtual override bool wh4lwb9mnazgmgc546qr9aca7j4eddl7​ (Func`2<   , U> , U& );
    private sealed virtual override     wh4lwb9mnazgmgc546qr9aca7j4eddl7​ ();
    private sealed virtual override void wh4lwb9mnazgmgc546qr9aca7j4eddl7​ (    );
    private sealed virtual override  ​ <   > wh4lwb9mnazgmgc546qr9aca7j4eddl7​ ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Tracking.MoveRangeSeparator : Inline {
    [DebuggerBrowsableAttribute("0")]
private static Random ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private DateTime ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private bool ;
    public string Id { get; }
    [NullableAttribute("2")]
public string Author { get; public set; }
    public DateTime Date { get; public set; }
    public string Name { get; }
    public bool IsStart { get; }
    public bool IsFrom { get; }
    [DebuggerBrowsableAttribute("0")]
public ElementType ElementType { get; }
    public MoveRangeSeparator(DocumentModel document, bool isStart, bool isFrom, string id, string name);
    private static MoveRangeSeparator();
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public string get_Author();
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public void set_Author(string value);
    [CompilerGeneratedAttribute]
public DateTime get_Date();
    [CompilerGeneratedAttribute]
public void set_Date(DateTime value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public bool get_IsStart();
    [CompilerGeneratedAttribute]
public bool get_IsFrom();
    public virtual ElementType get_ElementType();
    internal virtual Element p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (DocumentModel );
    internal virtual void p3ahdxhq2en5mwdyv6smfc36ubqsrgf9​ (    );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Tracking.ParagraphFormatRevision : Revision {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
internal     ;
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    public ParagraphFormat ParagraphFormat { get; public set; }
    public ListFormat ListFormat { get; public set; }
    public ParagraphFormatRevision(DocumentModel document);
    internal void (DocumentModel );
    public ParagraphFormat get_ParagraphFormat();
    public void set_ParagraphFormat(ParagraphFormat value);
    public ListFormat get_ListFormat();
    public void set_ListFormat(ListFormat value);
    private sealed virtual override bool 4zxc6nzdlrrlveyuwc4xyxy2thx2th7f​ (Func`2<   , U> , U& );
    private sealed virtual override     4zxc6nzdlrrlveyuwc4xyxy2thx2th7f​ ();
    private sealed virtual override void 4zxc6nzdlrrlveyuwc4xyxy2thx2th7f​ (    );
    private sealed virtual override  ​ <   > 4zxc6nzdlrrlveyuwc4xyxy2thx2th7f​ ();
    private sealed virtual override int 4zxc6nzdlrrlveyuwc4xyxy2thx2th7f​ ();
    private sealed virtual override void 4zxc6nzdlrrlveyuwc4xyxy2thx2th7f​ (int );
    private sealed virtual override     4zxc6nzdlrrlveyuwc4xyxy2thx2th7f​ ();
    private sealed virtual override void 4zxc6nzdlrrlveyuwc4xyxy2thx2th7f​ (    );
    private sealed virtual override  ​ <   > 4zxc6nzdlrrlveyuwc4xyxy2thx2th7f​ ();
    private sealed virtual override bool 4zxc6nzdlrrlveyuwc4xyxy2thx2th7f​ (Func`2<   , U> , U& );
    internal ParagraphFormatRevision ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Tracking.Revision : object {
    [DebuggerBrowsableAttribute("0")]
private static Random ;
    [DebuggerBrowsableAttribute("0")]
private Element ;
    [DebuggerBrowsableAttribute("0")]
private Style ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private IList`1<Revision> ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private DateTime ;
    [DebuggerBrowsableAttribute("0")]
private RevisionType  ;
    [NullableAttribute("2")]
public string Author { get; public set; }
    public DateTime Date { get; public set; }
    public RevisionType RevisionType { get; }
    public Revision(RevisionType revisionType);
    private static Revision();
    internal string ();
    internal void (string );
    internal IList`1<Revision> ();
    internal void (IList`1<Revision> );
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public string get_Author();
    [CompilerGeneratedAttribute]
[NullableContextAttribute("2")]
public void set_Author(string value);
    [CompilerGeneratedAttribute]
public DateTime get_Date();
    [CompilerGeneratedAttribute]
public void set_Date(DateTime value);
    [CompilerGeneratedAttribute]
public RevisionType get_RevisionType();
    internal Element ();
    internal void (Element );
    internal Style ();
    internal void (Style );
    internal object ();
    public void Accept();
    public void Reject();
    internal Revision ();
    private protected bool (Revision );
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Tracking.RevisionCollection : object {
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    internal RevisionCollection(DocumentModel );
    private static ElementType[] ();
    public void AcceptAll();
    public void RejectAll();
    [IteratorStateMachineAttribute("GemBox.Document.Tracking.RevisionCollection/")]
public sealed virtual IEnumerator`1<Revision> GetEnumerator();
    [IteratorStateMachineAttribute("GemBox.Document.Tracking.RevisionCollection/")]
private static IEnumerable`1<Element> (Element );
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public enum GemBox.Document.Tracking.RevisionColor : Enum {
    public int value__;
    public static RevisionColor Black;
    public static RevisionColor Blue;
    public static RevisionColor BrightGreen;
    public static RevisionColor LightPink;
    public static RevisionColor LightBlue;
    public static RevisionColor LightYellow;
    public static RevisionColor LightPurple;
    public static RevisionColor LightGreen;
    public static RevisionColor LightOrange;
    public static RevisionColor DarkBlue;
    public static RevisionColor DarkRed;
    public static RevisionColor DarkYellow;
    public static RevisionColor Gray25;
    public static RevisionColor Gray50;
    public static RevisionColor Green;
    public static RevisionColor Pink;
    public static RevisionColor Red;
    public static RevisionColor Teal;
    public static RevisionColor Turquoise;
    public static RevisionColor Violet;
    public static RevisionColor White;
    public static RevisionColor Yellow;
}
public class GemBox.Document.Tracking.RevisionOptions : object {
    [DebuggerBrowsableAttribute("0")]
private ShowRevisionType ;
    [DebuggerBrowsableAttribute("0")]
private RevisionTextEffect ;
    [DebuggerBrowsableAttribute("0")]
private RevisionColor ;
    [DebuggerBrowsableAttribute("0")]
private RevisionTextEffect ;
    [DebuggerBrowsableAttribute("0")]
private RevisionColor ;
    [DebuggerBrowsableAttribute("0")]
private RevisionTextEffect ;
    [DebuggerBrowsableAttribute("0")]
private RevisionColor ;
    [DebuggerBrowsableAttribute("0")]
private RevisionTextEffect  ;
    [DebuggerBrowsableAttribute("0")]
private RevisionColor  ;
    [DebuggerBrowsableAttribute("0")]
private RevisionTextEffect  ;
    [DebuggerBrowsableAttribute("0")]
private RevisionColor  ;
    [DebuggerBrowsableAttribute("0")]
private RevisionColor  ;
    [DebuggerBrowsableAttribute("0")]
private RevisionColor  ;
    public ShowRevisionType ShowRevisions { get; public set; }
    public RevisionTextEffect InsertionEffect { get; public set; }
    public RevisionColor InsertionColor { get; public set; }
    public RevisionTextEffect DeletionEffect { get; public set; }
    public RevisionColor DeletionColor { get; public set; }
    public RevisionTextEffect FormattingEffect { get; public set; }
    public RevisionColor FormattingColor { get; public set; }
    public RevisionTextEffect MovedFromEffect { get; public set; }
    public RevisionColor MovedFromColor { get; public set; }
    public RevisionTextEffect MovedToEffect { get; public set; }
    public RevisionColor MovedToColor { get; public set; }
    public RevisionColor InsertedCellsColor { get; public set; }
    public RevisionColor DeletedCellsColor { get; public set; }
    [CompilerGeneratedAttribute]
public ShowRevisionType get_ShowRevisions();
    [CompilerGeneratedAttribute]
public void set_ShowRevisions(ShowRevisionType value);
    internal bool ();
    internal bool ();
    internal bool ();
    internal bool ();
    internal bool ();
    [CompilerGeneratedAttribute]
public RevisionTextEffect get_InsertionEffect();
    [CompilerGeneratedAttribute]
public void set_InsertionEffect(RevisionTextEffect value);
    [CompilerGeneratedAttribute]
public RevisionColor get_InsertionColor();
    [CompilerGeneratedAttribute]
public void set_InsertionColor(RevisionColor value);
    [CompilerGeneratedAttribute]
public RevisionTextEffect get_DeletionEffect();
    [CompilerGeneratedAttribute]
public void set_DeletionEffect(RevisionTextEffect value);
    [CompilerGeneratedAttribute]
public RevisionColor get_DeletionColor();
    [CompilerGeneratedAttribute]
public void set_DeletionColor(RevisionColor value);
    [CompilerGeneratedAttribute]
public RevisionTextEffect get_FormattingEffect();
    [CompilerGeneratedAttribute]
public void set_FormattingEffect(RevisionTextEffect value);
    [CompilerGeneratedAttribute]
public RevisionColor get_FormattingColor();
    [CompilerGeneratedAttribute]
public void set_FormattingColor(RevisionColor value);
    [CompilerGeneratedAttribute]
public RevisionTextEffect get_MovedFromEffect();
    [CompilerGeneratedAttribute]
public void set_MovedFromEffect(RevisionTextEffect value);
    [CompilerGeneratedAttribute]
public RevisionColor get_MovedFromColor();
    [CompilerGeneratedAttribute]
public void set_MovedFromColor(RevisionColor value);
    [CompilerGeneratedAttribute]
public RevisionTextEffect get_MovedToEffect();
    [CompilerGeneratedAttribute]
public void set_MovedToEffect(RevisionTextEffect value);
    [CompilerGeneratedAttribute]
public RevisionColor get_MovedToColor();
    [CompilerGeneratedAttribute]
public void set_MovedToColor(RevisionColor value);
    [CompilerGeneratedAttribute]
public RevisionColor get_InsertedCellsColor();
    [CompilerGeneratedAttribute]
public void set_InsertedCellsColor(RevisionColor value);
    [CompilerGeneratedAttribute]
public RevisionColor get_DeletedCellsColor();
    [CompilerGeneratedAttribute]
public void set_DeletedCellsColor(RevisionColor value);
    internal RevisionTextEffect (RevisionType );
    internal RevisionColor (RevisionType );
    internal static ShowRevisionType (RevisionType );
    internal static Color (RevisionColor );
    [NullableContextAttribute("1")]
internal static void (CharacterFormat , RevisionTextEffect );
}
public enum GemBox.Document.Tracking.RevisionTextEffect : Enum {
    public int value__;
    public static RevisionTextEffect None;
    public static RevisionTextEffect Color;
    public static RevisionTextEffect Bold;
    public static RevisionTextEffect Italic;
    public static RevisionTextEffect Underline;
    public static RevisionTextEffect DoubleUnderline;
    public static RevisionTextEffect StrikeThrough;
    public static RevisionTextEffect DoubleStrikeThrough;
}
public enum GemBox.Document.Tracking.RevisionType : Enum {
    public int value__;
    public static RevisionType Insert;
    public static RevisionType Delete;
    public static RevisionType MoveFrom;
    public static RevisionType MoveTo;
    public static RevisionType FormatChange;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Tracking.SectionPropertiesRevision : Revision {
    [DebuggerBrowsableAttribute("0")]
private PageSetup ;
    [DebuggerBrowsableAttribute("0")]
private NoteSettings ;
    [DebuggerBrowsableAttribute("0")]
private NoteSettings ;
    public PageSetup PageSetup { get; public set; }
    public NoteSettings FootnoteSettings { get; }
    public NoteSettings EndnoteSettings { get; }
    public SectionPropertiesRevision(DocumentModel document);
    public PageSetup get_PageSetup();
    public void set_PageSetup(PageSetup value);
    public NoteSettings get_FootnoteSettings();
    public NoteSettings get_EndnoteSettings();
}
[FlagsAttribute]
public enum GemBox.Document.Tracking.ShowRevisionType : Enum {
    public int value__;
    public static ShowRevisionType None;
    public static ShowRevisionType Insertions;
    public static ShowRevisionType Deletions;
    public static ShowRevisionType Formatting;
    public static ShowRevisionType MovedFrom;
    public static ShowRevisionType MovedTo;
    public static ShowRevisionType All;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Tracking.TableCellFormatRevision : Revision {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    public TableCellFormat CellFormat { get; public set; }
    public TableCellFormatRevision(DocumentModel document);
    internal void (DocumentModel );
    public TableCellFormat get_CellFormat();
    public void set_CellFormat(TableCellFormat value);
    private sealed virtual override bool jdb7j6b6mzwv5bsglupnbavgsjuq4bpu​ (Func`2<   , U> , U& );
    private sealed virtual override     jdb7j6b6mzwv5bsglupnbavgsjuq4bpu​ ();
    private sealed virtual override void jdb7j6b6mzwv5bsglupnbavgsjuq4bpu​ (    );
    private sealed virtual override  ​ <   > jdb7j6b6mzwv5bsglupnbavgsjuq4bpu​ ();
    internal TableCellFormatRevision ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Tracking.TableColumnCollectionRevision : Revision {
    [DebuggerBrowsableAttribute("0")]
private TableColumnCollection ;
    public TableColumnCollection Columns { get; }
    public TableColumnCollection get_Columns();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Tracking.TableFormatRevision : Revision {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    public TableFormat TableFormat { get; public set; }
    public TableFormatRevision(DocumentModel document);
    internal void (DocumentModel );
    public TableFormat get_TableFormat();
    public void set_TableFormat(TableFormat value);
    private sealed virtual override bool kjh59h4alfgkryjsxcwlnbtydzclwkka​ (Func`2<   , U> , U& );
    private sealed virtual override     kjh59h4alfgkryjsxcwlnbtydzclwkka​ ();
    private sealed virtual override void kjh59h4alfgkryjsxcwlnbtydzclwkka​ (    );
    private sealed virtual override  ​ <   > kjh59h4alfgkryjsxcwlnbtydzclwkka​ ();
    internal TableFormatRevision ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Tracking.TableRowFormatRevision : Revision {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    public TableRowFormat RowFormat { get; public set; }
    public TableRowFormatRevision(DocumentModel document);
    internal void (DocumentModel );
    public TableRowFormat get_RowFormat();
    public void set_RowFormat(TableRowFormat value);
    private sealed virtual override bool rmwrv7qfmrku8rt7ybfvekgj5hpljr92​ (Func`2<   , U> , U& );
    private sealed virtual override     rmwrv7qfmrku8rt7ybfvekgj5hpljr92​ ();
    private sealed virtual override void rmwrv7qfmrku8rt7ybfvekgj5hpljr92​ (    );
    private sealed virtual override  ​ <   > rmwrv7qfmrku8rt7ybfvekgj5hpljr92​ ();
    internal TableRowFormatRevision ();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.TxtLoadOptions : LoadOptions {
    [DebuggerBrowsableAttribute("0")]
private Encoding ;
    public Encoding Encoding { get; public set; }
    public Encoding get_Encoding();
    public void set_Encoding(Encoding value);
    internal virtual DocumentModel 7k4lmxmhj5tk8h83eglk6fss34tasuhn​ (Stream , string );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.TxtSaveOptions : SaveOptions {
    [DebuggerBrowsableAttribute("0")]
private Encoding ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    public string ContentType { get; }
    public Encoding Encoding { get; public set; }
    public string ParagraphBreak { get; public set; }
    public virtual string get_ContentType();
    internal virtual bool 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ ();
    public Encoding get_Encoding();
    public void set_Encoding(Encoding value);
    public string get_ParagraphBreak();
    public void set_ParagraphBreak(string value);
    internal virtual void 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ (DocumentModel , Stream , string );
}
public enum GemBox.Document.UnderlineType : Enum {
    public int value__;
    public static UnderlineType None;
    public static UnderlineType Single;
    public static UnderlineType Double;
    public static UnderlineType Dotted;
    public static UnderlineType Dashed;
    public static UnderlineType DotDash;
    public static UnderlineType DotDotDash;
    public static UnderlineType Wave;
    public static UnderlineType DoubleWave;
    public static UnderlineType UnderlineNonSpaceCharactersOnly;
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class GemBox.Document.VariablesDictionary : DictionaryBase`2<string, string> {
    internal VariablesDictionary(VariablesDictionary );
    protected virtual void ValidateBeforeAdd(string key, string value);
}
internal enum GemBox.Document.Vba.VbaDocumentEventType : Enum {
    public int value__;
    [XEnumAttribute("eventDocNew")]
public static VbaDocumentEventType New;
    [XEnumAttribute("eventDocOpen")]
public static VbaDocumentEventType Open;
    [XEnumAttribute("eventDocClose")]
public static VbaDocumentEventType Close;
    [XEnumAttribute("eventDocSync")]
public static VbaDocumentEventType Sync;
    [XEnumAttribute("eventDocXmlAfterInsert")]
public static VbaDocumentEventType XmlAfterInsert;
    [XEnumAttribute("eventDocXmlBeforeDelete")]
public static VbaDocumentEventType XmlBeforeDelete;
    [XEnumAttribute("eventDocContentControlAfterInsert")]
public static VbaDocumentEventType ContentControlAfterInsert;
    [XEnumAttribute("eventDocContentControlBeforeDelete")]
public static VbaDocumentEventType ContentControlBeforeDelete;
    [XEnumAttribute("eventDocContentControlOnExit")]
public static VbaDocumentEventType ContentControlOnExit;
    [XEnumAttribute("eventDocContentControlOnEnter")]
public static VbaDocumentEventType ContentControlOnEnter;
    [XEnumAttribute("eventDocStoreUpdate")]
public static VbaDocumentEventType StoreUpdate;
    [XEnumAttribute("eventDocContentControlContentUpdate")]
public static VbaDocumentEventType ContentControlContentUpdate;
    [XEnumAttribute("eventDocBuildingBlockAfterInsert")]
public static VbaDocumentEventType BuildingBlockAfterInsert;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Vba.VbaModule : object {
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    [DebuggerBrowsableAttribute("0")]
private     ;
    public string Name { get; public set; }
    [NullableAttribute("2")]
public string Code { get; public set; }
    public VbaModuleType Type { get; }
    internal VbaModule(DocumentModel ,     );
    internal DocumentModel ();
    internal     ();
    public string get_Name();
    public void set_Name(string value);
    [NullableContextAttribute("2")]
public string get_Code();
    [NullableContextAttribute("2")]
public void set_Code(string value);
    public VbaModuleType get_Type();
    internal static VbaModule (DocumentModel , string , string , VbaModuleType );
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[DefaultMemberAttribute("Item")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Vba.VbaModuleCollection : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
private DocumentModel ;
    public int Count { get; }
    public VbaModule Item { get; }
    public VbaModule Item { get; }
    [DebuggerBrowsableAttribute("0")]
[NullableAttribute("2")]
internal DocumentModel  { get; internal set; }
    internal VbaModuleCollection(    );
    internal     ();
    public int get_Count();
    private VbaModule (    , string , VbaModuleType );
    public VbaModule get_Item(int index);
    public VbaModule get_Item(string name);
    public VbaModule Add(string name);
    public void Clear();
    public bool Contains(string name);
    public sealed virtual IEnumerator`1<VbaModule> GetEnumerator();
    public void Remove(string name);
    public void Remove(VbaModule vbaModule);
    public void RemoveAt(int index);
    public bool TryGet(string name, VbaModule& vbaModule);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [NullableContextAttribute("2")]
internal DocumentModel ();
    [NullableContextAttribute("2")]
internal void (DocumentModel );
    public VbaModule Add(string name, VbaModuleType vbaModuleType);
    public VbaModule AddCopy(VbaModule vbaModule);
    [NullableContextAttribute("0")]
private VbaModule (    );
}
public enum GemBox.Document.Vba.VbaModuleType : Enum {
    public int value__;
    public static VbaModuleType Procedural;
    public static VbaModuleType Document;
    public static VbaModuleType Class;
    public static VbaModuleType Designer;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.Vba.VbaProject : object {
    [DebuggerBrowsableAttribute("0")]
private     ;
    [DebuggerBrowsableAttribute("0")]
private VbaModuleCollection ;
    [DebuggerBrowsableAttribute("0")]
private HashSet`1<VbaDocumentEventType> ;
    public VbaModuleCollection Modules { get; }
    public string Name { get; public set; }
    internal VbaProject(    );
    internal     ();
    [CompilerGeneratedAttribute]
public VbaModuleCollection get_Modules();
    public string get_Name();
    public void set_Name(string value);
    internal static VbaProject (string );
    internal HashSet`1<VbaDocumentEventType> ();
    internal VbaProject ();
}
public enum GemBox.Document.VerticalAlignment : Enum {
    public int value__;
    public static VerticalAlignment Top;
    public static VerticalAlignment Center;
    public static VerticalAlignment Bottom;
}
public class GemBox.Document.VerticalPosition : ValueType {
    [DebuggerBrowsableAttribute("0")]
private VerticalPositionAnchor ;
    [DebuggerBrowsableAttribute("0")]
private VerticalPositionType ;
    [DebuggerBrowsableAttribute("0")]
private double ;
    public VerticalPositionAnchor RelativeTo { get; }
    public VerticalPositionType PositionType { get; }
    public double Value { get; }
    [ObsoleteAttribute("Use any other constructor which accepts 'GemBox.Document.VerticalPositionAnchor' as parameter instead.")]
[EditorBrowsableAttribute("1")]
public VerticalPosition(double value, VerticalPositionType positionType);
    internal VerticalPosition(VerticalPositionAnchor , double , VerticalPositionType );
    public VerticalPosition(double absolutePosition, LengthUnit unit, VerticalPositionAnchor below);
    public VerticalPosition(VerticalPositionType alignment, VerticalPositionAnchor relativeTo);
    public VerticalPositionAnchor get_RelativeTo();
    public VerticalPositionType get_PositionType();
    public double get_Value();
    internal VerticalPosition (VerticalPositionAnchor );
    internal VerticalPosition (VerticalPosition );
    public sealed virtual bool Equals(VerticalPosition other);
    [NullableContextAttribute("1")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static bool op_Equality(VerticalPosition first, VerticalPosition second);
    public static bool op_Inequality(VerticalPosition first, VerticalPosition second);
}
public enum GemBox.Document.VerticalPositionAnchor : Enum {
    public int value__;
    public static VerticalPositionAnchor Margin;
    public static VerticalPositionAnchor Page;
    public static VerticalPositionAnchor Paragraph;
    public static VerticalPositionAnchor Line;
    public static VerticalPositionAnchor TopMargin;
    public static VerticalPositionAnchor BottomMargin;
    public static VerticalPositionAnchor InsideMargin;
    public static VerticalPositionAnchor OutsideMargin;
    public static VerticalPositionAnchor TopLeftCorner;
}
public enum GemBox.Document.VerticalPositionType : Enum {
    public int value__;
    public static VerticalPositionType Absolute;
    public static VerticalPositionType Top;
    public static VerticalPositionType Center;
    public static VerticalPositionType Bottom;
    public static VerticalPositionType Inside;
    public static VerticalPositionType Outside;
}
public class GemBox.Document.ViewOptions : object {
    [DebuggerBrowsableAttribute("0")]
private int ;
    [DebuggerBrowsableAttribute("0")]
private ViewType ;
    public ViewType ViewType { get; public set; }
    public int Zoom { get; public set; }
    [CompilerGeneratedAttribute]
public ViewType get_ViewType();
    [CompilerGeneratedAttribute]
public void set_ViewType(ViewType value);
    public int get_Zoom();
    public void set_Zoom(int value);
    [NullableContextAttribute("1")]
public ViewOptions Clone();
}
public enum GemBox.Document.ViewType : Enum {
    public int value__;
    public static ViewType None;
    public static ViewType Normal;
    public static ViewType MasterPages;
    public static ViewType Outline;
    public static ViewType Print;
    public static ViewType Web;
    public static ViewType FullScreen;
    public static ViewType Bookmarks;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class GemBox.Document.Watermark : object {
    [DebuggerBrowsableAttribute("0")]
private DocumentModel ;
    [DebuggerBrowsableAttribute("0")]
private HeaderFooter ;
    private protected DocumentModel ();
    private protected void (DocumentModel );
    internal HeaderFooter ();
    internal void (HeaderFooter );
    internal abstract virtual Shape mmyx33fhl4japg4ytmd3xrl4km39zecn​ ();
    internal void ();
    internal void ();
    internal static FloatingLayout (Size , bool );
    internal abstract virtual void mmyx33fhl4japg4ytmd3xrl4km39zecn​ ();
}
public enum GemBox.Document.WrapTextType : Enum {
    public int value__;
    public static WrapTextType Both;
    public static WrapTextType Left;
    public static WrapTextType Right;
    public static WrapTextType Largest;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class GemBox.Document.WriteProtection : object {
    [DebuggerBrowsableAttribute("0")]
private bool ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private object ;
    public bool ReadOnlyRecommended { get; public set; }
    public bool HasPassword { get; }
    [NullableContextAttribute("1")]
private WriteProtection(WriteProtection );
    [CompilerGeneratedAttribute]
public bool get_ReadOnlyRecommended();
    [CompilerGeneratedAttribute]
public void set_ReadOnlyRecommended(bool value);
    internal string ();
    internal void (string );
    internal string ();
    internal void (string );
    internal object ();
    internal void (object );
    public bool get_HasPassword();
    [NullableContextAttribute("1")]
public WriteProtection Clone();
    public void SetPassword(string password);
    [NullableContextAttribute("1")]
private void (string );
    [NullableContextAttribute("1")]
private static string (int );
    [NullableContextAttribute("1")]
private static Byte[] (Byte[] , Byte[] );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class GemBox.Document.XmlLoadOptions : LoadOptions {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private XmlType ;
    public string Password { get; public set; }
    public XmlType XmlType { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public XmlType get_XmlType();
    [CompilerGeneratedAttribute]
public void set_XmlType(XmlType value);
    internal virtual bool 7k4lmxmhj5tk8h83eglk6fss34tasuhn​ ();
    [NullableContextAttribute("1")]
internal virtual DocumentModel 7k4lmxmhj5tk8h83eglk6fss34tasuhn​ (Stream , string );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class GemBox.Document.XmlSaveOptions : SaveOptions {
    [DebuggerBrowsableAttribute("0")]
private string ;
    [DebuggerBrowsableAttribute("0")]
private int ;
    public string Password { get; public set; }
    public int ImageDpi { get; public set; }
    [NullableAttribute("1")]
public string ContentType { get; }
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public int get_ImageDpi();
    [CompilerGeneratedAttribute]
public void set_ImageDpi(int value);
    [NullableContextAttribute("1")]
internal virtual void 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ (DocumentModel , Stream , string );
    [NullableContextAttribute("1")]
public virtual string get_ContentType();
    internal virtual bool 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ ();
}
public enum GemBox.Document.XmlType : Enum {
    public int value__;
    public static XmlType FlatOPC;
    public static XmlType WordML;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GemBox.Document.XpsSaveOptions : SaveOptions {
    [DebuggerBrowsableAttribute("0")]
private double ;
    [DebuggerBrowsableAttribute("0")]
private RenderingMode ;
    public RenderingMode RenderingMode { get; public set; }
    public double MetafileScaleFactor { get; public set; }
    public string ContentType { get; }
    public RenderingMode get_RenderingMode();
    public void set_RenderingMode(RenderingMode value);
    private RenderingMode ();
    public double get_MetafileScaleFactor();
    public void set_MetafileScaleFactor(double value);
    public virtual string get_ContentType();
    internal virtual bool 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ ();
    internal virtual void 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ (DocumentModel , Stream , string );
    internal virtual void 67tg5rkvl9zwp8v7723mndgzuc3b4vj8​ (   , Stream , bool );
    private void (   , Stream );
    private void (   , Stream );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class GemBox.Drawing.FontStretches : object {
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<string,    > stretchMap;
    public static     UltraCondensed { get; }
    public static     ExtraCondensed { get; }
    public static     Condensed { get; }
    public static     SemiCondensed { get; }
    public static     Normal { get; }
    public static     Medium { get; }
    public static     SemiExpanded { get; }
    public static     Expanded { get; }
    public static     ExtraExpanded { get; }
    public static     UltraExpanded { get; }
    private static FontStretches();
    public static     get_UltraCondensed();
    public static     get_ExtraCondensed();
    public static     get_Condensed();
    public static     get_SemiCondensed();
    public static     get_Normal();
    public static     get_Medium();
    public static     get_SemiExpanded();
    public static     get_Expanded();
    public static     get_ExtraExpanded();
    public static     get_UltraExpanded();
    internal static bool TryParse(string s,    & value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class GemBox.Drawing.FontStyles : object {
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<string,    > styleMap;
    public static     Normal { get; }
    public static     Oblique { get; }
    public static     Italic { get; }
    private static FontStyles();
    public static     get_Normal();
    public static     get_Oblique();
    public static     get_Italic();
    internal static bool TryParse(string s,    & value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class GemBox.Drawing.FontWeights : object {
    [DebuggerBrowsableAttribute("0")]
private static Dictionary`2<string,    > weightMap;
    public static     Thin { get; }
    public static     ExtraLight { get; }
    public static     UltraLight { get; }
    public static     Light { get; }
    public static     Normal { get; }
    public static     Regular { get; }
    public static     Medium { get; }
    public static     DemiBold { get; }
    public static     SemiBold { get; }
    public static     Bold { get; }
    public static     ExtraBold { get; }
    public static     UltraBold { get; }
    public static     Black { get; }
    public static     Heavy { get; }
    public static     ExtraBlack { get; }
    public static     UltraBlack { get; }
    private static FontWeights();
    public static     get_Thin();
    public static     get_ExtraLight();
    public static     get_UltraLight();
    public static     get_Light();
    public static     get_Normal();
    public static     get_Regular();
    public static     get_Medium();
    public static     get_DemiBold();
    public static     get_SemiBold();
    public static     get_Bold();
    public static     get_ExtraBold();
    public static     get_UltraBold();
    public static     get_Black();
    public static     get_Heavy();
    public static     get_ExtraBlack();
    public static     get_UltraBlack();
    internal static bool TryParse(string s,    & value);
    internal static bool TryToString(int value, String& str);
}
internal enum GemBox.Drawing.Imaging.Png.PngChunkType : Enum {
    public int value__;
    [DescriptionAttribute("Image header")]
public static PngChunkType IHDR;
    [DescriptionAttribute("Palette")]
public static PngChunkType PLTE;
    [DescriptionAttribute("Image data")]
public static PngChunkType IDAT;
    [DescriptionAttribute("image trailer")]
public static PngChunkType IEND;
    [DescriptionAttribute("Transparency")]
public static PngChunkType tRNS;
    [DescriptionAttribute("Primary chromaticities and white point")]
public static PngChunkType cHRM;
    [DescriptionAttribute("Image gamma")]
public static PngChunkType gAMA;
    [DescriptionAttribute("Embedded ICC profile")]
public static PngChunkType iCCP;
    [DescriptionAttribute("Significant bits")]
public static PngChunkType sBIT;
    [DescriptionAttribute("Standard RGB colour space")]
public static PngChunkType sRGB;
    [DescriptionAttribute("International textual data")]
public static PngChunkType iTXt;
    [DescriptionAttribute("Textual data")]
public static PngChunkType tEXt;
    [DescriptionAttribute("Compressed textual data")]
public static PngChunkType zTXt;
    [DescriptionAttribute("Background colour")]
public static PngChunkType bKGD;
    [DescriptionAttribute("Image histogram")]
public static PngChunkType hIST;
    [DescriptionAttribute("Physical pixel dimensions")]
public static PngChunkType pHYs;
    [DescriptionAttribute("Suggested palette")]
public static PngChunkType sPLT;
    [DescriptionAttribute("Image last-modification time")]
public static PngChunkType tIME;
}
internal enum GemBox.Drawing.SystemColorName : Enum {
    public int value__;
    public static SystemColorName ActiveBorder;
    public static SystemColorName ActiveCaption;
    public static SystemColorName ActiveCaptionText;
    public static SystemColorName AppWorkspace;
    public static SystemColorName ButtonFace;
    public static SystemColorName ButtonHighlight;
    public static SystemColorName ButtonShadow;
    public static SystemColorName Control;
    public static SystemColorName ControlDark;
    public static SystemColorName ControlDarkDark;
    public static SystemColorName ControlLight;
    public static SystemColorName ControlLightLight;
    public static SystemColorName ControlText;
    public static SystemColorName Desktop;
    public static SystemColorName GradientActiveCaption;
    public static SystemColorName GradientInactiveCaption;
    public static SystemColorName GrayText;
    public static SystemColorName Highlight;
    public static SystemColorName HighlightText;
    public static SystemColorName HotTrack;
    public static SystemColorName InactiveBorder;
    public static SystemColorName InactiveCaption;
    public static SystemColorName InactiveCaptionText;
    public static SystemColorName Info;
    public static SystemColorName InfoText;
    public static SystemColorName Menu;
    public static SystemColorName MenuBar;
    public static SystemColorName MenuHighlight;
    public static SystemColorName MenuText;
    public static SystemColorName ScrollBar;
    public static SystemColorName Window;
    public static SystemColorName WindowFrame;
    public static SystemColorName WindowText;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.Drawing.Text.TypefaceCollectionDebugView`2 : object {
    private ICollection`1<TTypeface> collection;
    [DebuggerBrowsableAttribute("3")]
public TTypeface[] Items { get; }
    public TypefaceCollectionDebugView`2(ICollection`1<TTypeface> collection);
    public TTypeface[] get_Items();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.DrawingML.BlipEffectsData :    {
    public static Func`2<BlipEffectsData, Nullable`1<double>> AlphaModFixGet;
    public static Action`2<BlipEffectsData, Nullable`1<double>> AlphaModFixSet;
    public Nullable`1<double> alphaModFix;
    [CompilerGeneratedAttribute]
private object <Tag>k__BackingField;
    public Nullable`1<double> AlphaModFix { get; public set; }
    public object Tag { get; public set; }
    private static BlipEffectsData();
    public Nullable`1<double> get_AlphaModFix();
    public void set_AlphaModFix(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public object get_Tag();
    [CompilerGeneratedAttribute]
public void set_Tag(object value);
    public sealed virtual bool Equals(BlipEffectsData other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
internal enum GemBox.DrawingML.ColorDataName : Enum {
    public int value__;
    [XEnumAttribute("none")]
[   ("Empty", "0", "1")]
public static ColorDataName None;
    [XEnumAttribute("custom")]
[   ("Custom", "0", "1")]
public static ColorDataName Custom;
    [XEnumAttribute("transparent")]
[   ("Transparent", "0", "1")]
public static ColorDataName Transparent;
    [XEnumAttribute("aliceBlue")]
[   ("Alice Blue", "4293982463", "5")]
public static ColorDataName AliceBlue;
    [XEnumAttribute("antiqueWhite")]
[   ("Antique White", "4294634455", "5")]
public static ColorDataName AntiqueWhite;
    [XEnumAttribute("aqua")]
[XEnumAttribute("cyan")]
[   ("Aqua", "4278255615", "5")]
public static ColorDataName Aqua;
    [XEnumAttribute("aquamarine")]
[   ("Aquamarine", "4286578644", "5")]
public static ColorDataName Aquamarine;
    [XEnumAttribute("azure")]
[   ("Azure", "4293984255", "5")]
public static ColorDataName Azure;
    [XEnumAttribute("beige")]
[   ("Beige", "4294309340", "5")]
public static ColorDataName Beige;
    [XEnumAttribute("bisque")]
[   ("Bisque", "4294960324", "5")]
public static ColorDataName Bisque;
    [XEnumAttribute("black")]
[   ("Black", "4278190080", "5")]
public static ColorDataName Black;
    [XEnumAttribute("blanchedAlmond")]
[   ("Blanched Almond", "4294962125", "5")]
public static ColorDataName BlanchedAlmond;
    [XEnumAttribute("blue")]
[   ("Blue", "4278190335", "5")]
public static ColorDataName Blue;
    [XEnumAttribute("blueViolet")]
[   ("Blue Violet", "4287245282", "5")]
public static ColorDataName BlueViolet;
    [XEnumAttribute("brown")]
[   ("Brown", "4289014314", "5")]
public static ColorDataName Brown;
    [XEnumAttribute("burlyWood")]
[   ("Burly Wood", "4292786311", "5")]
public static ColorDataName BurlyWood;
    [XEnumAttribute("cadetBlue")]
[   ("Cadet Blue", "4284456608", "5")]
public static ColorDataName CadetBlue;
    [XEnumAttribute("chartreuse")]
[   ("Chartreuse", "4286578432", "5")]
public static ColorDataName Chartreuse;
    [XEnumAttribute("chocolate")]
[   ("Chocolate", "4291979550", "5")]
public static ColorDataName Chocolate;
    [XEnumAttribute("coral")]
[   ("Coral", "4294934352", "5")]
public static ColorDataName Coral;
    [XEnumAttribute("cornflowerBlue")]
[   ("Cornflower Blue", "4284782061", "5")]
public static ColorDataName CornflowerBlue;
    [XEnumAttribute("cornsilk")]
[   ("Cornsilk", "4294965468", "5")]
public static ColorDataName Cornsilk;
    [XEnumAttribute("crimson")]
[   ("Crimson", "4292613180", "5")]
public static ColorDataName Crimson;
    [XEnumAttribute("darkBlue")]
[XEnumAttribute("dkBlue")]
[   ("Dark Blue", "4278190219", "5")]
public static ColorDataName DarkBlue;
    [XEnumAttribute("darkCyan")]
[XEnumAttribute("dkCyan")]
[   ("Dark Cyan", "4278225803", "5")]
public static ColorDataName DarkCyan;
    [XEnumAttribute("darkGoldenrod")]
[XEnumAttribute("dkGoldenrod")]
[   ("Dark Goldenrod", "4290283019", "5")]
public static ColorDataName DarkGoldenrod;
    [XEnumAttribute("darkGray")]
[XEnumAttribute("darkGrey")]
[XEnumAttribute("dkGray")]
[XEnumAttribute("dkGrey")]
[   ("Dark Gray", "4289309097", "5")]
public static ColorDataName DarkGray;
    [XEnumAttribute("darkGreen")]
[XEnumAttribute("dkGreen")]
[   ("Dark Green", "4278215680", "5")]
public static ColorDataName DarkGreen;
    [XEnumAttribute("darkKhaki")]
[XEnumAttribute("dkKhaki")]
[   ("Dark Khaki", "4290623339", "5")]
public static ColorDataName DarkKhaki;
    [XEnumAttribute("darkMagenta")]
[XEnumAttribute("dkMagenta")]
[   ("Dark Magenta", "4287299723", "5")]
public static ColorDataName DarkMagenta;
    [XEnumAttribute("darkOliveGreen")]
[XEnumAttribute("dkOliveGreen")]
[   ("Dark Olive Green", "4283788079", "5")]
public static ColorDataName DarkOliveGreen;
    [XEnumAttribute("darkOrange")]
[XEnumAttribute("dkOrange")]
[   ("Dark Orange", "4294937600", "5")]
public static ColorDataName DarkOrange;
    [XEnumAttribute("darkOrchid")]
[XEnumAttribute("dkOrchid")]
[   ("Dark Orchid", "4288230092", "5")]
public static ColorDataName DarkOrchid;
    [XEnumAttribute("darkRed")]
[XEnumAttribute("dkRed")]
[   ("Dark Red", "4287299584", "5")]
public static ColorDataName DarkRed;
    [XEnumAttribute("darkSalmon")]
[XEnumAttribute("dkSalmon")]
[   ("Dark Salmon", "4293498490", "5")]
public static ColorDataName DarkSalmon;
    [XEnumAttribute("darkSeaGreen")]
[XEnumAttribute("dkSeaGreen")]
[   ("Dark Sea Green", "4287609999", "5")]
public static ColorDataName DarkSeaGreen;
    [XEnumAttribute("darkSlateBlue")]
[XEnumAttribute("dkSlateBlue")]
[   ("Dark Slate Blue", "4282924427", "5")]
public static ColorDataName DarkSlateBlue;
    [XEnumAttribute("darkSlateGray")]
[XEnumAttribute("darkSlateGrey")]
[XEnumAttribute("dkSlateGray")]
[XEnumAttribute("dkSlateGrey")]
[   ("Dark Slate Gray", "4281290575", "5")]
public static ColorDataName DarkSlateGray;
    [XEnumAttribute("darkTurquoise")]
[XEnumAttribute("dkTurquoise")]
[   ("Dark Turquoise", "4278243025", "5")]
public static ColorDataName DarkTurquoise;
    [XEnumAttribute("darkViolet")]
[XEnumAttribute("dkViolet")]
[   ("Dark Violet", "4287889619", "5")]
public static ColorDataName DarkViolet;
    [XEnumAttribute("deepPink")]
[   ("Deep Pink", "4294907027", "5")]
public static ColorDataName DeepPink;
    [XEnumAttribute("deepSkyBlue")]
[   ("Deep Sky Blue", "4278239231", "5")]
public static ColorDataName DeepSkyBlue;
    [XEnumAttribute("dimGray")]
[XEnumAttribute("dimGrey")]
[   ("Dim Gray", "4285098345", "5")]
public static ColorDataName DimGray;
    [XEnumAttribute("dodgerBlue")]
[   ("Dodger Blue", "4280193279", "5")]
public static ColorDataName DodgerBlue;
    [XEnumAttribute("firebrick")]
[   ("Firebrick", "4289864226", "5")]
public static ColorDataName Firebrick;
    [XEnumAttribute("floralWhite")]
[   ("Floral White", "4294966000", "5")]
public static ColorDataName FloralWhite;
    [XEnumAttribute("forestGreen")]
[   ("Forest Green", "4280453922", "5")]
public static ColorDataName ForestGreen;
    [XEnumAttribute("gainsboro")]
[   ("Gainsboro", "4292664540", "5")]
public static ColorDataName Gainsboro;
    [XEnumAttribute("ghostWhite")]
[   ("Ghost White", "4294506751", "5")]
public static ColorDataName GhostWhite;
    [XEnumAttribute("gold")]
[   ("Gold", "4294956800", "5")]
public static ColorDataName Gold;
    [XEnumAttribute("goldenrod")]
[   ("Goldenrod", "4292519200", "5")]
public static ColorDataName Goldenrod;
    [XEnumAttribute("gray")]
[XEnumAttribute("grey")]
[   ("Gray", "4286611584", "5")]
public static ColorDataName Gray;
    [XEnumAttribute("green")]
[   ("Green", "4278222848", "5")]
public static ColorDataName Green;
    [XEnumAttribute("greenYellow")]
[   ("Green Yellow", "4289593135", "5")]
public static ColorDataName GreenYellow;
    [XEnumAttribute("honeydew")]
[   ("Honeydew", "4293984240", "5")]
public static ColorDataName Honeydew;
    [XEnumAttribute("hotPink")]
[   ("Hot Pink", "4294928820", "5")]
public static ColorDataName HotPink;
    [XEnumAttribute("indianRed")]
[   ("Indian Red", "4291648604", "5")]
public static ColorDataName IndianRed;
    [XEnumAttribute("indigo")]
[   ("Indigo", "4283105410", "5")]
public static ColorDataName Indigo;
    [XEnumAttribute("ivory")]
[   ("Ivory", "4294967280", "5")]
public static ColorDataName Ivory;
    [XEnumAttribute("khaki")]
[   ("Khaki", "4293977740", "5")]
public static ColorDataName Khaki;
    [XEnumAttribute("lavender")]
[   ("Lavender", "4293322490", "5")]
public static ColorDataName Lavender;
    [XEnumAttribute("lavenderBlush")]
[   ("Lavender Blush", "4294963445", "5")]
public static ColorDataName LavenderBlush;
    [XEnumAttribute("lawnGreen")]
[   ("Lawn Green", "4286381056", "5")]
public static ColorDataName LawnGreen;
    [XEnumAttribute("lemonChiffon")]
[   ("Lemon Chiffon", "4294965965", "5")]
public static ColorDataName LemonChiffon;
    [XEnumAttribute("lightBlue")]
[XEnumAttribute("ltBlue")]
[   ("Light Blue", "4289583334", "5")]
public static ColorDataName LightBlue;
    [XEnumAttribute("lightCoral")]
[XEnumAttribute("ltCoral")]
[   ("Light Coral", "4293951616", "5")]
public static ColorDataName LightCoral;
    [XEnumAttribute("lightCyan")]
[XEnumAttribute("ltCyan")]
[   ("Light Cyan", "4292935679", "5")]
public static ColorDataName LightCyan;
    [XEnumAttribute("lightGoldenrodYellow")]
[XEnumAttribute("ltGoldenrodYellow")]
[   ("Light Goldenrod Yellow", "4294638290", "5")]
public static ColorDataName LightGoldenrodYellow;
    [XEnumAttribute("lightGray")]
[XEnumAttribute("lightGrey")]
[XEnumAttribute("ltGray")]
[XEnumAttribute("ltGrey")]
[   ("Light Gray", "4292072403", "5")]
public static ColorDataName LightGray;
    [XEnumAttribute("lightGreen")]
[XEnumAttribute("ltGreen")]
[   ("Light Green", "4287688336", "5")]
public static ColorDataName LightGreen;
    [XEnumAttribute("lightPink")]
[XEnumAttribute("ltPink")]
[   ("Light Pink", "4294948545", "5")]
public static ColorDataName LightPink;
    [XEnumAttribute("lightSalmon")]
[XEnumAttribute("ltSalmon")]
[   ("Light Salmon", "4294942842", "5")]
public static ColorDataName LightSalmon;
    [XEnumAttribute("lightSeaGreen")]
[XEnumAttribute("ltSeaGreen")]
[   ("Light Sea Green", "4280332970", "5")]
public static ColorDataName LightSeaGreen;
    [XEnumAttribute("lightSkyBlue")]
[XEnumAttribute("ltSkyBlue")]
[   ("Light Sky Blue", "4287090426", "5")]
public static ColorDataName LightSkyBlue;
    [XEnumAttribute("lightSlateGray")]
[XEnumAttribute("lightSlateGrey")]
[XEnumAttribute("ltSlateGray")]
[XEnumAttribute("ltSlateGrey")]
[   ("Light Slate Gray", "4286023833", "5")]
public static ColorDataName LightSlateGray;
    [XEnumAttribute("lightSteelBlue")]
[XEnumAttribute("ltSteelBlue")]
[   ("Light Steel Blue", "4289774814", "5")]
public static ColorDataName LightSteelBlue;
    [XEnumAttribute("lightYellow")]
[XEnumAttribute("ltYellow")]
[   ("Light Yellow", "4294967264", "5")]
public static ColorDataName LightYellow;
    [XEnumAttribute("lime")]
[   ("Lime", "4278255360", "5")]
public static ColorDataName Lime;
    [XEnumAttribute("limeGreen")]
[   ("Lime Green", "4281519410", "5")]
public static ColorDataName LimeGreen;
    [XEnumAttribute("linen")]
[   ("Linen", "4294635750", "5")]
public static ColorDataName Linen;
    [XEnumAttribute("magenta")]
[XEnumAttribute("fuchsia")]
[   ("Magenta", "4294902015", "5")]
public static ColorDataName Magenta;
    [XEnumAttribute("maroon")]
[   ("Maroon", "4286578688", "5")]
public static ColorDataName Maroon;
    [XEnumAttribute("mediumAquamarine")]
[XEnumAttribute("medAquamarine")]
[   ("Medium Aquamarine", "4284927402", "5")]
public static ColorDataName MediumAquamarine;
    [XEnumAttribute("mediumBlue")]
[XEnumAttribute("medBlue")]
[   ("Medium Blue", "4278190285", "5")]
public static ColorDataName MediumBlue;
    [XEnumAttribute("mediumOrchid")]
[XEnumAttribute("medOrchid")]
[   ("Medium Orchid", "4290401747", "5")]
public static ColorDataName MediumOrchid;
    [XEnumAttribute("mediumPurple")]
[XEnumAttribute("medPurple")]
[   ("Medium Purple", "4287852763", "5")]
public static ColorDataName MediumPurple;
    [XEnumAttribute("mediumSeaGreen")]
[XEnumAttribute("medSeaGreen")]
[   ("Medium Sea Green", "4282168177", "5")]
public static ColorDataName MediumSeaGreen;
    [XEnumAttribute("mediumSlateBlue")]
[XEnumAttribute("medSlateBlue")]
[   ("Medium Slate Blue", "4286277870", "5")]
public static ColorDataName MediumSlateBlue;
    [XEnumAttribute("mediumSpringGreen")]
[XEnumAttribute("medSpringGreen")]
[   ("Medium Spring Green", "4278254234", "5")]
public static ColorDataName MediumSpringGreen;
    [XEnumAttribute("mediumTurquoise")]
[XEnumAttribute("medTurquoise")]
[   ("Medium Turquoise", "4282962380", "5")]
public static ColorDataName MediumTurquoise;
    [XEnumAttribute("mediumVioletRed")]
[XEnumAttribute("medVioletRed")]
[   ("Medium Violet Red", "4291237253", "5")]
public static ColorDataName MediumVioletRed;
    [XEnumAttribute("midnightBlue")]
[   ("Midnight Blue", "4279834992", "5")]
public static ColorDataName MidnightBlue;
    [XEnumAttribute("mintCream")]
[   ("Mint Cream", "4294311930", "5")]
public static ColorDataName MintCream;
    [XEnumAttribute("mistyRose")]
[   ("Misty Rose", "4294960353", "5")]
public static ColorDataName MistyRose;
    [XEnumAttribute("moccasin")]
[   ("Moccasin", "4294960309", "5")]
public static ColorDataName Moccasin;
    [XEnumAttribute("navajoWhite")]
[   ("Navajo White", "4294958765", "5")]
public static ColorDataName NavajoWhite;
    [XEnumAttribute("navy")]
[   ("Navy", "4278190208", "5")]
public static ColorDataName Navy;
    [XEnumAttribute("oldLace")]
[   ("Old Lace", "4294833638", "5")]
public static ColorDataName OldLace;
    [XEnumAttribute("olive")]
[   ("Olive", "4286611456", "5")]
public static ColorDataName Olive;
    [XEnumAttribute("oliveDrab")]
[   ("Olive Drab", "4285238819", "5")]
public static ColorDataName OliveDrab;
    [XEnumAttribute("orange")]
[   ("Orange", "4294944000", "5")]
public static ColorDataName Orange;
    [XEnumAttribute("orangeRed")]
[   ("Orange Red", "4294919424", "5")]
public static ColorDataName OrangeRed;
    [XEnumAttribute("orchid")]
[   ("Orchid", "4292505814", "5")]
public static ColorDataName Orchid;
    [XEnumAttribute("paleGoldenrod")]
[   ("Pale Goldenrod", "4293847210", "5")]
public static ColorDataName PaleGoldenrod;
    [XEnumAttribute("paleGreen")]
[   ("Pale Green", "4288215960", "5")]
public static ColorDataName PaleGreen;
    [XEnumAttribute("paleTurquoise")]
[   ("Pale Turquoise", "4289720046", "5")]
public static ColorDataName PaleTurquoise;
    [XEnumAttribute("paleVioletRed")]
[   ("Pale Violet Red", "4292571283", "5")]
public static ColorDataName PaleVioletRed;
    [XEnumAttribute("papayaWhip")]
[   ("Papaya Whip", "4294963157", "5")]
public static ColorDataName PapayaWhip;
    [XEnumAttribute("peachPuff")]
[   ("Peach Puff", "4294957753", "5")]
public static ColorDataName PeachPuff;
    [XEnumAttribute("peru")]
[   ("Peru", "4291659071", "5")]
public static ColorDataName Peru;
    [XEnumAttribute("pink")]
[   ("Pink", "4294951115", "5")]
public static ColorDataName Pink;
    [XEnumAttribute("plum")]
[   ("Plum", "4292714717", "5")]
public static ColorDataName Plum;
    [XEnumAttribute("powderBlue")]
[   ("Powder Blue", "4289781990", "5")]
public static ColorDataName PowderBlue;
    [XEnumAttribute("purple")]
[   ("Purple", "4286578816", "5")]
public static ColorDataName Purple;
    [XEnumAttribute("red")]
[   ("Red", "4294901760", "5")]
public static ColorDataName Red;
    [XEnumAttribute("rosyBrown")]
[   ("Rosy Brown", "4290547599", "5")]
public static ColorDataName RosyBrown;
    [XEnumAttribute("royalBlue")]
[   ("Royal Blue", "4282477025", "5")]
public static ColorDataName RoyalBlue;
    [XEnumAttribute("saddleBrown")]
[   ("Saddle Brown", "4287317267", "5")]
public static ColorDataName SaddleBrown;
    [XEnumAttribute("salmon")]
[   ("Salmon", "4294606962", "5")]
public static ColorDataName Salmon;
    [XEnumAttribute("sandyBrown")]
[   ("Sandy Brown", "4294222944", "5")]
public static ColorDataName SandyBrown;
    [XEnumAttribute("seaGreen")]
[   ("Sea Green", "4281240407", "5")]
public static ColorDataName SeaGreen;
    [XEnumAttribute("seaShell")]
[   ("Sea Shell", "4294964718", "5")]
public static ColorDataName SeaShell;
    [XEnumAttribute("sienna")]
[   ("Sienna", "4288696877", "5")]
public static ColorDataName Sienna;
    [XEnumAttribute("silver")]
[   ("Silver", "4290822336", "5")]
public static ColorDataName Silver;
    [XEnumAttribute("skyBlue")]
[   ("Sky Blue", "4287090411", "5")]
public static ColorDataName SkyBlue;
    [XEnumAttribute("slateBlue")]
[   ("Slate Blue", "4285160141", "5")]
public static ColorDataName SlateBlue;
    [XEnumAttribute("slateGray")]
[XEnumAttribute("slateGrey")]
[   ("Slate Gray", "4285563024", "5")]
public static ColorDataName SlateGray;
    [XEnumAttribute("snow")]
[   ("Snow", "4294966010", "5")]
public static ColorDataName Snow;
    [XEnumAttribute("springGreen")]
[   ("Spring Green", "4278255487", "5")]
public static ColorDataName SpringGreen;
    [XEnumAttribute("steelBlue")]
[   ("Steel Blue", "4282811060", "5")]
public static ColorDataName SteelBlue;
    [XEnumAttribute("tan")]
[   ("Tan", "4291998860", "5")]
public static ColorDataName Tan;
    [XEnumAttribute("teal")]
[   ("Teal", "4278222976", "5")]
public static ColorDataName Teal;
    [XEnumAttribute("thistle")]
[   ("Thistle", "4292394968", "5")]
public static ColorDataName Thistle;
    [XEnumAttribute("tomato")]
[   ("Tomato", "4294927175", "5")]
public static ColorDataName Tomato;
    [XEnumAttribute("turquoise")]
[   ("Turquoise", "4282441936", "5")]
public static ColorDataName Turquoise;
    [XEnumAttribute("violet")]
[   ("Violet", "4293821166", "5")]
public static ColorDataName Violet;
    [XEnumAttribute("wheat")]
[   ("Wheat", "4294303411", "5")]
public static ColorDataName Wheat;
    [XEnumAttribute("white")]
[   ("White", "4294967295", "5")]
public static ColorDataName White;
    [XEnumAttribute("whiteSmoke")]
[   ("White Smoke", "4294309365", "5")]
public static ColorDataName WhiteSmoke;
    [XEnumAttribute("yellow")]
[   ("Yellow", "4294967040", "5")]
public static ColorDataName Yellow;
    [XEnumAttribute("yellowGreen")]
[   ("Yellow Green", "4288335154", "5")]
public static ColorDataName YellowGreen;
    [XEnumAttribute("phClr")]
[   ("Style", "4279383126", "4")]
public static ColorDataName ThemeStyle;
    [XEnumAttribute("dk1")]
[   ("Dark 1", "4278190080", "4")]
public static ColorDataName ThemeDark1;
    [XEnumAttribute("lt1")]
[   ("Light 1", "4294967295", "4")]
public static ColorDataName ThemeLight1;
    [XEnumAttribute("dk2")]
[   ("Dark 2", "4280240509", "4")]
public static ColorDataName ThemeDark2;
    [XEnumAttribute("lt2")]
[   ("Light 2", "4293848289", "4")]
public static ColorDataName ThemeLight2;
    [XEnumAttribute("accent1")]
[   ("Accent 1", "4283400637", "4")]
public static ColorDataName ThemeAccent1;
    [XEnumAttribute("accent2")]
[   ("Accent 2", "4290793549", "4")]
public static ColorDataName ThemeAccent2;
    [XEnumAttribute("accent3")]
[   ("Accent 3", "4288396121", "4")]
public static ColorDataName ThemeAccent3;
    [XEnumAttribute("accent4")]
[   ("Accent 4", "4286604450", "4")]
public static ColorDataName ThemeAccent4;
    [XEnumAttribute("accent5")]
[   ("Accent 5", "4283149510", "4")]
public static ColorDataName ThemeAccent5;
    [XEnumAttribute("accent6")]
[   ("Accent 6", "4294415942", "4")]
public static ColorDataName ThemeAccent6;
    [XEnumAttribute("hlink")]
[   ("Hyperlink", "4278190335", "4")]
public static ColorDataName ThemeHyperlink;
    [XEnumAttribute("folHlink")]
[   ("Followed Hyperlink", "4286578816", "4")]
public static ColorDataName ThemeFollowedHyperlink;
    [XEnumAttribute("bg1")]
[   ("Background 1", "4294967295", "4")]
public static ColorDataName ThemeBackground1;
    [XEnumAttribute("tx1")]
[   ("Text 1", "4278190080", "4")]
public static ColorDataName ThemeText1;
    [XEnumAttribute("bg2")]
[   ("Background 2", "4293848289", "4")]
public static ColorDataName ThemeBackground2;
    [XEnumAttribute("tx2")]
[   ("Text 2", "4280240509", "4")]
public static ColorDataName ThemeText2;
    [XEnumAttribute("3dDkShadow")]
[   ("3D Dark", "4285098345", "3")]
public static ColorDataName System3DDark;
    [XEnumAttribute("3dLight")]
[   ("3D Light", "4293125091", "3")]
public static ColorDataName System3DLight;
    [XEnumAttribute("activeBorder")]
[   ("Active Border", "4290032820", "3")]
public static ColorDataName SystemActiveBorder;
    [XEnumAttribute("activeCaption")]
[   ("Active Caption", "4288263377", "3")]
public static ColorDataName SystemActiveCaption;
    [XEnumAttribute("appWorkspace")]
[   ("Application Workspace", "4289440683", "3")]
public static ColorDataName SystemApplicationWorkspace;
    [XEnumAttribute("background")]
[   ("Background", "4278190080", "3")]
public static ColorDataName SystemBackground;
    [XEnumAttribute("btnFace")]
[   ("Button Face", "4293980400", "3")]
public static ColorDataName SystemButtonFace;
    [XEnumAttribute("btnHighlight")]
[   ("Button Highlight", "4294967295", "3")]
public static ColorDataName SystemButtonHighlight;
    [XEnumAttribute("btnShadow")]
[   ("Button Shadow", "4288716960", "3")]
public static ColorDataName SystemButtonShadow;
    [XEnumAttribute("btnText")]
[   ("Button Text", "4278190080", "3")]
public static ColorDataName SystemButtonText;
    [XEnumAttribute("captionText")]
[   ("Caption Text", "4278190080", "3")]
public static ColorDataName SystemCaptionText;
    [XEnumAttribute("gradientActiveCaption")]
[   ("Gradient Active Caption", "4290367978", "3")]
public static ColorDataName SystemGradientActiveCaption;
    [XEnumAttribute("gradientInactiveCaption")]
[   ("Gradient Inactive Caption", "4292338930", "3")]
public static ColorDataName SystemGradientInactiveCaption;
    [XEnumAttribute("grayText")]
[   ("Gray Text", "4285361517", "3")]
public static ColorDataName SystemGrayText;
    [XEnumAttribute("highlight")]
[   ("Highlight", "4281571839", "3")]
public static ColorDataName SystemHighlight;
    [XEnumAttribute("highlightText")]
[   ("Highlight Text", "4294967295", "3")]
public static ColorDataName SystemHighlightText;
    [XEnumAttribute("hotLight")]
[   ("Hot Light", "4278216396", "3")]
public static ColorDataName SystemHotLight;
    [XEnumAttribute("inactiveBorder")]
[   ("Inactive Border", "4294244348", "3")]
public static ColorDataName SystemInactiveBorder;
    [XEnumAttribute("inactiveCaption")]
[   ("Inactive Caption", "4290760155", "3")]
public static ColorDataName SystemInactiveCaption;
    [XEnumAttribute("inactiveCaptionText")]
[   ("Inactive Caption Text", "4282601044", "3")]
public static ColorDataName SystemInactiveCaptionText;
    [XEnumAttribute("infoBk")]
[   ("Info Back", "4294967265", "3")]
public static ColorDataName SystemInfoBack;
    [XEnumAttribute("infoText")]
[   ("Info Text", "4278190080", "3")]
public static ColorDataName SystemInfoText;
    [XEnumAttribute("menu")]
[   ("Menu", "4293980400", "3")]
public static ColorDataName SystemMenu;
    [XEnumAttribute("menuBar")]
[   ("Menu Bar", "4293980400", "3")]
public static ColorDataName SystemMenuBar;
    [XEnumAttribute("menuHighlight")]
[   ("Menu Highlight", "4281571839", "3")]
public static ColorDataName SystemMenuHighlight;
    [XEnumAttribute("menuText")]
[   ("Menu Text", "4278190080", "3")]
public static ColorDataName SystemMenuText;
    [XEnumAttribute("scrollBar")]
[   ("Scroll Bar", "4291348680", "3")]
public static ColorDataName SystemScrollBar;
    [XEnumAttribute("window")]
[   ("Window", "4294967295", "3")]
public static ColorDataName SystemWindow;
    [XEnumAttribute("windowFrame")]
[   ("Window Frame", "4284769380", "3")]
public static ColorDataName SystemWindowFrame;
    [XEnumAttribute("windowText")]
[   ("Window Text", "4278190080", "3")]
public static ColorDataName SystemWindowText;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.DrawingML.GradientFillFormatData :     {
    public static Func`2<GradientFillFormatData, Nullable`1<>> GradientTypeGet;
    public static Action`2<GradientFillFormatData, Nullable`1<>> GradientTypeSet;
    public static Func`2<GradientFillFormatData, Nullable`1<bool>> RotateWithShapeGet;
    public static Action`2<GradientFillFormatData, Nullable`1<bool>> RotateWithShapeSet;
    public static Func`2<GradientFillFormatData, Nullable`1<double>> AngleGet;
    public static Action`2<GradientFillFormatData, Nullable`1<double>> AngleSet;
    public static Func`2<GradientFillFormatData, Nullable`1<bool>> ScaledGet;
    public static Action`2<GradientFillFormatData, Nullable`1<bool>> ScaledSet;
    public static Func`2<GradientFillFormatData,   <   >> StopsGet;
    public static Action`2<GradientFillFormatData,   <   >> StopsSet;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<> flip;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> rotateWithShape;
    [DebuggerBrowsableAttribute("0")]
private   <   > stops;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<> gradientType;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double> angle;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> scaled;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   > fillRectangle;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   > tileRectangle;
    public  FillDataType { get; }
    public Nullable`1<> Flip { get; public set; }
    public Nullable`1<bool> RotateWithShape { get; public set; }
    public   <   > Stops { get; public set; }
    public Nullable`1<> GradientType { get; public set; }
    public Nullable`1<double> Angle { get; public set; }
    public Nullable`1<bool> Scaled { get; public set; }
    public Nullable`1<   > FillRectangle { get; public set; }
    public Nullable`1<   > TileRectangle { get; public set; }
    private static GradientFillFormatData();
    public virtual  get_FillDataType();
    public Nullable`1<> get_Flip();
    public void set_Flip(Nullable`1<> value);
    public Nullable`1<bool> get_RotateWithShape();
    public void set_RotateWithShape(Nullable`1<bool> value);
    public   <   > get_Stops();
    public void set_Stops(  <   > value);
    public Nullable`1<> get_GradientType();
    public void set_GradientType(Nullable`1<> value);
    public Nullable`1<double> get_Angle();
    public void set_Angle(Nullable`1<double> value);
    public Nullable`1<bool> get_Scaled();
    public void set_Scaled(Nullable`1<bool> value);
    public Nullable`1<   > get_FillRectangle();
    public void set_FillRectangle(Nullable`1<   > value);
    public Nullable`1<   > get_TileRectangle();
    public void set_TileRectangle(Nullable`1<   > value);
    public virtual bool Equals(    other);
    public sealed virtual bool Equals(GradientFillFormatData other);
    public virtual int GetHashCode();
    protected virtual void FreezeMutableFields(object context);
    protected virtual void CloneMutableFields();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.DrawingML.LineFormatData :    {
    public static Func`2<LineFormatData, Nullable`1<long>> WidthGet;
    public static Action`2<LineFormatData, Nullable`1<long>> WidthSet;
    public static Func`2<LineFormatData, Nullable`1<>> CapTypeGet;
    public static Action`2<LineFormatData, Nullable`1<>> CapTypeSet;
    public static Func`2<LineFormatData, Nullable`1<>> CompoundTypeGet;
    public static Action`2<LineFormatData, Nullable`1<>> CompoundTypeSet;
    public static Func`2<LineFormatData, Nullable`1<>> PenAlignmentGet;
    public static Action`2<LineFormatData, Nullable`1<>> PenAlignmentSet;
    public static Func`2<LineFormatData, Nullable`1<>> DashTypeGet;
    public static Action`2<LineFormatData, Nullable`1<>> DashTypeSet;
    public static Func`2<LineFormatData,   <   >> DashesGet;
    public static Action`2<LineFormatData,   <   >> DashesSet;
    public static Func`2<LineFormatData, Nullable`1<>> JoinTypeGet;
    public static Action`2<LineFormatData, Nullable`1<>> JoinTypeSet;
    public static Func`2<LineFormatData, Nullable`1<double>> MiterJoinLimitGet;
    public static Action`2<LineFormatData, Nullable`1<double>> MiterJoinLimitSet;
    public static Func`2<LineFormatData, Nullable`1<   >> BeginArrowGet;
    public static Func`2<LineFormatData, Nullable`1<   >> EndArrowGet;
    public static Action`2<LineFormatData, Nullable`1<   >> BeginArrowSet;
    public static Action`2<LineFormatData, Nullable`1<   >> EndArrowSet;
    public static Func`2<LineFormatData,    > FillGet;
    public static Action`2<LineFormatData,    > FillSet;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<long> width;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<> capType;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<> compoundType;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<> penAlignment;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<> dashType;
    [DebuggerBrowsableAttribute("0")]
private   <   > dashes;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<> joinType;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double> miterJoinLimit;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   > beginArrow;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   > endArrow;
    [DebuggerBrowsableAttribute("0")]
private     fill;
    public Nullable`1<long> Width { get; public set; }
    public Nullable`1<> CapType { get; public set; }
    public Nullable`1<> CompoundType { get; public set; }
    public Nullable`1<> PenAlignment { get; public set; }
    public Nullable`1<> DashType { get; public set; }
    public   <   > Dashes { get; public set; }
    public Nullable`1<> JoinType { get; public set; }
    public Nullable`1<double> MiterJoinLimit { get; public set; }
    public Nullable`1<   > BeginArrow { get; public set; }
    public Nullable`1<   > EndArrow { get; public set; }
    public     Fill { get; public set; }
    private static LineFormatData();
    public Nullable`1<long> get_Width();
    public void set_Width(Nullable`1<long> value);
    public Nullable`1<> get_CapType();
    public void set_CapType(Nullable`1<> value);
    public Nullable`1<> get_CompoundType();
    public void set_CompoundType(Nullable`1<> value);
    public Nullable`1<> get_PenAlignment();
    public void set_PenAlignment(Nullable`1<> value);
    public Nullable`1<> get_DashType();
    public void set_DashType(Nullable`1<> value);
    public   <   > get_Dashes();
    public void set_Dashes(  <   > value);
    public Nullable`1<> get_JoinType();
    public void set_JoinType(Nullable`1<> value);
    public Nullable`1<double> get_MiterJoinLimit();
    public void set_MiterJoinLimit(Nullable`1<double> value);
    public Nullable`1<   > get_BeginArrow();
    public void set_BeginArrow(Nullable`1<   > value);
    public Nullable`1<   > get_EndArrow();
    public void set_EndArrow(Nullable`1<   > value);
    public     get_Fill();
    public void set_Fill(    value);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(LineFormatData other);
    public virtual int GetHashCode();
    protected virtual void FreezeMutableFields(object context);
    protected virtual void CloneMutableFields();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.DrawingML.PatternFillFormatData :     {
    public static Func`2<PatternFillFormatData, Nullable`1<>> PatternTypeGet;
    public static Action`2<PatternFillFormatData, Nullable`1<>> PatternTypeSet;
    public static Func`2<PatternFillFormatData,    > ForegroundColorGet;
    public static Func`2<PatternFillFormatData,    > BackgroundColorGet;
    public static Action`2<PatternFillFormatData,    > ForegroundColorSet;
    public static Action`2<PatternFillFormatData,    > BackgroundColorSet;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<> patternType;
    [DebuggerBrowsableAttribute("0")]
private     foregroundColor;
    [DebuggerBrowsableAttribute("0")]
private     backgroundColor;
    public  FillDataType { get; }
    public Nullable`1<> PatternType { get; public set; }
    public     ForegroundColor { get; public set; }
    public     BackgroundColor { get; public set; }
    private static PatternFillFormatData();
    public virtual  get_FillDataType();
    public Nullable`1<> get_PatternType();
    public void set_PatternType(Nullable`1<> value);
    public     get_ForegroundColor();
    public void set_ForegroundColor(    value);
    public     get_BackgroundColor();
    public void set_BackgroundColor(    value);
    public virtual bool Equals(    other);
    public sealed virtual bool Equals(PatternFillFormatData other);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.DrawingML.PictureFillFormatData :     {
    public static Func`2<PictureFillFormatData,    > PictureContentGet;
    public static Action`2<PictureFillFormatData,    > PictureContentSet;
    public static Func`2<PictureFillFormatData, Nullable`1<int>> DpiGet;
    public static Action`2<PictureFillFormatData, Nullable`1<int>> DpiSet;
    public static Func`2<PictureFillFormatData, Nullable`1<bool>> RotateWithShapeGet;
    public static Action`2<PictureFillFormatData, Nullable`1<bool>> RotateWithShapeSet;
    public static Func`2<PictureFillFormatData, Nullable`1<bool>> TileAsTextureGet;
    public static Action`2<PictureFillFormatData, Nullable`1<bool>> TileAsTextureSet;
    public static Action`2<PictureFillFormatData, Nullable`1<double>> StretchLeftSet;
    public static Action`2<PictureFillFormatData, Nullable`1<double>> StretchRightSet;
    public static Action`2<PictureFillFormatData, Nullable`1<double>> StretchTopSet;
    public static Action`2<PictureFillFormatData, Nullable`1<double>> StretchBottomSet;
    public static Action`2<PictureFillFormatData, Nullable`1<double>> TilingOffsetXSet;
    public static Action`2<PictureFillFormatData, Nullable`1<double>> TilingScaleXSet;
    public static Action`2<PictureFillFormatData, Nullable`1<double>> TilingOffsetYSet;
    public static Action`2<PictureFillFormatData, Nullable`1<double>> TilingScaleYSet;
    public static Action`2<PictureFillFormatData, Nullable`1<>> TilingAlignmentSet;
    public static Action`2<PictureFillFormatData, Nullable`1<>> TilingMirrorTypeSet;
    public static Func`2<PictureFillFormatData, Nullable`1<   >> SourceRectangleGet;
    public static Action`2<PictureFillFormatData, Nullable`1<   >> SourceRectangleSet;
    public static Action`2<PictureFillFormatData,    > SetSourceRectangle;
    [DebuggerBrowsableAttribute("0")]
private     pictureContent;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<int> dpi;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> rotateWithShape;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   > srcRect;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> tileAsTexture;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double> stretchLeft;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double> stretchRight;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double> stretchTop;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double> stretchBottom;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double> tilingOffsetX;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double> tilingScaleX;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double> tilingOffsetY;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double> tilingScaleY;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<> tilingAlignment;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<> tilingMirrorType;
    [CompilerGeneratedAttribute]
private string <Xml>k__BackingField;
    internal string Xml { get; internal set; }
    public  FillDataType { get; }
    public     PictureContent { get; public set; }
    public Nullable`1<int> Dpi { get; public set; }
    public Nullable`1<bool> RotateWithShape { get; public set; }
    public Nullable`1<   > SourceRectangle { get; public set; }
    public Nullable`1<bool> TileAsTexture { get; public set; }
    public Nullable`1<double> StretchLeft { get; public set; }
    public Nullable`1<double> StretchRight { get; public set; }
    public Nullable`1<double> StretchTop { get; public set; }
    public Nullable`1<double> StretchBottom { get; public set; }
    public Nullable`1<double> TilingOffsetX { get; public set; }
    public Nullable`1<double> TilingScaleX { get; public set; }
    public Nullable`1<double> TilingOffsetY { get; public set; }
    public Nullable`1<double> TilingScaleY { get; public set; }
    public Nullable`1<> TilingAlignment { get; public set; }
    public Nullable`1<> TilingMirrorType { get; public set; }
    private static PictureFillFormatData();
    [CompilerGeneratedAttribute]
internal string get_Xml();
    [CompilerGeneratedAttribute]
internal void set_Xml(string value);
    public virtual  get_FillDataType();
    public     get_PictureContent();
    public void set_PictureContent(    value);
    public Nullable`1<int> get_Dpi();
    public void set_Dpi(Nullable`1<int> value);
    public Nullable`1<bool> get_RotateWithShape();
    public void set_RotateWithShape(Nullable`1<bool> value);
    public Nullable`1<   > get_SourceRectangle();
    public void set_SourceRectangle(Nullable`1<   > value);
    public Nullable`1<bool> get_TileAsTexture();
    public void set_TileAsTexture(Nullable`1<bool> value);
    public Nullable`1<double> get_StretchLeft();
    public void set_StretchLeft(Nullable`1<double> value);
    public Nullable`1<double> get_StretchRight();
    public void set_StretchRight(Nullable`1<double> value);
    public Nullable`1<double> get_StretchTop();
    public void set_StretchTop(Nullable`1<double> value);
    public Nullable`1<double> get_StretchBottom();
    public void set_StretchBottom(Nullable`1<double> value);
    public Nullable`1<double> get_TilingOffsetX();
    public void set_TilingOffsetX(Nullable`1<double> value);
    public Nullable`1<double> get_TilingScaleX();
    public void set_TilingScaleX(Nullable`1<double> value);
    public Nullable`1<double> get_TilingOffsetY();
    public void set_TilingOffsetY(Nullable`1<double> value);
    public Nullable`1<double> get_TilingScaleY();
    public void set_TilingScaleY(Nullable`1<double> value);
    public Nullable`1<> get_TilingAlignment();
    public void set_TilingAlignment(Nullable`1<> value);
    public Nullable`1<> get_TilingMirrorType();
    public void set_TilingMirrorType(Nullable`1<> value);
    public virtual bool Equals(    other);
    public sealed virtual bool Equals(PictureFillFormatData other);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.DrawingML.SolidFillFormatData :     {
    public static Func`2<SolidFillFormatData,    > ColorGet;
    public static Action`2<SolidFillFormatData,    > ColorSet;
    [DebuggerBrowsableAttribute("0")]
private     color;
    public  FillDataType { get; }
    public     Color { get; public set; }
    private static SolidFillFormatData();
    public virtual  get_FillDataType();
    public     get_Color();
    public void set_Color(    value);
    public virtual bool Equals(    other);
    public sealed virtual bool Equals(SolidFillFormatData other);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.DrawingML.TextFormatData :    {
    public static Func`2<TextFormatData, Nullable`1<   >> LatinFontGet;
    public static Func`2<TextFormatData, Nullable`1<   >> EastAsianFontGet;
    public static Func`2<TextFormatData, Nullable`1<   >> ComplexScriptFontGet;
    public static Func`2<TextFormatData, Nullable`1<   >> SymbolFontGet;
    public static Func`2<TextFormatData, string> FontGet;
    public static Func`2<TextFormatData, string> LanguageGet;
    public static Action`2<TextFormatData, string> FontSet;
    public static Func`2<TextFormatData, Nullable`1<bool>> BoldGet;
    public static Func`2<TextFormatData, Nullable`1<bool>> ItalicGet;
    public static Func`2<TextFormatData, Nullable`1<bool>> NormalizeHeightsGet;
    public static Action`2<TextFormatData, Nullable`1<bool>> BoldSet;
    public static Action`2<TextFormatData, Nullable`1<bool>> ItalicSet;
    public static Action`2<TextFormatData, Nullable`1<bool>> NormalizeHeightsSet;
    public static Func`2<TextFormatData, Nullable`1<long>> SizeGet;
    public static Func`2<TextFormatData, Nullable`1<long>> SpacingGet;
    public static Func`2<TextFormatData, Nullable`1<long>> KerningGet;
    public static Action`2<TextFormatData, Nullable`1<long>> SizeSet;
    public static Action`2<TextFormatData, Nullable`1<long>> SpacingSet;
    public static Action`2<TextFormatData, Nullable`1<long>> KerningSet;
    public static Func`2<TextFormatData, Nullable`1<>> UnderlineGet;
    public static Action`2<TextFormatData, Nullable`1<>> UnderlineSet;
    public static Func`2<TextFormatData, Nullable`1<>> StrikethroughGet;
    public static Action`2<TextFormatData, Nullable`1<>> StrikethroughSet;
    public static Func`2<TextFormatData, Nullable`1<double>> BaselineGet;
    public static Action`2<TextFormatData, Nullable`1<double>> BaselineSet;
    public static Func`2<TextFormatData, Nullable`1<>> CapitalizationGet;
    public static Action`2<TextFormatData, Nullable`1<>> CapitalizationSet;
    public static Func`2<TextFormatData,    > FillGet;
    public static Action`2<TextFormatData,    > FillSet;
    public static Action`2<TextFormatData,    > UnderlineFillSet;
    public static Func`2<TextFormatData, LineFormatData> OutlineGet;
    public static Action`2<TextFormatData, LineFormatData> OutlineSet;
    public static Func`2<TextFormatData,    > HighlightColorGet;
    public static Action`2<TextFormatData,    > HighlightColorSet;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   > latinFont;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   > eastAsianFont;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   > complexScriptFont;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<   > symbolFont;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> bold;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> italic;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> normalizeHeights;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> dirty;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> spellingError;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> kumimoji;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> noProofing;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> smartTagClean;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> rightToLeft;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> underlineFillFollowText;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> underlineStrokeFollowText;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<long> size;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<long> spacing;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<long> kerning;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<> underline;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<> strikethrough;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<double> baseline;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<> capitalization;
    [DebuggerBrowsableAttribute("0")]
private string alternativeLanguage;
    [DebuggerBrowsableAttribute("0")]
private string language;
    [DebuggerBrowsableAttribute("0")]
private Nullable`1<UInt32> smartTagId;
    [DebuggerBrowsableAttribute("0")]
private     highlight;
    [DebuggerBrowsableAttribute("0")]
private     fill;
    [DebuggerBrowsableAttribute("0")]
private     underlineFill;
    [DebuggerBrowsableAttribute("0")]
private LineFormatData outline;
    [DebuggerBrowsableAttribute("0")]
private LineFormatData underlineStroke;
    [CompilerGeneratedAttribute]
private object <Tag>k__BackingField;
    public object Tag { get; public set; }
    public Nullable`1<   > LatinFont { get; public set; }
    public Nullable`1<   > EastAsianFont { get; public set; }
    public Nullable`1<   > ComplexScriptFont { get; public set; }
    public Nullable`1<   > SymbolFont { get; public set; }
    public string Font { get; public set; }
    public Nullable`1<bool> Bold { get; public set; }
    public Nullable`1<bool> Italic { get; public set; }
    public Nullable`1<long> Size { get; public set; }
    public Nullable`1<> Underline { get; public set; }
    public Nullable`1<> Strikethrough { get; public set; }
    public Nullable`1<double> Baseline { get; public set; }
    public Nullable`1<> Capitalization { get; public set; }
    public Nullable`1<bool> NormalizeHeights { get; public set; }
    public Nullable`1<long> Spacing { get; public set; }
    public Nullable`1<long> Kerning { get; public set; }
    public string AlternativeLanguage { get; public set; }
    public Nullable`1<bool> Dirty { get; public set; }
    public Nullable`1<bool> SpellingError { get; public set; }
    public Nullable`1<bool> Kumimoji { get; public set; }
    public string Language { get; public set; }
    public Nullable`1<bool> NoProofing { get; public set; }
    public Nullable`1<bool> SmartTagClean { get; public set; }
    public Nullable`1<UInt32> SmartTagId { get; public set; }
    public     Highlight { get; public set; }
    public Nullable`1<bool> RightToLeft { get; public set; }
    public     Fill { get; public set; }
    public     UnderlineFill { get; public set; }
    public LineFormatData Outline { get; public set; }
    public LineFormatData UnderlineStroke { get; public set; }
    public Nullable`1<bool> UnderlineFillFollowText { get; public set; }
    public Nullable`1<bool> UnderlineStrokeFollowText { get; public set; }
    private static TextFormatData();
    [CompilerGeneratedAttribute]
public object get_Tag();
    [CompilerGeneratedAttribute]
public void set_Tag(object value);
    public Nullable`1<   > get_LatinFont();
    public void set_LatinFont(Nullable`1<   > value);
    public Nullable`1<   > get_EastAsianFont();
    public void set_EastAsianFont(Nullable`1<   > value);
    public Nullable`1<   > get_ComplexScriptFont();
    public void set_ComplexScriptFont(Nullable`1<   > value);
    public Nullable`1<   > get_SymbolFont();
    public void set_SymbolFont(Nullable`1<   > value);
    public string get_Font();
    public void set_Font(string value);
    public Nullable`1<bool> get_Bold();
    public void set_Bold(Nullable`1<bool> value);
    public Nullable`1<bool> get_Italic();
    public void set_Italic(Nullable`1<bool> value);
    public Nullable`1<long> get_Size();
    public void set_Size(Nullable`1<long> value);
    public Nullable`1<> get_Underline();
    public void set_Underline(Nullable`1<> value);
    public Nullable`1<> get_Strikethrough();
    public void set_Strikethrough(Nullable`1<> value);
    public Nullable`1<double> get_Baseline();
    public void set_Baseline(Nullable`1<double> value);
    public Nullable`1<> get_Capitalization();
    public void set_Capitalization(Nullable`1<> value);
    public Nullable`1<bool> get_NormalizeHeights();
    public void set_NormalizeHeights(Nullable`1<bool> value);
    public Nullable`1<long> get_Spacing();
    public void set_Spacing(Nullable`1<long> value);
    public Nullable`1<long> get_Kerning();
    public void set_Kerning(Nullable`1<long> value);
    public string get_AlternativeLanguage();
    public void set_AlternativeLanguage(string value);
    public Nullable`1<bool> get_Dirty();
    public void set_Dirty(Nullable`1<bool> value);
    public Nullable`1<bool> get_SpellingError();
    public void set_SpellingError(Nullable`1<bool> value);
    public Nullable`1<bool> get_Kumimoji();
    public void set_Kumimoji(Nullable`1<bool> value);
    public string get_Language();
    public void set_Language(string value);
    public Nullable`1<bool> get_NoProofing();
    public void set_NoProofing(Nullable`1<bool> value);
    public Nullable`1<bool> get_SmartTagClean();
    public void set_SmartTagClean(Nullable`1<bool> value);
    public Nullable`1<UInt32> get_SmartTagId();
    public void set_SmartTagId(Nullable`1<UInt32> value);
    public     get_Highlight();
    public void set_Highlight(    value);
    public Nullable`1<bool> get_RightToLeft();
    public void set_RightToLeft(Nullable`1<bool> value);
    public     get_Fill();
    public void set_Fill(    value);
    public     get_UnderlineFill();
    public void set_UnderlineFill(    value);
    public     GetUnderlineFill(Func`1<   > fillResolver);
    public LineFormatData get_Outline();
    public void set_Outline(LineFormatData value);
    public LineFormatData get_UnderlineStroke();
    public void set_UnderlineStroke(LineFormatData value);
    public Nullable`1<bool> get_UnderlineFillFollowText();
    public void set_UnderlineFillFollowText(Nullable`1<bool> value);
    public Nullable`1<bool> get_UnderlineStrokeFollowText();
    public void set_UnderlineStrokeFollowText(Nullable`1<bool> value);
    protected virtual void FreezeMutableFields(object context);
    protected virtual void CloneMutableFields();
    public virtual bool Equals(object other);
    public sealed virtual bool Equals(TextFormatData other);
    public virtual int GetHashCode();
}
internal enum GemBox.Pdf.Annotations.PdfMarkupAnnotationIntent : Enum {
    public int value__;
    [   ("")]
public static PdfMarkupAnnotationIntent Unknown;
    [   ("FreeText")]
public static PdfMarkupAnnotationIntent TextBox;
    [   ("FreeTextCallout")]
public static PdfMarkupAnnotationIntent TextCallout;
    [   ("FreeTextTypeWriter")]
public static PdfMarkupAnnotationIntent TextComment;
    public static PdfMarkupAnnotationIntent Line;
    public static PdfMarkupAnnotationIntent LineArrow;
    public static PdfMarkupAnnotationIntent LineDimension;
    public static PdfMarkupAnnotationIntent Polygon;
    public static PdfMarkupAnnotationIntent PolygonCloud;
    public static PdfMarkupAnnotationIntent PolygonDimension;
    public static PdfMarkupAnnotationIntent PolyLine;
    public static PdfMarkupAnnotationIntent PolyLineDimension;
    public static PdfMarkupAnnotationIntent Underline;
    [   ("StrikeOut")]
public static PdfMarkupAnnotationIntent CrossOut;
    [   ("StrikeOutTextEdit")]
public static PdfMarkupAnnotationIntent CrossOutTextEdit;
    public static PdfMarkupAnnotationIntent Caret;
    [   ("Replace")]
public static PdfMarkupAnnotationIntent CaretReplace;
    public static PdfMarkupAnnotationIntent Stamp;
    public static PdfMarkupAnnotationIntent StampSnapshot;
    public static PdfMarkupAnnotationIntent StampImage;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.Pdf.Content.PdfBasicContentOperandListDebugView : object {
    private     operands;
    [DebuggerBrowsableAttribute("3")]
public ​  [] Items { get; }
    public PdfBasicContentOperandListDebugView(    operands);
    public ​  [] get_Items();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.Pdf.Content.PdfContentElementCollectionDebugView : object {
    private     collection;
    [DebuggerBrowsableAttribute("3")]
public    [] Items { get; }
    public PdfContentElementCollectionDebugView(    collection);
    public    [] get_Items();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.Pdf.Content.PdfTextGlyphCollectionDebugView : object {
    private     collection;
    [DebuggerBrowsableAttribute("3")]
public    [] Items { get; }
    public PdfTextGlyphCollectionDebugView(    collection);
    public    [] get_Items();
}
internal enum GemBox.Pdf.Content.Text.PdfStandardFontName : Enum {
    public int value__;
    [   ("")]
public static PdfStandardFontName Unknown;
    [   ("Times-Roman")]
[   ("GemBox.Pdf.Resources.Core14_AFMs.zip", "Times-Roman.afm")]
public static PdfStandardFontName TimesRoman;
    [   ("Times-Bold")]
[   ("GemBox.Pdf.Resources.Core14_AFMs.zip", "Times-Bold.afm")]
public static PdfStandardFontName TimesBold;
    [   ("Times-Italic")]
[   ("GemBox.Pdf.Resources.Core14_AFMs.zip", "Times-Italic.afm")]
public static PdfStandardFontName TimesItalic;
    [   ("Times-BoldItalic")]
[   ("GemBox.Pdf.Resources.Core14_AFMs.zip", "Times-BoldItalic.afm")]
public static PdfStandardFontName TimesBoldItalic;
    [   ("GemBox.Pdf.Resources.Core14_AFMs.zip", "Helvetica.afm")]
public static PdfStandardFontName Helvetica;
    [   ("Helvetica-Bold")]
[   ("GemBox.Pdf.Resources.Core14_AFMs.zip", "Helvetica-Bold.afm")]
public static PdfStandardFontName HelveticaBold;
    [   ("Helvetica-Oblique")]
[   ("GemBox.Pdf.Resources.Core14_AFMs.zip", "Helvetica-Oblique.afm")]
public static PdfStandardFontName HelveticaOblique;
    [   ("Helvetica-BoldOblique")]
[   ("GemBox.Pdf.Resources.Core14_AFMs.zip", "Helvetica-BoldOblique.afm")]
public static PdfStandardFontName HelveticaBoldOblique;
    [   ("GemBox.Pdf.Resources.Core14_AFMs.zip", "Courier.afm")]
public static PdfStandardFontName Courier;
    [   ("Courier-Bold")]
[   ("GemBox.Pdf.Resources.Core14_AFMs.zip", "Courier-Bold.afm")]
public static PdfStandardFontName CourierBold;
    [   ("Courier-Oblique")]
[   ("GemBox.Pdf.Resources.Core14_AFMs.zip", "Courier-Oblique.afm")]
public static PdfStandardFontName CourierOblique;
    [   ("Courier-BoldOblique")]
[   ("GemBox.Pdf.Resources.Core14_AFMs.zip", "Courier-BoldOblique.afm")]
public static PdfStandardFontName CourierBoldOblique;
    [   ("GemBox.Pdf.Resources.Core14_AFMs.zip", "Symbol.afm")]
public static PdfStandardFontName Symbol;
    [   ("GemBox.Pdf.Resources.Core14_AFMs.zip", "ZapfDingbats.afm")]
public static PdfStandardFontName ZapfDingbats;
}
[NullableContextAttribute("1")]
internal interface GemBox.Pdf.Functions.IPdfPostScriptContext {
    public     Data { get; }
    public abstract virtual     get_Data();
    public abstract virtual void LoadInputs();
    public abstract virtual void SaveToOutputs();
    public abstract virtual void Unknown();
    public abstract virtual void Number(double value);
    public abstract virtual void Expression(Action`1[] actions);
    public abstract virtual void Add();
    public abstract virtual void Sub();
    public abstract virtual void Mul();
    public abstract virtual void Div();
    public abstract virtual void Idiv();
    public abstract virtual void Mod();
    public abstract virtual void Neg();
    public abstract virtual void Abs();
    public abstract virtual void Ceiling();
    public abstract virtual void Floor();
    public abstract virtual void Round();
    public abstract virtual void Truncate();
    public abstract virtual void Sqrt();
    public abstract virtual void Sin();
    public abstract virtual void Cos();
    public abstract virtual void Atan();
    public abstract virtual void Exp();
    public abstract virtual void Ln();
    public abstract virtual void Log();
    public abstract virtual void Cvi();
    public abstract virtual void Cvr();
    public abstract virtual void Eq();
    public abstract virtual void Ne();
    public abstract virtual void Gt();
    public abstract virtual void Ge();
    public abstract virtual void Lt();
    public abstract virtual void Le();
    public abstract virtual void And();
    public abstract virtual void Or();
    public abstract virtual void Xor();
    public abstract virtual void Not();
    public abstract virtual void Bitshift();
    public abstract virtual void True();
    public abstract virtual void False();
    public abstract virtual void If(Action`1<IPdfPostScriptContext> trueCase);
    public abstract virtual void Ifelse(Action`1<IPdfPostScriptContext> trueCase, Action`1<IPdfPostScriptContext> falseCase);
    public abstract virtual void Pop();
    public abstract virtual void Exch();
    public abstract virtual void Dup();
    public abstract virtual void Copy();
    public abstract virtual void Index();
    public abstract virtual void Roll();
}
internal enum GemBox.Pdf.Functions.PdfPostScriptCalculatorErrorType : Enum {
    public int value__;
    public static PdfPostScriptCalculatorErrorType Unknown;
    public static PdfPostScriptCalculatorErrorType rangecheck;
    public static PdfPostScriptCalculatorErrorType stackoverflow;
    public static PdfPostScriptCalculatorErrorType stackunderflow;
    public static PdfPostScriptCalculatorErrorType syntaxerror;
    public static PdfPostScriptCalculatorErrorType typecheck;
    public static PdfPostScriptCalculatorErrorType undefinedresult;
    public static PdfPostScriptCalculatorErrorType unregistered;
}
internal enum GemBox.Pdf.Functions.PdfPostScriptCalculatorOperator : Enum {
    public int value__;
    [   ("")]
public static PdfPostScriptCalculatorOperator Unknown;
    [   ("")]
public static PdfPostScriptCalculatorOperator Number;
    [   ("")]
public static PdfPostScriptCalculatorOperator Expression;
    public static PdfPostScriptCalculatorOperator add;
    public static PdfPostScriptCalculatorOperator sub;
    public static PdfPostScriptCalculatorOperator mul;
    public static PdfPostScriptCalculatorOperator div;
    public static PdfPostScriptCalculatorOperator idiv;
    public static PdfPostScriptCalculatorOperator mod;
    public static PdfPostScriptCalculatorOperator neg;
    public static PdfPostScriptCalculatorOperator abs;
    public static PdfPostScriptCalculatorOperator ceiling;
    public static PdfPostScriptCalculatorOperator floor;
    public static PdfPostScriptCalculatorOperator round;
    public static PdfPostScriptCalculatorOperator truncate;
    public static PdfPostScriptCalculatorOperator sqrt;
    public static PdfPostScriptCalculatorOperator sin;
    public static PdfPostScriptCalculatorOperator cos;
    public static PdfPostScriptCalculatorOperator atan;
    public static PdfPostScriptCalculatorOperator exp;
    public static PdfPostScriptCalculatorOperator ln;
    public static PdfPostScriptCalculatorOperator log;
    public static PdfPostScriptCalculatorOperator cvi;
    public static PdfPostScriptCalculatorOperator cvr;
    public static PdfPostScriptCalculatorOperator eq;
    public static PdfPostScriptCalculatorOperator ne;
    public static PdfPostScriptCalculatorOperator gt;
    public static PdfPostScriptCalculatorOperator ge;
    public static PdfPostScriptCalculatorOperator lt;
    public static PdfPostScriptCalculatorOperator le;
    public static PdfPostScriptCalculatorOperator and;
    public static PdfPostScriptCalculatorOperator or;
    public static PdfPostScriptCalculatorOperator xor;
    public static PdfPostScriptCalculatorOperator not;
    public static PdfPostScriptCalculatorOperator bitshift;
    public static PdfPostScriptCalculatorOperator true;
    public static PdfPostScriptCalculatorOperator false;
    public static PdfPostScriptCalculatorOperator if;
    public static PdfPostScriptCalculatorOperator ifelse;
    public static PdfPostScriptCalculatorOperator pop;
    public static PdfPostScriptCalculatorOperator exch;
    public static PdfPostScriptCalculatorOperator dup;
    public static PdfPostScriptCalculatorOperator copy;
    public static PdfPostScriptCalculatorOperator index;
    public static PdfPostScriptCalculatorOperator roll;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.Pdf.Objects.PdfArrayDebugView : object {
    private ​   array;
    [DebuggerBrowsableAttribute("3")]
public ​  [] Items { get; }
    public PdfArrayDebugView(​   array);
    public ​  [] get_Items();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.Pdf.Objects.PdfDictionaryDebugView : object {
    private  dictionary;
    [DebuggerBrowsableAttribute("3")]
public ​  [] Items { get; }
    public PdfDictionaryDebugView( dictionary);
    public ​  [] get_Items();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.Pdf.Objects.PdfIndirectObjectDebugView : object {
    private ​   indirect;
    [NullableAttribute("2")]
public ​   Value { get; }
    public PdfIndirectObjectDebugView(​   indirect);
    [NullableContextAttribute("2")]
public ​   get_Value();
}
[DebuggerDisplayAttribute("{state} Data")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.Pdf.Objects.PdfStreamDataDebugView : object {
    [DebuggerBrowsableAttribute("0")]
private ​   stream;
    [DebuggerBrowsableAttribute("0")]
private  state;
    [DebuggerBrowsableAttribute("0")]
private    value;
    [DebuggerBrowsableAttribute("0")]
private    Value { get; }
    public DebuggerByteArray DebuggerItems { get; }
    public string Text { get; }
    public PdfStreamDataDebugView(​   stream,  state);
    private    get_Value();
    public DebuggerByteArray get_DebuggerItems();
    public string get_Text();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.Pdf.Objects.PdfStreamDebugView : object {
    private ​   stream;
    public  Dictionary { get; }
    public int Length { get; }
    public     Filters { get; }
    public PdfStreamDataDebugView Data { get; }
    public PdfStreamDataDebugView DecodedData { get; }
    public PdfStreamDebugView(​   stream);
    public  get_Dictionary();
    public int get_Length();
    public     get_Filters();
    public PdfStreamDataDebugView get_Data();
    public PdfStreamDataDebugView get_DecodedData();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.Pdf.PdfCollectionDebugView`1 : object {
    private    <T> collection;
    [DebuggerBrowsableAttribute("3")]
public T[] Items { get; }
    public PdfCollectionDebugView`1(   <T> collection);
    public T[] get_Items();
}
[AttributeUsageAttribute("256")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.Xml.XEnumAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsFallback>k__BackingField;
    public string Value { get; }
    public bool IsFallback { get; public set; }
    public XEnumAttribute(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public bool get_IsFallback();
    [CompilerGeneratedAttribute]
public void set_IsFallback(bool value);
}
[AttributeUsageAttribute("28")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GemBox.Xml.XTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <Serializer>k__BackingField;
    public Type Serializer { get; }
    public XTypeAttribute(Type serializer);
    [CompilerGeneratedAttribute]
public Type get_Serializer();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("192")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("192")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[AttributeUsageAttribute("10368")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsByRefLikeAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[AttributeUsageAttribute("27524")]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte A_1);
    public NullableAttribute(Byte[] A_1);
}
[CompilerGeneratedAttribute]
[AttributeUsageAttribute("5196")]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte A_1);
}
