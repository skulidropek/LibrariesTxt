[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GitHubActionsTestLogger.GitHubWorkflow : object {
    [CompilerGeneratedAttribute]
private TextWriter <commandWriter>P;
    [CompilerGeneratedAttribute]
private TextWriter <summaryWriter>P;
    [CompilerGeneratedAttribute]
private static GitHubWorkflow <Default>k__BackingField;
    public static GitHubWorkflow Default { get; }
    public GitHubWorkflow(TextWriter commandWriter, TextWriter summaryWriter);
    private static GitHubWorkflow();
    private void InvokeCommand(string command, string message, IReadOnlyDictionary`2<string, string> options);
    public void CreateErrorAnnotation(string title, string message, string filePath, Nullable`1<int> line, Nullable`1<int> column);
    public void CreateSummary(string content);
    [CompilerGeneratedAttribute]
public static GitHubWorkflow get_Default();
    public static string TryGenerateFilePermalink(string filePath, Nullable`1<int> line);
    [CompilerGeneratedAttribute]
internal static string <InvokeCommand>g__Escape|3_0(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[FriendlyNameAttribute("GitHubActions")]
[ExtensionUriAttribute("logger://tyrrrz/ghactions/v2")]
public class GitHubActionsTestLogger.TestLogger : object {
    [CompilerGeneratedAttribute]
private TestLoggerContext <Context>k__BackingField;
    public TestLoggerContext Context { get; private set; }
    [CompilerGeneratedAttribute]
public TestLoggerContext get_Context();
    [CompilerGeneratedAttribute]
private void set_Context(TestLoggerContext value);
    [NullableContextAttribute("1")]
private void Initialize(TestLoggerEvents events, TestLoggerOptions options);
    [NullableContextAttribute("1")]
public sealed virtual void Initialize(TestLoggerEvents events, string testRunDirectory);
    [NullableContextAttribute("1")]
public sealed virtual void Initialize(TestLoggerEvents events, Dictionary`2<string, string> parameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GitHubActionsTestLogger.TestLoggerContext : object {
    [CompilerGeneratedAttribute]
private GitHubWorkflow <github>P;
    private object _lock;
    [NullableAttribute("2")]
private TestRunCriteria _testRunCriteria;
    private List`1<TestResult> _testResults;
    [CompilerGeneratedAttribute]
private TestLoggerOptions <Options>k__BackingField;
    public TestLoggerOptions Options { get; }
    public TestLoggerContext(GitHubWorkflow github, TestLoggerOptions options);
    [CompilerGeneratedAttribute]
public TestLoggerOptions get_Options();
    private string FormatAnnotation(string format, TestResult testResult);
    private string FormatAnnotationTitle(TestResult testResult);
    private string FormatAnnotationMessage(TestResult testResult);
    public void HandleTestRunStart(TestRunStartEventArgs args);
    public void HandleTestResult(TestResultEventArgs args);
    public void HandleTestRunComplete(TestRunCompleteEventArgs args);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <HandleTestRunComplete>b__13_0(TestResult r);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GitHubActionsTestLogger.TestLoggerOptions : object {
    [CompilerGeneratedAttribute]
private string <AnnotationTitleFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AnnotationMessageFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SummaryIncludePassedTests>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SummaryIncludeSkippedTests>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SummaryIncludeNotFoundTests>k__BackingField;
    [CompilerGeneratedAttribute]
private static TestLoggerOptions <Default>k__BackingField;
    public string AnnotationTitleFormat { get; public set; }
    public string AnnotationMessageFormat { get; public set; }
    public bool SummaryIncludePassedTests { get; public set; }
    public bool SummaryIncludeSkippedTests { get; public set; }
    public bool SummaryIncludeNotFoundTests { get; public set; }
    public static TestLoggerOptions Default { get; }
    private static TestLoggerOptions();
    [CompilerGeneratedAttribute]
public string get_AnnotationTitleFormat();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AnnotationTitleFormat(string value);
    [CompilerGeneratedAttribute]
public string get_AnnotationMessageFormat();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AnnotationMessageFormat(string value);
    [CompilerGeneratedAttribute]
public bool get_SummaryIncludePassedTests();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SummaryIncludePassedTests(bool value);
    [CompilerGeneratedAttribute]
public bool get_SummaryIncludeSkippedTests();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SummaryIncludeSkippedTests(bool value);
    [CompilerGeneratedAttribute]
public bool get_SummaryIncludeNotFoundTests();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SummaryIncludeNotFoundTests(bool value);
    [CompilerGeneratedAttribute]
public static TestLoggerOptions get_Default();
    public static TestLoggerOptions Resolve(IReadOnlyDictionary`2<string, string> parameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GitHubActionsTestLogger.TestRunStatistics : object {
    [CompilerGeneratedAttribute]
private int <PassedTestCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <FailedTestCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SkippedTestCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalTestCount>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <OverallDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private TestOutcome <OverallOutcome>k__BackingField;
    [CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public int PassedTestCount { get; public set; }
    public int FailedTestCount { get; public set; }
    public int SkippedTestCount { get; public set; }
    public int TotalTestCount { get; public set; }
    public TimeSpan OverallDuration { get; public set; }
    public TestOutcome OverallOutcome { get; }
    public TestRunStatistics(int PassedTestCount, int FailedTestCount, int SkippedTestCount, int TotalTestCount, TimeSpan OverallDuration);
    [CompilerGeneratedAttribute]
protected TestRunStatistics(TestRunStatistics original);
    [CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public int get_PassedTestCount();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PassedTestCount(int value);
    [CompilerGeneratedAttribute]
public int get_FailedTestCount();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FailedTestCount(int value);
    [CompilerGeneratedAttribute]
public int get_SkippedTestCount();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SkippedTestCount(int value);
    [CompilerGeneratedAttribute]
public int get_TotalTestCount();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TotalTestCount(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_OverallDuration();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_OverallDuration(TimeSpan value);
    [CompilerGeneratedAttribute]
public TestOutcome get_OverallOutcome();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(TestRunStatistics left, TestRunStatistics right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(TestRunStatistics left, TestRunStatistics right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(TestRunStatistics other);
    [CompilerGeneratedAttribute]
public virtual TestRunStatistics <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(Int32& PassedTestCount, Int32& FailedTestCount, Int32& SkippedTestCount, Int32& TotalTestCount, TimeSpan& OverallDuration);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
internal class GitHubActionsTestLogger.TestSummaryTemplate : HtmlTemplate {
    [CompilerGeneratedAttribute]
private string <TestSuite>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetFramework>k__BackingField;
    [CompilerGeneratedAttribute]
private TestRunStatistics <TestRunStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<TestResult> <TestResults>k__BackingField;
    [RequiredMemberAttribute]
public string TestSuite { get; public set; }
    [RequiredMemberAttribute]
public string TargetFramework { get; public set; }
    [RequiredMemberAttribute]
public TestRunStatistics TestRunStatistics { get; public set; }
    [RequiredMemberAttribute]
public IReadOnlyList`1<TestResult> TestResults { get; public set; }
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("GitHubActionsTestLogger.TestSummaryTemplate/<ExecuteAsync>d__0")]
protected virtual Task ExecuteAsync();
    [CompilerGeneratedAttribute]
public string get_TestSuite();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TestSuite(string value);
    [CompilerGeneratedAttribute]
public string get_TargetFramework();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TargetFramework(string value);
    [CompilerGeneratedAttribute]
public TestRunStatistics get_TestRunStatistics();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TestRunStatistics(TestRunStatistics value);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<TestResult> get_TestResults();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TestResults(IReadOnlyList`1<TestResult> value);
    [NullableContextAttribute("2")]
public void WriteLiteral(string literal);
    private void WriteMarkdown(String[] lines);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GitHubActionsTestLogger.Utils.ContentionTolerantWriteFileStream : Stream {
    [CompilerGeneratedAttribute]
private string <filePath>P;
    [CompilerGeneratedAttribute]
private FileMode <fileMode>P;
    private List`1<byte> _buffer;
    [CompilerGeneratedAttribute]
private long <Position>k__BackingField;
    [ExcludeFromCodeCoverageAttribute]
public bool CanRead { get; }
    [ExcludeFromCodeCoverageAttribute]
public bool CanSeek { get; }
    [ExcludeFromCodeCoverageAttribute]
public bool CanWrite { get; }
    [ExcludeFromCodeCoverageAttribute]
public long Length { get; }
    [ExcludeFromCodeCoverageAttribute]
public long Position { get; public set; }
    public ContentionTolerantWriteFileStream(string filePath, FileMode fileMode);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    [CompilerGeneratedAttribute]
public virtual long get_Position();
    [CompilerGeneratedAttribute]
public virtual void set_Position(long value);
    private FileStream CreateInnerStream();
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual void Flush();
    [ExcludeFromCodeCoverageAttribute]
protected virtual void Dispose(bool disposing);
    [ExcludeFromCodeCoverageAttribute]
public virtual int Read(Byte[] buffer, int offset, int count);
    [ExcludeFromCodeCoverageAttribute]
public virtual long Seek(long offset, SeekOrigin origin);
    [ExcludeFromCodeCoverageAttribute]
public virtual void SetLength(long value);
}
[ExtensionAttribute]
internal static class GitHubActionsTestLogger.Utils.Extensions.GenericExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static TOut Pipe(TIn input, Func`2<TIn, TOut> transform);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class GitHubActionsTestLogger.Utils.Extensions.StringExtensions : object {
    [ExtensionAttribute]
public static string SubstringUntil(string str, string sub, StringComparison comparison);
    [ExtensionAttribute]
public static string SubstringUntilLast(string str, string sub, StringComparison comparison);
    [ExtensionAttribute]
public static string SubstringAfter(string str, string sub, StringComparison comparison);
    [ExtensionAttribute]
public static string SubstringAfterLast(string str, string sub, StringComparison comparison);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static Nullable`1<int> TryParseInt(string str);
    [ExtensionAttribute]
public static StringBuilder Trim(StringBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class GitHubActionsTestLogger.Utils.Extensions.TestCaseExtensions : object {
    [ExtensionAttribute]
public static string GetTypeFullyQualifiedName(TestCase testCase);
    [ExtensionAttribute]
public static string GetTypeMinimallyQualifiedName(TestCase testCase);
    [ExtensionAttribute]
public static string GetMinimallyQualifiedName(TestCase testCase);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class GitHubActionsTestLogger.Utils.Extensions.TestResultExtensions : object {
    [ExtensionAttribute]
private static StackFrame TryGetTestStackFrame(TestResult testResult);
    [ExtensionAttribute]
public static string TryGetSourceFilePath(TestResult testResult);
    [ExtensionAttribute]
public static Nullable`1<int> TryGetSourceLine(TestResult testResult);
}
[ExtensionAttribute]
internal static class GitHubActionsTestLogger.Utils.Extensions.TestRunCriteriaExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static string TryGetTargetFramework(TestRunCriteria testRunCriteria);
}
[ExtensionAttribute]
internal static class GitHubActionsTestLogger.Utils.Extensions.TimeSpanExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static string ToHumanString(TimeSpan timeSpan);
}
internal static class GitHubActionsTestLogger.Utils.PathEx : object {
    private static StringComparison PathStringComparison;
    private static PathEx();
    [NullableContextAttribute("1")]
public static string GetRelativePath(string basePath, string path);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class GitHubActionsTestLogger.Utils.RandomEx : object {
    [CompilerGeneratedAttribute]
private static Random <Shared>k__BackingField;
    public static Random Shared { get; }
    private static RandomEx();
    [CompilerGeneratedAttribute]
public static Random get_Shared();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GitHubActionsTestLogger.Utils.StackFrame : object {
    [CompilerGeneratedAttribute]
private string <MethodCall>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <FilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Line>k__BackingField;
    private static string Space;
    private static string NotSpace;
    private static Regex Pattern;
    public string MethodCall { get; }
    [NullableAttribute("2")]
public string FilePath { get; }
    public Nullable`1<int> Line { get; }
    public StackFrame(string methodCall, string filePath, Nullable`1<int> line);
    private static StackFrame();
    [CompilerGeneratedAttribute]
public string get_MethodCall();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_FilePath();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Line();
    public static IEnumerable`1<StackFrame> ParseMany(string text);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class PolyfillExtensions : object {
    [AsyncStateMachineAttribute("PolyfillExtensions/<GetStreamAsync>d__0")]
[ExtensionAttribute]
public static Task`1<Stream> GetStreamAsync(HttpClient httpClient, string requestUri, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("PolyfillExtensions/<GetStreamAsync>d__1")]
[ExtensionAttribute]
public static Task`1<Stream> GetStreamAsync(HttpClient httpClient, Uri requestUri, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("PolyfillExtensions/<GetByteArrayAsync>d__2")]
[ExtensionAttribute]
public static Task`1<Byte[]> GetByteArrayAsync(HttpClient httpClient, string requestUri, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("PolyfillExtensions/<GetByteArrayAsync>d__3")]
[ExtensionAttribute]
public static Task`1<Byte[]> GetByteArrayAsync(HttpClient httpClient, Uri requestUri, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("PolyfillExtensions/<GetStringAsync>d__4")]
[ExtensionAttribute]
public static Task`1<string> GetStringAsync(HttpClient httpClient, string requestUri, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("PolyfillExtensions/<GetStringAsync>d__5")]
[ExtensionAttribute]
public static Task`1<string> GetStringAsync(HttpClient httpClient, Uri requestUri, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("PolyfillExtensions/<ReadAsStreamAsync>d__6")]
[ExtensionAttribute]
public static Task`1<Stream> ReadAsStreamAsync(HttpContent httpContent, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("PolyfillExtensions/<ReadAsByteArrayAsync>d__7")]
[ExtensionAttribute]
public static Task`1<Byte[]> ReadAsByteArrayAsync(HttpContent httpContent, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("PolyfillExtensions/<ReadAsStringAsync>d__8")]
[ExtensionAttribute]
public static Task`1<string> ReadAsStringAsync(HttpContent httpContent, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("PolyfillExtensions/<WaitForExitAsync>d__9")]
[ExtensionAttribute]
public static Task WaitForExitAsync(Process process, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static bool IsAssignableTo(Type type, Type otherType);
    [ExtensionAttribute]
public static string ReplaceLineEndings(string str, string replacementText);
    [ExtensionAttribute]
public static string ReplaceLineEndings(string str);
    [AsyncStateMachineAttribute("PolyfillExtensions/<WaitAsync>d__13")]
[ExtensionAttribute]
public static Task WaitAsync(Task task, TimeSpan timeout, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("PolyfillExtensions/<WaitAsync>d__14")]
[ExtensionAttribute]
public static Task WaitAsync(Task task, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("PolyfillExtensions/<WaitAsync>d__15")]
[ExtensionAttribute]
public static Task WaitAsync(Task task, TimeSpan timeout);
    [AsyncStateMachineAttribute("PolyfillExtensions/<WaitAsync>d__16`1")]
[ExtensionAttribute]
public static Task`1<T> WaitAsync(Task`1<T> task, TimeSpan timeout, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("PolyfillExtensions/<WaitAsync>d__17`1")]
[ExtensionAttribute]
public static Task`1<T> WaitAsync(Task`1<T> task, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("PolyfillExtensions/<WaitAsync>d__18`1")]
[ExtensionAttribute]
public static Task`1<T> WaitAsync(Task`1<T> task, TimeSpan timeout);
    [ExtensionAttribute]
public static int ReadAtLeast(Stream stream, Byte[] buffer, int minimumBytes, bool throwOnEndOfStream);
    [ExtensionAttribute]
public static void ReadExactly(Stream stream, Byte[] buffer, int offset, int count);
    [ExtensionAttribute]
public static void ReadExactly(Stream stream, Byte[] buffer);
    [AsyncStateMachineAttribute("PolyfillExtensions/<ReadAtLeastAsync>d__22")]
[ExtensionAttribute]
public static Task`1<int> ReadAtLeastAsync(Stream stream, Byte[] buffer, int minimumBytes, bool throwOnEndOfStream, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("PolyfillExtensions/<ReadExactlyAsync>d__23")]
[ExtensionAttribute]
public static Task ReadExactlyAsync(Stream stream, Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("PolyfillExtensions/<ReadExactlyAsync>d__24")]
[ExtensionAttribute]
public static Task ReadExactlyAsync(Stream stream, Byte[] buffer, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static int ReadAtLeast(Stream stream, Span`1<byte> buffer, int minimumBytes, bool throwOnEndOfStream);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static void ReadExactly(Stream stream, Span`1<byte> buffer);
    [AsyncStateMachineAttribute("PolyfillExtensions/<ReadAtLeastAsync>d__27")]
[ExtensionAttribute]
public static Task`1<int> ReadAtLeastAsync(Stream stream, Memory`1<byte> buffer, int minimumBytes, bool throwOnEndOfStream, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("PolyfillExtensions/<ReadExactlyAsync>d__28")]
[ExtensionAttribute]
public static Task ReadExactlyAsync(Stream stream, Memory`1<byte> buffer, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task CancelAsync(CancellationTokenSource cts);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class RazorBlade.HtmlHelper : object {
    [CompilerGeneratedAttribute]
private static HtmlHelper <Instance>k__BackingField;
    internal static HtmlHelper Instance { get; }
    private static HtmlHelper();
    [CompilerGeneratedAttribute]
internal static HtmlHelper get_Instance();
    public HtmlString Raw(object value);
    public string Encode(object value);
    internal static void Encode(object value, TextWriter writer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class RazorBlade.HtmlLayout : HtmlTemplate {
    private static string _contentsRequiredErrorMessage;
    [NullableAttribute("2")]
private IRazorExecutionResult _layoutInput;
    [AsyncStateMachineAttribute("RazorBlade.HtmlLayout/<RazorBlade-IRazorLayout-ExecuteLayoutAsync>d__2")]
private sealed virtual override Task`1<IRazorExecutionResult> RazorBlade.IRazorLayout.ExecuteLayoutAsync(IRazorExecutionResult input);
    private protected virtual Task`1<IRazorExecutionResult> ExecuteAsyncCore(TextWriter targetOutput, CancellationToken cancellationToken);
    [ObsoleteAttribute("Layout pages can only be rendered when associated with a contents page.", "True")]
[EditorBrowsableAttribute("1")]
public void Render(CancellationToken cancellationToken);
    [ObsoleteAttribute("Layout pages can only be rendered when associated with a contents page.", "True")]
[EditorBrowsableAttribute("1")]
public void Render(TextWriter textWriter, CancellationToken cancellationToken);
    [ObsoleteAttribute("Layout pages can only be rendered when associated with a contents page.", "True")]
[EditorBrowsableAttribute("1")]
public Task`1<string> RenderAsync(CancellationToken cancellationToken);
    [ObsoleteAttribute("Layout pages can only be rendered when associated with a contents page.", "True")]
[EditorBrowsableAttribute("1")]
public Task RenderAsync(TextWriter textWriter, CancellationToken cancellationToken);
    protected IEncodedContent RenderBody();
    protected IEncodedContent RenderSection(string name);
    protected IEncodedContent RenderSection(string name, bool required);
    protected Task`1<IEncodedContent> RenderSectionAsync(string name);
    [AsyncStateMachineAttribute("RazorBlade.HtmlLayout/<RenderSectionAsync>d__12")]
protected Task`1<IEncodedContent> RenderSectionAsync(string name, bool required);
    protected bool IsSectionDefined(string name);
    private IRazorExecutionResult GetLayoutInput();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class RazorBlade.HtmlString : object {
    private string _value;
    [CompilerGeneratedAttribute]
private static HtmlString <Empty>k__BackingField;
    public static HtmlString Empty { get; }
    [NullableContextAttribute("2")]
public HtmlString(string value);
    private static HtmlString();
    [CompilerGeneratedAttribute]
public static HtmlString get_Empty();
    public virtual string ToString();
    private sealed virtual override void RazorBlade.IEncodedContent.WriteTo(TextWriter textWriter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class RazorBlade.HtmlTemplate : RazorTemplate {
    private AttributeInfo _currentAttribute;
    [NullableAttribute("2")]
protected HtmlLayout Layout { get; protected set; }
    protected HtmlHelper Html { get; }
    [NullableContextAttribute("2")]
protected HtmlLayout get_Layout();
    [NullableContextAttribute("2")]
protected void set_Layout(HtmlLayout value);
    protected HtmlHelper get_Html();
    protected HtmlString Raw(object value);
    [NullableContextAttribute("2")]
protected virtual void Write(object value);
    protected virtual void BeginWriteAttribute(string name, string prefix, int prefixOffset, string suffix, int suffixOffset, int attributeValuesCount);
    protected virtual void WriteAttributeValue(string prefix, int prefixOffset, object value, int valueOffset, int valueLength, bool isLiteral);
    protected virtual void EndWriteAttribute();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class RazorBlade.HtmlTemplate`1 : HtmlTemplate {
    [CompilerGeneratedAttribute]
private TModel <Model>k__BackingField;
    public TModel Model { get; }
    [TemplateConstructorAttribute]
protected HtmlTemplate`1(TModel model);
    [CompilerGeneratedAttribute]
public TModel get_Model();
}
[NullableContextAttribute("1")]
internal interface RazorBlade.IEncodedContent {
    public abstract virtual void WriteTo(TextWriter textWriter);
}
[NullableContextAttribute("1")]
internal interface RazorBlade.IRazorExecutionResult {
    public IEncodedContent Body { get; }
    [NullableAttribute("2")]
public IRazorLayout Layout { get; }
    public CancellationToken CancellationToken { get; }
    public abstract virtual IEncodedContent get_Body();
    [NullableContextAttribute("2")]
public abstract virtual IRazorLayout get_Layout();
    public abstract virtual CancellationToken get_CancellationToken();
    public abstract virtual Task`1<IEncodedContent> RenderSectionAsync(string name);
    public abstract virtual bool IsSectionDefined(string name);
}
[NullableContextAttribute("1")]
internal interface RazorBlade.IRazorLayout {
    public abstract virtual Task`1<IRazorExecutionResult> ExecuteLayoutAsync(IRazorExecutionResult input);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class RazorBlade.PlainTextTemplate : RazorTemplate {
    [NullableAttribute("2")]
private string _currentAttributeSuffix;
    [NullableContextAttribute("2")]
protected virtual void Write(object value);
    protected virtual void BeginWriteAttribute(string name, string prefix, int prefixOffset, string suffix, int suffixOffset, int attributeValuesCount);
    protected virtual void WriteAttributeValue(string prefix, int prefixOffset, object value, int valueOffset, int valueLength, bool isLiteral);
    protected virtual void EndWriteAttribute();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class RazorBlade.PlainTextTemplate`1 : PlainTextTemplate {
    [CompilerGeneratedAttribute]
private TModel <Model>k__BackingField;
    public TModel Model { get; }
    [TemplateConstructorAttribute]
protected PlainTextTemplate`1(TModel model);
    [CompilerGeneratedAttribute]
public TModel get_Model();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class RazorBlade.RazorTemplate : object {
    [NullableAttribute("2")]
private ExecutionScope _executionScope;
    protected TextWriter Output { get; }
    protected CancellationToken CancellationToken { get; }
    [NullableAttribute("2")]
private protected IRazorLayout Layout { get; private protected set; }
    protected TextWriter get_Output();
    protected CancellationToken get_CancellationToken();
    [NullableContextAttribute("2")]
private protected IRazorLayout get_Layout();
    [NullableContextAttribute("2")]
private protected void set_Layout(IRazorLayout value);
    [ConditionalOnAsyncAttribute("False")]
public string Render(CancellationToken cancellationToken);
    [ConditionalOnAsyncAttribute("False")]
public void Render(TextWriter textWriter, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RazorBlade.RazorTemplate/<RenderAsync>d__10")]
public Task`1<string> RenderAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RazorBlade.RazorTemplate/<RenderAsync>d__11")]
public Task RenderAsync(TextWriter textWriter, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RazorBlade.RazorTemplate/<RenderAsyncCore>d__12")]
private Task`1<IEncodedContent> RenderAsyncCore(TextWriter targetOutput, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RazorBlade.RazorTemplate/<ExecuteAsyncCore>d__13")]
private protected virtual Task`1<IRazorExecutionResult> ExecuteAsyncCore(TextWriter targetOutput, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("RazorBlade.RazorTemplate/<FlushAsync>d__14")]
protected Task`1<IEncodedContent> FlushAsync();
    protected virtual Task ExecuteAsync();
    [NullableContextAttribute("2")]
protected virtual void WriteLiteral(string value);
    [NullableContextAttribute("2")]
protected abstract virtual void Write(object value);
    [NullableContextAttribute("2")]
protected virtual void Write(IEncodedContent content);
    [EditorBrowsableAttribute("1")]
protected abstract virtual void BeginWriteAttribute(string name, string prefix, int prefixOffset, string suffix, int suffixOffset, int attributeValuesCount);
    [EditorBrowsableAttribute("1")]
protected abstract virtual void WriteAttributeValue(string prefix, int prefixOffset, object value, int valueOffset, int valueLength, bool isLiteral);
    [EditorBrowsableAttribute("1")]
protected abstract virtual void EndWriteAttribute();
    [EditorBrowsableAttribute("1")]
protected void DefineSection(string name, Func`1<Task> action);
    private static Task WriteStringBuilderToOutputAsync(StringBuilder input, TextWriter output, CancellationToken cancellationToken);
    private sealed virtual override void RazorBlade.IEncodedContent.WriteTo(TextWriter textWriter);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
internal class RazorBlade.Support.ConditionalOnAsyncAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public string Message { get; public set; }
    public ConditionalOnAsyncAttribute(bool async);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
}
[AttributeUsageAttribute("32")]
internal class RazorBlade.Support.TemplateConstructorAttribute : Attribute {
}
[AttributeUsageAttribute("28108")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute : Attribute {
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public DynamicallyAccessedMembersAttribute(DynamicallyAccessedMemberTypes memberTypes);
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
}
[FlagsAttribute]
internal enum System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes : Enum {
    public int value__;
    public static DynamicallyAccessedMemberTypes All;
    public static DynamicallyAccessedMemberTypes None;
    public static DynamicallyAccessedMemberTypes PublicParameterlessConstructor;
    public static DynamicallyAccessedMemberTypes PublicConstructors;
    public static DynamicallyAccessedMemberTypes NonPublicConstructors;
    public static DynamicallyAccessedMemberTypes PublicMethods;
    public static DynamicallyAccessedMemberTypes NonPublicMethods;
    public static DynamicallyAccessedMemberTypes PublicFields;
    public static DynamicallyAccessedMemberTypes NonPublicFields;
    public static DynamicallyAccessedMemberTypes PublicNestedTypes;
    public static DynamicallyAccessedMemberTypes NonPublicNestedTypes;
    public static DynamicallyAccessedMemberTypes PublicProperties;
    public static DynamicallyAccessedMemberTypes NonPublicProperties;
    public static DynamicallyAccessedMemberTypes PublicEvents;
    public static DynamicallyAccessedMemberTypes NonPublicEvents;
    public static DynamicallyAccessedMemberTypes Interfaces;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("736")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.RequiresAssemblyFilesAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    public string Url { get; public set; }
    public RequiresAssemblyFilesAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Url(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresDynamicCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Url(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresUnreferencedCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Url(string value);
}
[AttributeUsageAttribute("32")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.StringSyntaxAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Syntax>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Object[] <Arguments>k__BackingField;
    public static string CompositeFormat;
    public static string DateOnlyFormat;
    public static string DateTimeFormat;
    public static string EnumFormat;
    public static string GuidFormat;
    public static string Json;
    public static string NumericFormat;
    public static string Regex;
    public static string TimeOnlyFormat;
    public static string TimeSpanFormat;
    public static string Uri;
    public static string Xml;
    public string Syntax { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object[] Arguments { get; }
    public StringSyntaxAttribute(string syntax, Object[] arguments);
    public StringSyntaxAttribute(string syntax);
    [CompilerGeneratedAttribute]
public string get_Syntax();
    [CompilerGeneratedAttribute]
public Object[] get_Arguments();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute : Attribute {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <CheckId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Justification>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [NullableAttribute("1")]
public string Category { get; }
    [NullableAttribute("1")]
public string CheckId { get; }
    public string MessageId { get; public set; }
    public string Justification { get; public set; }
    public string Scope { get; public set; }
    public string Target { get; public set; }
    [NullableContextAttribute("1")]
public UnconditionalSuppressMessageAttribute(string category, string checkId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Category();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_CheckId();
    [CompilerGeneratedAttribute]
public string get_MessageId();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MessageId(string value);
    [CompilerGeneratedAttribute]
public string get_Justification();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Justification(string value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Target(string value);
}
internal static class System.IO.PolyfillExtensions : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class System.Linq.PolyfillExtensions : object {
    [ExtensionAttribute]
public static T ElementAt(IEnumerable`1<T> source, Index index);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static T ElementAtOrDefault(IEnumerable`1<T> source, Index index);
    [ExtensionAttribute]
public static T FirstOrDefault(IEnumerable`1<T> source, T defaultValue);
    [ExtensionAttribute]
public static T FirstOrDefault(IEnumerable`1<T> source, Func`2<T, bool> predicate, T defaultValue);
    [ExtensionAttribute]
public static T LastOrDefault(IEnumerable`1<T> source, T defaultValue);
    [ExtensionAttribute]
public static T LastOrDefault(IEnumerable`1<T> source, Func`2<T, bool> predicate, T defaultValue);
    [ExtensionAttribute]
public static T SingleOrDefault(IEnumerable`1<T> source, T defaultValue);
    [ExtensionAttribute]
public static T SingleOrDefault(IEnumerable`1<T> source, Func`2<T, bool> predicate, T defaultValue);
    [ExtensionAttribute]
public static IEnumerable`1<T> Take(IEnumerable`1<T> source, Range range);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static T Min(IEnumerable`1<T> source, IComparer`1<T> comparer);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static T MinBy(IEnumerable`1<T> source, Func`2<T, TKey> keySelector, IComparer`1<TKey> comparer);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static T MinBy(IEnumerable`1<T> source, Func`2<T, TKey> keySelector);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static T Max(IEnumerable`1<T> source, IComparer`1<T> comparer);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static T MaxBy(IEnumerable`1<T> source, Func`2<T, TKey> keySelector, IComparer`1<TKey> comparer);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static T MaxBy(IEnumerable`1<T> source, Func`2<T, TKey> keySelector);
    [ExtensionAttribute]
public static IEnumerable`1<T> DistinctBy(IEnumerable`1<T> source, Func`2<T, TKey> keySelector, IEqualityComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IEnumerable`1<T> DistinctBy(IEnumerable`1<T> source, Func`2<T, TKey> keySelector);
    [IteratorStateMachineAttribute("System.Linq.PolyfillExtensions/<ExceptBy>d__17`2")]
[ExtensionAttribute]
public static IEnumerable`1<T> ExceptBy(IEnumerable`1<T> source, IEnumerable`1<TKey> other, Func`2<T, TKey> keySelector, IEqualityComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IEnumerable`1<T> ExceptBy(IEnumerable`1<T> source, IEnumerable`1<TKey> other, Func`2<T, TKey> keySelector);
    [IteratorStateMachineAttribute("System.Linq.PolyfillExtensions/<IntersectBy>d__19`2")]
[ExtensionAttribute]
public static IEnumerable`1<T> IntersectBy(IEnumerable`1<T> source, IEnumerable`1<TKey> other, Func`2<T, TKey> keySelector, IEqualityComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IEnumerable`1<T> IntersectBy(IEnumerable`1<T> source, IEnumerable`1<TKey> other, Func`2<T, TKey> keySelector);
    [IteratorStateMachineAttribute("System.Linq.PolyfillExtensions/<UnionBy>d__21`2")]
[ExtensionAttribute]
public static IEnumerable`1<T> UnionBy(IEnumerable`1<T> source, IEnumerable`1<T> other, Func`2<T, TKey> keySelector, IEqualityComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static IEnumerable`1<T> UnionBy(IEnumerable`1<T> source, IEnumerable`1<T> other, Func`2<T, TKey> keySelector);
    [IteratorStateMachineAttribute("System.Linq.PolyfillExtensions/<Chunk>d__23`1")]
[ExtensionAttribute]
public static IEnumerable`1<T[]> Chunk(IEnumerable`1<T> source, int size);
    [ExtensionAttribute]
public static IOrderedEnumerable`1<T> Order(IEnumerable`1<T> source, IComparer`1<T> comparer);
    [ExtensionAttribute]
public static IOrderedEnumerable`1<T> Order(IEnumerable`1<T> source);
    [ExtensionAttribute]
public static IOrderedEnumerable`1<T> OrderDescending(IEnumerable`1<T> source, IComparer`1<T> comparer);
    [ExtensionAttribute]
public static IOrderedEnumerable`1<T> OrderDescending(IEnumerable`1<T> source);
    [ExtensionAttribute]
public static IEnumerable`1<ValueTuple`2<TFirst, TSecond>> Zip(IEnumerable`1<TFirst> first, IEnumerable`1<TSecond> second);
}
internal static class System.Management.PolyfillExtensions : object {
}
internal static class System.Net.Http.PolyfillExtensions : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.CallerArgumentExpressionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public CallerArgumentExpressionAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <FeatureName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOptional>k__BackingField;
    public static string RefStructs;
    public static string RequiredMembers;
    public string FeatureName { get; }
    public bool IsOptional { get; public set; }
    public CompilerFeatureRequiredAttribute(string featureName);
    [CompilerGeneratedAttribute]
public string get_FeatureName();
    [CompilerGeneratedAttribute]
public bool get_IsOptional();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsOptional(bool value);
}
[ExcludeFromCodeCoverageAttribute]
internal static class System.Runtime.CompilerServices.IsExternalInit : object {
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.ModuleInitializerAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[AttributeUsageAttribute("396")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.RequiredMemberAttribute : Attribute {
}
[AttributeUsageAttribute("1774")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.SkipLocalsInitAttribute : Attribute {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.InteropServices.LibraryImportAttribute : Attribute {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <LibraryName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntryPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SetLastError>k__BackingField;
    [CompilerGeneratedAttribute]
private StringMarshalling <StringMarshalling>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <StringMarshallingCustomType>k__BackingField;
    [NullableAttribute("1")]
public string LibraryName { get; }
    public string EntryPoint { get; public set; }
    public bool SetLastError { get; public set; }
    public StringMarshalling StringMarshalling { get; public set; }
    public Type StringMarshallingCustomType { get; public set; }
    [NullableContextAttribute("1")]
public LibraryImportAttribute(string libraryName);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_LibraryName();
    [CompilerGeneratedAttribute]
public string get_EntryPoint();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_EntryPoint(string value);
    [CompilerGeneratedAttribute]
public bool get_SetLastError();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SetLastError(bool value);
    [CompilerGeneratedAttribute]
public StringMarshalling get_StringMarshalling();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_StringMarshalling(StringMarshalling value);
    [CompilerGeneratedAttribute]
public Type get_StringMarshallingCustomType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_StringMarshallingCustomType(Type value);
}
internal enum System.Runtime.InteropServices.StringMarshalling : Enum {
    public int value__;
    public static StringMarshalling Custom;
    public static StringMarshalling Utf8;
    public static StringMarshalling Utf16;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2047")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.Versioning.ObsoletedOSPlatformAttribute : OSPlatformAttribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    public string Url { get; public set; }
    [NullableContextAttribute("1")]
public ObsoletedOSPlatformAttribute(string platformName, string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Url(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExcludeFromCodeCoverageAttribute]
internal abstract class System.Runtime.Versioning.OSPlatformAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <PlatformName>k__BackingField;
    public string PlatformName { get; }
    protected OSPlatformAttribute(string platformName);
    [CompilerGeneratedAttribute]
public string get_PlatformName();
}
[AttributeUsageAttribute("2047")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.Versioning.SupportedOSPlatformAttribute : OSPlatformAttribute {
    [NullableContextAttribute("1")]
public SupportedOSPlatformAttribute(string platformName);
}
[AttributeUsageAttribute("448")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.Versioning.SupportedOSPlatformGuardAttribute : OSPlatformAttribute {
    [NullableContextAttribute("1")]
public SupportedOSPlatformGuardAttribute(string platformName);
}
[AttributeUsageAttribute("1")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.Versioning.TargetPlatformAttribute : OSPlatformAttribute {
    [NullableContextAttribute("1")]
public TargetPlatformAttribute(string platformName);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2047")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.Versioning.UnsupportedOSPlatformAttribute : OSPlatformAttribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public string Message { get; }
    [NullableContextAttribute("1")]
public UnsupportedOSPlatformAttribute(string platformName, string message);
    [CompilerGeneratedAttribute]
public string get_Message();
}
[AttributeUsageAttribute("448")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.Versioning.UnsupportedOSPlatformGuardAttribute : OSPlatformAttribute {
    [NullableContextAttribute("1")]
public UnsupportedOSPlatformGuardAttribute(string platformName);
}
internal static class System.Threading.Tasks.PolyfillExtensions : object {
}
