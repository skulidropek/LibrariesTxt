[DefaultMemberAttribute("Item")]
public class Google.Cloud.Bigtable.Common.V2.BigtableByteString : ValueType {
    private ByteString _value;
    public bool IsEmpty { get; }
    public int Length { get; }
    public ByteString Value { get; }
    public byte Item { get; }
    public BigtableByteString(string valueAsUtf8);
    public BigtableByteString(long value);
    public BigtableByteString(Byte[] value);
    public BigtableByteString(ByteString value);
    public bool get_IsEmpty();
    public int get_Length();
    public ByteString get_Value();
    public byte get_Item(int index);
    public virtual bool Equals(object obj);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual IEnumerator`1<byte> GetEnumerator();
    public virtual int GetHashCode();
    public virtual string ToString();
    public static int Compare(BigtableByteString x, BigtableByteString y);
    public sealed virtual int CompareTo(object obj);
    public sealed virtual int CompareTo(BigtableByteString other);
    public sealed virtual bool Equals(BigtableByteString other);
    public static bool op_LessThan(BigtableByteString x, BigtableByteString y);
    public static bool op_LessThanOrEqual(BigtableByteString x, BigtableByteString y);
    public static bool op_Equality(BigtableByteString x, BigtableByteString y);
    public static bool op_Inequality(BigtableByteString x, BigtableByteString y);
    public static bool op_GreaterThanOrEqual(BigtableByteString x, BigtableByteString y);
    public static bool op_GreaterThan(BigtableByteString x, BigtableByteString y);
    public static BigtableByteString op_Implicit(string valueAsUtf8);
    public static string op_Explicit(BigtableByteString value);
    public static BigtableByteString op_Implicit(long value);
    public static long op_Explicit(BigtableByteString value);
    public static BigtableByteString op_Implicit(Byte[] value);
    public static Byte[] op_Explicit(BigtableByteString value);
    public static BigtableByteString op_Implicit(ByteString value);
    public static ByteString op_Explicit(BigtableByteString value);
}
public class Google.Cloud.Bigtable.Common.V2.InstanceName : object {
    private static PathTemplate s_projectInstance;
    [CompilerGeneratedAttribute]
private ResourceNameType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private UnparsedResourceName <UnparsedResource>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InstanceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    public ResourceNameType Type { get; }
    public UnparsedResourceName UnparsedResource { get; }
    public string InstanceId { get; }
    public string ProjectId { get; }
    public bool IsKnownPattern { get; }
    private InstanceName(ResourceNameType type, UnparsedResourceName unparsedResourceName, string instanceId, string projectId);
    public InstanceName(string projectId, string instanceId);
    private static InstanceName();
    public static InstanceName FromUnparsed(UnparsedResourceName unparsedResourceName);
    public static InstanceName FromProjectInstance(string projectId, string instanceId);
    public static string Format(string projectId, string instanceId);
    public static string FormatProjectInstance(string projectId, string instanceId);
    public static InstanceName Parse(string instanceName);
    public static InstanceName Parse(string instanceName, bool allowUnparsed);
    public static bool TryParse(string instanceName, InstanceName& result);
    public static bool TryParse(string instanceName, bool allowUnparsed, InstanceName& result);
    [CompilerGeneratedAttribute]
public ResourceNameType get_Type();
    [CompilerGeneratedAttribute]
public UnparsedResourceName get_UnparsedResource();
    [CompilerGeneratedAttribute]
public string get_InstanceId();
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    public sealed virtual bool get_IsKnownPattern();
    public virtual string ToString();
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(InstanceName other);
    public static bool op_Equality(InstanceName a, InstanceName b);
    public static bool op_Inequality(InstanceName a, InstanceName b);
}
public class Google.Cloud.Bigtable.Common.V2.TableName : object {
    private static PathTemplate s_projectInstanceTable;
    [CompilerGeneratedAttribute]
private ResourceNameType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private UnparsedResourceName <UnparsedResource>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InstanceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TableId>k__BackingField;
    public ResourceNameType Type { get; }
    public UnparsedResourceName UnparsedResource { get; }
    public string InstanceId { get; }
    public string ProjectId { get; }
    public string TableId { get; }
    public bool IsKnownPattern { get; }
    private TableName(ResourceNameType type, UnparsedResourceName unparsedResourceName, string instanceId, string projectId, string tableId);
    public TableName(string projectId, string instanceId, string tableId);
    private static TableName();
    public static TableName FromUnparsed(UnparsedResourceName unparsedResourceName);
    public static TableName FromProjectInstanceTable(string projectId, string instanceId, string tableId);
    public static string Format(string projectId, string instanceId, string tableId);
    public static string FormatProjectInstanceTable(string projectId, string instanceId, string tableId);
    public static TableName Parse(string tableName);
    public static TableName Parse(string tableName, bool allowUnparsed);
    public static bool TryParse(string tableName, TableName& result);
    public static bool TryParse(string tableName, bool allowUnparsed, TableName& result);
    [CompilerGeneratedAttribute]
public ResourceNameType get_Type();
    [CompilerGeneratedAttribute]
public UnparsedResourceName get_UnparsedResource();
    [CompilerGeneratedAttribute]
public string get_InstanceId();
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public string get_TableId();
    public sealed virtual bool get_IsKnownPattern();
    public virtual string ToString();
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(TableName other);
    public static bool op_Equality(TableName a, TableName b);
    public static bool op_Inequality(TableName a, TableName b);
}
