internal class Google.Cloud.Storage.V1.ContentMetadataRecordingMediaDownloader : MediaDownloader {
    private static string ETagHeader;
    private static string GenerationHeader;
    private static string MetagenerationHeader;
    private static string HashHeader;
    private static string ContentTypeHeader;
    private static Char[] HashToElementSplitter;
    private static Char[] HashKeyValueSplitter;
    private Object metadata;
    internal ContentMetadataRecordingMediaDownloader(Object metadata, IClientService service);
    private static ContentMetadataRecordingMediaDownloader();
    protected virtual void OnResponseReceived(HttpResponseMessage response);
    private void ProcessMetadataHeaders(HttpResponseHeaders headers, HttpContentHeaders contentHeaders);
    [CompilerGeneratedAttribute]
internal static string <ProcessMetadataHeaders>g__GetFirstHeaderOrNull|10_4(string headerName, <>c__DisplayClass10_0& );
    [CompilerGeneratedAttribute]
internal static Nullable`1<long> <ProcessMetadataHeaders>g__MaybeParse|10_5(string text);
}
public class Google.Cloud.Storage.V1.CopyObjectOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <SourceGeneration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Projection> <Projection>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<PredefinedObjectAcl> <DestinationPredefinedAcl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfGenerationMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfGenerationNotMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationNotMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfSourceGenerationMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfSourceGenerationNotMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfSourceMetagenerationMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfSourceMetagenerationNotMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Object <ExtraMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private EncryptionKey <EncryptionKey>k__BackingField;
    [CompilerGeneratedAttribute]
private EncryptionKey <SourceEncryptionKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KmsKeyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserProject>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public Nullable`1<long> SourceGeneration { get; public set; }
    public Nullable`1<Projection> Projection { get; public set; }
    public Nullable`1<PredefinedObjectAcl> DestinationPredefinedAcl { get; public set; }
    public Nullable`1<long> IfGenerationMatch { get; public set; }
    public Nullable`1<long> IfGenerationNotMatch { get; public set; }
    public Nullable`1<long> IfMetagenerationMatch { get; public set; }
    public Nullable`1<long> IfMetagenerationNotMatch { get; public set; }
    public Nullable`1<long> IfSourceGenerationMatch { get; public set; }
    public Nullable`1<long> IfSourceGenerationNotMatch { get; public set; }
    public Nullable`1<long> IfSourceMetagenerationMatch { get; public set; }
    public Nullable`1<long> IfSourceMetagenerationNotMatch { get; public set; }
    public Object ExtraMetadata { get; public set; }
    public EncryptionKey EncryptionKey { get; public set; }
    public EncryptionKey SourceEncryptionKey { get; public set; }
    public string KmsKeyName { get; public set; }
    public string UserProject { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_SourceGeneration();
    [CompilerGeneratedAttribute]
public void set_SourceGeneration(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Projection> get_Projection();
    [CompilerGeneratedAttribute]
public void set_Projection(Nullable`1<Projection> value);
    [CompilerGeneratedAttribute]
public Nullable`1<PredefinedObjectAcl> get_DestinationPredefinedAcl();
    [CompilerGeneratedAttribute]
public void set_DestinationPredefinedAcl(Nullable`1<PredefinedObjectAcl> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfGenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfGenerationMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfGenerationNotMatch();
    [CompilerGeneratedAttribute]
public void set_IfGenerationNotMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationNotMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationNotMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfSourceGenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfSourceGenerationMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfSourceGenerationNotMatch();
    [CompilerGeneratedAttribute]
public void set_IfSourceGenerationNotMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfSourceMetagenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfSourceMetagenerationMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfSourceMetagenerationNotMatch();
    [CompilerGeneratedAttribute]
public void set_IfSourceMetagenerationNotMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Object get_ExtraMetadata();
    [CompilerGeneratedAttribute]
public void set_ExtraMetadata(Object value);
    [CompilerGeneratedAttribute]
public EncryptionKey get_EncryptionKey();
    [CompilerGeneratedAttribute]
public void set_EncryptionKey(EncryptionKey value);
    [CompilerGeneratedAttribute]
public EncryptionKey get_SourceEncryptionKey();
    [CompilerGeneratedAttribute]
public void set_SourceEncryptionKey(EncryptionKey value);
    [CompilerGeneratedAttribute]
public string get_KmsKeyName();
    [CompilerGeneratedAttribute]
public void set_KmsKeyName(string value);
    [CompilerGeneratedAttribute]
public string get_UserProject();
    [CompilerGeneratedAttribute]
public void set_UserProject(string value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(RewriteRequest request);
}
internal class Google.Cloud.Storage.V1.Crc32c : object {
    internal static string HashHeaderName;
    internal static string HashName;
    private static UInt32[] s_crcTable;
    private UInt32 crc;
    private static Crc32c();
    internal void UpdateHash(Byte[] data, int offset, int length);
    internal Byte[] GetHash();
}
public class Google.Cloud.Storage.V1.CreateBucketOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<PredefinedBucketAcl> <PredefinedAcl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<PredefinedObjectAcl> <PredefinedDefaultObjectAcl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Projection> <Projection>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ObjectRetentionEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public Nullable`1<PredefinedBucketAcl> PredefinedAcl { get; public set; }
    public Nullable`1<PredefinedObjectAcl> PredefinedDefaultObjectAcl { get; public set; }
    public Nullable`1<Projection> Projection { get; public set; }
    public Nullable`1<bool> ObjectRetentionEnabled { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<PredefinedBucketAcl> get_PredefinedAcl();
    [CompilerGeneratedAttribute]
public void set_PredefinedAcl(Nullable`1<PredefinedBucketAcl> value);
    [CompilerGeneratedAttribute]
public Nullable`1<PredefinedObjectAcl> get_PredefinedDefaultObjectAcl();
    [CompilerGeneratedAttribute]
public void set_PredefinedDefaultObjectAcl(Nullable`1<PredefinedObjectAcl> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Projection> get_Projection();
    [CompilerGeneratedAttribute]
public void set_Projection(Nullable`1<Projection> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ObjectRetentionEnabled();
    [CompilerGeneratedAttribute]
public void set_ObjectRetentionEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(InsertRequest request);
}
public class Google.Cloud.Storage.V1.CreateHmacKeyOptions : object {
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(CreateRequest request);
}
public class Google.Cloud.Storage.V1.CreateNotificationOptions : object {
    [CompilerGeneratedAttribute]
private string <UserProject>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public string UserProject { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_UserProject();
    [CompilerGeneratedAttribute]
public void set_UserProject(string value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(InsertRequest request);
}
internal class Google.Cloud.Storage.V1.CustomMediaUpload : InsertMediaUpload {
    internal ResumableUploadOptions Options { get; }
    public CustomMediaUpload(IClientService service, Object body, string bucket, Stream stream, string contentType);
    internal ResumableUploadOptions get_Options();
}
public class Google.Cloud.Storage.V1.DeleteBucketOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationNotMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserProject>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DeleteObjects>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public Nullable`1<long> IfMetagenerationMatch { get; public set; }
    public Nullable`1<long> IfMetagenerationNotMatch { get; public set; }
    public string UserProject { get; public set; }
    public Nullable`1<bool> DeleteObjects { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationNotMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationNotMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_UserProject();
    [CompilerGeneratedAttribute]
public void set_UserProject(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DeleteObjects();
    [CompilerGeneratedAttribute]
public void set_DeleteObjects(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(DeleteRequest request);
    internal GetBucketOptions CreateGetBucketOptionsForPreconditions();
}
public class Google.Cloud.Storage.V1.DeleteHmacKeyOptions : object {
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(DeleteRequest request);
}
public class Google.Cloud.Storage.V1.DeleteNotificationOptions : object {
    [CompilerGeneratedAttribute]
private string <UserProject>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public string UserProject { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_UserProject();
    [CompilerGeneratedAttribute]
public void set_UserProject(string value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(DeleteRequest request);
}
public class Google.Cloud.Storage.V1.DeleteObjectOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Generation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfGenerationMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfGenerationNotMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationNotMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserProject>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public Nullable`1<long> Generation { get; public set; }
    public Nullable`1<long> IfGenerationMatch { get; public set; }
    public Nullable`1<long> IfGenerationNotMatch { get; public set; }
    public Nullable`1<long> IfMetagenerationMatch { get; public set; }
    public Nullable`1<long> IfMetagenerationNotMatch { get; public set; }
    public string UserProject { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Generation();
    [CompilerGeneratedAttribute]
public void set_Generation(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfGenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfGenerationMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfGenerationNotMatch();
    [CompilerGeneratedAttribute]
public void set_IfGenerationNotMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationNotMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationNotMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_UserProject();
    [CompilerGeneratedAttribute]
public void set_UserProject(string value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(DeleteRequest request);
}
public class Google.Cloud.Storage.V1.DownloadObjectOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ChunkSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Generation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfGenerationMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfGenerationNotMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationNotMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private RangeHeaderValue <Range>k__BackingField;
    [CompilerGeneratedAttribute]
private EncryptionKey <EncryptionKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserProject>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DownloadValidationMode> <DownloadValidationMode>k__BackingField;
    public Nullable`1<int> ChunkSize { get; public set; }
    public Nullable`1<long> Generation { get; public set; }
    public Nullable`1<long> IfGenerationMatch { get; public set; }
    public Nullable`1<long> IfGenerationNotMatch { get; public set; }
    public Nullable`1<long> IfMetagenerationMatch { get; public set; }
    public Nullable`1<long> IfMetagenerationNotMatch { get; public set; }
    public RangeHeaderValue Range { get; public set; }
    public EncryptionKey EncryptionKey { get; public set; }
    public string UserProject { get; public set; }
    public Nullable`1<DownloadValidationMode> DownloadValidationMode { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ChunkSize();
    [CompilerGeneratedAttribute]
public void set_ChunkSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Generation();
    [CompilerGeneratedAttribute]
public void set_Generation(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfGenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfGenerationMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfGenerationNotMatch();
    [CompilerGeneratedAttribute]
public void set_IfGenerationNotMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationNotMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationNotMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public RangeHeaderValue get_Range();
    [CompilerGeneratedAttribute]
public void set_Range(RangeHeaderValue value);
    [CompilerGeneratedAttribute]
public EncryptionKey get_EncryptionKey();
    [CompilerGeneratedAttribute]
public void set_EncryptionKey(EncryptionKey value);
    [CompilerGeneratedAttribute]
public string get_UserProject();
    [CompilerGeneratedAttribute]
public void set_UserProject(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DownloadValidationMode> get_DownloadValidationMode();
    [CompilerGeneratedAttribute]
public void set_DownloadValidationMode(Nullable`1<DownloadValidationMode> value);
    internal void ModifyDownloader(MediaDownloader downloader);
    internal void ModifyRequestBuilder(RequestBuilder builder);
    private static void MaybeAppendParameter(RequestBuilder builder, string name, Nullable`1<long> value);
    private static void MaybeAppendParameter(RequestBuilder builder, string name, string value);
}
public enum Google.Cloud.Storage.V1.DownloadValidationMode : Enum {
    public int value__;
    public static DownloadValidationMode Always;
    public static DownloadValidationMode Never;
    public static DownloadValidationMode Automatic;
}
public class Google.Cloud.Storage.V1.EncryptionKey : object {
    internal static string AlgorithmHeader;
    internal static string KeyHeader;
    internal static string KeyHashHeader;
    internal static string AlgorithmValue;
    internal static string CopySourceAlgorithmHeader;
    internal static string CopySourceKeyHeader;
    internal static string CopySourceKeyHashHeader;
    [CompilerGeneratedAttribute]
private static EncryptionKey <None>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Base64Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Base64Hash>k__BackingField;
    public static EncryptionKey None { get; }
    public string Base64Key { get; }
    public string Base64Hash { get; }
    private EncryptionKey(Byte[] key);
    private static EncryptionKey();
    [CompilerGeneratedAttribute]
public static EncryptionKey get_None();
    [CompilerGeneratedAttribute]
public string get_Base64Key();
    [CompilerGeneratedAttribute]
public string get_Base64Hash();
    public static EncryptionKey Create(Byte[] key);
    public static EncryptionKey Generate();
    public sealed virtual bool Equals(EncryptionKey other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public void ModifyRequest(HttpRequestMessage request);
    internal void ModifyRequestForRewriteSource(HttpRequestMessage request);
}
public class Google.Cloud.Storage.V1.GetBucketIamPolicyOptions : object {
    [CompilerGeneratedAttribute]
private string <UserProject>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RequestedPolicyVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public string UserProject { get; public set; }
    public Nullable`1<int> RequestedPolicyVersion { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_UserProject();
    [CompilerGeneratedAttribute]
public void set_UserProject(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_RequestedPolicyVersion();
    [CompilerGeneratedAttribute]
public void set_RequestedPolicyVersion(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(GetIamPolicyRequest request);
}
public class Google.Cloud.Storage.V1.GetBucketOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationNotMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Projection> <Projection>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserProject>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public Nullable`1<long> IfMetagenerationMatch { get; public set; }
    public Nullable`1<long> IfMetagenerationNotMatch { get; public set; }
    public Nullable`1<Projection> Projection { get; public set; }
    public string UserProject { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationNotMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationNotMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Projection> get_Projection();
    [CompilerGeneratedAttribute]
public void set_Projection(Nullable`1<Projection> value);
    [CompilerGeneratedAttribute]
public string get_UserProject();
    [CompilerGeneratedAttribute]
public void set_UserProject(string value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(GetRequest request);
}
public class Google.Cloud.Storage.V1.GetHmacKeyOptions : object {
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(GetRequest request);
}
public class Google.Cloud.Storage.V1.GetNotificationOptions : object {
    [CompilerGeneratedAttribute]
private string <UserProject>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public string UserProject { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_UserProject();
    [CompilerGeneratedAttribute]
public void set_UserProject(string value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(GetRequest request);
}
public class Google.Cloud.Storage.V1.GetObjectOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Generation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SoftDeletedOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Projection> <Projection>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfGenerationMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfGenerationNotMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationNotMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private EncryptionKey <EncryptionKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserProject>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public Nullable`1<long> Generation { get; public set; }
    public Nullable`1<bool> SoftDeletedOnly { get; public set; }
    public Nullable`1<Projection> Projection { get; public set; }
    public Nullable`1<long> IfGenerationMatch { get; public set; }
    public Nullable`1<long> IfGenerationNotMatch { get; public set; }
    public Nullable`1<long> IfMetagenerationMatch { get; public set; }
    public Nullable`1<long> IfMetagenerationNotMatch { get; public set; }
    public EncryptionKey EncryptionKey { get; public set; }
    public string UserProject { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Generation();
    [CompilerGeneratedAttribute]
public void set_Generation(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SoftDeletedOnly();
    [CompilerGeneratedAttribute]
public void set_SoftDeletedOnly(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Projection> get_Projection();
    [CompilerGeneratedAttribute]
public void set_Projection(Nullable`1<Projection> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfGenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfGenerationMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfGenerationNotMatch();
    [CompilerGeneratedAttribute]
public void set_IfGenerationNotMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationNotMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationNotMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public EncryptionKey get_EncryptionKey();
    [CompilerGeneratedAttribute]
public void set_EncryptionKey(EncryptionKey value);
    [CompilerGeneratedAttribute]
public string get_UserProject();
    [CompilerGeneratedAttribute]
public void set_UserProject(string value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(GetRequest request);
}
public class Google.Cloud.Storage.V1.GetStorageServiceAccountEmailOptions : object {
    [CompilerGeneratedAttribute]
private string <UserProject>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public string UserProject { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_UserProject();
    [CompilerGeneratedAttribute]
public void set_UserProject(string value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(GetRequest request);
}
internal class Google.Cloud.Storage.V1.HashValidatingDownloader : ContentMetadataRecordingMediaDownloader {
    internal static string StoredContentEncodingHeaderName;
    private DownloadValidationMode _mode;
    private string _crc32cHashBase64;
    private Crc32c _hasher;
    internal HashValidatingDownloader(Object metadata, IClientService service, DownloadValidationMode mode);
    private StreamInterceptor CreateInterceptor(HttpResponseMessage response);
    protected virtual void OnDownloadCompleted();
    [CompilerGeneratedAttribute]
private StreamInterceptor <CreateInterceptor>g__PrepareForHashing|5_0(<>c__DisplayClass5_0& );
}
public static class Google.Cloud.Storage.V1.HmacKeyStates : object {
    public static string Active;
    public static string Inactive;
    public static string Deleted;
}
public class Google.Cloud.Storage.V1.ListBucketsOptions : object {
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Projection> <Projection>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PageToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public string Prefix { get; public set; }
    public Nullable`1<int> PageSize { get; public set; }
    public Nullable`1<Projection> Projection { get; public set; }
    public string PageToken { get; public set; }
    public string Fields { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Prefix();
    [CompilerGeneratedAttribute]
public void set_Prefix(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_PageSize();
    [CompilerGeneratedAttribute]
public void set_PageSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Projection> get_Projection();
    [CompilerGeneratedAttribute]
public void set_Projection(Nullable`1<Projection> value);
    [CompilerGeneratedAttribute]
public string get_PageToken();
    [CompilerGeneratedAttribute]
public void set_PageToken(string value);
    [CompilerGeneratedAttribute]
public string get_Fields();
    [CompilerGeneratedAttribute]
public void set_Fields(string value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(ListRequest request);
}
public class Google.Cloud.Storage.V1.ListHmacKeysOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PageToken>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ShowDeletedKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public Nullable`1<int> PageSize { get; public set; }
    public string PageToken { get; public set; }
    public Nullable`1<bool> ShowDeletedKeys { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_PageSize();
    [CompilerGeneratedAttribute]
public void set_PageSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_PageToken();
    [CompilerGeneratedAttribute]
public void set_PageToken(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ShowDeletedKeys();
    [CompilerGeneratedAttribute]
public void set_ShowDeletedKeys(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(ListRequest request);
}
public class Google.Cloud.Storage.V1.ListNotificationsOptions : object {
    [CompilerGeneratedAttribute]
private string <UserProject>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public string UserProject { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_UserProject();
    [CompilerGeneratedAttribute]
public void set_UserProject(string value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(ListRequest request);
}
public class Google.Cloud.Storage.V1.ListObjectsOptions : object {
    [CompilerGeneratedAttribute]
private string <Delimiter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeTrailingDelimiter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeFoldersAsPrefixes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Versions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SoftDeletedOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Projection> <Projection>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MatchGlob>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserProject>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PageToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Fields>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StartOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EndOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public string Delimiter { get; public set; }
    public Nullable`1<bool> IncludeTrailingDelimiter { get; public set; }
    public Nullable`1<bool> IncludeFoldersAsPrefixes { get; public set; }
    public Nullable`1<int> PageSize { get; public set; }
    public Nullable`1<bool> Versions { get; public set; }
    public Nullable`1<bool> SoftDeletedOnly { get; public set; }
    public Nullable`1<Projection> Projection { get; public set; }
    public string MatchGlob { get; public set; }
    public string UserProject { get; public set; }
    public string PageToken { get; public set; }
    public string Fields { get; public set; }
    public string StartOffset { get; public set; }
    public string EndOffset { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Delimiter();
    [CompilerGeneratedAttribute]
public void set_Delimiter(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IncludeTrailingDelimiter();
    [CompilerGeneratedAttribute]
public void set_IncludeTrailingDelimiter(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IncludeFoldersAsPrefixes();
    [CompilerGeneratedAttribute]
public void set_IncludeFoldersAsPrefixes(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_PageSize();
    [CompilerGeneratedAttribute]
public void set_PageSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Versions();
    [CompilerGeneratedAttribute]
public void set_Versions(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SoftDeletedOnly();
    [CompilerGeneratedAttribute]
public void set_SoftDeletedOnly(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Projection> get_Projection();
    [CompilerGeneratedAttribute]
public void set_Projection(Nullable`1<Projection> value);
    [CompilerGeneratedAttribute]
public string get_MatchGlob();
    [CompilerGeneratedAttribute]
public void set_MatchGlob(string value);
    [CompilerGeneratedAttribute]
public string get_UserProject();
    [CompilerGeneratedAttribute]
public void set_UserProject(string value);
    [CompilerGeneratedAttribute]
public string get_PageToken();
    [CompilerGeneratedAttribute]
public void set_PageToken(string value);
    [CompilerGeneratedAttribute]
public string get_Fields();
    [CompilerGeneratedAttribute]
public void set_Fields(string value);
    [CompilerGeneratedAttribute]
public string get_StartOffset();
    [CompilerGeneratedAttribute]
public void set_StartOffset(string value);
    [CompilerGeneratedAttribute]
public string get_EndOffset();
    [CompilerGeneratedAttribute]
public void set_EndOffset(string value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(ListRequest request);
}
public class Google.Cloud.Storage.V1.LockBucketRetentionPolicyOptions : object {
    [CompilerGeneratedAttribute]
private string <UserProject>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public string UserProject { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_UserProject();
    [CompilerGeneratedAttribute]
public void set_UserProject(string value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(LockRetentionPolicyRequest request);
}
public class Google.Cloud.Storage.V1.ModifyBucketLabelsOptions : object {
    internal static int DefaultRetries;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationMatch>k__BackingField;
    private Nullable`1<int> _retries;
    public Nullable`1<long> IfMetagenerationMatch { get; public set; }
    public Nullable`1<int> Retries { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationMatch(Nullable`1<long> value);
    public Nullable`1<int> get_Retries();
    public void set_Retries(Nullable`1<int> value);
}
public class Google.Cloud.Storage.V1.PatchBucketOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationNotMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Projection> <Projection>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<PredefinedBucketAcl> <PredefinedAcl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<PredefinedObjectAcl> <PredefinedDefaultObjectAcl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserProject>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public Nullable`1<long> IfMetagenerationMatch { get; public set; }
    public Nullable`1<long> IfMetagenerationNotMatch { get; public set; }
    public Nullable`1<Projection> Projection { get; public set; }
    public Nullable`1<PredefinedBucketAcl> PredefinedAcl { get; public set; }
    public Nullable`1<PredefinedObjectAcl> PredefinedDefaultObjectAcl { get; public set; }
    public string UserProject { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationNotMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationNotMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Projection> get_Projection();
    [CompilerGeneratedAttribute]
public void set_Projection(Nullable`1<Projection> value);
    [CompilerGeneratedAttribute]
public Nullable`1<PredefinedBucketAcl> get_PredefinedAcl();
    [CompilerGeneratedAttribute]
public void set_PredefinedAcl(Nullable`1<PredefinedBucketAcl> value);
    [CompilerGeneratedAttribute]
public Nullable`1<PredefinedObjectAcl> get_PredefinedDefaultObjectAcl();
    [CompilerGeneratedAttribute]
public void set_PredefinedDefaultObjectAcl(Nullable`1<PredefinedObjectAcl> value);
    [CompilerGeneratedAttribute]
public string get_UserProject();
    [CompilerGeneratedAttribute]
public void set_UserProject(string value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(PatchRequest request);
}
public class Google.Cloud.Storage.V1.PatchObjectOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Generation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfGenerationMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfGenerationNotMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationNotMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Projection> <Projection>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<PredefinedObjectAcl> <PredefinedAcl>k__BackingField;
    [CompilerGeneratedAttribute]
private EncryptionKey <EncryptionKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserProject>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OverrideUnlockedRetention>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public Nullable`1<long> Generation { get; public set; }
    public Nullable`1<long> IfGenerationMatch { get; public set; }
    public Nullable`1<long> IfGenerationNotMatch { get; public set; }
    public Nullable`1<long> IfMetagenerationMatch { get; public set; }
    public Nullable`1<long> IfMetagenerationNotMatch { get; public set; }
    public Nullable`1<Projection> Projection { get; public set; }
    public Nullable`1<PredefinedObjectAcl> PredefinedAcl { get; public set; }
    public EncryptionKey EncryptionKey { get; public set; }
    public string UserProject { get; public set; }
    public Nullable`1<bool> OverrideUnlockedRetention { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Generation();
    [CompilerGeneratedAttribute]
public void set_Generation(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfGenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfGenerationMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfGenerationNotMatch();
    [CompilerGeneratedAttribute]
public void set_IfGenerationNotMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationNotMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationNotMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Projection> get_Projection();
    [CompilerGeneratedAttribute]
public void set_Projection(Nullable`1<Projection> value);
    [CompilerGeneratedAttribute]
public Nullable`1<PredefinedObjectAcl> get_PredefinedAcl();
    [CompilerGeneratedAttribute]
public void set_PredefinedAcl(Nullable`1<PredefinedObjectAcl> value);
    [CompilerGeneratedAttribute]
public EncryptionKey get_EncryptionKey();
    [CompilerGeneratedAttribute]
public void set_EncryptionKey(EncryptionKey value);
    [CompilerGeneratedAttribute]
public string get_UserProject();
    [CompilerGeneratedAttribute]
public void set_UserProject(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_OverrideUnlockedRetention();
    [CompilerGeneratedAttribute]
public void set_OverrideUnlockedRetention(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(PatchRequest request);
}
public enum Google.Cloud.Storage.V1.PredefinedBucketAcl : Enum {
    public int value__;
    public static PredefinedBucketAcl AuthenticatedRead;
    public static PredefinedBucketAcl Private;
    public static PredefinedBucketAcl ProjectPrivate;
    public static PredefinedBucketAcl PublicRead;
    public static PredefinedBucketAcl PublicReadWrite;
}
public enum Google.Cloud.Storage.V1.PredefinedObjectAcl : Enum {
    public int value__;
    public static PredefinedObjectAcl AuthenticatedRead;
    public static PredefinedObjectAcl BucketOwnerFullControl;
    public static PredefinedObjectAcl BucketOwnerRead;
    public static PredefinedObjectAcl Private;
    public static PredefinedObjectAcl ProjectPrivate;
    public static PredefinedObjectAcl PublicRead;
}
public enum Google.Cloud.Storage.V1.Projection : Enum {
    public int value__;
    public static Projection Full;
    public static Projection NoAcl;
}
public class Google.Cloud.Storage.V1.RestoreObjectOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <CopySourceAcl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Projection> <Projection>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfGenerationMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfGenerationNotMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationNotMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private EncryptionKey <EncryptionKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserProject>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public Nullable`1<bool> CopySourceAcl { get; public set; }
    public Nullable`1<Projection> Projection { get; public set; }
    public Nullable`1<long> IfGenerationMatch { get; public set; }
    public Nullable`1<long> IfGenerationNotMatch { get; public set; }
    public Nullable`1<long> IfMetagenerationMatch { get; public set; }
    public Nullable`1<long> IfMetagenerationNotMatch { get; public set; }
    public EncryptionKey EncryptionKey { get; public set; }
    public string UserProject { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_CopySourceAcl();
    [CompilerGeneratedAttribute]
public void set_CopySourceAcl(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Projection> get_Projection();
    [CompilerGeneratedAttribute]
public void set_Projection(Nullable`1<Projection> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfGenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfGenerationMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfGenerationNotMatch();
    [CompilerGeneratedAttribute]
public void set_IfGenerationNotMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationNotMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationNotMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public EncryptionKey get_EncryptionKey();
    [CompilerGeneratedAttribute]
public void set_EncryptionKey(EncryptionKey value);
    [CompilerGeneratedAttribute]
public string get_UserProject();
    [CompilerGeneratedAttribute]
public void set_UserProject(string value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(RestoreRequest request);
}
internal class Google.Cloud.Storage.V1.RetryHandler : object {
    internal static string InvocationIdHeaderPart;
    internal static string AttemptCountHeaderPart;
    private RetryOptions _retryOptions;
    private IScheduler _scheduler;
    private RetryHandler(RetryOptions retryOptions, IScheduler scheduler);
    internal static void MarkAsRetriable(StorageBaseServiceRequest`1<TResponse> request, RetryOptions options, IScheduler scheduler);
    [AsyncStateMachineAttribute("Google.Cloud.Storage.V1.RetryHandler/<HandleResponseAsync>d__6")]
public sealed virtual Task`1<bool> HandleResponseAsync(HandleUnsuccessfulResponseArgs args);
}
public class Google.Cloud.Storage.V1.RetryOptions : object {
    [CompilerGeneratedAttribute]
private static RetryOptions <IdempotentRetryOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private static RetryOptions <Never>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryPredicate <Predicate>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryTiming <Timing>k__BackingField;
    public static RetryOptions IdempotentRetryOptions { get; }
    public static RetryOptions Never { get; }
    internal RetryPredicate Predicate { get; }
    internal RetryTiming Timing { get; }
    public RetryOptions(RetryTiming retryTiming, RetryPredicate retryPredicate);
    private static RetryOptions();
    [CompilerGeneratedAttribute]
public static RetryOptions get_IdempotentRetryOptions();
    [CompilerGeneratedAttribute]
public static RetryOptions get_Never();
    [CompilerGeneratedAttribute]
internal RetryPredicate get_Predicate();
    [CompilerGeneratedAttribute]
internal RetryTiming get_Timing();
    internal static RetryOptions MaybeIdempotent(object condition);
}
public class Google.Cloud.Storage.V1.RetryPredicate : object {
    private Func`2<int, bool> _predicate;
    [CompilerGeneratedAttribute]
private static RetryPredicate <RetriableIdempotentErrors>k__BackingField;
    [CompilerGeneratedAttribute]
private static RetryPredicate <Never>k__BackingField;
    public static RetryPredicate RetriableIdempotentErrors { get; }
    public static RetryPredicate Never { get; }
    private RetryPredicate(Func`2<int, bool> predicate);
    private static RetryPredicate();
    [CompilerGeneratedAttribute]
public static RetryPredicate get_RetriableIdempotentErrors();
    [CompilerGeneratedAttribute]
public static RetryPredicate get_Never();
    public static RetryPredicate FromErrorCodes(Int32[] errorCodes);
    public static RetryPredicate FromErrorCodePredicate(Func`2<int, bool> predicate);
    internal bool ShouldRetry(int statusCode);
}
public class Google.Cloud.Storage.V1.RetryTiming : object {
    [CompilerGeneratedAttribute]
private static TimeSpan <DefaultInitialBackoff>k__BackingField;
    [CompilerGeneratedAttribute]
private static TimeSpan <DefaultMaxBackoff>k__BackingField;
    [CompilerGeneratedAttribute]
private static double <DefaultBackoffMultiplier>k__BackingField;
    [CompilerGeneratedAttribute]
private static RetryTiming <Default>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <InitialBackoff>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <MaxBackoff>k__BackingField;
    [CompilerGeneratedAttribute]
private double <BackoffMultiplier>k__BackingField;
    public static TimeSpan DefaultInitialBackoff { get; }
    public static TimeSpan DefaultMaxBackoff { get; }
    public static double DefaultBackoffMultiplier { get; }
    public static RetryTiming Default { get; }
    public TimeSpan InitialBackoff { get; }
    public TimeSpan MaxBackoff { get; }
    public double BackoffMultiplier { get; }
    public RetryTiming(TimeSpan initialBackoff, TimeSpan maxBackoff, double backoffMultiplier);
    private static RetryTiming();
    [CompilerGeneratedAttribute]
public static TimeSpan get_DefaultInitialBackoff();
    [CompilerGeneratedAttribute]
public static TimeSpan get_DefaultMaxBackoff();
    [CompilerGeneratedAttribute]
public static double get_DefaultBackoffMultiplier();
    [CompilerGeneratedAttribute]
public static RetryTiming get_Default();
    [CompilerGeneratedAttribute]
public TimeSpan get_InitialBackoff();
    [CompilerGeneratedAttribute]
public TimeSpan get_MaxBackoff();
    [CompilerGeneratedAttribute]
public double get_BackoffMultiplier();
    public RetryTiming WithInitialBackoff(TimeSpan initialBackoff);
    public RetryTiming WithMaxBackoff(TimeSpan maxBackoff);
    public RetryTiming WithBackoffMultiplier(double backoffMultiplier);
    internal TimeSpan GetDelay(int failureCount);
}
public class Google.Cloud.Storage.V1.SetBucketIamPolicyOptions : object {
    [CompilerGeneratedAttribute]
private string <UserProject>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public string UserProject { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_UserProject();
    [CompilerGeneratedAttribute]
public void set_UserProject(string value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(SetIamPolicyRequest request);
}
public class Google.Cloud.Storage.V1.SignedUrlResumableUpload : ResumableUpload {
    [CompilerGeneratedAttribute]
private string <SignedUrl>k__BackingField;
    private string SignedUrl { get; private set; }
    private SignedUrlResumableUpload(string signedUrl, Stream contentStream, ResumableUploadOptions options);
    [CompilerGeneratedAttribute]
private string get_SignedUrl();
    [CompilerGeneratedAttribute]
private void set_SignedUrl(string value);
    public static SignedUrlResumableUpload Create(string signedUrl, Stream contentStream, ResumableUploadOptions options);
    [AsyncStateMachineAttribute("Google.Cloud.Storage.V1.SignedUrlResumableUpload/<InitiateSessionAsync>d__6")]
public virtual Task`1<Uri> InitiateSessionAsync(CancellationToken cancellationToken);
    public static Uri InitiateSession(string signedUrl, ResumableUploadOptions options);
    public static Task`1<Uri> InitiateSessionAsync(string signedUrl, ResumableUploadOptions options, CancellationToken cancellationToken);
}
public enum Google.Cloud.Storage.V1.SigningVersion : Enum {
    public int value__;
    public static SigningVersion Default;
    public static SigningVersion V2;
    public static SigningVersion V4;
}
public static class Google.Cloud.Storage.V1.StorageClasses : object {
    public static string MultiRegional;
    public static string Regional;
    public static string Nearline;
    public static string Coldline;
    public static string Standard;
    public static string DurableReducedAvailability;
    public static string Archive;
}
public abstract class Google.Cloud.Storage.V1.StorageClient : object {
    private static String[] s_scopes;
    [CompilerGeneratedAttribute]
private static ScopedCredentialProvider <ScopedCredentialProvider>k__BackingField;
    internal static ScopedCredentialProvider ScopedCredentialProvider { get; }
    public StorageService Service { get; }
    public EncryptionKey EncryptionKey { get; }
    private static StorageClient();
    public virtual Object CopyObject(string sourceBucket, string sourceObjectName, string destinationBucket, string destinationObjectName, CopyObjectOptions options);
    public virtual Task`1<Object> CopyObjectAsync(string sourceBucket, string sourceObjectName, string destinationBucket, string destinationObjectName, CopyObjectOptions options, CancellationToken cancellationToken);
    public virtual Bucket CreateBucket(string projectId, string bucket, CreateBucketOptions options);
    public virtual Task`1<Bucket> CreateBucketAsync(string projectId, string bucket, CreateBucketOptions options, CancellationToken cancellationToken);
    public virtual Bucket CreateBucket(string projectId, Bucket bucket, CreateBucketOptions options);
    public virtual Task`1<Bucket> CreateBucketAsync(string projectId, Bucket bucket, CreateBucketOptions options, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
internal static ScopedCredentialProvider get_ScopedCredentialProvider();
    public virtual StorageService get_Service();
    public virtual EncryptionKey get_EncryptionKey();
    public static Task`1<StorageClient> CreateAsync();
    public static StorageClient Create();
    public static Task`1<StorageClient> CreateAsync(GoogleCredential credential, EncryptionKey encryptionKey);
    public static StorageClient Create(GoogleCredential credential, EncryptionKey encryptionKey);
    public static StorageClient CreateUnauthenticated();
    public UrlSigner CreateUrlSigner();
    public virtual void Dispose();
    public virtual void DeleteBucket(string bucket, DeleteBucketOptions options);
    public virtual Task DeleteBucketAsync(string bucket, DeleteBucketOptions options, CancellationToken cancellationToken);
    public virtual void DeleteBucket(Bucket bucket, DeleteBucketOptions options);
    public virtual Task DeleteBucketAsync(Bucket bucket, DeleteBucketOptions options, CancellationToken cancellationToken);
    public virtual void DeleteObject(string bucket, string objectName, DeleteObjectOptions options);
    public virtual Task DeleteObjectAsync(string bucket, string objectName, DeleteObjectOptions options, CancellationToken cancellationToken);
    public virtual void DeleteObject(Object obj, DeleteObjectOptions options);
    public virtual Task DeleteObjectAsync(Object obj, DeleteObjectOptions options, CancellationToken cancellationToken);
    public virtual Object DownloadObject(string bucket, string objectName, Stream destination, DownloadObjectOptions options, IProgress`1<IDownloadProgress> progress);
    public virtual Task`1<Object> DownloadObjectAsync(string bucket, string objectName, Stream destination, DownloadObjectOptions options, CancellationToken cancellationToken, IProgress`1<IDownloadProgress> progress);
    public virtual Object DownloadObject(Object source, Stream destination, DownloadObjectOptions options, IProgress`1<IDownloadProgress> progress);
    public virtual Task`1<Object> DownloadObjectAsync(Object source, Stream destination, DownloadObjectOptions options, CancellationToken cancellationToken, IProgress`1<IDownloadProgress> progress);
    public virtual Bucket GetBucket(string bucket, GetBucketOptions options);
    public virtual Task`1<Bucket> GetBucketAsync(string bucket, GetBucketOptions options, CancellationToken cancellationToken);
    public virtual Policy GetBucketIamPolicy(string bucket, GetBucketIamPolicyOptions options);
    public virtual Task`1<Policy> GetBucketIamPolicyAsync(string bucket, GetBucketIamPolicyOptions options, CancellationToken cancellationToken);
    public virtual Object GetObject(string bucket, string objectName, GetObjectOptions options);
    public virtual Task`1<Object> GetObjectAsync(string bucket, string objectName, GetObjectOptions options, CancellationToken cancellationToken);
    public virtual HmacKey CreateHmacKey(string projectId, string serviceAccountEmail, CreateHmacKeyOptions options);
    public virtual Task`1<HmacKey> CreateHmacKeyAsync(string projectId, string serviceAccountEmail, CreateHmacKeyOptions options, CancellationToken cancellationToken);
    public virtual HmacKeyMetadata GetHmacKey(string projectId, string accessId, GetHmacKeyOptions options);
    public virtual Task`1<HmacKeyMetadata> GetHmacKeyAsync(string projectId, string accessId, GetHmacKeyOptions options, CancellationToken cancellationToken);
    public virtual PagedEnumerable`2<HmacKeysMetadata, HmacKeyMetadata> ListHmacKeys(string projectId, string serviceAccountEmail, ListHmacKeysOptions options);
    public virtual PagedAsyncEnumerable`2<HmacKeysMetadata, HmacKeyMetadata> ListHmacKeysAsync(string projectId, string serviceAccountEmail, ListHmacKeysOptions options);
    public virtual HmacKeyMetadata UpdateHmacKey(HmacKeyMetadata key, UpdateHmacKeyOptions options);
    public virtual Task`1<HmacKeyMetadata> UpdateHmacKeyAsync(HmacKeyMetadata key, UpdateHmacKeyOptions options, CancellationToken cancellationToken);
    public virtual void DeleteHmacKey(string projectId, string accessId, DeleteHmacKeyOptions options);
    public virtual Task DeleteHmacKeyAsync(string projectId, string accessId, DeleteHmacKeyOptions options, CancellationToken cancellationToken);
    public virtual PagedAsyncEnumerable`2<Buckets, Bucket> ListBucketsAsync(string projectId, ListBucketsOptions options);
    public virtual PagedEnumerable`2<Buckets, Bucket> ListBuckets(string projectId, ListBucketsOptions options);
    public virtual PagedAsyncEnumerable`2<Objects, Object> ListObjectsAsync(string bucket, string prefix, ListObjectsOptions options);
    public virtual PagedEnumerable`2<Objects, Object> ListObjects(string bucket, string prefix, ListObjectsOptions options);
    public virtual void LockBucketRetentionPolicy(string bucket, long metageneration, LockBucketRetentionPolicyOptions options);
    public virtual Task LockBucketRetentionPolicyAsync(string bucket, long metageneration, LockBucketRetentionPolicyOptions options, CancellationToken cancellationToken);
    public virtual string SetBucketLabel(string bucket, string labelName, string labelValue, ModifyBucketLabelsOptions options);
    public virtual string RemoveBucketLabel(string bucket, string labelName, ModifyBucketLabelsOptions options);
    public virtual IDictionary`2<string, string> ModifyBucketLabels(string bucket, IDictionary`2<string, string> labels, ModifyBucketLabelsOptions options);
    public virtual IDictionary`2<string, string> ClearBucketLabels(string bucket, ModifyBucketLabelsOptions options);
    [AsyncStateMachineAttribute("Google.Cloud.Storage.V1.StorageClient/<SetBucketLabelAsync>d__59")]
public virtual Task`1<string> SetBucketLabelAsync(string bucket, string labelName, string labelValue, ModifyBucketLabelsOptions options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Google.Cloud.Storage.V1.StorageClient/<RemoveBucketLabelAsync>d__60")]
public virtual Task`1<string> RemoveBucketLabelAsync(string bucket, string labelName, ModifyBucketLabelsOptions options, CancellationToken cancellationToken);
    public virtual Task`1<IDictionary`2<string, string>> ModifyBucketLabelsAsync(string bucket, IDictionary`2<string, string> labels, ModifyBucketLabelsOptions options, CancellationToken cancellationToken);
    public virtual Task`1<IDictionary`2<string, string>> ClearBucketLabelsAsync(string bucket, ModifyBucketLabelsOptions options, CancellationToken cancellationToken);
    public virtual string GetStorageServiceAccountEmail(string projectId, GetStorageServiceAccountEmailOptions options);
    public virtual Task`1<string> GetStorageServiceAccountEmailAsync(string projectId, GetStorageServiceAccountEmailOptions options, CancellationToken cancellationToken);
    public virtual Notification CreateNotification(string bucket, Notification notification, CreateNotificationOptions options);
    public virtual Task`1<Notification> CreateNotificationAsync(string bucket, Notification notification, CreateNotificationOptions options, CancellationToken cancellationToken);
    public virtual Notification GetNotification(string bucket, string notificationId, GetNotificationOptions options);
    public virtual Task`1<Notification> GetNotificationAsync(string bucket, string notificationId, GetNotificationOptions options, CancellationToken cancellationToken);
    public virtual IReadOnlyList`1<Notification> ListNotifications(string bucket, ListNotificationsOptions options);
    public virtual Task`1<IReadOnlyList`1<Notification>> ListNotificationsAsync(string bucket, ListNotificationsOptions options, CancellationToken cancellationToken);
    public virtual void DeleteNotification(string bucket, string notificationId, DeleteNotificationOptions options);
    public virtual Task DeleteNotificationAsync(string bucket, string notificationId, DeleteNotificationOptions options, CancellationToken cancellationToken);
    public virtual Bucket PatchBucket(Bucket bucket, PatchBucketOptions options);
    public virtual Task`1<Bucket> PatchBucketAsync(Bucket bucket, PatchBucketOptions options, CancellationToken cancellationToken);
    public virtual Object PatchObject(Object obj, PatchObjectOptions options);
    public virtual Task`1<Object> PatchObjectAsync(Object obj, PatchObjectOptions options, CancellationToken cancellationToken);
    public virtual Object RestoreObject(string bucket, string objectName, long generation, RestoreObjectOptions options);
    public virtual Task`1<Object> RestoreObjectAsync(string bucket, string objectName, long generation, RestoreObjectOptions options, CancellationToken cancellationToken);
    public virtual Policy SetBucketIamPolicy(string bucket, Policy policy, SetBucketIamPolicyOptions options);
    public virtual Task`1<Policy> SetBucketIamPolicyAsync(string bucket, Policy policy, SetBucketIamPolicyOptions options, CancellationToken cancellationToken);
    public virtual IList`1<string> TestBucketIamPermissions(string bucket, IEnumerable`1<string> permissions, TestBucketIamPermissionsOptions options);
    public virtual Task`1<IList`1<string>> TestBucketIamPermissionsAsync(string bucket, IEnumerable`1<string> permissions, TestBucketIamPermissionsOptions options, CancellationToken cancellationToken);
    public virtual Bucket UpdateBucket(Bucket bucket, UpdateBucketOptions options);
    public virtual Task`1<Bucket> UpdateBucketAsync(Bucket bucket, UpdateBucketOptions options, CancellationToken cancellationToken);
    public virtual Object UpdateObject(Object obj, UpdateObjectOptions options);
    public virtual Task`1<Object> UpdateObjectAsync(Object obj, UpdateObjectOptions options, CancellationToken cancellationToken);
    public virtual InsertMediaUpload CreateObjectUploader(string bucket, string objectName, string contentType, Stream source, UploadObjectOptions options);
    public virtual InsertMediaUpload CreateObjectUploader(Object destination, Stream source, UploadObjectOptions options);
    public virtual Object UploadObject(string bucket, string objectName, string contentType, Stream source, UploadObjectOptions options, IProgress`1<IUploadProgress> progress);
    public virtual Task`1<Object> UploadObjectAsync(string bucket, string objectName, string contentType, Stream source, UploadObjectOptions options, CancellationToken cancellationToken, IProgress`1<IUploadProgress> progress);
    public virtual Object UploadObject(Object destination, Stream source, UploadObjectOptions options, IProgress`1<IUploadProgress> progress);
    public virtual Task`1<Object> UploadObjectAsync(Object destination, Stream source, UploadObjectOptions options, CancellationToken cancellationToken, IProgress`1<IUploadProgress> progress);
    public virtual Task`1<Uri> InitiateUploadSessionAsync(Object destination, Nullable`1<long> contentLength, UploadObjectOptions options, CancellationToken cancellationToken);
    public virtual Task`1<Uri> InitiateUploadSessionAsync(string bucket, string objectName, string contentType, Nullable`1<long> contentLength, UploadObjectOptions options, CancellationToken cancellationToken);
}
public class Google.Cloud.Storage.V1.StorageClientBuilder : ClientBuilderBase`1<StorageClient> {
    private static string s_emulatorHostVariable;
    private static String[] s_emulatorEnvironmentVariables;
    [CompilerGeneratedAttribute]
private bool <UnauthenticatedAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private EncryptionKey <EncryptionKey>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <GZipEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private IScheduler <Scheduler>k__BackingField;
    [CompilerGeneratedAttribute]
private EmulatorDetection <EmulatorDetection>k__BackingField;
    public bool UnauthenticatedAccess { get; public set; }
    public EncryptionKey EncryptionKey { get; public set; }
    internal bool GZipEnabled { get; internal set; }
    internal IScheduler Scheduler { get; internal set; }
    public EmulatorDetection EmulatorDetection { get; public set; }
    private static StorageClientBuilder();
    [CompilerGeneratedAttribute]
public bool get_UnauthenticatedAccess();
    [CompilerGeneratedAttribute]
public void set_UnauthenticatedAccess(bool value);
    [CompilerGeneratedAttribute]
public EncryptionKey get_EncryptionKey();
    [CompilerGeneratedAttribute]
public void set_EncryptionKey(EncryptionKey value);
    [CompilerGeneratedAttribute]
internal bool get_GZipEnabled();
    [CompilerGeneratedAttribute]
internal void set_GZipEnabled(bool value);
    [CompilerGeneratedAttribute]
internal IScheduler get_Scheduler();
    [CompilerGeneratedAttribute]
internal void set_Scheduler(IScheduler value);
    [CompilerGeneratedAttribute]
public EmulatorDetection get_EmulatorDetection();
    [CompilerGeneratedAttribute]
public void set_EmulatorDetection(EmulatorDetection value);
    public virtual StorageClient Build();
    [AsyncStateMachineAttribute("Google.Cloud.Storage.V1.StorageClientBuilder/<BuildAsync>d__24")]
public virtual Task`1<StorageClient> BuildAsync(CancellationToken cancellationToken);
    protected virtual Initializer CreateServiceInitializer();
    [AsyncStateMachineAttribute("Google.Cloud.Storage.V1.StorageClientBuilder/<CreateServiceInitializerAsync>d__26")]
protected virtual Task`1<Initializer> CreateServiceInitializerAsync(CancellationToken cancellationToken);
    protected virtual IConfigurableHttpClientInitializer GetHttpClientInitializer();
    protected virtual Task`1<IConfigurableHttpClientInitializer> GetHttpClientInitializerAsync(CancellationToken cancellationToken);
    protected virtual string GetDefaultApplicationName();
    protected virtual ScopedCredentialProvider GetScopedCredentialProvider();
    protected virtual void Validate();
    private StorageClientBuilder MaybeUseEmulator();
    private Dictionary`2<string, string> GetEmulatorEnvironment(IEnumerable`1<string> requiredEmulatorEnvironmentVariables, IEnumerable`1<string> allEmulatorEnvironmentVariables, Func`2<string, string> environmentVariableProvider);
    private void CopySettingsForEmulator(StorageClientBuilder source);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<Initializer> <>n__0(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
internal static void <GetEmulatorEnvironment>g__CheckNotSet|33_3(object obj, string name);
}
public class Google.Cloud.Storage.V1.StorageClientImpl : StorageClient {
    private static object _applicationNameLock;
    private static string _applicationName;
    [CompilerGeneratedAttribute]
private StorageService <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private EncryptionKey <EncryptionKey>k__BackingField;
    private IScheduler _scheduler;
    private static Regex ValidBucketName;
    public static string ApplicationName { get; public set; }
    public StorageService Service { get; }
    public EncryptionKey EncryptionKey { get; }
    internal StorageClientImpl(StorageService service, EncryptionKey encryptionKey, IScheduler scheduler);
    public StorageClientImpl(StorageService service, EncryptionKey encryptionKey);
    private static StorageClientImpl();
    public virtual Object CopyObject(string sourceBucket, string sourceObjectName, string destinationBucket, string destinationObjectName, CopyObjectOptions options);
    [AsyncStateMachineAttribute("Google.Cloud.Storage.V1.StorageClientImpl/<CopyObjectAsync>d__1")]
public virtual Task`1<Object> CopyObjectAsync(string sourceBucket, string sourceObjectName, string destinationBucket, string destinationObjectName, CopyObjectOptions options, CancellationToken cancellationToken);
    private RewriteRequest CreateCopyObjectRequest(string sourceBucket, string sourceObjectName, string destinationBucket, string destinationObjectName, CopyObjectOptions options);
    public virtual Bucket CreateBucket(string projectId, string bucket, CreateBucketOptions options);
    public virtual Task`1<Bucket> CreateBucketAsync(string projectId, string bucket, CreateBucketOptions options, CancellationToken cancellationToken);
    public virtual Bucket CreateBucket(string projectId, Bucket bucket, CreateBucketOptions options);
    public virtual Task`1<Bucket> CreateBucketAsync(string projectId, Bucket bucket, CreateBucketOptions options, CancellationToken cancellationToken);
    private InsertRequest CreateCreateBucketRequest(string projectId, string bucket, CreateBucketOptions options);
    private InsertRequest CreateCreateBucketRequest(string projectId, Bucket bucket, CreateBucketOptions options);
    public static string get_ApplicationName();
    public static void set_ApplicationName(string value);
    [CompilerGeneratedAttribute]
public virtual StorageService get_Service();
    [CompilerGeneratedAttribute]
public virtual EncryptionKey get_EncryptionKey();
    internal static string ValidateBucketName(string bucket);
    private string ValidateBucket(Bucket bucket, string paramName);
    private void ValidateObject(Object obj, string paramName);
    private void ApplyEncryptionKey(EncryptionKey keyFromOptions, string kmsNameFromOptions, ClientServiceRequest`1<TRequest> request);
    private void ApplyEncryptionKey(EncryptionKey keyFromOptions, string kmsNameFromOptions, CustomMediaUpload upload);
    private void ApplyEncryptionKey(EncryptionKey keyFromOptions, MediaDownloader download);
    internal EncryptionKey GetEffectiveEncryptionKey(EncryptionKey keyFromOptions, string kmsNameFromOptions);
    public virtual void Dispose();
    private void MarkAsRetriable(StorageBaseServiceRequest`1<TResponse> request, RetryOptions options);
    public virtual void DeleteBucket(string bucket, DeleteBucketOptions options);
    public virtual Task DeleteBucketAsync(string bucket, DeleteBucketOptions options, CancellationToken cancellationToken);
    public virtual void DeleteBucket(Bucket bucket, DeleteBucketOptions options);
    public virtual Task DeleteBucketAsync(Bucket bucket, DeleteBucketOptions options, CancellationToken cancellationToken);
    private void DeleteBucketImpl(string bucket, DeleteBucketOptions options);
    [AsyncStateMachineAttribute("Google.Cloud.Storage.V1.StorageClientImpl/<DeleteBucketAsyncImpl>d__38")]
private Task DeleteBucketAsyncImpl(string bucket, DeleteBucketOptions options, CancellationToken cancellationToken);
    private DeleteRequest CreateDeleteBucketRequest(string bucket, DeleteBucketOptions options);
    public virtual void DeleteObject(string bucket, string objectName, DeleteObjectOptions options);
    public virtual Task DeleteObjectAsync(string bucket, string objectName, DeleteObjectOptions options, CancellationToken cancellationToken);
    public virtual void DeleteObject(Object obj, DeleteObjectOptions options);
    public virtual Task DeleteObjectAsync(Object obj, DeleteObjectOptions options, CancellationToken cancellationToken);
    private DeleteRequest CreateDeleteObjectRequest(Object obj, DeleteObjectOptions options);
    private DeleteRequest CreateDeleteObjectRequest(string bucket, string name, DeleteObjectOptions options);
    public virtual Object DownloadObject(string bucket, string objectName, Stream destination, DownloadObjectOptions options, IProgress`1<IDownloadProgress> progress);
    public virtual Task`1<Object> DownloadObjectAsync(string bucket, string objectName, Stream destination, DownloadObjectOptions options, CancellationToken cancellationToken, IProgress`1<IDownloadProgress> progress);
    public virtual Object DownloadObject(Object source, Stream destination, DownloadObjectOptions options, IProgress`1<IDownloadProgress> progress);
    public virtual Task`1<Object> DownloadObjectAsync(Object source, Stream destination, DownloadObjectOptions options, CancellationToken cancellationToken, IProgress`1<IDownloadProgress> progress);
    private RequestBuilder CreateRequestBuilder(string bucket, string objectName);
    private RequestBuilder CreateRequestBuilder(Object source);
    private Object DownloadObjectImpl(Object metadata, RequestBuilder requestBuilder, Stream destination, DownloadObjectOptions options, IProgress`1<IDownloadProgress> progress);
    private Task`1<Object> DownloadObjectAsyncImpl(Object metadata, RequestBuilder requestBuilder, Stream destination, DownloadObjectOptions options, CancellationToken cancellationToken, IProgress`1<IDownloadProgress> progress);
    private ContentMetadataRecordingMediaDownloader CreateDownloader(Object metadata, DownloadObjectOptions options);
    public virtual Bucket GetBucket(string bucket, GetBucketOptions options);
    public virtual Task`1<Bucket> GetBucketAsync(string bucket, GetBucketOptions options, CancellationToken cancellationToken);
    private GetRequest CreateGetBucketRequest(string bucket, GetBucketOptions options);
    public virtual Policy GetBucketIamPolicy(string bucket, GetBucketIamPolicyOptions options);
    public virtual Task`1<Policy> GetBucketIamPolicyAsync(string bucket, GetBucketIamPolicyOptions options, CancellationToken cancellationToken);
    private GetIamPolicyRequest CreateGetBucketIamPolicyRequest(string bucket, GetBucketIamPolicyOptions options);
    public virtual Object GetObject(string bucket, string objectName, GetObjectOptions options);
    public virtual Task`1<Object> GetObjectAsync(string bucket, string objectName, GetObjectOptions options, CancellationToken cancellationToken);
    private GetRequest CreateGetObjectRequest(string bucket, string objectName, GetObjectOptions options);
    public virtual HmacKey CreateHmacKey(string projectId, string serviceAccountEmail, CreateHmacKeyOptions options);
    public virtual Task`1<HmacKey> CreateHmacKeyAsync(string projectId, string serviceAccountEmail, CreateHmacKeyOptions options, CancellationToken cancellationToken);
    public virtual HmacKeyMetadata GetHmacKey(string projectId, string accessId, GetHmacKeyOptions options);
    public virtual Task`1<HmacKeyMetadata> GetHmacKeyAsync(string projectId, string accessId, GetHmacKeyOptions options, CancellationToken cancellationToken);
    public virtual PagedEnumerable`2<HmacKeysMetadata, HmacKeyMetadata> ListHmacKeys(string projectId, string serviceAccountEmail, ListHmacKeysOptions options);
    public virtual PagedAsyncEnumerable`2<HmacKeysMetadata, HmacKeyMetadata> ListHmacKeysAsync(string projectId, string serviceAccountEmail, ListHmacKeysOptions options);
    public virtual HmacKeyMetadata UpdateHmacKey(HmacKeyMetadata key, UpdateHmacKeyOptions options);
    public virtual Task`1<HmacKeyMetadata> UpdateHmacKeyAsync(HmacKeyMetadata key, UpdateHmacKeyOptions options, CancellationToken cancellationToken);
    public virtual void DeleteHmacKey(string projectId, string accessId, DeleteHmacKeyOptions options);
    public virtual Task DeleteHmacKeyAsync(string projectId, string accessId, DeleteHmacKeyOptions options, CancellationToken cancellationToken);
    private CreateRequest CreateCreateHmacKeyRequest(string projectId, string serviceAccountEmail, CreateHmacKeyOptions options);
    private GetRequest CreateGetHmacKeyRequest(string projectId, string accessId, GetHmacKeyOptions options);
    private UpdateRequest CreateUpdateHmacKeyRequest(HmacKeyMetadata key, UpdateHmacKeyOptions options);
    private DeleteRequest CreateDeleteHmacKeyRequest(string projectId, string accessId, DeleteHmacKeyOptions options);
    private ListRequest CreateListHmacKeysRequest(string projectId, string serviceAccountEmail, ListHmacKeysOptions options);
    public virtual PagedAsyncEnumerable`2<Buckets, Bucket> ListBucketsAsync(string projectId, ListBucketsOptions options);
    public virtual PagedEnumerable`2<Buckets, Bucket> ListBuckets(string projectId, ListBucketsOptions options);
    private ListRequest CreateListBucketsRequest(string projectId, ListBucketsOptions options);
    public virtual PagedAsyncEnumerable`2<Objects, Object> ListObjectsAsync(string bucket, string prefix, ListObjectsOptions options);
    public virtual PagedEnumerable`2<Objects, Object> ListObjects(string bucket, string prefix, ListObjectsOptions options);
    private ListRequest CreateListObjectsRequest(string bucket, string prefix, ListObjectsOptions options);
    public virtual void LockBucketRetentionPolicy(string bucket, long metageneration, LockBucketRetentionPolicyOptions options);
    public virtual Task LockBucketRetentionPolicyAsync(string bucket, long metageneration, LockBucketRetentionPolicyOptions options, CancellationToken cancellationToken);
    private LockRetentionPolicyRequest CreateLockBucketRetentionPolicyRequest(string bucket, long metageneration, LockBucketRetentionPolicyOptions options);
    public virtual IDictionary`2<string, string> ModifyBucketLabels(string bucket, IDictionary`2<string, string> labels, ModifyBucketLabelsOptions options);
    public virtual IDictionary`2<string, string> ClearBucketLabels(string bucket, ModifyBucketLabelsOptions options);
    [AsyncStateMachineAttribute("Google.Cloud.Storage.V1.StorageClientImpl/<ModifyBucketLabelsAsync>d__94")]
public virtual Task`1<IDictionary`2<string, string>> ModifyBucketLabelsAsync(string bucket, IDictionary`2<string, string> labels, ModifyBucketLabelsOptions options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Google.Cloud.Storage.V1.StorageClientImpl/<ClearBucketLabelsAsync>d__95")]
public virtual Task`1<IDictionary`2<string, string>> ClearBucketLabelsAsync(string bucket, ModifyBucketLabelsOptions options, CancellationToken cancellationToken);
    private static IDictionary`2<string, string> GetDifferences(IDictionary`2<string, string> requested, IDictionary`2<string, string> existing);
    public virtual string GetStorageServiceAccountEmail(string projectId, GetStorageServiceAccountEmailOptions options);
    [AsyncStateMachineAttribute("Google.Cloud.Storage.V1.StorageClientImpl/<GetStorageServiceAccountEmailAsync>d__98")]
public virtual Task`1<string> GetStorageServiceAccountEmailAsync(string projectId, GetStorageServiceAccountEmailOptions options, CancellationToken cancellationToken);
    public virtual Notification CreateNotification(string bucket, Notification notification, CreateNotificationOptions options);
    public virtual Task`1<Notification> CreateNotificationAsync(string bucket, Notification notification, CreateNotificationOptions options, CancellationToken cancellationToken);
    public virtual IReadOnlyList`1<Notification> ListNotifications(string bucket, ListNotificationsOptions options);
    [AsyncStateMachineAttribute("Google.Cloud.Storage.V1.StorageClientImpl/<ListNotificationsAsync>d__102")]
public virtual Task`1<IReadOnlyList`1<Notification>> ListNotificationsAsync(string bucket, ListNotificationsOptions options, CancellationToken cancellationToken);
    public virtual Notification GetNotification(string bucket, string notificationId, GetNotificationOptions options);
    public virtual Task`1<Notification> GetNotificationAsync(string bucket, string notificationId, GetNotificationOptions options, CancellationToken cancellationToken);
    public virtual void DeleteNotification(string bucket, string notificationId, DeleteNotificationOptions options);
    public virtual Task DeleteNotificationAsync(string bucket, string notificationId, DeleteNotificationOptions options, CancellationToken cancellationToken);
    private GetRequest CreateGetServiceAccountEmailRequest(string projectId, GetStorageServiceAccountEmailOptions options);
    private InsertRequest CreateCreateNotificationRequest(string bucket, Notification notification, CreateNotificationOptions options);
    private GetRequest CreateGetNotificationRequest(string bucket, string notificationId, GetNotificationOptions options);
    private DeleteRequest CreateDeleteNotificationRequest(string bucket, string notificationId, DeleteNotificationOptions options);
    private ListRequest CreateListNotificationsRequest(string bucket, ListNotificationsOptions options);
    public virtual Bucket PatchBucket(Bucket bucket, PatchBucketOptions options);
    public virtual Task`1<Bucket> PatchBucketAsync(Bucket bucket, PatchBucketOptions options, CancellationToken cancellationToken);
    private PatchRequest CreatePatchBucketRequest(Bucket bucket, PatchBucketOptions options);
    public virtual Object PatchObject(Object obj, PatchObjectOptions options);
    public virtual Task`1<Object> PatchObjectAsync(Object obj, PatchObjectOptions options, CancellationToken cancellationToken);
    private PatchRequest CreatePatchObjectRequest(Object obj, PatchObjectOptions options);
    public virtual Object RestoreObject(string bucket, string objectName, long generation, RestoreObjectOptions options);
    public virtual Task`1<Object> RestoreObjectAsync(string bucket, string objectName, long generation, RestoreObjectOptions options, CancellationToken cancellationToken);
    private RestoreRequest CreateRestoreObjectRequest(string bucket, string objectName, long generation, RestoreObjectOptions options);
    public virtual Policy SetBucketIamPolicy(string bucket, Policy policy, SetBucketIamPolicyOptions options);
    public virtual Task`1<Policy> SetBucketIamPolicyAsync(string bucket, Policy policy, SetBucketIamPolicyOptions options, CancellationToken cancellationToken);
    private SetIamPolicyRequest CreateSetBucketIamPolicyRequest(string bucket, Policy policy, SetBucketIamPolicyOptions options);
    public virtual IList`1<string> TestBucketIamPermissions(string bucket, IEnumerable`1<string> permissions, TestBucketIamPermissionsOptions options);
    [AsyncStateMachineAttribute("Google.Cloud.Storage.V1.StorageClientImpl/<TestBucketIamPermissionsAsync>d__125")]
public virtual Task`1<IList`1<string>> TestBucketIamPermissionsAsync(string bucket, IEnumerable`1<string> permissions, TestBucketIamPermissionsOptions options, CancellationToken cancellationToken);
    private TestIamPermissionsRequest CreateTestIamPermissionsRequest(string bucket, IEnumerable`1<string> permissions, TestBucketIamPermissionsOptions options);
    public virtual Bucket UpdateBucket(Bucket bucket, UpdateBucketOptions options);
    public virtual Task`1<Bucket> UpdateBucketAsync(Bucket bucket, UpdateBucketOptions options, CancellationToken cancellationToken);
    private UpdateRequest CreateUpdateBucketRequest(Bucket bucket, UpdateBucketOptions options);
    public virtual Object UpdateObject(Object obj, UpdateObjectOptions options);
    public virtual Task`1<Object> UpdateObjectAsync(Object obj, UpdateObjectOptions options, CancellationToken cancellationToken);
    private UpdateRequest CreateUpdateObjectRequest(Object obj, UpdateObjectOptions options);
    public virtual InsertMediaUpload CreateObjectUploader(string bucket, string objectName, string contentType, Stream source, UploadObjectOptions options);
    public virtual InsertMediaUpload CreateObjectUploader(Object destination, Stream source, UploadObjectOptions options);
    public virtual Object UploadObject(string bucket, string objectName, string contentType, Stream source, UploadObjectOptions options, IProgress`1<IUploadProgress> progress);
    public virtual Task`1<Object> UploadObjectAsync(string bucket, string objectName, string contentType, Stream source, UploadObjectOptions options, CancellationToken cancellationToken, IProgress`1<IUploadProgress> progress);
    public virtual Object UploadObject(Object destination, Stream source, UploadObjectOptions options, IProgress`1<IUploadProgress> progress);
    public virtual Task`1<Object> UploadObjectAsync(Object destination, Stream source, UploadObjectOptions options, CancellationToken cancellationToken, IProgress`1<IUploadProgress> progress);
    public virtual Task`1<Uri> InitiateUploadSessionAsync(Object destination, Nullable`1<long> contentLength, UploadObjectOptions options, CancellationToken cancellationToken);
    public virtual Task`1<Uri> InitiateUploadSessionAsync(string bucket, string objectName, string contentType, Nullable`1<long> contentLength, UploadObjectOptions options, CancellationToken cancellationToken);
}
public class Google.Cloud.Storage.V1.TestBucketIamPermissionsOptions : object {
    [CompilerGeneratedAttribute]
private string <UserProject>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public string UserProject { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_UserProject();
    [CompilerGeneratedAttribute]
public void set_UserProject(string value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(TestIamPermissionsRequest request);
}
public class Google.Cloud.Storage.V1.UpdateBucketOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationNotMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Projection> <Projection>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<PredefinedBucketAcl> <PredefinedAcl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<PredefinedObjectAcl> <PredefinedDefaultObjectAcl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ForceNoPreconditions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserProject>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public Nullable`1<long> IfMetagenerationMatch { get; public set; }
    public Nullable`1<long> IfMetagenerationNotMatch { get; public set; }
    public Nullable`1<Projection> Projection { get; public set; }
    public Nullable`1<PredefinedBucketAcl> PredefinedAcl { get; public set; }
    public Nullable`1<PredefinedObjectAcl> PredefinedDefaultObjectAcl { get; public set; }
    public Nullable`1<bool> ForceNoPreconditions { get; public set; }
    public string UserProject { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    private bool AnyExplicitPreconditions { get; }
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationNotMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationNotMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Projection> get_Projection();
    [CompilerGeneratedAttribute]
public void set_Projection(Nullable`1<Projection> value);
    [CompilerGeneratedAttribute]
public Nullable`1<PredefinedBucketAcl> get_PredefinedAcl();
    [CompilerGeneratedAttribute]
public void set_PredefinedAcl(Nullable`1<PredefinedBucketAcl> value);
    [CompilerGeneratedAttribute]
public Nullable`1<PredefinedObjectAcl> get_PredefinedDefaultObjectAcl();
    [CompilerGeneratedAttribute]
public void set_PredefinedDefaultObjectAcl(Nullable`1<PredefinedObjectAcl> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ForceNoPreconditions();
    [CompilerGeneratedAttribute]
public void set_ForceNoPreconditions(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_UserProject();
    [CompilerGeneratedAttribute]
public void set_UserProject(string value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    private bool get_AnyExplicitPreconditions();
    internal void ModifyRequest(UpdateRequest request, Bucket bucket);
}
public class Google.Cloud.Storage.V1.UpdateHmacKeyOptions : object {
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public RetryOptions RetryOptions { get; public set; }
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    internal void ModifyRequest(UpdateRequest request);
}
public class Google.Cloud.Storage.V1.UpdateObjectOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Generation>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfGenerationMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfGenerationNotMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationNotMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Projection> <Projection>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<PredefinedObjectAcl> <PredefinedAcl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ForceNoPreconditions>k__BackingField;
    [CompilerGeneratedAttribute]
private EncryptionKey <EncryptionKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserProject>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OverrideUnlockedRetention>k__BackingField;
    [CompilerGeneratedAttribute]
private RetryOptions <RetryOptions>k__BackingField;
    public Nullable`1<long> Generation { get; public set; }
    public Nullable`1<long> IfGenerationMatch { get; public set; }
    public Nullable`1<long> IfGenerationNotMatch { get; public set; }
    public Nullable`1<long> IfMetagenerationMatch { get; public set; }
    public Nullable`1<long> IfMetagenerationNotMatch { get; public set; }
    public Nullable`1<Projection> Projection { get; public set; }
    public Nullable`1<PredefinedObjectAcl> PredefinedAcl { get; public set; }
    public Nullable`1<bool> ForceNoPreconditions { get; public set; }
    public EncryptionKey EncryptionKey { get; public set; }
    public string UserProject { get; public set; }
    public Nullable`1<bool> OverrideUnlockedRetention { get; public set; }
    public RetryOptions RetryOptions { get; public set; }
    private bool AnyExplicitPreconditions { get; }
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_Generation();
    [CompilerGeneratedAttribute]
public void set_Generation(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfGenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfGenerationMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfGenerationNotMatch();
    [CompilerGeneratedAttribute]
public void set_IfGenerationNotMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationNotMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationNotMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Projection> get_Projection();
    [CompilerGeneratedAttribute]
public void set_Projection(Nullable`1<Projection> value);
    [CompilerGeneratedAttribute]
public Nullable`1<PredefinedObjectAcl> get_PredefinedAcl();
    [CompilerGeneratedAttribute]
public void set_PredefinedAcl(Nullable`1<PredefinedObjectAcl> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ForceNoPreconditions();
    [CompilerGeneratedAttribute]
public void set_ForceNoPreconditions(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public EncryptionKey get_EncryptionKey();
    [CompilerGeneratedAttribute]
public void set_EncryptionKey(EncryptionKey value);
    [CompilerGeneratedAttribute]
public string get_UserProject();
    [CompilerGeneratedAttribute]
public void set_UserProject(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_OverrideUnlockedRetention();
    [CompilerGeneratedAttribute]
public void set_OverrideUnlockedRetention(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public RetryOptions get_RetryOptions();
    [CompilerGeneratedAttribute]
public void set_RetryOptions(RetryOptions value);
    private bool get_AnyExplicitPreconditions();
    internal void ModifyRequest(UpdateRequest request, Object obj);
}
public class Google.Cloud.Storage.V1.UploadObjectOptions : object {
    public static int MinimumChunkSize;
    [CompilerGeneratedAttribute]
private static UploadValidationMode <DefaultValidationMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfGenerationMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfGenerationNotMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <IfMetagenerationNotMatch>k__BackingField;
    private Nullable`1<int> _chunkSize;
    [CompilerGeneratedAttribute]
private Nullable`1<PredefinedObjectAcl> <PredefinedAcl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Projection> <Projection>k__BackingField;
    [CompilerGeneratedAttribute]
private EncryptionKey <EncryptionKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KmsKeyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserProject>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<UploadValidationMode> <UploadValidationMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Origin>k__BackingField;
    internal static UploadValidationMode DefaultValidationMode { get; }
    public Nullable`1<long> IfGenerationMatch { get; public set; }
    public Nullable`1<long> IfGenerationNotMatch { get; public set; }
    public Nullable`1<long> IfMetagenerationMatch { get; public set; }
    public Nullable`1<long> IfMetagenerationNotMatch { get; public set; }
    public Nullable`1<int> ChunkSize { get; public set; }
    public Nullable`1<PredefinedObjectAcl> PredefinedAcl { get; public set; }
    public Nullable`1<Projection> Projection { get; public set; }
    public EncryptionKey EncryptionKey { get; public set; }
    public string KmsKeyName { get; public set; }
    public string UserProject { get; public set; }
    public Nullable`1<UploadValidationMode> UploadValidationMode { get; public set; }
    public string Origin { get; public set; }
    private static UploadObjectOptions();
    [CompilerGeneratedAttribute]
internal static UploadValidationMode get_DefaultValidationMode();
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfGenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfGenerationMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfGenerationNotMatch();
    [CompilerGeneratedAttribute]
public void set_IfGenerationNotMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationMatch(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_IfMetagenerationNotMatch();
    [CompilerGeneratedAttribute]
public void set_IfMetagenerationNotMatch(Nullable`1<long> value);
    public Nullable`1<int> get_ChunkSize();
    public void set_ChunkSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<PredefinedObjectAcl> get_PredefinedAcl();
    [CompilerGeneratedAttribute]
public void set_PredefinedAcl(Nullable`1<PredefinedObjectAcl> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Projection> get_Projection();
    [CompilerGeneratedAttribute]
public void set_Projection(Nullable`1<Projection> value);
    [CompilerGeneratedAttribute]
public EncryptionKey get_EncryptionKey();
    [CompilerGeneratedAttribute]
public void set_EncryptionKey(EncryptionKey value);
    [CompilerGeneratedAttribute]
public string get_KmsKeyName();
    [CompilerGeneratedAttribute]
public void set_KmsKeyName(string value);
    [CompilerGeneratedAttribute]
public string get_UserProject();
    [CompilerGeneratedAttribute]
public void set_UserProject(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<UploadValidationMode> get_UploadValidationMode();
    [CompilerGeneratedAttribute]
public void set_UploadValidationMode(Nullable`1<UploadValidationMode> value);
    [CompilerGeneratedAttribute]
public string get_Origin();
    [CompilerGeneratedAttribute]
public void set_Origin(string value);
    internal void ModifyMediaUpload(CustomMediaUpload upload);
    [CompilerGeneratedAttribute]
private void <ModifyMediaUpload>b__52_0(HttpRequestMessage message);
}
public class Google.Cloud.Storage.V1.UploadValidationException : IOException {
    [CompilerGeneratedAttribute]
private string <ClientSideHash>k__BackingField;
    [CompilerGeneratedAttribute]
private Object <UploadedObject>k__BackingField;
    [CompilerGeneratedAttribute]
private AggregateException <AdditionalFailures>k__BackingField;
    public string ClientSideHash { get; }
    public Object UploadedObject { get; }
    public AggregateException AdditionalFailures { get; }
    public UploadValidationException(string clientSideHash, Object uploadedObject, AggregateException additionalFailures);
    [CompilerGeneratedAttribute]
public string get_ClientSideHash();
    [CompilerGeneratedAttribute]
public Object get_UploadedObject();
    [CompilerGeneratedAttribute]
public AggregateException get_AdditionalFailures();
}
public enum Google.Cloud.Storage.V1.UploadValidationMode : Enum {
    public int value__;
    public static UploadValidationMode None;
    public static UploadValidationMode ThrowOnly;
    public static UploadValidationMode DeleteAndThrow;
}
public class Google.Cloud.Storage.V1.UrlSigner : object {
    private static ISigner s_v2Signer;
    private static ISigner s_v4Signer;
    private static string GoogHeaderPrefix;
    private static string CredentialsDefaultAlgorithm;
    [CompilerGeneratedAttribute]
private static HttpMethod <ResumableHttpMethod>k__BackingField;
    private static DateTimeOffset UnixEpoch;
    private BlobSignerProvider _blobSignerProvider;
    private IClock _clock;
    private DefaultOptionsOverrides _defaultOptionsOverrides;
    private static Regex s_newlineRegex;
    private static Regex s_tabRegex;
    private static Regex s_whitespaceRegex;
    public static HttpMethod ResumableHttpMethod { get; }
    private UrlSigner(BlobSignerProvider blobSignerProvider, IClock clock, DefaultOptionsOverrides defaultOptionsOverrides);
    private static UrlSigner();
    [CompilerGeneratedAttribute]
public static HttpMethod get_ResumableHttpMethod();
    public static UrlSigner FromCredential(ServiceAccountCredential credential);
    public static UrlSigner FromCredential(ImpersonatedCredential credential);
    public static UrlSigner FromCredential(ComputeCredential credential);
    public static UrlSigner FromCredential(GoogleCredential credential);
    internal static UrlSigner FromCredential(IHttpExecuteInterceptor credential);
    public static UrlSigner FromCredentialFile(string credentialFilePath);
    [AsyncStateMachineAttribute("Google.Cloud.Storage.V1.UrlSigner/<FromCredentialFileAsync>d__19")]
public static Task`1<UrlSigner> FromCredentialFileAsync(string credentialFilePath, CancellationToken cancellationToken);
    public static UrlSigner FromCredentialStream(Stream credentialData);
    [AsyncStateMachineAttribute("Google.Cloud.Storage.V1.UrlSigner/<FromCredentialStreamAsync>d__21")]
public static Task`1<UrlSigner> FromCredentialStreamAsync(Stream credentialData, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use FromCredentialFile(string) which is equivalent.")]
public static UrlSigner FromServiceAccountPath(string credentialFilePath);
    [ObsoleteAttribute("Use FromCredentialStream(Stream) which is equivalent.")]
public static UrlSigner FromServiceAccountData(Stream credentialData);
    [ObsoleteAttribute("Use FromCredential(ServiceAccountCredential) which is equivalent.")]
public static UrlSigner FromServiceAccountCredential(ServiceAccountCredential credential);
    public static UrlSigner FromBlobSigner(IBlobSigner signer);
    private static UrlSigner FromBlobSignerAsyncProvider(Func`1<Task`1<IBlobSigner>> signerAsyncProvider);
    internal UrlSigner WithClock(IClock clock);
    internal UrlSigner WithDefaultOptionsOverride(DefaultOptionsOverrides optionsOverrides);
    public string Sign(string bucket, string objectName, TimeSpan duration, HttpMethod httpMethod, Nullable`1<SigningVersion> signingVersion);
    public string Sign(RequestTemplate requestTemplate, Options options);
    public SignedPostPolicy Sign(PostPolicy postPolicy, Options options);
    [AsyncStateMachineAttribute("Google.Cloud.Storage.V1.UrlSigner/<SignAsync>d__32")]
public Task`1<string> SignAsync(string bucket, string objectName, TimeSpan duration, HttpMethod httpMethod, Nullable`1<SigningVersion> signingVersion, CancellationToken cancellationToken);
    public Task`1<string> SignAsync(RequestTemplate requestTemplate, Options options, CancellationToken cancellationToken);
    public Task`1<SignedPostPolicy> SignAsync(PostPolicy postPolicy, Options options, CancellationToken cancellationToken);
    private ISigner GetEffectiveSigner(SigningVersion signingVersion);
    internal static string PrepareHeaderValue(string value, bool collapseTabs);
}
[ExtensionAttribute]
internal static class Google.Cloud.Storage.V1.UrlV4SignerHelperExtensions : object {
    private static IReadOnlyDictionary`2<string, IReadOnlyCollection`1<string>> s_empty;
    private static UrlV4SignerHelperExtensions();
    [ExtensionAttribute]
internal static IReadOnlyDictionary`2<string, IReadOnlyCollection`1<string>> AsReadOnly(IEnumerable`1<KeyValuePair`2<string, IEnumerable`1<string>>> headers);
    [ExtensionAttribute]
internal static IReadOnlyDictionary`2<string, IReadOnlyCollection`1<string>> QueryAsReadOnly(Uri uri);
    [ExtensionAttribute]
internal static void AddHeader(SortedDictionary`2<string, string> canonicalized, string key, string value);
    [ExtensionAttribute]
internal static void AddHeaders(SortedDictionary`2<string, string> canonicalized, IReadOnlyDictionary`2<string, IReadOnlyCollection`1<string>> headersToAdd);
    [ExtensionAttribute]
internal static void AddQueryParameter(SortedSet`1<string> canonicalized, string key, string value);
    [ExtensionAttribute]
internal static void AddQueryParameters(SortedSet`1<string> canonicalized, IReadOnlyDictionary`2<string, IReadOnlyCollection`1<string>> paramsToAdd);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
