[CompilerGeneratedAttribute]
[ExcludeFromCodeCoverageAttribute]
internal static class GitVersionInformation : object {
    public static string Major;
    public static string Minor;
    public static string Patch;
    public static string PreReleaseTag;
    public static string PreReleaseTagWithDash;
    public static string PreReleaseLabel;
    public static string PreReleaseLabelWithDash;
    public static string PreReleaseNumber;
    public static string WeightedPreReleaseNumber;
    public static string BuildMetaData;
    public static string BuildMetaDataPadded;
    public static string FullBuildMetaData;
    public static string MajorMinorPatch;
    public static string SemVer;
    public static string LegacySemVer;
    public static string LegacySemVerPadded;
    public static string AssemblySemVer;
    public static string AssemblySemFileVer;
    public static string FullSemVer;
    public static string InformationalVersion;
    public static string BranchName;
    public static string EscapedBranchName;
    public static string Sha;
    public static string ShortSha;
    public static string NuGetVersionV2;
    public static string NuGetVersion;
    public static string NuGetPreReleaseTagV2;
    public static string NuGetPreReleaseTag;
    public static string VersionSourceSha;
    public static string CommitsSinceVersionSource;
    public static string CommitsSinceVersionSourcePadded;
    public static string UncommittedChanges;
    public static string CommitDate;
    private static GitVersionInformation();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class GraphQL.Client.Abstractions.GraphQLClientExtensions : object {
    [ExtensionAttribute]
public static Task`1<GraphQLResponse`1<TResponse>> SendQueryAsync(IGraphQLClient client, string query, object variables, string operationName, Func`1<TResponse> defineResponseType, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<GraphQLResponse`1<TResponse>> SendQueryAsync(IGraphQLClient client, GraphQLQuery query, object variables, string operationName, Func`1<TResponse> defineResponseType, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<GraphQLResponse`1<TResponse>> SendMutationAsync(IGraphQLClient client, string query, object variables, string operationName, Func`1<TResponse> defineResponseType, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<GraphQLResponse`1<TResponse>> SendMutationAsync(IGraphQLClient client, GraphQLQuery query, object variables, string operationName, Func`1<TResponse> defineResponseType, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<GraphQLResponse`1<TResponse>> SendQueryAsync(IGraphQLClient client, GraphQLRequest request, Func`1<TResponse> defineResponseType, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<GraphQLResponse`1<TResponse>> SendMutationAsync(IGraphQLClient client, GraphQLRequest request, Func`1<TResponse> defineResponseType, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IObservable`1<GraphQLResponse`1<TResponse>> CreateSubscriptionStream(IGraphQLClient client, GraphQLRequest request, Func`1<TResponse> defineResponseType);
    [ExtensionAttribute]
public static IObservable`1<GraphQLResponse`1<TResponse>> CreateSubscriptionStream(IGraphQLClient client, GraphQLRequest request, Func`1<TResponse> defineResponseType, Action`1<Exception> exceptionHandler);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class GraphQL.Client.Abstractions.GraphQLJsonSerializerExtensions : object {
    [ExtensionAttribute]
public static TOptions New(Action`1<TOptions> configure);
    [ExtensionAttribute]
public static TOptions AndReturn(Action`1<TOptions> configure, TOptions options);
}
[NullableContextAttribute("1")]
public interface GraphQL.Client.Abstractions.IGraphQLClient {
    public abstract virtual Task`1<GraphQLResponse`1<TResponse>> SendQueryAsync(GraphQLRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GraphQLResponse`1<TResponse>> SendMutationAsync(GraphQLRequest request, CancellationToken cancellationToken);
    public abstract virtual IObservable`1<GraphQLResponse`1<TResponse>> CreateSubscriptionStream(GraphQLRequest request);
    public abstract virtual IObservable`1<GraphQLResponse`1<TResponse>> CreateSubscriptionStream(GraphQLRequest request, Action`1<Exception> exceptionHandler);
}
[NullableContextAttribute("1")]
public interface GraphQL.Client.Abstractions.IGraphQLJsonSerializer {
    public abstract virtual string SerializeToString(GraphQLRequest request);
    public abstract virtual Task`1<GraphQLResponse`1<TResponse>> DeserializeFromUtf8StreamAsync(Stream stream, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class GraphQL.Client.Abstractions.Utilities.StringExtensions : object {
    [ExtensionAttribute]
public static string StripIndent(string str);
    [ExtensionAttribute]
public static IEnumerable`1<string> ToWords(string str);
    [ExtensionAttribute]
public static string ToUpperFirst(string str);
    [ExtensionAttribute]
public static string ToLowerFirst(string str);
    [ExtensionAttribute]
public static string Capitalize(string str);
    [ExtensionAttribute]
public static string ToCamelCase(string str);
    [ExtensionAttribute]
public static string ToConstantCase(string str);
    [ExtensionAttribute]
public static string ToUpperCase(string str);
    [ExtensionAttribute]
public static string ToLowerCase(string str);
    [ExtensionAttribute]
public static string ToPascalCase(string str);
    [ExtensionAttribute]
public static string ToKebabCase(string str);
    [ExtensionAttribute]
public static string ToSnakeCase(string str);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class GraphQL.Client.Abstractions.Utilities.StringUtils : object {
    private static Regex _reWords;
    private static Regex _reIndent;
    private static StringUtils();
    public static string StripIndent(string str);
    [IteratorStateMachineAttribute("GraphQL.Client.Abstractions.Utilities.StringUtils/<ToWords>d__3")]
public static IEnumerable`1<string> ToWords(string str);
    public static string ToUpperFirst(string str);
    public static string ToLowerFirst(string str);
    public static string Capitalize(string str);
    public static string ToCamelCase(string str);
    public static string ToConstantCase(string str);
    public static string ToUpperCase(string str);
    public static string ToLowerCase(string str);
    public static string ToPascalCase(string str);
    public static string ToKebabCase(string str);
    public static string ToSnakeCase(string str);
    public static string ChangeCase(string str, Func`2<string, string> composer);
    public static string ChangeCase(string str, string sep, Func`2<string, string> composer);
    public static string ChangeCase(string str, Func`3<string, int, string> composer);
    public static string ChangeCase(string str, string sep, Func`3<string, int, string> composer);
    private static string ChangeCaseFirst(string str, Func`2<string, string> change);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
