[CompilerGeneratedAttribute]
[ExcludeFromCodeCoverageAttribute]
internal static class GitVersionInformation : object {
    public static string Major;
    public static string Minor;
    public static string Patch;
    public static string PreReleaseTag;
    public static string PreReleaseTagWithDash;
    public static string PreReleaseLabel;
    public static string PreReleaseLabelWithDash;
    public static string PreReleaseNumber;
    public static string WeightedPreReleaseNumber;
    public static string BuildMetaData;
    public static string BuildMetaDataPadded;
    public static string FullBuildMetaData;
    public static string MajorMinorPatch;
    public static string SemVer;
    public static string LegacySemVer;
    public static string LegacySemVerPadded;
    public static string AssemblySemVer;
    public static string AssemblySemFileVer;
    public static string FullSemVer;
    public static string InformationalVersion;
    public static string BranchName;
    public static string EscapedBranchName;
    public static string Sha;
    public static string ShortSha;
    public static string NuGetVersionV2;
    public static string NuGetVersion;
    public static string NuGetPreReleaseTagV2;
    public static string NuGetPreReleaseTag;
    public static string VersionSourceSha;
    public static string CommitsSinceVersionSource;
    public static string CommitsSinceVersionSourcePadded;
    public static string UncommittedChanges;
    public static string CommitDate;
    private static GitVersionInformation();
}
public class GraphQL.Client.Serializer.SystemTextJson.ConstantCaseJsonNamingPolicy : JsonNamingPolicy {
    [NullableContextAttribute("1")]
public virtual string ConvertName(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class GraphQL.Client.Serializer.SystemTextJson.ConverterHelperExtensions : object {
    [ExtensionAttribute]
public static object ReadNumber(Utf8JsonReader& reader);
    [ExtensionAttribute]
public static bool TryGetBigInteger(Utf8JsonReader& reader, BigInteger& bi);
    [ExtensionAttribute]
public static string GetRawString(Utf8JsonReader& reader);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class GraphQL.Client.Serializer.SystemTextJson.ErrorPathConverter : JsonConverter`1<ErrorPath> {
    public virtual ErrorPath Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, ErrorPath value, JsonSerializerOptions options);
    private static IEnumerable`1<object> ReadArray(Utf8JsonReader& reader);
    [NullableContextAttribute("2")]
private static object ReadValue(Utf8JsonReader& reader);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class GraphQL.Client.Serializer.SystemTextJson.ImmutableConverter : JsonConverter`1<object> {
    public virtual bool CanConvert(Type typeToConvert);
    public virtual object Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, object value, JsonSerializerOptions options);
    private static PropertyInfo[] GetProperties(IReflect typeToConvert);
    private static IReadOnlyDictionary`2<string, PropertyInfo> GetNamedProperties(JsonSerializerOptions options, IEnumerable`1<PropertyInfo> properties);
    private static string ConvertAndNormalizeName(string name, JsonSerializerOptions options);
    private static string NormalizeName(string name, JsonSerializerOptions options);
}
[ExtensionAttribute]
public static class GraphQL.Client.Serializer.SystemTextJson.JsonSerializerOptionsExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static JsonSerializerOptions SetupImmutableConverter(JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class GraphQL.Client.Serializer.SystemTextJson.MapConverter : JsonConverter`1<Map> {
    public virtual Map Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, Map value, JsonSerializerOptions options);
    private static TDictionary ReadDictionary(Utf8JsonReader& reader, TDictionary result);
    private static List`1<object> ReadArray(Utf8JsonReader& reader);
    [NullableContextAttribute("2")]
private static object ReadValue(Utf8JsonReader& reader);
}
internal static class GraphQL.Client.Serializer.SystemTextJson.NameOfPropertyAndParameter : object {
    [NullableContextAttribute("1")]
public static bool Matches(string propertyName, string parameterName, bool anonymousType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.Client.Serializer.SystemTextJson.SystemTextJsonSerializer : object {
    [CompilerGeneratedAttribute]
private JsonSerializerOptions <Options>k__BackingField;
    public static JsonSerializerOptions DefaultJsonSerializerOptions { get; }
    public JsonSerializerOptions Options { get; }
    public SystemTextJsonSerializer(Action`1<JsonSerializerOptions> configure);
    public SystemTextJsonSerializer(JsonSerializerOptions options);
    public static JsonSerializerOptions get_DefaultJsonSerializerOptions();
    [CompilerGeneratedAttribute]
public JsonSerializerOptions get_Options();
    private void ConfigureMandatorySerializerOptions();
    public sealed virtual string SerializeToString(GraphQLRequest request);
    public sealed virtual Task`1<GraphQLResponse`1<TResponse>> DeserializeFromUtf8StreamAsync(Stream stream, CancellationToken cancellationToken);
    public sealed virtual Byte[] SerializeToBytes(GraphQLWebSocketRequest request);
    public sealed virtual Task`1<WebsocketMessageWrapper> DeserializeToWebsocketResponseWrapperAsync(Stream stream);
    public sealed virtual GraphQLWebSocketResponse`1<TResponse> DeserializeToWebsocketResponse(Byte[] bytes);
}
[ExtensionAttribute]
internal static class GraphQL.Client.Serializer.SystemTextJson.TypeExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool IsAnonymous(Type type);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
