[AttributeUsageAttribute("64")]
internal class GraphQL.AllowedOnAttribute`1 : Attribute {
}
[AttributeUsageAttribute("64")]
internal class GraphQL.AllowedOnAttribute`2 : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.MicrosoftDI.ConnectionResolverBuilder`2 : object {
    private ConnectionBuilder`2<TSourceType, TReturnType> _builder;
    private bool _scoped;
    public ConnectionResolverBuilder`2(ConnectionBuilder`2<TSourceType, TReturnType> builder, bool scoped);
    public ConnectionResolverBuilder`3<TSourceType, TReturnType, T1> WithService();
    [NullableContextAttribute("2")]
public ConnectionResolverBuilder`4<TSourceType, TReturnType, T1, T2> WithServices();
    [NullableContextAttribute("2")]
public ConnectionResolverBuilder`5<TSourceType, TReturnType, T1, T2, T3> WithServices();
    [NullableContextAttribute("2")]
public ConnectionResolverBuilder`6<TSourceType, TReturnType, T1, T2, T3, T4> WithServices();
    [NullableContextAttribute("2")]
public ConnectionResolverBuilder`7<TSourceType, TReturnType, T1, T2, T3, T4, T5> WithServices();
    public ConnectionResolverBuilder`2<TSourceType, TReturnType> WithScope();
    public ConnectionBuilder`2<TSourceType, TReturnType> Resolve(Func`2<IResolveConnectionContext`1<TSourceType>, TReturnType> resolver);
    public ConnectionBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`2<IResolveConnectionContext`1<TSourceType>, Task`1<TReturnType>> resolver);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.MicrosoftDI.ConnectionResolverBuilder`3 : object {
    private ConnectionBuilder`2<TSourceType, TReturnType> _builder;
    private bool _scoped;
    public ConnectionResolverBuilder`3(ConnectionBuilder`2<TSourceType, TReturnType> builder, bool scoped);
    public ConnectionResolverBuilder`4<TSourceType, TReturnType, T1, T2> WithService();
    public ConnectionResolverBuilder`3<TSourceType, TReturnType, T1> WithScope();
    public ConnectionBuilder`2<TSourceType, TReturnType> Resolve(Func`3<IResolveConnectionContext`1<TSourceType>, T1, TReturnType> resolver);
    public ConnectionBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`3<IResolveConnectionContext`1<TSourceType>, T1, Task`1<TReturnType>> resolver);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.MicrosoftDI.ConnectionResolverBuilder`4 : object {
    private ConnectionBuilder`2<TSourceType, TReturnType> _builder;
    private bool _scoped;
    public ConnectionResolverBuilder`4(ConnectionBuilder`2<TSourceType, TReturnType> builder, bool scoped);
    public ConnectionResolverBuilder`5<TSourceType, TReturnType, T1, T2, T3> WithService();
    public ConnectionResolverBuilder`4<TSourceType, TReturnType, T1, T2> WithScope();
    public ConnectionBuilder`2<TSourceType, TReturnType> Resolve(Func`4<IResolveConnectionContext`1<TSourceType>, T1, T2, TReturnType> resolver);
    public ConnectionBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`4<IResolveConnectionContext`1<TSourceType>, T1, T2, Task`1<TReturnType>> resolver);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.MicrosoftDI.ConnectionResolverBuilder`5 : object {
    private ConnectionBuilder`2<TSourceType, TReturnType> _builder;
    private bool _scoped;
    public ConnectionResolverBuilder`5(ConnectionBuilder`2<TSourceType, TReturnType> builder, bool scoped);
    public ConnectionResolverBuilder`6<TSourceType, TReturnType, T1, T2, T3, T4> WithService();
    public ConnectionResolverBuilder`5<TSourceType, TReturnType, T1, T2, T3> WithScope();
    public ConnectionBuilder`2<TSourceType, TReturnType> Resolve(Func`5<IResolveConnectionContext`1<TSourceType>, T1, T2, T3, TReturnType> resolver);
    public ConnectionBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`5<IResolveConnectionContext`1<TSourceType>, T1, T2, T3, Task`1<TReturnType>> resolver);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.MicrosoftDI.ConnectionResolverBuilder`6 : object {
    private ConnectionBuilder`2<TSourceType, TReturnType> _builder;
    private bool _scoped;
    public ConnectionResolverBuilder`6(ConnectionBuilder`2<TSourceType, TReturnType> builder, bool scoped);
    public ConnectionResolverBuilder`7<TSourceType, TReturnType, T1, T2, T3, T4, T5> WithService();
    public ConnectionResolverBuilder`6<TSourceType, TReturnType, T1, T2, T3, T4> WithScope();
    public ConnectionBuilder`2<TSourceType, TReturnType> Resolve(Func`6<IResolveConnectionContext`1<TSourceType>, T1, T2, T3, T4, TReturnType> resolver);
    public ConnectionBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`6<IResolveConnectionContext`1<TSourceType>, T1, T2, T3, T4, Task`1<TReturnType>> resolver);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class GraphQL.MicrosoftDI.ConnectionResolverBuilder`7 : object {
    [NullableAttribute("1")]
private ConnectionBuilder`2<TSourceType, TReturnType> _builder;
    private bool _scoped;
    [NullableContextAttribute("1")]
public ConnectionResolverBuilder`7(ConnectionBuilder`2<TSourceType, TReturnType> builder, bool scoped);
    [NullableContextAttribute("1")]
public ConnectionResolverBuilder`7<TSourceType, TReturnType, T1, T2, T3, T4, T5> WithScope();
    [NullableContextAttribute("1")]
public ConnectionBuilder`2<TSourceType, TReturnType> Resolve(Func`7<IResolveConnectionContext`1<TSourceType>, T1, T2, T3, T4, T5, TReturnType> resolver);
    [NullableContextAttribute("1")]
public ConnectionBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`7<IResolveConnectionContext`1<TSourceType>, T1, T2, T3, T4, T5, Task`1<TReturnType>> resolver);
}
internal class GraphQL.MicrosoftDI.DynamicScopedFieldResolver : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`2<IResolveFieldContext, ValueTask`1<object>> _resolverFunc;
    [NullableContextAttribute("1")]
public DynamicScopedFieldResolver(IFieldResolver resolver);
    [NullableContextAttribute("1")]
public sealed virtual ValueTask`1<object> ResolveAsync(IResolveFieldContext context);
}
internal class GraphQL.MicrosoftDI.DynamicScopedSourceStreamResolver : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`2<IResolveFieldContext, ValueTask`1<IObservable`1<object>>> _resolverFunc;
    [NullableContextAttribute("1")]
public DynamicScopedSourceStreamResolver(ISourceStreamResolver resolver);
    [NullableContextAttribute("1")]
public sealed virtual ValueTask`1<IObservable`1<object>> ResolveAsync(IResolveFieldContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.MicrosoftDI.GraphQLBuilder : GraphQLBuilderBase {
    [CompilerGeneratedAttribute]
private IServiceCollection <ServiceCollection>k__BackingField;
    public IServiceRegister Services { get; }
    public IServiceCollection ServiceCollection { get; }
    private int System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Count { get; }
    private bool System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.IsReadOnly { get; }
    private ServiceDescriptor System.Collections.Generic.IList<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Item { get; private set; }
    public GraphQLBuilder(IServiceCollection services, Action`1<IGraphQLBuilder> configure);
    public virtual IServiceRegister get_Services();
    [CompilerGeneratedAttribute]
public IServiceCollection get_ServiceCollection();
    protected virtual void RegisterDefaultServices();
    private static ServiceLifetime TranslateLifetime(ServiceLifetime serviceLifetime);
    public sealed virtual IServiceRegister Configure(Action`2<TOptions, IServiceProvider> action);
    public sealed virtual IServiceRegister Register(Type serviceType, Func`2<IServiceProvider, object> implementationFactory, ServiceLifetime serviceLifetime, bool replace);
    public sealed virtual IServiceRegister Register(Type serviceType, Type implementationType, ServiceLifetime serviceLifetime, bool replace);
    public sealed virtual IServiceRegister Register(Type serviceType, object implementationInstance, bool replace);
    public sealed virtual IServiceRegister TryRegister(Type serviceType, Func`2<IServiceProvider, object> implementationFactory, ServiceLifetime serviceLifetime, RegistrationCompareMode mode);
    public sealed virtual IServiceRegister TryRegister(Type serviceType, Type implementationType, ServiceLifetime serviceLifetime, RegistrationCompareMode mode);
    public sealed virtual IServiceRegister TryRegister(Type serviceType, object implementationInstance, RegistrationCompareMode mode);
    private sealed virtual override int System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.get_Count();
    private sealed virtual override bool System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.get_IsReadOnly();
    private sealed virtual override ServiceDescriptor System.Collections.Generic.IList<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.get_Item(int index);
    private sealed virtual override void System.Collections.Generic.IList<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.set_Item(int index, ServiceDescriptor value);
    private sealed virtual override int System.Collections.Generic.IList<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.IndexOf(ServiceDescriptor item);
    private sealed virtual override void System.Collections.Generic.IList<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Insert(int index, ServiceDescriptor item);
    private sealed virtual override void System.Collections.Generic.IList<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.RemoveAt(int index);
    private sealed virtual override void System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Add(ServiceDescriptor item);
    private sealed virtual override void System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Clear();
    private sealed virtual override bool System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Contains(ServiceDescriptor item);
    private sealed virtual override void System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.CopyTo(ServiceDescriptor[] array, int arrayIndex);
    private sealed virtual override bool System.Collections.Generic.ICollection<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.Remove(ServiceDescriptor item);
    private sealed virtual override IEnumerator`1<ServiceDescriptor> System.Collections.Generic.IEnumerable<Microsoft.Extensions.DependencyInjection.ServiceDescriptor>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.MicrosoftDI.ResolverBuilder`2 : object {
    private FieldBuilder`2<TSourceType, TReturnType> _builder;
    private bool _scoped;
    public ResolverBuilder`2(FieldBuilder`2<TSourceType, TReturnType> builder, bool scoped);
    public ResolverBuilder`3<TSourceType, TReturnType, T1> WithService();
    [NullableContextAttribute("2")]
public ResolverBuilder`4<TSourceType, TReturnType, T1, T2> WithServices();
    [NullableContextAttribute("2")]
public ResolverBuilder`5<TSourceType, TReturnType, T1, T2, T3> WithServices();
    [NullableContextAttribute("2")]
public ResolverBuilder`6<TSourceType, TReturnType, T1, T2, T3, T4> WithServices();
    [NullableContextAttribute("2")]
public ResolverBuilder`7<TSourceType, TReturnType, T1, T2, T3, T4, T5> WithServices();
    public ResolverBuilder`2<TSourceType, TReturnType> WithScope();
    public FieldBuilder`2<TSourceType, TReturnType> Resolve(Func`2<IResolveFieldContext`1<TSourceType>, TReturnType> resolver);
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`2<IResolveFieldContext`1<TSourceType>, Task`1<TReturnType>> resolver);
    private ResolverBuilder`2<TSourceType, IDataLoaderResult`1<TReturnType>> ReturnsDataLoader();
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`2<IResolveFieldContext`1<TSourceType>, IDataLoaderResult`1<TReturnType>> resolver);
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`2<IResolveFieldContext`1<TSourceType>, IDataLoaderResult`1<IDataLoaderResult`1<TReturnType>>> resolver);
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`2<IResolveFieldContext`1<TSourceType>, IDataLoaderResult`1<IDataLoaderResult`1<IDataLoaderResult`1<TReturnType>>>> resolver);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.MicrosoftDI.ResolverBuilder`3 : object {
    private FieldBuilder`2<TSourceType, TReturnType> _builder;
    private bool _scoped;
    public ResolverBuilder`3(FieldBuilder`2<TSourceType, TReturnType> builder, bool scoped);
    public ResolverBuilder`4<TSourceType, TReturnType, T1, T2> WithService();
    public ResolverBuilder`3<TSourceType, TReturnType, T1> WithScope();
    public FieldBuilder`2<TSourceType, TReturnType> Resolve(Func`3<IResolveFieldContext`1<TSourceType>, T1, TReturnType> resolver);
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`3<IResolveFieldContext`1<TSourceType>, T1, Task`1<TReturnType>> resolver);
    private ResolverBuilder`3<TSourceType, IDataLoaderResult`1<TReturnType>, T1> ReturnsDataLoader();
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`3<IResolveFieldContext`1<TSourceType>, T1, IDataLoaderResult`1<TReturnType>> resolver);
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`3<IResolveFieldContext`1<TSourceType>, T1, IDataLoaderResult`1<IDataLoaderResult`1<TReturnType>>> resolver);
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`3<IResolveFieldContext`1<TSourceType>, T1, IDataLoaderResult`1<IDataLoaderResult`1<IDataLoaderResult`1<TReturnType>>>> resolver);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.MicrosoftDI.ResolverBuilder`4 : object {
    private FieldBuilder`2<TSourceType, TReturnType> _builder;
    private bool _scoped;
    public ResolverBuilder`4(FieldBuilder`2<TSourceType, TReturnType> builder, bool scoped);
    public ResolverBuilder`5<TSourceType, TReturnType, T1, T2, T3> WithService();
    public ResolverBuilder`4<TSourceType, TReturnType, T1, T2> WithScope();
    public FieldBuilder`2<TSourceType, TReturnType> Resolve(Func`4<IResolveFieldContext`1<TSourceType>, T1, T2, TReturnType> resolver);
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`4<IResolveFieldContext`1<TSourceType>, T1, T2, Task`1<TReturnType>> resolver);
    private ResolverBuilder`4<TSourceType, IDataLoaderResult`1<TReturnType>, T1, T2> ReturnsDataLoader();
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`4<IResolveFieldContext`1<TSourceType>, T1, T2, IDataLoaderResult`1<TReturnType>> resolver);
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`4<IResolveFieldContext`1<TSourceType>, T1, T2, IDataLoaderResult`1<IDataLoaderResult`1<TReturnType>>> resolver);
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`4<IResolveFieldContext`1<TSourceType>, T1, T2, IDataLoaderResult`1<IDataLoaderResult`1<IDataLoaderResult`1<TReturnType>>>> resolver);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.MicrosoftDI.ResolverBuilder`5 : object {
    private FieldBuilder`2<TSourceType, TReturnType> _builder;
    private bool _scoped;
    public ResolverBuilder`5(FieldBuilder`2<TSourceType, TReturnType> builder, bool scoped);
    public ResolverBuilder`6<TSourceType, TReturnType, T1, T2, T3, T4> WithService();
    public ResolverBuilder`5<TSourceType, TReturnType, T1, T2, T3> WithScope();
    public FieldBuilder`2<TSourceType, TReturnType> Resolve(Func`5<IResolveFieldContext`1<TSourceType>, T1, T2, T3, TReturnType> resolver);
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`5<IResolveFieldContext`1<TSourceType>, T1, T2, T3, Task`1<TReturnType>> resolver);
    private ResolverBuilder`5<TSourceType, IDataLoaderResult`1<TReturnType>, T1, T2, T3> ReturnsDataLoader();
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`5<IResolveFieldContext`1<TSourceType>, T1, T2, T3, IDataLoaderResult`1<TReturnType>> resolver);
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`5<IResolveFieldContext`1<TSourceType>, T1, T2, T3, IDataLoaderResult`1<IDataLoaderResult`1<TReturnType>>> resolver);
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`5<IResolveFieldContext`1<TSourceType>, T1, T2, T3, IDataLoaderResult`1<IDataLoaderResult`1<IDataLoaderResult`1<TReturnType>>>> resolver);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.MicrosoftDI.ResolverBuilder`6 : object {
    private FieldBuilder`2<TSourceType, TReturnType> _builder;
    private bool _scoped;
    public ResolverBuilder`6(FieldBuilder`2<TSourceType, TReturnType> builder, bool scoped);
    public ResolverBuilder`7<TSourceType, TReturnType, T1, T2, T3, T4, T5> WithService();
    public ResolverBuilder`6<TSourceType, TReturnType, T1, T2, T3, T4> WithScope();
    public FieldBuilder`2<TSourceType, TReturnType> Resolve(Func`6<IResolveFieldContext`1<TSourceType>, T1, T2, T3, T4, TReturnType> resolver);
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`6<IResolveFieldContext`1<TSourceType>, T1, T2, T3, T4, Task`1<TReturnType>> resolver);
    private ResolverBuilder`6<TSourceType, IDataLoaderResult`1<TReturnType>, T1, T2, T3, T4> ReturnsDataLoader();
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`6<IResolveFieldContext`1<TSourceType>, T1, T2, T3, T4, IDataLoaderResult`1<TReturnType>> resolver);
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`6<IResolveFieldContext`1<TSourceType>, T1, T2, T3, T4, IDataLoaderResult`1<IDataLoaderResult`1<TReturnType>>> resolver);
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`6<IResolveFieldContext`1<TSourceType>, T1, T2, T3, T4, IDataLoaderResult`1<IDataLoaderResult`1<IDataLoaderResult`1<TReturnType>>>> resolver);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.MicrosoftDI.ResolverBuilder`7 : object {
    private FieldBuilder`2<TSourceType, TReturnType> _builder;
    private bool _scoped;
    public ResolverBuilder`7(FieldBuilder`2<TSourceType, TReturnType> builder, bool scoped);
    public ResolverBuilder`7<TSourceType, TReturnType, T1, T2, T3, T4, T5> WithScope();
    public FieldBuilder`2<TSourceType, TReturnType> Resolve(Func`7<IResolveFieldContext`1<TSourceType>, T1, T2, T3, T4, T5, TReturnType> resolver);
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`7<IResolveFieldContext`1<TSourceType>, T1, T2, T3, T4, T5, Task`1<TReturnType>> resolver);
    private ResolverBuilder`7<TSourceType, IDataLoaderResult`1<TReturnType>, T1, T2, T3, T4, T5> ReturnsDataLoader();
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`7<IResolveFieldContext`1<TSourceType>, T1, T2, T3, T4, T5, IDataLoaderResult`1<TReturnType>> resolver);
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`7<IResolveFieldContext`1<TSourceType>, T1, T2, T3, T4, T5, IDataLoaderResult`1<IDataLoaderResult`1<TReturnType>>> resolver);
    public FieldBuilder`2<TSourceType, TReturnType> ResolveAsync(Func`7<IResolveFieldContext`1<TSourceType>, T1, T2, T3, T4, T5, IDataLoaderResult`1<IDataLoaderResult`1<IDataLoaderResult`1<TReturnType>>>> resolver);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class GraphQL.MicrosoftDI.ScopedConnectionBuilderExtensions : object {
    [ExtensionAttribute]
public static ConnectionBuilder`1<TSourceType> ResolveScoped(ConnectionBuilder`1<TSourceType> builder, Func`2<IResolveConnectionContext`1<TSourceType>, TReturnType> resolver);
    [ExtensionAttribute]
public static ConnectionBuilder`1<TSourceType> ResolveScopedAsync(ConnectionBuilder`1<TSourceType> builder, Func`2<IResolveConnectionContext`1<TSourceType>, Task`1<TReturnType>> resolver);
    [ExtensionAttribute]
public static ConnectionResolverBuilder`2<TSourceType, object> Resolve(ConnectionBuilder`1<TSourceType> builder);
    [ExtensionAttribute]
public static ConnectionBuilder`2<TSourceType, TReturnType> ResolveScoped(ConnectionBuilder`2<TSourceType, TReturnType> builder, Func`2<IResolveConnectionContext`1<TSourceType>, TReturnType> resolver);
    [ExtensionAttribute]
public static ConnectionBuilder`2<TSourceType, TReturnType> ResolveScopedAsync(ConnectionBuilder`2<TSourceType, TReturnType> builder, Func`2<IResolveConnectionContext`1<TSourceType>, Task`1<TReturnType>> resolver);
    [ExtensionAttribute]
public static ConnectionResolverBuilder`2<TSourceType, TReturnType> Resolve(ConnectionBuilder`2<TSourceType, TReturnType> builder);
    [ExtensionAttribute]
internal static IServiceProvider RequestServicesOrThrow(IResolveFieldContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class GraphQL.MicrosoftDI.ScopedFieldBuilderExtensions : object {
    [ExtensionAttribute]
[AllowedOnAttribute`1]
public static FieldBuilder`2<TSourceType, TReturnType> ResolveScoped(FieldBuilder`2<TSourceType, TReturnType> builder, Func`2<IResolveFieldContext`1<TSourceType>, TReturnType> resolver);
    [ExtensionAttribute]
[AllowedOnAttribute`1]
public static FieldBuilder`2<TSourceType, TReturnType> ResolveScopedAsync(FieldBuilder`2<TSourceType, TReturnType> builder, Func`2<IResolveFieldContext`1<TSourceType>, Task`1<TReturnType>> resolver);
    [ExtensionAttribute]
[AllowedOnAttribute`1]
public static ResolverBuilder`2<TSourceType, TReturnType> Resolve(FieldBuilder`2<TSourceType, TReturnType> builder);
    [ExtensionAttribute]
internal static FieldBuilder`2<TSourceType, IDataLoaderResult`1<TReturnType>> ReturnsDataLoader(FieldBuilder`2<TSourceType, TReturnType> builder);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class GraphQL.MicrosoftDI.ScopedFieldResolver`1 : FuncFieldResolver`1<TReturnType> {
    public ScopedFieldResolver`1(Func`2<IResolveFieldContext, TReturnType> resolver);
    public ScopedFieldResolver`1(Func`2<IResolveFieldContext, ValueTask`1<TReturnType>> resolver);
    private static Func`2<IResolveFieldContext, TReturnType> GetScopedResolver(Func`2<IResolveFieldContext, TReturnType> resolver);
    private static Func`2<IResolveFieldContext, ValueTask`1<TReturnType>> GetScopedResolver(Func`2<IResolveFieldContext, ValueTask`1<TReturnType>> resolver);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class GraphQL.MicrosoftDI.ScopedFieldResolver`2 : FuncFieldResolver`1<TReturnType> {
    public ScopedFieldResolver`2(Func`2<IResolveFieldContext`1<TSourceType>, TReturnType> resolver);
    public ScopedFieldResolver`2(Func`2<IResolveFieldContext`1<TSourceType>, ValueTask`1<TReturnType>> resolver);
    private static Func`2<IResolveFieldContext, TReturnType> GetScopedResolver(Func`2<IResolveFieldContext`1<TSourceType>, TReturnType> resolver);
    private static Func`2<IResolveFieldContext, ValueTask`1<TReturnType>> GetScopedResolver(Func`2<IResolveFieldContext`1<TSourceType>, ValueTask`1<TReturnType>> resolver);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GraphQL.MicrosoftDI.ScopedResolveConnectionContextAdapter`1 : object {
    private IResolveConnectionContext`1<TSource> _baseContext;
    [CompilerGeneratedAttribute]
private IServiceProvider <RequestServices>k__BackingField;
    public TSource Source { get; }
    public GraphQLField FieldAst { get; }
    public FieldType FieldDefinition { get; }
    public IObjectGraphType ParentType { get; }
    [NullableAttribute("2")]
public IResolveFieldContext Parent { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, ArgumentValue> Arguments { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, DirectiveInfo> Directives { get; }
    [NullableAttribute("2")]
public object RootValue { get; }
    public ISchema Schema { get; }
    public GraphQLDocument Document { get; }
    public GraphQLOperationDefinition Operation { get; }
    public Variables Variables { get; }
    public CancellationToken CancellationToken { get; }
    public Metrics Metrics { get; }
    public ExecutionErrors Errors { get; }
    public IEnumerable`1<object> Path { get; }
    public IEnumerable`1<object> ResponsePath { get; }
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Dictionary`2<string, ValueTuple`2<GraphQLField, FieldType>> SubFields { get; }
    public IServiceProvider RequestServices { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, object> UserContext { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyDictionary`2<string, object> InputExtensions { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, object> OutputExtensions { get; }
    [NullableAttribute("2")]
private object GraphQL.IResolveFieldContext.Source { get; }
    public IExecutionArrayPool ArrayPool { get; }
    public bool IsUnidirectional { get; }
    public Nullable`1<int> First { get; }
    public Nullable`1<int> Last { get; }
    [NullableAttribute("2")]
public string After { get; }
    [NullableAttribute("2")]
public string Before { get; }
    public Nullable`1<int> PageSize { get; }
    [NullableAttribute("2")]
public ClaimsPrincipal User { get; }
    public IExecutionContext ExecutionContext { get; }
    public ScopedResolveConnectionContextAdapter`1(IResolveConnectionContext`1<TSource> baseContext, IServiceProvider serviceProvider);
    public sealed virtual TSource get_Source();
    public sealed virtual GraphQLField get_FieldAst();
    public sealed virtual FieldType get_FieldDefinition();
    public sealed virtual IObjectGraphType get_ParentType();
    [NullableContextAttribute("2")]
public sealed virtual IResolveFieldContext get_Parent();
    public sealed virtual IDictionary`2<string, ArgumentValue> get_Arguments();
    public sealed virtual IDictionary`2<string, DirectiveInfo> get_Directives();
    [NullableContextAttribute("2")]
public sealed virtual object get_RootValue();
    public sealed virtual ISchema get_Schema();
    public sealed virtual GraphQLDocument get_Document();
    public sealed virtual GraphQLOperationDefinition get_Operation();
    public sealed virtual Variables get_Variables();
    public sealed virtual CancellationToken get_CancellationToken();
    public sealed virtual Metrics get_Metrics();
    public sealed virtual ExecutionErrors get_Errors();
    public sealed virtual IEnumerable`1<object> get_Path();
    public sealed virtual IEnumerable`1<object> get_ResponsePath();
    public sealed virtual Dictionary`2<string, ValueTuple`2<GraphQLField, FieldType>> get_SubFields();
    [CompilerGeneratedAttribute]
public sealed virtual IServiceProvider get_RequestServices();
    public sealed virtual IDictionary`2<string, object> get_UserContext();
    public sealed virtual IReadOnlyDictionary`2<string, object> get_InputExtensions();
    public sealed virtual IDictionary`2<string, object> get_OutputExtensions();
    [NullableContextAttribute("2")]
private sealed virtual override object GraphQL.IResolveFieldContext.get_Source();
    public sealed virtual IExecutionArrayPool get_ArrayPool();
    public sealed virtual bool get_IsUnidirectional();
    public sealed virtual Nullable`1<int> get_First();
    public sealed virtual Nullable`1<int> get_Last();
    [NullableContextAttribute("2")]
public sealed virtual string get_After();
    [NullableContextAttribute("2")]
public sealed virtual string get_Before();
    public sealed virtual Nullable`1<int> get_PageSize();
    [NullableContextAttribute("2")]
public sealed virtual ClaimsPrincipal get_User();
    public sealed virtual IExecutionContext get_ExecutionContext();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GraphQL.MicrosoftDI.ScopedResolveFieldContextAdapter`1 : object {
    private static bool _acceptNulls;
    private IResolveFieldContext _baseContext;
    [CompilerGeneratedAttribute]
private TSource <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceProvider <RequestServices>k__BackingField;
    public TSource Source { get; }
    public GraphQLField FieldAst { get; }
    public FieldType FieldDefinition { get; }
    public IObjectGraphType ParentType { get; }
    [NullableAttribute("2")]
public IResolveFieldContext Parent { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, ArgumentValue> Arguments { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, DirectiveInfo> Directives { get; }
    [NullableAttribute("2")]
public object RootValue { get; }
    public ISchema Schema { get; }
    public GraphQLDocument Document { get; }
    public GraphQLOperationDefinition Operation { get; }
    public Variables Variables { get; }
    public CancellationToken CancellationToken { get; }
    public Metrics Metrics { get; }
    public ExecutionErrors Errors { get; }
    public IEnumerable`1<object> Path { get; }
    public IEnumerable`1<object> ResponsePath { get; }
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Dictionary`2<string, ValueTuple`2<GraphQLField, FieldType>> SubFields { get; }
    public IServiceProvider RequestServices { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, object> UserContext { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyDictionary`2<string, object> InputExtensions { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, object> OutputExtensions { get; }
    [NullableAttribute("2")]
private object GraphQL.IResolveFieldContext.Source { get; }
    public IExecutionArrayPool ArrayPool { get; }
    [NullableAttribute("2")]
public ClaimsPrincipal User { get; }
    public IExecutionContext ExecutionContext { get; }
    public ScopedResolveFieldContextAdapter`1(IResolveFieldContext baseContext, IServiceProvider serviceProvider);
    private static ScopedResolveFieldContextAdapter`1();
    [CompilerGeneratedAttribute]
public sealed virtual TSource get_Source();
    public sealed virtual GraphQLField get_FieldAst();
    public sealed virtual FieldType get_FieldDefinition();
    public sealed virtual IObjectGraphType get_ParentType();
    [NullableContextAttribute("2")]
public sealed virtual IResolveFieldContext get_Parent();
    public sealed virtual IDictionary`2<string, ArgumentValue> get_Arguments();
    public sealed virtual IDictionary`2<string, DirectiveInfo> get_Directives();
    [NullableContextAttribute("2")]
public sealed virtual object get_RootValue();
    public sealed virtual ISchema get_Schema();
    public sealed virtual GraphQLDocument get_Document();
    public sealed virtual GraphQLOperationDefinition get_Operation();
    public sealed virtual Variables get_Variables();
    public sealed virtual CancellationToken get_CancellationToken();
    public sealed virtual Metrics get_Metrics();
    public sealed virtual ExecutionErrors get_Errors();
    public sealed virtual IEnumerable`1<object> get_Path();
    public sealed virtual IEnumerable`1<object> get_ResponsePath();
    public sealed virtual Dictionary`2<string, ValueTuple`2<GraphQLField, FieldType>> get_SubFields();
    [CompilerGeneratedAttribute]
public sealed virtual IServiceProvider get_RequestServices();
    public sealed virtual IDictionary`2<string, object> get_UserContext();
    public sealed virtual IReadOnlyDictionary`2<string, object> get_InputExtensions();
    public sealed virtual IDictionary`2<string, object> get_OutputExtensions();
    [NullableContextAttribute("2")]
private sealed virtual override object GraphQL.IResolveFieldContext.get_Source();
    public sealed virtual IExecutionArrayPool get_ArrayPool();
    [NullableContextAttribute("2")]
public sealed virtual ClaimsPrincipal get_User();
    public sealed virtual IExecutionContext get_ExecutionContext();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.MicrosoftDI.ScopedSubscriptionExecutionStrategy : SubscriptionExecutionStrategy {
    private IServiceScopeFactory _serviceScopeFactory;
    public ScopedSubscriptionExecutionStrategy(IServiceScopeFactory serviceScopeFactory);
    public ScopedSubscriptionExecutionStrategy(IServiceScopeFactory serviceScopeFactory, IExecutionStrategy executionStrategy);
    protected virtual ExecutionContext CloneExecutionContext(ExecutionContext context, CancellationToken token);
    [AsyncStateMachineAttribute("GraphQL.MicrosoftDI.ScopedSubscriptionExecutionStrategy/<ProcessDataAsync>d__4")]
protected virtual ValueTask`1<ExecutionResult> ProcessDataAsync(ExecutionContext context, ExecutionNode node, object value);
    protected virtual Task`1<ExecutionError> ProcessErrorAsync(ExecutionContext context, ExecutionNode node, Exception exception);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private ValueTask`1<ExecutionResult> <>n__0(ExecutionContext context, ExecutionNode node, object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.MicrosoftDI.SelfActivatingServiceProvider : object {
    private IServiceProvider _serviceProvider;
    public SelfActivatingServiceProvider(IServiceProvider serviceProvider);
    public sealed virtual object GetService(Type serviceType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class GraphQL.MicrosoftDIGraphQLBuilderExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddGraphQL(IServiceCollection services, Action`1<IGraphQLBuilder> configure);
    [ExtensionAttribute]
public static IGraphQLBuilder AddSelfActivatingSchema(IGraphQLBuilder builder, ServiceLifetime serviceLifetime);
    [ExtensionAttribute]
public static IGraphQLBuilder AddScopedSubscriptionExecutionStrategy(IGraphQLBuilder builder, bool serialExecution);
}
[AttributeUsageAttribute("16384")]
internal class GraphQL.NotAGraphTypeAttribute : Attribute {
}
[AttributeUsageAttribute("1024")]
internal class GraphQL.RequireParameterlessConstructorAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
public class GraphQL.ScopedAttribute : GraphQLAttribute {
    [NullableContextAttribute("1")]
public virtual void Modify(FieldType fieldType, bool isInputType);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("28108")]
[ExcludeFromCodeCoverageAttribute]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute : Attribute {
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public DynamicallyAccessedMembersAttribute(DynamicallyAccessedMemberTypes memberTypes);
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
}
[FlagsAttribute]
internal enum System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes : Enum {
    public int value__;
    public static DynamicallyAccessedMemberTypes None;
    public static DynamicallyAccessedMemberTypes PublicParameterlessConstructor;
    public static DynamicallyAccessedMemberTypes PublicConstructors;
    public static DynamicallyAccessedMemberTypes NonPublicConstructors;
    public static DynamicallyAccessedMemberTypes PublicMethods;
    public static DynamicallyAccessedMemberTypes NonPublicMethods;
    public static DynamicallyAccessedMemberTypes PublicFields;
    public static DynamicallyAccessedMemberTypes NonPublicFields;
    public static DynamicallyAccessedMemberTypes PublicNestedTypes;
    public static DynamicallyAccessedMemberTypes NonPublicNestedTypes;
    public static DynamicallyAccessedMemberTypes PublicProperties;
    public static DynamicallyAccessedMemberTypes NonPublicProperties;
    public static DynamicallyAccessedMemberTypes PublicEvents;
    public static DynamicallyAccessedMemberTypes NonPublicEvents;
    public static DynamicallyAccessedMemberTypes Interfaces;
    public static DynamicallyAccessedMemberTypes All;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("352")]
[ExcludeFromCodeCoverageAttribute]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <MemberSignature>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssemblyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Condition>k__BackingField;
    public string MemberSignature { get; }
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public Type Type { get; }
    public string TypeName { get; }
    public string AssemblyName { get; }
    public string Condition { get; public set; }
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature, Type type);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(string memberSignature, string typeName, string assemblyName);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, Type type);
    [NullableContextAttribute("1")]
public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, string typeName, string assemblyName);
    [CompilerGeneratedAttribute]
public string get_MemberSignature();
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public string get_AssemblyName();
    [CompilerGeneratedAttribute]
public string get_Condition();
    [CompilerGeneratedAttribute]
public void set_Condition(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("6143")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.ExperimentalAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <DiagnosticId>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <UrlFormat>k__BackingField;
    public string DiagnosticId { get; }
    [NullableAttribute("2")]
public string UrlFormat { get; public set; }
    public ExperimentalAttribute(string diagnosticId);
    [CompilerGeneratedAttribute]
public string get_DiagnosticId();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_UrlFormat();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_UrlFormat(string value);
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("736")]
[ExcludeFromCodeCoverageAttribute]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Diagnostics.CodeAnalysis.RequiresAssemblyFilesAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    public string Url { get; public set; }
    [NullableContextAttribute("1")]
public RequiresAssemblyFilesAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
[ExcludeFromCodeCoverageAttribute]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresDynamicCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Url(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("100")]
[ExcludeFromCodeCoverageAttribute]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    [NullableAttribute("2")]
public string Url { get; public set; }
    public RequiresUnreferencedCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Url(string value);
}
[AttributeUsageAttribute("32")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.StringSyntaxAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Syntax>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Object[] <Arguments>k__BackingField;
    public static string CompositeFormat;
    public static string DateOnlyFormat;
    public static string DateTimeFormat;
    public static string EnumFormat;
    public static string GuidFormat;
    public static string Json;
    public static string NumericFormat;
    public static string Regex;
    public static string TimeOnlyFormat;
    public static string TimeSpanFormat;
    public static string Uri;
    public static string Xml;
    public string Syntax { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object[] Arguments { get; }
    public StringSyntaxAttribute(string syntax);
    public StringSyntaxAttribute(string syntax, Object[] arguments);
    [CompilerGeneratedAttribute]
public string get_Syntax();
    [CompilerGeneratedAttribute]
public Object[] get_Arguments();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
[ExcludeFromCodeCoverageAttribute]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute : Attribute {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <CheckId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Justification>k__BackingField;
    [NullableAttribute("1")]
public string Category { get; }
    [NullableAttribute("1")]
public string CheckId { get; }
    public string Scope { get; public set; }
    public string Target { get; public set; }
    public string MessageId { get; public set; }
    public string Justification { get; public set; }
    [NullableContextAttribute("1")]
public UnconditionalSuppressMessageAttribute(string category, string checkId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Category();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_CheckId();
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public string get_MessageId();
    [CompilerGeneratedAttribute]
public void set_MessageId(string value);
    [CompilerGeneratedAttribute]
public string get_Justification();
    [CompilerGeneratedAttribute]
public void set_Justification(string value);
}
[AttributeUsageAttribute("2240")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.UnscopedRefAttribute : Attribute {
}
[AttributeUsageAttribute("108")]
[ExcludeFromCodeCoverageAttribute]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Diagnostics.StackTraceHiddenAttribute : Attribute {
}
[IsReadOnlyAttribute]
[ExcludeFromCodeCoverageAttribute]
internal class System.Index : ValueType {
    private int _value;
    public static Index Start { get; }
    public static Index End { get; }
    public int Value { get; }
    public bool IsFromEnd { get; }
    public Index(int value, bool fromEnd);
    private Index(int value);
    public static Index get_Start();
    public static Index get_End();
    public static Index FromStart(int value);
    public static Index FromEnd(int value);
    public int get_Value();
    public bool get_IsFromEnd();
    public int GetOffset(int length);
    [NullableContextAttribute("2")]
public virtual bool Equals(object value);
    public sealed virtual bool Equals(Index other);
    public virtual int GetHashCode();
    public static Index op_Implicit(int value);
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
private string ToStringFromEnd();
}
[IsReadOnlyAttribute]
[ExcludeFromCodeCoverageAttribute]
internal class System.Range : ValueType {
    [CompilerGeneratedAttribute]
private Index <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private Index <End>k__BackingField;
    public Index Start { get; }
    public Index End { get; }
    public static Range All { get; }
    public Range(Index start, Index end);
    [CompilerGeneratedAttribute]
public Index get_Start();
    [CompilerGeneratedAttribute]
public Index get_End();
    [NullableContextAttribute("2")]
public virtual bool Equals(object value);
    public sealed virtual bool Equals(Range other);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static Range StartAt(Index start);
    public static Range EndAt(Index end);
    public static Range get_All();
    public ValueTuple`2<int, int> GetOffsetAndLength(int length);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.CallerArgumentExpressionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public CallerArgumentExpressionAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1036")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.CollectionBuilderAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <BuilderType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    public Type BuilderType { get; }
    public string MethodName { get; }
    public CollectionBuilderAttribute(Type builderType, string methodName);
    [CompilerGeneratedAttribute]
public Type get_BuilderType();
    [CompilerGeneratedAttribute]
public string get_MethodName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <FeatureName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOptional>k__BackingField;
    public static string RefStructs;
    public static string RequiredMembers;
    public string FeatureName { get; }
    public bool IsOptional { get; public set; }
    public CompilerFeatureRequiredAttribute(string featureName);
    [CompilerGeneratedAttribute]
public string get_FeatureName();
    [CompilerGeneratedAttribute]
public bool get_IsOptional();
    [CompilerGeneratedAttribute]
public void set_IsOptional(bool value);
}
[AttributeUsageAttribute("1")]
[ExcludeFromCodeCoverageAttribute]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Runtime.CompilerServices.DisableRuntimeMarshallingAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Arguments>k__BackingField;
    public String[] Arguments { get; }
    public InterpolatedStringHandlerArgumentAttribute(string argument);
    public InterpolatedStringHandlerArgumentAttribute(String[] arguments);
    [CompilerGeneratedAttribute]
public String[] get_Arguments();
}
[AttributeUsageAttribute("12")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.InterpolatedStringHandlerAttribute : Attribute {
}
[EditorBrowsableAttribute("1")]
[ExcludeFromCodeCoverageAttribute]
internal static class System.Runtime.CompilerServices.IsExternalInit : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.ModuleInitializerAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[AttributeUsageAttribute("396")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.RequiredMemberAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[EditorBrowsableAttribute("1")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.RequiresLocationAttribute : Attribute {
}
[AttributeUsageAttribute("1774")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.SkipLocalsInitAttribute : Attribute {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Runtime.CompilerServices.UnsafeAccessorAttribute : Attribute {
    [CompilerGeneratedAttribute]
private UnsafeAccessorKind <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public UnsafeAccessorKind Kind { get; }
    public string Name { get; public set; }
    public UnsafeAccessorAttribute(UnsafeAccessorKind kind);
    [CompilerGeneratedAttribute]
public UnsafeAccessorKind get_Kind();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
internal enum System.Runtime.CompilerServices.UnsafeAccessorKind : Enum {
    public int value__;
    public static UnsafeAccessorKind Constructor;
    public static UnsafeAccessorKind Method;
    public static UnsafeAccessorKind StaticMethod;
    public static UnsafeAccessorKind Field;
    public static UnsafeAccessorKind StaticField;
}
[AttributeUsageAttribute("8")]
[ExcludeFromCodeCoverageAttribute]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Runtime.CompilerServices2.InlineArrayAttribute : Attribute {
    [CompilerGeneratedAttribute]
private int <Length>k__BackingField;
    public int Length { get; }
    public InlineArrayAttribute(int length);
    [CompilerGeneratedAttribute]
public int get_Length();
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Runtime.InteropServices.SuppressGCTransitionAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Runtime.InteropServices.UnmanagedCallersOnlyAttribute : Attribute {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Type[] CallConvs;
    [NullableAttribute("2")]
public string EntryPoint;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2047")]
[ExcludeFromCodeCoverageAttribute]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Runtime.Versioning.ObsoletedOSPlatformAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    public string Url { get; public set; }
    [NullableContextAttribute("1")]
public ObsoletedOSPlatformAttribute(string platformName);
    [NullableContextAttribute("1")]
public ObsoletedOSPlatformAttribute(string platformName, string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("6143")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.Versioning.RequiresPreviewFeaturesAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    public string Url { get; public set; }
    public RequiresPreviewFeaturesAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
}
[AttributeUsageAttribute("2047")]
[ExcludeFromCodeCoverageAttribute]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Runtime.Versioning.SupportedOSPlatformAttribute : Attribute {
    [NullableContextAttribute("1")]
public SupportedOSPlatformAttribute(string platformName);
}
[AttributeUsageAttribute("448")]
[ExcludeFromCodeCoverageAttribute]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Runtime.Versioning.SupportedOSPlatformGuardAttribute : Attribute {
    [NullableContextAttribute("1")]
public SupportedOSPlatformGuardAttribute(string platformName);
}
[AttributeUsageAttribute("1")]
[ExcludeFromCodeCoverageAttribute]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Runtime.Versioning.TargetPlatformAttribute : Attribute {
    [NullableContextAttribute("1")]
public TargetPlatformAttribute(string platformName);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2047")]
[ExcludeFromCodeCoverageAttribute]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Runtime.Versioning.UnsupportedOSPlatformAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public string Message { get; }
    [NullableContextAttribute("1")]
public UnsupportedOSPlatformAttribute(string platformName);
    [NullableContextAttribute("1")]
public UnsupportedOSPlatformAttribute(string platformName, string message);
    [CompilerGeneratedAttribute]
public string get_Message();
}
[AttributeUsageAttribute("448")]
[ExcludeFromCodeCoverageAttribute]
[ConditionalAttribute("MULTI_TARGETING_SUPPORT_ATTRIBUTES")]
internal class System.Runtime.Versioning.UnsupportedOSPlatformGuardAttribute : Attribute {
    [NullableContextAttribute("1")]
public UnsupportedOSPlatformGuardAttribute(string platformName);
}
