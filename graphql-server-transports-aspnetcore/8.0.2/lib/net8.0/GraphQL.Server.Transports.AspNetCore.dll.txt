public static class GraphQL.Server.Transports.AspNetCore.AuthorizationHelper : object {
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.AuthorizationHelper/<AuthorizeAsync>d__0`1")]
public static ValueTask`1<bool> AuthorizeAsync(AuthorizationParameters`1<TState> options, TState state);
    [NullableContextAttribute("1")]
private static IIdentity NoIdentity();
    [NullableContextAttribute("1")]
private static ClaimsPrincipal NoUser();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class GraphQL.Server.Transports.AspNetCore.AuthorizationParameters`1 : ValueType {
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AuthorizationRequired>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <AuthorizedRoles>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <AuthorizedPolicy>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<TState, Task> <OnNotAuthenticated>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<TState, Task> <OnNotAuthorizedRole>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`3<TState, AuthorizationResult, Task> <OnNotAuthorizedPolicy>k__BackingField;
    public HttpContext HttpContext { get; }
    public bool AuthorizationRequired { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> AuthorizedRoles { get; }
    [NullableAttribute("2")]
public string AuthorizedPolicy { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<TState, Task> OnNotAuthenticated { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<TState, Task> OnNotAuthorizedRole { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`3<TState, AuthorizationResult, Task> OnNotAuthorizedPolicy { get; }
    public AuthorizationParameters`1(HttpContext httpContext, IAuthorizationOptions authorizationOptions, Func`2<TState, Task> onNotAuthenticated, Func`2<TState, Task> onNotAuthorizedRole, Func`3<TState, AuthorizationResult, Task> onNotAuthorizedPolicy);
    [CompilerGeneratedAttribute]
public HttpContext get_HttpContext();
    [CompilerGeneratedAttribute]
public bool get_AuthorizationRequired();
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_AuthorizedRoles();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_AuthorizedPolicy();
    [CompilerGeneratedAttribute]
public Func`2<TState, Task> get_OnNotAuthenticated();
    [CompilerGeneratedAttribute]
public Func`2<TState, Task> get_OnNotAuthorizedRole();
    [CompilerGeneratedAttribute]
public Func`3<TState, AuthorizationResult, Task> get_OnNotAuthorizedPolicy();
}
public class GraphQL.Server.Transports.AspNetCore.AuthorizationValidationRule : ValidationRuleBase {
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.AuthorizationValidationRule/<GetPreNodeVisitorAsync>d__0")]
public virtual ValueTask`1<INodeVisitor> GetPreNodeVisitorAsync(ValidationContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.Server.Transports.AspNetCore.AuthorizationVisitor : AuthorizationVisitorBase {
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <ClaimsPrincipal>k__BackingField;
    [CompilerGeneratedAttribute]
private IAuthorizationService <AuthorizationService>k__BackingField;
    protected ClaimsPrincipal ClaimsPrincipal { get; }
    protected IAuthorizationService AuthorizationService { get; }
    protected bool IsAuthenticated { get; }
    public AuthorizationVisitor(ValidationContext context, ClaimsPrincipal claimsPrincipal, IAuthorizationService authorizationService);
    [CompilerGeneratedAttribute]
protected ClaimsPrincipal get_ClaimsPrincipal();
    [CompilerGeneratedAttribute]
protected IAuthorizationService get_AuthorizationService();
    protected virtual bool get_IsAuthenticated();
    protected virtual bool IsInRole(string role);
    protected virtual ValueTask`1<AuthorizationResult> AuthorizeAsync(string policy);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class GraphQL.Server.Transports.AspNetCore.AuthorizationVisitorBase : object {
    private bool _checkTree;
    [NullableAttribute("2")]
private ASTNode _checkUntil;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<GraphQLFragmentDefinition> _fragmentDefinitionsToCheck;
    private Stack`1<TypeInfo> _onlyAnonymousSelected;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<string, TypeInfo> _fragments;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<TodoInfo> _todos;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<string, bool> _roleResults;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<string, AuthorizationResult> _policyResults;
    private Nullable`1<bool> _userIsAuthorized;
    protected bool IsAuthenticated { get; }
    public AuthorizationVisitorBase(ValidationContext context);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.AuthorizationVisitorBase/<EnterAsync>d__7")]
public virtual ValueTask EnterAsync(ASTNode node, ValidationContext context);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.AuthorizationVisitorBase/<LeaveAsync>d__8")]
public virtual ValueTask LeaveAsync(ASTNode node, ValidationContext context);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.AuthorizationVisitorBase/<RecursiveResolveAsync>d__9")]
private ValueTask RecursiveResolveAsync(string fragmentName, TypeInfo ti, ValidationContext context);
    [NullableContextAttribute("0")]
public virtual ValueTask`1<bool> ValidateSchemaAsync(ValidationContext context);
    private ValueTask`1<bool> ValidateAsync(IMetadataReader obj, ASTNode node, ValidationContext context);
    private static ValidationInfo BuildValidationInfo(ASTNode node, IMetadataReader obj, ValidationContext context);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.AuthorizationVisitorBase/<ValidateAsync>d__19")]
protected virtual ValueTask`1<bool> ValidateAsync(ValidationInfo info);
    protected abstract virtual bool get_IsAuthenticated();
    protected abstract virtual bool IsInRole(string role);
    protected abstract virtual ValueTask`1<AuthorizationResult> AuthorizeAsync(string policy);
    protected virtual void HandleNodeNotAuthorized(ValidationInfo info);
    protected virtual void HandleNodeNotInRoles(ValidationInfo info, List`1<string> roles);
    protected virtual void HandleNodeNotInPolicy(ValidationInfo info, string policy, AuthorizationResult authorizationResult);
    protected virtual string GenerateResourceDescription(ValidationInfo info);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class GraphQL.Server.Transports.AspNetCore.Errors.AccessDeniedError : ValidationError {
    [CompilerGeneratedAttribute]
private string <PolicyRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthorizationResult <PolicyAuthorizationResult>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private List`1<string> <RolesRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpStatusCode <PreferredStatusCode>k__BackingField;
    public string PolicyRequired { get; public set; }
    public AuthorizationResult PolicyAuthorizationResult { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public List`1<string> RolesRequired { get; public set; }
    public HttpStatusCode PreferredStatusCode { get; public set; }
    [NullableContextAttribute("1")]
public AccessDeniedError(string resource);
    [NullableContextAttribute("1")]
public AccessDeniedError(string resource, ROM originalQuery, ASTNode[] nodes);
    [CompilerGeneratedAttribute]
public string get_PolicyRequired();
    [CompilerGeneratedAttribute]
public void set_PolicyRequired(string value);
    [CompilerGeneratedAttribute]
public AuthorizationResult get_PolicyAuthorizationResult();
    [CompilerGeneratedAttribute]
public void set_PolicyAuthorizationResult(AuthorizationResult value);
    [CompilerGeneratedAttribute]
public List`1<string> get_RolesRequired();
    [CompilerGeneratedAttribute]
public void set_RolesRequired(List`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual HttpStatusCode get_PreferredStatusCode();
    [CompilerGeneratedAttribute]
public void set_PreferredStatusCode(HttpStatusCode value);
}
public class GraphQL.Server.Transports.AspNetCore.Errors.BatchedRequestsNotSupportedError : RequestError {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.Server.Transports.AspNetCore.Errors.CsrfProtectionError : RequestError {
    public CsrfProtectionError(IEnumerable`1<string> headersRequired);
    public CsrfProtectionError(IEnumerable`1<string> headersRequired, Exception innerException);
    private static string FormatHeaders(IEnumerable`1<string> headersRequired);
}
public class GraphQL.Server.Transports.AspNetCore.Errors.FileCountExceededError : RequestError {
    [CompilerGeneratedAttribute]
private HttpStatusCode <PreferredStatusCode>k__BackingField;
    public HttpStatusCode PreferredStatusCode { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual HttpStatusCode get_PreferredStatusCode();
    [CompilerGeneratedAttribute]
public void set_PreferredStatusCode(HttpStatusCode value);
}
public class GraphQL.Server.Transports.AspNetCore.Errors.FileSizeExceededError : RequestError {
    [CompilerGeneratedAttribute]
private HttpStatusCode <PreferredStatusCode>k__BackingField;
    public HttpStatusCode PreferredStatusCode { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual HttpStatusCode get_PreferredStatusCode();
    [CompilerGeneratedAttribute]
public void set_PreferredStatusCode(HttpStatusCode value);
}
public class GraphQL.Server.Transports.AspNetCore.Errors.HttpMethodValidationError : ValidationError {
    [CompilerGeneratedAttribute]
private HttpStatusCode <PreferredStatusCode>k__BackingField;
    public HttpStatusCode PreferredStatusCode { get; public set; }
    [NullableContextAttribute("1")]
public HttpMethodValidationError(ROM originalQuery, ASTNode node, string message);
    [CompilerGeneratedAttribute]
public sealed virtual HttpStatusCode get_PreferredStatusCode();
    [CompilerGeneratedAttribute]
public void set_PreferredStatusCode(HttpStatusCode value);
}
public interface GraphQL.Server.Transports.AspNetCore.Errors.IHasPreferredStatusCode {
    public HttpStatusCode PreferredStatusCode { get; }
    public abstract virtual HttpStatusCode get_PreferredStatusCode();
}
public class GraphQL.Server.Transports.AspNetCore.Errors.InvalidContentTypeError : RequestError {
    [CompilerGeneratedAttribute]
private HttpStatusCode <PreferredStatusCode>k__BackingField;
    public HttpStatusCode PreferredStatusCode { get; public set; }
    [NullableContextAttribute("1")]
public InvalidContentTypeError(string message);
    [CompilerGeneratedAttribute]
public sealed virtual HttpStatusCode get_PreferredStatusCode();
    [CompilerGeneratedAttribute]
public void set_PreferredStatusCode(HttpStatusCode value);
}
public class GraphQL.Server.Transports.AspNetCore.Errors.InvalidMapError : RequestError {
    [NullableContextAttribute("1")]
public InvalidMapError(string message, Exception innerException);
}
public class GraphQL.Server.Transports.AspNetCore.Errors.JsonInvalidError : RequestError {
    [NullableContextAttribute("1")]
public JsonInvalidError(Exception innerException);
}
public class GraphQL.Server.Transports.AspNetCore.Errors.WebSocketSubProtocolNotSupportedError : RequestError {
    [NullableContextAttribute("1")]
public WebSocketSubProtocolNotSupportedError(IEnumerable`1<string> requestedSubProtocols);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.Server.Transports.AspNetCore.ExecutionResultActionResult : object {
    private ExecutionResult _executionResult;
    private HttpStatusCode _statusCode;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    public string ContentType { get; public set; }
    public ExecutionResultActionResult(ExecutionResult executionResult);
    public ExecutionResultActionResult(ExecutionResult executionResult, HttpStatusCode statusCode);
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(string value);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.ExecutionResultActionResult/<ExecuteResultAsync>d__8")]
public sealed virtual Task ExecuteResultAsync(ActionContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.Server.Transports.AspNetCore.FormFileGraphType : ScalarGraphType {
    public virtual bool CanParseLiteral(GraphQLValue value);
    public virtual object ParseLiteral(GraphQLValue value);
    [NullableContextAttribute("2")]
public virtual bool CanParseValue(object value);
    [NullableContextAttribute("2")]
public virtual object ParseValue(object value);
    [NullableContextAttribute("2")]
public virtual object Serialize(object value);
    public virtual bool IsValidDefault(object value);
    public virtual GraphQLValue ToAST(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class GraphQL.Server.Transports.AspNetCore.GraphQLExecutionActionResult : GraphQLExecutionActionResult`1<ISchema> {
    public GraphQLExecutionActionResult(Action`1<GraphQLHttpMiddlewareOptions> configure);
    public GraphQLExecutionActionResult(GraphQLHttpMiddlewareOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.Server.Transports.AspNetCore.GraphQLExecutionActionResult`1 : object {
    private GraphQLHttpMiddlewareOptions _options;
    public GraphQLExecutionActionResult`1(Action`1<GraphQLHttpMiddlewareOptions> configure);
    public GraphQLExecutionActionResult`1(GraphQLHttpMiddlewareOptions options);
    private static GraphQLHttpMiddlewareOptions Configure(Action`1<GraphQLHttpMiddlewareOptions> configure);
    public virtual Task ExecuteResultAsync(ActionContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.Server.Transports.AspNetCore.GraphQLHttpMiddleware : object {
    private IDocumentExecuter _documentExecuter;
    private IServiceScopeFactory _serviceScopeFactory;
    private static IEnumerable`1<IValidationRule> _getValidationRules;
    private static IEnumerable`1<IValidationRule> _getCachedDocumentValidationRules;
    private static IEnumerable`1<IValidationRule> _postValidationRules;
    private static IEnumerable`1<IValidationRule> _postCachedDocumentValidationRules;
    private IGraphQLTextSerializer _serializer;
    private RequestDelegate _next;
    private IHostApplicationLifetime _hostApplicationLifetime;
    private GraphQLHttpMiddlewareOptions _options;
    private static string QUERY_KEY;
    private static string VARIABLES_KEY;
    private static string EXTENSIONS_KEY;
    private static string OPERATION_NAME_KEY;
    private static string DOCUMENT_ID_KEY;
    private static string OPERATIONS_KEY;
    private static string MAP_KEY;
    private static string MEDIATYPE_GRAPHQLJSON;
    private static string MEDIATYPE_JSON;
    private static string MEDIATYPE_GRAPHQL;
    private static string CONTENTTYPE_JSON;
    private static string CONTENTTYPE_GRAPHQLJSON;
    internal static string CONTENTTYPE_GRAPHQLRESPONSEJSON;
    private static MediaTypeHeaderValue _applicationJsonMediaType;
    private static MediaTypeHeaderValue[] _validMediaTypes;
    private static IEnumerable`1<string> _supportedSubProtocols;
    protected IEnumerable`1<string> SupportedWebSocketSubProtocols { get; }
    private static GraphQLHttpMiddleware();
    public GraphQLHttpMiddleware(RequestDelegate next, IGraphQLTextSerializer serializer, IDocumentExecuter documentExecuter, IServiceScopeFactory serviceScopeFactory, GraphQLHttpMiddlewareOptions options, IHostApplicationLifetime hostApplicationLifetime);
    public virtual Task InvokeAsync(HttpContext context);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.GraphQLHttpMiddleware/<InvokeAsync>d__26")]
protected virtual Task InvokeAsync(HttpContext context, RequestDelegate next);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.GraphQLHttpMiddleware/<ReadPostContentAsync>d__27")]
protected virtual Task`1<Nullable`1<ValueTuple`2<GraphQLRequest, IList`1<GraphQLRequest>>>> ReadPostContentAsync(HttpContext context, RequestDelegate next, string mediaType, Encoding sourceEncoding);
    private Nullable`1<ValueTuple`2<GraphQLRequest, IList`1<GraphQLRequest>>> ReadFormContent(IFormCollection formCollection);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.GraphQLHttpMiddleware/<HandleCsrfProtectionAsync>d__29")]
protected virtual ValueTask`1<bool> HandleCsrfProtectionAsync(HttpContext context, RequestDelegate next);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.GraphQLHttpMiddleware/<HandleAuthorizeAsync>d__30")]
protected virtual ValueTask`1<bool> HandleAuthorizeAsync(HttpContext context, RequestDelegate next);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.GraphQLHttpMiddleware/<SetHttpContextUserAsync>d__31")]
private ValueTask SetHttpContextUserAsync(HttpContext context);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.GraphQLHttpMiddleware/<HandleAuthorizeWebSocketConnectionAsync>d__32")]
protected virtual ValueTask`1<bool> HandleAuthorizeWebSocketConnectionAsync(HttpContext context, RequestDelegate next);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.GraphQLHttpMiddleware/<HandleRequestAsync>d__33")]
protected virtual Task HandleRequestAsync(HttpContext context, RequestDelegate next, GraphQLRequest gqlRequest);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.GraphQLHttpMiddleware/<HandleBatchRequestAsync>d__34")]
protected virtual Task HandleBatchRequestAsync(HttpContext context, RequestDelegate next, IList`1<GraphQLRequest> gqlRequests);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.GraphQLHttpMiddleware/<ExecuteScopedRequestAsync>d__35")]
protected virtual Task`1<ExecutionResult> ExecuteScopedRequestAsync(HttpContext context, GraphQLRequest request, IDictionary`2<string, object> userContext);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.GraphQLHttpMiddleware/<ExecuteRequestAsync>d__36")]
protected virtual Task`1<ExecutionResult> ExecuteRequestAsync(HttpContext context, GraphQLRequest request, IServiceProvider serviceProvider, IDictionary`2<string, object> userContext);
    protected virtual ValueTask`1<IDictionary`2<string, object>> BuildUserContextAsync(HttpContext context, object payload);
    private sealed virtual override ValueTask`1<IDictionary`2<string, object>> GraphQL.Server.Transports.AspNetCore.IUserContextBuilder.BuildUserContextAsync(HttpContext context, object payload);
    protected virtual MediaTypeHeaderValue SelectResponseContentType(HttpContext context);
    private MediaTypeHeaderValue IsSupportedMediaType(MediaTypeHeaderValue acceptHeader);
    private static MediaTypeHeaderValue IsSupportedMediaType(MediaTypeHeaderValue acceptHeader, MediaTypeHeaderValue preferredContentType, MediaTypeHeaderValue[] allowedContentTypes);
    protected virtual Task WriteJsonResponseAsync(HttpContext context, ExecutionResult result);
    protected virtual Task WriteJsonResponseAsync(HttpContext context, HttpStatusCode httpStatusCode, TResult result);
    protected virtual IEnumerable`1<string> get_SupportedWebSocketSubProtocols();
    protected virtual IWebSocketConnection CreateWebSocketConnection(HttpContext httpContext, WebSocket webSocket, CancellationToken cancellationToken);
    protected virtual IOperationMessageProcessor CreateMessageProcessor(IWebSocketConnection webSocketConnection, string subProtocol);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.GraphQLHttpMiddleware/<HandleWebSocketAsync>d__51")]
protected virtual Task HandleWebSocketAsync(HttpContext context, RequestDelegate next);
    protected virtual Task HandleNotAuthenticatedAsync(HttpContext context, RequestDelegate next);
    protected virtual Task HandleNotAuthorizedRoleAsync(HttpContext context, RequestDelegate next);
    protected virtual Task HandleNotAuthorizedPolicyAsync(HttpContext context, RequestDelegate next, AuthorizationResult authorizationResult);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.GraphQLHttpMiddleware/<HandleDeserializationErrorAsync>d__55")]
protected virtual ValueTask`1<bool> HandleDeserializationErrorAsync(HttpContext context, RequestDelegate next, Exception exception);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.GraphQLHttpMiddleware/<HandleCsrfProtectionErrorAsync>d__56")]
protected virtual Task HandleCsrfProtectionErrorAsync(HttpContext context, RequestDelegate next);
    protected virtual Task HandleBatchedRequestsNotSupportedAsync(HttpContext context, RequestDelegate next);
    protected virtual Task HandleWebSocketSubProtocolNotSupportedAsync(HttpContext context, RequestDelegate next);
    protected virtual Task HandleContentTypeCouldNotBeParsedErrorAsync(HttpContext context, RequestDelegate next);
    protected virtual Task HandleInvalidContentTypeErrorAsync(HttpContext context, RequestDelegate next);
    protected virtual Task HandleInvalidHttpMethodErrorAsync(HttpContext context, RequestDelegate next);
    protected virtual Task WriteErrorResponseAsync(HttpContext context, ExecutionError executionError);
    protected virtual Task WriteErrorResponseAsync(HttpContext context, HttpStatusCode httpStatusCode, string errorMessage);
    protected virtual Task WriteErrorResponseAsync(HttpContext context, HttpStatusCode httpStatusCode, ExecutionError executionError);
    private GraphQLRequest DeserializeFromQueryString(IQueryCollection queryCollection);
    private GraphQLRequest DeserializeFromFormBody(IFormCollection formCollection);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.GraphQLHttpMiddleware/<DeserializeFromGraphBodyAsync>d__67")]
private static Task`1<GraphQLRequest> DeserializeFromGraphBodyAsync(Stream bodyStream, Encoding encoding);
    [NullableContextAttribute("2")]
private static bool TryGetEncoding(string charset, Encoding& encoding);
    [CompilerGeneratedAttribute]
private void <ReadFormContent>g__ApplyMapToRequests|28_0(Dictionary`2<string, String[]> map, IFormCollection form, IList`1<GraphQLRequest> requests);
    [CompilerGeneratedAttribute]
internal static void <ReadFormContent>g__ApplyFileToRequests|28_1(IFormFile file, string target, IList`1<GraphQLRequest> requests);
    [CompilerGeneratedAttribute]
internal static void <ReadFormContent>g__ApplyFileToRequest|28_2(IFormFile file, string target, GraphQLRequest request);
    [CompilerGeneratedAttribute]
internal static bool <IsSupportedMediaType>g__IsSubsetOf|43_0(MediaTypeHeaderValue mediaType, MediaTypeHeaderValue otherMediaType);
    [CompilerGeneratedAttribute]
internal static bool <IsSupportedMediaType>g__MatchesType|43_1(MediaTypeHeaderValue mediaType, MediaTypeHeaderValue set);
    [CompilerGeneratedAttribute]
internal static bool <IsSupportedMediaType>g__MatchesSubtype|43_2(MediaTypeHeaderValue mediaType, MediaTypeHeaderValue set);
    [CompilerGeneratedAttribute]
internal static bool <IsSupportedMediaType>g__MatchesSubtypeWithoutSuffix|43_3(MediaTypeHeaderValue mediaType, MediaTypeHeaderValue set);
    [CompilerGeneratedAttribute]
internal static bool <IsSupportedMediaType>g__MatchesParameters|43_4(MediaTypeHeaderValue mediaType, MediaTypeHeaderValue set);
    [CompilerGeneratedAttribute]
internal static bool <IsSupportedMediaType>g__MatchesSubtypeSuffix|43_5(MediaTypeHeaderValue mediaType, MediaTypeHeaderValue set);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.Server.Transports.AspNetCore.GraphQLHttpMiddleware`1 : GraphQLHttpMiddleware {
    public GraphQLHttpMiddleware`1(RequestDelegate next, IGraphQLTextSerializer serializer, IDocumentExecuter`1<TSchema> documentExecuter, IServiceScopeFactory serviceScopeFactory, GraphQLHttpMiddlewareOptions options, IHostApplicationLifetime hostApplicationLifetime);
    protected virtual ValueTask`1<IDictionary`2<string, object>> BuildUserContextAsync(HttpContext context, object payload);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.Server.Transports.AspNetCore.GraphQLHttpMiddlewareOptions : object {
    [CompilerGeneratedAttribute]
private bool <HandleGet>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HandlePost>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HandleWebSockets>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableBatchedRequests>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExecuteBatchedRequestsInParallel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ValidationErrorsReturnBadRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ReadQueryStringOnPost>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ReadFormOnPost>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CsrfProtectionEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <CsrfProtectionHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ReadVariablesFromQueryString>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ReadExtensionsFromQueryString>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <AuthenticationSchemes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AuthorizationRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <AuthorizedRoles>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <AuthorizedPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MaximumFileSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaximumFileCount>k__BackingField;
    [CompilerGeneratedAttribute]
private GraphQLWebSocketOptions <WebSockets>k__BackingField;
    private MediaTypeHeaderValue _defaultResponseContentType;
    [CompilerGeneratedAttribute]
private string <DefaultResponseContentTypeString>k__BackingField;
    public bool HandleGet { get; public set; }
    public bool HandlePost { get; public set; }
    public bool HandleWebSockets { get; public set; }
    public bool EnableBatchedRequests { get; public set; }
    public bool ExecuteBatchedRequestsInParallel { get; public set; }
    public Nullable`1<bool> ValidationErrorsReturnBadRequest { get; public set; }
    public bool ReadQueryStringOnPost { get; public set; }
    public bool ReadFormOnPost { get; public set; }
    public bool CsrfProtectionEnabled { get; public set; }
    public List`1<string> CsrfProtectionHeaders { get; public set; }
    public bool ReadVariablesFromQueryString { get; public set; }
    public bool ReadExtensionsFromQueryString { get; public set; }
    public List`1<string> AuthenticationSchemes { get; public set; }
    public bool AuthorizationRequired { get; public set; }
    public List`1<string> AuthorizedRoles { get; public set; }
    private IEnumerable`1<string> GraphQL.Server.Transports.AspNetCore.IAuthorizationOptions.AuthorizedRoles { get; }
    [NullableAttribute("2")]
public string AuthorizedPolicy { get; public set; }
    public Nullable`1<long> MaximumFileSize { get; public set; }
    public Nullable`1<int> MaximumFileCount { get; public set; }
    public GraphQLWebSocketOptions WebSockets { get; public set; }
    public MediaTypeHeaderValue DefaultResponseContentType { get; public set; }
    internal string DefaultResponseContentTypeString { get; internal set; }
    [CompilerGeneratedAttribute]
public bool get_HandleGet();
    [CompilerGeneratedAttribute]
public void set_HandleGet(bool value);
    [CompilerGeneratedAttribute]
public bool get_HandlePost();
    [CompilerGeneratedAttribute]
public void set_HandlePost(bool value);
    [CompilerGeneratedAttribute]
public bool get_HandleWebSockets();
    [CompilerGeneratedAttribute]
public void set_HandleWebSockets(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableBatchedRequests();
    [CompilerGeneratedAttribute]
public void set_EnableBatchedRequests(bool value);
    [CompilerGeneratedAttribute]
public bool get_ExecuteBatchedRequestsInParallel();
    [CompilerGeneratedAttribute]
public void set_ExecuteBatchedRequestsInParallel(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ValidationErrorsReturnBadRequest();
    [CompilerGeneratedAttribute]
public void set_ValidationErrorsReturnBadRequest(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public bool get_ReadQueryStringOnPost();
    [CompilerGeneratedAttribute]
public void set_ReadQueryStringOnPost(bool value);
    [CompilerGeneratedAttribute]
public bool get_ReadFormOnPost();
    [CompilerGeneratedAttribute]
public void set_ReadFormOnPost(bool value);
    [CompilerGeneratedAttribute]
public bool get_CsrfProtectionEnabled();
    [CompilerGeneratedAttribute]
public void set_CsrfProtectionEnabled(bool value);
    [CompilerGeneratedAttribute]
public List`1<string> get_CsrfProtectionHeaders();
    [CompilerGeneratedAttribute]
public void set_CsrfProtectionHeaders(List`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_ReadVariablesFromQueryString();
    [CompilerGeneratedAttribute]
public void set_ReadVariablesFromQueryString(bool value);
    [CompilerGeneratedAttribute]
public bool get_ReadExtensionsFromQueryString();
    [CompilerGeneratedAttribute]
public void set_ReadExtensionsFromQueryString(bool value);
    [CompilerGeneratedAttribute]
public List`1<string> get_AuthenticationSchemes();
    [CompilerGeneratedAttribute]
public void set_AuthenticationSchemes(List`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_AuthorizationRequired();
    [CompilerGeneratedAttribute]
public void set_AuthorizationRequired(bool value);
    [CompilerGeneratedAttribute]
public List`1<string> get_AuthorizedRoles();
    [CompilerGeneratedAttribute]
public void set_AuthorizedRoles(List`1<string> value);
    private sealed virtual override IEnumerable`1<string> GraphQL.Server.Transports.AspNetCore.IAuthorizationOptions.get_AuthorizedRoles();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_AuthorizedPolicy();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_AuthorizedPolicy(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_MaximumFileSize();
    [CompilerGeneratedAttribute]
public void set_MaximumFileSize(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaximumFileCount();
    [CompilerGeneratedAttribute]
public void set_MaximumFileCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public GraphQLWebSocketOptions get_WebSockets();
    [CompilerGeneratedAttribute]
public void set_WebSockets(GraphQLWebSocketOptions value);
    public MediaTypeHeaderValue get_DefaultResponseContentType();
    public void set_DefaultResponseContentType(MediaTypeHeaderValue value);
    [CompilerGeneratedAttribute]
internal string get_DefaultResponseContentTypeString();
    [CompilerGeneratedAttribute]
internal void set_DefaultResponseContentTypeString(string value);
}
public class GraphQL.Server.Transports.AspNetCore.HttpGetValidationRule : ValidationRuleBase {
    [NullableContextAttribute("1")]
public virtual ValueTask`1<INodeVisitor> GetPreNodeVisitorAsync(ValidationContext context);
}
public class GraphQL.Server.Transports.AspNetCore.HttpPostValidationRule : ValidationRuleBase {
    [NullableContextAttribute("1")]
public virtual ValueTask`1<INodeVisitor> GetPreNodeVisitorAsync(ValidationContext context);
}
[NullableContextAttribute("1")]
public interface GraphQL.Server.Transports.AspNetCore.IAuthorizationOptions {
    public bool AuthorizationRequired { get; }
    public IEnumerable`1<string> AuthorizedRoles { get; }
    [NullableAttribute("2")]
public string AuthorizedPolicy { get; }
    public abstract virtual bool get_AuthorizationRequired();
    public abstract virtual IEnumerable`1<string> get_AuthorizedRoles();
    [NullableContextAttribute("2")]
public abstract virtual string get_AuthorizedPolicy();
}
[NullableContextAttribute("1")]
public interface GraphQL.Server.Transports.AspNetCore.IUserContextBuilder {
    public abstract virtual ValueTask`1<IDictionary`2<string, object>> BuildUserContextAsync(HttpContext context, object payload);
}
public interface GraphQL.Server.Transports.AspNetCore.IUserContextBuilder`1 {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.Server.Transports.AspNetCore.MediaTypeAttribute : GraphQLAttribute {
    private MediaTypeHeaderValue[] _mimeTypes;
    public MediaTypeAttribute(String[] mimeTypes);
    public virtual void Modify(FieldType fieldType, bool isInputType);
    public virtual void Modify(QueryArgument queryArgument);
    private static int CountNestedLists(Type type);
    private static int CountNestedLists(IGraphType type);
}
internal static class GraphQL.Server.Transports.AspNetCore.SecurityHelper : object {
    [NullableContextAttribute("2")]
public static ClaimsPrincipal MergeUserPrincipal(ClaimsPrincipal existingPrincipal, ClaimsPrincipal additionalPrincipal);
}
public class GraphQL.Server.Transports.AspNetCore.UserContextBuilder`1 : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`3<HttpContext, object, ValueTask`1<IDictionary`2<string, object>>> _func;
    public UserContextBuilder`1(Func`2<HttpContext, ValueTask`1<TUserContext>> func);
    [NullableContextAttribute("1")]
public UserContextBuilder`1(Func`2<HttpContext, TUserContext> func);
    public UserContextBuilder`1(Func`3<HttpContext, object, ValueTask`1<TUserContext>> func);
    public UserContextBuilder`1(Func`3<HttpContext, object, TUserContext> func);
    [NullableContextAttribute("1")]
public sealed virtual ValueTask`1<IDictionary`2<string, object>> BuildUserContextAsync(HttpContext context, object payload);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GraphQL.Server.Transports.AspNetCore.WebSockets.AsyncMessagePump`1 : object {
    private Func`2<T, Task> _callback;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Queue`1<ValueTask`1<T>> _queue;
    public AsyncMessagePump`1(Func`2<T, Task> callback);
    public AsyncMessagePump`1(Action`1<T> callback);
    public void Post(T message);
    public void Post(ValueTask`1<T> messageTask);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.WebSockets.AsyncMessagePump`1/<ProcessAllMessagesInQueueAsync>d__6")]
private Task ProcessAllMessagesInQueueAsync();
    protected virtual Task HandleErrorAsync(Exception exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class GraphQL.Server.Transports.AspNetCore.WebSockets.BaseSubscriptionServer : object {
    private int _initialized;
    [NullableAttribute("2")]
private CancellationTokenSource _cancellationTokenSource;
    private GraphQLWebSocketOptions _options;
    private IAuthorizationOptions _authorizationOptions;
    [CompilerGeneratedAttribute]
private IWebSocketConnection <Connection>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationToken>k__BackingField;
    [CompilerGeneratedAttribute]
private SubscriptionList <Subscriptions>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <DefaultKeepAliveTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <DefaultConnectionTimeout>k__BackingField;
    protected IWebSocketConnection Connection { get; }
    protected CancellationToken CancellationToken { get; }
    protected SubscriptionList Subscriptions { get; }
    protected TimeSpan DefaultKeepAliveTimeout { get; }
    protected TimeSpan DefaultConnectionTimeout { get; }
    protected bool Initialized { get; }
    protected BaseSubscriptionServer(IWebSocketConnection connection, GraphQLWebSocketOptions options, IAuthorizationOptions authorizationOptions);
    [CompilerGeneratedAttribute]
protected IWebSocketConnection get_Connection();
    [CompilerGeneratedAttribute]
protected CancellationToken get_CancellationToken();
    [CompilerGeneratedAttribute]
protected SubscriptionList get_Subscriptions();
    [CompilerGeneratedAttribute]
protected virtual TimeSpan get_DefaultKeepAliveTimeout();
    [CompilerGeneratedAttribute]
protected virtual TimeSpan get_DefaultConnectionTimeout();
    public virtual Task InitializeConnectionAsync();
    protected virtual Task OnConnectionInitWaitTimeoutAsync();
    public virtual void Dispose();
    protected bool get_Initialized();
    protected bool TryInitialize();
    public abstract virtual Task OnMessageReceivedAsync(OperationMessage message);
    protected virtual Task OnCloseConnectionAsync();
    protected virtual Task ErrorAccessDeniedAsync();
    protected virtual Task ErrorConnectionInitializationTimeoutAsync();
    protected virtual Task ErrorTooManyInitializationRequestsAsync(OperationMessage message);
    protected virtual Task ErrorNotInitializedAsync(OperationMessage message);
    protected virtual Task ErrorUnrecognizedMessageAsync(OperationMessage message);
    protected virtual Task ErrorIdCannotBeBlankAsync(OperationMessage message);
    protected virtual Task ErrorIdAlreadyExistsAsync(OperationMessage message);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.WebSockets.BaseSubscriptionServer/<AuthorizeAsync>d__35")]
protected virtual ValueTask`1<bool> AuthorizeAsync(OperationMessage message);
    protected virtual Task OnNotAuthenticatedAsync(OperationMessage message);
    protected virtual Task OnNotAuthorizedRoleAsync(OperationMessage message);
    protected virtual Task OnNotAuthorizedPolicyAsync(OperationMessage message, AuthorizationResult result);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.WebSockets.BaseSubscriptionServer/<OnConnectionInitAsync>d__39")]
protected virtual Task OnConnectionInitAsync(OperationMessage message, bool smartKeepAlive);
    protected abstract virtual Task OnSendKeepAliveAsync();
    protected abstract virtual Task OnConnectionAcknowledgeAsync(OperationMessage message);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.WebSockets.BaseSubscriptionServer/<SubscribeAsync>d__42")]
protected virtual Task SubscribeAsync(OperationMessage message, bool overwrite);
    protected virtual Task`1<ExecutionError> HandleErrorDuringSubscribeAsync(OperationMessage message, Exception ex);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.WebSockets.BaseSubscriptionServer/<SendSingleResultAsync>d__44")]
protected virtual Task SendSingleResultAsync(OperationMessage message, ExecutionResult result);
    protected virtual Task SendErrorResultAsync(OperationMessage message, ExecutionError executionError);
    protected virtual Task SendErrorResultAsync(string id, ExecutionError executionError);
    protected virtual Task SendErrorResultAsync(OperationMessage message, ExecutionResult result);
    protected abstract virtual Task SendErrorResultAsync(string id, ExecutionResult result);
    protected virtual Task SendSubscriptionSuccessfulAsync(OperationMessage message);
    protected abstract virtual Task SendDataAsync(string id, ExecutionResult result);
    protected abstract virtual Task SendCompletedAsync(string id);
    protected abstract virtual Task`1<ExecutionResult> ExecuteRequestAsync(OperationMessage message);
    protected virtual Task UnsubscribeAsync(string id);
    protected virtual Task`1<ExecutionError> HandleErrorFromSourceAsync(Exception exception);
}
public class GraphQL.Server.Transports.AspNetCore.WebSockets.GraphQLWebSocketOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <ConnectionInitWaitTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <KeepAliveTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <DisconnectionTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisconnectAfterErrorEvent>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisconnectAfterAnyError>k__BackingField;
    public Nullable`1<TimeSpan> ConnectionInitWaitTimeout { get; public set; }
    public Nullable`1<TimeSpan> KeepAliveTimeout { get; public set; }
    public Nullable`1<TimeSpan> DisconnectionTimeout { get; public set; }
    public bool DisconnectAfterErrorEvent { get; public set; }
    public bool DisconnectAfterAnyError { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_ConnectionInitWaitTimeout();
    [CompilerGeneratedAttribute]
public void set_ConnectionInitWaitTimeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_KeepAliveTimeout();
    [CompilerGeneratedAttribute]
public void set_KeepAliveTimeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_DisconnectionTimeout();
    [CompilerGeneratedAttribute]
public void set_DisconnectionTimeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public bool get_DisconnectAfterErrorEvent();
    [CompilerGeneratedAttribute]
public void set_DisconnectAfterErrorEvent(bool value);
    [CompilerGeneratedAttribute]
public bool get_DisconnectAfterAnyError();
    [CompilerGeneratedAttribute]
public void set_DisconnectAfterAnyError(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class GraphQL.Server.Transports.AspNetCore.WebSockets.GraphQLWs.MessageType : object {
    public static string ConnectionInit;
    public static string ConnectionAck;
    public static string Subscribe;
    public static string Next;
    public static string Error;
    public static string Complete;
    public static string Ping;
    public static string Pong;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.Server.Transports.AspNetCore.WebSockets.GraphQLWs.SubscriptionServer : BaseSubscriptionServer {
    [NullableAttribute("2")]
private IWebSocketAuthenticationService _authenticationService;
    [CompilerGeneratedAttribute]
private IDocumentExecuter <DocumentExecuter>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceScopeFactory <ServiceScopeFactory>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, object> <UserContext>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserContextBuilder <UserContextBuilder>k__BackingField;
    [CompilerGeneratedAttribute]
private IGraphQLSerializer <Serializer>k__BackingField;
    private static OperationMessage _pongMessage;
    private static OperationMessage _connectionAckMessage;
    public static string SubProtocol { get; }
    protected IDocumentExecuter DocumentExecuter { get; }
    protected IServiceScopeFactory ServiceScopeFactory { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected IDictionary`2<string, object> UserContext { get; protected set; }
    protected IUserContextBuilder UserContextBuilder { get; }
    protected IGraphQLSerializer Serializer { get; }
    public SubscriptionServer(IWebSocketConnection connection, GraphQLWebSocketOptions options, IAuthorizationOptions authorizationOptions, IDocumentExecuter executer, IGraphQLSerializer serializer, IServiceScopeFactory serviceScopeFactory, IUserContextBuilder userContextBuilder, IWebSocketAuthenticationService authenticationService);
    private static SubscriptionServer();
    public static string get_SubProtocol();
    [CompilerGeneratedAttribute]
protected IDocumentExecuter get_DocumentExecuter();
    [CompilerGeneratedAttribute]
protected IServiceScopeFactory get_ServiceScopeFactory();
    [CompilerGeneratedAttribute]
protected IDictionary`2<string, object> get_UserContext();
    [CompilerGeneratedAttribute]
protected void set_UserContext(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
protected IUserContextBuilder get_UserContextBuilder();
    [CompilerGeneratedAttribute]
protected IGraphQLSerializer get_Serializer();
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.WebSockets.GraphQLWs.SubscriptionServer/<OnMessageReceivedAsync>d__20")]
public virtual Task OnMessageReceivedAsync(OperationMessage message);
    protected virtual Task OnPingAsync(OperationMessage message);
    protected virtual Task OnPongAsync(OperationMessage message);
    protected virtual Task OnSendKeepAliveAsync();
    protected virtual Task OnConnectionAcknowledgeAsync(OperationMessage message);
    protected virtual Task OnSubscribeAsync(OperationMessage message);
    protected virtual Task OnCompleteAsync(OperationMessage message);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.WebSockets.GraphQLWs.SubscriptionServer/<SendErrorResultAsync>d__29")]
protected virtual Task SendErrorResultAsync(string id, ExecutionResult result);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.WebSockets.GraphQLWs.SubscriptionServer/<SendDataAsync>d__30")]
protected virtual Task SendDataAsync(string id, ExecutionResult result);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.WebSockets.GraphQLWs.SubscriptionServer/<SendCompletedAsync>d__31")]
protected virtual Task SendCompletedAsync(string id);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.WebSockets.GraphQLWs.SubscriptionServer/<ExecuteRequestAsync>d__32")]
protected virtual Task`1<ExecutionResult> ExecuteRequestAsync(OperationMessage message);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.WebSockets.GraphQLWs.SubscriptionServer/<AuthorizeAsync>d__33")]
protected virtual ValueTask`1<bool> AuthorizeAsync(OperationMessage message);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private ValueTask`1<bool> <>n__0(OperationMessage message);
}
[NullableContextAttribute("1")]
public interface GraphQL.Server.Transports.AspNetCore.WebSockets.IOperationMessageProcessor {
    public abstract virtual Task InitializeConnectionAsync();
    public abstract virtual Task OnMessageReceivedAsync(OperationMessage message);
}
[NullableContextAttribute("1")]
public interface GraphQL.Server.Transports.AspNetCore.WebSockets.IWebSocketAuthenticationService {
    public abstract virtual Task AuthenticateAsync(IWebSocketConnection connection, string subProtocol, OperationMessage operationMessage);
}
[NullableContextAttribute("1")]
public interface GraphQL.Server.Transports.AspNetCore.WebSockets.IWebSocketConnection {
    public DateTime LastMessageSentAt { get; }
    public CancellationToken RequestAborted { get; }
    public HttpContext HttpContext { get; }
    public abstract virtual Task ExecuteAsync(IOperationMessageProcessor operationMessageProcessor);
    public abstract virtual Task SendMessageAsync(OperationMessage message);
    public abstract virtual Task CloseAsync();
    public abstract virtual Task CloseAsync(int eventId, string description);
    public abstract virtual DateTime get_LastMessageSentAt();
    public abstract virtual CancellationToken get_RequestAborted();
    public abstract virtual HttpContext get_HttpContext();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GraphQL.Server.Transports.AspNetCore.WebSockets.ReusableMemoryReaderStream : Stream {
    private Byte[] _buffer;
    private int _position;
    private int _length;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public ReusableMemoryReaderStream(Byte[] buffer);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Flush();
    public virtual int Read(Byte[] buffer, int offset, int count);
    [NullableContextAttribute("0")]
public virtual int Read(Span`1<byte> buffer);
    public virtual Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public virtual ValueTask`1<int> ReadAsync(Memory`1<byte> buffer, CancellationToken cancellationToken);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public void ResetLength(int value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual int ReadByte();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class GraphQL.Server.Transports.AspNetCore.WebSockets.SubscriptionList : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<string, IDisposable> _subscriptions;
    private object _lock;
    unknown IDisposable Item {public set; }
    public sealed virtual void Dispose();
    public bool TryAdd(string id, IDisposable subscription);
    public void set_Item(string id, IDisposable value);
    public bool Contains(string id, IDisposable subscription);
    public bool Contains(string id);
    public bool CompareExchange(string id, IDisposable oldSubscription, IDisposable newSubscription);
    public bool TryRemove(string id);
    public bool TryRemove(string id, IDisposable oldSubscription);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class GraphQL.Server.Transports.AspNetCore.WebSockets.SubscriptionsTransportWs.MessageType : object {
    public static string GQL_CONNECTION_INIT;
    public static string GQL_CONNECTION_ACK;
    public static string GQL_CONNECTION_ERROR;
    public static string GQL_CONNECTION_KEEP_ALIVE;
    public static string GQL_CONNECTION_TERMINATE;
    public static string GQL_START;
    public static string GQL_DATA;
    public static string GQL_ERROR;
    public static string GQL_COMPLETE;
    public static string GQL_STOP;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.Server.Transports.AspNetCore.WebSockets.SubscriptionsTransportWs.SubscriptionServer : BaseSubscriptionServer {
    [NullableAttribute("2")]
private IWebSocketAuthenticationService _authenticationService;
    [CompilerGeneratedAttribute]
private IDocumentExecuter <DocumentExecuter>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceScopeFactory <ServiceScopeFactory>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, object> <UserContext>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserContextBuilder <UserContextBuilder>k__BackingField;
    [CompilerGeneratedAttribute]
private IGraphQLSerializer <Serializer>k__BackingField;
    private static OperationMessage _keepAliveMessage;
    private static OperationMessage _connectionAckMessage;
    public static string SubProtocol { get; }
    protected IDocumentExecuter DocumentExecuter { get; }
    protected IServiceScopeFactory ServiceScopeFactory { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected IDictionary`2<string, object> UserContext { get; protected set; }
    protected IUserContextBuilder UserContextBuilder { get; }
    protected IGraphQLSerializer Serializer { get; }
    public SubscriptionServer(IWebSocketConnection connection, GraphQLWebSocketOptions options, IAuthorizationOptions authorizationOptions, IDocumentExecuter executer, IGraphQLSerializer serializer, IServiceScopeFactory serviceScopeFactory, IUserContextBuilder userContextBuilder, IWebSocketAuthenticationService authenticationService);
    private static SubscriptionServer();
    public static string get_SubProtocol();
    [CompilerGeneratedAttribute]
protected IDocumentExecuter get_DocumentExecuter();
    [CompilerGeneratedAttribute]
protected IServiceScopeFactory get_ServiceScopeFactory();
    [CompilerGeneratedAttribute]
protected IDictionary`2<string, object> get_UserContext();
    [CompilerGeneratedAttribute]
protected void set_UserContext(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
protected IUserContextBuilder get_UserContextBuilder();
    [CompilerGeneratedAttribute]
protected IGraphQLSerializer get_Serializer();
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.WebSockets.SubscriptionsTransportWs.SubscriptionServer/<OnMessageReceivedAsync>d__20")]
public virtual Task OnMessageReceivedAsync(OperationMessage message);
    protected virtual Task OnSendKeepAliveAsync();
    protected virtual Task OnConnectionAcknowledgeAsync(OperationMessage message);
    protected virtual Task OnStartAsync(OperationMessage message);
    protected virtual Task OnStopAsync(OperationMessage message);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.WebSockets.SubscriptionsTransportWs.SubscriptionServer/<SendErrorResultAsync>d__27")]
protected virtual Task SendErrorResultAsync(string id, ExecutionResult result);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.WebSockets.SubscriptionsTransportWs.SubscriptionServer/<SendDataAsync>d__28")]
protected virtual Task SendDataAsync(string id, ExecutionResult result);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.WebSockets.SubscriptionsTransportWs.SubscriptionServer/<SendCompletedAsync>d__29")]
protected virtual Task SendCompletedAsync(string id);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.WebSockets.SubscriptionsTransportWs.SubscriptionServer/<ExecuteRequestAsync>d__30")]
protected virtual Task`1<ExecutionResult> ExecuteRequestAsync(OperationMessage message);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.WebSockets.SubscriptionsTransportWs.SubscriptionServer/<ErrorAccessDeniedAsync>d__31")]
protected virtual Task ErrorAccessDeniedAsync();
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.WebSockets.SubscriptionsTransportWs.SubscriptionServer/<AuthorizeAsync>d__32")]
protected virtual ValueTask`1<bool> AuthorizeAsync(OperationMessage message);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__0();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private ValueTask`1<bool> <>n__1(OperationMessage message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class GraphQL.Server.Transports.AspNetCore.WebSockets.WebSocketConnection : object {
    private WebSocket _webSocket;
    private AsyncMessagePump`1<Message> _pump;
    private IGraphQLSerializer _serializer;
    private WebSocketWriterStream _stream;
    private TaskCompletionSource`1<bool> _outputClosed;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _closeRequested;
    private TimeSpan _closeTimeout;
    private int _executed;
    private static int BUFFER_SIZE;
    [CompilerGeneratedAttribute]
private CancellationToken <RequestAborted>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <DefaultDisconnectionTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastMessageSentAt>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    public CancellationToken RequestAborted { get; }
    protected TimeSpan DefaultDisconnectionTimeout { get; }
    public DateTime LastMessageSentAt { get; private set; }
    public HttpContext HttpContext { get; }
    public WebSocketConnection(HttpContext httpContext, WebSocket webSocket, IGraphQLSerializer serializer, GraphQLWebSocketOptions options, CancellationToken requestAborted);
    [CompilerGeneratedAttribute]
public sealed virtual CancellationToken get_RequestAborted();
    [CompilerGeneratedAttribute]
protected virtual TimeSpan get_DefaultDisconnectionTimeout();
    [CompilerGeneratedAttribute]
public sealed virtual DateTime get_LastMessageSentAt();
    [CompilerGeneratedAttribute]
private void set_LastMessageSentAt(DateTime value);
    [CompilerGeneratedAttribute]
public sealed virtual HttpContext get_HttpContext();
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.WebSockets.WebSocketConnection/<ExecuteAsync>d__23")]
public virtual Task ExecuteAsync(IOperationMessageProcessor operationMessageProcessor);
    public sealed virtual Task CloseAsync();
    public sealed virtual Task CloseAsync(int eventId, string description);
    public sealed virtual Task SendMessageAsync(OperationMessage message);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.WebSockets.WebSocketConnection/<HandleOutgoingMessageAsync>d__27")]
private Task HandleOutgoingMessageAsync(Message message);
    protected virtual Task OnDispatchMessageAsync(IOperationMessageProcessor operationMessageProcessor, OperationMessage message);
    [AsyncStateMachineAttribute("GraphQL.Server.Transports.AspNetCore.WebSockets.WebSocketConnection/<OnSendMessageAsync>d__29")]
protected virtual Task OnSendMessageAsync(OperationMessage message);
    protected virtual Task OnCloseOutputAsync(WebSocketCloseStatus closeStatus, string closeDescription);
    protected virtual Task OnNonGracefulShutdownAsync(bool receivedCloseMessage, bool sentCloseMessage);
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class GraphQL.Server.Transports.AspNetCore.WebSockets.WebSocketWriterStream : Stream {
    private WebSocket _webSocket;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public WebSocketWriterStream(WebSocket webSocket);
    public virtual Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public virtual ValueTask WriteAsync(ReadOnlyMemory`1<byte> buffer, CancellationToken cancellationToken);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual Task FlushAsync(CancellationToken cancellationToken);
    public virtual void Flush();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class GraphQL.ServerGraphQLBuilderExtensions : object {
    [ExtensionAttribute]
public static IGraphQLBuilder AddUserContextBuilder(IGraphQLBuilder builder);
    [ExtensionAttribute]
public static IGraphQLBuilder AddUserContextBuilder(IGraphQLBuilder builder, Func`2<HttpContext, TUserContext> creator);
    [ExtensionAttribute]
public static IGraphQLBuilder AddUserContextBuilder(IGraphQLBuilder builder, Func`2<HttpContext, Task`1<TUserContext>> creator);
    [ExtensionAttribute]
public static IGraphQLBuilder AddUserContextBuilder(IGraphQLBuilder builder, Func`3<HttpContext, object, TUserContext> creator);
    [ExtensionAttribute]
public static IGraphQLBuilder AddUserContextBuilder(IGraphQLBuilder builder, Func`3<HttpContext, object, Task`1<TUserContext>> creator);
    [ExtensionAttribute]
public static IGraphQLBuilder AddWebSocketAuthentication(IGraphQLBuilder builder);
    [ExtensionAttribute]
public static IGraphQLBuilder AddWebSocketAuthentication(IGraphQLBuilder builder, Func`2<IServiceProvider, IWebSocketAuthenticationService> factory);
    [ExtensionAttribute]
public static IGraphQLBuilder AddWebSocketAuthentication(IGraphQLBuilder builder, IWebSocketAuthenticationService webSocketAuthenticationService);
    [ExtensionAttribute]
public static IGraphQLBuilder AddAuthorizationRule(IGraphQLBuilder builder);
    [ExtensionAttribute]
public static IGraphQLBuilder AddFormFileGraphType(IGraphQLBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class GraphQL.Utilities.Federation.GraphQLHttpRequestExtensions : object {
    private static string HEADER_NAME;
    private static string HEADER_VALUE;
    [ExtensionAttribute]
public static bool IsApolloFederatedTracingEnabled(HttpRequest request);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Builder.GraphQLEndpointConventionBuilder : object {
    private IEndpointConventionBuilder _builder;
    internal GraphQLEndpointConventionBuilder(IEndpointConventionBuilder builder);
    public sealed virtual void Add(Action`1<EndpointBuilder> convention);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.GraphQLHttpApplicationBuilderExtensions : object {
    [ExtensionAttribute]
public static IApplicationBuilder UseGraphQL(IApplicationBuilder builder, string path, Action`1<GraphQLHttpMiddlewareOptions> configureMiddleware);
    [ExtensionAttribute]
public static IApplicationBuilder UseGraphQL(IApplicationBuilder builder, PathString path, Action`1<GraphQLHttpMiddlewareOptions> configureMiddleware);
    [ExtensionAttribute]
public static IApplicationBuilder UseGraphQL(IApplicationBuilder builder, string path, Action`1<GraphQLHttpMiddlewareOptions> configureMiddleware);
    [ExtensionAttribute]
public static IApplicationBuilder UseGraphQL(IApplicationBuilder builder, PathString path, Action`1<GraphQLHttpMiddlewareOptions> configureMiddleware);
    [ExtensionAttribute]
public static IApplicationBuilder UseGraphQL(IApplicationBuilder builder, string path, Object[] args);
    [ExtensionAttribute]
public static IApplicationBuilder UseGraphQL(IApplicationBuilder builder, PathString path, Object[] args);
    [ExtensionAttribute]
public static IApplicationBuilder UseIgnoreDisconnections(IApplicationBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.GraphQLHttpEndpointRouteBuilderExtensions : object {
    [ExtensionAttribute]
public static GraphQLEndpointConventionBuilder MapGraphQL(IEndpointRouteBuilder endpoints, string pattern, Action`1<GraphQLHttpMiddlewareOptions> configureMiddleware);
    [ExtensionAttribute]
public static GraphQLEndpointConventionBuilder MapGraphQL(IEndpointRouteBuilder endpoints, string pattern, Action`1<GraphQLHttpMiddlewareOptions> configureMiddleware);
    [ExtensionAttribute]
public static GraphQLEndpointConventionBuilder MapGraphQL(IEndpointRouteBuilder endpoints, string pattern, Object[] args);
}
