public static class Grpc.Core.Testing.TestCalls : object {
    public static AsyncUnaryCall`1<TResponse> AsyncUnaryCall(Task`1<TResponse> responseAsync, Task`1<Metadata> responseHeadersAsync, Func`1<Status> getStatusFunc, Func`1<Metadata> getTrailersFunc, Action disposeAction);
    public static AsyncClientStreamingCall`2<TRequest, TResponse> AsyncClientStreamingCall(IClientStreamWriter`1<TRequest> requestStream, Task`1<TResponse> responseAsync, Task`1<Metadata> responseHeadersAsync, Func`1<Status> getStatusFunc, Func`1<Metadata> getTrailersFunc, Action disposeAction);
    public static AsyncServerStreamingCall`1<TResponse> AsyncServerStreamingCall(IAsyncStreamReader`1<TResponse> responseStream, Task`1<Metadata> responseHeadersAsync, Func`1<Status> getStatusFunc, Func`1<Metadata> getTrailersFunc, Action disposeAction);
    public static AsyncDuplexStreamingCall`2<TRequest, TResponse> AsyncDuplexStreamingCall(IClientStreamWriter`1<TRequest> requestStream, IAsyncStreamReader`1<TResponse> responseStream, Task`1<Metadata> responseHeadersAsync, Func`1<Status> getStatusFunc, Func`1<Metadata> getTrailersFunc, Action disposeAction);
}
public static class Grpc.Core.Testing.TestServerCallContext : object {
    public static ServerCallContext Create(string method, string host, DateTime deadline, Metadata requestHeaders, CancellationToken cancellationToken, string peer, AuthContext authContext, ContextPropagationToken contextPropagationToken, Func`2<Metadata, Task> writeHeadersFunc, Func`1<WriteOptions> writeOptionsGetter, Action`1<WriteOptions> writeOptionsSetter);
}
