[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Grpc.Net.Client.Web.GrpcWebHandler : DelegatingHandler {
    internal static string WebAssemblyEnableStreamingResponseKey;
    [CompilerGeneratedAttribute]
private IOperatingSystem <OperatingSystem>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Version <HttpVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private GrpcWebMode <GrpcWebMode>k__BackingField;
    internal IOperatingSystem OperatingSystem { get; internal set; }
    [NullableAttribute("2")]
[ObsoleteAttribute("HttpVersion is obsolete and will be removed in a future release. Use GrpcChannelOptions.HttpVersion and GrpcChannelOptions.HttpVersionPolicy instead.")]
public Version HttpVersion { get; public set; }
    public GrpcWebMode GrpcWebMode { get; public set; }
    public GrpcWebHandler(HttpMessageHandler innerHandler);
    public GrpcWebHandler(GrpcWebMode mode);
    public GrpcWebHandler(GrpcWebMode mode, HttpMessageHandler innerHandler);
    [CompilerGeneratedAttribute]
internal IOperatingSystem get_OperatingSystem();
    [CompilerGeneratedAttribute]
internal void set_OperatingSystem(IOperatingSystem value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Version get_HttpVersion();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_HttpVersion(Version value);
    [CompilerGeneratedAttribute]
public GrpcWebMode get_GrpcWebMode();
    [CompilerGeneratedAttribute]
public void set_GrpcWebMode(GrpcWebMode value);
    protected virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Grpc.Net.Client.Web.GrpcWebHandler/<SendAsyncCore>d__18")]
private Task`1<HttpResponseMessage> SendAsyncCore(HttpRequestMessage request, CancellationToken cancellationToken);
    private bool Http2NotSupported();
    private void FixBrowserUserAgent(HttpRequestMessage request);
    [NullableContextAttribute("2")]
private static bool IsMatchingResponseContentType(GrpcWebMode mode, string contentType);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<HttpResponseMessage> <>n__0(HttpRequestMessage request, CancellationToken cancellationToken);
}
public enum Grpc.Net.Client.Web.GrpcWebMode : Enum {
    public int value__;
    public static GrpcWebMode GrpcWeb;
    public static GrpcWebMode GrpcWebText;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Grpc.Net.Client.Web.Internal.Base64RequestStream : Stream {
    private Stream _inner;
    [NullableAttribute("2")]
private Byte[] _buffer;
    private int _remainder;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public Base64RequestStream(Stream inner);
    [NullableContextAttribute("0")]
[AsyncStateMachineAttribute("Grpc.Net.Client.Web.Internal.Base64RequestStream/<WriteAsync>d__4")]
public virtual ValueTask WriteAsync(ReadOnlyMemory`1<byte> data, CancellationToken cancellationToken);
    private static void EnsureSuccess(OperationStatus status, OperationStatus expectedStatus);
    [AsyncStateMachineAttribute("Grpc.Net.Client.Web.Internal.Base64RequestStream/<FlushAsync>d__6")]
public virtual Task FlushAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Grpc.Net.Client.Web.Internal.Base64RequestStream/<WriteRemainderAsync>d__7")]
internal Task WriteRemainderAsync(CancellationToken cancellationToken);
    protected virtual void Dispose(bool disposing);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Flush();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
}
internal class Grpc.Net.Client.Web.Internal.Base64ResponseStream : Stream {
    [NullableAttribute("1")]
private Stream _inner;
    [NullableAttribute("2")]
private Byte[] _minimumBuffer;
    private int _remainder;
    private byte _remainderByte0;
    private byte _remainderByte1;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    [NullableContextAttribute("1")]
public Base64ResponseStream(Stream inner);
    [AsyncStateMachineAttribute("Grpc.Net.Client.Web.Internal.Base64ResponseStream/<ReadAsync>d__6")]
public virtual ValueTask`1<int> ReadAsync(Memory`1<byte> data, CancellationToken cancellationToken);
    internal static int DecodeBase64DataFragments(Span`1<byte> base64Data);
    private static int DecodeAndShift(Span`1<byte> base64Data, int dataLength, Span`1<byte> base64Fragment);
    private static void EnsureSuccess(OperationStatus status);
    private static int GetPaddingIndex(Span`1<byte> data);
    private int ReturnData(Memory`1<byte> data, bool copyFromMinimumBuffer, int bytesWritten);
    private int CopyRemainderToData(Memory`1<byte> data);
    private Memory`1<byte> SetRemainder(Memory`1<byte> data);
    private void PreserveRemainder(Span`1<byte> remainder);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Flush();
    [NullableContextAttribute("1")]
public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    [NullableContextAttribute("1")]
public virtual void Write(Byte[] buffer, int offset, int count);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Grpc.Net.Client.Web.Internal.GrpcWebProtocolConstants : object {
    public static Version Http2Version;
    public static string GrpcContentType;
    public static string GrpcWebContentType;
    public static string GrpcWebTextContentType;
    public static MediaTypeHeaderValue GrpcHeader;
    public static MediaTypeHeaderValue GrpcWebHeader;
    public static MediaTypeHeaderValue GrpcWebTextHeader;
    private static GrpcWebProtocolConstants();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Grpc.Net.Client.Web.Internal.GrpcWebRequestContent : HttpContent {
    private HttpContent _inner;
    private GrpcWebMode _mode;
    public GrpcWebRequestContent(HttpContent inner, GrpcWebMode mode);
    protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context);
    [AsyncStateMachineAttribute("Grpc.Net.Client.Web.Internal.GrpcWebRequestContent/<SerializeTextToStreamAsync>d__4")]
private Task SerializeTextToStreamAsync(Stream stream);
    protected virtual bool TryComputeLength(Int64& length);
    protected virtual void Dispose(bool disposing);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Grpc.Net.Client.Web.Internal.GrpcWebResponseContent : HttpContent {
    private HttpContent _inner;
    private GrpcWebMode _mode;
    private HttpHeaders _responseTrailers;
    [NullableAttribute("2")]
private Stream _innerStream;
    public GrpcWebResponseContent(HttpContent inner, GrpcWebMode mode, HttpHeaders responseTrailers);
    [AsyncStateMachineAttribute("Grpc.Net.Client.Web.Internal.GrpcWebResponseContent/<SerializeToStreamAsync>d__5")]
protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context);
    [AsyncStateMachineAttribute("Grpc.Net.Client.Web.Internal.GrpcWebResponseContent/<CreateContentReadStreamAsync>d__6")]
protected virtual Task`1<Stream> CreateContentReadStreamAsync();
    protected virtual bool TryComputeLength(Int64& length);
    protected virtual void Dispose(bool disposing);
}
internal class Grpc.Net.Client.Web.Internal.GrpcWebResponseStream : Stream {
    private static int HeaderLength;
    [NullableAttribute("1")]
private Stream _inner;
    [NullableAttribute("1")]
private HttpHeaders _responseTrailers;
    [NullableAttribute("2")]
private Byte[] _headerBuffer;
    internal ResponseState _state;
    internal int _contentRemaining;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    [NullableContextAttribute("1")]
public GrpcWebResponseStream(Stream inner, HttpHeaders responseTrailers);
    [AsyncStateMachineAttribute("Grpc.Net.Client.Web.Internal.GrpcWebResponseStream/<ReadAsync>d__7")]
public virtual ValueTask`1<int> ReadAsync(Memory`1<byte> data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Grpc.Net.Client.Web.Internal.GrpcWebResponseStream/<ReadTrailersAsync>d__8")]
private Task ReadTrailersAsync(int trailerLength, Memory`1<byte> data, CancellationToken cancellationToken);
    private void ParseTrailers(ReadOnlySpan`1<byte> span);
    private static string GetString(ReadOnlySpan`1<byte> span);
    internal static ReadOnlySpan`1<byte> Trim(ReadOnlySpan`1<byte> span);
    private static bool IsBitSet(byte b, int pos);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Grpc.Net.Client.Web.Internal.GrpcWebResponseStream/<TryReadDataAsync>d__13")]
private static Task`1<bool> TryReadDataAsync(Stream responseStream, Memory`1<byte> buffer, CancellationToken cancellationToken);
    protected virtual void Dispose(bool disposing);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Flush();
    [NullableContextAttribute("1")]
public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    [NullableContextAttribute("1")]
public virtual void Write(Byte[] buffer, int offset, int count);
}
internal interface Grpc.Net.Client.Web.Internal.IOperatingSystem {
    public bool IsBrowser { get; }
    public abstract virtual bool get_IsBrowser();
}
internal class Grpc.Net.Client.Web.Internal.OperatingSystem : object {
    [NullableAttribute("1")]
public static OperatingSystem Instance;
    [CompilerGeneratedAttribute]
private bool <IsBrowser>k__BackingField;
    public bool IsBrowser { get; }
    private static OperatingSystem();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsBrowser();
}
internal static class Grpc.Net.Client.Web.Internal.StreamHelpers : object {
    [NullableContextAttribute("1")]
public static ValueTask WriteAsync(Stream stream, Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    public static ValueTask`1<int> ReadAsync(Stream stream, Memory`1<byte> data, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Grpc.Shared.CommonGrpcProtocolHelpers : object {
    public static Task`1<bool> TrueTask;
    public static Task`1<bool> FalseTask;
    private static int TimerEpsilonMilliseconds;
    private static CommonGrpcProtocolHelpers();
    public static long GetTimerDueTime(TimeSpan timeout, long maxTimerDueTime);
    public static bool IsContentType(string contentType, string s);
    public static string ConvertToRpcExceptionMessage(Exception ex);
    private static string BuildErrorMessage(Exception ex);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Grpc.Shared.HttpRequestHelpers : object {
    [ExtensionAttribute]
public static bool TryGetOption(HttpRequestMessage requestMessage, string key, T& value);
    [ExtensionAttribute]
public static void SetOption(HttpRequestMessage requestMessage, string key, T value);
    public static bool HasHttpHandlerType(HttpMessageHandler handler, string handlerTypeName);
    public static HttpMessageHandler GetHttpHandlerType(HttpMessageHandler handler, string handlerTypeName);
    private static bool IsType(Type type, string handlerTypeName);
    public static bool HasHttpHandlerType(HttpMessageHandler handler);
    public static T GetHttpHandlerType(HttpMessageHandler handler);
}
[ExtensionAttribute]
internal static class Grpc.Shared.TrailingHeadersHelpers : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static HttpHeaders TrailingHeaders(HttpResponseMessage responseMessage);
}
