[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Grpc.AspNetCore.Server.GrpcActivatorHandle`1 : ValueType {
    [CompilerGeneratedAttribute]
private T <Instance>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Created>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private object <State>k__BackingField;
    public T Instance { get; }
    public bool Created { get; }
    [NullableAttribute("2")]
public object State { get; }
    public GrpcActivatorHandle`1(T instance, bool created, object state);
    [CompilerGeneratedAttribute]
public T get_Instance();
    [CompilerGeneratedAttribute]
public bool get_Created();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_State();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Grpc.AspNetCore.Server.GrpcMethodMetadata : object {
    [CompilerGeneratedAttribute]
private Type <ServiceType>k__BackingField;
    [CompilerGeneratedAttribute]
private IMethod <Method>k__BackingField;
    [DynamicallyAccessedMembersAttribute("27")]
public Type ServiceType { get; }
    public IMethod Method { get; }
    public GrpcMethodMetadata(Type serviceType, IMethod method);
    [CompilerGeneratedAttribute]
public Type get_ServiceType();
    [CompilerGeneratedAttribute]
public IMethod get_Method();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Grpc.AspNetCore.Server.GrpcServiceOptions : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal IList`1<ICompressionProvider> _compressionProviders;
    internal bool _maxReceiveMessageSizeConfigured;
    internal Nullable`1<int> _maxReceiveMessageSize;
    internal bool _maxSendMessageSizeConfigured;
    internal Nullable`1<int> _maxSendMessageSize;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <EnableDetailedErrors>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ResponseCompressionAlgorithm>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<CompressionLevel> <ResponseCompressionLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreUnknownServices>k__BackingField;
    [CompilerGeneratedAttribute]
private InterceptorCollection <Interceptors>k__BackingField;
    public Nullable`1<int> MaxSendMessageSize { get; public set; }
    public Nullable`1<int> MaxReceiveMessageSize { get; public set; }
    public Nullable`1<bool> EnableDetailedErrors { get; public set; }
    [NullableAttribute("2")]
public string ResponseCompressionAlgorithm { get; public set; }
    public Nullable`1<CompressionLevel> ResponseCompressionLevel { get; public set; }
    public IList`1<ICompressionProvider> CompressionProviders { get; public set; }
    public Nullable`1<bool> IgnoreUnknownServices { get; public set; }
    public InterceptorCollection Interceptors { get; }
    public Nullable`1<int> get_MaxSendMessageSize();
    public void set_MaxSendMessageSize(Nullable`1<int> value);
    public Nullable`1<int> get_MaxReceiveMessageSize();
    public void set_MaxReceiveMessageSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_EnableDetailedErrors();
    [CompilerGeneratedAttribute]
public void set_EnableDetailedErrors(Nullable`1<bool> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ResponseCompressionAlgorithm();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_ResponseCompressionAlgorithm(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<CompressionLevel> get_ResponseCompressionLevel();
    [CompilerGeneratedAttribute]
public void set_ResponseCompressionLevel(Nullable`1<CompressionLevel> value);
    public IList`1<ICompressionProvider> get_CompressionProviders();
    public void set_CompressionProviders(IList`1<ICompressionProvider> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IgnoreUnknownServices();
    [CompilerGeneratedAttribute]
public void set_IgnoreUnknownServices(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public InterceptorCollection get_Interceptors();
}
public class Grpc.AspNetCore.Server.GrpcServiceOptions`1 : GrpcServiceOptions {
}
[NullableContextAttribute("1")]
public interface Grpc.AspNetCore.Server.IGrpcInterceptorActivator {
    public abstract virtual GrpcActivatorHandle`1<Interceptor> Create(IServiceProvider serviceProvider, InterceptorRegistration interceptorRegistration);
    public abstract virtual ValueTask ReleaseAsync(GrpcActivatorHandle`1<Interceptor> interceptor);
}
public interface Grpc.AspNetCore.Server.IGrpcInterceptorActivator`1 {
}
[NullableContextAttribute("1")]
public interface Grpc.AspNetCore.Server.IGrpcServerBuilder {
    public IServiceCollection Services { get; }
    public abstract virtual IServiceCollection get_Services();
}
[NullableContextAttribute("1")]
public interface Grpc.AspNetCore.Server.IGrpcServiceActivator`1 {
    public abstract virtual GrpcActivatorHandle`1<TGrpcService> Create(IServiceProvider serviceProvider);
    public abstract virtual ValueTask ReleaseAsync(GrpcActivatorHandle`1<TGrpcService> service);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Grpc.AspNetCore.Server.InterceptorCollection : Collection`1<InterceptorRegistration> {
    public void Add(Object[] args);
    public void Add(Type interceptorType, Object[] args);
    internal void AddRange(IEnumerable`1<InterceptorRegistration> registrations);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Grpc.AspNetCore.Server.InterceptorRegistration : object {
    internal static DynamicallyAccessedMemberTypes InterceptorAccessibility;
    internal Object[] _args;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [NullableAttribute("2")]
private IGrpcInterceptorActivator _interceptorActivator;
    [NullableAttribute("2")]
private ObjectFactory _factory;
    [DynamicallyAccessedMembersAttribute("11")]
public Type Type { get; }
    public IReadOnlyList`1<object> Arguments { get; }
    internal InterceptorRegistration(Type type, Object[] arguments);
    [CompilerGeneratedAttribute]
public Type get_Type();
    public IReadOnlyList`1<object> get_Arguments();
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:UnrecognizedReflectionPattern")]
[UnconditionalSuppressMessageAttribute("AotAnalysis", "IL3050:RequiresDynamicCode")]
internal IGrpcInterceptorActivator GetActivator(IServiceProvider serviceProvider);
    internal ObjectFactory GetFactory();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Grpc.AspNetCore.Server.Internal.CallHandlers.ClientStreamingServerCallHandler`3 : ServerCallHandlerBase`3<TService, TRequest, TResponse> {
    private ClientStreamingServerMethodInvoker`3<TService, TRequest, TResponse> _invoker;
    public ClientStreamingServerCallHandler`3(ClientStreamingServerMethodInvoker`3<TService, TRequest, TResponse> invoker, ILoggerFactory loggerFactory);
    [AsyncStateMachineAttribute("Grpc.AspNetCore.Server.Internal.CallHandlers.ClientStreamingServerCallHandler`3/<HandleCallAsyncCore>d__2")]
protected virtual Task HandleCallAsyncCore(HttpContext httpContext, HttpContextServerCallContext serverCallContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Grpc.AspNetCore.Server.Internal.CallHandlers.DuplexStreamingServerCallHandler`3 : ServerCallHandlerBase`3<TService, TRequest, TResponse> {
    private DuplexStreamingServerMethodInvoker`3<TService, TRequest, TResponse> _invoker;
    public DuplexStreamingServerCallHandler`3(DuplexStreamingServerMethodInvoker`3<TService, TRequest, TResponse> invoker, ILoggerFactory loggerFactory);
    [AsyncStateMachineAttribute("Grpc.AspNetCore.Server.Internal.CallHandlers.DuplexStreamingServerCallHandler`3/<HandleCallAsyncCore>d__2")]
protected virtual Task HandleCallAsyncCore(HttpContext httpContext, HttpContextServerCallContext serverCallContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Grpc.AspNetCore.Server.Internal.CallHandlers.ServerCallHandlerBase`3 : object {
    private static string LoggerName;
    [CompilerGeneratedAttribute]
private ServerMethodInvokerBase`3<TService, TRequest, TResponse> <MethodInvoker>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    protected ServerMethodInvokerBase`3<TService, TRequest, TResponse> MethodInvoker { get; }
    protected ILogger Logger { get; }
    protected ServerCallHandlerBase`3(ServerMethodInvokerBase`3<TService, TRequest, TResponse> methodInvoker, ILoggerFactory loggerFactory);
    [CompilerGeneratedAttribute]
protected ServerMethodInvokerBase`3<TService, TRequest, TResponse> get_MethodInvoker();
    [CompilerGeneratedAttribute]
protected ILogger get_Logger();
    public Task HandleCallAsync(HttpContext httpContext);
    protected abstract virtual Task HandleCallAsyncCore(HttpContext httpContext, HttpContextServerCallContext serverCallContext);
    protected void DisableMinRequestBodyDataRateAndMaxRequestBodySize(HttpContext httpContext);
    protected void DisableRequestTimeout(HttpContext httpContext);
    private Task ProcessNonHttp2Request(HttpContext httpContext);
    private Task ProcessInvalidContentTypeRequest(HttpContext httpContext, string error);
    [AsyncStateMachineAttribute("Grpc.AspNetCore.Server.Internal.CallHandlers.ServerCallHandlerBase`3/<<HandleCallAsync>g__AwaitHandleCall|8_0>d")]
[CompilerGeneratedAttribute]
internal static Task <HandleCallAsync>g__AwaitHandleCall|8_0(HttpContextServerCallContext serverCallContext, Method`2<TRequest, TResponse> method, Task handleCall);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Grpc.AspNetCore.Server.Internal.CallHandlers.ServerStreamingServerCallHandler`3 : ServerCallHandlerBase`3<TService, TRequest, TResponse> {
    private ServerStreamingServerMethodInvoker`3<TService, TRequest, TResponse> _invoker;
    public ServerStreamingServerCallHandler`3(ServerStreamingServerMethodInvoker`3<TService, TRequest, TResponse> invoker, ILoggerFactory loggerFactory);
    [AsyncStateMachineAttribute("Grpc.AspNetCore.Server.Internal.CallHandlers.ServerStreamingServerCallHandler`3/<HandleCallAsyncCore>d__2")]
protected virtual Task HandleCallAsyncCore(HttpContext httpContext, HttpContextServerCallContext serverCallContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Grpc.AspNetCore.Server.Internal.CallHandlers.UnaryServerCallHandler`3 : ServerCallHandlerBase`3<TService, TRequest, TResponse> {
    private UnaryServerMethodInvoker`3<TService, TRequest, TResponse> _invoker;
    public UnaryServerCallHandler`3(UnaryServerMethodInvoker`3<TService, TRequest, TResponse> invoker, ILoggerFactory loggerFactory);
    [AsyncStateMachineAttribute("Grpc.AspNetCore.Server.Internal.CallHandlers.UnaryServerCallHandler`3/<HandleCallAsyncCore>d__2")]
protected virtual Task HandleCallAsyncCore(HttpContext httpContext, HttpContextServerCallContext serverCallContext);
}
internal class Grpc.AspNetCore.Server.Internal.DefaultGrpcInterceptorActivator`1 : object {
    [NullableContextAttribute("1")]
public sealed virtual GrpcActivatorHandle`1<Interceptor> Create(IServiceProvider serviceProvider, InterceptorRegistration interceptorRegistration);
    public sealed virtual ValueTask ReleaseAsync(GrpcActivatorHandle`1<Interceptor> interceptor);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Grpc.AspNetCore.Server.Internal.DefaultGrpcServiceActivator`1 : object {
    private static Lazy`1<ObjectFactory> _objectFactory;
    private static DefaultGrpcServiceActivator`1();
    public sealed virtual GrpcActivatorHandle`1<TGrpcService> Create(IServiceProvider serviceProvider);
    public sealed virtual ValueTask ReleaseAsync(GrpcActivatorHandle`1<TGrpcService> service);
}
internal static class Grpc.AspNetCore.Server.Internal.ErrorMessageHelper : object {
    [NullableContextAttribute("1")]
internal static string BuildErrorMessage(string message, Exception exception, Nullable`1<bool> includeExceptionDetails);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Grpc.AspNetCore.Server.Internal.GrpcEventSource : EventSource {
    [NullableAttribute("1")]
public static GrpcEventSource Log;
    private PollingCounter _totalCallsCounter;
    private PollingCounter _currentCallsCounter;
    private PollingCounter _messagesSentCounter;
    private PollingCounter _messagesReceivedCounter;
    private PollingCounter _callsFailedCounter;
    private PollingCounter _callsDeadlineExceededCounter;
    private PollingCounter _callsUnimplementedCounter;
    private long _totalCalls;
    private long _currentCalls;
    private long _messageSent;
    private long _messageReceived;
    private long _callsFailed;
    private long _callsDeadlineExceeded;
    private long _callsUnimplemented;
    [NullableContextAttribute("1")]
internal GrpcEventSource(string eventSourceName);
    private static GrpcEventSource();
    [NonEventAttribute]
internal void ResetCounters();
    [NullableContextAttribute("1")]
[EventAttribute("1")]
public void CallStart(string method);
    [EventAttribute("2")]
public void CallStop();
    [EventAttribute("3")]
public void CallFailed(StatusCode statusCode);
    [EventAttribute("4")]
public void CallDeadlineExceeded();
    [EventAttribute("5")]
public void MessageSent();
    [EventAttribute("6")]
public void MessageReceived();
    [NullableContextAttribute("1")]
[EventAttribute("7")]
public void CallUnimplemented(string method);
    [ConditionalAttribute("DEBUG")]
[NonEventAttribute]
private void AssertEventSourceEnabled();
    [NullableContextAttribute("1")]
protected virtual void OnEventCommand(EventCommandEventArgs command);
    [CompilerGeneratedAttribute]
private double <OnEventCommand>b__26_0();
    [CompilerGeneratedAttribute]
private double <OnEventCommand>b__26_1();
    [CompilerGeneratedAttribute]
private double <OnEventCommand>b__26_2();
    [CompilerGeneratedAttribute]
private double <OnEventCommand>b__26_3();
    [CompilerGeneratedAttribute]
private double <OnEventCommand>b__26_4();
    [CompilerGeneratedAttribute]
private double <OnEventCommand>b__26_5();
    [CompilerGeneratedAttribute]
private double <OnEventCommand>b__26_6();
}
internal class Grpc.AspNetCore.Server.Internal.GrpcMarkerService : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Grpc.AspNetCore.Server.Internal.GrpcProtocolConstants : object {
    internal static string GrpcContentType;
    internal static string GrpcWebContentType;
    internal static string GrpcWebTextContentType;
    internal static string Http2Protocol;
    internal static string TimeoutHeader;
    internal static string MessageEncodingHeader;
    internal static string MessageAcceptEncodingHeader;
    internal static string CompressionRequestAlgorithmHeader;
    internal static string StatusTrailer;
    internal static string MessageTrailer;
    internal static string IdentityGrpcEncoding;
    internal static int Http2ResetStreamCancel;
    internal static int Http3ResetStreamCancel;
    internal static HashSet`1<string> FilteredHeaders;
    internal static string X509SubjectAlternativeNameId;
    internal static string X509SubjectAlternativeNameKey;
    internal static string X509CommonNameKey;
    internal static long MaxDeadlineTicks;
    internal static DynamicallyAccessedMemberTypes ServiceAccessibility;
    private static GrpcProtocolConstants();
    internal static bool IsHttp2(string protocol);
    internal static bool IsHttp3(string protocol);
    internal static bool IsGrpcEncodingIdentity(string encoding);
    internal static int GetCancelErrorCode(string protocol);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Grpc.AspNetCore.Server.Internal.GrpcProtocolHelpers : object {
    public static bool TryDecodeTimeout(StringValues values, TimeSpan& timeout);
    public static bool IsInvalidContentType(HttpContext httpContext, String& error);
    public static bool IsCorsPreflightRequest(HttpContext httpContext);
    public static void BuildHttpErrorResponse(HttpResponse response, int httpStatusCode, StatusCode grpcStatusCode, string message);
    public static Byte[] ParseBinaryHeader(string base64);
    public static void AddProtocolHeaders(HttpResponse response);
    public static void SetStatus(IHeaderDictionary destination, Status status);
    public static IHeaderDictionary GetTrailersDestination(HttpResponse response);
    public static AuthContext CreateAuthContext(X509Certificate2 clientCertificate);
    [NullableContextAttribute("2")]
internal static bool CanWriteCompressed(WriteOptions writeOptions);
    internal static bool ShouldSkipHeader(string name);
    [CompilerGeneratedAttribute]
internal static void <CreateAuthContext>g__AddProperty|8_0(Dictionary`2<string, List`1<AuthProperty>> properties, string name, string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Grpc.AspNetCore.Server.Internal.GrpcServerBuilder : object {
    [CompilerGeneratedAttribute]
private IServiceCollection <Services>k__BackingField;
    public IServiceCollection Services { get; }
    public GrpcServerBuilder(IServiceCollection services);
    [CompilerGeneratedAttribute]
public sealed virtual IServiceCollection get_Services();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Grpc.AspNetCore.Server.Internal.GrpcServerConstants : object {
    internal static string HostActivityName;
    internal static string HostActivityChanged;
    internal static string ActivityStatusCodeTag;
    internal static string ActivityMethodTag;
    internal static string GrpcUnimplementedConstraintPrefix;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Grpc.AspNetCore.Server.Internal.GrpcServerLog : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`2<ILogger, Exception> _unableToDisableMaxRequestBodySize;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`3<ILogger, string, Exception> _unsupportedRequestContentType;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`3<ILogger, string, Exception> _unsupportedRequestProtocol;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`3<ILogger, TimeSpan, Exception> _deadlineExceeded;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`3<ILogger, string, Exception> _invalidTimeoutIgnored;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`3<ILogger, string, Exception> _errorExecutingServiceMethod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`4<ILogger, StatusCode, string, Exception> _rpcConnectionError;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`3<ILogger, string, Exception> _encodingNotInAcceptEncoding;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`2<ILogger, Exception> _deadlineCancellationError;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`2<ILogger, Exception> _readingMessage;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`2<ILogger, Exception> _noMessageReturned;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`4<ILogger, int, Type, Exception> _deserializingMessage;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`2<ILogger, Exception> _receivedMessage;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`2<ILogger, Exception> _errorReadingMessage;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`2<ILogger, Exception> _sendingMessage;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`2<ILogger, Exception> _messageSent;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`2<ILogger, Exception> _errorSendingMessage;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`4<ILogger, Type, int, Exception> _serializedMessage;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`3<ILogger, string, Exception> _compressingMessage;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`3<ILogger, string, Exception> _decompressingMessage;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`3<ILogger, int, Exception> _resettingResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`2<ILogger, Exception> _abortingResponse;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`2<ILogger, Exception> _unhandledCorsPreflightRequest;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`3<ILogger, TimeSpan, Exception> _deadlineTimeoutTooLong;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`3<ILogger, TimeSpan, Exception> _deadlineTimerRescheduled;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`3<ILogger, TimeSpan, Exception> _deadlineStarted;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`2<ILogger, Exception> _deadlineStopped;
    private static GrpcServerLog();
    internal static void DeadlineStopped(ILogger logger);
    public static void DeadlineStarted(ILogger logger, TimeSpan timeout);
    public static void DeadlineExceeded(ILogger logger, TimeSpan timeout);
    public static void InvalidTimeoutIgnored(ILogger logger, string timeout);
    public static void ErrorExecutingServiceMethod(ILogger logger, string serviceMethod, Exception ex);
    public static void RpcConnectionError(ILogger logger, StatusCode statusCode, string detail, Exception debugException);
    public static void EncodingNotInAcceptEncoding(ILogger logger, string grpcEncoding);
    public static void DeadlineCancellationError(ILogger logger, Exception ex);
    public static void UnableToDisableMaxRequestBodySize(ILogger logger);
    public static void UnsupportedRequestContentType(ILogger logger, string contentType);
    public static void UnsupportedRequestProtocol(ILogger logger, string protocol);
    public static void ReadingMessage(ILogger logger);
    public static void NoMessageReturned(ILogger logger);
    public static void DeserializingMessage(ILogger logger, int messageLength, Type messageType);
    public static void ReceivedMessage(ILogger logger);
    public static void ErrorReadingMessage(ILogger logger, Exception ex);
    public static void SendingMessage(ILogger logger);
    public static void MessageSent(ILogger logger);
    public static void ErrorSendingMessage(ILogger logger, Exception ex);
    public static void SerializedMessage(ILogger logger, Type messageType, int messageLength);
    public static void CompressingMessage(ILogger logger, string messageEncoding);
    public static void DecompressingMessage(ILogger logger, string messageEncoding);
    public static void ResettingResponse(ILogger logger, int errorCode);
    public static void AbortingResponse(ILogger logger);
    public static void UnhandledCorsPreflightRequest(ILogger logger);
    public static void DeadlineTimeoutTooLong(ILogger logger, TimeSpan timeout);
    public static void DeadlineTimerRescheduled(ILogger logger, TimeSpan remaining);
}
internal class Grpc.AspNetCore.Server.Internal.GrpcServiceOptionsSetup : object {
    internal static int DefaultReceiveMaxMessageSize;
    [NullableContextAttribute("1")]
public sealed virtual void Configure(GrpcServiceOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Grpc.AspNetCore.Server.Internal.GrpcServiceOptionsSetup`1 : object {
    private GrpcServiceOptions _options;
    public GrpcServiceOptionsSetup`1(IOptions`1<GrpcServiceOptions> options);
    public sealed virtual void Configure(GrpcServiceOptions`1<TService> options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Grpc.AspNetCore.Server.Internal.HttpContextSerializationContext : SerializationContext {
    private static Status SendingMessageExceedsLimitStatus;
    private HttpContextServerCallContext _serverCallContext;
    private InternalState _state;
    private Nullable`1<int> _payloadLength;
    [NullableAttribute("2")]
private ICompressionProvider _compressionProvider;
    [NullableAttribute("2")]
private ArrayBufferWriter`1<byte> _bufferWriter;
    [CompilerGeneratedAttribute]
private PipeWriter <ResponseBufferWriter>k__BackingField;
    public PipeWriter ResponseBufferWriter { get; public set; }
    public HttpContextSerializationContext(HttpContextServerCallContext serverCallContext);
    private static HttpContextSerializationContext();
    [CompilerGeneratedAttribute]
public PipeWriter get_ResponseBufferWriter();
    [CompilerGeneratedAttribute]
public void set_ResponseBufferWriter(PipeWriter value);
    private bool IsDirectSerializationSupported(Int32& payloadLength);
    public void Reset();
    [NullableContextAttribute("2")]
private ICompressionProvider ResolveCompressionProvider();
    public virtual void SetPayloadLength(int payloadLength);
    public virtual void Complete(Byte[] payload);
    private static void WriteHeader(PipeWriter pipeWriter, int length, bool compress);
    public virtual IBufferWriter`1<byte> GetBufferWriter();
    private IBufferWriter`1<byte> ResolveBufferWriter();
    private void EnsureMessageSizeAllowed(int payloadLength);
    private static void ThrowInvalidState(InternalState state);
    public virtual void Complete();
    [NullableContextAttribute("0")]
private void WriteMessage(ReadOnlySpan`1<byte> data);
    [NullableContextAttribute("0")]
private ReadOnlySpan`1<byte> CompressMessage(ReadOnlySpan`1<byte> messageData);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerToString(),nq}")]
[DebuggerTypeProxyAttribute("Grpc.AspNetCore.Server.Internal.HttpContextServerCallContext/HttpContextServerCallContextDebugView")]
internal class Grpc.AspNetCore.Server.Internal.HttpContextServerCallContext : ServerCallContext {
    private static AuthContext UnauthenticatedContext;
    [NullableAttribute("2")]
private string _peer;
    [NullableAttribute("2")]
private Metadata _requestHeaders;
    [NullableAttribute("2")]
private Metadata _responseTrailers;
    private Status _status;
    [NullableAttribute("2")]
private AuthContext _authContext;
    [NullableAttribute("2")]
private Activity _activity;
    [NullableAttribute("2")]
internal ServerCallDeadlineManager DeadlineManager;
    [NullableAttribute("2")]
private HttpContextSerializationContext _serializationContext;
    [NullableAttribute("2")]
private DefaultDeserializationContext _deserializationContext;
    [CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    [CompilerGeneratedAttribute]
private MethodOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <RequestType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ResponseType>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ResponseGrpcEncoding>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private WriteOptions <WriteOptionsCore>k__BackingField;
    internal ILogger Logger { get; }
    internal HttpContext HttpContext { get; }
    internal MethodOptions Options { get; }
    internal Type RequestType { get; }
    internal Type ResponseType { get; }
    [NullableAttribute("2")]
internal string ResponseGrpcEncoding { get; private set; }
    internal HttpContextSerializationContext SerializationContext { get; }
    internal DefaultDeserializationContext DeserializationContext { get; }
    internal bool HasResponseTrailers { get; }
    protected string MethodCore { get; }
    protected string HostCore { get; }
    protected string PeerCore { get; }
    protected DateTime DeadlineCore { get; }
    protected Metadata RequestHeadersCore { get; }
    protected CancellationToken CancellationTokenCore { get; }
    protected Metadata ResponseTrailersCore { get; }
    protected Status StatusCore { get; protected set; }
    [NullableAttribute("2")]
protected WriteOptions WriteOptionsCore { get; protected set; }
    protected AuthContext AuthContextCore { get; }
    public ServerCallContext ServerCallContext { get; }
    protected IDictionary`2<object, object> UserStateCore { get; }
    internal HttpContextServerCallContext(HttpContext httpContext, MethodOptions options, Type requestType, Type responseType, ILogger logger);
    private static HttpContextServerCallContext();
    [CompilerGeneratedAttribute]
internal ILogger get_Logger();
    [CompilerGeneratedAttribute]
internal HttpContext get_HttpContext();
    [CompilerGeneratedAttribute]
internal MethodOptions get_Options();
    [CompilerGeneratedAttribute]
internal Type get_RequestType();
    [CompilerGeneratedAttribute]
internal Type get_ResponseType();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal string get_ResponseGrpcEncoding();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_ResponseGrpcEncoding(string value);
    internal HttpContextSerializationContext get_SerializationContext();
    internal DefaultDeserializationContext get_DeserializationContext();
    internal bool get_HasResponseTrailers();
    protected virtual string get_MethodCore();
    protected virtual string get_HostCore();
    protected virtual string get_PeerCore();
    private string BuildPeer();
    protected virtual DateTime get_DeadlineCore();
    protected virtual Metadata get_RequestHeadersCore();
    internal Task ProcessHandlerErrorAsync(Exception ex, string method);
    [AsyncStateMachineAttribute("Grpc.AspNetCore.Server.Internal.HttpContextServerCallContext/<ProcessHandlerErrorAsyncCore>d__48")]
private Task ProcessHandlerErrorAsyncCore(Exception ex, string method);
    private void ProcessHandlerError(Exception ex, string method);
    protected virtual CancellationToken get_CancellationTokenCore();
    protected virtual Metadata get_ResponseTrailersCore();
    protected virtual Status get_StatusCore();
    protected virtual void set_StatusCore(Status value);
    internal Task EndCallAsync();
    [AsyncStateMachineAttribute("Grpc.AspNetCore.Server.Internal.HttpContextServerCallContext/<EndCallAsyncCore>d__58")]
private Task EndCallAsyncCore();
    private void EndCallCore();
    private void LogCallEnd();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual WriteOptions get_WriteOptionsCore();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual void set_WriteOptionsCore(WriteOptions value);
    protected virtual AuthContext get_AuthContextCore();
    public sealed virtual ServerCallContext get_ServerCallContext();
    protected virtual IDictionary`2<object, object> get_UserStateCore();
    protected virtual ContextPropagationToken CreatePropagationTokenCore(ContextPropagationOptions options);
    protected virtual Task WriteResponseHeadersAsyncCore(Metadata responseHeaders);
    [NullableContextAttribute("2")]
public void Initialize(ISystemClock clock);
    [NullableContextAttribute("2")]
private Activity GetHostActivity();
    private TimeSpan GetTimeout();
    [AsyncStateMachineAttribute("Grpc.AspNetCore.Server.Internal.HttpContextServerCallContext/<DeadlineExceededAsync>d__76")]
internal Task DeadlineExceededAsync();
    internal void CancelRequest();
    [NullableContextAttribute("2")]
internal string GetRequestGrpcEncoding();
    internal bool IsEncodingInRequestAcceptEncoding(string encoding);
    internal void ValidateAcceptEncodingContainsResponseEncoding();
    private string DebuggerToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerToString(),nq}")]
[DebuggerTypeProxyAttribute("Grpc.AspNetCore.Server.Internal.HttpContextStreamReader`1/HttpContextStreamReaderDebugView")]
internal class Grpc.AspNetCore.Server.Internal.HttpContextStreamReader`1 : object {
    private HttpContextServerCallContext _serverCallContext;
    private Func`2<DeserializationContext, TRequest> _deserializer;
    private bool _completed;
    private long _readCount;
    private bool _endOfStream;
    [CompilerGeneratedAttribute]
private TRequest <Current>k__BackingField;
    public TRequest Current { get; private set; }
    public HttpContextStreamReader`1(HttpContextServerCallContext serverCallContext, Func`2<DeserializationContext, TRequest> deserializer);
    [CompilerGeneratedAttribute]
public sealed virtual TRequest get_Current();
    [CompilerGeneratedAttribute]
private void set_Current(TRequest value);
    public void Dispose();
    public sealed virtual Task`1<bool> MoveNext(CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
private bool ProcessPayload(TRequest request);
    public void Complete();
    private string DebuggerToString();
    [AsyncStateMachineAttribute("Grpc.AspNetCore.Server.Internal.HttpContextStreamReader`1/<<MoveNext>g__MoveNextAsync|11_0>d")]
[CompilerGeneratedAttribute]
private Task`1<bool> <MoveNext>g__MoveNextAsync|11_0(ValueTask`1<TRequest> readStreamTask);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerToString(),nq}")]
[DebuggerTypeProxyAttribute("Grpc.AspNetCore.Server.Internal.HttpContextStreamWriter`1/HttpContextStreamWriterDebugView")]
internal class Grpc.AspNetCore.Server.Internal.HttpContextStreamWriter`1 : object {
    private HttpContextServerCallContext _context;
    private Action`2<TResponse, SerializationContext> _serializer;
    private object _writeLock;
    [NullableAttribute("2")]
private Task _writeTask;
    private bool _completed;
    private long _writeCount;
    [NullableAttribute("2")]
public WriteOptions WriteOptions { get; public set; }
    private bool IsWriteInProgressUnsynchronized { get; }
    public HttpContextStreamWriter`1(HttpContextServerCallContext context, Action`2<TResponse, SerializationContext> serializer);
    [NullableContextAttribute("2")]
public sealed virtual WriteOptions get_WriteOptions();
    [NullableContextAttribute("2")]
public sealed virtual void set_WriteOptions(WriteOptions value);
    public sealed virtual Task WriteAsync(TResponse message);
    private sealed virtual override Task Grpc.Core.IAsyncStreamWriter<TResponse>.WriteAsync(TResponse message, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Grpc.AspNetCore.Server.Internal.HttpContextStreamWriter`1/<WriteCoreAsync>d__12")]
private Task WriteCoreAsync(TResponse message, CancellationToken cancellationToken);
    public void Complete();
    private bool get_IsWriteInProgressUnsynchronized();
    private string DebuggerToString();
}
[ExtensionAttribute]
internal static class Grpc.AspNetCore.Server.Internal.HttpResponseExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void ConsolidateTrailers(HttpResponse httpResponse, HttpContextServerCallContext context);
}
internal interface Grpc.AspNetCore.Server.Internal.ISystemClock {
    public DateTime UtcNow { get; }
    public abstract virtual DateTime get_UtcNow();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Grpc.AspNetCore.Server.Internal.PercentEncodingHelpers : object {
    private static Char[] HexChars;
    internal static int MaxUnicodeCharsReallocate;
    private static int MaxUtf8BytesPerUnicodeChar;
    private static int AsciiMaxValue;
    private static Byte[] PercentEncodingUnreservedBitField;
    private static PercentEncodingHelpers();
    public static string PercentEncode(string value);
    [NullableContextAttribute("0")]
private static void EscapeAsciiChar(Span`1<char> span, Int32& writePosition, char current);
    private static int GetCountOfNonAsciiUtf16CodeUnits(string value, int currentIndex, int maxCount);
    private static bool IsUnreservedCharacter(char c);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static void <PercentEncode>g__Encode|5_0(Span`1<char> span, string s);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Grpc.AspNetCore.Server.Internal.PipeExtensions : object {
    private static int MessageDelimiterSize;
    private static int HeaderSize;
    private static Status MessageCancelledStatus;
    private static Status AdditionalDataStatus;
    private static Status IncompleteMessageStatus;
    private static Status ReceivedMessageExceedsLimitStatus;
    private static Status NoMessageEncodingMessageStatus;
    private static Status IdentityMessageEncodingMessageStatus;
    private static PipeExtensions();
    private static Status CreateUnknownMessageEncodingMessageStatus(string unsupportedEncoding, IEnumerable`1<string> supportedEncodings);
    [AsyncStateMachineAttribute("Grpc.AspNetCore.Server.Internal.PipeExtensions/<WriteSingleMessageAsync>d__9`1")]
[ExtensionAttribute]
public static Task WriteSingleMessageAsync(PipeWriter pipeWriter, TResponse response, HttpContextServerCallContext serverCallContext, Action`2<TResponse, SerializationContext> serializer);
    [AsyncStateMachineAttribute("Grpc.AspNetCore.Server.Internal.PipeExtensions/<WriteStreamedMessageAsync>d__10`1")]
[ExtensionAttribute]
public static Task WriteStreamedMessageAsync(PipeWriter pipeWriter, TResponse response, HttpContextServerCallContext serverCallContext, Action`2<TResponse, SerializationContext> serializer, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private static int DecodeMessageLength(ReadOnlySpan`1<byte> buffer);
    [NullableContextAttribute("0")]
private static bool TryReadHeader(ReadOnlySequence`1& buffer, Boolean& compressed, Int32& messageLength);
    private static bool ReadCompressedFlag(byte flag);
    [AsyncStateMachineAttribute("Grpc.AspNetCore.Server.Internal.PipeExtensions/<ReadSingleMessageAsync>d__14`1")]
[ExtensionAttribute]
public static ValueTask`1<T> ReadSingleMessageAsync(PipeReader input, HttpContextServerCallContext serverCallContext, Func`2<DeserializationContext, T> deserializer);
    [AsyncStateMachineAttribute("Grpc.AspNetCore.Server.Internal.PipeExtensions/<ReadStreamMessageAsync>d__15`1")]
[ExtensionAttribute]
[AsyncMethodBuilderAttribute("System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1")]
public static ValueTask`1<T> ReadStreamMessageAsync(PipeReader input, HttpContextServerCallContext serverCallContext, Func`2<DeserializationContext, T> deserializer, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
private static bool TryReadMessage(ReadOnlySequence`1& buffer, HttpContextServerCallContext context, ReadOnlySequence`1& message);
    private static bool TryDecompressMessage(ILogger logger, string compressionEncoding, IReadOnlyDictionary`2<string, ICompressionProvider> compressionProviders, ReadOnlySequence`1& messageData, ReadOnlySequence`1& result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Grpc.AspNetCore.Server.Internal.ReadOnlySequenceStream : Stream {
    private static Task`1<int> TaskOfZero;
    [NullableAttribute("2")]
private Task`1<int> _lastReadTask;
    [NullableAttribute("0")]
private ReadOnlySequence`1<byte> _readOnlySequence;
    private SequencePosition _position;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    [NullableContextAttribute("0")]
public ReadOnlySequenceStream(ReadOnlySequence`1<byte> readOnlySequence);
    private static ReadOnlySequenceStream();
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Flush();
    public virtual Task FlushAsync(CancellationToken cancellationToken);
    public virtual int Read(Byte[] buffer, int offset, int count);
    [NullableContextAttribute("0")]
public virtual int Read(Span`1<byte> buffer);
    public virtual Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public virtual ValueTask`1<int> ReadAsync(Memory`1<byte> buffer, CancellationToken cancellationToken);
    public virtual int ReadByte();
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual void WriteByte(byte value);
    public virtual Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
public virtual ValueTask WriteAsync(ReadOnlyMemory`1<byte> buffer, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Grpc.AspNetCore.Server.Internal.ReadOnlySequenceStream/<CopyToAsync>d__29")]
public virtual Task CopyToAsync(Stream destination, int bufferSize, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Grpc.AspNetCore.Server.Internal.ServerCallDeadlineManager : object {
    private static long DefaultMaxTimerDueTime;
    private static TimerCallback DeadlineExceededDelegate;
    private static TimerCallback DeadlineExceededLongDelegate;
    private Timer _longDeadlineTimer;
    private ISystemClock _systemClock;
    private HttpContextServerCallContext _serverCallContext;
    [NullableAttribute("2")]
private CancellationTokenSource _deadlineCts;
    private CancellationTokenRegistration _requestAbortedRegistration;
    [NullableAttribute("2")]
private TaskCompletionSource`1<object> _deadlineExceededCompleteTcs;
    [CompilerGeneratedAttribute]
private DateTime <Deadline>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCallComplete>k__BackingField;
    public DateTime Deadline { get; }
    public bool IsCallComplete { get; private set; }
    public bool IsDeadlineExceededStarted { get; }
    public CancellationToken CancellationToken { get; }
    public ServerCallDeadlineManager(HttpContextServerCallContext serverCallContext, ISystemClock clock, TimeSpan timeout, long maxTimerDueTime);
    private static ServerCallDeadlineManager();
    [CompilerGeneratedAttribute]
public DateTime get_Deadline();
    [CompilerGeneratedAttribute]
public bool get_IsCallComplete();
    [CompilerGeneratedAttribute]
private void set_IsCallComplete(bool value);
    public bool get_IsDeadlineExceededStarted();
    public CancellationToken get_CancellationToken();
    public Task WaitDeadlineCompleteAsync();
    [NullableContextAttribute("2")]
private static void DeadlineExceededCallback(object state);
    [NullableContextAttribute("2")]
private static void DeadlineExceededLongCallback(object state);
    private void RequestAborted();
    public void SetCallEnded();
    public bool TrySetCallComplete();
    [AsyncStateMachineAttribute("Grpc.AspNetCore.Server.Internal.ServerCallDeadlineManager/<DeadlineExceededAsync>d__27")]
private Task DeadlineExceededAsync();
    private bool TryStartExceededDeadline();
    public sealed virtual ValueTask DisposeAsync();
    [AsyncStateMachineAttribute("Grpc.AspNetCore.Server.Internal.ServerCallDeadlineManager/<DeadlineDisposeAsyncCore>d__30")]
private ValueTask DeadlineDisposeAsyncCore(ValueTask disposeTask);
    private void DisposeCore();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Grpc.AspNetCore.Server.Internal.ServerCallHandlerFactory`1 : object {
    private ILoggerFactory _loggerFactory;
    private IGrpcServiceActivator`1<TService> _serviceActivator;
    private GrpcServiceOptions _globalOptions;
    private GrpcServiceOptions`1<TService> _serviceOptions;
    public bool IgnoreUnknownServices { get; }
    public bool IgnoreUnknownMethods { get; }
    public ServerCallHandlerFactory`1(ILoggerFactory loggerFactory, IOptions`1<GrpcServiceOptions> globalOptions, IOptions`1<GrpcServiceOptions`1<TService>> serviceOptions, IGrpcServiceActivator`1<TService> serviceActivator);
    internal MethodOptions CreateMethodOptions();
    public UnaryServerCallHandler`3<TService, TRequest, TResponse> CreateUnary(Method`2<TRequest, TResponse> method, UnaryServerMethod`3<TService, TRequest, TResponse> invoker);
    public ClientStreamingServerCallHandler`3<TService, TRequest, TResponse> CreateClientStreaming(Method`2<TRequest, TResponse> method, ClientStreamingServerMethod`3<TService, TRequest, TResponse> invoker);
    public DuplexStreamingServerCallHandler`3<TService, TRequest, TResponse> CreateDuplexStreaming(Method`2<TRequest, TResponse> method, DuplexStreamingServerMethod`3<TService, TRequest, TResponse> invoker);
    public ServerStreamingServerCallHandler`3<TService, TRequest, TResponse> CreateServerStreaming(Method`2<TRequest, TResponse> method, ServerStreamingServerMethod`3<TService, TRequest, TResponse> invoker);
    public RequestDelegate CreateUnimplementedMethod();
    public bool get_IgnoreUnknownServices();
    public bool get_IgnoreUnknownMethods();
    public RequestDelegate CreateUnimplementedService();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Grpc.AspNetCore.Server.Internal.ServerCallHandlerFactoryLog : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`3<ILogger, string, Exception> _serviceUnimplemented;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`3<ILogger, string, Exception> _methodUnimplemented;
    private static ServerCallHandlerFactoryLog();
    public static void ServiceUnimplemented(ILogger logger, string serviceName);
    public static void MethodUnimplemented(ILogger logger, string methodName);
}
[ExtensionAttribute]
internal static class Grpc.AspNetCore.Server.Internal.StatusCodeExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static string ToTrailerString(StatusCode status);
}
internal class Grpc.AspNetCore.Server.Internal.SystemClock : object {
    [NullableAttribute("1")]
public static SystemClock Instance;
    public DateTime UtcNow { get; }
    private static SystemClock();
    public sealed virtual DateTime get_UtcNow();
}
[ExtensionAttribute]
internal static class Grpc.AspNetCore.Server.Internal.ValueTaskExtensions : object {
    [ExtensionAttribute]
public static Task GetAsTask(ValueTask`1& valueTask);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Grpc.AspNetCore.Server.Internal.X509CertificateHelpers : object {
    public static String[] GetDnsFromExtensions(X509Certificate2 cert);
}
[NullableContextAttribute("1")]
public interface Grpc.AspNetCore.Server.IServerCallContextFeature {
    public ServerCallContext ServerCallContext { get; }
    public abstract virtual ServerCallContext get_ServerCallContext();
}
public class Grpc.AspNetCore.Server.Model.ClientStreamingServerMethod`3 : MulticastDelegate {
    public ClientStreamingServerMethod`3(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual Task`1<TResponse> Invoke(TService service, IAsyncStreamReader`1<TRequest> stream, ServerCallContext serverCallContext);
    public virtual IAsyncResult BeginInvoke(TService service, IAsyncStreamReader`1<TRequest> stream, ServerCallContext serverCallContext, AsyncCallback callback, object object);
    public virtual Task`1<TResponse> EndInvoke(IAsyncResult result);
}
public class Grpc.AspNetCore.Server.Model.DuplexStreamingServerMethod`3 : MulticastDelegate {
    public DuplexStreamingServerMethod`3(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual Task Invoke(TService service, IAsyncStreamReader`1<TRequest> input, IServerStreamWriter`1<TResponse> output, ServerCallContext serverCallContext);
    [NullableContextAttribute("1")]
public virtual IAsyncResult BeginInvoke(TService service, IAsyncStreamReader`1<TRequest> input, IServerStreamWriter`1<TResponse> output, ServerCallContext serverCallContext, AsyncCallback callback, object object);
    public virtual Task EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Grpc.AspNetCore.Server.Model.Internal.BinderServiceMethodProvider`1 : object {
    private ILogger`1<BinderServiceMethodProvider`1<TService>> _logger;
    public BinderServiceMethodProvider`1(ILoggerFactory loggerFactory);
    public sealed virtual void OnServiceMethodDiscovery(ServiceMethodProviderContext`1<TService> context);
}
internal static class Grpc.AspNetCore.Server.Model.Internal.BinderServiceMethodProviderLog : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`3<ILogger, Type, Exception> _bindMethodNotFound;
    private static BinderServiceMethodProviderLog();
    [NullableContextAttribute("1")]
public static void BindMethodNotFound(ILogger logger, Type serviceType);
}
internal class Grpc.AspNetCore.Server.Model.Internal.GrpcUnimplementedConstraint : object {
    [NullableContextAttribute("1")]
public sealed virtual bool Match(HttpContext httpContext, IRouter route, string routeKey, RouteValueDictionary values, RouteDirection routeDirection);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Grpc.AspNetCore.Server.Model.Internal.MethodModel : object {
    [CompilerGeneratedAttribute]
private IMethod <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private RoutePattern <Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<object> <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestDelegate <RequestDelegate>k__BackingField;
    public IMethod Method { get; }
    public RoutePattern Pattern { get; }
    public IList`1<object> Metadata { get; }
    public RequestDelegate RequestDelegate { get; }
    public MethodModel(IMethod method, RoutePattern pattern, IList`1<object> metadata, RequestDelegate requestDelegate);
    [CompilerGeneratedAttribute]
public IMethod get_Method();
    [CompilerGeneratedAttribute]
public RoutePattern get_Pattern();
    [CompilerGeneratedAttribute]
public IList`1<object> get_Metadata();
    [CompilerGeneratedAttribute]
public RequestDelegate get_RequestDelegate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Grpc.AspNetCore.Server.Model.Internal.ProviderServiceBinder`1 : ServiceBinderBase {
    private ServiceMethodProviderContext`1<TService> _context;
    private Type _declaringType;
    internal ProviderServiceBinder`1(ServiceMethodProviderContext`1<TService> context, Type declaringType);
    public virtual void AddMethod(Method`2<TRequest, TResponse> method, ClientStreamingServerMethod`2<TRequest, TResponse> handler);
    public virtual void AddMethod(Method`2<TRequest, TResponse> method, DuplexStreamingServerMethod`2<TRequest, TResponse> handler);
    public virtual void AddMethod(Method`2<TRequest, TResponse> method, ServerStreamingServerMethod`2<TRequest, TResponse> handler);
    public virtual void AddMethod(Method`2<TRequest, TResponse> method, UnaryServerMethod`2<TRequest, TResponse> handler);
    private ValueTuple`2<TDelegate, List`1<object>> CreateModelCore(string methodName, Type[] methodParameters);
    private MethodInfo GetMethod(string methodName, Type[] methodParameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Grpc.AspNetCore.Server.Model.Internal.ServiceMethodsRegistry : object {
    [CompilerGeneratedAttribute]
private List`1<MethodModel> <Methods>k__BackingField;
    public List`1<MethodModel> Methods { get; }
    [CompilerGeneratedAttribute]
public List`1<MethodModel> get_Methods();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Grpc.AspNetCore.Server.Model.Internal.ServiceRouteBuilder`1 : object {
    private IEnumerable`1<IServiceMethodProvider`1<TService>> _serviceMethodProviders;
    private ServerCallHandlerFactory`1<TService> _serverCallHandlerFactory;
    private ServiceMethodsRegistry _serviceMethodsRegistry;
    private ILogger _logger;
    public ServiceRouteBuilder`1(IEnumerable`1<IServiceMethodProvider`1<TService>> serviceMethodProviders, ServerCallHandlerFactory`1<TService> serverCallHandlerFactory, ServiceMethodsRegistry serviceMethodsRegistry, ILoggerFactory loggerFactory);
    internal List`1<IEndpointConventionBuilder> Build(IEndpointRouteBuilder endpointRouteBuilder);
    internal static void CreateUnimplementedEndpoints(IEndpointRouteBuilder endpointRouteBuilder, ServiceMethodsRegistry serviceMethodsRegistry, ServerCallHandlerFactory`1<TService> serverCallHandlerFactory, List`1<MethodModel> serviceMethods, List`1<IEndpointConventionBuilder> endpointConventionBuilders);
    private static IEndpointConventionBuilder CreateUnimplementedEndpoint(IEndpointRouteBuilder endpointRouteBuilder, string pattern, string displayName, RequestDelegate requestDelegate);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Grpc.AspNetCore.Server.Model.Internal.ServiceRouteBuilderLog : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`7<ILogger, string, string, MethodType, string, string, Exception> _addedServiceMethod;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`3<ILogger, Type, Exception> _discoveringServiceMethods;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Action`3<ILogger, Type, Exception> _noServiceMethodsDiscovered;
    private static ServiceRouteBuilderLog();
    public static void AddedServiceMethod(ILogger logger, string methodName, string serviceName, MethodType methodType, IReadOnlyList`1<string> httpMethods, string routePattern);
    public static void DiscoveringServiceMethods(ILogger logger, Type serviceType);
    public static void NoServiceMethodsDiscovered(ILogger logger, Type serviceType);
}
[NullableContextAttribute("1")]
public interface Grpc.AspNetCore.Server.Model.IServiceMethodProvider`1 {
    public abstract virtual void OnServiceMethodDiscovery(ServiceMethodProviderContext`1<TService> context);
}
public class Grpc.AspNetCore.Server.Model.ServerStreamingServerMethod`3 : MulticastDelegate {
    public ServerStreamingServerMethod`3(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual Task Invoke(TService service, TRequest request, IServerStreamWriter`1<TResponse> stream, ServerCallContext serverCallContext);
    [NullableContextAttribute("1")]
public virtual IAsyncResult BeginInvoke(TService service, TRequest request, IServerStreamWriter`1<TResponse> stream, ServerCallContext serverCallContext, AsyncCallback callback, object object);
    public virtual Task EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Grpc.AspNetCore.Server.Model.ServiceMethodProviderContext`1 : object {
    private ServerCallHandlerFactory`1<TService> _serverCallHandlerFactory;
    [CompilerGeneratedAttribute]
private List`1<MethodModel> <Methods>k__BackingField;
    internal List`1<MethodModel> Methods { get; }
    internal ServiceMethodProviderContext`1(ServerCallHandlerFactory`1<TService> serverCallHandlerFactory);
    [CompilerGeneratedAttribute]
internal List`1<MethodModel> get_Methods();
    public void AddUnaryMethod(Method`2<TRequest, TResponse> method, IList`1<object> metadata, UnaryServerMethod`3<TService, TRequest, TResponse> invoker);
    public void AddServerStreamingMethod(Method`2<TRequest, TResponse> method, IList`1<object> metadata, ServerStreamingServerMethod`3<TService, TRequest, TResponse> invoker);
    public void AddClientStreamingMethod(Method`2<TRequest, TResponse> method, IList`1<object> metadata, ClientStreamingServerMethod`3<TService, TRequest, TResponse> invoker);
    public void AddDuplexStreamingMethod(Method`2<TRequest, TResponse> method, IList`1<object> metadata, DuplexStreamingServerMethod`3<TService, TRequest, TResponse> invoker);
    public void AddMethod(Method`2<TRequest, TResponse> method, RoutePattern pattern, IList`1<object> metadata, RequestDelegate invoker);
}
public class Grpc.AspNetCore.Server.Model.UnaryServerMethod`3 : MulticastDelegate {
    public UnaryServerMethod`3(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual Task`1<TResponse> Invoke(TService service, TRequest request, ServerCallContext serverCallContext);
    public virtual IAsyncResult BeginInvoke(TService service, TRequest request, ServerCallContext serverCallContext, AsyncCallback callback, object object);
    public virtual Task`1<TResponse> EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Grpc.Core.ServerCallContextExtensions : object {
    internal static string HttpContextKey;
    [ExtensionAttribute]
public static HttpContext GetHttpContext(ServerCallContext serverCallContext);
}
internal static class Grpc.Shared.ArgumentNullThrowHelper : object {
    [NullableContextAttribute("2")]
public static void ThrowIfNull(object argument, string paramName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Grpc.Shared.CommonGrpcProtocolHelpers : object {
    public static Task`1<bool> TrueTask;
    public static Task`1<bool> FalseTask;
    private static int TimerEpsilonMilliseconds;
    private static CommonGrpcProtocolHelpers();
    public static long GetTimerDueTime(TimeSpan timeout, long maxTimerDueTime);
    public static bool IsContentType(string contentType, string s);
    public static string ConvertToRpcExceptionMessage(Exception ex);
    private static string BuildErrorMessage(Exception ex);
}
internal class Grpc.Shared.DefaultDeserializationContext : DeserializationContext {
    private Nullable`1<ReadOnlySequence`1<byte>> _payload;
    public int PayloadLength { get; }
    public void SetPayload(Nullable`1& payload);
    [NullableContextAttribute("1")]
public virtual Byte[] PayloadAsNewBuffer();
    public virtual ReadOnlySequence`1<byte> PayloadAsReadOnlySequence();
    public virtual int get_PayloadLength();
}
internal static class Grpc.Shared.NonCapturingTimer : object {
    [NullableContextAttribute("1")]
public static Timer Create(TimerCallback callback, object state, TimeSpan dueTime, TimeSpan period);
}
internal class Grpc.Shared.NonDisposableMemoryStream : MemoryStream {
    protected virtual void Dispose(bool disposing);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Grpc.Shared.ObjectDisposedThrowHelper : object {
    public static void ThrowIf(bool condition, object instance);
    public static void ThrowIf(bool condition, Type type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Grpc.Shared.Server.BindMethodFinder : object {
    private static BindingFlags BindMethodBindingFlags;
    internal static MethodInfo GetBindMethod(Type serviceType);
    internal static MethodInfo GetBindMethodUsingAttribute(Type serviceType);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2075:UnrecognizedReflectionPattern")]
internal static MethodInfo GetBindMethodFallback(Type serviceType);
    private static Type GetServiceBaseType(Type serviceImplementation);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Grpc.Shared.Server.ClientStreamingServerMethodInvoker`3 : ServerMethodInvokerBase`3<TService, TRequest, TResponse> {
    private ClientStreamingServerMethod`3<TService, TRequest, TResponse> _invoker;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ClientStreamingServerMethod`2<TRequest, TResponse> _pipelineInvoker;
    public ClientStreamingServerMethodInvoker`3(ClientStreamingServerMethod`3<TService, TRequest, TResponse> invoker, Method`2<TRequest, TResponse> method, MethodOptions options, IGrpcServiceActivator`1<TService> serviceActivator);
    [AsyncStateMachineAttribute("Grpc.Shared.Server.ClientStreamingServerMethodInvoker`3/<ResolvedInterceptorInvoker>d__3")]
private Task`1<TResponse> ResolvedInterceptorInvoker(IAsyncStreamReader`1<TRequest> requestStream, ServerCallContext resolvedContext);
    [AsyncStateMachineAttribute("Grpc.Shared.Server.ClientStreamingServerMethodInvoker`3/<Invoke>d__4")]
public Task`1<TResponse> Invoke(HttpContext httpContext, ServerCallContext serverCallContext, IAsyncStreamReader`1<TRequest> requestStream);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Grpc.Shared.Server.DuplexStreamingServerMethodInvoker`3 : ServerMethodInvokerBase`3<TService, TRequest, TResponse> {
    private DuplexStreamingServerMethod`3<TService, TRequest, TResponse> _invoker;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private DuplexStreamingServerMethod`2<TRequest, TResponse> _pipelineInvoker;
    public DuplexStreamingServerMethodInvoker`3(DuplexStreamingServerMethod`3<TService, TRequest, TResponse> invoker, Method`2<TRequest, TResponse> method, MethodOptions options, IGrpcServiceActivator`1<TService> serviceActivator);
    [AsyncStateMachineAttribute("Grpc.Shared.Server.DuplexStreamingServerMethodInvoker`3/<ResolvedInterceptorInvoker>d__3")]
private Task ResolvedInterceptorInvoker(IAsyncStreamReader`1<TRequest> requestStream, IServerStreamWriter`1<TResponse> responseStream, ServerCallContext resolvedContext);
    [AsyncStateMachineAttribute("Grpc.Shared.Server.DuplexStreamingServerMethodInvoker`3/<Invoke>d__4")]
public Task Invoke(HttpContext httpContext, ServerCallContext serverCallContext, IAsyncStreamReader`1<TRequest> requestStream, IServerStreamWriter`1<TResponse> responseStream);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Grpc.Shared.Server.InterceptorPipelineBuilder`2 : object {
    private IReadOnlyList`1<InterceptorRegistration> _interceptors;
    public InterceptorPipelineBuilder`2(IReadOnlyList`1<InterceptorRegistration> interceptors);
    public ClientStreamingServerMethod`2<TRequest, TResponse> ClientStreamingPipeline(ClientStreamingServerMethod`2<TRequest, TResponse> innerInvoker);
    internal DuplexStreamingServerMethod`2<TRequest, TResponse> DuplexStreamingPipeline(DuplexStreamingServerMethod`2<TRequest, TResponse> innerInvoker);
    internal ServerStreamingServerMethod`2<TRequest, TResponse> ServerStreamingPipeline(ServerStreamingServerMethod`2<TRequest, TResponse> innerInvoker);
    internal UnaryServerMethod`2<TRequest, TResponse> UnaryPipeline(UnaryServerMethod`2<TRequest, TResponse> innerInvoker);
    private T BuildPipeline(T innerInvoker, Func`3<InterceptorRegistration, T, T> wrapInvoker);
    private static GrpcActivatorHandle`1<Interceptor> CreateInterceptor(InterceptorRegistration interceptorRegistration, IGrpcInterceptorActivator interceptorActivator, IServiceProvider serviceProvider);
    [CompilerGeneratedAttribute]
internal static ClientStreamingServerMethod`2<TRequest, TResponse> <ClientStreamingPipeline>g__BuildInvoker|2_0(InterceptorRegistration interceptorRegistration, ClientStreamingServerMethod`2<TRequest, TResponse> next);
    [CompilerGeneratedAttribute]
internal static DuplexStreamingServerMethod`2<TRequest, TResponse> <DuplexStreamingPipeline>g__BuildInvoker|3_0(InterceptorRegistration interceptorRegistration, DuplexStreamingServerMethod`2<TRequest, TResponse> next);
    [CompilerGeneratedAttribute]
internal static ServerStreamingServerMethod`2<TRequest, TResponse> <ServerStreamingPipeline>g__BuildInvoker|4_0(InterceptorRegistration interceptorRegistration, ServerStreamingServerMethod`2<TRequest, TResponse> next);
    [CompilerGeneratedAttribute]
internal static UnaryServerMethod`2<TRequest, TResponse> <UnaryPipeline>g__BuildInvoker|5_0(InterceptorRegistration interceptorRegistration, UnaryServerMethod`2<TRequest, TResponse> next);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Grpc.Shared.Server.MethodOptions : object {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, ICompressionProvider> <CompressionProviders>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<InterceptorRegistration> <Interceptors>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxSendMessageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxReceiveMessageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <EnableDetailedErrors>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ResponseCompressionAlgorithm>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<CompressionLevel> <ResponseCompressionLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasInterceptors>k__BackingField;
    public IReadOnlyDictionary`2<string, ICompressionProvider> CompressionProviders { get; }
    public IReadOnlyList`1<InterceptorRegistration> Interceptors { get; }
    public Nullable`1<int> MaxSendMessageSize { get; }
    public Nullable`1<int> MaxReceiveMessageSize { get; }
    public Nullable`1<bool> EnableDetailedErrors { get; }
    [NullableAttribute("2")]
public string ResponseCompressionAlgorithm { get; }
    public Nullable`1<CompressionLevel> ResponseCompressionLevel { get; }
    internal bool HasInterceptors { get; }
    private MethodOptions(Dictionary`2<string, ICompressionProvider> compressionProviders, InterceptorCollection interceptors, Nullable`1<int> maxSendMessageSize, Nullable`1<int> maxReceiveMessageSize, Nullable`1<bool> enableDetailedErrors, string responseCompressionAlgorithm, Nullable`1<CompressionLevel> responseCompressionLevel);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, ICompressionProvider> get_CompressionProviders();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<InterceptorRegistration> get_Interceptors();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxSendMessageSize();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxReceiveMessageSize();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_EnableDetailedErrors();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ResponseCompressionAlgorithm();
    [CompilerGeneratedAttribute]
public Nullable`1<CompressionLevel> get_ResponseCompressionLevel();
    [CompilerGeneratedAttribute]
internal bool get_HasInterceptors();
    public static MethodOptions Create(IEnumerable`1<GrpcServiceOptions> serviceOptions);
    private static void AddCompressionProviders(Dictionary`2<string, ICompressionProvider> resolvedProviders, IList`1<ICompressionProvider> compressionProviders);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Grpc.Shared.Server.ServerMethodInvokerBase`3 : object {
    [CompilerGeneratedAttribute]
private Method`2<TRequest, TResponse> <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private MethodOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private IGrpcServiceActivator`1<TService> <ServiceActivator>k__BackingField;
    public Method`2<TRequest, TResponse> Method { get; }
    public MethodOptions Options { get; }
    public IGrpcServiceActivator`1<TService> ServiceActivator { get; }
    private protected ServerMethodInvokerBase`3(Method`2<TRequest, TResponse> method, MethodOptions options, IGrpcServiceActivator`1<TService> serviceActivator);
    [CompilerGeneratedAttribute]
public Method`2<TRequest, TResponse> get_Method();
    [CompilerGeneratedAttribute]
public MethodOptions get_Options();
    [CompilerGeneratedAttribute]
public IGrpcServiceActivator`1<TService> get_ServiceActivator();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Grpc.Shared.Server.ServerStreamingServerMethodInvoker`3 : ServerMethodInvokerBase`3<TService, TRequest, TResponse> {
    private ServerStreamingServerMethod`3<TService, TRequest, TResponse> _invoker;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ServerStreamingServerMethod`2<TRequest, TResponse> _pipelineInvoker;
    public ServerStreamingServerMethodInvoker`3(ServerStreamingServerMethod`3<TService, TRequest, TResponse> invoker, Method`2<TRequest, TResponse> method, MethodOptions options, IGrpcServiceActivator`1<TService> serviceActivator);
    [AsyncStateMachineAttribute("Grpc.Shared.Server.ServerStreamingServerMethodInvoker`3/<ResolvedInterceptorInvoker>d__3")]
private Task ResolvedInterceptorInvoker(TRequest request, IServerStreamWriter`1<TResponse> responseStream, ServerCallContext resolvedContext);
    [AsyncStateMachineAttribute("Grpc.Shared.Server.ServerStreamingServerMethodInvoker`3/<Invoke>d__4")]
public Task Invoke(HttpContext httpContext, ServerCallContext serverCallContext, TRequest request, IServerStreamWriter`1<TResponse> streamWriter);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Grpc.Shared.Server.UnaryServerMethodInvoker`3 : ServerMethodInvokerBase`3<TService, TRequest, TResponse> {
    private UnaryServerMethod`3<TService, TRequest, TResponse> _invoker;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private UnaryServerMethod`2<TRequest, TResponse> _pipelineInvoker;
    public UnaryServerMethodInvoker`3(UnaryServerMethod`3<TService, TRequest, TResponse> invoker, Method`2<TRequest, TResponse> method, MethodOptions options, IGrpcServiceActivator`1<TService> serviceActivator);
    [AsyncStateMachineAttribute("Grpc.Shared.Server.UnaryServerMethodInvoker`3/<ResolvedInterceptorInvoker>d__3")]
private Task`1<TResponse> ResolvedInterceptorInvoker(TRequest resolvedRequest, ServerCallContext resolvedContext);
    public Task`1<TResponse> Invoke(HttpContext httpContext, ServerCallContext serverCallContext, TRequest request);
    [AsyncStateMachineAttribute("Grpc.Shared.Server.UnaryServerMethodInvoker`3/<AwaitInvoker>d__5")]
private Task`1<TResponse> AwaitInvoker(Task`1<TResponse> invokerTask, GrpcActivatorHandle`1<TService> serviceHandle);
    [AsyncStateMachineAttribute("Grpc.Shared.Server.UnaryServerMethodInvoker`3/<AwaitServiceReleaseAndThrow>d__6")]
private Task`1<TResponse> AwaitServiceReleaseAndThrow(ValueTask releaseTask, ExceptionDispatchInfo ex);
    [AsyncStateMachineAttribute("Grpc.Shared.Server.UnaryServerMethodInvoker`3/<AwaitServiceReleaseAndReturn>d__7")]
private Task`1<TResponse> AwaitServiceReleaseAndReturn(TResponse invokerResult, GrpcActivatorHandle`1<TService> serviceHandle);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.GrpcEndpointRouteBuilderExtensions : object {
    [ExtensionAttribute]
public static GrpcServiceEndpointConventionBuilder MapGrpcService(IEndpointRouteBuilder builder);
    private static void ValidateServicesRegistered(IServiceProvider serviceProvider);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Builder.GrpcServiceEndpointConventionBuilder : object {
    private List`1<IEndpointConventionBuilder> _endpointConventionBuilders;
    internal GrpcServiceEndpointConventionBuilder(IEnumerable`1<IEndpointConventionBuilder> endpointConventionBuilders);
    public sealed virtual void Add(Action`1<EndpointBuilder> convention);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.GrpcServicesExtensions : object {
    [ExtensionAttribute]
public static IGrpcServerBuilder AddServiceOptions(IGrpcServerBuilder grpcBuilder, Action`1<GrpcServiceOptions`1<TService>> configure);
    [ExtensionAttribute]
public static IGrpcServerBuilder AddGrpc(IServiceCollection services);
    [ExtensionAttribute]
public static IGrpcServerBuilder AddGrpc(IServiceCollection services, Action`1<GrpcServiceOptions> configureOptions);
    [CompilerGeneratedAttribute]
internal static void <AddGrpc>g__AddParameterPolicy|1_1(RouteOptions options, string name);
}
