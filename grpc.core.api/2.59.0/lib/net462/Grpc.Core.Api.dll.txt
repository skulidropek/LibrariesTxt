[ExtensionAttribute]
internal static class Grpc.Core.Api.Utils.EncodingExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static string GetString(Encoding encoding, IntPtr ptr, int len);
}
public class Grpc.Core.AsyncAuthInterceptor : MulticastDelegate {
    public AsyncAuthInterceptor(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual Task Invoke(AuthInterceptorContext context, Metadata metadata);
    public virtual IAsyncResult BeginInvoke(AuthInterceptorContext context, Metadata metadata, AsyncCallback callback, object object);
    public virtual Task EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Grpc.Core.AsyncCallState : ValueType {
    private object responseHeadersAsync;
    private object getStatusFunc;
    private object getTrailersFunc;
    private object disposeAction;
    [NullableAttribute("2")]
private object callbackState;
    [NullableAttribute("2")]
internal object State { get; }
    internal AsyncCallState(Func`2<object, Task`1<Metadata>> responseHeadersAsync, Func`2<object, Status> getStatusFunc, Func`2<object, Metadata> getTrailersFunc, Action`1<object> disposeAction, object callbackState);
    internal AsyncCallState(Task`1<Metadata> responseHeadersAsync, Func`1<Status> getStatusFunc, Func`1<Metadata> getTrailersFunc, Action disposeAction);
    [NullableContextAttribute("2")]
internal object get_State();
    internal Task`1<Metadata> ResponseHeadersAsync();
    internal Status GetStatus();
    internal Metadata GetTrailers();
    internal void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerToString(),nq}")]
[DebuggerTypeProxyAttribute("Grpc.Core.AsyncClientStreamingCall`2/AsyncClientStreamingCallDebugView")]
public class Grpc.Core.AsyncClientStreamingCall`2 : object {
    private IClientStreamWriter`1<TRequest> requestStream;
    private Task`1<TResponse> responseAsync;
    private AsyncCallState callState;
    public Task`1<TResponse> ResponseAsync { get; }
    public Task`1<Metadata> ResponseHeadersAsync { get; }
    public IClientStreamWriter`1<TRequest> RequestStream { get; }
    public AsyncClientStreamingCall`2(IClientStreamWriter`1<TRequest> requestStream, Task`1<TResponse> responseAsync, Task`1<Metadata> responseHeadersAsync, Func`1<Status> getStatusFunc, Func`1<Metadata> getTrailersFunc, Action disposeAction);
    public AsyncClientStreamingCall`2(IClientStreamWriter`1<TRequest> requestStream, Task`1<TResponse> responseAsync, Func`2<object, Task`1<Metadata>> responseHeadersAsync, Func`2<object, Status> getStatusFunc, Func`2<object, Metadata> getTrailersFunc, Action`1<object> disposeAction, object state);
    public Task`1<TResponse> get_ResponseAsync();
    public Task`1<Metadata> get_ResponseHeadersAsync();
    public IClientStreamWriter`1<TRequest> get_RequestStream();
    public TaskAwaiter`1<TResponse> GetAwaiter();
    public ConfiguredTaskAwaitable`1<TResponse> ConfigureAwait(bool continueOnCapturedContext);
    public Status GetStatus();
    public Metadata GetTrailers();
    public sealed virtual void Dispose();
    private string DebuggerToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerToString(),nq}")]
[DebuggerTypeProxyAttribute("Grpc.Core.AsyncDuplexStreamingCall`2/AsyncDuplexStreamingCallDebugView")]
public class Grpc.Core.AsyncDuplexStreamingCall`2 : object {
    private IClientStreamWriter`1<TRequest> requestStream;
    private IAsyncStreamReader`1<TResponse> responseStream;
    private AsyncCallState callState;
    public IAsyncStreamReader`1<TResponse> ResponseStream { get; }
    public IClientStreamWriter`1<TRequest> RequestStream { get; }
    public Task`1<Metadata> ResponseHeadersAsync { get; }
    public AsyncDuplexStreamingCall`2(IClientStreamWriter`1<TRequest> requestStream, IAsyncStreamReader`1<TResponse> responseStream, Task`1<Metadata> responseHeadersAsync, Func`1<Status> getStatusFunc, Func`1<Metadata> getTrailersFunc, Action disposeAction);
    public AsyncDuplexStreamingCall`2(IClientStreamWriter`1<TRequest> requestStream, IAsyncStreamReader`1<TResponse> responseStream, Func`2<object, Task`1<Metadata>> responseHeadersAsync, Func`2<object, Status> getStatusFunc, Func`2<object, Metadata> getTrailersFunc, Action`1<object> disposeAction, object state);
    public IAsyncStreamReader`1<TResponse> get_ResponseStream();
    public IClientStreamWriter`1<TRequest> get_RequestStream();
    public Task`1<Metadata> get_ResponseHeadersAsync();
    public Status GetStatus();
    public Metadata GetTrailers();
    public sealed virtual void Dispose();
    private string DebuggerToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerToString(),nq}")]
[DebuggerTypeProxyAttribute("Grpc.Core.AsyncServerStreamingCall`1/AsyncServerStreamingCallDebugView")]
public class Grpc.Core.AsyncServerStreamingCall`1 : object {
    private IAsyncStreamReader`1<TResponse> responseStream;
    private AsyncCallState callState;
    public IAsyncStreamReader`1<TResponse> ResponseStream { get; }
    public Task`1<Metadata> ResponseHeadersAsync { get; }
    public AsyncServerStreamingCall`1(IAsyncStreamReader`1<TResponse> responseStream, Task`1<Metadata> responseHeadersAsync, Func`1<Status> getStatusFunc, Func`1<Metadata> getTrailersFunc, Action disposeAction);
    public AsyncServerStreamingCall`1(IAsyncStreamReader`1<TResponse> responseStream, Func`2<object, Task`1<Metadata>> responseHeadersAsync, Func`2<object, Status> getStatusFunc, Func`2<object, Metadata> getTrailersFunc, Action`1<object> disposeAction, object state);
    public IAsyncStreamReader`1<TResponse> get_ResponseStream();
    public Task`1<Metadata> get_ResponseHeadersAsync();
    public Status GetStatus();
    public Metadata GetTrailers();
    public sealed virtual void Dispose();
    private string DebuggerToString();
}
[ExtensionAttribute]
public static class Grpc.Core.AsyncStreamReaderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static Task`1<bool> MoveNext(IAsyncStreamReader`1<T> streamReader);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerToString(),nq}")]
[DebuggerTypeProxyAttribute("Grpc.Core.AsyncUnaryCall`1/AsyncUnaryCallDebugView")]
public class Grpc.Core.AsyncUnaryCall`1 : object {
    private Task`1<TResponse> responseAsync;
    private AsyncCallState callState;
    public Task`1<TResponse> ResponseAsync { get; }
    public Task`1<Metadata> ResponseHeadersAsync { get; }
    public AsyncUnaryCall`1(Task`1<TResponse> responseAsync, Task`1<Metadata> responseHeadersAsync, Func`1<Status> getStatusFunc, Func`1<Metadata> getTrailersFunc, Action disposeAction);
    public AsyncUnaryCall`1(Task`1<TResponse> responseAsync, Func`2<object, Task`1<Metadata>> responseHeadersAsync, Func`2<object, Status> getStatusFunc, Func`2<object, Metadata> getTrailersFunc, Action`1<object> disposeAction, object state);
    public Task`1<TResponse> get_ResponseAsync();
    public Task`1<Metadata> get_ResponseHeadersAsync();
    public TaskAwaiter`1<TResponse> GetAwaiter();
    public ConfiguredTaskAwaitable`1<TResponse> ConfigureAwait(bool continueOnCapturedContext);
    public Status GetStatus();
    public Metadata GetTrailers();
    public sealed virtual void Dispose();
    private string DebuggerToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("IsPeerAuthenticated = {IsPeerAuthenticated}")]
public class Grpc.Core.AuthContext : object {
    [NullableAttribute("2")]
private string peerIdentityPropertyName;
    private Dictionary`2<string, List`1<AuthProperty>> properties;
    public bool IsPeerAuthenticated { get; }
    [NullableAttribute("2")]
public string PeerIdentityPropertyName { get; }
    public IEnumerable`1<AuthProperty> PeerIdentity { get; }
    public IEnumerable`1<AuthProperty> Properties { get; }
    public AuthContext(string peerIdentityPropertyName, Dictionary`2<string, List`1<AuthProperty>> properties);
    public bool get_IsPeerAuthenticated();
    [NullableContextAttribute("2")]
public string get_PeerIdentityPropertyName();
    public IEnumerable`1<AuthProperty> get_PeerIdentity();
    public IEnumerable`1<AuthProperty> get_Properties();
    public IEnumerable`1<AuthProperty> FindPropertiesByName(string propertyName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Grpc.Core.AuthInterceptorContext : object {
    private string serviceUrl;
    private string methodName;
    private CancellationToken cancellationToken;
    public string ServiceUrl { get; }
    public string MethodName { get; }
    public CancellationToken CancellationToken { get; }
    public AuthInterceptorContext(string serviceUrl, string methodName);
    public AuthInterceptorContext(string serviceUrl, string methodName, CancellationToken cancellationToken);
    public string get_ServiceUrl();
    public string get_MethodName();
    public CancellationToken get_CancellationToken();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Grpc.Core.AuthProperty : object {
    private static Encoding EncodingUTF8;
    private string name;
    private Byte[] valueBytes;
    [NullableAttribute("2")]
private string lazyValue;
    public string Name { get; }
    public string Value { get; }
    public Byte[] ValueBytes { get; }
    internal Byte[] ValueBytesUnsafe { get; }
    private AuthProperty(string name, Byte[] valueBytes);
    private static AuthProperty();
    public string get_Name();
    public string get_Value();
    public Byte[] get_ValueBytes();
    public static AuthProperty Create(string name, Byte[] valueBytes);
    internal Byte[] get_ValueBytesUnsafe();
    internal static AuthProperty CreateUnsafe(string name, Byte[] valueBytes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
public class Grpc.Core.BindServiceMethodAttribute : Attribute {
    private static DynamicallyAccessedMemberTypes ServiceBinderAccessibility;
    [CompilerGeneratedAttribute]
private Type <BindType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BindMethodName>k__BackingField;
    [DynamicallyAccessedMembersAttribute("536")]
public Type BindType { get; }
    public string BindMethodName { get; }
    public BindServiceMethodAttribute(Type bindType, string bindMethodName);
    [CompilerGeneratedAttribute]
public Type get_BindType();
    [CompilerGeneratedAttribute]
public string get_BindMethodName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Grpc.Core.CallCredentials : object {
    public static CallCredentials Compose(CallCredentials[] credentials);
    public static CallCredentials FromInterceptor(AsyncAuthInterceptor interceptor);
    public abstract virtual void InternalPopulateConfiguration(CallCredentialsConfiguratorBase configurator, object state);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Grpc.Core.CallCredentialsConfiguratorBase : object {
    public abstract virtual void SetCompositeCredentials(object state, IReadOnlyList`1<CallCredentials> credentials);
    public abstract virtual void SetAsyncAuthInterceptorCredentials(object state, AsyncAuthInterceptor interceptor);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Grpc.Core.CallInvoker : object {
    public abstract virtual TResponse BlockingUnaryCall(Method`2<TRequest, TResponse> method, string host, CallOptions options, TRequest request);
    public abstract virtual AsyncUnaryCall`1<TResponse> AsyncUnaryCall(Method`2<TRequest, TResponse> method, string host, CallOptions options, TRequest request);
    public abstract virtual AsyncServerStreamingCall`1<TResponse> AsyncServerStreamingCall(Method`2<TRequest, TResponse> method, string host, CallOptions options, TRequest request);
    public abstract virtual AsyncClientStreamingCall`2<TRequest, TResponse> AsyncClientStreamingCall(Method`2<TRequest, TResponse> method, string host, CallOptions options);
    public abstract virtual AsyncDuplexStreamingCall`2<TRequest, TResponse> AsyncDuplexStreamingCall(Method`2<TRequest, TResponse> method, string host, CallOptions options);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Grpc.Core.CallOptions : ValueType {
    private Metadata headers;
    private Nullable`1<DateTime> deadline;
    private CancellationToken cancellationToken;
    private WriteOptions writeOptions;
    private ContextPropagationToken propagationToken;
    private CallCredentials credentials;
    private CallFlags flags;
    public Metadata Headers { get; }
    public Nullable`1<DateTime> Deadline { get; }
    public CancellationToken CancellationToken { get; }
    public WriteOptions WriteOptions { get; }
    public ContextPropagationToken PropagationToken { get; }
    public CallCredentials Credentials { get; }
    public bool IsWaitForReady { get; }
    internal CallFlags Flags { get; }
    public CallOptions(Metadata headers, Nullable`1<DateTime> deadline, CancellationToken cancellationToken, WriteOptions writeOptions, ContextPropagationToken propagationToken, CallCredentials credentials);
    public Metadata get_Headers();
    public Nullable`1<DateTime> get_Deadline();
    public CancellationToken get_CancellationToken();
    public WriteOptions get_WriteOptions();
    public ContextPropagationToken get_PropagationToken();
    public CallCredentials get_Credentials();
    public bool get_IsWaitForReady();
    internal CallFlags get_Flags();
    [NullableContextAttribute("1")]
public CallOptions WithHeaders(Metadata headers);
    public CallOptions WithDeadline(DateTime deadline);
    public CallOptions WithCancellationToken(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
public CallOptions WithWriteOptions(WriteOptions writeOptions);
    [NullableContextAttribute("1")]
public CallOptions WithPropagationToken(ContextPropagationToken propagationToken);
    [NullableContextAttribute("1")]
public CallOptions WithCredentials(CallCredentials credentials);
    public CallOptions WithWaitForReady(bool waitForReady);
    internal CallOptions WithFlags(CallFlags flags);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Grpc.Core.ChannelBase : object {
    private string target;
    public string Target { get; }
    protected ChannelBase(string target);
    public string get_Target();
    public abstract virtual CallInvoker CreateCallInvoker();
    public Task ShutdownAsync();
    [AsyncStateMachineAttribute("Grpc.Core.ChannelBase/<ShutdownAsyncCore>d__6")]
protected virtual Task ShutdownAsyncCore();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Grpc.Core.ChannelCredentials : object {
    private static ChannelCredentials InsecureInstance;
    private static ChannelCredentials SecureSslInstance;
    public static ChannelCredentials Insecure { get; }
    public static ChannelCredentials SecureSsl { get; }
    internal bool IsComposable { get; }
    private static ChannelCredentials();
    public static ChannelCredentials get_Insecure();
    public static ChannelCredentials get_SecureSsl();
    public static ChannelCredentials Create(ChannelCredentials channelCredentials, CallCredentials callCredentials);
    public abstract virtual void InternalPopulateConfiguration(ChannelCredentialsConfiguratorBase configurator, object state);
    internal virtual bool get_IsComposable();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Grpc.Core.ChannelCredentialsConfiguratorBase : object {
    public abstract virtual void SetInsecureCredentials(object state);
    [NullableContextAttribute("2")]
public abstract virtual void SetSslCredentials(object state, string rootCertificates, KeyCertificatePair keyCertificatePair, VerifyPeerCallback verifyPeerCallback);
    public abstract virtual void SetCompositeCredentials(object state, ChannelCredentials channelCredentials, CallCredentials callCredentials);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{ServiceNameDebuggerToString(),nq}{CallInvoker}")]
[DebuggerTypeProxyAttribute("Grpc.Core.ClientBase/ClientBaseDebugType")]
public abstract class Grpc.Core.ClientBase : object {
    private ClientBaseConfiguration configuration;
    private CallInvoker callInvoker;
    protected CallInvoker CallInvoker { get; }
    internal ClientBaseConfiguration Configuration { get; }
    protected ClientBase(ClientBaseConfiguration configuration);
    public ClientBase(ChannelBase channel);
    public ClientBase(CallInvoker callInvoker);
    protected CallInvoker get_CallInvoker();
    internal ClientBaseConfiguration get_Configuration();
    internal string ServiceNameDebuggerToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Grpc.Core.ClientBase`1 : ClientBase {
    protected ClientBase`1(ClientBaseConfiguration configuration);
    public ClientBase`1(ChannelBase channel);
    public ClientBase`1(CallInvoker callInvoker);
    public T WithHost(string host);
    protected abstract virtual T NewInstance(ClientBaseConfiguration configuration);
}
public class Grpc.Core.ClientStreamingServerMethod`2 : MulticastDelegate {
    public ClientStreamingServerMethod`2(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual Task`1<TResponse> Invoke(IAsyncStreamReader`1<TRequest> requestStream, ServerCallContext context);
    public virtual IAsyncResult BeginInvoke(IAsyncStreamReader`1<TRequest> requestStream, ServerCallContext context, AsyncCallback callback, object object);
    public virtual Task`1<TResponse> EndInvoke(IAsyncResult result);
}
public class Grpc.Core.ContextPropagationOptions : object {
    [NullableAttribute("1")]
public static ContextPropagationOptions Default;
    private bool propagateDeadline;
    private bool propagateCancellation;
    public bool IsPropagateDeadline { get; }
    public bool IsPropagateCancellation { get; }
    public ContextPropagationOptions(bool propagateDeadline, bool propagateCancellation);
    private static ContextPropagationOptions();
    public bool get_IsPropagateDeadline();
    public bool get_IsPropagateCancellation();
}
public abstract class Grpc.Core.ContextPropagationToken : object {
}
public abstract class Grpc.Core.DeserializationContext : object {
    public int PayloadLength { get; }
    public abstract virtual int get_PayloadLength();
    [NullableContextAttribute("1")]
public virtual Byte[] PayloadAsNewBuffer();
    public virtual ReadOnlySequence`1<byte> PayloadAsReadOnlySequence();
}
public class Grpc.Core.DuplexStreamingServerMethod`2 : MulticastDelegate {
    public DuplexStreamingServerMethod`2(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual Task Invoke(IAsyncStreamReader`1<TRequest> requestStream, IServerStreamWriter`1<TResponse> responseStream, ServerCallContext context);
    public virtual IAsyncResult BeginInvoke(IAsyncStreamReader`1<TRequest> requestStream, IServerStreamWriter`1<TResponse> responseStream, ServerCallContext context, AsyncCallback callback, object object);
    public virtual Task EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
public interface Grpc.Core.IAsyncStreamReader`1 {
    public T Current { get; }
    public abstract virtual T get_Current();
    public abstract virtual Task`1<bool> MoveNext(CancellationToken cancellationToken);
}
[NullableContextAttribute("2")]
public interface Grpc.Core.IAsyncStreamWriter`1 {
    public WriteOptions WriteOptions { get; public set; }
    [NullableContextAttribute("1")]
public abstract virtual Task WriteAsync(T message);
    public abstract virtual WriteOptions get_WriteOptions();
    public abstract virtual void set_WriteOptions(WriteOptions value);
}
[NullableContextAttribute("1")]
public interface Grpc.Core.IClientStreamWriter`1 {
    public abstract virtual Task CompleteAsync();
}
[NullableContextAttribute("1")]
public interface Grpc.Core.IMethod {
    public MethodType Type { get; }
    public string ServiceName { get; }
    public string Name { get; }
    public string FullName { get; }
    public abstract virtual MethodType get_Type();
    public abstract virtual string get_ServiceName();
    public abstract virtual string get_Name();
    public abstract virtual string get_FullName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Grpc.Core.Interceptors.CallInvokerExtensions : object {
    [ExtensionAttribute]
public static CallInvoker Intercept(CallInvoker invoker, Interceptor interceptor);
    [ExtensionAttribute]
public static CallInvoker Intercept(CallInvoker invoker, Interceptor[] interceptors);
    [ExtensionAttribute]
public static CallInvoker Intercept(CallInvoker invoker, Func`2<Metadata, Metadata> interceptor);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Grpc.Core.Interceptors.ChannelExtensions : object {
    [ExtensionAttribute]
public static CallInvoker Intercept(ChannelBase channel, Interceptor interceptor);
    [ExtensionAttribute]
public static CallInvoker Intercept(ChannelBase channel, Interceptor[] interceptors);
    [ExtensionAttribute]
public static CallInvoker Intercept(ChannelBase channel, Func`2<Metadata, Metadata> interceptor);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Grpc.Core.Interceptors.ClientInterceptorContext`2 : ValueType {
    [CompilerGeneratedAttribute]
private Method`2<TRequest, TResponse> <Method>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private CallOptions <Options>k__BackingField;
    public Method`2<TRequest, TResponse> Method { get; }
    [NullableAttribute("2")]
public string Host { get; }
    public CallOptions Options { get; }
    public ClientInterceptorContext`2(Method`2<TRequest, TResponse> method, string host, CallOptions options);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Method`2<TRequest, TResponse> get_Method();
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Host();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public CallOptions get_Options();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{invoker}")]
internal class Grpc.Core.Interceptors.InterceptingCallInvoker : CallInvoker {
    private CallInvoker invoker;
    private Interceptor interceptor;
    public InterceptingCallInvoker(CallInvoker invoker, Interceptor interceptor);
    public virtual TResponse BlockingUnaryCall(Method`2<TRequest, TResponse> method, string host, CallOptions options, TRequest request);
    public virtual AsyncUnaryCall`1<TResponse> AsyncUnaryCall(Method`2<TRequest, TResponse> method, string host, CallOptions options, TRequest request);
    public virtual AsyncServerStreamingCall`1<TResponse> AsyncServerStreamingCall(Method`2<TRequest, TResponse> method, string host, CallOptions options, TRequest request);
    public virtual AsyncClientStreamingCall`2<TRequest, TResponse> AsyncClientStreamingCall(Method`2<TRequest, TResponse> method, string host, CallOptions options);
    public virtual AsyncDuplexStreamingCall`2<TRequest, TResponse> AsyncDuplexStreamingCall(Method`2<TRequest, TResponse> method, string host, CallOptions options);
    [CompilerGeneratedAttribute]
private TResponse <BlockingUnaryCall>b__3_0(TRequest req, ClientInterceptorContext`2<TRequest, TResponse> ctx);
    [CompilerGeneratedAttribute]
private AsyncUnaryCall`1<TResponse> <AsyncUnaryCall>b__4_0(TRequest req, ClientInterceptorContext`2<TRequest, TResponse> ctx);
    [CompilerGeneratedAttribute]
private AsyncServerStreamingCall`1<TResponse> <AsyncServerStreamingCall>b__5_0(TRequest req, ClientInterceptorContext`2<TRequest, TResponse> ctx);
    [CompilerGeneratedAttribute]
private AsyncClientStreamingCall`2<TRequest, TResponse> <AsyncClientStreamingCall>b__6_0(ClientInterceptorContext`2<TRequest, TResponse> ctx);
    [CompilerGeneratedAttribute]
private AsyncDuplexStreamingCall`2<TRequest, TResponse> <AsyncDuplexStreamingCall>b__7_0(ClientInterceptorContext`2<TRequest, TResponse> ctx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Grpc.Core.Interceptors.Interceptor : object {
    public virtual TResponse BlockingUnaryCall(TRequest request, ClientInterceptorContext`2<TRequest, TResponse> context, BlockingUnaryCallContinuation`2<TRequest, TResponse> continuation);
    public virtual AsyncUnaryCall`1<TResponse> AsyncUnaryCall(TRequest request, ClientInterceptorContext`2<TRequest, TResponse> context, AsyncUnaryCallContinuation`2<TRequest, TResponse> continuation);
    public virtual AsyncServerStreamingCall`1<TResponse> AsyncServerStreamingCall(TRequest request, ClientInterceptorContext`2<TRequest, TResponse> context, AsyncServerStreamingCallContinuation`2<TRequest, TResponse> continuation);
    public virtual AsyncClientStreamingCall`2<TRequest, TResponse> AsyncClientStreamingCall(ClientInterceptorContext`2<TRequest, TResponse> context, AsyncClientStreamingCallContinuation`2<TRequest, TResponse> continuation);
    public virtual AsyncDuplexStreamingCall`2<TRequest, TResponse> AsyncDuplexStreamingCall(ClientInterceptorContext`2<TRequest, TResponse> context, AsyncDuplexStreamingCallContinuation`2<TRequest, TResponse> continuation);
    public virtual Task`1<TResponse> UnaryServerHandler(TRequest request, ServerCallContext context, UnaryServerMethod`2<TRequest, TResponse> continuation);
    public virtual Task`1<TResponse> ClientStreamingServerHandler(IAsyncStreamReader`1<TRequest> requestStream, ServerCallContext context, ClientStreamingServerMethod`2<TRequest, TResponse> continuation);
    public virtual Task ServerStreamingServerHandler(TRequest request, IServerStreamWriter`1<TResponse> responseStream, ServerCallContext context, ServerStreamingServerMethod`2<TRequest, TResponse> continuation);
    public virtual Task DuplexStreamingServerHandler(IAsyncStreamReader`1<TRequest> requestStream, IServerStreamWriter`1<TResponse> responseStream, ServerCallContext context, DuplexStreamingServerMethod`2<TRequest, TResponse> continuation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Grpc.Core.Internal.CallDebuggerHelpers : object {
    public static string MethodKey;
    public static string ChannelKey;
    public static string RequestKey;
    public static string DebuggerToString(AsyncCallState callState);
    public static T GetDebugValue(AsyncCallState callState, string key);
    public static Nullable`1<Status> GetStatus(AsyncCallState callState);
    [NullableContextAttribute("2")]
public static Metadata GetTrailers(AsyncCallState callState);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{FullName,nq}")]
internal class Grpc.Core.Internal.CallDebuggerMethodDebugView : object {
    private IMethod _method;
    public MethodType Type { get; }
    public string ServiceName { get; }
    public string Name { get; }
    public string FullName { get; }
    public CallDebuggerMethodDebugView(IMethod method);
    public MethodType get_Type();
    public string get_ServiceName();
    public string get_Name();
    public string get_FullName();
}
[FlagsAttribute]
internal enum Grpc.Core.Internal.CallFlags : Enum {
    public int value__;
    public static CallFlags IdempotentRequest;
    public static CallFlags WaitForReady;
    public static CallFlags CacheableRequest;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Grpc.Core.Internal.ClientDebuggerHelpers : object {
    private static Type GetParentType(Type clientType);
    [UnconditionalSuppressMessageAttribute("Trimmer", "IL2075")]
internal static string GetServiceName(Type clientType);
    [UnconditionalSuppressMessageAttribute("Trimmer", "IL2075")]
internal static List`1<IMethod> GetServiceMethods(Type clientType);
    [CompilerGeneratedAttribute]
internal static bool <GetServiceMethods>g__IsMethodField|2_0(FieldInfo field);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Grpc.Core.Internal.UnimplementedCallInvoker : CallInvoker {
    public virtual TResponse BlockingUnaryCall(Method`2<TRequest, TResponse> method, string host, CallOptions options, TRequest request);
    public virtual AsyncUnaryCall`1<TResponse> AsyncUnaryCall(Method`2<TRequest, TResponse> method, string host, CallOptions options, TRequest request);
    public virtual AsyncServerStreamingCall`1<TResponse> AsyncServerStreamingCall(Method`2<TRequest, TResponse> method, string host, CallOptions options, TRequest request);
    public virtual AsyncClientStreamingCall`2<TRequest, TResponse> AsyncClientStreamingCall(Method`2<TRequest, TResponse> method, string host, CallOptions options);
    public virtual AsyncDuplexStreamingCall`2<TRequest, TResponse> AsyncDuplexStreamingCall(Method`2<TRequest, TResponse> method, string host, CallOptions options);
}
[NullableContextAttribute("2")]
public interface Grpc.Core.IServerStreamWriter`1 {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Grpc.Core.KeyCertificatePair : object {
    private string certificateChain;
    private string privateKey;
    public string CertificateChain { get; }
    public string PrivateKey { get; }
    public KeyCertificatePair(string certificateChain, string privateKey);
    public string get_CertificateChain();
    public string get_PrivateKey();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Grpc.Core.Marshaller`1 : object {
    private Func`2<T, Byte[]> serializer;
    private Func`2<Byte[], T> deserializer;
    private Action`2<T, SerializationContext> contextualSerializer;
    private Func`2<DeserializationContext, T> contextualDeserializer;
    public Func`2<T, Byte[]> Serializer { get; }
    public Func`2<Byte[], T> Deserializer { get; }
    public Action`2<T, SerializationContext> ContextualSerializer { get; }
    public Func`2<DeserializationContext, T> ContextualDeserializer { get; }
    public Marshaller`1(Func`2<T, Byte[]> serializer, Func`2<Byte[], T> deserializer);
    public Marshaller`1(Action`2<T, SerializationContext> serializer, Func`2<DeserializationContext, T> deserializer);
    public Func`2<T, Byte[]> get_Serializer();
    public Func`2<Byte[], T> get_Deserializer();
    public Action`2<T, SerializationContext> get_ContextualSerializer();
    public Func`2<DeserializationContext, T> get_ContextualDeserializer();
    private void EmulateContextualSerializer(T message, SerializationContext context);
    private T EmulateContextualDeserializer(DeserializationContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Grpc.Core.Marshallers : object {
    public static Marshaller`1<string> StringMarshaller { get; }
    public static Marshaller`1<T> Create(Func`2<T, Byte[]> serializer, Func`2<Byte[], T> deserializer);
    public static Marshaller`1<T> Create(Action`2<T, SerializationContext> serializer, Func`2<DeserializationContext, T> deserializer);
    public static Marshaller`1<string> get_StringMarshaller();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[DebuggerDisplayAttribute("{DebuggerToString(),nq}")]
[DebuggerTypeProxyAttribute("Grpc.Core.Metadata/MetadataDebugView")]
public class Grpc.Core.Metadata : object {
    public static string BinaryHeaderSuffix;
    public static Metadata Empty;
    internal static string CompressionRequestAlgorithmMetadataKey;
    private static Encoding EncodingASCII;
    private List`1<Entry> entries;
    private bool readOnly;
    public Entry Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    private static Metadata();
    internal Metadata Freeze();
    public Entry Get(string key);
    public string GetValue(string key);
    public Byte[] GetValueBytes(string key);
    [IteratorStateMachineAttribute("Grpc.Core.Metadata/<GetAll>d__11")]
public IEnumerable`1<Entry> GetAll(string key);
    public void Add(string key, string value);
    public void Add(string key, Byte[] valueBytes);
    public sealed virtual int IndexOf(Entry item);
    public sealed virtual void Insert(int index, Entry item);
    public sealed virtual void RemoveAt(int index);
    public sealed virtual Entry get_Item(int index);
    public sealed virtual void set_Item(int index, Entry value);
    public sealed virtual void Add(Entry item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(Entry item);
    public sealed virtual void CopyTo(Entry[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual bool Remove(Entry item);
    public sealed virtual IEnumerator`1<Entry> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private void CheckWriteable();
    private string DebuggerToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("Name = {Name}, ServiceName = {ServiceName}, Type = {Type}")]
public class Grpc.Core.Method`2 : object {
    private MethodType type;
    private string serviceName;
    private string name;
    private Marshaller`1<TRequest> requestMarshaller;
    private Marshaller`1<TResponse> responseMarshaller;
    private string fullName;
    public MethodType Type { get; }
    public string ServiceName { get; }
    public string Name { get; }
    public Marshaller`1<TRequest> RequestMarshaller { get; }
    public Marshaller`1<TResponse> ResponseMarshaller { get; }
    public string FullName { get; }
    public Method`2(MethodType type, string serviceName, string name, Marshaller`1<TRequest> requestMarshaller, Marshaller`1<TResponse> responseMarshaller);
    public sealed virtual MethodType get_Type();
    public sealed virtual string get_ServiceName();
    public sealed virtual string get_Name();
    public Marshaller`1<TRequest> get_RequestMarshaller();
    public Marshaller`1<TResponse> get_ResponseMarshaller();
    public sealed virtual string get_FullName();
    internal static string GetFullName(string serviceName, string methodName);
}
public enum Grpc.Core.MethodType : Enum {
    public int value__;
    public static MethodType Unary;
    public static MethodType ClientStreaming;
    public static MethodType ServerStreaming;
    public static MethodType DuplexStreaming;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Grpc.Core.RpcException : Exception {
    private Status status;
    private Metadata trailers;
    public Status Status { get; }
    public StatusCode StatusCode { get; }
    public Metadata Trailers { get; }
    public RpcException(Status status);
    public RpcException(Status status, string message);
    public RpcException(Status status, Metadata trailers);
    public RpcException(Status status, Metadata trailers, string message);
    public Status get_Status();
    public StatusCode get_StatusCode();
    public Metadata get_Trailers();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Grpc.Core.SerializationContext : object {
    public virtual void Complete(Byte[] payload);
    public virtual IBufferWriter`1<byte> GetBufferWriter();
    public virtual void SetPayloadLength(int payloadLength);
    public virtual void Complete();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Grpc.Core.ServerCallContext : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<object, object> userState;
    public string Method { get; }
    public string Host { get; }
    public string Peer { get; }
    public DateTime Deadline { get; }
    public Metadata RequestHeaders { get; }
    public CancellationToken CancellationToken { get; }
    public Metadata ResponseTrailers { get; }
    public Status Status { get; public set; }
    [NullableAttribute("2")]
public WriteOptions WriteOptions { get; public set; }
    public AuthContext AuthContext { get; }
    public IDictionary`2<object, object> UserState { get; }
    protected string MethodCore { get; }
    protected string HostCore { get; }
    protected string PeerCore { get; }
    protected DateTime DeadlineCore { get; }
    protected Metadata RequestHeadersCore { get; }
    protected CancellationToken CancellationTokenCore { get; }
    protected Metadata ResponseTrailersCore { get; }
    protected Status StatusCore { get; protected set; }
    [NullableAttribute("2")]
protected WriteOptions WriteOptionsCore { get; protected set; }
    protected AuthContext AuthContextCore { get; }
    protected IDictionary`2<object, object> UserStateCore { get; }
    public Task WriteResponseHeadersAsync(Metadata responseHeaders);
    public ContextPropagationToken CreatePropagationToken(ContextPropagationOptions options);
    public string get_Method();
    public string get_Host();
    public string get_Peer();
    public DateTime get_Deadline();
    public Metadata get_RequestHeaders();
    public CancellationToken get_CancellationToken();
    public Metadata get_ResponseTrailers();
    public Status get_Status();
    public void set_Status(Status value);
    [NullableContextAttribute("2")]
public WriteOptions get_WriteOptions();
    [NullableContextAttribute("2")]
public void set_WriteOptions(WriteOptions value);
    public AuthContext get_AuthContext();
    public IDictionary`2<object, object> get_UserState();
    protected abstract virtual Task WriteResponseHeadersAsyncCore(Metadata responseHeaders);
    protected abstract virtual ContextPropagationToken CreatePropagationTokenCore(ContextPropagationOptions options);
    protected abstract virtual string get_MethodCore();
    protected abstract virtual string get_HostCore();
    protected abstract virtual string get_PeerCore();
    protected abstract virtual DateTime get_DeadlineCore();
    protected abstract virtual Metadata get_RequestHeadersCore();
    protected abstract virtual CancellationToken get_CancellationTokenCore();
    protected abstract virtual Metadata get_ResponseTrailersCore();
    protected abstract virtual Status get_StatusCore();
    protected abstract virtual void set_StatusCore(Status value);
    [NullableContextAttribute("2")]
protected abstract virtual WriteOptions get_WriteOptionsCore();
    [NullableContextAttribute("2")]
protected abstract virtual void set_WriteOptionsCore(WriteOptions value);
    protected abstract virtual AuthContext get_AuthContextCore();
    protected virtual IDictionary`2<object, object> get_UserStateCore();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Grpc.Core.ServerServiceDefinition : object {
    private IReadOnlyList`1<Action`1<ServiceBinderBase>> addMethodActions;
    internal ServerServiceDefinition(List`1<Action`1<ServiceBinderBase>> addMethodActions);
    internal void BindService(ServiceBinderBase serviceBinder);
    public static Builder CreateBuilder();
}
public class Grpc.Core.ServerStreamingServerMethod`2 : MulticastDelegate {
    public ServerStreamingServerMethod`2(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual Task Invoke(TRequest request, IServerStreamWriter`1<TResponse> responseStream, ServerCallContext context);
    public virtual IAsyncResult BeginInvoke(TRequest request, IServerStreamWriter`1<TResponse> responseStream, ServerCallContext context, AsyncCallback callback, object object);
    public virtual Task EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Grpc.Core.ServiceBinderBase : object {
    public virtual void AddMethod(Method`2<TRequest, TResponse> method, UnaryServerMethod`2<TRequest, TResponse> handler);
    public virtual void AddMethod(Method`2<TRequest, TResponse> method, ClientStreamingServerMethod`2<TRequest, TResponse> handler);
    public virtual void AddMethod(Method`2<TRequest, TResponse> method, ServerStreamingServerMethod`2<TRequest, TResponse> handler);
    public virtual void AddMethod(Method`2<TRequest, TResponse> method, DuplexStreamingServerMethod`2<TRequest, TResponse> handler);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Grpc.Core.SslCredentials : ChannelCredentials {
    private string rootCertificates;
    private KeyCertificatePair keyCertificatePair;
    private VerifyPeerCallback verifyPeerCallback;
    public string RootCertificates { get; }
    public KeyCertificatePair KeyCertificatePair { get; }
    internal bool IsComposable { get; }
    [NullableContextAttribute("1")]
public SslCredentials(string rootCertificates);
    [NullableContextAttribute("1")]
public SslCredentials(string rootCertificates, KeyCertificatePair keyCertificatePair);
    public SslCredentials(string rootCertificates, KeyCertificatePair keyCertificatePair, VerifyPeerCallback verifyPeerCallback);
    public string get_RootCertificates();
    public KeyCertificatePair get_KeyCertificatePair();
    [NullableContextAttribute("1")]
public virtual void InternalPopulateConfiguration(ChannelCredentialsConfiguratorBase configurator, object state);
    internal virtual bool get_IsComposable();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{DebuggerToString(),nq}")]
public class Grpc.Core.Status : ValueType {
    public static Status DefaultSuccess;
    public static Status DefaultCancelled;
    [CompilerGeneratedAttribute]
private StatusCode <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Detail>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Exception <DebugException>k__BackingField;
    public StatusCode StatusCode { get; }
    public string Detail { get; }
    [NullableAttribute("2")]
public Exception DebugException { get; }
    public Status(StatusCode statusCode, string detail);
    public Status(StatusCode statusCode, string detail, Exception debugException);
    private static Status();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public StatusCode get_StatusCode();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Detail();
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Exception get_DebugException();
    public virtual string ToString();
    private string DebuggerToString();
}
public enum Grpc.Core.StatusCode : Enum {
    public int value__;
    public static StatusCode OK;
    public static StatusCode Cancelled;
    public static StatusCode Unknown;
    public static StatusCode InvalidArgument;
    public static StatusCode DeadlineExceeded;
    public static StatusCode NotFound;
    public static StatusCode AlreadyExists;
    public static StatusCode PermissionDenied;
    public static StatusCode Unauthenticated;
    public static StatusCode ResourceExhausted;
    public static StatusCode FailedPrecondition;
    public static StatusCode Aborted;
    public static StatusCode OutOfRange;
    public static StatusCode Unimplemented;
    public static StatusCode Internal;
    public static StatusCode Unavailable;
    public static StatusCode DataLoss;
}
public class Grpc.Core.UnaryServerMethod`2 : MulticastDelegate {
    public UnaryServerMethod`2(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual Task`1<TResponse> Invoke(TRequest request, ServerCallContext context);
    public virtual IAsyncResult BeginInvoke(TRequest request, ServerCallContext context, AsyncCallback callback, object object);
    public virtual Task`1<TResponse> EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Grpc.Core.Utils.GrpcPreconditions : object {
    public static void CheckArgument(bool condition);
    public static void CheckArgument(bool condition, string errorMessage);
    public static T CheckNotNull(T reference);
    public static T CheckNotNull(T reference, string paramName);
    public static void CheckState(bool condition);
    public static void CheckState(bool condition, string errorMessage);
    [CompilerGeneratedAttribute]
internal static void <CheckArgument>g__Throw|0_0();
    [CompilerGeneratedAttribute]
internal static void <CheckArgument>g__Throw|1_0(string errorMessage);
    [CompilerGeneratedAttribute]
internal static void <CheckNotNull>g__Throw|2_0();
    [CompilerGeneratedAttribute]
internal static void <CheckNotNull>g__Throw|3_0(string paramName);
    [CompilerGeneratedAttribute]
internal static void <CheckState>g__Throw|4_0();
    [CompilerGeneratedAttribute]
internal static void <CheckState>g__Throw|5_0(string errorMessage);
}
public class Grpc.Core.VerifyPeerCallback : MulticastDelegate {
    public VerifyPeerCallback(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual bool Invoke(VerifyPeerContext context);
    public virtual IAsyncResult BeginInvoke(VerifyPeerContext context, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Grpc.Core.VerifyPeerContext : object {
    [CompilerGeneratedAttribute]
private string <TargetName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PeerPem>k__BackingField;
    public string TargetName { get; }
    public string PeerPem { get; }
    internal VerifyPeerContext(string targetName, string peerPem);
    [CompilerGeneratedAttribute]
public string get_TargetName();
    [CompilerGeneratedAttribute]
public string get_PeerPem();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Grpc.Core.VersionInfo : object {
    public static string CurrentAssemblyVersion;
    public static string CurrentAssemblyFileVersion;
    public static string CurrentVersion;
}
[FlagsAttribute]
public enum Grpc.Core.WriteFlags : Enum {
    public int value__;
    public static WriteFlags BufferHint;
    public static WriteFlags NoCompress;
}
public class Grpc.Core.WriteOptions : object {
    [NullableAttribute("1")]
public static WriteOptions Default;
    private WriteFlags flags;
    public WriteFlags Flags { get; }
    public WriteOptions(WriteFlags flags);
    private static WriteOptions();
    public WriteFlags get_Flags();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("27072")]
internal class System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute : Attribute {
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public DynamicallyAccessedMembersAttribute(DynamicallyAccessedMemberTypes memberTypes);
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
}
[FlagsAttribute]
internal enum System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes : Enum {
    public int value__;
    public static DynamicallyAccessedMemberTypes None;
    public static DynamicallyAccessedMemberTypes PublicParameterlessConstructor;
    public static DynamicallyAccessedMemberTypes PublicConstructors;
    public static DynamicallyAccessedMemberTypes NonPublicConstructors;
    public static DynamicallyAccessedMemberTypes PublicMethods;
    public static DynamicallyAccessedMemberTypes NonPublicMethods;
    public static DynamicallyAccessedMemberTypes PublicFields;
    public static DynamicallyAccessedMemberTypes NonPublicFields;
    public static DynamicallyAccessedMemberTypes PublicNestedTypes;
    public static DynamicallyAccessedMemberTypes NonPublicNestedTypes;
    public static DynamicallyAccessedMemberTypes PublicProperties;
    public static DynamicallyAccessedMemberTypes NonPublicProperties;
    public static DynamicallyAccessedMemberTypes PublicEvents;
    public static DynamicallyAccessedMemberTypes NonPublicEvents;
    public static DynamicallyAccessedMemberTypes All;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
internal class System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute : Attribute {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <CheckId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Justification>k__BackingField;
    [NullableAttribute("1")]
public string Category { get; }
    [NullableAttribute("1")]
public string CheckId { get; }
    public string Scope { get; public set; }
    public string Target { get; public set; }
    public string MessageId { get; public set; }
    public string Justification { get; public set; }
    [NullableContextAttribute("1")]
public UnconditionalSuppressMessageAttribute(string category, string checkId);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Category();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_CheckId();
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public string get_MessageId();
    [CompilerGeneratedAttribute]
public void set_MessageId(string value);
    [CompilerGeneratedAttribute]
public string get_Justification();
    [CompilerGeneratedAttribute]
public void set_Justification(string value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
