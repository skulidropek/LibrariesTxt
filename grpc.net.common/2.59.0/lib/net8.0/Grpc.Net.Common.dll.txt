[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Grpc.Core.AsyncStreamReaderExtensions : object {
    [ExtensionAttribute]
public static IAsyncEnumerable`1<T> ReadAllAsync(IAsyncStreamReader`1<T> streamReader, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("Grpc.Core.AsyncStreamReaderExtensions/<ReadAllAsyncCore>d__1`1")]
private static IAsyncEnumerable`1<T> ReadAllAsyncCore(IAsyncStreamReader`1<T> streamReader, CancellationToken cancellationToken);
}
public enum Grpc.Core.ConnectivityState : Enum {
    public int value__;
    public static ConnectivityState Idle;
    public static ConnectivityState Connecting;
    public static ConnectivityState Ready;
    public static ConnectivityState TransientFailure;
    public static ConnectivityState Shutdown;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Grpc.Net.Compression.DeflateCompressionProvider : object {
    private CompressionLevel _defaultCompressionLevel;
    public string EncodingName { get; }
    public DeflateCompressionProvider(CompressionLevel defaultCompressionLevel);
    public sealed virtual string get_EncodingName();
    public sealed virtual Stream CreateCompressionStream(Stream stream, Nullable`1<CompressionLevel> compressionLevel);
    public sealed virtual Stream CreateDecompressionStream(Stream stream);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Grpc.Net.Compression.GzipCompressionProvider : object {
    private CompressionLevel _defaultCompressionLevel;
    public string EncodingName { get; }
    public GzipCompressionProvider(CompressionLevel defaultCompressionLevel);
    public sealed virtual string get_EncodingName();
    public sealed virtual Stream CreateCompressionStream(Stream stream, Nullable`1<CompressionLevel> compressionLevel);
    public sealed virtual Stream CreateDecompressionStream(Stream stream);
}
[NullableContextAttribute("1")]
public interface Grpc.Net.Compression.ICompressionProvider {
    public string EncodingName { get; }
    public abstract virtual string get_EncodingName();
    public abstract virtual Stream CreateCompressionStream(Stream stream, Nullable`1<CompressionLevel> compressionLevel);
    public abstract virtual Stream CreateDecompressionStream(Stream stream);
}
internal static class Grpc.Shared.ArgumentNullThrowHelper : object {
    [NullableContextAttribute("2")]
public static void ThrowIfNull(object argument, string paramName);
}
