[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Grpc.Core.AsyncStreamReaderExtensions : object {
    [ExtensionAttribute]
public static IAsyncEnumerable`1<T> ReadAllAsync(IAsyncStreamReader`1<T> streamReader, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("Grpc.Core.AsyncStreamReaderExtensions/<ReadAllAsyncCore>d__1`1")]
private static IAsyncEnumerable`1<T> ReadAllAsyncCore(IAsyncStreamReader`1<T> streamReader, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Grpc.Net.Compression.GzipCompressionProvider : object {
    private CompressionLevel _defaultCompressionLevel;
    public string EncodingName { get; }
    public GzipCompressionProvider(CompressionLevel defaultCompressionLevel);
    public sealed virtual string get_EncodingName();
    public sealed virtual Stream CreateCompressionStream(Stream stream, Nullable`1<CompressionLevel> compressionLevel);
    public sealed virtual Stream CreateDecompressionStream(Stream stream);
}
[NullableContextAttribute("1")]
public interface Grpc.Net.Compression.ICompressionProvider {
    public string EncodingName { get; }
    public abstract virtual string get_EncodingName();
    public abstract virtual Stream CreateCompressionStream(Stream stream, Nullable`1<CompressionLevel> compressionLevel);
    public abstract virtual Stream CreateDecompressionStream(Stream stream);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal static class Grpc.Shared.ArgumentNullThrowHelper : object {
    public static void ThrowIfNull(object argument, string paramName);
    [DoesNotReturnAttribute]
internal static void Throw(string paramName);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2048")]
internal class System.Runtime.CompilerServices.CallerArgumentExpressionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public CallerArgumentExpressionAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
