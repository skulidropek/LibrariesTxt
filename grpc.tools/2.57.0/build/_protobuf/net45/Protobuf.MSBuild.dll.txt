internal static class Grpc.Core.Internal.CommonPlatformDetection : object {
    public static OSKind GetOSKind();
    public static CpuArchitecture GetProcessArchitecture();
    private static int uname(IntPtr buf);
    private static string GetUname();
}
internal class Grpc.Tools.CppGeneratorServices : GeneratorServices {
    public CppGeneratorServices(TaskLoggingHelper log);
    public virtual String[] GetPossibleOutputs(ITaskItem protoItem);
}
internal class Grpc.Tools.CSharpGeneratorServices : GeneratorServices {
    public CSharpGeneratorServices(TaskLoggingHelper log);
    public virtual ITaskItem PatchOutputDirectory(ITaskItem protoItem);
    public virtual String[] GetPossibleOutputs(ITaskItem protoItem);
    private string LowerUnderscoreToUpperCamelGrpcWay(string str);
    private string LowerUnderscoreToUpperCamelProtocWay(string str);
}
internal static class Grpc.Tools.DepFileUtil : object {
    public static String[] ReadDependencyInputs(string protoDepDir, string proto, TaskLoggingHelper log);
    public static String[] ReadDependencyOutputs(string depFilename, TaskLoggingHelper log);
    public static string GetDepFilenameForProto(string protoDepDir, string proto);
    public static string GetOutputDirWithHash(string outputDir, string proto);
    private static string GetDirectoryHash(string proto);
    internal static string HashString64Hex(string str);
    private static string ExtractFilenameFromLine(string line, int beg, int end);
    private static int FindLineSeparator(string line);
    private static String[] ReadDepFileLines(string filename, bool required, TaskLoggingHelper log);
}
internal static class Grpc.Tools.Exceptions : object {
    public static bool IsIoRelated(Exception ex);
}
internal abstract class Grpc.Tools.GeneratorServices : object {
    protected TaskLoggingHelper Log;
    protected static string s_dotSlash;
    protected GeneratorServices(TaskLoggingHelper log);
    private static GeneratorServices();
    public static GeneratorServices GetForLanguage(string lang, TaskLoggingHelper log);
    protected bool GrpcOutputPossible(ITaskItem proto);
    public virtual ITaskItem PatchOutputDirectory(ITaskItem protoItem);
    public abstract virtual String[] GetPossibleOutputs(ITaskItem protoItem);
    protected static string GetRelativeDir(string root, string proto, TaskLoggingHelper log);
    protected static string EndWithSlash(string str);
}
internal static class Grpc.Tools.Metadata : object {
    public static string Source;
    public static string ProtoRoot;
    public static string OutputDir;
    public static string GrpcServices;
    public static string GrpcOutputDir;
    private static Metadata();
}
internal static class Grpc.Tools.Platform : object {
    public static OSKind Os;
    public static CpuArchitecture Cpu;
    public static bool IsFsCaseInsensitive { get; }
    public static bool IsWindows { get; }
    private static Platform();
    public static bool get_IsFsCaseInsensitive();
    public static bool get_IsWindows();
}
public class Grpc.Tools.ProtoCompile : ToolTask {
    private static String[] s_supportedGenerators;
    private static TimeSpan s_regexTimeout;
    private static List`1<ErrorListFilter> s_errorListFilters;
    [CompilerGeneratedAttribute]
private string <Generator>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <Protobuf>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProtoDepDir>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DependencyOut>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <ProtoPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OutputDir>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <OutputOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <AdditionalProtocArguments>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GrpcPluginExe>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GrpcOutputDir>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <GrpcOutputOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <AdditionalFileWrites>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <GeneratedFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseCommandProcessor>k__BackingField;
    private static Encoding s_utf8WithoutBom;
    [RequiredAttribute]
public string Generator { get; public set; }
    [RequiredAttribute]
public ITaskItem[] Protobuf { get; public set; }
    public string ProtoDepDir { get; public set; }
    [OutputAttribute]
public string DependencyOut { get; public set; }
    public String[] ProtoPath { get; public set; }
    [RequiredAttribute]
public string OutputDir { get; public set; }
    public String[] OutputOptions { get; public set; }
    public String[] AdditionalProtocArguments { get; public set; }
    public string GrpcPluginExe { get; public set; }
    public string GrpcOutputDir { get; public set; }
    public String[] GrpcOutputOptions { get; public set; }
    [OutputAttribute]
public ITaskItem[] AdditionalFileWrites { get; private set; }
    [OutputAttribute]
public ITaskItem[] GeneratedFiles { get; private set; }
    private bool UseCommandProcessor { get; private set; }
    protected string ToolName { get; }
    protected MessageImportance StandardErrorLoggingImportance { get; }
    protected Encoding ResponseFileEncoding { get; }
    private static ProtoCompile();
    [CompilerGeneratedAttribute]
public string get_Generator();
    [CompilerGeneratedAttribute]
public void set_Generator(string value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_Protobuf();
    [CompilerGeneratedAttribute]
public void set_Protobuf(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public string get_ProtoDepDir();
    [CompilerGeneratedAttribute]
public void set_ProtoDepDir(string value);
    [CompilerGeneratedAttribute]
public string get_DependencyOut();
    [CompilerGeneratedAttribute]
public void set_DependencyOut(string value);
    [CompilerGeneratedAttribute]
public String[] get_ProtoPath();
    [CompilerGeneratedAttribute]
public void set_ProtoPath(String[] value);
    [CompilerGeneratedAttribute]
public string get_OutputDir();
    [CompilerGeneratedAttribute]
public void set_OutputDir(string value);
    [CompilerGeneratedAttribute]
public String[] get_OutputOptions();
    [CompilerGeneratedAttribute]
public void set_OutputOptions(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_AdditionalProtocArguments();
    [CompilerGeneratedAttribute]
public void set_AdditionalProtocArguments(String[] value);
    [CompilerGeneratedAttribute]
public string get_GrpcPluginExe();
    [CompilerGeneratedAttribute]
public void set_GrpcPluginExe(string value);
    [CompilerGeneratedAttribute]
public string get_GrpcOutputDir();
    [CompilerGeneratedAttribute]
public void set_GrpcOutputDir(string value);
    [CompilerGeneratedAttribute]
public String[] get_GrpcOutputOptions();
    [CompilerGeneratedAttribute]
public void set_GrpcOutputOptions(String[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_AdditionalFileWrites();
    [CompilerGeneratedAttribute]
private void set_AdditionalFileWrites(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_GeneratedFiles();
    [CompilerGeneratedAttribute]
private void set_GeneratedFiles(ITaskItem[] value);
    [CompilerGeneratedAttribute]
private bool get_UseCommandProcessor();
    [CompilerGeneratedAttribute]
private void set_UseCommandProcessor(bool value);
    protected virtual string get_ToolName();
    protected virtual string GenerateFullPathToTool();
    protected virtual MessageImportance get_StandardErrorLoggingImportance();
    protected virtual bool ValidateParameters();
    protected virtual Encoding get_ResponseFileEncoding();
    protected virtual string GenerateResponseFileCommands();
    private static string TrimEndSlash(string dir);
    protected virtual void LogToolCommand(string cmd);
    protected virtual void LogEventsFromTextOutput(string singleLine, MessageImportance messageImportance);
    public virtual bool Execute();
    [CompilerGeneratedAttribute]
private bool <ValidateParameters>b__64_0(string g);
    [CompilerGeneratedAttribute]
internal static void <LogToolCommand>g__PrintQuoting|71_0(string str, int start, int count, <>c__DisplayClass71_0& );
}
public class Grpc.Tools.ProtoCompilerOutputs : Task {
    [CompilerGeneratedAttribute]
private string <Generator>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <Protobuf>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <PatchedProtobuf>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <PossibleOutputs>k__BackingField;
    [RequiredAttribute]
public string Generator { get; public set; }
    [RequiredAttribute]
public ITaskItem[] Protobuf { get; public set; }
    [OutputAttribute]
public ITaskItem[] PatchedProtobuf { get; public set; }
    [OutputAttribute]
public ITaskItem[] PossibleOutputs { get; private set; }
    [CompilerGeneratedAttribute]
public string get_Generator();
    [CompilerGeneratedAttribute]
public void set_Generator(string value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_Protobuf();
    [CompilerGeneratedAttribute]
public void set_Protobuf(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_PatchedProtobuf();
    [CompilerGeneratedAttribute]
public void set_PatchedProtobuf(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_PossibleOutputs();
    [CompilerGeneratedAttribute]
private void set_PossibleOutputs(ITaskItem[] value);
    public virtual bool Execute();
}
public class Grpc.Tools.ProtoReadDependencies : Task {
    [CompilerGeneratedAttribute]
private ITaskItem[] <Protobuf>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProtoDepDir>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <Dependencies>k__BackingField;
    [RequiredAttribute]
public ITaskItem[] Protobuf { get; public set; }
    [RequiredAttribute]
public string ProtoDepDir { get; public set; }
    [OutputAttribute]
public ITaskItem[] Dependencies { get; private set; }
    [CompilerGeneratedAttribute]
public ITaskItem[] get_Protobuf();
    [CompilerGeneratedAttribute]
public void set_Protobuf(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public string get_ProtoDepDir();
    [CompilerGeneratedAttribute]
public void set_ProtoDepDir(string value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_Dependencies();
    [CompilerGeneratedAttribute]
private void set_Dependencies(ITaskItem[] value);
    public virtual bool Execute();
}
public class Grpc.Tools.ProtoToolsPlatform : Task {
    [CompilerGeneratedAttribute]
private string <Os>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Cpu>k__BackingField;
    [OutputAttribute]
public string Os { get; public set; }
    [OutputAttribute]
public string Cpu { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Os();
    [CompilerGeneratedAttribute]
public void set_Os(string value);
    [CompilerGeneratedAttribute]
public string get_Cpu();
    [CompilerGeneratedAttribute]
public void set_Cpu(string value);
    public virtual bool Execute();
}
[ExtensionAttribute]
internal static class Grpc.Tools.Strings : object {
    [ExtensionAttribute]
public static bool EqualNoCase(string a, string b);
}
