[CombinedClassAttribute]
[StaticInterfaceAttribute("BooleanConstructor")]
[NamespaceAttribute("False")]
[VirtualAttribute]
public class H5.Core.Boolean : Object {
    [DebuggerBrowsableAttribute]
private static Boolean <prototype>k__BackingField;
    public static Boolean prototype { get; }
    public Boolean(object value);
    public static Boolean get_prototype();
    public static bool Self();
    public static bool Self(object value);
    public virtual bool valueOf();
    public static Boolean op_Implicit(bool value);
    [TemplateAttribute("{this} != null ? {this}.valueOf() : {this}")]
public static bool op_Implicit(Boolean value);
}
[IgnoreCastAttribute]
[NamespaceAttribute("False")]
[VirtualAttribute]
public interface H5.Core.BooleanConstructor {
    public Boolean prototype { get; }
    [TemplateAttribute("new {this}()")]
public abstract virtual Boolean New();
    [TemplateAttribute("new {this}({0})")]
public abstract virtual Boolean New(object value);
    [TemplateAttribute("{this}()")]
public abstract virtual bool Self();
    [TemplateAttribute("{this}({0})")]
public abstract virtual bool Self(object value);
    public abstract virtual Boolean get_prototype();
}
[AttributeUsageAttribute]
public class H5.Core.ClassInterfaceAttribute : Attribute {
}
[AttributeUsageAttribute]
public class H5.Core.CombinedClassAttribute : Attribute {
}
public abstract class H5.Core.CtorDelegate : object {
}
[ScopeAttribute]
[GlobalMethodsAttribute]
public static class H5.Core.dom : object {
    public static Never name;
    [DebuggerBrowsableAttribute]
private static ANGLE_instanced_arraysTypeConfig <ANGLE_instanced_arraysType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static AbortControllerTypeConfig <AbortControllerType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static AbortSignalTypeConfig <AbortSignalType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static AnalyserNodeTypeConfig <AnalyserNodeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static AnimationTypeConfig <AnimationType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static AnimationEventTypeConfig <AnimationEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static AnimationPlaybackEventTypeConfig <AnimationPlaybackEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ApplicationCacheTypeConfig <ApplicationCacheType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static AttrTypeConfig <AttrType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static AudioBufferTypeConfig <AudioBufferType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static AudioBufferSourceNodeTypeConfig <AudioBufferSourceNodeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static AudioContextTypeConfig <AudioContextType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static AudioDestinationNodeTypeConfig <AudioDestinationNodeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static AudioListenerTypeConfig <AudioListenerType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static AudioNodeTypeConfig <AudioNodeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static AudioParamTypeConfig <AudioParamType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static AudioProcessingEventTypeConfig <AudioProcessingEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static AudioTrackTypeConfig <AudioTrackType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static AudioTrackListTypeConfig <AudioTrackListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static BarPropTypeConfig <BarPropType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static BeforeUnloadEventTypeConfig <BeforeUnloadEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static BhxBrowserTypeConfig <BhxBrowserType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static BiquadFilterNodeTypeConfig <BiquadFilterNodeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static BlobTypeConfig <BlobType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static BroadcastChannelTypeConfig <BroadcastChannelType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ByteLengthQueuingStrategyTypeConfig <ByteLengthQueuingStrategyType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CDATASectionTypeConfig <CDATASectionType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CSS <CSSInstance>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CSSConditionRuleTypeConfig <CSSConditionRuleType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CSSFontFaceRuleTypeConfig <CSSFontFaceRuleType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CSSGroupingRuleTypeConfig <CSSGroupingRuleType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CSSImportRuleTypeConfig <CSSImportRuleType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CSSKeyframeRuleTypeConfig <CSSKeyframeRuleType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CSSKeyframesRuleTypeConfig <CSSKeyframesRuleType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CSSMediaRuleTypeConfig <CSSMediaRuleType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CSSNamespaceRuleTypeConfig <CSSNamespaceRuleType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CSSPageRuleTypeConfig <CSSPageRuleType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CSSRuleTypeConfig <CSSRuleType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CSSRuleListTypeConfig <CSSRuleListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CSSStyleDeclarationTypeConfig <CSSStyleDeclarationType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CSSStyleRuleTypeConfig <CSSStyleRuleType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CSSStyleSheetTypeConfig <CSSStyleSheetType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CSSSupportsRuleTypeConfig <CSSSupportsRuleType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CacheTypeConfig <CacheType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CacheStorageTypeConfig <CacheStorageType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CanvasGradientTypeConfig <CanvasGradientType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CanvasPatternTypeConfig <CanvasPatternType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CanvasRenderingContext2DTypeConfig <CanvasRenderingContext2DType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ChannelMergerNodeTypeConfig <ChannelMergerNodeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ChannelSplitterNodeTypeConfig <ChannelSplitterNodeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CharacterDataTypeConfig <CharacterDataType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ClientRectTypeConfig <ClientRectType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ClientRectListTypeConfig <ClientRectListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ClipboardEventTypeConfig <ClipboardEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CloseEventTypeConfig <CloseEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CommentTypeConfig <CommentType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CompositionEventTypeConfig <CompositionEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ConsoleTypeConfig <ConsoleType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ContentScriptGlobalScopeTypeConfig <ContentScriptGlobalScopeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ConvolverNodeTypeConfig <ConvolverNodeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CoordinatesTypeConfig <CoordinatesType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CountQueuingStrategyTypeConfig <CountQueuingStrategyType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CryptoTypeConfig <CryptoType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CryptoKeyTypeConfig <CryptoKeyType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CryptoKeyPairTypeConfig <CryptoKeyPairType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CustomEvent2Config <CustomEvent2>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DOMErrorTypeConfig <DOMErrorType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DOMExceptionTypeConfig <DOMExceptionType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DOMImplementationTypeConfig <DOMImplementationType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DOMParserTypeConfig <DOMParserType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DOMRectTypeConfig <DOMRectType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DOMRectReadOnlyTypeConfig <DOMRectReadOnlyType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DOMSettableTokenListTypeConfig <DOMSettableTokenListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DOMStringListTypeConfig <DOMStringListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DOMStringMapTypeConfig <DOMStringMapType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DOMTokenListTypeConfig <DOMTokenListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DataCueTypeConfig <DataCueType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DataTransferTypeConfig <DataTransferType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DataTransferItemTypeConfig <DataTransferItemType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DataTransferItemListTypeConfig <DataTransferItemListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DeferredPermissionRequestTypeConfig <DeferredPermissionRequestType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DelayNodeTypeConfig <DelayNodeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DeviceAccelerationTypeConfig <DeviceAccelerationType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DeviceLightEventTypeConfig <DeviceLightEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DeviceMotionEventTypeConfig <DeviceMotionEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DeviceOrientationEventTypeConfig <DeviceOrientationEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DeviceRotationRateTypeConfig <DeviceRotationRateType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DocumentType2Config <DocumentType2>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DocumentFragmentTypeConfig <DocumentFragmentType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DocumentTypeTypeConfig <DocumentTypeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DragEventTypeConfig <DragEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static DynamicsCompressorNodeTypeConfig <DynamicsCompressorNodeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static EXT_texture_filter_anisotropicTypeConfig <EXT_texture_filter_anisotropicType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ElementTypeConfig <ElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ErrorEventTypeConfig <ErrorEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static EventTypeConfig <EventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static EventSourceTypeConfig <EventSourceType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static EventTargetTypeConfig <EventTargetType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ExtensionScriptApisTypeConfig <ExtensionScriptApisType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ExternalTypeConfig <ExternalType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static FileTypeConfig <FileType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static FileListTypeConfig <FileListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static FileReaderTypeConfig <FileReaderType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static FocusEventTypeConfig <FocusEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static FocusNavigationEventTypeConfig <FocusNavigationEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static FormDataTypeConfig <FormDataType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static GainNodeTypeConfig <GainNodeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static GamepadTypeConfig <GamepadType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static GamepadButtonTypeConfig <GamepadButtonType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static GamepadEventTypeConfig <GamepadEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static GamepadHapticActuatorType2Config <GamepadHapticActuatorType2>k__BackingField;
    [DebuggerBrowsableAttribute]
private static GamepadPoseTypeConfig <GamepadPoseType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static GeolocationTypeConfig <GeolocationType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLAllCollectionTypeConfig <HTMLAllCollectionType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLAnchorElementTypeConfig <HTMLAnchorElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLAppletElementTypeConfig <HTMLAppletElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLAreaElementTypeConfig <HTMLAreaElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLAreasCollectionTypeConfig <HTMLAreasCollectionType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLAudioElementTypeConfig <HTMLAudioElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLBRElementTypeConfig <HTMLBRElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLBaseElementTypeConfig <HTMLBaseElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLBaseFontElementTypeConfig <HTMLBaseFontElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLBodyElementTypeConfig <HTMLBodyElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLButtonElementTypeConfig <HTMLButtonElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLCanvasElementTypeConfig <HTMLCanvasElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLCollectionTypeConfig <HTMLCollectionType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLDListElementTypeConfig <HTMLDListElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLDataElementTypeConfig <HTMLDataElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLDataListElementTypeConfig <HTMLDataListElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLDetailsElementTypeConfig <HTMLDetailsElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLDialogElementTypeConfig <HTMLDialogElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLDirectoryElementTypeConfig <HTMLDirectoryElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLDivElementTypeConfig <HTMLDivElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLDocumentTypeConfig <HTMLDocumentType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLElementTypeConfig <HTMLElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLEmbedElementTypeConfig <HTMLEmbedElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLFieldSetElementTypeConfig <HTMLFieldSetElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLFontElementTypeConfig <HTMLFontElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLFormControlsCollectionTypeConfig <HTMLFormControlsCollectionType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLFormElementTypeConfig <HTMLFormElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLFrameElementTypeConfig <HTMLFrameElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLFrameSetElementTypeConfig <HTMLFrameSetElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLHRElementTypeConfig <HTMLHRElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLHeadElementTypeConfig <HTMLHeadElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLHeadingElementTypeConfig <HTMLHeadingElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLHtmlElementTypeConfig <HTMLHtmlElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLIFrameElementTypeConfig <HTMLIFrameElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLImageElementTypeConfig <HTMLImageElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLInputElementTypeConfig <HTMLInputElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLLIElementTypeConfig <HTMLLIElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLLabelElementTypeConfig <HTMLLabelElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLLegendElementTypeConfig <HTMLLegendElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLLinkElementTypeConfig <HTMLLinkElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLMainElementTypeConfig <HTMLMainElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLMapElementTypeConfig <HTMLMapElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLMarqueeElementTypeConfig <HTMLMarqueeElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLMediaElementTypeConfig <HTMLMediaElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLMenuElementTypeConfig <HTMLMenuElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLMetaElementTypeConfig <HTMLMetaElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLMeterElementTypeConfig <HTMLMeterElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLModElementTypeConfig <HTMLModElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLOListElementTypeConfig <HTMLOListElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLObjectElementTypeConfig <HTMLObjectElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLOptGroupElementTypeConfig <HTMLOptGroupElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLOptionElementTypeConfig <HTMLOptionElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLOptionsCollectionTypeConfig <HTMLOptionsCollectionType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLOutputElementTypeConfig <HTMLOutputElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLParagraphElementTypeConfig <HTMLParagraphElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLParamElementTypeConfig <HTMLParamElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLPictureElementTypeConfig <HTMLPictureElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLPreElementTypeConfig <HTMLPreElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLProgressElementTypeConfig <HTMLProgressElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLQuoteElementTypeConfig <HTMLQuoteElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLScriptElementTypeConfig <HTMLScriptElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLSelectElementTypeConfig <HTMLSelectElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLSourceElementTypeConfig <HTMLSourceElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLSpanElementTypeConfig <HTMLSpanElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLStyleElementTypeConfig <HTMLStyleElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLSummaryElementTypeConfig <HTMLSummaryElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLTableCaptionElementTypeConfig <HTMLTableCaptionElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLTableCellElementTypeConfig <HTMLTableCellElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLTableColElementTypeConfig <HTMLTableColElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLTableDataCellElementTypeConfig <HTMLTableDataCellElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLTableElementTypeConfig <HTMLTableElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLTableHeaderCellElementTypeConfig <HTMLTableHeaderCellElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLTableRowElementTypeConfig <HTMLTableRowElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLTableSectionElementTypeConfig <HTMLTableSectionElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLTemplateElementTypeConfig <HTMLTemplateElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLTextAreaElementTypeConfig <HTMLTextAreaElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLTimeElementTypeConfig <HTMLTimeElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLTitleElementTypeConfig <HTMLTitleElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLTrackElementTypeConfig <HTMLTrackElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLUListElementTypeConfig <HTMLUListElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLUnknownElementTypeConfig <HTMLUnknownElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLVideoElementTypeConfig <HTMLVideoElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HTMLegendElementTypeConfig <HTMLegendElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HashChangeEventTypeConfig <HashChangeEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HeadersTypeConfig <HeadersType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static HistoryTypeConfig <HistoryType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static IDBCursorTypeConfig <IDBCursorType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static IDBCursorWithValueTypeConfig <IDBCursorWithValueType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static IDBDatabaseTypeConfig <IDBDatabaseType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static IDBFactoryTypeConfig <IDBFactoryType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static IDBIndexTypeConfig <IDBIndexType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static IDBKeyRangeTypeConfig <IDBKeyRangeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static IDBObjectStoreTypeConfig <IDBObjectStoreType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static IDBOpenDBRequestTypeConfig <IDBOpenDBRequestType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static IDBRequestTypeConfig <IDBRequestType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static IDBTransactionTypeConfig <IDBTransactionType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static IDBVersionChangeEventTypeConfig <IDBVersionChangeEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static IIRFilterNodeTypeConfig <IIRFilterNodeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ImageDataTypeConfig <ImageDataType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static IntersectionObserverTypeConfig <IntersectionObserverType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static IntersectionObserverEntryTypeConfig <IntersectionObserverEntryType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static KeyboardEventTypeConfig <KeyboardEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ListeningStateChangedEventTypeConfig <ListeningStateChangedEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static LocationTypeConfig <LocationType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MSAssertionTypeConfig <MSAssertionType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MSBlobBuilderTypeConfig <MSBlobBuilderType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MSCredentialsTypeConfig <MSCredentialsType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MSDCCEventTypeConfig <MSDCCEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MSDSHEventTypeConfig <MSDSHEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MSFIDOCredentialAssertionTypeConfig <MSFIDOCredentialAssertionType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MSFIDOSignatureTypeConfig <MSFIDOSignatureType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MSFIDOSignatureAssertionTypeConfig <MSFIDOSignatureAssertionType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MSGestureTypeConfig <MSGestureType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MSGestureEventTypeConfig <MSGestureEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MSGraphicsTrustTypeConfig <MSGraphicsTrustType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MSInputMethodContextTypeConfig <MSInputMethodContextType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MSMediaKeyErrorTypeConfig <MSMediaKeyErrorType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MSMediaKeyMessageEventTypeConfig <MSMediaKeyMessageEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MSMediaKeyNeededEventTypeConfig <MSMediaKeyNeededEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MSMediaKeySessionTypeConfig <MSMediaKeySessionType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MSMediaKeysTypeConfig <MSMediaKeysType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MSPointerEventTypeConfig <MSPointerEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MSStreamTypeConfig <MSStreamType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MSStreamReaderTypeConfig <MSStreamReaderType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MediaDeviceInfoTypeConfig <MediaDeviceInfoType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MediaDevicesTypeConfig <MediaDevicesType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MediaElementAudioSourceNodeTypeConfig <MediaElementAudioSourceNodeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MediaEncryptedEventTypeConfig <MediaEncryptedEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MediaErrorTypeConfig <MediaErrorType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MediaKeyMessageEventTypeConfig <MediaKeyMessageEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MediaKeySessionType2Config <MediaKeySessionType2>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MediaKeyStatusMapTypeConfig <MediaKeyStatusMapType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MediaKeySystemAccessTypeConfig <MediaKeySystemAccessType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MediaKeysTypeConfig <MediaKeysType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MediaListTypeConfig <MediaListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MediaQueryListTypeConfig <MediaQueryListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MediaSourceTypeConfig <MediaSourceType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MediaStreamTypeConfig <MediaStreamType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MediaStreamAudioSourceNodeTypeConfig <MediaStreamAudioSourceNodeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MediaStreamErrorTypeConfig <MediaStreamErrorType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MediaStreamErrorEventTypeConfig <MediaStreamErrorEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MediaStreamEventTypeConfig <MediaStreamEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MediaStreamTrackTypeConfig <MediaStreamTrackType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MediaStreamTrackEventTypeConfig <MediaStreamTrackEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MessageChannelTypeConfig <MessageChannelType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MessageEventTypeConfig <MessageEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MessagePortTypeConfig <MessagePortType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MimeTypeTypeConfig <MimeTypeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MimeTypeArrayTypeConfig <MimeTypeArrayType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MouseEventTypeConfig <MouseEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MutationEventTypeConfig <MutationEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MutationObserverTypeConfig <MutationObserverType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MutationRecordType2Config <MutationRecordType2>k__BackingField;
    [DebuggerBrowsableAttribute]
private static NamedNodeMapTypeConfig <NamedNodeMapType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static NavigatorTypeConfig <NavigatorType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static NodeTypeConfig <NodeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static NodeFilter2Config <NodeFilter2>k__BackingField;
    [DebuggerBrowsableAttribute]
private static NodeIteratorTypeConfig <NodeIteratorType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static NodeListTypeConfig <NodeListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static NotificationTypeConfig <NotificationType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static OES_element_index_uintTypeConfig <OES_element_index_uintType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static OES_standard_derivativesTypeConfig <OES_standard_derivativesType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static OES_texture_floatTypeConfig <OES_texture_floatType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static OES_texture_float_linearTypeConfig <OES_texture_float_linearType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static OES_texture_half_floatTypeConfig <OES_texture_half_floatType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static OES_texture_half_float_linearTypeConfig <OES_texture_half_float_linearType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static OfflineAudioCompletionEventTypeConfig <OfflineAudioCompletionEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static OfflineAudioContextTypeConfig <OfflineAudioContextType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static OscillatorNodeTypeConfig <OscillatorNodeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static OverflowEventTypeConfig <OverflowEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PageTransitionEventTypeConfig <PageTransitionEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PannerNodeTypeConfig <PannerNodeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static Path2DTypeConfig <Path2DType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PaymentAddressTypeConfig <PaymentAddressType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PaymentRequestTypeConfig <PaymentRequestType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PaymentRequestUpdateEventTypeConfig <PaymentRequestUpdateEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PaymentResponseTypeConfig <PaymentResponseType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PerfWidgetExternalTypeConfig <PerfWidgetExternalType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PerformanceTypeConfig <PerformanceType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PerformanceEntryTypeConfig <PerformanceEntryType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PerformanceMarkTypeConfig <PerformanceMarkType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PerformanceMeasureTypeConfig <PerformanceMeasureType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PerformanceNavigationTypeConfig <PerformanceNavigationType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PerformanceNavigationTimingTypeConfig <PerformanceNavigationTimingType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PerformanceResourceTimingTypeConfig <PerformanceResourceTimingType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PerformanceTimingTypeConfig <PerformanceTimingType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PeriodicWaveTypeConfig <PeriodicWaveType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PermissionRequestTypeConfig <PermissionRequestType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PermissionRequestedEventTypeConfig <PermissionRequestedEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PluginTypeConfig <PluginType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PluginArrayTypeConfig <PluginArrayType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PointerEventTypeConfig <PointerEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PopStateEventTypeConfig <PopStateEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PositionTypeConfig <PositionType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PositionErrorTypeConfig <PositionErrorType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ProcessingInstructionTypeConfig <ProcessingInstructionType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ProgressEventTypeConfig <ProgressEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PushManagerTypeConfig <PushManagerType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PushSubscriptionTypeConfig <PushSubscriptionType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static PushSubscriptionOptionsTypeConfig <PushSubscriptionOptionsType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static RTCDTMFToneChangeEventTypeConfig <RTCDTMFToneChangeEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static RTCDtlsTransportTypeConfig <RTCDtlsTransportType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static RTCDtlsTransportStateChangedEventTypeConfig <RTCDtlsTransportStateChangedEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static RTCDtmfSenderTypeConfig <RTCDtmfSenderType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static RTCIceCandidateType2Config <RTCIceCandidateType2>k__BackingField;
    [DebuggerBrowsableAttribute]
private static RTCIceCandidatePairChangedEventTypeConfig <RTCIceCandidatePairChangedEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static RTCIceGathererTypeConfig <RTCIceGathererType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static RTCIceGathererEventTypeConfig <RTCIceGathererEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static RTCIceTransportTypeConfig <RTCIceTransportType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static RTCIceTransportStateChangedEventTypeConfig <RTCIceTransportStateChangedEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static RTCPeerConnectionTypeConfig <RTCPeerConnectionType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static RTCPeerConnectionIceEventTypeConfig <RTCPeerConnectionIceEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static RTCRtpReceiverTypeConfig <RTCRtpReceiverType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static RTCRtpSenderTypeConfig <RTCRtpSenderType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static RTCSessionDescriptionTypeConfig <RTCSessionDescriptionType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static RTCSrtpSdesTransportTypeConfig <RTCSrtpSdesTransportType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static RTCSsrcConflictEventTypeConfig <RTCSsrcConflictEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static RTCStatsProviderTypeConfig <RTCStatsProviderType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static RandomSourceTypeConfig <RandomSourceType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static RangeTypeConfig <RangeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ReadableStreamTypeConfig <ReadableStreamType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ReadableStreamReaderTypeConfig <ReadableStreamReaderType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static RequestType2Config <RequestType2>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ResponseType2Config <ResponseType2>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGAElementTypeConfig <SVGAElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGAngleTypeConfig <SVGAngleType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGAnimatedAngleTypeConfig <SVGAnimatedAngleType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGAnimatedBooleanTypeConfig <SVGAnimatedBooleanType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGAnimatedEnumerationTypeConfig <SVGAnimatedEnumerationType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGAnimatedIntegerTypeConfig <SVGAnimatedIntegerType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGAnimatedLengthTypeConfig <SVGAnimatedLengthType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGAnimatedLengthListTypeConfig <SVGAnimatedLengthListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGAnimatedNumberTypeConfig <SVGAnimatedNumberType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGAnimatedNumberListTypeConfig <SVGAnimatedNumberListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGAnimatedPreserveAspectRatioTypeConfig <SVGAnimatedPreserveAspectRatioType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGAnimatedRectTypeConfig <SVGAnimatedRectType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGAnimatedStringTypeConfig <SVGAnimatedStringType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGAnimatedTransformListTypeConfig <SVGAnimatedTransformListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGCircleElementTypeConfig <SVGCircleElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGClipPathElementTypeConfig <SVGClipPathElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGComponentTransferFunctionElementTypeConfig <SVGComponentTransferFunctionElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGDefsElementTypeConfig <SVGDefsElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGDescElementTypeConfig <SVGDescElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGElementTypeConfig <SVGElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGElementInstanceTypeConfig <SVGElementInstanceType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGElementInstanceListTypeConfig <SVGElementInstanceListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGEllipseElementTypeConfig <SVGEllipseElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFEBlendElementTypeConfig <SVGFEBlendElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFEColorMatrixElementTypeConfig <SVGFEColorMatrixElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFEComponentTransferElementTypeConfig <SVGFEComponentTransferElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFECompositeElementTypeConfig <SVGFECompositeElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFEConvolveMatrixElementTypeConfig <SVGFEConvolveMatrixElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFEDiffuseLightingElementTypeConfig <SVGFEDiffuseLightingElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFEDisplacementMapElementTypeConfig <SVGFEDisplacementMapElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFEDistantLightElementTypeConfig <SVGFEDistantLightElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFEFloodElementTypeConfig <SVGFEFloodElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFEFuncAElementTypeConfig <SVGFEFuncAElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFEFuncBElementTypeConfig <SVGFEFuncBElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFEFuncGElementTypeConfig <SVGFEFuncGElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFEFuncRElementTypeConfig <SVGFEFuncRElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFEGaussianBlurElementTypeConfig <SVGFEGaussianBlurElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFEImageElementTypeConfig <SVGFEImageElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFEMergeElementTypeConfig <SVGFEMergeElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFEMergeNodeElementTypeConfig <SVGFEMergeNodeElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFEMorphologyElementTypeConfig <SVGFEMorphologyElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFEOffsetElementTypeConfig <SVGFEOffsetElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFEPointLightElementTypeConfig <SVGFEPointLightElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFESpecularLightingElementTypeConfig <SVGFESpecularLightingElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFESpotLightElementTypeConfig <SVGFESpotLightElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFETileElementTypeConfig <SVGFETileElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFETurbulenceElementTypeConfig <SVGFETurbulenceElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGFilterElementTypeConfig <SVGFilterElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGForeignObjectElementTypeConfig <SVGForeignObjectElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGGElementTypeConfig <SVGGElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGGradientElementTypeConfig <SVGGradientElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGGraphicsElementTypeConfig <SVGGraphicsElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGImageElementTypeConfig <SVGImageElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGLengthTypeConfig <SVGLengthType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGLengthListTypeConfig <SVGLengthListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGLineElementTypeConfig <SVGLineElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGLinearGradientElementTypeConfig <SVGLinearGradientElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGMarkerElementTypeConfig <SVGMarkerElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGMaskElementTypeConfig <SVGMaskElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGMatrixTypeConfig <SVGMatrixType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGMetadataElementTypeConfig <SVGMetadataElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGNumberTypeConfig <SVGNumberType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGNumberListTypeConfig <SVGNumberListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPathElementTypeConfig <SVGPathElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPathSegTypeConfig <SVGPathSegType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPathSegArcAbsTypeConfig <SVGPathSegArcAbsType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPathSegArcRelTypeConfig <SVGPathSegArcRelType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPathSegClosePathTypeConfig <SVGPathSegClosePathType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPathSegCurvetoCubicAbsTypeConfig <SVGPathSegCurvetoCubicAbsType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPathSegCurvetoCubicRelTypeConfig <SVGPathSegCurvetoCubicRelType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPathSegCurvetoCubicSmoothAbsTypeConfig <SVGPathSegCurvetoCubicSmoothAbsType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPathSegCurvetoCubicSmoothRelTypeConfig <SVGPathSegCurvetoCubicSmoothRelType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPathSegCurvetoQuadraticAbsTypeConfig <SVGPathSegCurvetoQuadraticAbsType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPathSegCurvetoQuadraticRelTypeConfig <SVGPathSegCurvetoQuadraticRelType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPathSegCurvetoQuadraticSmoothAbsTypeConfig <SVGPathSegCurvetoQuadraticSmoothAbsType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPathSegCurvetoQuadraticSmoothRelTypeConfig <SVGPathSegCurvetoQuadraticSmoothRelType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPathSegLinetoAbsTypeConfig <SVGPathSegLinetoAbsType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPathSegLinetoHorizontalAbsTypeConfig <SVGPathSegLinetoHorizontalAbsType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPathSegLinetoHorizontalRelTypeConfig <SVGPathSegLinetoHorizontalRelType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPathSegLinetoRelTypeConfig <SVGPathSegLinetoRelType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPathSegLinetoVerticalAbsTypeConfig <SVGPathSegLinetoVerticalAbsType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPathSegLinetoVerticalRelTypeConfig <SVGPathSegLinetoVerticalRelType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPathSegListTypeConfig <SVGPathSegListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPathSegMovetoAbsTypeConfig <SVGPathSegMovetoAbsType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPathSegMovetoRelTypeConfig <SVGPathSegMovetoRelType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPatternElementTypeConfig <SVGPatternElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPointTypeConfig <SVGPointType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPointListTypeConfig <SVGPointListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPolygonElementTypeConfig <SVGPolygonElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPolylineElementTypeConfig <SVGPolylineElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGPreserveAspectRatioTypeConfig <SVGPreserveAspectRatioType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGRadialGradientElementTypeConfig <SVGRadialGradientElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGRectTypeConfig <SVGRectType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGRectElementTypeConfig <SVGRectElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGSVGElementTypeConfig <SVGSVGElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGScriptElementTypeConfig <SVGScriptElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGStopElementTypeConfig <SVGStopElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGStringListTypeConfig <SVGStringListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGStylableTypeConfig <SVGStylableType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGStyleElementTypeConfig <SVGStyleElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGSwitchElementTypeConfig <SVGSwitchElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGSymbolElementTypeConfig <SVGSymbolElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGTSpanElementTypeConfig <SVGTSpanElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGTextContentElementTypeConfig <SVGTextContentElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGTextElementTypeConfig <SVGTextElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGTextPathElementTypeConfig <SVGTextPathElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGTextPositioningElementTypeConfig <SVGTextPositioningElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGTitleElementTypeConfig <SVGTitleElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGTransformTypeConfig <SVGTransformType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGTransformListTypeConfig <SVGTransformListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGUnitTypes <SVGUnitTypesInstance>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGUseElementTypeConfig <SVGUseElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGViewElementTypeConfig <SVGViewElementType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGZoomAndPan2Config <SVGZoomAndPan2>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SVGZoomEventTypeConfig <SVGZoomEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ScopedCredentialType2Config <ScopedCredentialType2>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ScopedCredentialInfoTypeConfig <ScopedCredentialInfoType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ScreenTypeConfig <ScreenType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ScriptProcessorNodeTypeConfig <ScriptProcessorNodeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SecurityPolicyViolationEventTypeConfig <SecurityPolicyViolationEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SelectionTypeConfig <SelectionType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ServiceUIFrameContext <ServiceUIFrameContextInstance>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ServiceWorkerTypeConfig <ServiceWorkerType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ServiceWorkerContainerTypeConfig <ServiceWorkerContainerType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ServiceWorkerMessageEventTypeConfig <ServiceWorkerMessageEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ServiceWorkerRegistrationTypeConfig <ServiceWorkerRegistrationType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SourceBufferTypeConfig <SourceBufferType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SourceBufferListTypeConfig <SourceBufferListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SpeechSynthesisTypeConfig <SpeechSynthesisType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SpeechSynthesisEventTypeConfig <SpeechSynthesisEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SpeechSynthesisUtteranceTypeConfig <SpeechSynthesisUtteranceType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SpeechSynthesisVoiceTypeConfig <SpeechSynthesisVoiceType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static StereoPannerNodeTypeConfig <StereoPannerNodeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static StorageTypeConfig <StorageType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static StorageEventTypeConfig <StorageEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static StyleMediaTypeConfig <StyleMediaType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static StyleSheetTypeConfig <StyleSheetType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static StyleSheetListTypeConfig <StyleSheetListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SubtleCryptoTypeConfig <SubtleCryptoType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SyncManagerTypeConfig <SyncManagerType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static TextTypeConfig <TextType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static TextDecoderTypeConfig <TextDecoderType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static TextEncoderTypeConfig <TextEncoderType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static TextEventTypeConfig <TextEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static TextMetricsTypeConfig <TextMetricsType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static TextTrackTypeConfig <TextTrackType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static TextTrackCueTypeConfig <TextTrackCueType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static TextTrackCueListTypeConfig <TextTrackCueListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static TextTrackListTypeConfig <TextTrackListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static TimeRangesTypeConfig <TimeRangesType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static TouchTypeConfig <TouchType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static TouchEventTypeConfig <TouchEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static TouchListTypeConfig <TouchListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static TrackEventTypeConfig <TrackEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static TransitionEventTypeConfig <TransitionEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static TreeWalkerTypeConfig <TreeWalkerType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static UIEventTypeConfig <UIEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static URLTypeConfig <URLType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static URLSearchParamsTypeConfig <URLSearchParamsType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static VRDisplayTypeConfig <VRDisplayType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static VRDisplayCapabilitiesTypeConfig <VRDisplayCapabilitiesType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static VRDisplayEventTypeConfig <VRDisplayEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static VREyeParametersTypeConfig <VREyeParametersType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static VRFieldOfViewTypeConfig <VRFieldOfViewType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static VRFrameDataTypeConfig <VRFrameDataType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static VRPoseTypeConfig <VRPoseType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ValidityStateTypeConfig <ValidityStateType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static VideoPlaybackQualityTypeConfig <VideoPlaybackQualityType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static VideoTrackTypeConfig <VideoTrackType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static VideoTrackListTypeConfig <VideoTrackListType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WEBGL_compressed_texture_s3tcTypeConfig <WEBGL_compressed_texture_s3tcType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WEBGL_debug_renderer_infoTypeConfig <WEBGL_debug_renderer_infoType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WEBGL_depth_textureTypeConfig <WEBGL_depth_textureType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WaveShaperNodeTypeConfig <WaveShaperNodeType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WebAuthenticationTypeConfig <WebAuthenticationType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WebAuthnAssertionTypeConfig <WebAuthnAssertionType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WebGLActiveInfoTypeConfig <WebGLActiveInfoType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WebGLBufferTypeConfig <WebGLBufferType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WebGLContextEventTypeConfig <WebGLContextEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WebGLFramebufferTypeConfig <WebGLFramebufferType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WebGLObjectTypeConfig <WebGLObjectType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WebGLProgramTypeConfig <WebGLProgramType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WebGLRenderbufferTypeConfig <WebGLRenderbufferType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WebGLRenderingContextTypeConfig <WebGLRenderingContextType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WebGLShaderTypeConfig <WebGLShaderType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WebGLShaderPrecisionFormatTypeConfig <WebGLShaderPrecisionFormatType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WebGLTextureTypeConfig <WebGLTextureType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WebGLUniformLocationTypeConfig <WebGLUniformLocationType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WebKitCSSMatrixTypeConfig <WebKitCSSMatrixType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WebKitDirectoryEntryTypeConfig <WebKitDirectoryEntryType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WebKitDirectoryReaderTypeConfig <WebKitDirectoryReaderType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WebKitEntryTypeConfig <WebKitEntryType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WebKitFileEntryTypeConfig <WebKitFileEntryType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WebKitFileSystemTypeConfig <WebKitFileSystemType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WebKitPointTypeConfig <WebKitPointType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WebSocketTypeConfig <WebSocketType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WheelEventTypeConfig <WheelEventType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WindowTypeConfig <WindowType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WorkerTypeConfig <WorkerType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WritableStreamTypeConfig <WritableStreamType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WritableStreamDefaultControllerTypeConfig <WritableStreamDefaultControllerType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static WritableStreamDefaultWriterTypeConfig <WritableStreamDefaultWriterType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static XMLDocumentTypeConfig <XMLDocumentType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static XMLHttpRequestTypeConfig <XMLHttpRequestType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static XMLHttpRequestUploadTypeConfig <XMLHttpRequestUploadType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static XMLSerializerTypeConfig <XMLSerializerType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static XPathEvaluatorTypeConfig <XPathEvaluatorType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static XPathExpressionTypeConfig <XPathExpressionType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static XPathNSResolverTypeConfig <XPathNSResolverType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static XPathResultTypeConfig <XPathResultType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static XSLTProcessorTypeConfig <XSLTProcessorType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static webkitRTCPeerConnectionTypeConfig <webkitRTCPeerConnectionType>k__BackingField;
    [DebuggerBrowsableAttribute]
private static AudioConfig <Audio>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ImageConfig <Image>k__BackingField;
    [DebuggerBrowsableAttribute]
private static OptionConfig <Option>k__BackingField;
    [DebuggerBrowsableAttribute]
private static BlobStatics <BlobInstance>k__BackingField;
    [DebuggerBrowsableAttribute]
private static URLStatics <URLInstance>k__BackingField;
    [DebuggerBrowsableAttribute]
private static URLSearchParamsStatics <URLSearchParamsInstance>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ApplicationCache <applicationCache>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CacheStorage <caches>k__BackingField;
    [DebuggerBrowsableAttribute]
private static Navigator <clientInformation>k__BackingField;
    [DebuggerBrowsableAttribute]
private static bool <closed>k__BackingField;
    [DebuggerBrowsableAttribute]
private static Crypto <crypto>k__BackingField;
    [DebuggerBrowsableAttribute]
private static CustomElementRegistry <customElements>k__BackingField;
    [DebuggerBrowsableAttribute]
private static string <defaultStatus>k__BackingField;
    [DebuggerBrowsableAttribute]
private static double <devicePixelRatio>k__BackingField;
    [DebuggerBrowsableAttribute]
private static string <doNotTrack>k__BackingField;
    [DebuggerBrowsableAttribute]
private static Document <document>k__BackingField;
    [DebuggerBrowsableAttribute]
private static Union`2<Event, Undefined> <event>k__BackingField;
    [DebuggerBrowsableAttribute]
private static External <external>k__BackingField;
    [DebuggerBrowsableAttribute]
private static Element <frameElement>k__BackingField;
    [DebuggerBrowsableAttribute]
private static Window <frames>k__BackingField;
    [DebuggerBrowsableAttribute]
private static History <history>k__BackingField;
    [DebuggerBrowsableAttribute]
private static double <innerHeight>k__BackingField;
    [DebuggerBrowsableAttribute]
private static double <innerWidth>k__BackingField;
    [DebuggerBrowsableAttribute]
private static bool <isSecureContext>k__BackingField;
    [DebuggerBrowsableAttribute]
private static double <length>k__BackingField;
    [DebuggerBrowsableAttribute]
private static Location <location>k__BackingField;
    [DebuggerBrowsableAttribute]
private static BarProp <locationbar>k__BackingField;
    [DebuggerBrowsableAttribute]
private static BarProp <menubar>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ExtensionScriptApis <msContentScript>k__BackingField;
    [DebuggerBrowsableAttribute]
private static MSCredentials <msCredentials>k__BackingField;
    [DebuggerBrowsableAttribute]
private static Navigator <navigator>k__BackingField;
    [DebuggerBrowsableAttribute]
private static Union`2<string, bool> <offscreenBuffering>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onabortFn <onabort>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onbeforeunloadFn <onbeforeunload>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onblurFn <onblur>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <oncanplay>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <oncanplaythrough>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onchange>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onclickFn <onclick>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <oncompassneedscalibration>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncontextmenuFn <oncontextmenu>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onclickFn <ondblclick>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ondevicelightFn <ondevicelight>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ondevicemotionFn <ondevicemotion>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ondeviceorientationFn <ondeviceorientation>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ondragFn <ondrag>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ondragFn <ondragend>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ondragFn <ondragenter>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ondragFn <ondragleave>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ondragFn <ondragover>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ondragFn <ondragstart>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ondragFn <ondrop>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <ondurationchange>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onemptied>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onended>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ErrorEventHandler <onerror>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onblurFn <onfocus>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onhashchangeFn <onhashchange>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <oninput>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <oninvalid>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onkeydownFn <onkeydown>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onkeydownFn <onkeypress>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onkeydownFn <onkeyup>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onload>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onloadeddata>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onloadedmetadata>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onloadstart>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onmessageFn <onmessage>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onclickFn <onmousedown>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onclickFn <onmouseenter>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onclickFn <onmouseleave>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onclickFn <onmousemove>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onclickFn <onmouseout>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onclickFn <onmouseover>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onclickFn <onmouseup>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onmousewheelFn <onmousewheel>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onmsgesturechange>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onmsgesturedoubletap>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onmsgestureend>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onmsgesturehold>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onmsgesturestart>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onmsgesturetap>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onmsinertiastart>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onmspointercancel>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onmspointerdown>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onmspointerenter>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onmspointerleave>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onmspointermove>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onmspointerout>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onmspointerover>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onmspointerup>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onoffline>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <ononline>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onorientationchange>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onpagehideFn <onpagehide>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onpagehideFn <onpageshow>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onpause>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onplay>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onplaying>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onpopstateFn <onpopstate>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onprogressFn <onprogress>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onratechange>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onprogressFn <onreadystatechange>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onreset>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onabortFn <onresize>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onabortFn <onscroll>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onseeked>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onseeking>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onabortFn <onselect>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onstalled>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onstorageFn <onstorage>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onsubmit>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onsuspend>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <ontimeupdate>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ontouchcancelFn <ontouchcancel>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ontouchendFn <ontouchend>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ontouchmoveFn <ontouchmove>k__BackingField;
    [DebuggerBrowsableAttribute]
private static ontouchstartFn <ontouchstart>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onunload>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onvolumechange>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onvrdisplayactivate>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onvrdisplayblur>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onvrdisplayconnect>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onvrdisplaydeactivate>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onvrdisplaydisconnect>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onvrdisplayfocus>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onvrdisplaypointerrestricted>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onvrdisplaypointerunrestricted>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onvrdisplaypresentchange>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncanplayFn <onwaiting>k__BackingField;
    [DebuggerBrowsableAttribute]
private static object <opener>k__BackingField;
    [DebuggerBrowsableAttribute]
private static Union`2<string, double> <orientation>k__BackingField;
    [DebuggerBrowsableAttribute]
private static double <outerHeight>k__BackingField;
    [DebuggerBrowsableAttribute]
private static double <outerWidth>k__BackingField;
    [DebuggerBrowsableAttribute]
private static double <pageXOffset>k__BackingField;
    [DebuggerBrowsableAttribute]
private static double <pageYOffset>k__BackingField;
    [DebuggerBrowsableAttribute]
private static Window <parent>k__BackingField;
    [DebuggerBrowsableAttribute]
private static Performance <performance>k__BackingField;
    [DebuggerBrowsableAttribute]
private static BarProp <personalbar>k__BackingField;
    [DebuggerBrowsableAttribute]
private static Screen <screen>k__BackingField;
    [DebuggerBrowsableAttribute]
private static double <screenLeft>k__BackingField;
    [DebuggerBrowsableAttribute]
private static double <screenTop>k__BackingField;
    [DebuggerBrowsableAttribute]
private static double <screenX>k__BackingField;
    [DebuggerBrowsableAttribute]
private static double <screenY>k__BackingField;
    [DebuggerBrowsableAttribute]
private static double <scrollX>k__BackingField;
    [DebuggerBrowsableAttribute]
private static double <scrollY>k__BackingField;
    [DebuggerBrowsableAttribute]
private static BarProp <scrollbars>k__BackingField;
    [DebuggerBrowsableAttribute]
private static Window <self>k__BackingField;
    [DebuggerBrowsableAttribute]
private static SpeechSynthesis <speechSynthesis>k__BackingField;
    [DebuggerBrowsableAttribute]
private static string <status>k__BackingField;
    [DebuggerBrowsableAttribute]
private static BarProp <statusbar>k__BackingField;
    [DebuggerBrowsableAttribute]
private static StyleMedia <styleMedia>k__BackingField;
    [DebuggerBrowsableAttribute]
private static BarProp <toolbar>k__BackingField;
    [DebuggerBrowsableAttribute]
private static Window <top>k__BackingField;
    [DebuggerBrowsableAttribute]
private static Window <window>k__BackingField;
    [DebuggerBrowsableAttribute]
private static Storage <sessionStorage>k__BackingField;
    [DebuggerBrowsableAttribute]
private static Storage <localStorage>k__BackingField;
    [DebuggerBrowsableAttribute]
private static Console <console>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncontextmenuFn <onpointercancel>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncontextmenuFn <onpointerdown>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncontextmenuFn <onpointerenter>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncontextmenuFn <onpointerleave>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncontextmenuFn <onpointermove>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncontextmenuFn <onpointerout>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncontextmenuFn <onpointerover>k__BackingField;
    [DebuggerBrowsableAttribute]
private static oncontextmenuFn <onpointerup>k__BackingField;
    [DebuggerBrowsableAttribute]
private static onmousewheelFn <onwheel>k__BackingField;
    [DebuggerBrowsableAttribute]
private static IDBFactory <indexedDB>k__BackingField;
    [NameAttribute("ANGLE_instanced_arrays")]
public static ANGLE_instanced_arraysTypeConfig ANGLE_instanced_arraysType { get; public set; }
    [NameAttribute("AbortController")]
public static AbortControllerTypeConfig AbortControllerType { get; public set; }
    [NameAttribute("AbortSignal")]
public static AbortSignalTypeConfig AbortSignalType { get; public set; }
    [NameAttribute("AnalyserNode")]
public static AnalyserNodeTypeConfig AnalyserNodeType { get; public set; }
    [NameAttribute("Animation")]
public static AnimationTypeConfig AnimationType { get; public set; }
    [NameAttribute("AnimationEvent")]
public static AnimationEventTypeConfig AnimationEventType { get; public set; }
    [NameAttribute("AnimationPlaybackEvent")]
public static AnimationPlaybackEventTypeConfig AnimationPlaybackEventType { get; public set; }
    [NameAttribute("ApplicationCache")]
public static ApplicationCacheTypeConfig ApplicationCacheType { get; public set; }
    [NameAttribute("Attr")]
public static AttrTypeConfig AttrType { get; public set; }
    [NameAttribute("AudioBuffer")]
public static AudioBufferTypeConfig AudioBufferType { get; public set; }
    [NameAttribute("AudioBufferSourceNode")]
public static AudioBufferSourceNodeTypeConfig AudioBufferSourceNodeType { get; public set; }
    [NameAttribute("AudioContext")]
public static AudioContextTypeConfig AudioContextType { get; public set; }
    [NameAttribute("AudioDestinationNode")]
public static AudioDestinationNodeTypeConfig AudioDestinationNodeType { get; public set; }
    [NameAttribute("AudioListener")]
public static AudioListenerTypeConfig AudioListenerType { get; public set; }
    [NameAttribute("AudioNode")]
public static AudioNodeTypeConfig AudioNodeType { get; public set; }
    [NameAttribute("AudioParam")]
public static AudioParamTypeConfig AudioParamType { get; public set; }
    [NameAttribute("AudioProcessingEvent")]
public static AudioProcessingEventTypeConfig AudioProcessingEventType { get; public set; }
    [NameAttribute("AudioTrack")]
public static AudioTrackTypeConfig AudioTrackType { get; public set; }
    [NameAttribute("AudioTrackList")]
public static AudioTrackListTypeConfig AudioTrackListType { get; public set; }
    [NameAttribute("BarProp")]
public static BarPropTypeConfig BarPropType { get; public set; }
    [NameAttribute("BeforeUnloadEvent")]
public static BeforeUnloadEventTypeConfig BeforeUnloadEventType { get; public set; }
    [NameAttribute("BhxBrowser")]
public static BhxBrowserTypeConfig BhxBrowserType { get; public set; }
    [NameAttribute("BiquadFilterNode")]
public static BiquadFilterNodeTypeConfig BiquadFilterNodeType { get; public set; }
    [NameAttribute("Blob")]
public static BlobTypeConfig BlobType { get; public set; }
    [NameAttribute("BroadcastChannel")]
public static BroadcastChannelTypeConfig BroadcastChannelType { get; public set; }
    [NameAttribute("ByteLengthQueuingStrategy")]
public static ByteLengthQueuingStrategyTypeConfig ByteLengthQueuingStrategyType { get; public set; }
    [NameAttribute("CDATASection")]
public static CDATASectionTypeConfig CDATASectionType { get; public set; }
    [NameAttribute("CSS")]
public static CSS CSSInstance { get; public set; }
    [NameAttribute("CSSConditionRule")]
public static CSSConditionRuleTypeConfig CSSConditionRuleType { get; public set; }
    [NameAttribute("CSSFontFaceRule")]
public static CSSFontFaceRuleTypeConfig CSSFontFaceRuleType { get; public set; }
    [NameAttribute("CSSGroupingRule")]
public static CSSGroupingRuleTypeConfig CSSGroupingRuleType { get; public set; }
    [NameAttribute("CSSImportRule")]
public static CSSImportRuleTypeConfig CSSImportRuleType { get; public set; }
    [NameAttribute("CSSKeyframeRule")]
public static CSSKeyframeRuleTypeConfig CSSKeyframeRuleType { get; public set; }
    [NameAttribute("CSSKeyframesRule")]
public static CSSKeyframesRuleTypeConfig CSSKeyframesRuleType { get; public set; }
    [NameAttribute("CSSMediaRule")]
public static CSSMediaRuleTypeConfig CSSMediaRuleType { get; public set; }
    [NameAttribute("CSSNamespaceRule")]
public static CSSNamespaceRuleTypeConfig CSSNamespaceRuleType { get; public set; }
    [NameAttribute("CSSPageRule")]
public static CSSPageRuleTypeConfig CSSPageRuleType { get; public set; }
    [NameAttribute("CSSRule")]
public static CSSRuleTypeConfig CSSRuleType { get; public set; }
    [NameAttribute("CSSRuleList")]
public static CSSRuleListTypeConfig CSSRuleListType { get; public set; }
    [NameAttribute("CSSStyleDeclaration")]
public static CSSStyleDeclarationTypeConfig CSSStyleDeclarationType { get; public set; }
    [NameAttribute("CSSStyleRule")]
public static CSSStyleRuleTypeConfig CSSStyleRuleType { get; public set; }
    [NameAttribute("CSSStyleSheet")]
public static CSSStyleSheetTypeConfig CSSStyleSheetType { get; public set; }
    [NameAttribute("CSSSupportsRule")]
public static CSSSupportsRuleTypeConfig CSSSupportsRuleType { get; public set; }
    [NameAttribute("Cache")]
public static CacheTypeConfig CacheType { get; public set; }
    [NameAttribute("CacheStorage")]
public static CacheStorageTypeConfig CacheStorageType { get; public set; }
    [NameAttribute("CanvasGradient")]
public static CanvasGradientTypeConfig CanvasGradientType { get; public set; }
    [NameAttribute("CanvasPattern")]
public static CanvasPatternTypeConfig CanvasPatternType { get; public set; }
    [NameAttribute("CanvasRenderingContext2D")]
public static CanvasRenderingContext2DTypeConfig CanvasRenderingContext2DType { get; public set; }
    [NameAttribute("ChannelMergerNode")]
public static ChannelMergerNodeTypeConfig ChannelMergerNodeType { get; public set; }
    [NameAttribute("ChannelSplitterNode")]
public static ChannelSplitterNodeTypeConfig ChannelSplitterNodeType { get; public set; }
    [NameAttribute("CharacterData")]
public static CharacterDataTypeConfig CharacterDataType { get; public set; }
    [NameAttribute("ClientRect")]
public static ClientRectTypeConfig ClientRectType { get; public set; }
    [NameAttribute("ClientRectList")]
public static ClientRectListTypeConfig ClientRectListType { get; public set; }
    [NameAttribute("ClipboardEvent")]
public static ClipboardEventTypeConfig ClipboardEventType { get; public set; }
    [NameAttribute("CloseEvent")]
public static CloseEventTypeConfig CloseEventType { get; public set; }
    [NameAttribute("Comment")]
public static CommentTypeConfig CommentType { get; public set; }
    [NameAttribute("CompositionEvent")]
public static CompositionEventTypeConfig CompositionEventType { get; public set; }
    [NameAttribute("Console")]
public static ConsoleTypeConfig ConsoleType { get; public set; }
    [NameAttribute("ContentScriptGlobalScope")]
public static ContentScriptGlobalScopeTypeConfig ContentScriptGlobalScopeType { get; public set; }
    [NameAttribute("ConvolverNode")]
public static ConvolverNodeTypeConfig ConvolverNodeType { get; public set; }
    [NameAttribute("Coordinates")]
public static CoordinatesTypeConfig CoordinatesType { get; public set; }
    [NameAttribute("CountQueuingStrategy")]
public static CountQueuingStrategyTypeConfig CountQueuingStrategyType { get; public set; }
    [NameAttribute("Crypto")]
public static CryptoTypeConfig CryptoType { get; public set; }
    [NameAttribute("CryptoKey")]
public static CryptoKeyTypeConfig CryptoKeyType { get; public set; }
    [NameAttribute("CryptoKeyPair")]
public static CryptoKeyPairTypeConfig CryptoKeyPairType { get; public set; }
    [NameAttribute("CustomEvent")]
public static CustomEvent2Config CustomEvent2 { get; public set; }
    [NameAttribute("DOMError")]
public static DOMErrorTypeConfig DOMErrorType { get; public set; }
    [NameAttribute("DOMException")]
public static DOMExceptionTypeConfig DOMExceptionType { get; public set; }
    [NameAttribute("DOMImplementation")]
public static DOMImplementationTypeConfig DOMImplementationType { get; public set; }
    [NameAttribute("DOMParser")]
public static DOMParserTypeConfig DOMParserType { get; public set; }
    [NameAttribute("DOMRect")]
public static DOMRectTypeConfig DOMRectType { get; public set; }
    [NameAttribute("DOMRectReadOnly")]
public static DOMRectReadOnlyTypeConfig DOMRectReadOnlyType { get; public set; }
    [NameAttribute("DOMSettableTokenList")]
public static DOMSettableTokenListTypeConfig DOMSettableTokenListType { get; public set; }
    [NameAttribute("DOMStringList")]
public static DOMStringListTypeConfig DOMStringListType { get; public set; }
    [NameAttribute("DOMStringMap")]
public static DOMStringMapTypeConfig DOMStringMapType { get; public set; }
    [NameAttribute("DOMTokenList")]
public static DOMTokenListTypeConfig DOMTokenListType { get; public set; }
    [NameAttribute("DataCue")]
public static DataCueTypeConfig DataCueType { get; public set; }
    [NameAttribute("DataTransfer")]
public static DataTransferTypeConfig DataTransferType { get; public set; }
    [NameAttribute("DataTransferItem")]
public static DataTransferItemTypeConfig DataTransferItemType { get; public set; }
    [NameAttribute("DataTransferItemList")]
public static DataTransferItemListTypeConfig DataTransferItemListType { get; public set; }
    [NameAttribute("DeferredPermissionRequest")]
public static DeferredPermissionRequestTypeConfig DeferredPermissionRequestType { get; public set; }
    [NameAttribute("DelayNode")]
public static DelayNodeTypeConfig DelayNodeType { get; public set; }
    [NameAttribute("DeviceAcceleration")]
public static DeviceAccelerationTypeConfig DeviceAccelerationType { get; public set; }
    [NameAttribute("DeviceLightEvent")]
public static DeviceLightEventTypeConfig DeviceLightEventType { get; public set; }
    [NameAttribute("DeviceMotionEvent")]
public static DeviceMotionEventTypeConfig DeviceMotionEventType { get; public set; }
    [NameAttribute("DeviceOrientationEvent")]
public static DeviceOrientationEventTypeConfig DeviceOrientationEventType { get; public set; }
    [NameAttribute("DeviceRotationRate")]
public static DeviceRotationRateTypeConfig DeviceRotationRateType { get; public set; }
    [NameAttribute("Document")]
public static DocumentType2Config DocumentType2 { get; public set; }
    [NameAttribute("DocumentFragment")]
public static DocumentFragmentTypeConfig DocumentFragmentType { get; public set; }
    [NameAttribute("DocumentType")]
public static DocumentTypeTypeConfig DocumentTypeType { get; public set; }
    [NameAttribute("DragEvent")]
public static DragEventTypeConfig DragEventType { get; public set; }
    [NameAttribute("DynamicsCompressorNode")]
public static DynamicsCompressorNodeTypeConfig DynamicsCompressorNodeType { get; public set; }
    [NameAttribute("EXT_texture_filter_anisotropic")]
public static EXT_texture_filter_anisotropicTypeConfig EXT_texture_filter_anisotropicType { get; public set; }
    [NameAttribute("Element")]
public static ElementTypeConfig ElementType { get; public set; }
    [NameAttribute("ErrorEvent")]
public static ErrorEventTypeConfig ErrorEventType { get; public set; }
    [NameAttribute("Event")]
public static EventTypeConfig EventType { get; public set; }
    [NameAttribute("EventSource")]
public static EventSourceTypeConfig EventSourceType { get; public set; }
    [NameAttribute("EventTarget")]
public static EventTargetTypeConfig EventTargetType { get; public set; }
    [NameAttribute("ExtensionScriptApis")]
public static ExtensionScriptApisTypeConfig ExtensionScriptApisType { get; public set; }
    [NameAttribute("External")]
public static ExternalTypeConfig ExternalType { get; public set; }
    [NameAttribute("File")]
public static FileTypeConfig FileType { get; public set; }
    [NameAttribute("FileList")]
public static FileListTypeConfig FileListType { get; public set; }
    [NameAttribute("FileReader")]
public static FileReaderTypeConfig FileReaderType { get; public set; }
    [NameAttribute("FocusEvent")]
public static FocusEventTypeConfig FocusEventType { get; public set; }
    [NameAttribute("FocusNavigationEvent")]
public static FocusNavigationEventTypeConfig FocusNavigationEventType { get; public set; }
    [NameAttribute("FormData")]
public static FormDataTypeConfig FormDataType { get; public set; }
    [NameAttribute("GainNode")]
public static GainNodeTypeConfig GainNodeType { get; public set; }
    [NameAttribute("Gamepad")]
public static GamepadTypeConfig GamepadType { get; public set; }
    [NameAttribute("GamepadButton")]
public static GamepadButtonTypeConfig GamepadButtonType { get; public set; }
    [NameAttribute("GamepadEvent")]
public static GamepadEventTypeConfig GamepadEventType { get; public set; }
    [NameAttribute("GamepadHapticActuator")]
public static GamepadHapticActuatorType2Config GamepadHapticActuatorType2 { get; public set; }
    [NameAttribute("GamepadPose")]
public static GamepadPoseTypeConfig GamepadPoseType { get; public set; }
    [NameAttribute("Geolocation")]
public static GeolocationTypeConfig GeolocationType { get; public set; }
    [NameAttribute("HTMLAllCollection")]
public static HTMLAllCollectionTypeConfig HTMLAllCollectionType { get; public set; }
    [NameAttribute("HTMLAnchorElement")]
public static HTMLAnchorElementTypeConfig HTMLAnchorElementType { get; public set; }
    [NameAttribute("HTMLAppletElement")]
public static HTMLAppletElementTypeConfig HTMLAppletElementType { get; public set; }
    [NameAttribute("HTMLAreaElement")]
public static HTMLAreaElementTypeConfig HTMLAreaElementType { get; public set; }
    [NameAttribute("HTMLAreasCollection")]
public static HTMLAreasCollectionTypeConfig HTMLAreasCollectionType { get; public set; }
    [NameAttribute("HTMLAudioElement")]
public static HTMLAudioElementTypeConfig HTMLAudioElementType { get; public set; }
    [NameAttribute("HTMLBRElement")]
public static HTMLBRElementTypeConfig HTMLBRElementType { get; public set; }
    [NameAttribute("HTMLBaseElement")]
public static HTMLBaseElementTypeConfig HTMLBaseElementType { get; public set; }
    [NameAttribute("HTMLBaseFontElement")]
public static HTMLBaseFontElementTypeConfig HTMLBaseFontElementType { get; public set; }
    [NameAttribute("HTMLBodyElement")]
public static HTMLBodyElementTypeConfig HTMLBodyElementType { get; public set; }
    [NameAttribute("HTMLButtonElement")]
public static HTMLButtonElementTypeConfig HTMLButtonElementType { get; public set; }
    [NameAttribute("HTMLCanvasElement")]
public static HTMLCanvasElementTypeConfig HTMLCanvasElementType { get; public set; }
    [NameAttribute("HTMLCollection")]
public static HTMLCollectionTypeConfig HTMLCollectionType { get; public set; }
    [NameAttribute("HTMLDListElement")]
public static HTMLDListElementTypeConfig HTMLDListElementType { get; public set; }
    [NameAttribute("HTMLDataElement")]
public static HTMLDataElementTypeConfig HTMLDataElementType { get; public set; }
    [NameAttribute("HTMLDataListElement")]
public static HTMLDataListElementTypeConfig HTMLDataListElementType { get; public set; }
    [NameAttribute("HTMLDetailsElement")]
public static HTMLDetailsElementTypeConfig HTMLDetailsElementType { get; public set; }
    [NameAttribute("HTMLDialogElement")]
public static HTMLDialogElementTypeConfig HTMLDialogElementType { get; public set; }
    [NameAttribute("HTMLDirectoryElement")]
public static HTMLDirectoryElementTypeConfig HTMLDirectoryElementType { get; public set; }
    [NameAttribute("HTMLDivElement")]
public static HTMLDivElementTypeConfig HTMLDivElementType { get; public set; }
    [NameAttribute("HTMLDocument")]
public static HTMLDocumentTypeConfig HTMLDocumentType { get; public set; }
    [NameAttribute("HTMLElement")]
public static HTMLElementTypeConfig HTMLElementType { get; public set; }
    [NameAttribute("HTMLEmbedElement")]
public static HTMLEmbedElementTypeConfig HTMLEmbedElementType { get; public set; }
    [NameAttribute("HTMLFieldSetElement")]
public static HTMLFieldSetElementTypeConfig HTMLFieldSetElementType { get; public set; }
    [NameAttribute("HTMLFontElement")]
public static HTMLFontElementTypeConfig HTMLFontElementType { get; public set; }
    [NameAttribute("HTMLFormControlsCollection")]
public static HTMLFormControlsCollectionTypeConfig HTMLFormControlsCollectionType { get; public set; }
    [NameAttribute("HTMLFormElement")]
public static HTMLFormElementTypeConfig HTMLFormElementType { get; public set; }
    [NameAttribute("HTMLFrameElement")]
public static HTMLFrameElementTypeConfig HTMLFrameElementType { get; public set; }
    [NameAttribute("HTMLFrameSetElement")]
public static HTMLFrameSetElementTypeConfig HTMLFrameSetElementType { get; public set; }
    [NameAttribute("HTMLHRElement")]
public static HTMLHRElementTypeConfig HTMLHRElementType { get; public set; }
    [NameAttribute("HTMLHeadElement")]
public static HTMLHeadElementTypeConfig HTMLHeadElementType { get; public set; }
    [NameAttribute("HTMLHeadingElement")]
public static HTMLHeadingElementTypeConfig HTMLHeadingElementType { get; public set; }
    [NameAttribute("HTMLHtmlElement")]
public static HTMLHtmlElementTypeConfig HTMLHtmlElementType { get; public set; }
    [NameAttribute("HTMLIFrameElement")]
public static HTMLIFrameElementTypeConfig HTMLIFrameElementType { get; public set; }
    [NameAttribute("HTMLImageElement")]
public static HTMLImageElementTypeConfig HTMLImageElementType { get; public set; }
    [NameAttribute("HTMLInputElement")]
public static HTMLInputElementTypeConfig HTMLInputElementType { get; public set; }
    [NameAttribute("HTMLLIElement")]
public static HTMLLIElementTypeConfig HTMLLIElementType { get; public set; }
    [NameAttribute("HTMLLabelElement")]
public static HTMLLabelElementTypeConfig HTMLLabelElementType { get; public set; }
    [NameAttribute("HTMLLegendElement")]
public static HTMLLegendElementTypeConfig HTMLLegendElementType { get; public set; }
    [NameAttribute("HTMLLinkElement")]
public static HTMLLinkElementTypeConfig HTMLLinkElementType { get; public set; }
    [NameAttribute("HTMLMainElement")]
public static HTMLMainElementTypeConfig HTMLMainElementType { get; public set; }
    [NameAttribute("HTMLMapElement")]
public static HTMLMapElementTypeConfig HTMLMapElementType { get; public set; }
    [NameAttribute("HTMLMarqueeElement")]
public static HTMLMarqueeElementTypeConfig HTMLMarqueeElementType { get; public set; }
    [NameAttribute("HTMLMediaElement")]
public static HTMLMediaElementTypeConfig HTMLMediaElementType { get; public set; }
    [NameAttribute("HTMLMenuElement")]
public static HTMLMenuElementTypeConfig HTMLMenuElementType { get; public set; }
    [NameAttribute("HTMLMetaElement")]
public static HTMLMetaElementTypeConfig HTMLMetaElementType { get; public set; }
    [NameAttribute("HTMLMeterElement")]
public static HTMLMeterElementTypeConfig HTMLMeterElementType { get; public set; }
    [NameAttribute("HTMLModElement")]
public static HTMLModElementTypeConfig HTMLModElementType { get; public set; }
    [NameAttribute("HTMLOListElement")]
public static HTMLOListElementTypeConfig HTMLOListElementType { get; public set; }
    [NameAttribute("HTMLObjectElement")]
public static HTMLObjectElementTypeConfig HTMLObjectElementType { get; public set; }
    [NameAttribute("HTMLOptGroupElement")]
public static HTMLOptGroupElementTypeConfig HTMLOptGroupElementType { get; public set; }
    [NameAttribute("HTMLOptionElement")]
public static HTMLOptionElementTypeConfig HTMLOptionElementType { get; public set; }
    [NameAttribute("HTMLOptionsCollection")]
public static HTMLOptionsCollectionTypeConfig HTMLOptionsCollectionType { get; public set; }
    [NameAttribute("HTMLOutputElement")]
public static HTMLOutputElementTypeConfig HTMLOutputElementType { get; public set; }
    [NameAttribute("HTMLParagraphElement")]
public static HTMLParagraphElementTypeConfig HTMLParagraphElementType { get; public set; }
    [NameAttribute("HTMLParamElement")]
public static HTMLParamElementTypeConfig HTMLParamElementType { get; public set; }
    [NameAttribute("HTMLPictureElement")]
public static HTMLPictureElementTypeConfig HTMLPictureElementType { get; public set; }
    [NameAttribute("HTMLPreElement")]
public static HTMLPreElementTypeConfig HTMLPreElementType { get; public set; }
    [NameAttribute("HTMLProgressElement")]
public static HTMLProgressElementTypeConfig HTMLProgressElementType { get; public set; }
    [NameAttribute("HTMLQuoteElement")]
public static HTMLQuoteElementTypeConfig HTMLQuoteElementType { get; public set; }
    [NameAttribute("HTMLScriptElement")]
public static HTMLScriptElementTypeConfig HTMLScriptElementType { get; public set; }
    [NameAttribute("HTMLSelectElement")]
public static HTMLSelectElementTypeConfig HTMLSelectElementType { get; public set; }
    [NameAttribute("HTMLSourceElement")]
public static HTMLSourceElementTypeConfig HTMLSourceElementType { get; public set; }
    [NameAttribute("HTMLSpanElement")]
public static HTMLSpanElementTypeConfig HTMLSpanElementType { get; public set; }
    [NameAttribute("HTMLStyleElement")]
public static HTMLStyleElementTypeConfig HTMLStyleElementType { get; public set; }
    [NameAttribute("HTMLSummaryElement")]
public static HTMLSummaryElementTypeConfig HTMLSummaryElementType { get; public set; }
    [NameAttribute("HTMLTableCaptionElement")]
public static HTMLTableCaptionElementTypeConfig HTMLTableCaptionElementType { get; public set; }
    [NameAttribute("HTMLTableCellElement")]
public static HTMLTableCellElementTypeConfig HTMLTableCellElementType { get; public set; }
    [NameAttribute("HTMLTableColElement")]
public static HTMLTableColElementTypeConfig HTMLTableColElementType { get; public set; }
    [NameAttribute("HTMLTableDataCellElement")]
public static HTMLTableDataCellElementTypeConfig HTMLTableDataCellElementType { get; public set; }
    [NameAttribute("HTMLTableElement")]
public static HTMLTableElementTypeConfig HTMLTableElementType { get; public set; }
    [NameAttribute("HTMLTableHeaderCellElement")]
public static HTMLTableHeaderCellElementTypeConfig HTMLTableHeaderCellElementType { get; public set; }
    [NameAttribute("HTMLTableRowElement")]
public static HTMLTableRowElementTypeConfig HTMLTableRowElementType { get; public set; }
    [NameAttribute("HTMLTableSectionElement")]
public static HTMLTableSectionElementTypeConfig HTMLTableSectionElementType { get; public set; }
    [NameAttribute("HTMLTemplateElement")]
public static HTMLTemplateElementTypeConfig HTMLTemplateElementType { get; public set; }
    [NameAttribute("HTMLTextAreaElement")]
public static HTMLTextAreaElementTypeConfig HTMLTextAreaElementType { get; public set; }
    [NameAttribute("HTMLTimeElement")]
public static HTMLTimeElementTypeConfig HTMLTimeElementType { get; public set; }
    [NameAttribute("HTMLTitleElement")]
public static HTMLTitleElementTypeConfig HTMLTitleElementType { get; public set; }
    [NameAttribute("HTMLTrackElement")]
public static HTMLTrackElementTypeConfig HTMLTrackElementType { get; public set; }
    [NameAttribute("HTMLUListElement")]
public static HTMLUListElementTypeConfig HTMLUListElementType { get; public set; }
    [NameAttribute("HTMLUnknownElement")]
public static HTMLUnknownElementTypeConfig HTMLUnknownElementType { get; public set; }
    [NameAttribute("HTMLVideoElement")]
public static HTMLVideoElementTypeConfig HTMLVideoElementType { get; public set; }
    [NameAttribute("HTMLegendElement")]
public static HTMLegendElementTypeConfig HTMLegendElementType { get; public set; }
    [NameAttribute("HashChangeEvent")]
public static HashChangeEventTypeConfig HashChangeEventType { get; public set; }
    [NameAttribute("Headers")]
public static HeadersTypeConfig HeadersType { get; public set; }
    [NameAttribute("History")]
public static HistoryTypeConfig HistoryType { get; public set; }
    [NameAttribute("IDBCursor")]
public static IDBCursorTypeConfig IDBCursorType { get; public set; }
    [NameAttribute("IDBCursorWithValue")]
public static IDBCursorWithValueTypeConfig IDBCursorWithValueType { get; public set; }
    [NameAttribute("IDBDatabase")]
public static IDBDatabaseTypeConfig IDBDatabaseType { get; public set; }
    [NameAttribute("IDBFactory")]
public static IDBFactoryTypeConfig IDBFactoryType { get; public set; }
    [NameAttribute("IDBIndex")]
public static IDBIndexTypeConfig IDBIndexType { get; public set; }
    [NameAttribute("IDBKeyRange")]
public static IDBKeyRangeTypeConfig IDBKeyRangeType { get; public set; }
    [NameAttribute("IDBObjectStore")]
public static IDBObjectStoreTypeConfig IDBObjectStoreType { get; public set; }
    [NameAttribute("IDBOpenDBRequest")]
public static IDBOpenDBRequestTypeConfig IDBOpenDBRequestType { get; public set; }
    [NameAttribute("IDBRequest")]
public static IDBRequestTypeConfig IDBRequestType { get; public set; }
    [NameAttribute("IDBTransaction")]
public static IDBTransactionTypeConfig IDBTransactionType { get; public set; }
    [NameAttribute("IDBVersionChangeEvent")]
public static IDBVersionChangeEventTypeConfig IDBVersionChangeEventType { get; public set; }
    [NameAttribute("IIRFilterNode")]
public static IIRFilterNodeTypeConfig IIRFilterNodeType { get; public set; }
    [NameAttribute("ImageData")]
public static ImageDataTypeConfig ImageDataType { get; public set; }
    [NameAttribute("IntersectionObserver")]
public static IntersectionObserverTypeConfig IntersectionObserverType { get; public set; }
    [NameAttribute("IntersectionObserverEntry")]
public static IntersectionObserverEntryTypeConfig IntersectionObserverEntryType { get; public set; }
    [NameAttribute("KeyboardEvent")]
public static KeyboardEventTypeConfig KeyboardEventType { get; public set; }
    [NameAttribute("ListeningStateChangedEvent")]
public static ListeningStateChangedEventTypeConfig ListeningStateChangedEventType { get; public set; }
    [NameAttribute("Location")]
public static LocationTypeConfig LocationType { get; public set; }
    [NameAttribute("MSAssertion")]
public static MSAssertionTypeConfig MSAssertionType { get; public set; }
    [NameAttribute("MSBlobBuilder")]
public static MSBlobBuilderTypeConfig MSBlobBuilderType { get; public set; }
    [NameAttribute("MSCredentials")]
public static MSCredentialsTypeConfig MSCredentialsType { get; public set; }
    [NameAttribute("MSDCCEvent")]
public static MSDCCEventTypeConfig MSDCCEventType { get; public set; }
    [NameAttribute("MSDSHEvent")]
public static MSDSHEventTypeConfig MSDSHEventType { get; public set; }
    [NameAttribute("MSFIDOCredentialAssertion")]
public static MSFIDOCredentialAssertionTypeConfig MSFIDOCredentialAssertionType { get; public set; }
    [NameAttribute("MSFIDOSignature")]
public static MSFIDOSignatureTypeConfig MSFIDOSignatureType { get; public set; }
    [NameAttribute("MSFIDOSignatureAssertion")]
public static MSFIDOSignatureAssertionTypeConfig MSFIDOSignatureAssertionType { get; public set; }
    [NameAttribute("MSGesture")]
public static MSGestureTypeConfig MSGestureType { get; public set; }
    [NameAttribute("MSGestureEvent")]
public static MSGestureEventTypeConfig MSGestureEventType { get; public set; }
    [NameAttribute("MSGraphicsTrust")]
public static MSGraphicsTrustTypeConfig MSGraphicsTrustType { get; public set; }
    [NameAttribute("MSInputMethodContext")]
public static MSInputMethodContextTypeConfig MSInputMethodContextType { get; public set; }
    [NameAttribute("MSMediaKeyError")]
public static MSMediaKeyErrorTypeConfig MSMediaKeyErrorType { get; public set; }
    [NameAttribute("MSMediaKeyMessageEvent")]
public static MSMediaKeyMessageEventTypeConfig MSMediaKeyMessageEventType { get; public set; }
    [NameAttribute("MSMediaKeyNeededEvent")]
public static MSMediaKeyNeededEventTypeConfig MSMediaKeyNeededEventType { get; public set; }
    [NameAttribute("MSMediaKeySession")]
public static MSMediaKeySessionTypeConfig MSMediaKeySessionType { get; public set; }
    [NameAttribute("MSMediaKeys")]
public static MSMediaKeysTypeConfig MSMediaKeysType { get; public set; }
    [NameAttribute("MSPointerEvent")]
public static MSPointerEventTypeConfig MSPointerEventType { get; public set; }
    [NameAttribute("MSStream")]
public static MSStreamTypeConfig MSStreamType { get; public set; }
    [NameAttribute("MSStreamReader")]
public static MSStreamReaderTypeConfig MSStreamReaderType { get; public set; }
    [NameAttribute("MediaDeviceInfo")]
public static MediaDeviceInfoTypeConfig MediaDeviceInfoType { get; public set; }
    [NameAttribute("MediaDevices")]
public static MediaDevicesTypeConfig MediaDevicesType { get; public set; }
    [NameAttribute("MediaElementAudioSourceNode")]
public static MediaElementAudioSourceNodeTypeConfig MediaElementAudioSourceNodeType { get; public set; }
    [NameAttribute("MediaEncryptedEvent")]
public static MediaEncryptedEventTypeConfig MediaEncryptedEventType { get; public set; }
    [NameAttribute("MediaError")]
public static MediaErrorTypeConfig MediaErrorType { get; public set; }
    [NameAttribute("MediaKeyMessageEvent")]
public static MediaKeyMessageEventTypeConfig MediaKeyMessageEventType { get; public set; }
    [NameAttribute("MediaKeySession")]
public static MediaKeySessionType2Config MediaKeySessionType2 { get; public set; }
    [NameAttribute("MediaKeyStatusMap")]
public static MediaKeyStatusMapTypeConfig MediaKeyStatusMapType { get; public set; }
    [NameAttribute("MediaKeySystemAccess")]
public static MediaKeySystemAccessTypeConfig MediaKeySystemAccessType { get; public set; }
    [NameAttribute("MediaKeys")]
public static MediaKeysTypeConfig MediaKeysType { get; public set; }
    [NameAttribute("MediaList")]
public static MediaListTypeConfig MediaListType { get; public set; }
    [NameAttribute("MediaQueryList")]
public static MediaQueryListTypeConfig MediaQueryListType { get; public set; }
    [NameAttribute("MediaSource")]
public static MediaSourceTypeConfig MediaSourceType { get; public set; }
    [NameAttribute("MediaStream")]
public static MediaStreamTypeConfig MediaStreamType { get; public set; }
    [NameAttribute("MediaStreamAudioSourceNode")]
public static MediaStreamAudioSourceNodeTypeConfig MediaStreamAudioSourceNodeType { get; public set; }
    [NameAttribute("MediaStreamError")]
public static MediaStreamErrorTypeConfig MediaStreamErrorType { get; public set; }
    [NameAttribute("MediaStreamErrorEvent")]
public static MediaStreamErrorEventTypeConfig MediaStreamErrorEventType { get; public set; }
    [NameAttribute("MediaStreamEvent")]
public static MediaStreamEventTypeConfig MediaStreamEventType { get; public set; }
    [NameAttribute("MediaStreamTrack")]
public static MediaStreamTrackTypeConfig MediaStreamTrackType { get; public set; }
    [NameAttribute("MediaStreamTrackEvent")]
public static MediaStreamTrackEventTypeConfig MediaStreamTrackEventType { get; public set; }
    [NameAttribute("MessageChannel")]
public static MessageChannelTypeConfig MessageChannelType { get; public set; }
    [NameAttribute("MessageEvent")]
public static MessageEventTypeConfig MessageEventType { get; public set; }
    [NameAttribute("MessagePort")]
public static MessagePortTypeConfig MessagePortType { get; public set; }
    [NameAttribute("MimeType")]
public static MimeTypeTypeConfig MimeTypeType { get; public set; }
    [NameAttribute("MimeTypeArray")]
public static MimeTypeArrayTypeConfig MimeTypeArrayType { get; public set; }
    [NameAttribute("MouseEvent")]
public static MouseEventTypeConfig MouseEventType { get; public set; }
    [NameAttribute("MutationEvent")]
public static MutationEventTypeConfig MutationEventType { get; public set; }
    [NameAttribute("MutationObserver")]
public static MutationObserverTypeConfig MutationObserverType { get; public set; }
    [NameAttribute("MutationRecord")]
public static MutationRecordType2Config MutationRecordType2 { get; public set; }
    [NameAttribute("NamedNodeMap")]
public static NamedNodeMapTypeConfig NamedNodeMapType { get; public set; }
    [NameAttribute("Navigator")]
public static NavigatorTypeConfig NavigatorType { get; public set; }
    [NameAttribute("Node")]
public static NodeTypeConfig NodeType { get; public set; }
    [NameAttribute("NodeFilter")]
public static NodeFilter2Config NodeFilter2 { get; public set; }
    [NameAttribute("NodeIterator")]
public static NodeIteratorTypeConfig NodeIteratorType { get; public set; }
    [NameAttribute("NodeList")]
public static NodeListTypeConfig NodeListType { get; public set; }
    [NameAttribute("Notification")]
public static NotificationTypeConfig NotificationType { get; public set; }
    [NameAttribute("OES_element_index_uint")]
public static OES_element_index_uintTypeConfig OES_element_index_uintType { get; public set; }
    [NameAttribute("OES_standard_derivatives")]
public static OES_standard_derivativesTypeConfig OES_standard_derivativesType { get; public set; }
    [NameAttribute("OES_texture_float")]
public static OES_texture_floatTypeConfig OES_texture_floatType { get; public set; }
    [NameAttribute("OES_texture_float_linear")]
public static OES_texture_float_linearTypeConfig OES_texture_float_linearType { get; public set; }
    [NameAttribute("OES_texture_half_float")]
public static OES_texture_half_floatTypeConfig OES_texture_half_floatType { get; public set; }
    [NameAttribute("OES_texture_half_float_linear")]
public static OES_texture_half_float_linearTypeConfig OES_texture_half_float_linearType { get; public set; }
    [NameAttribute("OfflineAudioCompletionEvent")]
public static OfflineAudioCompletionEventTypeConfig OfflineAudioCompletionEventType { get; public set; }
    [NameAttribute("OfflineAudioContext")]
public static OfflineAudioContextTypeConfig OfflineAudioContextType { get; public set; }
    [NameAttribute("OscillatorNode")]
public static OscillatorNodeTypeConfig OscillatorNodeType { get; public set; }
    [NameAttribute("OverflowEvent")]
public static OverflowEventTypeConfig OverflowEventType { get; public set; }
    [NameAttribute("PageTransitionEvent")]
public static PageTransitionEventTypeConfig PageTransitionEventType { get; public set; }
    [NameAttribute("PannerNode")]
public static PannerNodeTypeConfig PannerNodeType { get; public set; }
    [NameAttribute("Path2D")]
public static Path2DTypeConfig Path2DType { get; public set; }
    [NameAttribute("PaymentAddress")]
public static PaymentAddressTypeConfig PaymentAddressType { get; public set; }
    [NameAttribute("PaymentRequest")]
public static PaymentRequestTypeConfig PaymentRequestType { get; public set; }
    [NameAttribute("PaymentRequestUpdateEvent")]
public static PaymentRequestUpdateEventTypeConfig PaymentRequestUpdateEventType { get; public set; }
    [NameAttribute("PaymentResponse")]
public static PaymentResponseTypeConfig PaymentResponseType { get; public set; }
    [NameAttribute("PerfWidgetExternal")]
public static PerfWidgetExternalTypeConfig PerfWidgetExternalType { get; public set; }
    [NameAttribute("Performance")]
public static PerformanceTypeConfig PerformanceType { get; public set; }
    [NameAttribute("PerformanceEntry")]
public static PerformanceEntryTypeConfig PerformanceEntryType { get; public set; }
    [NameAttribute("PerformanceMark")]
public static PerformanceMarkTypeConfig PerformanceMarkType { get; public set; }
    [NameAttribute("PerformanceMeasure")]
public static PerformanceMeasureTypeConfig PerformanceMeasureType { get; public set; }
    [NameAttribute("PerformanceNavigation")]
public static PerformanceNavigationTypeConfig PerformanceNavigationType { get; public set; }
    [NameAttribute("PerformanceNavigationTiming")]
public static PerformanceNavigationTimingTypeConfig PerformanceNavigationTimingType { get; public set; }
    [NameAttribute("PerformanceResourceTiming")]
public static PerformanceResourceTimingTypeConfig PerformanceResourceTimingType { get; public set; }
    [NameAttribute("PerformanceTiming")]
public static PerformanceTimingTypeConfig PerformanceTimingType { get; public set; }
    [NameAttribute("PeriodicWave")]
public static PeriodicWaveTypeConfig PeriodicWaveType { get; public set; }
    [NameAttribute("PermissionRequest")]
public static PermissionRequestTypeConfig PermissionRequestType { get; public set; }
    [NameAttribute("PermissionRequestedEvent")]
public static PermissionRequestedEventTypeConfig PermissionRequestedEventType { get; public set; }
    [NameAttribute("Plugin")]
public static PluginTypeConfig PluginType { get; public set; }
    [NameAttribute("PluginArray")]
public static PluginArrayTypeConfig PluginArrayType { get; public set; }
    [NameAttribute("PointerEvent")]
public static PointerEventTypeConfig PointerEventType { get; public set; }
    [NameAttribute("PopStateEvent")]
public static PopStateEventTypeConfig PopStateEventType { get; public set; }
    [NameAttribute("Position")]
public static PositionTypeConfig PositionType { get; public set; }
    [NameAttribute("PositionError")]
public static PositionErrorTypeConfig PositionErrorType { get; public set; }
    [NameAttribute("ProcessingInstruction")]
public static ProcessingInstructionTypeConfig ProcessingInstructionType { get; public set; }
    [NameAttribute("ProgressEvent")]
public static ProgressEventTypeConfig ProgressEventType { get; public set; }
    [NameAttribute("PushManager")]
public static PushManagerTypeConfig PushManagerType { get; public set; }
    [NameAttribute("PushSubscription")]
public static PushSubscriptionTypeConfig PushSubscriptionType { get; public set; }
    [NameAttribute("PushSubscriptionOptions")]
public static PushSubscriptionOptionsTypeConfig PushSubscriptionOptionsType { get; public set; }
    [NameAttribute("RTCDTMFToneChangeEvent")]
public static RTCDTMFToneChangeEventTypeConfig RTCDTMFToneChangeEventType { get; public set; }
    [NameAttribute("RTCDtlsTransport")]
public static RTCDtlsTransportTypeConfig RTCDtlsTransportType { get; public set; }
    [NameAttribute("RTCDtlsTransportStateChangedEvent")]
public static RTCDtlsTransportStateChangedEventTypeConfig RTCDtlsTransportStateChangedEventType { get; public set; }
    [NameAttribute("RTCDtmfSender")]
public static RTCDtmfSenderTypeConfig RTCDtmfSenderType { get; public set; }
    [NameAttribute("RTCIceCandidate")]
public static RTCIceCandidateType2Config RTCIceCandidateType2 { get; public set; }
    [NameAttribute("RTCIceCandidatePairChangedEvent")]
public static RTCIceCandidatePairChangedEventTypeConfig RTCIceCandidatePairChangedEventType { get; public set; }
    [NameAttribute("RTCIceGatherer")]
public static RTCIceGathererTypeConfig RTCIceGathererType { get; public set; }
    [NameAttribute("RTCIceGathererEvent")]
public static RTCIceGathererEventTypeConfig RTCIceGathererEventType { get; public set; }
    [NameAttribute("RTCIceTransport")]
public static RTCIceTransportTypeConfig RTCIceTransportType { get; public set; }
    [NameAttribute("RTCIceTransportStateChangedEvent")]
public static RTCIceTransportStateChangedEventTypeConfig RTCIceTransportStateChangedEventType { get; public set; }
    [NameAttribute("RTCPeerConnection")]
public static RTCPeerConnectionTypeConfig RTCPeerConnectionType { get; public set; }
    [NameAttribute("RTCPeerConnectionIceEvent")]
public static RTCPeerConnectionIceEventTypeConfig RTCPeerConnectionIceEventType { get; public set; }
    [NameAttribute("RTCRtpReceiver")]
public static RTCRtpReceiverTypeConfig RTCRtpReceiverType { get; public set; }
    [NameAttribute("RTCRtpSender")]
public static RTCRtpSenderTypeConfig RTCRtpSenderType { get; public set; }
    [NameAttribute("RTCSessionDescription")]
public static RTCSessionDescriptionTypeConfig RTCSessionDescriptionType { get; public set; }
    [NameAttribute("RTCSrtpSdesTransport")]
public static RTCSrtpSdesTransportTypeConfig RTCSrtpSdesTransportType { get; public set; }
    [NameAttribute("RTCSsrcConflictEvent")]
public static RTCSsrcConflictEventTypeConfig RTCSsrcConflictEventType { get; public set; }
    [NameAttribute("RTCStatsProvider")]
public static RTCStatsProviderTypeConfig RTCStatsProviderType { get; public set; }
    [NameAttribute("RandomSource")]
public static RandomSourceTypeConfig RandomSourceType { get; public set; }
    [NameAttribute("Range")]
public static RangeTypeConfig RangeType { get; public set; }
    [NameAttribute("ReadableStream")]
public static ReadableStreamTypeConfig ReadableStreamType { get; public set; }
    [NameAttribute("ReadableStreamReader")]
public static ReadableStreamReaderTypeConfig ReadableStreamReaderType { get; public set; }
    [NameAttribute("Request")]
public static RequestType2Config RequestType2 { get; public set; }
    [NameAttribute("Response")]
public static ResponseType2Config ResponseType2 { get; public set; }
    [NameAttribute("SVGAElement")]
public static SVGAElementTypeConfig SVGAElementType { get; public set; }
    [NameAttribute("SVGAngle")]
public static SVGAngleTypeConfig SVGAngleType { get; public set; }
    [NameAttribute("SVGAnimatedAngle")]
public static SVGAnimatedAngleTypeConfig SVGAnimatedAngleType { get; public set; }
    [NameAttribute("SVGAnimatedBoolean")]
public static SVGAnimatedBooleanTypeConfig SVGAnimatedBooleanType { get; public set; }
    [NameAttribute("SVGAnimatedEnumeration")]
public static SVGAnimatedEnumerationTypeConfig SVGAnimatedEnumerationType { get; public set; }
    [NameAttribute("SVGAnimatedInteger")]
public static SVGAnimatedIntegerTypeConfig SVGAnimatedIntegerType { get; public set; }
    [NameAttribute("SVGAnimatedLength")]
public static SVGAnimatedLengthTypeConfig SVGAnimatedLengthType { get; public set; }
    [NameAttribute("SVGAnimatedLengthList")]
public static SVGAnimatedLengthListTypeConfig SVGAnimatedLengthListType { get; public set; }
    [NameAttribute("SVGAnimatedNumber")]
public static SVGAnimatedNumberTypeConfig SVGAnimatedNumberType { get; public set; }
    [NameAttribute("SVGAnimatedNumberList")]
public static SVGAnimatedNumberListTypeConfig SVGAnimatedNumberListType { get; public set; }
    [NameAttribute("SVGAnimatedPreserveAspectRatio")]
public static SVGAnimatedPreserveAspectRatioTypeConfig SVGAnimatedPreserveAspectRatioType { get; public set; }
    [NameAttribute("SVGAnimatedRect")]
public static SVGAnimatedRectTypeConfig SVGAnimatedRectType { get; public set; }
    [NameAttribute("SVGAnimatedString")]
public static SVGAnimatedStringTypeConfig SVGAnimatedStringType { get; public set; }
    [NameAttribute("SVGAnimatedTransformList")]
public static SVGAnimatedTransformListTypeConfig SVGAnimatedTransformListType { get; public set; }
    [NameAttribute("SVGCircleElement")]
public static SVGCircleElementTypeConfig SVGCircleElementType { get; public set; }
    [NameAttribute("SVGClipPathElement")]
public static SVGClipPathElementTypeConfig SVGClipPathElementType { get; public set; }
    [NameAttribute("SVGComponentTransferFunctionElement")]
public static SVGComponentTransferFunctionElementTypeConfig SVGComponentTransferFunctionElementType { get; public set; }
    [NameAttribute("SVGDefsElement")]
public static SVGDefsElementTypeConfig SVGDefsElementType { get; public set; }
    [NameAttribute("SVGDescElement")]
public static SVGDescElementTypeConfig SVGDescElementType { get; public set; }
    [NameAttribute("SVGElement")]
public static SVGElementTypeConfig SVGElementType { get; public set; }
    [NameAttribute("SVGElementInstance")]
public static SVGElementInstanceTypeConfig SVGElementInstanceType { get; public set; }
    [NameAttribute("SVGElementInstanceList")]
public static SVGElementInstanceListTypeConfig SVGElementInstanceListType { get; public set; }
    [NameAttribute("SVGEllipseElement")]
public static SVGEllipseElementTypeConfig SVGEllipseElementType { get; public set; }
    [NameAttribute("SVGFEBlendElement")]
public static SVGFEBlendElementTypeConfig SVGFEBlendElementType { get; public set; }
    [NameAttribute("SVGFEColorMatrixElement")]
public static SVGFEColorMatrixElementTypeConfig SVGFEColorMatrixElementType { get; public set; }
    [NameAttribute("SVGFEComponentTransferElement")]
public static SVGFEComponentTransferElementTypeConfig SVGFEComponentTransferElementType { get; public set; }
    [NameAttribute("SVGFECompositeElement")]
public static SVGFECompositeElementTypeConfig SVGFECompositeElementType { get; public set; }
    [NameAttribute("SVGFEConvolveMatrixElement")]
public static SVGFEConvolveMatrixElementTypeConfig SVGFEConvolveMatrixElementType { get; public set; }
    [NameAttribute("SVGFEDiffuseLightingElement")]
public static SVGFEDiffuseLightingElementTypeConfig SVGFEDiffuseLightingElementType { get; public set; }
    [NameAttribute("SVGFEDisplacementMapElement")]
public static SVGFEDisplacementMapElementTypeConfig SVGFEDisplacementMapElementType { get; public set; }
    [NameAttribute("SVGFEDistantLightElement")]
public static SVGFEDistantLightElementTypeConfig SVGFEDistantLightElementType { get; public set; }
    [NameAttribute("SVGFEFloodElement")]
public static SVGFEFloodElementTypeConfig SVGFEFloodElementType { get; public set; }
    [NameAttribute("SVGFEFuncAElement")]
public static SVGFEFuncAElementTypeConfig SVGFEFuncAElementType { get; public set; }
    [NameAttribute("SVGFEFuncBElement")]
public static SVGFEFuncBElementTypeConfig SVGFEFuncBElementType { get; public set; }
    [NameAttribute("SVGFEFuncGElement")]
public static SVGFEFuncGElementTypeConfig SVGFEFuncGElementType { get; public set; }
    [NameAttribute("SVGFEFuncRElement")]
public static SVGFEFuncRElementTypeConfig SVGFEFuncRElementType { get; public set; }
    [NameAttribute("SVGFEGaussianBlurElement")]
public static SVGFEGaussianBlurElementTypeConfig SVGFEGaussianBlurElementType { get; public set; }
    [NameAttribute("SVGFEImageElement")]
public static SVGFEImageElementTypeConfig SVGFEImageElementType { get; public set; }
    [NameAttribute("SVGFEMergeElement")]
public static SVGFEMergeElementTypeConfig SVGFEMergeElementType { get; public set; }
    [NameAttribute("SVGFEMergeNodeElement")]
public static SVGFEMergeNodeElementTypeConfig SVGFEMergeNodeElementType { get; public set; }
    [NameAttribute("SVGFEMorphologyElement")]
public static SVGFEMorphologyElementTypeConfig SVGFEMorphologyElementType { get; public set; }
    [NameAttribute("SVGFEOffsetElement")]
public static SVGFEOffsetElementTypeConfig SVGFEOffsetElementType { get; public set; }
    [NameAttribute("SVGFEPointLightElement")]
public static SVGFEPointLightElementTypeConfig SVGFEPointLightElementType { get; public set; }
    [NameAttribute("SVGFESpecularLightingElement")]
public static SVGFESpecularLightingElementTypeConfig SVGFESpecularLightingElementType { get; public set; }
    [NameAttribute("SVGFESpotLightElement")]
public static SVGFESpotLightElementTypeConfig SVGFESpotLightElementType { get; public set; }
    [NameAttribute("SVGFETileElement")]
public static SVGFETileElementTypeConfig SVGFETileElementType { get; public set; }
    [NameAttribute("SVGFETurbulenceElement")]
public static SVGFETurbulenceElementTypeConfig SVGFETurbulenceElementType { get; public set; }
    [NameAttribute("SVGFilterElement")]
public static SVGFilterElementTypeConfig SVGFilterElementType { get; public set; }
    [NameAttribute("SVGForeignObjectElement")]
public static SVGForeignObjectElementTypeConfig SVGForeignObjectElementType { get; public set; }
    [NameAttribute("SVGGElement")]
public static SVGGElementTypeConfig SVGGElementType { get; public set; }
    [NameAttribute("SVGGradientElement")]
public static SVGGradientElementTypeConfig SVGGradientElementType { get; public set; }
    [NameAttribute("SVGGraphicsElement")]
public static SVGGraphicsElementTypeConfig SVGGraphicsElementType { get; public set; }
    [NameAttribute("SVGImageElement")]
public static SVGImageElementTypeConfig SVGImageElementType { get; public set; }
    [NameAttribute("SVGLength")]
public static SVGLengthTypeConfig SVGLengthType { get; public set; }
    [NameAttribute("SVGLengthList")]
public static SVGLengthListTypeConfig SVGLengthListType { get; public set; }
    [NameAttribute("SVGLineElement")]
public static SVGLineElementTypeConfig SVGLineElementType { get; public set; }
    [NameAttribute("SVGLinearGradientElement")]
public static SVGLinearGradientElementTypeConfig SVGLinearGradientElementType { get; public set; }
    [NameAttribute("SVGMarkerElement")]
public static SVGMarkerElementTypeConfig SVGMarkerElementType { get; public set; }
    [NameAttribute("SVGMaskElement")]
public static SVGMaskElementTypeConfig SVGMaskElementType { get; public set; }
    [NameAttribute("SVGMatrix")]
public static SVGMatrixTypeConfig SVGMatrixType { get; public set; }
    [NameAttribute("SVGMetadataElement")]
public static SVGMetadataElementTypeConfig SVGMetadataElementType { get; public set; }
    [NameAttribute("SVGNumber")]
public static SVGNumberTypeConfig SVGNumberType { get; public set; }
    [NameAttribute("SVGNumberList")]
public static SVGNumberListTypeConfig SVGNumberListType { get; public set; }
    [NameAttribute("SVGPathElement")]
public static SVGPathElementTypeConfig SVGPathElementType { get; public set; }
    [NameAttribute("SVGPathSeg")]
public static SVGPathSegTypeConfig SVGPathSegType { get; public set; }
    [NameAttribute("SVGPathSegArcAbs")]
public static SVGPathSegArcAbsTypeConfig SVGPathSegArcAbsType { get; public set; }
    [NameAttribute("SVGPathSegArcRel")]
public static SVGPathSegArcRelTypeConfig SVGPathSegArcRelType { get; public set; }
    [NameAttribute("SVGPathSegClosePath")]
public static SVGPathSegClosePathTypeConfig SVGPathSegClosePathType { get; public set; }
    [NameAttribute("SVGPathSegCurvetoCubicAbs")]
public static SVGPathSegCurvetoCubicAbsTypeConfig SVGPathSegCurvetoCubicAbsType { get; public set; }
    [NameAttribute("SVGPathSegCurvetoCubicRel")]
public static SVGPathSegCurvetoCubicRelTypeConfig SVGPathSegCurvetoCubicRelType { get; public set; }
    [NameAttribute("SVGPathSegCurvetoCubicSmoothAbs")]
public static SVGPathSegCurvetoCubicSmoothAbsTypeConfig SVGPathSegCurvetoCubicSmoothAbsType { get; public set; }
    [NameAttribute("SVGPathSegCurvetoCubicSmoothRel")]
public static SVGPathSegCurvetoCubicSmoothRelTypeConfig SVGPathSegCurvetoCubicSmoothRelType { get; public set; }
    [NameAttribute("SVGPathSegCurvetoQuadraticAbs")]
public static SVGPathSegCurvetoQuadraticAbsTypeConfig SVGPathSegCurvetoQuadraticAbsType { get; public set; }
    [NameAttribute("SVGPathSegCurvetoQuadraticRel")]
public static SVGPathSegCurvetoQuadraticRelTypeConfig SVGPathSegCurvetoQuadraticRelType { get; public set; }
    [NameAttribute("SVGPathSegCurvetoQuadraticSmoothAbs")]
public static SVGPathSegCurvetoQuadraticSmoothAbsTypeConfig SVGPathSegCurvetoQuadraticSmoothAbsType { get; public set; }
    [NameAttribute("SVGPathSegCurvetoQuadraticSmoothRel")]
public static SVGPathSegCurvetoQuadraticSmoothRelTypeConfig SVGPathSegCurvetoQuadraticSmoothRelType { get; public set; }
    [NameAttribute("SVGPathSegLinetoAbs")]
public static SVGPathSegLinetoAbsTypeConfig SVGPathSegLinetoAbsType { get; public set; }
    [NameAttribute("SVGPathSegLinetoHorizontalAbs")]
public static SVGPathSegLinetoHorizontalAbsTypeConfig SVGPathSegLinetoHorizontalAbsType { get; public set; }
    [NameAttribute("SVGPathSegLinetoHorizontalRel")]
public static SVGPathSegLinetoHorizontalRelTypeConfig SVGPathSegLinetoHorizontalRelType { get; public set; }
    [NameAttribute("SVGPathSegLinetoRel")]
public static SVGPathSegLinetoRelTypeConfig SVGPathSegLinetoRelType { get; public set; }
    [NameAttribute("SVGPathSegLinetoVerticalAbs")]
public static SVGPathSegLinetoVerticalAbsTypeConfig SVGPathSegLinetoVerticalAbsType { get; public set; }
    [NameAttribute("SVGPathSegLinetoVerticalRel")]
public static SVGPathSegLinetoVerticalRelTypeConfig SVGPathSegLinetoVerticalRelType { get; public set; }
    [NameAttribute("SVGPathSegList")]
public static SVGPathSegListTypeConfig SVGPathSegListType { get; public set; }
    [NameAttribute("SVGPathSegMovetoAbs")]
public static SVGPathSegMovetoAbsTypeConfig SVGPathSegMovetoAbsType { get; public set; }
    [NameAttribute("SVGPathSegMovetoRel")]
public static SVGPathSegMovetoRelTypeConfig SVGPathSegMovetoRelType { get; public set; }
    [NameAttribute("SVGPatternElement")]
public static SVGPatternElementTypeConfig SVGPatternElementType { get; public set; }
    [NameAttribute("SVGPoint")]
public static SVGPointTypeConfig SVGPointType { get; public set; }
    [NameAttribute("SVGPointList")]
public static SVGPointListTypeConfig SVGPointListType { get; public set; }
    [NameAttribute("SVGPolygonElement")]
public static SVGPolygonElementTypeConfig SVGPolygonElementType { get; public set; }
    [NameAttribute("SVGPolylineElement")]
public static SVGPolylineElementTypeConfig SVGPolylineElementType { get; public set; }
    [NameAttribute("SVGPreserveAspectRatio")]
public static SVGPreserveAspectRatioTypeConfig SVGPreserveAspectRatioType { get; public set; }
    [NameAttribute("SVGRadialGradientElement")]
public static SVGRadialGradientElementTypeConfig SVGRadialGradientElementType { get; public set; }
    [NameAttribute("SVGRect")]
public static SVGRectTypeConfig SVGRectType { get; public set; }
    [NameAttribute("SVGRectElement")]
public static SVGRectElementTypeConfig SVGRectElementType { get; public set; }
    [NameAttribute("SVGSVGElement")]
public static SVGSVGElementTypeConfig SVGSVGElementType { get; public set; }
    [NameAttribute("SVGScriptElement")]
public static SVGScriptElementTypeConfig SVGScriptElementType { get; public set; }
    [NameAttribute("SVGStopElement")]
public static SVGStopElementTypeConfig SVGStopElementType { get; public set; }
    [NameAttribute("SVGStringList")]
public static SVGStringListTypeConfig SVGStringListType { get; public set; }
    [NameAttribute("SVGStylable")]
public static SVGStylableTypeConfig SVGStylableType { get; public set; }
    [NameAttribute("SVGStyleElement")]
public static SVGStyleElementTypeConfig SVGStyleElementType { get; public set; }
    [NameAttribute("SVGSwitchElement")]
public static SVGSwitchElementTypeConfig SVGSwitchElementType { get; public set; }
    [NameAttribute("SVGSymbolElement")]
public static SVGSymbolElementTypeConfig SVGSymbolElementType { get; public set; }
    [NameAttribute("SVGTSpanElement")]
public static SVGTSpanElementTypeConfig SVGTSpanElementType { get; public set; }
    [NameAttribute("SVGTextContentElement")]
public static SVGTextContentElementTypeConfig SVGTextContentElementType { get; public set; }
    [NameAttribute("SVGTextElement")]
public static SVGTextElementTypeConfig SVGTextElementType { get; public set; }
    [NameAttribute("SVGTextPathElement")]
public static SVGTextPathElementTypeConfig SVGTextPathElementType { get; public set; }
    [NameAttribute("SVGTextPositioningElement")]
public static SVGTextPositioningElementTypeConfig SVGTextPositioningElementType { get; public set; }
    [NameAttribute("SVGTitleElement")]
public static SVGTitleElementTypeConfig SVGTitleElementType { get; public set; }
    [NameAttribute("SVGTransform")]
public static SVGTransformTypeConfig SVGTransformType { get; public set; }
    [NameAttribute("SVGTransformList")]
public static SVGTransformListTypeConfig SVGTransformListType { get; public set; }
    [NameAttribute("SVGUnitTypes")]
public static SVGUnitTypes SVGUnitTypesInstance { get; public set; }
    [NameAttribute("SVGUseElement")]
public static SVGUseElementTypeConfig SVGUseElementType { get; public set; }
    [NameAttribute("SVGViewElement")]
public static SVGViewElementTypeConfig SVGViewElementType { get; public set; }
    [NameAttribute("SVGZoomAndPan")]
public static SVGZoomAndPan2Config SVGZoomAndPan2 { get; public set; }
    [NameAttribute("SVGZoomEvent")]
public static SVGZoomEventTypeConfig SVGZoomEventType { get; public set; }
    [NameAttribute("ScopedCredential")]
public static ScopedCredentialType2Config ScopedCredentialType2 { get; public set; }
    [NameAttribute("ScopedCredentialInfo")]
public static ScopedCredentialInfoTypeConfig ScopedCredentialInfoType { get; public set; }
    [NameAttribute("Screen")]
public static ScreenTypeConfig ScreenType { get; public set; }
    [NameAttribute("ScriptProcessorNode")]
public static ScriptProcessorNodeTypeConfig ScriptProcessorNodeType { get; public set; }
    [NameAttribute("SecurityPolicyViolationEvent")]
public static SecurityPolicyViolationEventTypeConfig SecurityPolicyViolationEventType { get; public set; }
    [NameAttribute("Selection")]
public static SelectionTypeConfig SelectionType { get; public set; }
    [NameAttribute("ServiceUIFrameContext")]
public static ServiceUIFrameContext ServiceUIFrameContextInstance { get; public set; }
    [NameAttribute("ServiceWorker")]
public static ServiceWorkerTypeConfig ServiceWorkerType { get; public set; }
    [NameAttribute("ServiceWorkerContainer")]
public static ServiceWorkerContainerTypeConfig ServiceWorkerContainerType { get; public set; }
    [NameAttribute("ServiceWorkerMessageEvent")]
public static ServiceWorkerMessageEventTypeConfig ServiceWorkerMessageEventType { get; public set; }
    [NameAttribute("ServiceWorkerRegistration")]
public static ServiceWorkerRegistrationTypeConfig ServiceWorkerRegistrationType { get; public set; }
    [NameAttribute("SourceBuffer")]
public static SourceBufferTypeConfig SourceBufferType { get; public set; }
    [NameAttribute("SourceBufferList")]
public static SourceBufferListTypeConfig SourceBufferListType { get; public set; }
    [NameAttribute("SpeechSynthesis")]
public static SpeechSynthesisTypeConfig SpeechSynthesisType { get; public set; }
    [NameAttribute("SpeechSynthesisEvent")]
public static SpeechSynthesisEventTypeConfig SpeechSynthesisEventType { get; public set; }
    [NameAttribute("SpeechSynthesisUtterance")]
public static SpeechSynthesisUtteranceTypeConfig SpeechSynthesisUtteranceType { get; public set; }
    [NameAttribute("SpeechSynthesisVoice")]
public static SpeechSynthesisVoiceTypeConfig SpeechSynthesisVoiceType { get; public set; }
    [NameAttribute("StereoPannerNode")]
public static StereoPannerNodeTypeConfig StereoPannerNodeType { get; public set; }
    [NameAttribute("Storage")]
public static StorageTypeConfig StorageType { get; public set; }
    [NameAttribute("StorageEvent")]
public static StorageEventTypeConfig StorageEventType { get; public set; }
    [NameAttribute("StyleMedia")]
public static StyleMediaTypeConfig StyleMediaType { get; public set; }
    [NameAttribute("StyleSheet")]
public static StyleSheetTypeConfig StyleSheetType { get; public set; }
    [NameAttribute("StyleSheetList")]
public static StyleSheetListTypeConfig StyleSheetListType { get; public set; }
    [NameAttribute("SubtleCrypto")]
public static SubtleCryptoTypeConfig SubtleCryptoType { get; public set; }
    [NameAttribute("SyncManager")]
public static SyncManagerTypeConfig SyncManagerType { get; public set; }
    [NameAttribute("Text")]
public static TextTypeConfig TextType { get; public set; }
    [NameAttribute("TextDecoder")]
public static TextDecoderTypeConfig TextDecoderType { get; public set; }
    [NameAttribute("TextEncoder")]
public static TextEncoderTypeConfig TextEncoderType { get; public set; }
    [NameAttribute("TextEvent")]
public static TextEventTypeConfig TextEventType { get; public set; }
    [NameAttribute("TextMetrics")]
public static TextMetricsTypeConfig TextMetricsType { get; public set; }
    [NameAttribute("TextTrack")]
public static TextTrackTypeConfig TextTrackType { get; public set; }
    [NameAttribute("TextTrackCue")]
public static TextTrackCueTypeConfig TextTrackCueType { get; public set; }
    [NameAttribute("TextTrackCueList")]
public static TextTrackCueListTypeConfig TextTrackCueListType { get; public set; }
    [NameAttribute("TextTrackList")]
public static TextTrackListTypeConfig TextTrackListType { get; public set; }
    [NameAttribute("TimeRanges")]
public static TimeRangesTypeConfig TimeRangesType { get; public set; }
    [NameAttribute("Touch")]
public static TouchTypeConfig TouchType { get; public set; }
    [NameAttribute("TouchEvent")]
public static TouchEventTypeConfig TouchEventType { get; public set; }
    [NameAttribute("TouchList")]
public static TouchListTypeConfig TouchListType { get; public set; }
    [NameAttribute("TrackEvent")]
public static TrackEventTypeConfig TrackEventType { get; public set; }
    [NameAttribute("TransitionEvent")]
public static TransitionEventTypeConfig TransitionEventType { get; public set; }
    [NameAttribute("TreeWalker")]
public static TreeWalkerTypeConfig TreeWalkerType { get; public set; }
    [NameAttribute("UIEvent")]
public static UIEventTypeConfig UIEventType { get; public set; }
    [NameAttribute("URL")]
public static URLTypeConfig URLType { get; public set; }
    [NameAttribute("URLSearchParams")]
public static URLSearchParamsTypeConfig URLSearchParamsType { get; public set; }
    [NameAttribute("VRDisplay")]
public static VRDisplayTypeConfig VRDisplayType { get; public set; }
    [NameAttribute("VRDisplayCapabilities")]
public static VRDisplayCapabilitiesTypeConfig VRDisplayCapabilitiesType { get; public set; }
    [NameAttribute("VRDisplayEvent")]
public static VRDisplayEventTypeConfig VRDisplayEventType { get; public set; }
    [NameAttribute("VREyeParameters")]
public static VREyeParametersTypeConfig VREyeParametersType { get; public set; }
    [NameAttribute("VRFieldOfView")]
public static VRFieldOfViewTypeConfig VRFieldOfViewType { get; public set; }
    [NameAttribute("VRFrameData")]
public static VRFrameDataTypeConfig VRFrameDataType { get; public set; }
    [NameAttribute("VRPose")]
public static VRPoseTypeConfig VRPoseType { get; public set; }
    [NameAttribute("ValidityState")]
public static ValidityStateTypeConfig ValidityStateType { get; public set; }
    [NameAttribute("VideoPlaybackQuality")]
public static VideoPlaybackQualityTypeConfig VideoPlaybackQualityType { get; public set; }
    [NameAttribute("VideoTrack")]
public static VideoTrackTypeConfig VideoTrackType { get; public set; }
    [NameAttribute("VideoTrackList")]
public static VideoTrackListTypeConfig VideoTrackListType { get; public set; }
    [NameAttribute("WEBGL_compressed_texture_s3tc")]
public static WEBGL_compressed_texture_s3tcTypeConfig WEBGL_compressed_texture_s3tcType { get; public set; }
    [NameAttribute("WEBGL_debug_renderer_info")]
public static WEBGL_debug_renderer_infoTypeConfig WEBGL_debug_renderer_infoType { get; public set; }
    [NameAttribute("WEBGL_depth_texture")]
public static WEBGL_depth_textureTypeConfig WEBGL_depth_textureType { get; public set; }
    [NameAttribute("WaveShaperNode")]
public static WaveShaperNodeTypeConfig WaveShaperNodeType { get; public set; }
    [NameAttribute("WebAuthentication")]
public static WebAuthenticationTypeConfig WebAuthenticationType { get; public set; }
    [NameAttribute("WebAuthnAssertion")]
public static WebAuthnAssertionTypeConfig WebAuthnAssertionType { get; public set; }
    [NameAttribute("WebGLActiveInfo")]
public static WebGLActiveInfoTypeConfig WebGLActiveInfoType { get; public set; }
    [NameAttribute("WebGLBuffer")]
public static WebGLBufferTypeConfig WebGLBufferType { get; public set; }
    [NameAttribute("WebGLContextEvent")]
public static WebGLContextEventTypeConfig WebGLContextEventType { get; public set; }
    [NameAttribute("WebGLFramebuffer")]
public static WebGLFramebufferTypeConfig WebGLFramebufferType { get; public set; }
    [NameAttribute("WebGLObject")]
public static WebGLObjectTypeConfig WebGLObjectType { get; public set; }
    [NameAttribute("WebGLProgram")]
public static WebGLProgramTypeConfig WebGLProgramType { get; public set; }
    [NameAttribute("WebGLRenderbuffer")]
public static WebGLRenderbufferTypeConfig WebGLRenderbufferType { get; public set; }
    [NameAttribute("WebGLRenderingContext")]
public static WebGLRenderingContextTypeConfig WebGLRenderingContextType { get; public set; }
    [NameAttribute("WebGLShader")]
public static WebGLShaderTypeConfig WebGLShaderType { get; public set; }
    [NameAttribute("WebGLShaderPrecisionFormat")]
public static WebGLShaderPrecisionFormatTypeConfig WebGLShaderPrecisionFormatType { get; public set; }
    [NameAttribute("WebGLTexture")]
public static WebGLTextureTypeConfig WebGLTextureType { get; public set; }
    [NameAttribute("WebGLUniformLocation")]
public static WebGLUniformLocationTypeConfig WebGLUniformLocationType { get; public set; }
    [NameAttribute("WebKitCSSMatrix")]
public static WebKitCSSMatrixTypeConfig WebKitCSSMatrixType { get; public set; }
    [NameAttribute("WebKitDirectoryEntry")]
public static WebKitDirectoryEntryTypeConfig WebKitDirectoryEntryType { get; public set; }
    [NameAttribute("WebKitDirectoryReader")]
public static WebKitDirectoryReaderTypeConfig WebKitDirectoryReaderType { get; public set; }
    [NameAttribute("WebKitEntry")]
public static WebKitEntryTypeConfig WebKitEntryType { get; public set; }
    [NameAttribute("WebKitFileEntry")]
public static WebKitFileEntryTypeConfig WebKitFileEntryType { get; public set; }
    [NameAttribute("WebKitFileSystem")]
public static WebKitFileSystemTypeConfig WebKitFileSystemType { get; public set; }
    [NameAttribute("WebKitPoint")]
public static WebKitPointTypeConfig WebKitPointType { get; public set; }
    [NameAttribute("WebSocket")]
public static WebSocketTypeConfig WebSocketType { get; public set; }
    [NameAttribute("WheelEvent")]
public static WheelEventTypeConfig WheelEventType { get; public set; }
    [NameAttribute("Window")]
public static WindowTypeConfig WindowType { get; public set; }
    [NameAttribute("Worker")]
public static WorkerTypeConfig WorkerType { get; public set; }
    [NameAttribute("WritableStream")]
public static WritableStreamTypeConfig WritableStreamType { get; public set; }
    [NameAttribute("WritableStreamDefaultController")]
public static WritableStreamDefaultControllerTypeConfig WritableStreamDefaultControllerType { get; public set; }
    [NameAttribute("WritableStreamDefaultWriter")]
public static WritableStreamDefaultWriterTypeConfig WritableStreamDefaultWriterType { get; public set; }
    [NameAttribute("XMLDocument")]
public static XMLDocumentTypeConfig XMLDocumentType { get; public set; }
    [NameAttribute("XMLHttpRequest")]
public static XMLHttpRequestTypeConfig XMLHttpRequestType { get; public set; }
    [NameAttribute("XMLHttpRequestUpload")]
public static XMLHttpRequestUploadTypeConfig XMLHttpRequestUploadType { get; public set; }
    [NameAttribute("XMLSerializer")]
public static XMLSerializerTypeConfig XMLSerializerType { get; public set; }
    [NameAttribute("XPathEvaluator")]
public static XPathEvaluatorTypeConfig XPathEvaluatorType { get; public set; }
    [NameAttribute("XPathExpression")]
public static XPathExpressionTypeConfig XPathExpressionType { get; public set; }
    [NameAttribute("XPathNSResolver")]
public static XPathNSResolverTypeConfig XPathNSResolverType { get; public set; }
    [NameAttribute("XPathResult")]
public static XPathResultTypeConfig XPathResultType { get; public set; }
    [NameAttribute("XSLTProcessor")]
public static XSLTProcessorTypeConfig XSLTProcessorType { get; public set; }
    [NameAttribute("webkitRTCPeerConnection")]
public static webkitRTCPeerConnectionTypeConfig webkitRTCPeerConnectionType { get; public set; }
    public static AudioConfig Audio { get; public set; }
    public static ImageConfig Image { get; public set; }
    public static OptionConfig Option { get; public set; }
    [NameAttribute("Blob")]
public static BlobStatics BlobInstance { get; public set; }
    [NameAttribute("URL")]
public static URLStatics URLInstance { get; public set; }
    [NameAttribute("URLSearchParams")]
public static URLSearchParamsStatics URLSearchParamsInstance { get; public set; }
    public static ApplicationCache applicationCache { get; public set; }
    public static CacheStorage caches { get; public set; }
    public static Navigator clientInformation { get; public set; }
    public static bool closed { get; public set; }
    public static Crypto crypto { get; public set; }
    public static CustomElementRegistry customElements { get; public set; }
    public static string defaultStatus { get; public set; }
    public static double devicePixelRatio { get; public set; }
    public static string doNotTrack { get; public set; }
    public static Document document { get; public set; }
    [NameAttribute("event")]
public static Union`2<Event, Undefined> event { get; public set; }
    public static External external { get; public set; }
    public static Element frameElement { get; public set; }
    public static Window frames { get; public set; }
    public static History history { get; public set; }
    public static double innerHeight { get; public set; }
    public static double innerWidth { get; public set; }
    public static bool isSecureContext { get; public set; }
    public static double length { get; public set; }
    public static Location location { get; public set; }
    public static BarProp locationbar { get; public set; }
    public static BarProp menubar { get; public set; }
    public static ExtensionScriptApis msContentScript { get; public set; }
    public static MSCredentials msCredentials { get; public set; }
    public static Navigator navigator { get; public set; }
    public static Union`2<string, bool> offscreenBuffering { get; public set; }
    public static onabortFn onabort { get; public set; }
    public static onbeforeunloadFn onbeforeunload { get; public set; }
    public static onblurFn onblur { get; public set; }
    public static oncanplayFn oncanplay { get; public set; }
    public static oncanplayFn oncanplaythrough { get; public set; }
    public static oncanplayFn onchange { get; public set; }
    public static onclickFn onclick { get; public set; }
    public static oncanplayFn oncompassneedscalibration { get; public set; }
    public static oncontextmenuFn oncontextmenu { get; public set; }
    public static onclickFn ondblclick { get; public set; }
    public static ondevicelightFn ondevicelight { get; public set; }
    public static ondevicemotionFn ondevicemotion { get; public set; }
    public static ondeviceorientationFn ondeviceorientation { get; public set; }
    public static ondragFn ondrag { get; public set; }
    public static ondragFn ondragend { get; public set; }
    public static ondragFn ondragenter { get; public set; }
    public static ondragFn ondragleave { get; public set; }
    public static ondragFn ondragover { get; public set; }
    public static ondragFn ondragstart { get; public set; }
    public static ondragFn ondrop { get; public set; }
    public static oncanplayFn ondurationchange { get; public set; }
    public static oncanplayFn onemptied { get; public set; }
    public static oncanplayFn onended { get; public set; }
    public static ErrorEventHandler onerror { get; public set; }
    public static onblurFn onfocus { get; public set; }
    public static onhashchangeFn onhashchange { get; public set; }
    public static oncanplayFn oninput { get; public set; }
    public static oncanplayFn oninvalid { get; public set; }
    public static onkeydownFn onkeydown { get; public set; }
    public static onkeydownFn onkeypress { get; public set; }
    public static onkeydownFn onkeyup { get; public set; }
    public static oncanplayFn onload { get; public set; }
    public static oncanplayFn onloadeddata { get; public set; }
    public static oncanplayFn onloadedmetadata { get; public set; }
    public static oncanplayFn onloadstart { get; public set; }
    public static onmessageFn onmessage { get; public set; }
    public static onclickFn onmousedown { get; public set; }
    public static onclickFn onmouseenter { get; public set; }
    public static onclickFn onmouseleave { get; public set; }
    public static onclickFn onmousemove { get; public set; }
    public static onclickFn onmouseout { get; public set; }
    public static onclickFn onmouseover { get; public set; }
    public static onclickFn onmouseup { get; public set; }
    public static onmousewheelFn onmousewheel { get; public set; }
    public static oncanplayFn onmsgesturechange { get; public set; }
    public static oncanplayFn onmsgesturedoubletap { get; public set; }
    public static oncanplayFn onmsgestureend { get; public set; }
    public static oncanplayFn onmsgesturehold { get; public set; }
    public static oncanplayFn onmsgesturestart { get; public set; }
    public static oncanplayFn onmsgesturetap { get; public set; }
    public static oncanplayFn onmsinertiastart { get; public set; }
    public static oncanplayFn onmspointercancel { get; public set; }
    public static oncanplayFn onmspointerdown { get; public set; }
    public static oncanplayFn onmspointerenter { get; public set; }
    public static oncanplayFn onmspointerleave { get; public set; }
    public static oncanplayFn onmspointermove { get; public set; }
    public static oncanplayFn onmspointerout { get; public set; }
    public static oncanplayFn onmspointerover { get; public set; }
    public static oncanplayFn onmspointerup { get; public set; }
    public static oncanplayFn onoffline { get; public set; }
    public static oncanplayFn ononline { get; public set; }
    public static oncanplayFn onorientationchange { get; public set; }
    public static onpagehideFn onpagehide { get; public set; }
    public static onpagehideFn onpageshow { get; public set; }
    public static oncanplayFn onpause { get; public set; }
    public static oncanplayFn onplay { get; public set; }
    public static oncanplayFn onplaying { get; public set; }
    public static onpopstateFn onpopstate { get; public set; }
    public static onprogressFn onprogress { get; public set; }
    public static oncanplayFn onratechange { get; public set; }
    public static onprogressFn onreadystatechange { get; public set; }
    public static oncanplayFn onreset { get; public set; }
    public static onabortFn onresize { get; public set; }
    public static onabortFn onscroll { get; public set; }
    public static oncanplayFn onseeked { get; public set; }
    public static oncanplayFn onseeking { get; public set; }
    public static onabortFn onselect { get; public set; }
    public static oncanplayFn onstalled { get; public set; }
    public static onstorageFn onstorage { get; public set; }
    public static oncanplayFn onsubmit { get; public set; }
    public static oncanplayFn onsuspend { get; public set; }
    public static oncanplayFn ontimeupdate { get; public set; }
    public static ontouchcancelFn ontouchcancel { get; public set; }
    public static ontouchendFn ontouchend { get; public set; }
    public static ontouchmoveFn ontouchmove { get; public set; }
    public static ontouchstartFn ontouchstart { get; public set; }
    public static oncanplayFn onunload { get; public set; }
    public static oncanplayFn onvolumechange { get; public set; }
    public static oncanplayFn onvrdisplayactivate { get; public set; }
    public static oncanplayFn onvrdisplayblur { get; public set; }
    public static oncanplayFn onvrdisplayconnect { get; public set; }
    public static oncanplayFn onvrdisplaydeactivate { get; public set; }
    public static oncanplayFn onvrdisplaydisconnect { get; public set; }
    public static oncanplayFn onvrdisplayfocus { get; public set; }
    public static oncanplayFn onvrdisplaypointerrestricted { get; public set; }
    public static oncanplayFn onvrdisplaypointerunrestricted { get; public set; }
    public static oncanplayFn onvrdisplaypresentchange { get; public set; }
    public static oncanplayFn onwaiting { get; public set; }
    public static object opener { get; public set; }
    public static Union`2<string, double> orientation { get; public set; }
    public static double outerHeight { get; public set; }
    public static double outerWidth { get; public set; }
    public static double pageXOffset { get; public set; }
    public static double pageYOffset { get; public set; }
    public static Window parent { get; public set; }
    public static Performance performance { get; public set; }
    public static BarProp personalbar { get; public set; }
    public static Screen screen { get; public set; }
    public static double screenLeft { get; public set; }
    public static double screenTop { get; public set; }
    public static double screenX { get; public set; }
    public static double screenY { get; public set; }
    public static double scrollX { get; public set; }
    public static double scrollY { get; public set; }
    public static BarProp scrollbars { get; public set; }
    public static Window self { get; public set; }
    public static SpeechSynthesis speechSynthesis { get; public set; }
    public static string status { get; public set; }
    public static BarProp statusbar { get; public set; }
    public static StyleMedia styleMedia { get; public set; }
    public static BarProp toolbar { get; public set; }
    public static Window top { get; public set; }
    public static Window window { get; public set; }
    public static Storage sessionStorage { get; public set; }
    public static Storage localStorage { get; public set; }
    public static Console console { get; public set; }
    public static oncontextmenuFn onpointercancel { get; public set; }
    public static oncontextmenuFn onpointerdown { get; public set; }
    public static oncontextmenuFn onpointerenter { get; public set; }
    public static oncontextmenuFn onpointerleave { get; public set; }
    public static oncontextmenuFn onpointermove { get; public set; }
    public static oncontextmenuFn onpointerout { get; public set; }
    public static oncontextmenuFn onpointerover { get; public set; }
    public static oncontextmenuFn onpointerup { get; public set; }
    public static onmousewheelFn onwheel { get; public set; }
    public static IDBFactory indexedDB { get; public set; }
    public static ANGLE_instanced_arraysTypeConfig get_ANGLE_instanced_arraysType();
    public static void set_ANGLE_instanced_arraysType(ANGLE_instanced_arraysTypeConfig value);
    public static AbortControllerTypeConfig get_AbortControllerType();
    public static void set_AbortControllerType(AbortControllerTypeConfig value);
    public static AbortSignalTypeConfig get_AbortSignalType();
    public static void set_AbortSignalType(AbortSignalTypeConfig value);
    public static AnalyserNodeTypeConfig get_AnalyserNodeType();
    public static void set_AnalyserNodeType(AnalyserNodeTypeConfig value);
    public static AnimationTypeConfig get_AnimationType();
    public static void set_AnimationType(AnimationTypeConfig value);
    public static AnimationEventTypeConfig get_AnimationEventType();
    public static void set_AnimationEventType(AnimationEventTypeConfig value);
    public static AnimationPlaybackEventTypeConfig get_AnimationPlaybackEventType();
    public static void set_AnimationPlaybackEventType(AnimationPlaybackEventTypeConfig value);
    public static ApplicationCacheTypeConfig get_ApplicationCacheType();
    public static void set_ApplicationCacheType(ApplicationCacheTypeConfig value);
    public static AttrTypeConfig get_AttrType();
    public static void set_AttrType(AttrTypeConfig value);
    public static AudioBufferTypeConfig get_AudioBufferType();
    public static void set_AudioBufferType(AudioBufferTypeConfig value);
    public static AudioBufferSourceNodeTypeConfig get_AudioBufferSourceNodeType();
    public static void set_AudioBufferSourceNodeType(AudioBufferSourceNodeTypeConfig value);
    public static AudioContextTypeConfig get_AudioContextType();
    public static void set_AudioContextType(AudioContextTypeConfig value);
    public static AudioDestinationNodeTypeConfig get_AudioDestinationNodeType();
    public static void set_AudioDestinationNodeType(AudioDestinationNodeTypeConfig value);
    public static AudioListenerTypeConfig get_AudioListenerType();
    public static void set_AudioListenerType(AudioListenerTypeConfig value);
    public static AudioNodeTypeConfig get_AudioNodeType();
    public static void set_AudioNodeType(AudioNodeTypeConfig value);
    public static AudioParamTypeConfig get_AudioParamType();
    public static void set_AudioParamType(AudioParamTypeConfig value);
    public static AudioProcessingEventTypeConfig get_AudioProcessingEventType();
    public static void set_AudioProcessingEventType(AudioProcessingEventTypeConfig value);
    public static AudioTrackTypeConfig get_AudioTrackType();
    public static void set_AudioTrackType(AudioTrackTypeConfig value);
    public static AudioTrackListTypeConfig get_AudioTrackListType();
    public static void set_AudioTrackListType(AudioTrackListTypeConfig value);
    public static BarPropTypeConfig get_BarPropType();
    public static void set_BarPropType(BarPropTypeConfig value);
    public static BeforeUnloadEventTypeConfig get_BeforeUnloadEventType();
    public static void set_BeforeUnloadEventType(BeforeUnloadEventTypeConfig value);
    public static BhxBrowserTypeConfig get_BhxBrowserType();
    public static void set_BhxBrowserType(BhxBrowserTypeConfig value);
    public static BiquadFilterNodeTypeConfig get_BiquadFilterNodeType();
    public static void set_BiquadFilterNodeType(BiquadFilterNodeTypeConfig value);
    public static BlobTypeConfig get_BlobType();
    public static void set_BlobType(BlobTypeConfig value);
    public static BroadcastChannelTypeConfig get_BroadcastChannelType();
    public static void set_BroadcastChannelType(BroadcastChannelTypeConfig value);
    public static ByteLengthQueuingStrategyTypeConfig get_ByteLengthQueuingStrategyType();
    public static void set_ByteLengthQueuingStrategyType(ByteLengthQueuingStrategyTypeConfig value);
    public static CDATASectionTypeConfig get_CDATASectionType();
    public static void set_CDATASectionType(CDATASectionTypeConfig value);
    public static CSS get_CSSInstance();
    public static void set_CSSInstance(CSS value);
    public static CSSConditionRuleTypeConfig get_CSSConditionRuleType();
    public static void set_CSSConditionRuleType(CSSConditionRuleTypeConfig value);
    public static CSSFontFaceRuleTypeConfig get_CSSFontFaceRuleType();
    public static void set_CSSFontFaceRuleType(CSSFontFaceRuleTypeConfig value);
    public static CSSGroupingRuleTypeConfig get_CSSGroupingRuleType();
    public static void set_CSSGroupingRuleType(CSSGroupingRuleTypeConfig value);
    public static CSSImportRuleTypeConfig get_CSSImportRuleType();
    public static void set_CSSImportRuleType(CSSImportRuleTypeConfig value);
    public static CSSKeyframeRuleTypeConfig get_CSSKeyframeRuleType();
    public static void set_CSSKeyframeRuleType(CSSKeyframeRuleTypeConfig value);
    public static CSSKeyframesRuleTypeConfig get_CSSKeyframesRuleType();
    public static void set_CSSKeyframesRuleType(CSSKeyframesRuleTypeConfig value);
    public static CSSMediaRuleTypeConfig get_CSSMediaRuleType();
    public static void set_CSSMediaRuleType(CSSMediaRuleTypeConfig value);
    public static CSSNamespaceRuleTypeConfig get_CSSNamespaceRuleType();
    public static void set_CSSNamespaceRuleType(CSSNamespaceRuleTypeConfig value);
    public static CSSPageRuleTypeConfig get_CSSPageRuleType();
    public static void set_CSSPageRuleType(CSSPageRuleTypeConfig value);
    public static CSSRuleTypeConfig get_CSSRuleType();
    public static void set_CSSRuleType(CSSRuleTypeConfig value);
    public static CSSRuleListTypeConfig get_CSSRuleListType();
    public static void set_CSSRuleListType(CSSRuleListTypeConfig value);
    public static CSSStyleDeclarationTypeConfig get_CSSStyleDeclarationType();
    public static void set_CSSStyleDeclarationType(CSSStyleDeclarationTypeConfig value);
    public static CSSStyleRuleTypeConfig get_CSSStyleRuleType();
    public static void set_CSSStyleRuleType(CSSStyleRuleTypeConfig value);
    public static CSSStyleSheetTypeConfig get_CSSStyleSheetType();
    public static void set_CSSStyleSheetType(CSSStyleSheetTypeConfig value);
    public static CSSSupportsRuleTypeConfig get_CSSSupportsRuleType();
    public static void set_CSSSupportsRuleType(CSSSupportsRuleTypeConfig value);
    public static CacheTypeConfig get_CacheType();
    public static void set_CacheType(CacheTypeConfig value);
    public static CacheStorageTypeConfig get_CacheStorageType();
    public static void set_CacheStorageType(CacheStorageTypeConfig value);
    public static CanvasGradientTypeConfig get_CanvasGradientType();
    public static void set_CanvasGradientType(CanvasGradientTypeConfig value);
    public static CanvasPatternTypeConfig get_CanvasPatternType();
    public static void set_CanvasPatternType(CanvasPatternTypeConfig value);
    public static CanvasRenderingContext2DTypeConfig get_CanvasRenderingContext2DType();
    public static void set_CanvasRenderingContext2DType(CanvasRenderingContext2DTypeConfig value);
    public static ChannelMergerNodeTypeConfig get_ChannelMergerNodeType();
    public static void set_ChannelMergerNodeType(ChannelMergerNodeTypeConfig value);
    public static ChannelSplitterNodeTypeConfig get_ChannelSplitterNodeType();
    public static void set_ChannelSplitterNodeType(ChannelSplitterNodeTypeConfig value);
    public static CharacterDataTypeConfig get_CharacterDataType();
    public static void set_CharacterDataType(CharacterDataTypeConfig value);
    public static ClientRectTypeConfig get_ClientRectType();
    public static void set_ClientRectType(ClientRectTypeConfig value);
    public static ClientRectListTypeConfig get_ClientRectListType();
    public static void set_ClientRectListType(ClientRectListTypeConfig value);
    public static ClipboardEventTypeConfig get_ClipboardEventType();
    public static void set_ClipboardEventType(ClipboardEventTypeConfig value);
    public static CloseEventTypeConfig get_CloseEventType();
    public static void set_CloseEventType(CloseEventTypeConfig value);
    public static CommentTypeConfig get_CommentType();
    public static void set_CommentType(CommentTypeConfig value);
    public static CompositionEventTypeConfig get_CompositionEventType();
    public static void set_CompositionEventType(CompositionEventTypeConfig value);
    public static ConsoleTypeConfig get_ConsoleType();
    public static void set_ConsoleType(ConsoleTypeConfig value);
    public static ContentScriptGlobalScopeTypeConfig get_ContentScriptGlobalScopeType();
    public static void set_ContentScriptGlobalScopeType(ContentScriptGlobalScopeTypeConfig value);
    public static ConvolverNodeTypeConfig get_ConvolverNodeType();
    public static void set_ConvolverNodeType(ConvolverNodeTypeConfig value);
    public static CoordinatesTypeConfig get_CoordinatesType();
    public static void set_CoordinatesType(CoordinatesTypeConfig value);
    public static CountQueuingStrategyTypeConfig get_CountQueuingStrategyType();
    public static void set_CountQueuingStrategyType(CountQueuingStrategyTypeConfig value);
    public static CryptoTypeConfig get_CryptoType();
    public static void set_CryptoType(CryptoTypeConfig value);
    public static CryptoKeyTypeConfig get_CryptoKeyType();
    public static void set_CryptoKeyType(CryptoKeyTypeConfig value);
    public static CryptoKeyPairTypeConfig get_CryptoKeyPairType();
    public static void set_CryptoKeyPairType(CryptoKeyPairTypeConfig value);
    public static CustomEvent2Config get_CustomEvent2();
    public static void set_CustomEvent2(CustomEvent2Config value);
    public static DOMErrorTypeConfig get_DOMErrorType();
    public static void set_DOMErrorType(DOMErrorTypeConfig value);
    public static DOMExceptionTypeConfig get_DOMExceptionType();
    public static void set_DOMExceptionType(DOMExceptionTypeConfig value);
    public static DOMImplementationTypeConfig get_DOMImplementationType();
    public static void set_DOMImplementationType(DOMImplementationTypeConfig value);
    public static DOMParserTypeConfig get_DOMParserType();
    public static void set_DOMParserType(DOMParserTypeConfig value);
    public static DOMRectTypeConfig get_DOMRectType();
    public static void set_DOMRectType(DOMRectTypeConfig value);
    public static DOMRectReadOnlyTypeConfig get_DOMRectReadOnlyType();
    public static void set_DOMRectReadOnlyType(DOMRectReadOnlyTypeConfig value);
    public static DOMSettableTokenListTypeConfig get_DOMSettableTokenListType();
    public static void set_DOMSettableTokenListType(DOMSettableTokenListTypeConfig value);
    public static DOMStringListTypeConfig get_DOMStringListType();
    public static void set_DOMStringListType(DOMStringListTypeConfig value);
    public static DOMStringMapTypeConfig get_DOMStringMapType();
    public static void set_DOMStringMapType(DOMStringMapTypeConfig value);
    public static DOMTokenListTypeConfig get_DOMTokenListType();
    public static void set_DOMTokenListType(DOMTokenListTypeConfig value);
    public static DataCueTypeConfig get_DataCueType();
    public static void set_DataCueType(DataCueTypeConfig value);
    public static DataTransferTypeConfig get_DataTransferType();
    public static void set_DataTransferType(DataTransferTypeConfig value);
    public static DataTransferItemTypeConfig get_DataTransferItemType();
    public static void set_DataTransferItemType(DataTransferItemTypeConfig value);
    public static DataTransferItemListTypeConfig get_DataTransferItemListType();
    public static void set_DataTransferItemListType(DataTransferItemListTypeConfig value);
    public static DeferredPermissionRequestTypeConfig get_DeferredPermissionRequestType();
    public static void set_DeferredPermissionRequestType(DeferredPermissionRequestTypeConfig value);
    public static DelayNodeTypeConfig get_DelayNodeType();
    public static void set_DelayNodeType(DelayNodeTypeConfig value);
    public static DeviceAccelerationTypeConfig get_DeviceAccelerationType();
    public static void set_DeviceAccelerationType(DeviceAccelerationTypeConfig value);
    public static DeviceLightEventTypeConfig get_DeviceLightEventType();
    public static void set_DeviceLightEventType(DeviceLightEventTypeConfig value);
    public static DeviceMotionEventTypeConfig get_DeviceMotionEventType();
    public static void set_DeviceMotionEventType(DeviceMotionEventTypeConfig value);
    public static DeviceOrientationEventTypeConfig get_DeviceOrientationEventType();
    public static void set_DeviceOrientationEventType(DeviceOrientationEventTypeConfig value);
    public static DeviceRotationRateTypeConfig get_DeviceRotationRateType();
    public static void set_DeviceRotationRateType(DeviceRotationRateTypeConfig value);
    public static DocumentType2Config get_DocumentType2();
    public static void set_DocumentType2(DocumentType2Config value);
    public static DocumentFragmentTypeConfig get_DocumentFragmentType();
    public static void set_DocumentFragmentType(DocumentFragmentTypeConfig value);
    public static DocumentTypeTypeConfig get_DocumentTypeType();
    public static void set_DocumentTypeType(DocumentTypeTypeConfig value);
    public static DragEventTypeConfig get_DragEventType();
    public static void set_DragEventType(DragEventTypeConfig value);
    public static DynamicsCompressorNodeTypeConfig get_DynamicsCompressorNodeType();
    public static void set_DynamicsCompressorNodeType(DynamicsCompressorNodeTypeConfig value);
    public static EXT_texture_filter_anisotropicTypeConfig get_EXT_texture_filter_anisotropicType();
    public static void set_EXT_texture_filter_anisotropicType(EXT_texture_filter_anisotropicTypeConfig value);
    public static ElementTypeConfig get_ElementType();
    public static void set_ElementType(ElementTypeConfig value);
    public static ErrorEventTypeConfig get_ErrorEventType();
    public static void set_ErrorEventType(ErrorEventTypeConfig value);
    public static EventTypeConfig get_EventType();
    public static void set_EventType(EventTypeConfig value);
    public static EventSourceTypeConfig get_EventSourceType();
    public static void set_EventSourceType(EventSourceTypeConfig value);
    public static EventTargetTypeConfig get_EventTargetType();
    public static void set_EventTargetType(EventTargetTypeConfig value);
    public static ExtensionScriptApisTypeConfig get_ExtensionScriptApisType();
    public static void set_ExtensionScriptApisType(ExtensionScriptApisTypeConfig value);
    public static ExternalTypeConfig get_ExternalType();
    public static void set_ExternalType(ExternalTypeConfig value);
    public static FileTypeConfig get_FileType();
    public static void set_FileType(FileTypeConfig value);
    public static FileListTypeConfig get_FileListType();
    public static void set_FileListType(FileListTypeConfig value);
    public static FileReaderTypeConfig get_FileReaderType();
    public static void set_FileReaderType(FileReaderTypeConfig value);
    public static FocusEventTypeConfig get_FocusEventType();
    public static void set_FocusEventType(FocusEventTypeConfig value);
    public static FocusNavigationEventTypeConfig get_FocusNavigationEventType();
    public static void set_FocusNavigationEventType(FocusNavigationEventTypeConfig value);
    public static FormDataTypeConfig get_FormDataType();
    public static void set_FormDataType(FormDataTypeConfig value);
    public static GainNodeTypeConfig get_GainNodeType();
    public static void set_GainNodeType(GainNodeTypeConfig value);
    public static GamepadTypeConfig get_GamepadType();
    public static void set_GamepadType(GamepadTypeConfig value);
    public static GamepadButtonTypeConfig get_GamepadButtonType();
    public static void set_GamepadButtonType(GamepadButtonTypeConfig value);
    public static GamepadEventTypeConfig get_GamepadEventType();
    public static void set_GamepadEventType(GamepadEventTypeConfig value);
    public static GamepadHapticActuatorType2Config get_GamepadHapticActuatorType2();
    public static void set_GamepadHapticActuatorType2(GamepadHapticActuatorType2Config value);
    public static GamepadPoseTypeConfig get_GamepadPoseType();
    public static void set_GamepadPoseType(GamepadPoseTypeConfig value);
    public static GeolocationTypeConfig get_GeolocationType();
    public static void set_GeolocationType(GeolocationTypeConfig value);
    public static HTMLAllCollectionTypeConfig get_HTMLAllCollectionType();
    public static void set_HTMLAllCollectionType(HTMLAllCollectionTypeConfig value);
    public static HTMLAnchorElementTypeConfig get_HTMLAnchorElementType();
    public static void set_HTMLAnchorElementType(HTMLAnchorElementTypeConfig value);
    public static HTMLAppletElementTypeConfig get_HTMLAppletElementType();
    public static void set_HTMLAppletElementType(HTMLAppletElementTypeConfig value);
    public static HTMLAreaElementTypeConfig get_HTMLAreaElementType();
    public static void set_HTMLAreaElementType(HTMLAreaElementTypeConfig value);
    public static HTMLAreasCollectionTypeConfig get_HTMLAreasCollectionType();
    public static void set_HTMLAreasCollectionType(HTMLAreasCollectionTypeConfig value);
    public static HTMLAudioElementTypeConfig get_HTMLAudioElementType();
    public static void set_HTMLAudioElementType(HTMLAudioElementTypeConfig value);
    public static HTMLBRElementTypeConfig get_HTMLBRElementType();
    public static void set_HTMLBRElementType(HTMLBRElementTypeConfig value);
    public static HTMLBaseElementTypeConfig get_HTMLBaseElementType();
    public static void set_HTMLBaseElementType(HTMLBaseElementTypeConfig value);
    public static HTMLBaseFontElementTypeConfig get_HTMLBaseFontElementType();
    public static void set_HTMLBaseFontElementType(HTMLBaseFontElementTypeConfig value);
    public static HTMLBodyElementTypeConfig get_HTMLBodyElementType();
    public static void set_HTMLBodyElementType(HTMLBodyElementTypeConfig value);
    public static HTMLButtonElementTypeConfig get_HTMLButtonElementType();
    public static void set_HTMLButtonElementType(HTMLButtonElementTypeConfig value);
    public static HTMLCanvasElementTypeConfig get_HTMLCanvasElementType();
    public static void set_HTMLCanvasElementType(HTMLCanvasElementTypeConfig value);
    public static HTMLCollectionTypeConfig get_HTMLCollectionType();
    public static void set_HTMLCollectionType(HTMLCollectionTypeConfig value);
    public static HTMLDListElementTypeConfig get_HTMLDListElementType();
    public static void set_HTMLDListElementType(HTMLDListElementTypeConfig value);
    public static HTMLDataElementTypeConfig get_HTMLDataElementType();
    public static void set_HTMLDataElementType(HTMLDataElementTypeConfig value);
    public static HTMLDataListElementTypeConfig get_HTMLDataListElementType();
    public static void set_HTMLDataListElementType(HTMLDataListElementTypeConfig value);
    public static HTMLDetailsElementTypeConfig get_HTMLDetailsElementType();
    public static void set_HTMLDetailsElementType(HTMLDetailsElementTypeConfig value);
    public static HTMLDialogElementTypeConfig get_HTMLDialogElementType();
    public static void set_HTMLDialogElementType(HTMLDialogElementTypeConfig value);
    public static HTMLDirectoryElementTypeConfig get_HTMLDirectoryElementType();
    public static void set_HTMLDirectoryElementType(HTMLDirectoryElementTypeConfig value);
    public static HTMLDivElementTypeConfig get_HTMLDivElementType();
    public static void set_HTMLDivElementType(HTMLDivElementTypeConfig value);
    public static HTMLDocumentTypeConfig get_HTMLDocumentType();
    public static void set_HTMLDocumentType(HTMLDocumentTypeConfig value);
    public static HTMLElementTypeConfig get_HTMLElementType();
    public static void set_HTMLElementType(HTMLElementTypeConfig value);
    public static HTMLEmbedElementTypeConfig get_HTMLEmbedElementType();
    public static void set_HTMLEmbedElementType(HTMLEmbedElementTypeConfig value);
    public static HTMLFieldSetElementTypeConfig get_HTMLFieldSetElementType();
    public static void set_HTMLFieldSetElementType(HTMLFieldSetElementTypeConfig value);
    public static HTMLFontElementTypeConfig get_HTMLFontElementType();
    public static void set_HTMLFontElementType(HTMLFontElementTypeConfig value);
    public static HTMLFormControlsCollectionTypeConfig get_HTMLFormControlsCollectionType();
    public static void set_HTMLFormControlsCollectionType(HTMLFormControlsCollectionTypeConfig value);
    public static HTMLFormElementTypeConfig get_HTMLFormElementType();
    public static void set_HTMLFormElementType(HTMLFormElementTypeConfig value);
    public static HTMLFrameElementTypeConfig get_HTMLFrameElementType();
    public static void set_HTMLFrameElementType(HTMLFrameElementTypeConfig value);
    public static HTMLFrameSetElementTypeConfig get_HTMLFrameSetElementType();
    public static void set_HTMLFrameSetElementType(HTMLFrameSetElementTypeConfig value);
    public static HTMLHRElementTypeConfig get_HTMLHRElementType();
    public static void set_HTMLHRElementType(HTMLHRElementTypeConfig value);
    public static HTMLHeadElementTypeConfig get_HTMLHeadElementType();
    public static void set_HTMLHeadElementType(HTMLHeadElementTypeConfig value);
    public static HTMLHeadingElementTypeConfig get_HTMLHeadingElementType();
    public static void set_HTMLHeadingElementType(HTMLHeadingElementTypeConfig value);
    public static HTMLHtmlElementTypeConfig get_HTMLHtmlElementType();
    public static void set_HTMLHtmlElementType(HTMLHtmlElementTypeConfig value);
    public static HTMLIFrameElementTypeConfig get_HTMLIFrameElementType();
    public static void set_HTMLIFrameElementType(HTMLIFrameElementTypeConfig value);
    public static HTMLImageElementTypeConfig get_HTMLImageElementType();
    public static void set_HTMLImageElementType(HTMLImageElementTypeConfig value);
    public static HTMLInputElementTypeConfig get_HTMLInputElementType();
    public static void set_HTMLInputElementType(HTMLInputElementTypeConfig value);
    public static HTMLLIElementTypeConfig get_HTMLLIElementType();
    public static void set_HTMLLIElementType(HTMLLIElementTypeConfig value);
    public static HTMLLabelElementTypeConfig get_HTMLLabelElementType();
    public static void set_HTMLLabelElementType(HTMLLabelElementTypeConfig value);
    public static HTMLLegendElementTypeConfig get_HTMLLegendElementType();
    public static void set_HTMLLegendElementType(HTMLLegendElementTypeConfig value);
    public static HTMLLinkElementTypeConfig get_HTMLLinkElementType();
    public static void set_HTMLLinkElementType(HTMLLinkElementTypeConfig value);
    public static HTMLMainElementTypeConfig get_HTMLMainElementType();
    public static void set_HTMLMainElementType(HTMLMainElementTypeConfig value);
    public static HTMLMapElementTypeConfig get_HTMLMapElementType();
    public static void set_HTMLMapElementType(HTMLMapElementTypeConfig value);
    public static HTMLMarqueeElementTypeConfig get_HTMLMarqueeElementType();
    public static void set_HTMLMarqueeElementType(HTMLMarqueeElementTypeConfig value);
    public static HTMLMediaElementTypeConfig get_HTMLMediaElementType();
    public static void set_HTMLMediaElementType(HTMLMediaElementTypeConfig value);
    public static HTMLMenuElementTypeConfig get_HTMLMenuElementType();
    public static void set_HTMLMenuElementType(HTMLMenuElementTypeConfig value);
    public static HTMLMetaElementTypeConfig get_HTMLMetaElementType();
    public static void set_HTMLMetaElementType(HTMLMetaElementTypeConfig value);
    public static HTMLMeterElementTypeConfig get_HTMLMeterElementType();
    public static void set_HTMLMeterElementType(HTMLMeterElementTypeConfig value);
    public static HTMLModElementTypeConfig get_HTMLModElementType();
    public static void set_HTMLModElementType(HTMLModElementTypeConfig value);
    public static HTMLOListElementTypeConfig get_HTMLOListElementType();
    public static void set_HTMLOListElementType(HTMLOListElementTypeConfig value);
    public static HTMLObjectElementTypeConfig get_HTMLObjectElementType();
    public static void set_HTMLObjectElementType(HTMLObjectElementTypeConfig value);
    public static HTMLOptGroupElementTypeConfig get_HTMLOptGroupElementType();
    public static void set_HTMLOptGroupElementType(HTMLOptGroupElementTypeConfig value);
    public static HTMLOptionElementTypeConfig get_HTMLOptionElementType();
    public static void set_HTMLOptionElementType(HTMLOptionElementTypeConfig value);
    public static HTMLOptionsCollectionTypeConfig get_HTMLOptionsCollectionType();
    public static void set_HTMLOptionsCollectionType(HTMLOptionsCollectionTypeConfig value);
    public static HTMLOutputElementTypeConfig get_HTMLOutputElementType();
    public static void set_HTMLOutputElementType(HTMLOutputElementTypeConfig value);
    public static HTMLParagraphElementTypeConfig get_HTMLParagraphElementType();
    public static void set_HTMLParagraphElementType(HTMLParagraphElementTypeConfig value);
    public static HTMLParamElementTypeConfig get_HTMLParamElementType();
    public static void set_HTMLParamElementType(HTMLParamElementTypeConfig value);
    public static HTMLPictureElementTypeConfig get_HTMLPictureElementType();
    public static void set_HTMLPictureElementType(HTMLPictureElementTypeConfig value);
    public static HTMLPreElementTypeConfig get_HTMLPreElementType();
    public static void set_HTMLPreElementType(HTMLPreElementTypeConfig value);
    public static HTMLProgressElementTypeConfig get_HTMLProgressElementType();
    public static void set_HTMLProgressElementType(HTMLProgressElementTypeConfig value);
    public static HTMLQuoteElementTypeConfig get_HTMLQuoteElementType();
    public static void set_HTMLQuoteElementType(HTMLQuoteElementTypeConfig value);
    public static HTMLScriptElementTypeConfig get_HTMLScriptElementType();
    public static void set_HTMLScriptElementType(HTMLScriptElementTypeConfig value);
    public static HTMLSelectElementTypeConfig get_HTMLSelectElementType();
    public static void set_HTMLSelectElementType(HTMLSelectElementTypeConfig value);
    public static HTMLSourceElementTypeConfig get_HTMLSourceElementType();
    public static void set_HTMLSourceElementType(HTMLSourceElementTypeConfig value);
    public static HTMLSpanElementTypeConfig get_HTMLSpanElementType();
    public static void set_HTMLSpanElementType(HTMLSpanElementTypeConfig value);
    public static HTMLStyleElementTypeConfig get_HTMLStyleElementType();
    public static void set_HTMLStyleElementType(HTMLStyleElementTypeConfig value);
    public static HTMLSummaryElementTypeConfig get_HTMLSummaryElementType();
    public static void set_HTMLSummaryElementType(HTMLSummaryElementTypeConfig value);
    public static HTMLTableCaptionElementTypeConfig get_HTMLTableCaptionElementType();
    public static void set_HTMLTableCaptionElementType(HTMLTableCaptionElementTypeConfig value);
    public static HTMLTableCellElementTypeConfig get_HTMLTableCellElementType();
    public static void set_HTMLTableCellElementType(HTMLTableCellElementTypeConfig value);
    public static HTMLTableColElementTypeConfig get_HTMLTableColElementType();
    public static void set_HTMLTableColElementType(HTMLTableColElementTypeConfig value);
    public static HTMLTableDataCellElementTypeConfig get_HTMLTableDataCellElementType();
    public static void set_HTMLTableDataCellElementType(HTMLTableDataCellElementTypeConfig value);
    public static HTMLTableElementTypeConfig get_HTMLTableElementType();
    public static void set_HTMLTableElementType(HTMLTableElementTypeConfig value);
    public static HTMLTableHeaderCellElementTypeConfig get_HTMLTableHeaderCellElementType();
    public static void set_HTMLTableHeaderCellElementType(HTMLTableHeaderCellElementTypeConfig value);
    public static HTMLTableRowElementTypeConfig get_HTMLTableRowElementType();
    public static void set_HTMLTableRowElementType(HTMLTableRowElementTypeConfig value);
    public static HTMLTableSectionElementTypeConfig get_HTMLTableSectionElementType();
    public static void set_HTMLTableSectionElementType(HTMLTableSectionElementTypeConfig value);
    public static HTMLTemplateElementTypeConfig get_HTMLTemplateElementType();
    public static void set_HTMLTemplateElementType(HTMLTemplateElementTypeConfig value);
    public static HTMLTextAreaElementTypeConfig get_HTMLTextAreaElementType();
    public static void set_HTMLTextAreaElementType(HTMLTextAreaElementTypeConfig value);
    public static HTMLTimeElementTypeConfig get_HTMLTimeElementType();
    public static void set_HTMLTimeElementType(HTMLTimeElementTypeConfig value);
    public static HTMLTitleElementTypeConfig get_HTMLTitleElementType();
    public static void set_HTMLTitleElementType(HTMLTitleElementTypeConfig value);
    public static HTMLTrackElementTypeConfig get_HTMLTrackElementType();
    public static void set_HTMLTrackElementType(HTMLTrackElementTypeConfig value);
    public static HTMLUListElementTypeConfig get_HTMLUListElementType();
    public static void set_HTMLUListElementType(HTMLUListElementTypeConfig value);
    public static HTMLUnknownElementTypeConfig get_HTMLUnknownElementType();
    public static void set_HTMLUnknownElementType(HTMLUnknownElementTypeConfig value);
    public static HTMLVideoElementTypeConfig get_HTMLVideoElementType();
    public static void set_HTMLVideoElementType(HTMLVideoElementTypeConfig value);
    public static HTMLegendElementTypeConfig get_HTMLegendElementType();
    public static void set_HTMLegendElementType(HTMLegendElementTypeConfig value);
    public static HashChangeEventTypeConfig get_HashChangeEventType();
    public static void set_HashChangeEventType(HashChangeEventTypeConfig value);
    public static HeadersTypeConfig get_HeadersType();
    public static void set_HeadersType(HeadersTypeConfig value);
    public static HistoryTypeConfig get_HistoryType();
    public static void set_HistoryType(HistoryTypeConfig value);
    public static IDBCursorTypeConfig get_IDBCursorType();
    public static void set_IDBCursorType(IDBCursorTypeConfig value);
    public static IDBCursorWithValueTypeConfig get_IDBCursorWithValueType();
    public static void set_IDBCursorWithValueType(IDBCursorWithValueTypeConfig value);
    public static IDBDatabaseTypeConfig get_IDBDatabaseType();
    public static void set_IDBDatabaseType(IDBDatabaseTypeConfig value);
    public static IDBFactoryTypeConfig get_IDBFactoryType();
    public static void set_IDBFactoryType(IDBFactoryTypeConfig value);
    public static IDBIndexTypeConfig get_IDBIndexType();
    public static void set_IDBIndexType(IDBIndexTypeConfig value);
    public static IDBKeyRangeTypeConfig get_IDBKeyRangeType();
    public static void set_IDBKeyRangeType(IDBKeyRangeTypeConfig value);
    public static IDBObjectStoreTypeConfig get_IDBObjectStoreType();
    public static void set_IDBObjectStoreType(IDBObjectStoreTypeConfig value);
    public static IDBOpenDBRequestTypeConfig get_IDBOpenDBRequestType();
    public static void set_IDBOpenDBRequestType(IDBOpenDBRequestTypeConfig value);
    public static IDBRequestTypeConfig get_IDBRequestType();
    public static void set_IDBRequestType(IDBRequestTypeConfig value);
    public static IDBTransactionTypeConfig get_IDBTransactionType();
    public static void set_IDBTransactionType(IDBTransactionTypeConfig value);
    public static IDBVersionChangeEventTypeConfig get_IDBVersionChangeEventType();
    public static void set_IDBVersionChangeEventType(IDBVersionChangeEventTypeConfig value);
    public static IIRFilterNodeTypeConfig get_IIRFilterNodeType();
    public static void set_IIRFilterNodeType(IIRFilterNodeTypeConfig value);
    public static ImageDataTypeConfig get_ImageDataType();
    public static void set_ImageDataType(ImageDataTypeConfig value);
    public static IntersectionObserverTypeConfig get_IntersectionObserverType();
    public static void set_IntersectionObserverType(IntersectionObserverTypeConfig value);
    public static IntersectionObserverEntryTypeConfig get_IntersectionObserverEntryType();
    public static void set_IntersectionObserverEntryType(IntersectionObserverEntryTypeConfig value);
    public static KeyboardEventTypeConfig get_KeyboardEventType();
    public static void set_KeyboardEventType(KeyboardEventTypeConfig value);
    public static ListeningStateChangedEventTypeConfig get_ListeningStateChangedEventType();
    public static void set_ListeningStateChangedEventType(ListeningStateChangedEventTypeConfig value);
    public static LocationTypeConfig get_LocationType();
    public static void set_LocationType(LocationTypeConfig value);
    public static MSAssertionTypeConfig get_MSAssertionType();
    public static void set_MSAssertionType(MSAssertionTypeConfig value);
    public static MSBlobBuilderTypeConfig get_MSBlobBuilderType();
    public static void set_MSBlobBuilderType(MSBlobBuilderTypeConfig value);
    public static MSCredentialsTypeConfig get_MSCredentialsType();
    public static void set_MSCredentialsType(MSCredentialsTypeConfig value);
    public static MSDCCEventTypeConfig get_MSDCCEventType();
    public static void set_MSDCCEventType(MSDCCEventTypeConfig value);
    public static MSDSHEventTypeConfig get_MSDSHEventType();
    public static void set_MSDSHEventType(MSDSHEventTypeConfig value);
    public static MSFIDOCredentialAssertionTypeConfig get_MSFIDOCredentialAssertionType();
    public static void set_MSFIDOCredentialAssertionType(MSFIDOCredentialAssertionTypeConfig value);
    public static MSFIDOSignatureTypeConfig get_MSFIDOSignatureType();
    public static void set_MSFIDOSignatureType(MSFIDOSignatureTypeConfig value);
    public static MSFIDOSignatureAssertionTypeConfig get_MSFIDOSignatureAssertionType();
    public static void set_MSFIDOSignatureAssertionType(MSFIDOSignatureAssertionTypeConfig value);
    public static MSGestureTypeConfig get_MSGestureType();
    public static void set_MSGestureType(MSGestureTypeConfig value);
    public static MSGestureEventTypeConfig get_MSGestureEventType();
    public static void set_MSGestureEventType(MSGestureEventTypeConfig value);
    public static MSGraphicsTrustTypeConfig get_MSGraphicsTrustType();
    public static void set_MSGraphicsTrustType(MSGraphicsTrustTypeConfig value);
    public static MSInputMethodContextTypeConfig get_MSInputMethodContextType();
    public static void set_MSInputMethodContextType(MSInputMethodContextTypeConfig value);
    public static MSMediaKeyErrorTypeConfig get_MSMediaKeyErrorType();
    public static void set_MSMediaKeyErrorType(MSMediaKeyErrorTypeConfig value);
    public static MSMediaKeyMessageEventTypeConfig get_MSMediaKeyMessageEventType();
    public static void set_MSMediaKeyMessageEventType(MSMediaKeyMessageEventTypeConfig value);
    public static MSMediaKeyNeededEventTypeConfig get_MSMediaKeyNeededEventType();
    public static void set_MSMediaKeyNeededEventType(MSMediaKeyNeededEventTypeConfig value);
    public static MSMediaKeySessionTypeConfig get_MSMediaKeySessionType();
    public static void set_MSMediaKeySessionType(MSMediaKeySessionTypeConfig value);
    public static MSMediaKeysTypeConfig get_MSMediaKeysType();
    public static void set_MSMediaKeysType(MSMediaKeysTypeConfig value);
    public static MSPointerEventTypeConfig get_MSPointerEventType();
    public static void set_MSPointerEventType(MSPointerEventTypeConfig value);
    public static MSStreamTypeConfig get_MSStreamType();
    public static void set_MSStreamType(MSStreamTypeConfig value);
    public static MSStreamReaderTypeConfig get_MSStreamReaderType();
    public static void set_MSStreamReaderType(MSStreamReaderTypeConfig value);
    public static MediaDeviceInfoTypeConfig get_MediaDeviceInfoType();
    public static void set_MediaDeviceInfoType(MediaDeviceInfoTypeConfig value);
    public static MediaDevicesTypeConfig get_MediaDevicesType();
    public static void set_MediaDevicesType(MediaDevicesTypeConfig value);
    public static MediaElementAudioSourceNodeTypeConfig get_MediaElementAudioSourceNodeType();
    public static void set_MediaElementAudioSourceNodeType(MediaElementAudioSourceNodeTypeConfig value);
    public static MediaEncryptedEventTypeConfig get_MediaEncryptedEventType();
    public static void set_MediaEncryptedEventType(MediaEncryptedEventTypeConfig value);
    public static MediaErrorTypeConfig get_MediaErrorType();
    public static void set_MediaErrorType(MediaErrorTypeConfig value);
    public static MediaKeyMessageEventTypeConfig get_MediaKeyMessageEventType();
    public static void set_MediaKeyMessageEventType(MediaKeyMessageEventTypeConfig value);
    public static MediaKeySessionType2Config get_MediaKeySessionType2();
    public static void set_MediaKeySessionType2(MediaKeySessionType2Config value);
    public static MediaKeyStatusMapTypeConfig get_MediaKeyStatusMapType();
    public static void set_MediaKeyStatusMapType(MediaKeyStatusMapTypeConfig value);
    public static MediaKeySystemAccessTypeConfig get_MediaKeySystemAccessType();
    public static void set_MediaKeySystemAccessType(MediaKeySystemAccessTypeConfig value);
    public static MediaKeysTypeConfig get_MediaKeysType();
    public static void set_MediaKeysType(MediaKeysTypeConfig value);
    public static MediaListTypeConfig get_MediaListType();
    public static void set_MediaListType(MediaListTypeConfig value);
    public static MediaQueryListTypeConfig get_MediaQueryListType();
    public static void set_MediaQueryListType(MediaQueryListTypeConfig value);
    public static MediaSourceTypeConfig get_MediaSourceType();
    public static void set_MediaSourceType(MediaSourceTypeConfig value);
    public static MediaStreamTypeConfig get_MediaStreamType();
    public static void set_MediaStreamType(MediaStreamTypeConfig value);
    public static MediaStreamAudioSourceNodeTypeConfig get_MediaStreamAudioSourceNodeType();
    public static void set_MediaStreamAudioSourceNodeType(MediaStreamAudioSourceNodeTypeConfig value);
    public static MediaStreamErrorTypeConfig get_MediaStreamErrorType();
    public static void set_MediaStreamErrorType(MediaStreamErrorTypeConfig value);
    public static MediaStreamErrorEventTypeConfig get_MediaStreamErrorEventType();
    public static void set_MediaStreamErrorEventType(MediaStreamErrorEventTypeConfig value);
    public static MediaStreamEventTypeConfig get_MediaStreamEventType();
    public static void set_MediaStreamEventType(MediaStreamEventTypeConfig value);
    public static MediaStreamTrackTypeConfig get_MediaStreamTrackType();
    public static void set_MediaStreamTrackType(MediaStreamTrackTypeConfig value);
    public static MediaStreamTrackEventTypeConfig get_MediaStreamTrackEventType();
    public static void set_MediaStreamTrackEventType(MediaStreamTrackEventTypeConfig value);
    public static MessageChannelTypeConfig get_MessageChannelType();
    public static void set_MessageChannelType(MessageChannelTypeConfig value);
    public static MessageEventTypeConfig get_MessageEventType();
    public static void set_MessageEventType(MessageEventTypeConfig value);
    public static MessagePortTypeConfig get_MessagePortType();
    public static void set_MessagePortType(MessagePortTypeConfig value);
    public static MimeTypeTypeConfig get_MimeTypeType();
    public static void set_MimeTypeType(MimeTypeTypeConfig value);
    public static MimeTypeArrayTypeConfig get_MimeTypeArrayType();
    public static void set_MimeTypeArrayType(MimeTypeArrayTypeConfig value);
    public static MouseEventTypeConfig get_MouseEventType();
    public static void set_MouseEventType(MouseEventTypeConfig value);
    public static MutationEventTypeConfig get_MutationEventType();
    public static void set_MutationEventType(MutationEventTypeConfig value);
    public static MutationObserverTypeConfig get_MutationObserverType();
    public static void set_MutationObserverType(MutationObserverTypeConfig value);
    public static MutationRecordType2Config get_MutationRecordType2();
    public static void set_MutationRecordType2(MutationRecordType2Config value);
    public static NamedNodeMapTypeConfig get_NamedNodeMapType();
    public static void set_NamedNodeMapType(NamedNodeMapTypeConfig value);
    public static NavigatorTypeConfig get_NavigatorType();
    public static void set_NavigatorType(NavigatorTypeConfig value);
    public static NodeTypeConfig get_NodeType();
    public static void set_NodeType(NodeTypeConfig value);
    public static NodeFilter2Config get_NodeFilter2();
    public static void set_NodeFilter2(NodeFilter2Config value);
    public static NodeIteratorTypeConfig get_NodeIteratorType();
    public static void set_NodeIteratorType(NodeIteratorTypeConfig value);
    public static NodeListTypeConfig get_NodeListType();
    public static void set_NodeListType(NodeListTypeConfig value);
    public static NotificationTypeConfig get_NotificationType();
    public static void set_NotificationType(NotificationTypeConfig value);
    public static OES_element_index_uintTypeConfig get_OES_element_index_uintType();
    public static void set_OES_element_index_uintType(OES_element_index_uintTypeConfig value);
    public static OES_standard_derivativesTypeConfig get_OES_standard_derivativesType();
    public static void set_OES_standard_derivativesType(OES_standard_derivativesTypeConfig value);
    public static OES_texture_floatTypeConfig get_OES_texture_floatType();
    public static void set_OES_texture_floatType(OES_texture_floatTypeConfig value);
    public static OES_texture_float_linearTypeConfig get_OES_texture_float_linearType();
    public static void set_OES_texture_float_linearType(OES_texture_float_linearTypeConfig value);
    public static OES_texture_half_floatTypeConfig get_OES_texture_half_floatType();
    public static void set_OES_texture_half_floatType(OES_texture_half_floatTypeConfig value);
    public static OES_texture_half_float_linearTypeConfig get_OES_texture_half_float_linearType();
    public static void set_OES_texture_half_float_linearType(OES_texture_half_float_linearTypeConfig value);
    public static OfflineAudioCompletionEventTypeConfig get_OfflineAudioCompletionEventType();
    public static void set_OfflineAudioCompletionEventType(OfflineAudioCompletionEventTypeConfig value);
    public static OfflineAudioContextTypeConfig get_OfflineAudioContextType();
    public static void set_OfflineAudioContextType(OfflineAudioContextTypeConfig value);
    public static OscillatorNodeTypeConfig get_OscillatorNodeType();
    public static void set_OscillatorNodeType(OscillatorNodeTypeConfig value);
    public static OverflowEventTypeConfig get_OverflowEventType();
    public static void set_OverflowEventType(OverflowEventTypeConfig value);
    public static PageTransitionEventTypeConfig get_PageTransitionEventType();
    public static void set_PageTransitionEventType(PageTransitionEventTypeConfig value);
    public static PannerNodeTypeConfig get_PannerNodeType();
    public static void set_PannerNodeType(PannerNodeTypeConfig value);
    public static Path2DTypeConfig get_Path2DType();
    public static void set_Path2DType(Path2DTypeConfig value);
    public static PaymentAddressTypeConfig get_PaymentAddressType();
    public static void set_PaymentAddressType(PaymentAddressTypeConfig value);
    public static PaymentRequestTypeConfig get_PaymentRequestType();
    public static void set_PaymentRequestType(PaymentRequestTypeConfig value);
    public static PaymentRequestUpdateEventTypeConfig get_PaymentRequestUpdateEventType();
    public static void set_PaymentRequestUpdateEventType(PaymentRequestUpdateEventTypeConfig value);
    public static PaymentResponseTypeConfig get_PaymentResponseType();
    public static void set_PaymentResponseType(PaymentResponseTypeConfig value);
    public static PerfWidgetExternalTypeConfig get_PerfWidgetExternalType();
    public static void set_PerfWidgetExternalType(PerfWidgetExternalTypeConfig value);
    public static PerformanceTypeConfig get_PerformanceType();
    public static void set_PerformanceType(PerformanceTypeConfig value);
    public static PerformanceEntryTypeConfig get_PerformanceEntryType();
    public static void set_PerformanceEntryType(PerformanceEntryTypeConfig value);
    public static PerformanceMarkTypeConfig get_PerformanceMarkType();
    public static void set_PerformanceMarkType(PerformanceMarkTypeConfig value);
    public static PerformanceMeasureTypeConfig get_PerformanceMeasureType();
    public static void set_PerformanceMeasureType(PerformanceMeasureTypeConfig value);
    public static PerformanceNavigationTypeConfig get_PerformanceNavigationType();
    public static void set_PerformanceNavigationType(PerformanceNavigationTypeConfig value);
    public static PerformanceNavigationTimingTypeConfig get_PerformanceNavigationTimingType();
    public static void set_PerformanceNavigationTimingType(PerformanceNavigationTimingTypeConfig value);
    public static PerformanceResourceTimingTypeConfig get_PerformanceResourceTimingType();
    public static void set_PerformanceResourceTimingType(PerformanceResourceTimingTypeConfig value);
    public static PerformanceTimingTypeConfig get_PerformanceTimingType();
    public static void set_PerformanceTimingType(PerformanceTimingTypeConfig value);
    public static PeriodicWaveTypeConfig get_PeriodicWaveType();
    public static void set_PeriodicWaveType(PeriodicWaveTypeConfig value);
    public static PermissionRequestTypeConfig get_PermissionRequestType();
    public static void set_PermissionRequestType(PermissionRequestTypeConfig value);
    public static PermissionRequestedEventTypeConfig get_PermissionRequestedEventType();
    public static void set_PermissionRequestedEventType(PermissionRequestedEventTypeConfig value);
    public static PluginTypeConfig get_PluginType();
    public static void set_PluginType(PluginTypeConfig value);
    public static PluginArrayTypeConfig get_PluginArrayType();
    public static void set_PluginArrayType(PluginArrayTypeConfig value);
    public static PointerEventTypeConfig get_PointerEventType();
    public static void set_PointerEventType(PointerEventTypeConfig value);
    public static PopStateEventTypeConfig get_PopStateEventType();
    public static void set_PopStateEventType(PopStateEventTypeConfig value);
    public static PositionTypeConfig get_PositionType();
    public static void set_PositionType(PositionTypeConfig value);
    public static PositionErrorTypeConfig get_PositionErrorType();
    public static void set_PositionErrorType(PositionErrorTypeConfig value);
    public static ProcessingInstructionTypeConfig get_ProcessingInstructionType();
    public static void set_ProcessingInstructionType(ProcessingInstructionTypeConfig value);
    public static ProgressEventTypeConfig get_ProgressEventType();
    public static void set_ProgressEventType(ProgressEventTypeConfig value);
    public static PushManagerTypeConfig get_PushManagerType();
    public static void set_PushManagerType(PushManagerTypeConfig value);
    public static PushSubscriptionTypeConfig get_PushSubscriptionType();
    public static void set_PushSubscriptionType(PushSubscriptionTypeConfig value);
    public static PushSubscriptionOptionsTypeConfig get_PushSubscriptionOptionsType();
    public static void set_PushSubscriptionOptionsType(PushSubscriptionOptionsTypeConfig value);
    public static RTCDTMFToneChangeEventTypeConfig get_RTCDTMFToneChangeEventType();
    public static void set_RTCDTMFToneChangeEventType(RTCDTMFToneChangeEventTypeConfig value);
    public static RTCDtlsTransportTypeConfig get_RTCDtlsTransportType();
    public static void set_RTCDtlsTransportType(RTCDtlsTransportTypeConfig value);
    public static RTCDtlsTransportStateChangedEventTypeConfig get_RTCDtlsTransportStateChangedEventType();
    public static void set_RTCDtlsTransportStateChangedEventType(RTCDtlsTransportStateChangedEventTypeConfig value);
    public static RTCDtmfSenderTypeConfig get_RTCDtmfSenderType();
    public static void set_RTCDtmfSenderType(RTCDtmfSenderTypeConfig value);
    public static RTCIceCandidateType2Config get_RTCIceCandidateType2();
    public static void set_RTCIceCandidateType2(RTCIceCandidateType2Config value);
    public static RTCIceCandidatePairChangedEventTypeConfig get_RTCIceCandidatePairChangedEventType();
    public static void set_RTCIceCandidatePairChangedEventType(RTCIceCandidatePairChangedEventTypeConfig value);
    public static RTCIceGathererTypeConfig get_RTCIceGathererType();
    public static void set_RTCIceGathererType(RTCIceGathererTypeConfig value);
    public static RTCIceGathererEventTypeConfig get_RTCIceGathererEventType();
    public static void set_RTCIceGathererEventType(RTCIceGathererEventTypeConfig value);
    public static RTCIceTransportTypeConfig get_RTCIceTransportType();
    public static void set_RTCIceTransportType(RTCIceTransportTypeConfig value);
    public static RTCIceTransportStateChangedEventTypeConfig get_RTCIceTransportStateChangedEventType();
    public static void set_RTCIceTransportStateChangedEventType(RTCIceTransportStateChangedEventTypeConfig value);
    public static RTCPeerConnectionTypeConfig get_RTCPeerConnectionType();
    public static void set_RTCPeerConnectionType(RTCPeerConnectionTypeConfig value);
    public static RTCPeerConnectionIceEventTypeConfig get_RTCPeerConnectionIceEventType();
    public static void set_RTCPeerConnectionIceEventType(RTCPeerConnectionIceEventTypeConfig value);
    public static RTCRtpReceiverTypeConfig get_RTCRtpReceiverType();
    public static void set_RTCRtpReceiverType(RTCRtpReceiverTypeConfig value);
    public static RTCRtpSenderTypeConfig get_RTCRtpSenderType();
    public static void set_RTCRtpSenderType(RTCRtpSenderTypeConfig value);
    public static RTCSessionDescriptionTypeConfig get_RTCSessionDescriptionType();
    public static void set_RTCSessionDescriptionType(RTCSessionDescriptionTypeConfig value);
    public static RTCSrtpSdesTransportTypeConfig get_RTCSrtpSdesTransportType();
    public static void set_RTCSrtpSdesTransportType(RTCSrtpSdesTransportTypeConfig value);
    public static RTCSsrcConflictEventTypeConfig get_RTCSsrcConflictEventType();
    public static void set_RTCSsrcConflictEventType(RTCSsrcConflictEventTypeConfig value);
    public static RTCStatsProviderTypeConfig get_RTCStatsProviderType();
    public static void set_RTCStatsProviderType(RTCStatsProviderTypeConfig value);
    public static RandomSourceTypeConfig get_RandomSourceType();
    public static void set_RandomSourceType(RandomSourceTypeConfig value);
    public static RangeTypeConfig get_RangeType();
    public static void set_RangeType(RangeTypeConfig value);
    public static ReadableStreamTypeConfig get_ReadableStreamType();
    public static void set_ReadableStreamType(ReadableStreamTypeConfig value);
    public static ReadableStreamReaderTypeConfig get_ReadableStreamReaderType();
    public static void set_ReadableStreamReaderType(ReadableStreamReaderTypeConfig value);
    public static RequestType2Config get_RequestType2();
    public static void set_RequestType2(RequestType2Config value);
    public static ResponseType2Config get_ResponseType2();
    public static void set_ResponseType2(ResponseType2Config value);
    public static SVGAElementTypeConfig get_SVGAElementType();
    public static void set_SVGAElementType(SVGAElementTypeConfig value);
    public static SVGAngleTypeConfig get_SVGAngleType();
    public static void set_SVGAngleType(SVGAngleTypeConfig value);
    public static SVGAnimatedAngleTypeConfig get_SVGAnimatedAngleType();
    public static void set_SVGAnimatedAngleType(SVGAnimatedAngleTypeConfig value);
    public static SVGAnimatedBooleanTypeConfig get_SVGAnimatedBooleanType();
    public static void set_SVGAnimatedBooleanType(SVGAnimatedBooleanTypeConfig value);
    public static SVGAnimatedEnumerationTypeConfig get_SVGAnimatedEnumerationType();
    public static void set_SVGAnimatedEnumerationType(SVGAnimatedEnumerationTypeConfig value);
    public static SVGAnimatedIntegerTypeConfig get_SVGAnimatedIntegerType();
    public static void set_SVGAnimatedIntegerType(SVGAnimatedIntegerTypeConfig value);
    public static SVGAnimatedLengthTypeConfig get_SVGAnimatedLengthType();
    public static void set_SVGAnimatedLengthType(SVGAnimatedLengthTypeConfig value);
    public static SVGAnimatedLengthListTypeConfig get_SVGAnimatedLengthListType();
    public static void set_SVGAnimatedLengthListType(SVGAnimatedLengthListTypeConfig value);
    public static SVGAnimatedNumberTypeConfig get_SVGAnimatedNumberType();
    public static void set_SVGAnimatedNumberType(SVGAnimatedNumberTypeConfig value);
    public static SVGAnimatedNumberListTypeConfig get_SVGAnimatedNumberListType();
    public static void set_SVGAnimatedNumberListType(SVGAnimatedNumberListTypeConfig value);
    public static SVGAnimatedPreserveAspectRatioTypeConfig get_SVGAnimatedPreserveAspectRatioType();
    public static void set_SVGAnimatedPreserveAspectRatioType(SVGAnimatedPreserveAspectRatioTypeConfig value);
    public static SVGAnimatedRectTypeConfig get_SVGAnimatedRectType();
    public static void set_SVGAnimatedRectType(SVGAnimatedRectTypeConfig value);
    public static SVGAnimatedStringTypeConfig get_SVGAnimatedStringType();
    public static void set_SVGAnimatedStringType(SVGAnimatedStringTypeConfig value);
    public static SVGAnimatedTransformListTypeConfig get_SVGAnimatedTransformListType();
    public static void set_SVGAnimatedTransformListType(SVGAnimatedTransformListTypeConfig value);
    public static SVGCircleElementTypeConfig get_SVGCircleElementType();
    public static void set_SVGCircleElementType(SVGCircleElementTypeConfig value);
    public static SVGClipPathElementTypeConfig get_SVGClipPathElementType();
    public static void set_SVGClipPathElementType(SVGClipPathElementTypeConfig value);
    public static SVGComponentTransferFunctionElementTypeConfig get_SVGComponentTransferFunctionElementType();
    public static void set_SVGComponentTransferFunctionElementType(SVGComponentTransferFunctionElementTypeConfig value);
    public static SVGDefsElementTypeConfig get_SVGDefsElementType();
    public static void set_SVGDefsElementType(SVGDefsElementTypeConfig value);
    public static SVGDescElementTypeConfig get_SVGDescElementType();
    public static void set_SVGDescElementType(SVGDescElementTypeConfig value);
    public static SVGElementTypeConfig get_SVGElementType();
    public static void set_SVGElementType(SVGElementTypeConfig value);
    public static SVGElementInstanceTypeConfig get_SVGElementInstanceType();
    public static void set_SVGElementInstanceType(SVGElementInstanceTypeConfig value);
    public static SVGElementInstanceListTypeConfig get_SVGElementInstanceListType();
    public static void set_SVGElementInstanceListType(SVGElementInstanceListTypeConfig value);
    public static SVGEllipseElementTypeConfig get_SVGEllipseElementType();
    public static void set_SVGEllipseElementType(SVGEllipseElementTypeConfig value);
    public static SVGFEBlendElementTypeConfig get_SVGFEBlendElementType();
    public static void set_SVGFEBlendElementType(SVGFEBlendElementTypeConfig value);
    public static SVGFEColorMatrixElementTypeConfig get_SVGFEColorMatrixElementType();
    public static void set_SVGFEColorMatrixElementType(SVGFEColorMatrixElementTypeConfig value);
    public static SVGFEComponentTransferElementTypeConfig get_SVGFEComponentTransferElementType();
    public static void set_SVGFEComponentTransferElementType(SVGFEComponentTransferElementTypeConfig value);
    public static SVGFECompositeElementTypeConfig get_SVGFECompositeElementType();
    public static void set_SVGFECompositeElementType(SVGFECompositeElementTypeConfig value);
    public static SVGFEConvolveMatrixElementTypeConfig get_SVGFEConvolveMatrixElementType();
    public static void set_SVGFEConvolveMatrixElementType(SVGFEConvolveMatrixElementTypeConfig value);
    public static SVGFEDiffuseLightingElementTypeConfig get_SVGFEDiffuseLightingElementType();
    public static void set_SVGFEDiffuseLightingElementType(SVGFEDiffuseLightingElementTypeConfig value);
    public static SVGFEDisplacementMapElementTypeConfig get_SVGFEDisplacementMapElementType();
    public static void set_SVGFEDisplacementMapElementType(SVGFEDisplacementMapElementTypeConfig value);
    public static SVGFEDistantLightElementTypeConfig get_SVGFEDistantLightElementType();
    public static void set_SVGFEDistantLightElementType(SVGFEDistantLightElementTypeConfig value);
    public static SVGFEFloodElementTypeConfig get_SVGFEFloodElementType();
    public static void set_SVGFEFloodElementType(SVGFEFloodElementTypeConfig value);
    public static SVGFEFuncAElementTypeConfig get_SVGFEFuncAElementType();
    public static void set_SVGFEFuncAElementType(SVGFEFuncAElementTypeConfig value);
    public static SVGFEFuncBElementTypeConfig get_SVGFEFuncBElementType();
    public static void set_SVGFEFuncBElementType(SVGFEFuncBElementTypeConfig value);
    public static SVGFEFuncGElementTypeConfig get_SVGFEFuncGElementType();
    public static void set_SVGFEFuncGElementType(SVGFEFuncGElementTypeConfig value);
    public static SVGFEFuncRElementTypeConfig get_SVGFEFuncRElementType();
    public static void set_SVGFEFuncRElementType(SVGFEFuncRElementTypeConfig value);
    public static SVGFEGaussianBlurElementTypeConfig get_SVGFEGaussianBlurElementType();
    public static void set_SVGFEGaussianBlurElementType(SVGFEGaussianBlurElementTypeConfig value);
    public static SVGFEImageElementTypeConfig get_SVGFEImageElementType();
    public static void set_SVGFEImageElementType(SVGFEImageElementTypeConfig value);
    public static SVGFEMergeElementTypeConfig get_SVGFEMergeElementType();
    public static void set_SVGFEMergeElementType(SVGFEMergeElementTypeConfig value);
    public static SVGFEMergeNodeElementTypeConfig get_SVGFEMergeNodeElementType();
    public static void set_SVGFEMergeNodeElementType(SVGFEMergeNodeElementTypeConfig value);
    public static SVGFEMorphologyElementTypeConfig get_SVGFEMorphologyElementType();
    public static void set_SVGFEMorphologyElementType(SVGFEMorphologyElementTypeConfig value);
    public static SVGFEOffsetElementTypeConfig get_SVGFEOffsetElementType();
    public static void set_SVGFEOffsetElementType(SVGFEOffsetElementTypeConfig value);
    public static SVGFEPointLightElementTypeConfig get_SVGFEPointLightElementType();
    public static void set_SVGFEPointLightElementType(SVGFEPointLightElementTypeConfig value);
    public static SVGFESpecularLightingElementTypeConfig get_SVGFESpecularLightingElementType();
    public static void set_SVGFESpecularLightingElementType(SVGFESpecularLightingElementTypeConfig value);
    public static SVGFESpotLightElementTypeConfig get_SVGFESpotLightElementType();
    public static void set_SVGFESpotLightElementType(SVGFESpotLightElementTypeConfig value);
    public static SVGFETileElementTypeConfig get_SVGFETileElementType();
    public static void set_SVGFETileElementType(SVGFETileElementTypeConfig value);
    public static SVGFETurbulenceElementTypeConfig get_SVGFETurbulenceElementType();
    public static void set_SVGFETurbulenceElementType(SVGFETurbulenceElementTypeConfig value);
    public static SVGFilterElementTypeConfig get_SVGFilterElementType();
    public static void set_SVGFilterElementType(SVGFilterElementTypeConfig value);
    public static SVGForeignObjectElementTypeConfig get_SVGForeignObjectElementType();
    public static void set_SVGForeignObjectElementType(SVGForeignObjectElementTypeConfig value);
    public static SVGGElementTypeConfig get_SVGGElementType();
    public static void set_SVGGElementType(SVGGElementTypeConfig value);
    public static SVGGradientElementTypeConfig get_SVGGradientElementType();
    public static void set_SVGGradientElementType(SVGGradientElementTypeConfig value);
    public static SVGGraphicsElementTypeConfig get_SVGGraphicsElementType();
    public static void set_SVGGraphicsElementType(SVGGraphicsElementTypeConfig value);
    public static SVGImageElementTypeConfig get_SVGImageElementType();
    public static void set_SVGImageElementType(SVGImageElementTypeConfig value);
    public static SVGLengthTypeConfig get_SVGLengthType();
    public static void set_SVGLengthType(SVGLengthTypeConfig value);
    public static SVGLengthListTypeConfig get_SVGLengthListType();
    public static void set_SVGLengthListType(SVGLengthListTypeConfig value);
    public static SVGLineElementTypeConfig get_SVGLineElementType();
    public static void set_SVGLineElementType(SVGLineElementTypeConfig value);
    public static SVGLinearGradientElementTypeConfig get_SVGLinearGradientElementType();
    public static void set_SVGLinearGradientElementType(SVGLinearGradientElementTypeConfig value);
    public static SVGMarkerElementTypeConfig get_SVGMarkerElementType();
    public static void set_SVGMarkerElementType(SVGMarkerElementTypeConfig value);
    public static SVGMaskElementTypeConfig get_SVGMaskElementType();
    public static void set_SVGMaskElementType(SVGMaskElementTypeConfig value);
    public static SVGMatrixTypeConfig get_SVGMatrixType();
    public static void set_SVGMatrixType(SVGMatrixTypeConfig value);
    public static SVGMetadataElementTypeConfig get_SVGMetadataElementType();
    public static void set_SVGMetadataElementType(SVGMetadataElementTypeConfig value);
    public static SVGNumberTypeConfig get_SVGNumberType();
    public static void set_SVGNumberType(SVGNumberTypeConfig value);
    public static SVGNumberListTypeConfig get_SVGNumberListType();
    public static void set_SVGNumberListType(SVGNumberListTypeConfig value);
    public static SVGPathElementTypeConfig get_SVGPathElementType();
    public static void set_SVGPathElementType(SVGPathElementTypeConfig value);
    public static SVGPathSegTypeConfig get_SVGPathSegType();
    public static void set_SVGPathSegType(SVGPathSegTypeConfig value);
    public static SVGPathSegArcAbsTypeConfig get_SVGPathSegArcAbsType();
    public static void set_SVGPathSegArcAbsType(SVGPathSegArcAbsTypeConfig value);
    public static SVGPathSegArcRelTypeConfig get_SVGPathSegArcRelType();
    public static void set_SVGPathSegArcRelType(SVGPathSegArcRelTypeConfig value);
    public static SVGPathSegClosePathTypeConfig get_SVGPathSegClosePathType();
    public static void set_SVGPathSegClosePathType(SVGPathSegClosePathTypeConfig value);
    public static SVGPathSegCurvetoCubicAbsTypeConfig get_SVGPathSegCurvetoCubicAbsType();
    public static void set_SVGPathSegCurvetoCubicAbsType(SVGPathSegCurvetoCubicAbsTypeConfig value);
    public static SVGPathSegCurvetoCubicRelTypeConfig get_SVGPathSegCurvetoCubicRelType();
    public static void set_SVGPathSegCurvetoCubicRelType(SVGPathSegCurvetoCubicRelTypeConfig value);
    public static SVGPathSegCurvetoCubicSmoothAbsTypeConfig get_SVGPathSegCurvetoCubicSmoothAbsType();
    public static void set_SVGPathSegCurvetoCubicSmoothAbsType(SVGPathSegCurvetoCubicSmoothAbsTypeConfig value);
    public static SVGPathSegCurvetoCubicSmoothRelTypeConfig get_SVGPathSegCurvetoCubicSmoothRelType();
    public static void set_SVGPathSegCurvetoCubicSmoothRelType(SVGPathSegCurvetoCubicSmoothRelTypeConfig value);
    public static SVGPathSegCurvetoQuadraticAbsTypeConfig get_SVGPathSegCurvetoQuadraticAbsType();
    public static void set_SVGPathSegCurvetoQuadraticAbsType(SVGPathSegCurvetoQuadraticAbsTypeConfig value);
    public static SVGPathSegCurvetoQuadraticRelTypeConfig get_SVGPathSegCurvetoQuadraticRelType();
    public static void set_SVGPathSegCurvetoQuadraticRelType(SVGPathSegCurvetoQuadraticRelTypeConfig value);
    public static SVGPathSegCurvetoQuadraticSmoothAbsTypeConfig get_SVGPathSegCurvetoQuadraticSmoothAbsType();
    public static void set_SVGPathSegCurvetoQuadraticSmoothAbsType(SVGPathSegCurvetoQuadraticSmoothAbsTypeConfig value);
    public static SVGPathSegCurvetoQuadraticSmoothRelTypeConfig get_SVGPathSegCurvetoQuadraticSmoothRelType();
    public static void set_SVGPathSegCurvetoQuadraticSmoothRelType(SVGPathSegCurvetoQuadraticSmoothRelTypeConfig value);
    public static SVGPathSegLinetoAbsTypeConfig get_SVGPathSegLinetoAbsType();
    public static void set_SVGPathSegLinetoAbsType(SVGPathSegLinetoAbsTypeConfig value);
    public static SVGPathSegLinetoHorizontalAbsTypeConfig get_SVGPathSegLinetoHorizontalAbsType();
    public static void set_SVGPathSegLinetoHorizontalAbsType(SVGPathSegLinetoHorizontalAbsTypeConfig value);
    public static SVGPathSegLinetoHorizontalRelTypeConfig get_SVGPathSegLinetoHorizontalRelType();
    public static void set_SVGPathSegLinetoHorizontalRelType(SVGPathSegLinetoHorizontalRelTypeConfig value);
    public static SVGPathSegLinetoRelTypeConfig get_SVGPathSegLinetoRelType();
    public static void set_SVGPathSegLinetoRelType(SVGPathSegLinetoRelTypeConfig value);
    public static SVGPathSegLinetoVerticalAbsTypeConfig get_SVGPathSegLinetoVerticalAbsType();
    public static void set_SVGPathSegLinetoVerticalAbsType(SVGPathSegLinetoVerticalAbsTypeConfig value);
    public static SVGPathSegLinetoVerticalRelTypeConfig get_SVGPathSegLinetoVerticalRelType();
    public static void set_SVGPathSegLinetoVerticalRelType(SVGPathSegLinetoVerticalRelTypeConfig value);
    public static SVGPathSegListTypeConfig get_SVGPathSegListType();
    public static void set_SVGPathSegListType(SVGPathSegListTypeConfig value);
    public static SVGPathSegMovetoAbsTypeConfig get_SVGPathSegMovetoAbsType();
    public static void set_SVGPathSegMovetoAbsType(SVGPathSegMovetoAbsTypeConfig value);
    public static SVGPathSegMovetoRelTypeConfig get_SVGPathSegMovetoRelType();
    public static void set_SVGPathSegMovetoRelType(SVGPathSegMovetoRelTypeConfig value);
    public static SVGPatternElementTypeConfig get_SVGPatternElementType();
    public static void set_SVGPatternElementType(SVGPatternElementTypeConfig value);
    public static SVGPointTypeConfig get_SVGPointType();
    public static void set_SVGPointType(SVGPointTypeConfig value);
    public static SVGPointListTypeConfig get_SVGPointListType();
    public static void set_SVGPointListType(SVGPointListTypeConfig value);
    public static SVGPolygonElementTypeConfig get_SVGPolygonElementType();
    public static void set_SVGPolygonElementType(SVGPolygonElementTypeConfig value);
    public static SVGPolylineElementTypeConfig get_SVGPolylineElementType();
    public static void set_SVGPolylineElementType(SVGPolylineElementTypeConfig value);
    public static SVGPreserveAspectRatioTypeConfig get_SVGPreserveAspectRatioType();
    public static void set_SVGPreserveAspectRatioType(SVGPreserveAspectRatioTypeConfig value);
    public static SVGRadialGradientElementTypeConfig get_SVGRadialGradientElementType();
    public static void set_SVGRadialGradientElementType(SVGRadialGradientElementTypeConfig value);
    public static SVGRectTypeConfig get_SVGRectType();
    public static void set_SVGRectType(SVGRectTypeConfig value);
    public static SVGRectElementTypeConfig get_SVGRectElementType();
    public static void set_SVGRectElementType(SVGRectElementTypeConfig value);
    public static SVGSVGElementTypeConfig get_SVGSVGElementType();
    public static void set_SVGSVGElementType(SVGSVGElementTypeConfig value);
    public static SVGScriptElementTypeConfig get_SVGScriptElementType();
    public static void set_SVGScriptElementType(SVGScriptElementTypeConfig value);
    public static SVGStopElementTypeConfig get_SVGStopElementType();
    public static void set_SVGStopElementType(SVGStopElementTypeConfig value);
    public static SVGStringListTypeConfig get_SVGStringListType();
    public static void set_SVGStringListType(SVGStringListTypeConfig value);
    public static SVGStylableTypeConfig get_SVGStylableType();
    public static void set_SVGStylableType(SVGStylableTypeConfig value);
    public static SVGStyleElementTypeConfig get_SVGStyleElementType();
    public static void set_SVGStyleElementType(SVGStyleElementTypeConfig value);
    public static SVGSwitchElementTypeConfig get_SVGSwitchElementType();
    public static void set_SVGSwitchElementType(SVGSwitchElementTypeConfig value);
    public static SVGSymbolElementTypeConfig get_SVGSymbolElementType();
    public static void set_SVGSymbolElementType(SVGSymbolElementTypeConfig value);
    public static SVGTSpanElementTypeConfig get_SVGTSpanElementType();
    public static void set_SVGTSpanElementType(SVGTSpanElementTypeConfig value);
    public static SVGTextContentElementTypeConfig get_SVGTextContentElementType();
    public static void set_SVGTextContentElementType(SVGTextContentElementTypeConfig value);
    public static SVGTextElementTypeConfig get_SVGTextElementType();
    public static void set_SVGTextElementType(SVGTextElementTypeConfig value);
    public static SVGTextPathElementTypeConfig get_SVGTextPathElementType();
    public static void set_SVGTextPathElementType(SVGTextPathElementTypeConfig value);
    public static SVGTextPositioningElementTypeConfig get_SVGTextPositioningElementType();
    public static void set_SVGTextPositioningElementType(SVGTextPositioningElementTypeConfig value);
    public static SVGTitleElementTypeConfig get_SVGTitleElementType();
    public static void set_SVGTitleElementType(SVGTitleElementTypeConfig value);
    public static SVGTransformTypeConfig get_SVGTransformType();
    public static void set_SVGTransformType(SVGTransformTypeConfig value);
    public static SVGTransformListTypeConfig get_SVGTransformListType();
    public static void set_SVGTransformListType(SVGTransformListTypeConfig value);
    public static SVGUnitTypes get_SVGUnitTypesInstance();
    public static void set_SVGUnitTypesInstance(SVGUnitTypes value);
    public static SVGUseElementTypeConfig get_SVGUseElementType();
    public static void set_SVGUseElementType(SVGUseElementTypeConfig value);
    public static SVGViewElementTypeConfig get_SVGViewElementType();
    public static void set_SVGViewElementType(SVGViewElementTypeConfig value);
    public static SVGZoomAndPan2Config get_SVGZoomAndPan2();
    public static void set_SVGZoomAndPan2(SVGZoomAndPan2Config value);
    public static SVGZoomEventTypeConfig get_SVGZoomEventType();
    public static void set_SVGZoomEventType(SVGZoomEventTypeConfig value);
    public static ScopedCredentialType2Config get_ScopedCredentialType2();
    public static void set_ScopedCredentialType2(ScopedCredentialType2Config value);
    public static ScopedCredentialInfoTypeConfig get_ScopedCredentialInfoType();
    public static void set_ScopedCredentialInfoType(ScopedCredentialInfoTypeConfig value);
    public static ScreenTypeConfig get_ScreenType();
    public static void set_ScreenType(ScreenTypeConfig value);
    public static ScriptProcessorNodeTypeConfig get_ScriptProcessorNodeType();
    public static void set_ScriptProcessorNodeType(ScriptProcessorNodeTypeConfig value);
    public static SecurityPolicyViolationEventTypeConfig get_SecurityPolicyViolationEventType();
    public static void set_SecurityPolicyViolationEventType(SecurityPolicyViolationEventTypeConfig value);
    public static SelectionTypeConfig get_SelectionType();
    public static void set_SelectionType(SelectionTypeConfig value);
    public static ServiceUIFrameContext get_ServiceUIFrameContextInstance();
    public static void set_ServiceUIFrameContextInstance(ServiceUIFrameContext value);
    public static ServiceWorkerTypeConfig get_ServiceWorkerType();
    public static void set_ServiceWorkerType(ServiceWorkerTypeConfig value);
    public static ServiceWorkerContainerTypeConfig get_ServiceWorkerContainerType();
    public static void set_ServiceWorkerContainerType(ServiceWorkerContainerTypeConfig value);
    public static ServiceWorkerMessageEventTypeConfig get_ServiceWorkerMessageEventType();
    public static void set_ServiceWorkerMessageEventType(ServiceWorkerMessageEventTypeConfig value);
    public static ServiceWorkerRegistrationTypeConfig get_ServiceWorkerRegistrationType();
    public static void set_ServiceWorkerRegistrationType(ServiceWorkerRegistrationTypeConfig value);
    public static SourceBufferTypeConfig get_SourceBufferType();
    public static void set_SourceBufferType(SourceBufferTypeConfig value);
    public static SourceBufferListTypeConfig get_SourceBufferListType();
    public static void set_SourceBufferListType(SourceBufferListTypeConfig value);
    public static SpeechSynthesisTypeConfig get_SpeechSynthesisType();
    public static void set_SpeechSynthesisType(SpeechSynthesisTypeConfig value);
    public static SpeechSynthesisEventTypeConfig get_SpeechSynthesisEventType();
    public static void set_SpeechSynthesisEventType(SpeechSynthesisEventTypeConfig value);
    public static SpeechSynthesisUtteranceTypeConfig get_SpeechSynthesisUtteranceType();
    public static void set_SpeechSynthesisUtteranceType(SpeechSynthesisUtteranceTypeConfig value);
    public static SpeechSynthesisVoiceTypeConfig get_SpeechSynthesisVoiceType();
    public static void set_SpeechSynthesisVoiceType(SpeechSynthesisVoiceTypeConfig value);
    public static StereoPannerNodeTypeConfig get_StereoPannerNodeType();
    public static void set_StereoPannerNodeType(StereoPannerNodeTypeConfig value);
    public static StorageTypeConfig get_StorageType();
    public static void set_StorageType(StorageTypeConfig value);
    public static StorageEventTypeConfig get_StorageEventType();
    public static void set_StorageEventType(StorageEventTypeConfig value);
    public static StyleMediaTypeConfig get_StyleMediaType();
    public static void set_StyleMediaType(StyleMediaTypeConfig value);
    public static StyleSheetTypeConfig get_StyleSheetType();
    public static void set_StyleSheetType(StyleSheetTypeConfig value);
    public static StyleSheetListTypeConfig get_StyleSheetListType();
    public static void set_StyleSheetListType(StyleSheetListTypeConfig value);
    public static SubtleCryptoTypeConfig get_SubtleCryptoType();
    public static void set_SubtleCryptoType(SubtleCryptoTypeConfig value);
    public static SyncManagerTypeConfig get_SyncManagerType();
    public static void set_SyncManagerType(SyncManagerTypeConfig value);
    public static TextTypeConfig get_TextType();
    public static void set_TextType(TextTypeConfig value);
    public static TextDecoderTypeConfig get_TextDecoderType();
    public static void set_TextDecoderType(TextDecoderTypeConfig value);
    public static TextEncoderTypeConfig get_TextEncoderType();
    public static void set_TextEncoderType(TextEncoderTypeConfig value);
    public static TextEventTypeConfig get_TextEventType();
    public static void set_TextEventType(TextEventTypeConfig value);
    public static TextMetricsTypeConfig get_TextMetricsType();
    public static void set_TextMetricsType(TextMetricsTypeConfig value);
    public static TextTrackTypeConfig get_TextTrackType();
    public static void set_TextTrackType(TextTrackTypeConfig value);
    public static TextTrackCueTypeConfig get_TextTrackCueType();
    public static void set_TextTrackCueType(TextTrackCueTypeConfig value);
    public static TextTrackCueListTypeConfig get_TextTrackCueListType();
    public static void set_TextTrackCueListType(TextTrackCueListTypeConfig value);
    public static TextTrackListTypeConfig get_TextTrackListType();
    public static void set_TextTrackListType(TextTrackListTypeConfig value);
    public static TimeRangesTypeConfig get_TimeRangesType();
    public static void set_TimeRangesType(TimeRangesTypeConfig value);
    public static TouchTypeConfig get_TouchType();
    public static void set_TouchType(TouchTypeConfig value);
    public static TouchEventTypeConfig get_TouchEventType();
    public static void set_TouchEventType(TouchEventTypeConfig value);
    public static TouchListTypeConfig get_TouchListType();
    public static void set_TouchListType(TouchListTypeConfig value);
    public static TrackEventTypeConfig get_TrackEventType();
    public static void set_TrackEventType(TrackEventTypeConfig value);
    public static TransitionEventTypeConfig get_TransitionEventType();
    public static void set_TransitionEventType(TransitionEventTypeConfig value);
    public static TreeWalkerTypeConfig get_TreeWalkerType();
    public static void set_TreeWalkerType(TreeWalkerTypeConfig value);
    public static UIEventTypeConfig get_UIEventType();
    public static void set_UIEventType(UIEventTypeConfig value);
    public static URLTypeConfig get_URLType();
    public static void set_URLType(URLTypeConfig value);
    public static URLSearchParamsTypeConfig get_URLSearchParamsType();
    public static void set_URLSearchParamsType(URLSearchParamsTypeConfig value);
    public static VRDisplayTypeConfig get_VRDisplayType();
    public static void set_VRDisplayType(VRDisplayTypeConfig value);
    public static VRDisplayCapabilitiesTypeConfig get_VRDisplayCapabilitiesType();
    public static void set_VRDisplayCapabilitiesType(VRDisplayCapabilitiesTypeConfig value);
    public static VRDisplayEventTypeConfig get_VRDisplayEventType();
    public static void set_VRDisplayEventType(VRDisplayEventTypeConfig value);
    public static VREyeParametersTypeConfig get_VREyeParametersType();
    public static void set_VREyeParametersType(VREyeParametersTypeConfig value);
    public static VRFieldOfViewTypeConfig get_VRFieldOfViewType();
    public static void set_VRFieldOfViewType(VRFieldOfViewTypeConfig value);
    public static VRFrameDataTypeConfig get_VRFrameDataType();
    public static void set_VRFrameDataType(VRFrameDataTypeConfig value);
    public static VRPoseTypeConfig get_VRPoseType();
    public static void set_VRPoseType(VRPoseTypeConfig value);
    public static ValidityStateTypeConfig get_ValidityStateType();
    public static void set_ValidityStateType(ValidityStateTypeConfig value);
    public static VideoPlaybackQualityTypeConfig get_VideoPlaybackQualityType();
    public static void set_VideoPlaybackQualityType(VideoPlaybackQualityTypeConfig value);
    public static VideoTrackTypeConfig get_VideoTrackType();
    public static void set_VideoTrackType(VideoTrackTypeConfig value);
    public static VideoTrackListTypeConfig get_VideoTrackListType();
    public static void set_VideoTrackListType(VideoTrackListTypeConfig value);
    public static WEBGL_compressed_texture_s3tcTypeConfig get_WEBGL_compressed_texture_s3tcType();
    public static void set_WEBGL_compressed_texture_s3tcType(WEBGL_compressed_texture_s3tcTypeConfig value);
    public static WEBGL_debug_renderer_infoTypeConfig get_WEBGL_debug_renderer_infoType();
    public static void set_WEBGL_debug_renderer_infoType(WEBGL_debug_renderer_infoTypeConfig value);
    public static WEBGL_depth_textureTypeConfig get_WEBGL_depth_textureType();
    public static void set_WEBGL_depth_textureType(WEBGL_depth_textureTypeConfig value);
    public static WaveShaperNodeTypeConfig get_WaveShaperNodeType();
    public static void set_WaveShaperNodeType(WaveShaperNodeTypeConfig value);
    public static WebAuthenticationTypeConfig get_WebAuthenticationType();
    public static void set_WebAuthenticationType(WebAuthenticationTypeConfig value);
    public static WebAuthnAssertionTypeConfig get_WebAuthnAssertionType();
    public static void set_WebAuthnAssertionType(WebAuthnAssertionTypeConfig value);
    public static WebGLActiveInfoTypeConfig get_WebGLActiveInfoType();
    public static void set_WebGLActiveInfoType(WebGLActiveInfoTypeConfig value);
    public static WebGLBufferTypeConfig get_WebGLBufferType();
    public static void set_WebGLBufferType(WebGLBufferTypeConfig value);
    public static WebGLContextEventTypeConfig get_WebGLContextEventType();
    public static void set_WebGLContextEventType(WebGLContextEventTypeConfig value);
    public static WebGLFramebufferTypeConfig get_WebGLFramebufferType();
    public static void set_WebGLFramebufferType(WebGLFramebufferTypeConfig value);
    public static WebGLObjectTypeConfig get_WebGLObjectType();
    public static void set_WebGLObjectType(WebGLObjectTypeConfig value);
    public static WebGLProgramTypeConfig get_WebGLProgramType();
    public static void set_WebGLProgramType(WebGLProgramTypeConfig value);
    public static WebGLRenderbufferTypeConfig get_WebGLRenderbufferType();
    public static void set_WebGLRenderbufferType(WebGLRenderbufferTypeConfig value);
    public static WebGLRenderingContextTypeConfig get_WebGLRenderingContextType();
    public static void set_WebGLRenderingContextType(WebGLRenderingContextTypeConfig value);
    public static WebGLShaderTypeConfig get_WebGLShaderType();
    public static void set_WebGLShaderType(WebGLShaderTypeConfig value);
    public static WebGLShaderPrecisionFormatTypeConfig get_WebGLShaderPrecisionFormatType();
    public static void set_WebGLShaderPrecisionFormatType(WebGLShaderPrecisionFormatTypeConfig value);
    public static WebGLTextureTypeConfig get_WebGLTextureType();
    public static void set_WebGLTextureType(WebGLTextureTypeConfig value);
    public static WebGLUniformLocationTypeConfig get_WebGLUniformLocationType();
    public static void set_WebGLUniformLocationType(WebGLUniformLocationTypeConfig value);
    public static WebKitCSSMatrixTypeConfig get_WebKitCSSMatrixType();
    public static void set_WebKitCSSMatrixType(WebKitCSSMatrixTypeConfig value);
    public static WebKitDirectoryEntryTypeConfig get_WebKitDirectoryEntryType();
    public static void set_WebKitDirectoryEntryType(WebKitDirectoryEntryTypeConfig value);
    public static WebKitDirectoryReaderTypeConfig get_WebKitDirectoryReaderType();
    public static void set_WebKitDirectoryReaderType(WebKitDirectoryReaderTypeConfig value);
    public static WebKitEntryTypeConfig get_WebKitEntryType();
    public static void set_WebKitEntryType(WebKitEntryTypeConfig value);
    public static WebKitFileEntryTypeConfig get_WebKitFileEntryType();
    public static void set_WebKitFileEntryType(WebKitFileEntryTypeConfig value);
    public static WebKitFileSystemTypeConfig get_WebKitFileSystemType();
    public static void set_WebKitFileSystemType(WebKitFileSystemTypeConfig value);
    public static WebKitPointTypeConfig get_WebKitPointType();
    public static void set_WebKitPointType(WebKitPointTypeConfig value);
    public static WebSocketTypeConfig get_WebSocketType();
    public static void set_WebSocketType(WebSocketTypeConfig value);
    public static WheelEventTypeConfig get_WheelEventType();
    public static void set_WheelEventType(WheelEventTypeConfig value);
    public static WindowTypeConfig get_WindowType();
    public static void set_WindowType(WindowTypeConfig value);
    public static WorkerTypeConfig get_WorkerType();
    public static void set_WorkerType(WorkerTypeConfig value);
    public static WritableStreamTypeConfig get_WritableStreamType();
    public static void set_WritableStreamType(WritableStreamTypeConfig value);
    public static WritableStreamDefaultControllerTypeConfig get_WritableStreamDefaultControllerType();
    public static void set_WritableStreamDefaultControllerType(WritableStreamDefaultControllerTypeConfig value);
    public static WritableStreamDefaultWriterTypeConfig get_WritableStreamDefaultWriterType();
    public static void set_WritableStreamDefaultWriterType(WritableStreamDefaultWriterTypeConfig value);
    public static XMLDocumentTypeConfig get_XMLDocumentType();
    public static void set_XMLDocumentType(XMLDocumentTypeConfig value);
    public static XMLHttpRequestTypeConfig get_XMLHttpRequestType();
    public static void set_XMLHttpRequestType(XMLHttpRequestTypeConfig value);
    public static XMLHttpRequestUploadTypeConfig get_XMLHttpRequestUploadType();
    public static void set_XMLHttpRequestUploadType(XMLHttpRequestUploadTypeConfig value);
    public static XMLSerializerTypeConfig get_XMLSerializerType();
    public static void set_XMLSerializerType(XMLSerializerTypeConfig value);
    public static XPathEvaluatorTypeConfig get_XPathEvaluatorType();
    public static void set_XPathEvaluatorType(XPathEvaluatorTypeConfig value);
    public static XPathExpressionTypeConfig get_XPathExpressionType();
    public static void set_XPathExpressionType(XPathExpressionTypeConfig value);
    public static XPathNSResolverTypeConfig get_XPathNSResolverType();
    public static void set_XPathNSResolverType(XPathNSResolverTypeConfig value);
    public static XPathResultTypeConfig get_XPathResultType();
    public static void set_XPathResultType(XPathResultTypeConfig value);
    public static XSLTProcessorTypeConfig get_XSLTProcessorType();
    public static void set_XSLTProcessorType(XSLTProcessorTypeConfig value);
    public static webkitRTCPeerConnectionTypeConfig get_webkitRTCPeerConnectionType();
    public static void set_webkitRTCPeerConnectionType(webkitRTCPeerConnectionTypeConfig value);
    public static AudioConfig get_Audio();
    public static void set_Audio(AudioConfig value);
    public static ImageConfig get_Image();
    public static void set_Image(ImageConfig value);
    public static OptionConfig get_Option();
    public static void set_Option(OptionConfig value);
    public static BlobStatics get_BlobInstance();
    public static void set_BlobInstance(BlobStatics value);
    public static URLStatics get_URLInstance();
    public static void set_URLInstance(URLStatics value);
    public static URLSearchParamsStatics get_URLSearchParamsInstance();
    public static void set_URLSearchParamsInstance(URLSearchParamsStatics value);
    public static ApplicationCache get_applicationCache();
    public static void set_applicationCache(ApplicationCache value);
    public static CacheStorage get_caches();
    public static void set_caches(CacheStorage value);
    public static Navigator get_clientInformation();
    public static void set_clientInformation(Navigator value);
    public static bool get_closed();
    public static void set_closed(bool value);
    public static Crypto get_crypto();
    public static void set_crypto(Crypto value);
    public static CustomElementRegistry get_customElements();
    public static void set_customElements(CustomElementRegistry value);
    public static string get_defaultStatus();
    public static void set_defaultStatus(string value);
    public static double get_devicePixelRatio();
    public static void set_devicePixelRatio(double value);
    public static string get_doNotTrack();
    public static void set_doNotTrack(string value);
    public static Document get_document();
    public static void set_document(Document value);
    public static Union`2<Event, Undefined> get_event();
    public static void set_event(Union`2<Event, Undefined> value);
    public static External get_external();
    public static void set_external(External value);
    public static Element get_frameElement();
    public static void set_frameElement(Element value);
    public static Window get_frames();
    public static void set_frames(Window value);
    public static History get_history();
    public static void set_history(History value);
    public static double get_innerHeight();
    public static void set_innerHeight(double value);
    public static double get_innerWidth();
    public static void set_innerWidth(double value);
    public static bool get_isSecureContext();
    public static void set_isSecureContext(bool value);
    public static double get_length();
    public static void set_length(double value);
    public static Location get_location();
    public static void set_location(Location value);
    public static BarProp get_locationbar();
    public static void set_locationbar(BarProp value);
    public static BarProp get_menubar();
    public static void set_menubar(BarProp value);
    public static ExtensionScriptApis get_msContentScript();
    public static void set_msContentScript(ExtensionScriptApis value);
    public static MSCredentials get_msCredentials();
    public static void set_msCredentials(MSCredentials value);
    public static Navigator get_navigator();
    public static void set_navigator(Navigator value);
    public static Union`2<string, bool> get_offscreenBuffering();
    public static void set_offscreenBuffering(Union`2<string, bool> value);
    public static onabortFn get_onabort();
    public static void set_onabort(onabortFn value);
    public static onbeforeunloadFn get_onbeforeunload();
    public static void set_onbeforeunload(onbeforeunloadFn value);
    public static onblurFn get_onblur();
    public static void set_onblur(onblurFn value);
    public static oncanplayFn get_oncanplay();
    public static void set_oncanplay(oncanplayFn value);
    public static oncanplayFn get_oncanplaythrough();
    public static void set_oncanplaythrough(oncanplayFn value);
    public static oncanplayFn get_onchange();
    public static void set_onchange(oncanplayFn value);
    public static onclickFn get_onclick();
    public static void set_onclick(onclickFn value);
    public static oncanplayFn get_oncompassneedscalibration();
    public static void set_oncompassneedscalibration(oncanplayFn value);
    public static oncontextmenuFn get_oncontextmenu();
    public static void set_oncontextmenu(oncontextmenuFn value);
    public static onclickFn get_ondblclick();
    public static void set_ondblclick(onclickFn value);
    public static ondevicelightFn get_ondevicelight();
    public static void set_ondevicelight(ondevicelightFn value);
    public static ondevicemotionFn get_ondevicemotion();
    public static void set_ondevicemotion(ondevicemotionFn value);
    public static ondeviceorientationFn get_ondeviceorientation();
    public static void set_ondeviceorientation(ondeviceorientationFn value);
    public static ondragFn get_ondrag();
    public static void set_ondrag(ondragFn value);
    public static ondragFn get_ondragend();
    public static void set_ondragend(ondragFn value);
    public static ondragFn get_ondragenter();
    public static void set_ondragenter(ondragFn value);
    public static ondragFn get_ondragleave();
    public static void set_ondragleave(ondragFn value);
    public static ondragFn get_ondragover();
    public static void set_ondragover(ondragFn value);
    public static ondragFn get_ondragstart();
    public static void set_ondragstart(ondragFn value);
    public static ondragFn get_ondrop();
    public static void set_ondrop(ondragFn value);
    public static oncanplayFn get_ondurationchange();
    public static void set_ondurationchange(oncanplayFn value);
    public static oncanplayFn get_onemptied();
    public static void set_onemptied(oncanplayFn value);
    public static oncanplayFn get_onended();
    public static void set_onended(oncanplayFn value);
    public static ErrorEventHandler get_onerror();
    public static void set_onerror(ErrorEventHandler value);
    public static onblurFn get_onfocus();
    public static void set_onfocus(onblurFn value);
    public static onhashchangeFn get_onhashchange();
    public static void set_onhashchange(onhashchangeFn value);
    public static oncanplayFn get_oninput();
    public static void set_oninput(oncanplayFn value);
    public static oncanplayFn get_oninvalid();
    public static void set_oninvalid(oncanplayFn value);
    public static onkeydownFn get_onkeydown();
    public static void set_onkeydown(onkeydownFn value);
    public static onkeydownFn get_onkeypress();
    public static void set_onkeypress(onkeydownFn value);
    public static onkeydownFn get_onkeyup();
    public static void set_onkeyup(onkeydownFn value);
    public static oncanplayFn get_onload();
    public static void set_onload(oncanplayFn value);
    public static oncanplayFn get_onloadeddata();
    public static void set_onloadeddata(oncanplayFn value);
    public static oncanplayFn get_onloadedmetadata();
    public static void set_onloadedmetadata(oncanplayFn value);
    public static oncanplayFn get_onloadstart();
    public static void set_onloadstart(oncanplayFn value);
    public static onmessageFn get_onmessage();
    public static void set_onmessage(onmessageFn value);
    public static onclickFn get_onmousedown();
    public static void set_onmousedown(onclickFn value);
    public static onclickFn get_onmouseenter();
    public static void set_onmouseenter(onclickFn value);
    public static onclickFn get_onmouseleave();
    public static void set_onmouseleave(onclickFn value);
    public static onclickFn get_onmousemove();
    public static void set_onmousemove(onclickFn value);
    public static onclickFn get_onmouseout();
    public static void set_onmouseout(onclickFn value);
    public static onclickFn get_onmouseover();
    public static void set_onmouseover(onclickFn value);
    public static onclickFn get_onmouseup();
    public static void set_onmouseup(onclickFn value);
    public static onmousewheelFn get_onmousewheel();
    public static void set_onmousewheel(onmousewheelFn value);
    public static oncanplayFn get_onmsgesturechange();
    public static void set_onmsgesturechange(oncanplayFn value);
    public static oncanplayFn get_onmsgesturedoubletap();
    public static void set_onmsgesturedoubletap(oncanplayFn value);
    public static oncanplayFn get_onmsgestureend();
    public static void set_onmsgestureend(oncanplayFn value);
    public static oncanplayFn get_onmsgesturehold();
    public static void set_onmsgesturehold(oncanplayFn value);
    public static oncanplayFn get_onmsgesturestart();
    public static void set_onmsgesturestart(oncanplayFn value);
    public static oncanplayFn get_onmsgesturetap();
    public static void set_onmsgesturetap(oncanplayFn value);
    public static oncanplayFn get_onmsinertiastart();
    public static void set_onmsinertiastart(oncanplayFn value);
    public static oncanplayFn get_onmspointercancel();
    public static void set_onmspointercancel(oncanplayFn value);
    public static oncanplayFn get_onmspointerdown();
    public static void set_onmspointerdown(oncanplayFn value);
    public static oncanplayFn get_onmspointerenter();
    public static void set_onmspointerenter(oncanplayFn value);
    public static oncanplayFn get_onmspointerleave();
    public static void set_onmspointerleave(oncanplayFn value);
    public static oncanplayFn get_onmspointermove();
    public static void set_onmspointermove(oncanplayFn value);
    public static oncanplayFn get_onmspointerout();
    public static void set_onmspointerout(oncanplayFn value);
    public static oncanplayFn get_onmspointerover();
    public static void set_onmspointerover(oncanplayFn value);
    public static oncanplayFn get_onmspointerup();
    public static void set_onmspointerup(oncanplayFn value);
    public static oncanplayFn get_onoffline();
    public static void set_onoffline(oncanplayFn value);
    public static oncanplayFn get_ononline();
    public static void set_ononline(oncanplayFn value);
    public static oncanplayFn get_onorientationchange();
    public static void set_onorientationchange(oncanplayFn value);
    public static onpagehideFn get_onpagehide();
    public static void set_onpagehide(onpagehideFn value);
    public static onpagehideFn get_onpageshow();
    public static void set_onpageshow(onpagehideFn value);
    public static oncanplayFn get_onpause();
    public static void set_onpause(oncanplayFn value);
    public static oncanplayFn get_onplay();
    public static void set_onplay(oncanplayFn value);
    public static oncanplayFn get_onplaying();
    public static void set_onplaying(oncanplayFn value);
    public static onpopstateFn get_onpopstate();
    public static void set_onpopstate(onpopstateFn value);
    public static onprogressFn get_onprogress();
    public static void set_onprogress(onprogressFn value);
    public static oncanplayFn get_onratechange();
    public static void set_onratechange(oncanplayFn value);
    public static onprogressFn get_onreadystatechange();
    public static void set_onreadystatechange(onprogressFn value);
    public static oncanplayFn get_onreset();
    public static void set_onreset(oncanplayFn value);
    public static onabortFn get_onresize();
    public static void set_onresize(onabortFn value);
    public static onabortFn get_onscroll();
    public static void set_onscroll(onabortFn value);
    public static oncanplayFn get_onseeked();
    public static void set_onseeked(oncanplayFn value);
    public static oncanplayFn get_onseeking();
    public static void set_onseeking(oncanplayFn value);
    public static onabortFn get_onselect();
    public static void set_onselect(onabortFn value);
    public static oncanplayFn get_onstalled();
    public static void set_onstalled(oncanplayFn value);
    public static onstorageFn get_onstorage();
    public static void set_onstorage(onstorageFn value);
    public static oncanplayFn get_onsubmit();
    public static void set_onsubmit(oncanplayFn value);
    public static oncanplayFn get_onsuspend();
    public static void set_onsuspend(oncanplayFn value);
    public static oncanplayFn get_ontimeupdate();
    public static void set_ontimeupdate(oncanplayFn value);
    public static ontouchcancelFn get_ontouchcancel();
    public static void set_ontouchcancel(ontouchcancelFn value);
    public static ontouchendFn get_ontouchend();
    public static void set_ontouchend(ontouchendFn value);
    public static ontouchmoveFn get_ontouchmove();
    public static void set_ontouchmove(ontouchmoveFn value);
    public static ontouchstartFn get_ontouchstart();
    public static void set_ontouchstart(ontouchstartFn value);
    public static oncanplayFn get_onunload();
    public static void set_onunload(oncanplayFn value);
    public static oncanplayFn get_onvolumechange();
    public static void set_onvolumechange(oncanplayFn value);
    public static oncanplayFn get_onvrdisplayactivate();
    public static void set_onvrdisplayactivate(oncanplayFn value);
    public static oncanplayFn get_onvrdisplayblur();
    public static void set_onvrdisplayblur(oncanplayFn value);
    public static oncanplayFn get_onvrdisplayconnect();
    public static void set_onvrdisplayconnect(oncanplayFn value);
    public static oncanplayFn get_onvrdisplaydeactivate();
    public static void set_onvrdisplaydeactivate(oncanplayFn value);
    public static oncanplayFn get_onvrdisplaydisconnect();
    public static void set_onvrdisplaydisconnect(oncanplayFn value);
    public static oncanplayFn get_onvrdisplayfocus();
    public static void set_onvrdisplayfocus(oncanplayFn value);
    public static oncanplayFn get_onvrdisplaypointerrestricted();
    public static void set_onvrdisplaypointerrestricted(oncanplayFn value);
    public static oncanplayFn get_onvrdisplaypointerunrestricted();
    public static void set_onvrdisplaypointerunrestricted(oncanplayFn value);
    public static oncanplayFn get_onvrdisplaypresentchange();
    public static void set_onvrdisplaypresentchange(oncanplayFn value);
    public static oncanplayFn get_onwaiting();
    public static void set_onwaiting(oncanplayFn value);
    public static object get_opener();
    public static void set_opener(object value);
    public static Union`2<string, double> get_orientation();
    public static void set_orientation(Union`2<string, double> value);
    public static double get_outerHeight();
    public static void set_outerHeight(double value);
    public static double get_outerWidth();
    public static void set_outerWidth(double value);
    public static double get_pageXOffset();
    public static void set_pageXOffset(double value);
    public static double get_pageYOffset();
    public static void set_pageYOffset(double value);
    public static Window get_parent();
    public static void set_parent(Window value);
    public static Performance get_performance();
    public static void set_performance(Performance value);
    public static BarProp get_personalbar();
    public static void set_personalbar(BarProp value);
    public static Screen get_screen();
    public static void set_screen(Screen value);
    public static double get_screenLeft();
    public static void set_screenLeft(double value);
    public static double get_screenTop();
    public static void set_screenTop(double value);
    public static double get_screenX();
    public static void set_screenX(double value);
    public static double get_screenY();
    public static void set_screenY(double value);
    public static double get_scrollX();
    public static void set_scrollX(double value);
    public static double get_scrollY();
    public static void set_scrollY(double value);
    public static BarProp get_scrollbars();
    public static void set_scrollbars(BarProp value);
    public static Window get_self();
    public static void set_self(Window value);
    public static SpeechSynthesis get_speechSynthesis();
    public static void set_speechSynthesis(SpeechSynthesis value);
    public static string get_status();
    public static void set_status(string value);
    public static BarProp get_statusbar();
    public static void set_statusbar(BarProp value);
    public static StyleMedia get_styleMedia();
    public static void set_styleMedia(StyleMedia value);
    public static BarProp get_toolbar();
    public static void set_toolbar(BarProp value);
    public static Window get_top();
    public static void set_top(Window value);
    public static Window get_window();
    public static void set_window(Window value);
    public static void alert();
    public static void alert(object message);
    public static void blur();
    public static void cancelAnimationFrame(double handle);
    public static void captureEvents();
    public static void close();
    public static bool confirm();
    public static bool confirm(string message);
    public static Promise`1<ImageBitmap> createImageBitmap(Union`7<HTMLImageElement, SVGImageElement, HTMLVideoElement, HTMLCanvasElement, ImageBitmap, ImageData, Blob> image);
    public static Promise`1<ImageBitmap> createImageBitmap(HTMLImageElement image);
    public static Promise`1<ImageBitmap> createImageBitmap(SVGImageElement image);
    public static Promise`1<ImageBitmap> createImageBitmap(HTMLVideoElement image);
    public static Promise`1<ImageBitmap> createImageBitmap(HTMLCanvasElement image);
    public static Promise`1<ImageBitmap> createImageBitmap(ImageBitmap image);
    public static Promise`1<ImageBitmap> createImageBitmap(ImageData image);
    public static Promise`1<ImageBitmap> createImageBitmap(Blob image);
    public static Promise`1<ImageBitmap> createImageBitmap(Union`7<HTMLImageElement, SVGImageElement, HTMLVideoElement, HTMLCanvasElement, ImageBitmap, ImageData, Blob> image, ImageBitmapOptions options);
    public static Promise`1<ImageBitmap> createImageBitmap(HTMLImageElement image, ImageBitmapOptions options);
    public static Promise`1<ImageBitmap> createImageBitmap(SVGImageElement image, ImageBitmapOptions options);
    public static Promise`1<ImageBitmap> createImageBitmap(HTMLVideoElement image, ImageBitmapOptions options);
    public static Promise`1<ImageBitmap> createImageBitmap(HTMLCanvasElement image, ImageBitmapOptions options);
    public static Promise`1<ImageBitmap> createImageBitmap(ImageBitmap image, ImageBitmapOptions options);
    public static Promise`1<ImageBitmap> createImageBitmap(ImageData image, ImageBitmapOptions options);
    public static Promise`1<ImageBitmap> createImageBitmap(Blob image, ImageBitmapOptions options);
    public static Promise`1<ImageBitmap> createImageBitmap(Union`7<HTMLImageElement, SVGImageElement, HTMLVideoElement, HTMLCanvasElement, ImageBitmap, ImageData, Blob> image, double sx, double sy, double sw, double sh);
    public static Promise`1<ImageBitmap> createImageBitmap(HTMLImageElement image, double sx, double sy, double sw, double sh);
    public static Promise`1<ImageBitmap> createImageBitmap(SVGImageElement image, double sx, double sy, double sw, double sh);
    public static Promise`1<ImageBitmap> createImageBitmap(HTMLVideoElement image, double sx, double sy, double sw, double sh);
    public static Promise`1<ImageBitmap> createImageBitmap(HTMLCanvasElement image, double sx, double sy, double sw, double sh);
    public static Promise`1<ImageBitmap> createImageBitmap(ImageBitmap image, double sx, double sy, double sw, double sh);
    public static Promise`1<ImageBitmap> createImageBitmap(ImageData image, double sx, double sy, double sw, double sh);
    public static Promise`1<ImageBitmap> createImageBitmap(Blob image, double sx, double sy, double sw, double sh);
    public static Promise`1<ImageBitmap> createImageBitmap(Union`7<HTMLImageElement, SVGImageElement, HTMLVideoElement, HTMLCanvasElement, ImageBitmap, ImageData, Blob> image, double sx, double sy, double sw, double sh, ImageBitmapOptions options);
    public static Promise`1<ImageBitmap> createImageBitmap(HTMLImageElement image, double sx, double sy, double sw, double sh, ImageBitmapOptions options);
    public static Promise`1<ImageBitmap> createImageBitmap(SVGImageElement image, double sx, double sy, double sw, double sh, ImageBitmapOptions options);
    public static Promise`1<ImageBitmap> createImageBitmap(HTMLVideoElement image, double sx, double sy, double sw, double sh, ImageBitmapOptions options);
    public static Promise`1<ImageBitmap> createImageBitmap(HTMLCanvasElement image, double sx, double sy, double sw, double sh, ImageBitmapOptions options);
    public static Promise`1<ImageBitmap> createImageBitmap(ImageBitmap image, double sx, double sy, double sw, double sh, ImageBitmapOptions options);
    public static Promise`1<ImageBitmap> createImageBitmap(ImageData image, double sx, double sy, double sw, double sh, ImageBitmapOptions options);
    public static Promise`1<ImageBitmap> createImageBitmap(Blob image, double sx, double sy, double sw, double sh, ImageBitmapOptions options);
    public static void departFocus(NavigationReason navigationReason, FocusNavigationOrigin origin);
    public static void focus();
    public static CSSStyleDeclaration getComputedStyle(Element elt);
    public static CSSStyleDeclaration getComputedStyle(Element elt, string pseudoElt);
    public static CSSRuleList getMatchedCSSRules(Element elt);
    public static CSSRuleList getMatchedCSSRules(Element elt, string pseudoElt);
    public static Selection getSelection();
    public static MediaQueryList matchMedia(string mediaQuery);
    public static void moveBy();
    public static void moveBy(double x);
    public static void moveBy(double x, double y);
    public static void moveTo();
    public static void moveTo(double x);
    public static void moveTo(double x, double y);
    public static void msWriteProfilerMark(string profilerMarkName);
    public static Window open();
    public static Window open(string url);
    public static Window open(string url, string target);
    public static Window open(string url, string target, string features);
    public static Window open(string url, string target, string features, bool replace);
    public static void postMessage(object message, string targetOrigin);
    public static void postMessage(object message, string targetOrigin, Object[] transfer);
    public static void print();
    public static string prompt();
    public static string prompt(string message);
    public static string prompt(string message, string _default);
    public static void releaseEvents();
    public static double requestAnimationFrame(FrameRequestCallback callback);
    public static void resizeBy();
    public static void resizeBy(double x);
    public static void resizeBy(double x, double y);
    public static void resizeTo();
    public static void resizeTo(double x);
    public static void resizeTo(double x, double y);
    public static void scroll();
    public static void scroll(ScrollToOptions options);
    public static void scroll(double x);
    public static void scroll(double x, double y);
    public static void scrollBy();
    public static void scrollBy(ScrollToOptions options);
    public static void scrollBy(double x);
    public static void scrollBy(double x, double y);
    public static void scrollTo();
    public static void scrollTo(ScrollToOptions options);
    public static void scrollTo(double x);
    public static void scrollTo(double x, double y);
    public static void stop();
    public static void webkitCancelAnimationFrame(double handle);
    public static WebKitPoint webkitConvertPointFromNodeToPage(Node node, WebKitPoint pt);
    public static WebKitPoint webkitConvertPointFromPageToNode(Node node, WebKitPoint pt);
    public static double webkitRequestAnimationFrame(FrameRequestCallback callback);
    public static string toString();
    public static bool dispatchEvent(Event evt);
    public static void clearInterval();
    public static void clearInterval(double handle);
    public static void clearTimeout();
    public static void clearTimeout(double handle);
    public static double setInterval(setIntervalFn handler, double timeout);
    public static double setInterval(object handler);
    [ExpandParamsAttribute]
public static double setInterval(object handler, object timeout, Object[] args);
    public static double setTimeout(setTimeoutFn handler, double timeout);
    public static double setTimeout(object handler);
    [ExpandParamsAttribute]
public static double setTimeout(object handler, object timeout, Object[] args);
    public static void clearImmediate(double handle);
    public static double setImmediate(setImmediateFn handler);
    [ExpandParamsAttribute]
public static double setImmediate(object handler, Object[] args);
    public static Storage get_sessionStorage();
    public static void set_sessionStorage(Storage value);
    public static Storage get_localStorage();
    public static void set_localStorage(Storage value);
    public static Console get_console();
    public static void set_console(Console value);
    public static oncontextmenuFn get_onpointercancel();
    public static void set_onpointercancel(oncontextmenuFn value);
    public static oncontextmenuFn get_onpointerdown();
    public static void set_onpointerdown(oncontextmenuFn value);
    public static oncontextmenuFn get_onpointerenter();
    public static void set_onpointerenter(oncontextmenuFn value);
    public static oncontextmenuFn get_onpointerleave();
    public static void set_onpointerleave(oncontextmenuFn value);
    public static oncontextmenuFn get_onpointermove();
    public static void set_onpointermove(oncontextmenuFn value);
    public static oncontextmenuFn get_onpointerout();
    public static void set_onpointerout(oncontextmenuFn value);
    public static oncontextmenuFn get_onpointerover();
    public static void set_onpointerover(oncontextmenuFn value);
    public static oncontextmenuFn get_onpointerup();
    public static void set_onpointerup(oncontextmenuFn value);
    public static onmousewheelFn get_onwheel();
    public static void set_onwheel(onmousewheelFn value);
    public static IDBFactory get_indexedDB();
    public static void set_indexedDB(IDBFactory value);
    public static string atob(string encodedString);
    public static string btoa(string rawString);
    public static Promise`1<Response> fetch();
    public static Promise`1<Response> fetch(Union`2<Request, string> input);
    public static Promise`1<Response> fetch(Request input);
    public static Promise`1<Response> fetch(string input);
    public static Promise`1<Response> fetch(Union`2<Request, string> input, RequestInit init);
    public static Promise`1<Response> fetch(Request input, RequestInit init);
    public static Promise`1<Response> fetch(string input, RequestInit init);
    [WhereAttribute("K", "H5.Core.KeyOf`1<H5.Core.dom/WindowEventMap>")]
public static void addEventListener(K type, addEventListenerFn`1<K> listener);
    [WhereAttribute("K", "H5.Core.KeyOf`1<H5.Core.dom/WindowEventMap>")]
public static void addEventListener(K type, addEventListenerFn`1<K> listener, Union`2<bool, AddEventListenerOptions> options);
    [WhereAttribute("K", "H5.Core.KeyOf`1<H5.Core.dom/WindowEventMap>")]
public static void addEventListener(K type, addEventListenerFn`1<K> listener, bool options);
    [WhereAttribute("K", "H5.Core.KeyOf`1<H5.Core.dom/WindowEventMap>")]
public static void addEventListener(K type, addEventListenerFn`1<K> listener, AddEventListenerOptions options);
    public static void addEventListener(string type, EventListenerOrEventListenerObject listener);
    public static void addEventListener(string type, Union`2<EventListener, EventListenerObject> listener);
    public static void addEventListener(string type, EventListener listener);
    public static void addEventListener(string type, EventListenerObject listener);
    public static void addEventListener(string type, Action`1<Event> listener);
    public static void addEventListener(string type, EventListenerOrEventListenerObject listener, Union`2<bool, AddEventListenerOptions> options);
    public static void addEventListener(string type, Union`2<EventListener, EventListenerObject> listener, bool options);
    public static void addEventListener(string type, Union`2<EventListener, EventListenerObject> listener, AddEventListenerOptions options);
    public static void addEventListener(string type, EventListener listener, bool options);
    public static void addEventListener(string type, EventListener listener, AddEventListenerOptions options);
    public static void addEventListener(string type, EventListenerObject listener, bool options);
    public static void addEventListener(string type, EventListenerObject listener, AddEventListenerOptions options);
    public static void addEventListener(string type, Action`1<Event> listener, Union`2<bool, AddEventListenerOptions> options);
    public static void addEventListener(string type, Action`1<Event> listener, bool options);
    public static void addEventListener(string type, Action`1<Event> listener, AddEventListenerOptions options);
    [WhereAttribute("K", "H5.Core.KeyOf`1<H5.Core.dom/WindowEventMap>")]
public static void removeEventListener(K type, removeEventListenerFn`1<K> listener);
    [WhereAttribute("K", "H5.Core.KeyOf`1<H5.Core.dom/WindowEventMap>")]
public static void removeEventListener(K type, removeEventListenerFn`1<K> listener, Union`2<bool, EventListenerOptions> options);
    [WhereAttribute("K", "H5.Core.KeyOf`1<H5.Core.dom/WindowEventMap>")]
public static void removeEventListener(K type, removeEventListenerFn`1<K> listener, bool options);
    [WhereAttribute("K", "H5.Core.KeyOf`1<H5.Core.dom/WindowEventMap>")]
public static void removeEventListener(K type, removeEventListenerFn`1<K> listener, EventListenerOptions options);
    public static void removeEventListener(string type, EventListenerOrEventListenerObject listener);
    public static void removeEventListener(string type, Union`2<EventListener, EventListenerObject> listener);
    public static void removeEventListener(string type, EventListener listener);
    public static void removeEventListener(string type, EventListenerObject listener);
    public static void removeEventListener(string type, Action`1<Event> listener);
    public static void removeEventListener(string type, EventListenerOrEventListenerObject listener, Union`2<bool, EventListenerOptions> options);
    public static void removeEventListener(string type, Union`2<EventListener, EventListenerObject> listener, bool options);
    public static void removeEventListener(string type, Union`2<EventListener, EventListenerObject> listener, EventListenerOptions options);
    public static void removeEventListener(string type, EventListener listener, bool options);
    public static void removeEventListener(string type, EventListener listener, EventListenerOptions options);
    public static void removeEventListener(string type, EventListenerObject listener, bool options);
    public static void removeEventListener(string type, EventListenerObject listener, EventListenerOptions options);
    public static void removeEventListener(string type, Action`1<Event> listener, Union`2<bool, EventListenerOptions> options);
    public static void removeEventListener(string type, Action`1<Event> listener, bool options);
    public static void removeEventListener(string type, Action`1<Event> listener, EventListenerOptions options);
}
[ScopeAttribute]
[GlobalMethodsAttribute]
public static class H5.Core.es5 : object {
    public static double NaN;
    public static double Infinity;
    public static object eval(string x);
    public static double parseInt(string s);
    public static double parseInt(string s, double radix);
    public static double parseFloat(string string);
    public static bool isNaN(double number);
    public static bool isFinite(double number);
    public static string decodeURI(string encodedURI);
    public static string decodeURIComponent(string encodedURIComponent);
    public static string encodeURI(string uri);
    public static string encodeURIComponent(string uriComponent);
    public static string escape(string string);
    public static string unescape(string string);
}
[AttributeUsageAttribute]
public class H5.Core.ExportedAsAttribute : Attribute {
    [DebuggerBrowsableAttribute]
private bool <IsExportAssign>k__BackingField;
    [DebuggerBrowsableAttribute]
private bool <IsExportDefault>k__BackingField;
    [DebuggerBrowsableAttribute]
private bool <IsStandalone>k__BackingField;
    [DebuggerBrowsableAttribute]
private bool <AsNamespace>k__BackingField;
    public bool IsExportAssign { get; public set; }
    public bool IsExportDefault { get; public set; }
    public bool IsStandalone { get; public set; }
    public bool AsNamespace { get; public set; }
    public ExportedAsAttribute(string fullName);
    public bool get_IsExportAssign();
    public void set_IsExportAssign(bool value);
    public bool get_IsExportDefault();
    public void set_IsExportDefault(bool value);
    public bool get_IsStandalone();
    public void set_IsStandalone(bool value);
    public bool get_AsNamespace();
    public void set_AsNamespace(bool value);
}
[AttributeUsageAttribute]
public class H5.Core.FormerInterfaceAttribute : Attribute {
}
public class H5.Core.GeneratedAttribute : Attribute {
}
[AttributeUsageAttribute]
public class H5.Core.GenericDefaultAttribute : Attribute {
    public GenericDefaultAttribute(string typeParamName, Type defaultType);
    public GenericDefaultAttribute(string typeParamName, string defaultTypeOfAnotherParam);
}
[AttributeUsageAttribute]
public class H5.Core.InterfaceWrapperAttribute : Attribute {
}
[IgnoreCastAttribute]
[ObjectLiteralAttribute]
[ExportedAsAttribute("object")]
public interface H5.Core.IObject {
}
[IgnoreGenericAttribute]
[IgnoreCastAttribute]
[NameAttribute("String")]
[ExportedAsAttribute("KeyOf")]
public class H5.Core.KeyOf`1 : object {
    [TemplateAttribute("{this}")]
public static string Name;
}
[IgnoreCastAttribute]
[IgnoreGenericAttribute]
[VirtualAttribute]
public abstract class H5.Core.LiteralType`1 : TypeAlias`1<T> {
    [TemplateAttribute("{arg1} === {arg2}")]
public static bool op_Equality(LiteralType`1<T> arg1, LiteralType`1<T> arg2);
    [TemplateAttribute("{arg1} !== {arg2}")]
public static bool op_Inequality(LiteralType`1<T> arg1, LiteralType`1<T> arg2);
    [TemplateAttribute("{arg1} === {arg2}")]
public static bool op_Equality(LiteralType`1<T> arg1, T arg2);
    [TemplateAttribute("{arg1} !== {arg2}")]
public static bool op_Inequality(LiteralType`1<T> arg1, T arg2);
    [TemplateAttribute("{arg1} === {arg2}")]
public static bool op_Equality(T arg1, LiteralType`1<T> arg2);
    [TemplateAttribute("{arg1} !== {arg2}")]
public static bool op_Inequality(T arg1, LiteralType`1<T> arg2);
}
[IgnoreCastAttribute]
[VirtualAttribute]
[ExportedAsAttribute("never")]
public class H5.Core.Never : object {
    public static byte op_Implicit(Never n);
    public static sbyte op_Implicit(Never n);
    public static short op_Implicit(Never n);
    public static ushort op_Implicit(Never n);
    public static int op_Implicit(Never n);
    public static UInt32 op_Implicit(Never n);
    public static long op_Implicit(Never n);
    public static ulong op_Implicit(Never n);
    public static float op_Implicit(Never n);
    public static double op_Implicit(Never n);
    public static decimal op_Implicit(Never n);
    public static bool op_Implicit(Never n);
    public static char op_Implicit(Never n);
    public static string op_Implicit(Never n);
    public static DateTime op_Implicit(Never n);
}
[IgnoreCastAttribute]
[VirtualAttribute]
[ExportedAsAttribute("null")]
public class H5.Core.Null : object {
    [TemplateAttribute("null")]
public static Null Value;
    [TemplateAttribute("null")]
public static T As();
    public static Null op_Implicit(Undefined u);
    public static Null op_Implicit(Never n);
    public static byte op_Implicit(Null n);
    public static sbyte op_Implicit(Null n);
    public static short op_Implicit(Null n);
    public static ushort op_Implicit(Null n);
    public static int op_Implicit(Null n);
    public static UInt32 op_Implicit(Null n);
    public static long op_Implicit(Null n);
    public static ulong op_Implicit(Null n);
    public static float op_Implicit(Null n);
    public static double op_Implicit(Null n);
    public static decimal op_Implicit(Null n);
    public static bool op_Implicit(Null n);
    public static char op_Implicit(Null n);
    public static string op_Implicit(Null n);
    public static DateTime op_Implicit(Null n);
}
[CombinedClassAttribute]
[StaticInterfaceAttribute("NumberConstructor")]
[NamespaceAttribute("False")]
[VirtualAttribute]
public class H5.Core.Number : Object {
    [DebuggerBrowsableAttribute]
private static Number <prototype>k__BackingField;
    [DebuggerBrowsableAttribute]
private static double <MAX_VALUE>k__BackingField;
    [DebuggerBrowsableAttribute]
private static double <MIN_VALUE>k__BackingField;
    [DebuggerBrowsableAttribute]
private static double <NaN>k__BackingField;
    [DebuggerBrowsableAttribute]
private static double <NEGATIVE_INFINITY>k__BackingField;
    [DebuggerBrowsableAttribute]
private static double <POSITIVE_INFINITY>k__BackingField;
    public static Number prototype { get; }
    public static double MAX_VALUE { get; }
    public static double MIN_VALUE { get; }
    public static double NaN { get; }
    public static double NEGATIVE_INFINITY { get; }
    public static double POSITIVE_INFINITY { get; }
    public Number(object value);
    public static Number get_prototype();
    public static double get_MAX_VALUE();
    public static double get_MIN_VALUE();
    public static double get_NaN();
    public static double get_NEGATIVE_INFINITY();
    public static double get_POSITIVE_INFINITY();
    public static double Self();
    public static double Self(object value);
    public virtual string toString();
    public virtual string toString(double radix);
    public virtual string toFixed();
    public virtual string toFixed(double fractionDigits);
    public virtual string toExponential();
    public virtual string toExponential(double fractionDigits);
    public virtual string toPrecision();
    public virtual string toPrecision(double precision);
    public virtual double valueOf();
    public virtual string toLocaleString();
    public virtual string toLocaleString(Union`2<string, String[]> locales);
    public virtual string toLocaleString(string locales);
    public virtual string toLocaleString(String[] locales);
    public virtual string toLocaleString(Union`2<string, String[]> locales, NumberFormatOptions options);
    public virtual string toLocaleString(string locales, NumberFormatOptions options);
    public virtual string toLocaleString(String[] locales, NumberFormatOptions options);
    public static Number op_Implicit(double value);
    [TemplateAttribute("{this} != null ? {this}.valueOf() : {this}")]
public static double op_Implicit(Number value);
}
[IgnoreCastAttribute]
[NamespaceAttribute("False")]
[VirtualAttribute]
public interface H5.Core.NumberConstructor {
    public Number prototype { get; }
    public double MAX_VALUE { get; }
    public double MIN_VALUE { get; }
    public double NaN { get; }
    public double NEGATIVE_INFINITY { get; }
    public double POSITIVE_INFINITY { get; }
    [TemplateAttribute("new {this}()")]
public abstract virtual Number New();
    [TemplateAttribute("new {this}({0})")]
public abstract virtual Number New(object value);
    [TemplateAttribute("{this}()")]
public abstract virtual double Self();
    [TemplateAttribute("{this}({0})")]
public abstract virtual double Self(object value);
    public abstract virtual Number get_prototype();
    public abstract virtual double get_MAX_VALUE();
    public abstract virtual double get_MIN_VALUE();
    public abstract virtual double get_NaN();
    public abstract virtual double get_NEGATIVE_INFINITY();
    public abstract virtual double get_POSITIVE_INFINITY();
}
[CombinedClassAttribute]
[StaticInterfaceAttribute("ObjectConstructor")]
[NamespaceAttribute("False")]
[VirtualAttribute]
public class H5.Core.Object : object {
    [DebuggerBrowsableAttribute]
private static Object <prototype>k__BackingField;
    [DebuggerBrowsableAttribute]
private Function <constructor>k__BackingField;
    public static Object prototype { get; }
    public Function constructor { get; public set; }
    public Object(object value);
    public static Object get_prototype();
    public static object Self();
    public static object Self(object value);
    public static object getPrototypeOf(object o);
    public static Union`2<PropertyDescriptor, Undefined> getOwnPropertyDescriptor(object o, string p);
    public static String[] getOwnPropertyNames(object o);
    public static object create(IObject o);
    public static object create(IObject o, Intersection`2<PropertyDescriptorMap, ThisType`1<object>> properties);
    public static object defineProperty(object o, string p, Intersection`2<PropertyDescriptor, ThisType`1<object>> attributes);
    public static object defineProperties(object o, Intersection`2<PropertyDescriptorMap, ThisType`1<object>> properties);
    public static T seal(T o);
    public static ReadonlyArray`1<T> freeze(T[] a);
    [WhereAttribute("T", "H5.Core.es5/Function")]
public static T freeze(T f);
    [NameAttribute("freeze")]
public static Readonly`1<T> freeze2(T o);
    public static T preventExtensions(T o);
    public static bool isSealed(object o);
    public static bool isFrozen(object o);
    public static bool isExtensible(object o);
    public static String[] keys(object o);
    public virtual Function get_constructor();
    public virtual void set_constructor(Function value);
    public virtual string toString();
    public virtual string toLocaleString();
    public virtual Object valueOf();
    public virtual bool hasOwnProperty(string v);
    public virtual bool isPrototypeOf(Object v);
    public virtual bool propertyIsEnumerable(string v);
    [EditorBrowsableAttribute]
public virtual string ToString();
    [EditorBrowsableAttribute]
public virtual bool Equals(object obj);
    [EditorBrowsableAttribute]
public virtual int GetHashCode();
}
[IgnoreCastAttribute]
[NamespaceAttribute("False")]
[VirtualAttribute]
public interface H5.Core.ObjectConstructor {
    public Object prototype { get; }
    [TemplateAttribute("new {this}()")]
public abstract virtual Object New();
    [TemplateAttribute("new {this}({0})")]
public abstract virtual Object New(object value);
    [TemplateAttribute("{this}()")]
public abstract virtual object Self();
    [TemplateAttribute("{this}({0})")]
public abstract virtual object Self(object value);
    public abstract virtual Object get_prototype();
    public abstract virtual object getPrototypeOf(object o);
    public abstract virtual Union`2<PropertyDescriptor, Undefined> getOwnPropertyDescriptor(object o, string p);
    public abstract virtual String[] getOwnPropertyNames(object o);
    public abstract virtual object create(IObject o);
    public abstract virtual object create(IObject o, Intersection`2<PropertyDescriptorMap, ThisType`1<object>> properties);
    public abstract virtual object defineProperty(object o, string p, Intersection`2<PropertyDescriptor, ThisType`1<object>> attributes);
    public abstract virtual object defineProperties(object o, Intersection`2<PropertyDescriptorMap, ThisType`1<object>> properties);
    public abstract virtual T seal(T o);
    public abstract virtual ReadonlyArray`1<T> freeze(T[] a);
    [WhereAttribute("T", "H5.Core.es5/Function")]
public abstract virtual T freeze(T f);
    [NameAttribute("freeze")]
public abstract virtual Readonly`1<T> freeze2(T o);
    public abstract virtual T preventExtensions(T o);
    public abstract virtual bool isSealed(object o);
    public abstract virtual bool isFrozen(object o);
    public abstract virtual bool isExtensible(object o);
    public abstract virtual String[] keys(object o);
}
[AttributeUsageAttribute]
public class H5.Core.ScopeAttribute : Attribute {
}
[AttributeUsageAttribute]
[VirtualAttribute]
public class H5.Core.StaticInterfaceAttribute : Attribute {
    public StaticInterfaceAttribute(string staticInterfaceName);
}
[DefaultMemberAttribute("Item")]
[CombinedClassAttribute]
[StaticInterfaceAttribute("StringConstructor")]
[NamespaceAttribute("False")]
[VirtualAttribute]
public class H5.Core.String : Object {
    [DebuggerBrowsableAttribute]
private static String <prototype>k__BackingField;
    [DebuggerBrowsableAttribute]
private double <length>k__BackingField;
    public static String prototype { get; }
    public double length { get; }
    public string Item { get; }
    public String(object value);
    public static String get_prototype();
    public static string Self();
    public static string Self(object value);
    [ExpandParamsAttribute]
public static string fromCharCode(Double[] codes);
    public virtual string toString();
    public virtual string charAt(double pos);
    public virtual double charCodeAt(double index);
    [ExpandParamsAttribute]
public virtual string concat(String[] strings);
    public virtual double indexOf(string searchString);
    public virtual double indexOf(string searchString, double position);
    public virtual double lastIndexOf(string searchString);
    public virtual double lastIndexOf(string searchString, double position);
    public virtual double localeCompare(string that);
    public virtual RegExpMatchArray match(Union`2<string, RegExp> regexp);
    public virtual RegExpMatchArray match(string regexp);
    public virtual RegExpMatchArray match(RegExp regexp);
    public virtual string replace(Union`2<string, RegExp> searchValue, string replaceValue);
    public virtual string replace(string searchValue, string replaceValue);
    public virtual string replace(RegExp searchValue, string replaceValue);
    public virtual string replace(Union`2<string, RegExp> searchValue, replaceFn replacer);
    public virtual string replace(string searchValue, replaceFn replacer);
    public virtual string replace(RegExp searchValue, replaceFn replacer);
    public virtual double search(Union`2<string, RegExp> regexp);
    public virtual double search(string regexp);
    public virtual double search(RegExp regexp);
    public virtual string slice();
    public virtual string slice(double start);
    public virtual string slice(double start, double end);
    public virtual String[] split(Union`2<string, RegExp> separator);
    public virtual String[] split(string separator);
    public virtual String[] split(RegExp separator);
    public virtual String[] split(Union`2<string, RegExp> separator, double limit);
    public virtual String[] split(string separator, double limit);
    public virtual String[] split(RegExp separator, double limit);
    public virtual string substring(double start);
    public virtual string substring(double start, double end);
    public virtual string toLowerCase();
    public virtual string toLocaleLowerCase();
    public virtual string toUpperCase();
    public virtual string toLocaleUpperCase();
    public virtual string trim();
    public virtual double get_length();
    public virtual string substr(double from);
    public virtual string substr(double from, double length);
    public virtual string valueOf();
    public virtual string get_Item(double index);
    public virtual double localeCompare(string that, Union`2<string, String[]> locales);
    public virtual double localeCompare(string that, string locales);
    public virtual double localeCompare(string that, String[] locales);
    public virtual double localeCompare(string that, Union`2<string, String[]> locales, CollatorOptions options);
    public virtual double localeCompare(string that, string locales, CollatorOptions options);
    public virtual double localeCompare(string that, String[] locales, CollatorOptions options);
    public static String op_Implicit(string value);
    [TemplateAttribute("{this} != null ? {this}.valueOf() : {this}")]
public static string op_Implicit(String value);
}
[IgnoreCastAttribute]
[NamespaceAttribute("False")]
[VirtualAttribute]
public interface H5.Core.StringConstructor {
    public String prototype { get; }
    [TemplateAttribute("new {this}()")]
public abstract virtual String New();
    [TemplateAttribute("new {this}({0})")]
public abstract virtual String New(object value);
    [TemplateAttribute("{this}()")]
public abstract virtual string Self();
    [TemplateAttribute("{this}({0})")]
public abstract virtual string Self(object value);
    public abstract virtual String get_prototype();
    [ExpandParamsAttribute]
public abstract virtual string fromCharCode(Double[] codes);
}
[IgnoreCastAttribute]
[NameAttribute("symbol")]
[ExportedAsAttribute("symbol")]
public abstract class H5.Core.symbol : object {
}
[NameAttribute("this")]
public static class H5.Core.This : object {
    [TemplateAttribute("this")]
public static object Instance;
    [TemplateAttribute("{this}[{name}].call(null, {args})")]
public static void Call(string name, Object[] args);
    [TemplateAttribute("{this}[{name}].call(null, {args})")]
public static T Call(string name, Object[] args);
    [TemplateAttribute("{this}[{name}]")]
public static object Get(string name);
    [TemplateAttribute("{this}[{name}]")]
public static T Get(string name);
    [TemplateAttribute("{this}[{name}] = {value}")]
public static void Set(string name, object value);
}
[IgnoreGenericAttribute]
[IgnoreCastAttribute]
[VirtualAttribute]
public abstract class H5.Core.This`1 : object {
    [DebuggerBrowsableAttribute]
private T <Value>k__BackingField;
    public T Value { get; }
    [TemplateAttribute("{this}")]
public T get_Value();
    [TemplateAttribute("{this}")]
public TSuccessor As();
    public static T op_Implicit(This`1<T> th);
    public static This`1<T> op_Implicit(T value);
}
[IgnoreCastAttribute]
[IgnoreGenericAttribute]
[VirtualAttribute]
public abstract class H5.Core.TypeAlias`1 : object {
    [TemplateAttribute("{this}")]
public TOriginal Value;
    public static TOriginal op_Implicit(TypeAlias`1<TOriginal> value);
}
[IgnoreCastAttribute]
[VirtualAttribute]
[ExportedAsAttribute("undefined")]
public class H5.Core.Undefined : object {
    [TemplateAttribute("undefined")]
public static Undefined Value;
    [TemplateAttribute("undefined")]
public static T As();
    public static Undefined op_Implicit(Null n);
    public static Undefined op_Implicit(Never n);
    public static byte op_Implicit(Undefined u);
    public static sbyte op_Implicit(Undefined u);
    public static short op_Implicit(Undefined u);
    public static ushort op_Implicit(Undefined u);
    public static int op_Implicit(Undefined u);
    public static UInt32 op_Implicit(Undefined u);
    public static long op_Implicit(Undefined u);
    public static ulong op_Implicit(Undefined u);
    public static float op_Implicit(Undefined u);
    public static double op_Implicit(Undefined u);
    public static decimal op_Implicit(Undefined u);
    public static bool op_Implicit(Undefined u);
    public static char op_Implicit(Undefined u);
    public static string op_Implicit(Undefined u);
    public static DateTime op_Implicit(Undefined u);
}
[IgnoreCastAttribute]
[NameAttribute("unique symbol")]
[ExportedAsAttribute("unique symbol")]
[VirtualAttribute]
public class H5.Core.UniqueSymbol : symbol {
}
[IgnoreCastAttribute]
[VirtualAttribute]
[ExportedAsAttribute("void")]
public class H5.Core.Void : object {
    public static Void op_Implicit(Undefined u);
    public static Void op_Implicit(Null n);
    public static Void op_Implicit(Never n);
}
