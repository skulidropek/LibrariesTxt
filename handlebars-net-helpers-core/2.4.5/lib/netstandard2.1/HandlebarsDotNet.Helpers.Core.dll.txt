[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
public class HandlebarsDotNet.Helpers.Attributes.HandlebarsWriterAttribute : Attribute {
    [CompilerGeneratedAttribute]
private WriterType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private HelperUsage <Usage>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PassContext>k__BackingField;
    public WriterType Type { get; }
    public string Name { get; public set; }
    public HelperUsage Usage { get; public set; }
    public bool PassContext { get; public set; }
    public HandlebarsWriterAttribute(WriterType type, string name);
    public HandlebarsWriterAttribute(WriterType type, HelperUsage usage, string name);
    public HandlebarsWriterAttribute(WriterType type, HelperUsage usage, bool passContext, string name);
    [CompilerGeneratedAttribute]
public WriterType get_Type();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public HelperUsage get_Usage();
    [CompilerGeneratedAttribute]
public void set_Usage(HelperUsage value);
    [CompilerGeneratedAttribute]
public bool get_PassContext();
    [CompilerGeneratedAttribute]
public void set_PassContext(bool value);
}
public enum HandlebarsDotNet.Helpers.Enums.Category : Enum {
    public int value__;
    public static Category Constants;
    public static Category Enumerable;
    public static Category Environment;
    public static Category Math;
    public static Category Regex;
    public static Category String;
    public static Category Url;
    public static Category DateTime;
    public static Category XPath;
    public static Category Xeger;
    public static Category Random;
    public static Category JsonPath;
    public static Category DynamicLinq;
    public static Category Humanizer;
    public static Category Boolean;
    public static Category Object;
    public static Category Xslt;
}
public enum HandlebarsDotNet.Helpers.Enums.HelperUsage : Enum {
    public int value__;
    public static HelperUsage Both;
    public static HelperUsage Normal;
    public static HelperUsage Block;
}
public enum HandlebarsDotNet.Helpers.Enums.WriterType : Enum {
    public int value__;
    public static WriterType Value;
    public static WriterType String;
}
[ExtensionAttribute]
public static class HandlebarsDotNet.Helpers.Extensions.ParameterInfoExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static bool IsParam(ParameterInfo parameterInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class HandlebarsDotNet.Helpers.Helpers.BaseHelpers : object {
    protected IHandlebars Context;
    protected BaseHelpers(IHandlebars context);
}
public interface HandlebarsDotNet.Helpers.Helpers.IHelpers {
}
[NullableContextAttribute("2")]
[GeneratedCodeAttribute("simple-json", "1.0.0")]
internal interface HandlebarsDotNet.Helpers.Json.IJsonSerializerStrategy {
    public abstract virtual bool TrySerializeNonPrimitiveObject(object input, Object& output);
    public abstract virtual object DeserializeObject(object value, Type type);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[GeneratedCodeAttribute("simple-json", "1.0.0")]
[EditorBrowsableAttribute("1")]
public class HandlebarsDotNet.Helpers.Json.JsonArray : List`1<object> {
    public JsonArray(int capacity);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[GeneratedCodeAttribute("simple-json", "1.0.0")]
[EditorBrowsableAttribute("1")]
public class HandlebarsDotNet.Helpers.Json.JsonObject : object {
    private Dictionary`2<string, object> _members;
    [NullableAttribute("2")]
public object Item { get; }
    public ICollection`1<string> Keys { get; }
    public ICollection`1<object> Values { get; }
    public object Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public JsonObject(IEqualityComparer`1<string> comparer);
    [NullableContextAttribute("2")]
public object get_Item(int index);
    internal static object GetAtIndex(IDictionary`2<string, object> obj, int index);
    public sealed virtual void Add(string key, object value);
    public sealed virtual bool ContainsKey(string key);
    public sealed virtual ICollection`1<string> get_Keys();
    public sealed virtual bool Remove(string key);
    public sealed virtual bool TryGetValue(string key, Object& value);
    public sealed virtual ICollection`1<object> get_Values();
    public sealed virtual object get_Item(string key);
    public sealed virtual void set_Item(string key, object value);
    public sealed virtual void Add(KeyValuePair`2<string, object> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<string, object> item);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual bool Remove(KeyValuePair`2<string, object> item);
    public sealed virtual IEnumerator`1<KeyValuePair`2<string, object>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[GeneratedCodeAttribute("simple-json", "1.0.0")]
internal class HandlebarsDotNet.Helpers.Json.PocoJsonSerializerStrategy : object {
    internal IDictionary`2<Type, ConstructorDelegate> ConstructorCache;
    internal IDictionary`2<Type, IDictionary`2<string, GetDelegate>> GetCache;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal IDictionary`2<Type, IDictionary`2<string, KeyValuePair`2<Type, SetDelegate>>> SetCache;
    internal static Type[] EmptyTypes;
    internal static Type[] ArrayConstructorParameterTypes;
    private static String[] Iso8601Format;
    private static PocoJsonSerializerStrategy();
    protected virtual string MapClrMemberNameToJsonFieldName(string clrPropertyName);
    internal virtual ConstructorDelegate ContructorDelegateFactory(Type key);
    internal virtual IDictionary`2<string, GetDelegate> GetterValueFactory(Type type);
    internal virtual IDictionary`2<string, KeyValuePair`2<Type, SetDelegate>> SetterValueFactory(Type type);
    [NullableContextAttribute("2")]
public virtual bool TrySerializeNonPrimitiveObject(object input, Object& output);
    [NullableContextAttribute("2")]
public virtual object DeserializeObject(object value, Type type);
    protected virtual object SerializeEnum(Enum p);
    [NullableContextAttribute("2")]
protected virtual bool TrySerializeKnownTypes(object input, Object& output);
    protected virtual bool TrySerializeUnknownTypes(object input, Object& output);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[GeneratedCodeAttribute("reflection-utils", "1.0.0")]
internal class HandlebarsDotNet.Helpers.Json.ReflectionUtils : object {
    private static Object[] EmptyObjects;
    private static ReflectionUtils();
    public static Type GetTypeInfo(Type type);
    [NullableContextAttribute("2")]
public static Attribute GetAttribute(MemberInfo info, Type type);
    public static Type GetGenericListElementType(Type type);
    [NullableContextAttribute("2")]
public static Attribute GetAttribute(Type objectType, Type attributeType);
    public static Type[] GetGenericTypeArguments(Type type);
    public static bool IsTypeGeneric(Type type);
    public static bool IsTypeGenericCollectionInterface(Type type);
    public static bool IsAssignableFrom(Type type1, Type type2);
    public static bool IsTypeDictionary(Type type);
    public static bool IsNullableType(Type type);
    [NullableContextAttribute("2")]
public static object ToNullableType(object obj, Type nullableType);
    public static bool IsValueType(Type type);
    public static IEnumerable`1<ConstructorInfo> GetConstructors(Type type);
    public static ConstructorInfo GetConstructorInfo(Type type, Type[] argsType);
    public static IEnumerable`1<PropertyInfo> GetProperties(Type type);
    public static IEnumerable`1<FieldInfo> GetFields(Type type);
    public static MethodInfo GetGetterMethodInfo(PropertyInfo propertyInfo);
    public static MethodInfo GetSetterMethodInfo(PropertyInfo propertyInfo);
    public static ConstructorDelegate GetConstructor(ConstructorInfo constructorInfo);
    public static ConstructorDelegate GetConstructor(Type type, Type[] argsType);
    public static ConstructorDelegate GetConstructorByReflection(ConstructorInfo constructorInfo);
    public static ConstructorDelegate GetConstructorByReflection(Type type, Type[] argsType);
    public static ConstructorDelegate GetConstructorByExpression(ConstructorInfo constructorInfo);
    public static ConstructorDelegate GetConstructorByExpression(Type type, Type[] argsType);
    public static GetDelegate GetGetMethod(PropertyInfo propertyInfo);
    public static GetDelegate GetGetMethod(FieldInfo fieldInfo);
    public static GetDelegate GetGetMethodByReflection(PropertyInfo propertyInfo);
    public static GetDelegate GetGetMethodByReflection(FieldInfo fieldInfo);
    public static GetDelegate GetGetMethodByExpression(PropertyInfo propertyInfo);
    public static GetDelegate GetGetMethodByExpression(FieldInfo fieldInfo);
    public static SetDelegate GetSetMethod(PropertyInfo propertyInfo);
    public static SetDelegate GetSetMethod(FieldInfo fieldInfo);
    public static SetDelegate GetSetMethodByReflection(PropertyInfo propertyInfo);
    public static SetDelegate GetSetMethodByReflection(FieldInfo fieldInfo);
    public static SetDelegate GetSetMethodByExpression(PropertyInfo propertyInfo);
    public static SetDelegate GetSetMethodByExpression(FieldInfo fieldInfo);
    public static BinaryExpression Assign(Expression left, Expression right);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[GeneratedCodeAttribute("simple-json", "1.0.0")]
internal static class HandlebarsDotNet.Helpers.Json.SimpleJson : object {
    private static int TOKEN_NONE;
    private static int TOKEN_CURLY_OPEN;
    private static int TOKEN_CURLY_CLOSE;
    private static int TOKEN_SQUARED_OPEN;
    private static int TOKEN_SQUARED_CLOSE;
    private static int TOKEN_COLON;
    private static int TOKEN_COMMA;
    private static int TOKEN_STRING;
    private static int TOKEN_NUMBER;
    private static int TOKEN_TRUE;
    private static int TOKEN_FALSE;
    private static int TOKEN_NULL;
    private static int BUILDER_CAPACITY;
    private static Char[] EscapeTable;
    private static Char[] EscapeCharacters;
    private static string EscapeCharactersString;
    [NullableAttribute("2")]
private static IJsonSerializerStrategy _currentJsonSerializerStrategy;
    [NullableAttribute("2")]
private static PocoJsonSerializerStrategy _pocoJsonSerializerStrategy;
    public static IJsonSerializerStrategy CurrentJsonSerializerStrategy { get; public set; }
    [EditorBrowsableAttribute("2")]
public static PocoJsonSerializerStrategy PocoJsonSerializerStrategy { get; }
    private static SimpleJson();
    public static object DeserializeObject(string json);
    [NullableContextAttribute("2")]
public static bool TryDeserializeObject(string json, Object& obj);
    [NullableContextAttribute("2")]
public static object DeserializeObject(string json, Type type, IJsonSerializerStrategy jsonSerializerStrategy);
    [NullableContextAttribute("2")]
public static object DeserializeObject(string json, Type type);
    public static T DeserializeObject(string json, IJsonSerializerStrategy jsonSerializerStrategy);
    [NullableContextAttribute("2")]
public static T DeserializeObject(string json);
    [NullableContextAttribute("2")]
public static string SerializeObject(object json, IJsonSerializerStrategy jsonSerializerStrategy);
    [NullableContextAttribute("2")]
public static string SerializeObject(object json);
    public static string EscapeToJavascriptString(string jsonString);
    private static IDictionary`2<string, object> ParseObject(Char[] json, Int32& index, Boolean& success);
    private static JsonArray ParseArray(Char[] json, Int32& index, Boolean& success);
    private static object ParseValue(Char[] json, Int32& index, Boolean& success);
    private static string ParseString(Char[] json, Int32& index, Boolean& success);
    private static string ConvertFromUtf32(int utf32);
    private static object ParseNumber(Char[] json, Int32& index, Boolean& success);
    private static int GetLastIndexOfNumber(Char[] json, int index);
    private static void EatWhitespace(Char[] json, Int32& index);
    private static int LookAhead(Char[] json, int index);
    private static int NextToken(Char[] json, Int32& index);
    private static bool SerializeValue(IJsonSerializerStrategy jsonSerializerStrategy, object value, StringBuilder builder);
    private static bool SerializeObject(IJsonSerializerStrategy jsonSerializerStrategy, IEnumerable keys, IEnumerable values, StringBuilder builder);
    private static bool SerializeArray(IJsonSerializerStrategy jsonSerializerStrategy, IEnumerable anArray, StringBuilder builder);
    private static bool SerializeString(string aString, StringBuilder builder);
    private static bool SerializeNumber(object number, StringBuilder builder);
    [NullableContextAttribute("2")]
private static bool IsNumeric(object value);
    public static IJsonSerializerStrategy get_CurrentJsonSerializerStrategy();
    public static void set_CurrentJsonSerializerStrategy(IJsonSerializerStrategy value);
    public static PocoJsonSerializerStrategy get_PocoJsonSerializerStrategy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class HandlebarsDotNet.Helpers.Parsers.ArgumentsParser : object {
    private static Type[] SupportedTypes;
    private static ArgumentsParser();
    public static List`1<object> Parse(IHandlebars context, ParameterInfo[] parameters, Arguments arguments);
    [NullableContextAttribute("2")]
public static object Parse(IHandlebars context, object argument, object defaultValue, bool convertObjectArrayToStringList);
    public static object ParseAsIntLongOrDouble(IHandlebars context, object value);
    private static bool TryParseUndefinedBindingResult(UndefinedBindingResult undefinedBindingResult, List`1& parsedValue);
}
public static class HandlebarsDotNet.Helpers.Parsers.StringValueParser : object {
    [NullableContextAttribute("1")]
public static object Parse(IHandlebars context, string valueAsString);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class HandlebarsDotNet.Helpers.Utils.ArrayUtils : object {
    public static string ToArray(IEnumerable`1<object> array);
    public static bool TryParseAsObjectList(string value, List`1& list);
    private static IEnumerable`1<object> Fix(IEnumerable`1<object> array);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class HandlebarsDotNet.Helpers.Utils.DefaultValueCache : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ConcurrentDictionary`2<Type, object> Cache;
    private static DefaultValueCache();
    public static object GetDefaultValue(Type type);
    private static object CreateDefaultValue(Type type);
}
public static class HandlebarsDotNet.Helpers.Utils.EnumUtils : object {
    public static bool TryParse(object value, Nullable`1& comparisonType);
    public static TEnum IntToEnum(int value);
}
public static class HandlebarsDotNet.Helpers.Utils.ObjectUtils : object {
    [NullableContextAttribute("2")]
public static bool TryParseAsDictionary(object data, IDictionary`2& dictionary);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
