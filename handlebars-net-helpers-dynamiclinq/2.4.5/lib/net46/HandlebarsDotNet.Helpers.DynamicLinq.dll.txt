[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class HandlebarsDotNet.Helpers.DynamicLinqHelpers : BaseHelpers {
    public DynamicLinqHelpers(IHandlebars context);
    [NullableContextAttribute("2")]
[HandlebarsWriterAttribute]
public object Expression(object arg0, string arg1);
    [HandlebarsWriterAttribute]
public object Linq(object value, string selector);
    [HandlebarsWriterAttribute]
public bool All(object value, string linqPredicate);
    [HandlebarsWriterAttribute]
public bool Any(object value, string linqPredicate);
    [HandlebarsWriterAttribute]
public bool NotAny(object value, string linqPredicate);
    [HandlebarsWriterAttribute]
public double Average(object value, string linqPredicate);
    [HandlebarsWriterAttribute]
public IEnumerable Cast(object value, string typeName);
    [HandlebarsWriterAttribute]
public int Count(object value, string linqPredicate);
    [HandlebarsWriterAttribute]
public IEnumerable DefaultIfEmpty(object value, string linqPredicate, object defaultValue);
    [HandlebarsWriterAttribute]
public IEnumerable Distinct(object value, string linqPredicate);
    [NullableContextAttribute("2")]
[HandlebarsWriterAttribute]
public object First(object value, string linqPredicate);
    [NullableContextAttribute("2")]
[HandlebarsWriterAttribute]
public object FirstOrDefault(object value, string linqPredicate);
    [NullableContextAttribute("2")]
[HandlebarsWriterAttribute]
public object Last(object value, string linqPredicate);
    [NullableContextAttribute("2")]
[HandlebarsWriterAttribute]
public object LastOrDefault(object value, string linqPredicate);
    [HandlebarsWriterAttribute]
public long LongCount(object value, string linqPredicate);
    [NullableContextAttribute("2")]
[HandlebarsWriterAttribute]
public object Max(object value, string linqPredicate);
    [NullableContextAttribute("2")]
[HandlebarsWriterAttribute]
public object Min(object value, string linqPredicate);
    [HandlebarsWriterAttribute]
public IEnumerable OfType(object value, string typeName);
    [HandlebarsWriterAttribute]
public IEnumerable OrderBy(object value, string ordering);
    [HandlebarsWriterAttribute]
public IEnumerable OrderByThenBy(object value, string ordering, object thenBy);
    [HandlebarsWriterAttribute]
public IEnumerable Page(object value, int page, int pageSize);
    [HandlebarsWriterAttribute]
public IEnumerable Page(object value, string linqPredicate, int page, int pageSize);
    [HandlebarsWriterAttribute]
public PagedResult PageResult(object value, int page, int pageSize, Nullable`1<int> rowCount);
    [HandlebarsWriterAttribute]
public PagedResult PageResult(object value, string linqPredicate, int page, int pageSize, Nullable`1<int> rowCount);
    [HandlebarsWriterAttribute]
public IEnumerable Reverse(object value, string linqPredicate);
    [HandlebarsWriterAttribute]
public object Single(object value, string linqPredicate);
    [NullableContextAttribute("2")]
[HandlebarsWriterAttribute]
public object SingleOrDefault(object value, string linqPredicate);
    [HandlebarsWriterAttribute]
public IEnumerable Skip(object value, int count);
    [HandlebarsWriterAttribute]
public IEnumerable SkipWhile(object value, string linqPredicate);
    [HandlebarsWriterAttribute]
public IEnumerable SkipAndTake(object value, int skip, int take);
    [HandlebarsWriterAttribute]
public object Sum(object value, string linqPredicate);
    [HandlebarsWriterAttribute]
public IEnumerable Take(object value, int count);
    [HandlebarsWriterAttribute]
public IEnumerable TakeWhile(object value, string linqPredicate);
    [HandlebarsWriterAttribute]
public IEnumerable Where(object value, string linqPredicate);
    private static IQueryable CallWhere(object value, string linqPredicate, string callerName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class HandlebarsDotNet.Helpers.JObjectExtensions : object {
    private static JTokenResolvers Resolvers;
    private static MethodInfo ConvertToTypedArrayGenericMethod;
    private static JObjectExtensions();
    [NullableContextAttribute("2")]
[ExtensionAttribute]
internal static DynamicClass ToDynamicJsonClass(JObject src, DynamicJsonClassOptions options);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
internal static IEnumerable ToDynamicClassArray(JArray src, DynamicJsonClassOptions options);
    [NullableContextAttribute("2")]
private static object ConvertJObject(JToken arg, DynamicJsonClassOptions options);
    private static object PassThrough(JToken arg, DynamicJsonClassOptions options);
    private static Func`3<JToken, DynamicJsonClassOptions, object> GetResolverFor(JToken arg);
    private static object ConvertJTokenFloat(JToken arg, DynamicJsonClassOptions options);
    private static object ConvertJTokenInteger(JToken arg, DynamicJsonClassOptions options);
    [NullableContextAttribute("2")]
private static object ConvertJTokenProperty(JToken arg, DynamicJsonClassOptions options);
    private static IEnumerable ConvertJTokenArray(JToken arg, DynamicJsonClassOptions options);
    [NullableContextAttribute("2")]
private static Type FindSameTypeOf(IEnumerable`1<object> src);
    private static IEnumerable ConvertToTypedArray(IEnumerable`1<object> src, Type newType);
    private static T[] ConvertToTypedArrayGeneric(IEnumerable`1<object> src);
    public static DynamicClass CreateInstance(IList`1<DynamicPropertyWithValue> dynamicPropertiesWithValue, bool createParameterCtor);
}
internal class HandlebarsDotNet.Helpers.Models.DynamicJsonClassOptions : object {
    [CompilerGeneratedAttribute]
private IntegerBehavior <IntegerConvertBehavior>k__BackingField;
    [CompilerGeneratedAttribute]
private FloatBehavior <FloatConvertBehavior>k__BackingField;
    public IntegerBehavior IntegerConvertBehavior { get; public set; }
    public FloatBehavior FloatConvertBehavior { get; public set; }
    [CompilerGeneratedAttribute]
public IntegerBehavior get_IntegerConvertBehavior();
    [CompilerGeneratedAttribute]
public void set_IntegerConvertBehavior(IntegerBehavior value);
    [CompilerGeneratedAttribute]
public FloatBehavior get_FloatConvertBehavior();
    [CompilerGeneratedAttribute]
public void set_FloatConvertBehavior(FloatBehavior value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class HandlebarsDotNet.Helpers.Models.DynamicPropertyWithValue : DynamicProperty {
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public object Value { get; }
    [NullableContextAttribute("1")]
public DynamicPropertyWithValue(string name, object value);
    [CompilerGeneratedAttribute]
public object get_Value();
}
internal enum HandlebarsDotNet.Helpers.Models.FloatBehavior : Enum {
    public int value__;
    public static FloatBehavior UseDouble;
    public static FloatBehavior UseFloat;
    public static FloatBehavior UseDecimal;
}
internal enum HandlebarsDotNet.Helpers.Models.IntegerBehavior : Enum {
    public int value__;
    public static IntegerBehavior UseInt;
    public static IntegerBehavior UseLong;
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
