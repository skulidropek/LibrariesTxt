internal class Hangfire.PostgreSql.CountersAggregator : object {
    private static int NumberOfRecordsInSinglePass;
    private static TimeSpan _delayBetweenPasses;
    private ILog _logger;
    private TimeSpan _interval;
    private PostgreSqlStorage _storage;
    public CountersAggregator(PostgreSqlStorage storage, TimeSpan interval);
    private static CountersAggregator();
    public sealed virtual void Execute(CancellationToken cancellationToken);
    private string GetAggregationQuery();
}
public class Hangfire.PostgreSql.EnqueuedAndFetchedCountDto : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private long <EnqueuedCount>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private long <FetchedCount>k__BackingField;
    public long EnqueuedCount { get; public set; }
    public long FetchedCount { get; public set; }
    [CompilerGeneratedAttribute]
public long get_EnqueuedCount();
    [CompilerGeneratedAttribute]
public void set_EnqueuedCount(long value);
    [CompilerGeneratedAttribute]
public long get_FetchedCount();
    [CompilerGeneratedAttribute]
public void set_FetchedCount(long value);
}
[UsedImplicitlyAttribute]
internal class Hangfire.PostgreSql.Entities.JobParameter : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private long <JobId>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Value>k__BackingField;
    public long JobId { get; public set; }
    public string Name { get; public set; }
    public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public long get_JobId();
    [CompilerGeneratedAttribute]
public void set_JobId(long value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
[UsedImplicitlyAttribute]
internal class Hangfire.PostgreSql.Entities.Server : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Data>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private DateTime <LastHeartbeat>k__BackingField;
    public string Id { get; public set; }
    public string Data { get; public set; }
    public DateTime LastHeartbeat { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(string value);
    [CompilerGeneratedAttribute]
public DateTime get_LastHeartbeat();
    [CompilerGeneratedAttribute]
public void set_LastHeartbeat(DateTime value);
}
internal class Hangfire.PostgreSql.Entities.ServerData : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <WorkerCount>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private String[] <Queues>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nullable`1<DateTime> <StartedAt>k__BackingField;
    public int WorkerCount { get; public set; }
    public String[] Queues { get; public set; }
    public Nullable`1<DateTime> StartedAt { get; public set; }
    [CompilerGeneratedAttribute]
public int get_WorkerCount();
    [CompilerGeneratedAttribute]
public void set_WorkerCount(int value);
    [CompilerGeneratedAttribute]
public String[] get_Queues();
    [CompilerGeneratedAttribute]
public void set_Queues(String[] value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_StartedAt();
    [CompilerGeneratedAttribute]
public void set_StartedAt(Nullable`1<DateTime> value);
}
[UsedImplicitlyAttribute]
internal class Hangfire.PostgreSql.Entities.SqlHash : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Field>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nullable`1<DateTime> <ExpireAt>k__BackingField;
    public long Id { get; public set; }
    public string Key { get; public set; }
    public string Field { get; public set; }
    public string Value { get; public set; }
    public Nullable`1<DateTime> ExpireAt { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(long value);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_Field();
    [CompilerGeneratedAttribute]
public void set_Field(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_ExpireAt();
    [CompilerGeneratedAttribute]
public void set_ExpireAt(Nullable`1<DateTime> value);
}
[UsedImplicitlyAttribute]
internal class Hangfire.PostgreSql.Entities.SqlJob : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <InvocationData>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Arguments>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private DateTime <CreatedAt>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nullable`1<DateTime> <ExpireAt>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nullable`1<DateTime> <FetchedAt>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <StateName>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <StateReason>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <StateData>k__BackingField;
    public long Id { get; public set; }
    public string InvocationData { get; public set; }
    public string Arguments { get; public set; }
    public DateTime CreatedAt { get; public set; }
    public Nullable`1<DateTime> ExpireAt { get; public set; }
    public Nullable`1<DateTime> FetchedAt { get; public set; }
    public string StateName { get; public set; }
    public string StateReason { get; public set; }
    public string StateData { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(long value);
    [CompilerGeneratedAttribute]
public string get_InvocationData();
    [CompilerGeneratedAttribute]
public void set_InvocationData(string value);
    [CompilerGeneratedAttribute]
public string get_Arguments();
    [CompilerGeneratedAttribute]
public void set_Arguments(string value);
    [CompilerGeneratedAttribute]
public DateTime get_CreatedAt();
    [CompilerGeneratedAttribute]
public void set_CreatedAt(DateTime value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_ExpireAt();
    [CompilerGeneratedAttribute]
public void set_ExpireAt(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_FetchedAt();
    [CompilerGeneratedAttribute]
public void set_FetchedAt(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_StateName();
    [CompilerGeneratedAttribute]
public void set_StateName(string value);
    [CompilerGeneratedAttribute]
public string get_StateReason();
    [CompilerGeneratedAttribute]
public void set_StateReason(string value);
    [CompilerGeneratedAttribute]
public string get_StateData();
    [CompilerGeneratedAttribute]
public void set_StateData(string value);
}
[UsedImplicitlyAttribute]
internal class Hangfire.PostgreSql.Entities.SqlState : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private long <JobId>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private DateTime <CreatedAt>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Data>k__BackingField;
    public long JobId { get; public set; }
    public string Name { get; public set; }
    public string Reason { get; public set; }
    public DateTime CreatedAt { get; public set; }
    public string Data { get; public set; }
    [CompilerGeneratedAttribute]
public long get_JobId();
    [CompilerGeneratedAttribute]
public void set_JobId(long value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public DateTime get_CreatedAt();
    [CompilerGeneratedAttribute]
public void set_CreatedAt(DateTime value);
    [CompilerGeneratedAttribute]
public string get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(string value);
}
internal class Hangfire.PostgreSql.EnvironmentHelpers : object {
    private static Nullable`1<bool> _isMono;
    public static bool IsMono();
}
internal class Hangfire.PostgreSql.ExpirationManager : object {
    private static string DistributedLockKey;
    private static TimeSpan _defaultLockTimeout;
    private static TimeSpan _delayBetweenPasses;
    private static ILog _logger;
    private static String[] _processedCounters;
    private static String[] _processedTables;
    private TimeSpan _checkInterval;
    private PostgreSqlStorage _storage;
    public ExpirationManager(PostgreSqlStorage storage);
    public ExpirationManager(PostgreSqlStorage storage, TimeSpan checkInterval);
    private static ExpirationManager();
    public sealed virtual void Execute(BackgroundProcessContext context);
    public sealed virtual void Execute(CancellationToken cancellationToken);
    public virtual string ToString();
    private void AggregateCounters(CancellationToken cancellationToken);
    private void AggregateCounter(string counterName);
    private void UseConnectionDistributedLock(PostgreSqlStorage storage, Action`1<IDbConnection> action);
}
public interface Hangfire.PostgreSql.IConnectionFactory {
    public abstract virtual NpgsqlConnection GetOrCreateConnection();
}
public interface Hangfire.PostgreSql.IPersistentJobQueue {
    public abstract virtual IFetchedJob Dequeue(String[] queues, CancellationToken cancellationToken);
    public abstract virtual void Enqueue(IDbConnection connection, string queue, string jobId);
}
public interface Hangfire.PostgreSql.IPersistentJobQueueMonitoringApi {
    public abstract virtual IEnumerable`1<string> GetQueues();
    public abstract virtual IEnumerable`1<long> GetEnqueuedJobIds(string queue, int from, int perPage);
    public abstract virtual IEnumerable`1<long> GetFetchedJobIds(string queue, int from, int perPage);
    public abstract virtual EnqueuedAndFetchedCountDto GetEnqueuedAndFetchedCount(string queue);
}
public interface Hangfire.PostgreSql.IPersistentJobQueueProvider {
    public abstract virtual IPersistentJobQueue GetJobQueue();
    public abstract virtual IPersistentJobQueueMonitoringApi GetJobQueueMonitoringApi();
}
internal class Hangfire.PostgreSql.JsonParameter : object {
    [CanBeNullAttribute]
private object _value;
    private ValueType _type;
    public JsonParameter(object value);
    public JsonParameter(object value, ValueType type);
    public sealed virtual void AddParameter(IDbCommand command, string name);
    private string GetDefaultValue();
}
public class Hangfire.PostgreSql.PersistentJobQueueProviderCollection : object {
    private IPersistentJobQueueProvider _defaultProvider;
    private List`1<IPersistentJobQueueProvider> _providers;
    private Dictionary`2<string, IPersistentJobQueueProvider> _providersByQueue;
    public PersistentJobQueueProviderCollection(IPersistentJobQueueProvider defaultProvider);
    public sealed virtual IEnumerator`1<IPersistentJobQueueProvider> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public void Add(IPersistentJobQueueProvider provider, IEnumerable`1<string> queues);
    public IPersistentJobQueueProvider GetProvider(string queue);
    public void Remove(string queue);
}
[ExtensionAttribute]
public static class Hangfire.PostgreSql.PostgreSqlBootstrapperConfigurationExtensions : object {
    [ExtensionAttribute]
public static IGlobalConfiguration`1<PostgreSqlStorage> UsePostgreSqlStorage(IGlobalConfiguration configuration, string connectionString);
    [ExtensionAttribute]
public static IGlobalConfiguration`1<PostgreSqlStorage> UsePostgreSqlStorage(IGlobalConfiguration configuration, string connectionString, PostgreSqlStorageOptions options);
    [ExtensionAttribute]
public static IGlobalConfiguration`1<PostgreSqlStorage> UsePostgreSqlStorage(IGlobalConfiguration configuration, string connectionString, Action`1<NpgsqlConnection> connectionSetup, PostgreSqlStorageOptions options);
    [ExtensionAttribute]
public static IGlobalConfiguration`1<PostgreSqlStorage> UsePostgreSqlStorage(IGlobalConfiguration configuration, IConnectionFactory connectionFactory, PostgreSqlStorageOptions options);
    [ExtensionAttribute]
public static IGlobalConfiguration`1<PostgreSqlStorage> UsePostgreSqlStorage(IGlobalConfiguration configuration, IConnectionFactory connectionFactory);
}
public class Hangfire.PostgreSql.PostgreSqlConnection : JobStorageConnection {
    private Dictionary`2<string, HashSet`1<Guid>> _lockedResources;
    private PostgreSqlStorageOptions _options;
    private PostgreSqlStorage _storage;
    private DbConnection _dedicatedConnection;
    public PostgreSqlConnection(PostgreSqlStorage storage);
    public virtual void Dispose();
    public virtual IWriteOnlyTransaction CreateWriteTransaction();
    public virtual IDisposable AcquireDistributedLock(string resource, TimeSpan timeout);
    public virtual IFetchedJob FetchNextJob(String[] queues, CancellationToken cancellationToken);
    public virtual string CreateExpiredJob(Job job, IDictionary`2<string, string> parameters, DateTime createdAt, TimeSpan expireIn);
    public virtual JobData GetJobData(string id);
    public virtual StateData GetStateData(string jobId);
    public virtual void SetJobParameter(string id, string name, string value);
    public virtual string GetJobParameter(string id, string name);
    public virtual HashSet`1<string> GetAllItemsFromSet(string key);
    public virtual string GetFirstByLowestScoreFromSet(string key, double fromScore, double toScore);
    public virtual void SetRangeInHash(string key, IEnumerable`1<KeyValuePair`2<string, string>> keyValuePairs);
    public virtual Dictionary`2<string, string> GetAllEntriesFromHash(string key);
    public virtual void AnnounceServer(string serverId, ServerContext context);
    public virtual void RemoveServer(string serverId);
    public virtual void Heartbeat(string serverId);
    public virtual int RemoveTimedOutServers(TimeSpan timeOut);
    public virtual long GetSetCount(string key);
    public virtual List`1<string> GetAllItemsFromList(string key);
    public virtual long GetCounter(string key);
    public virtual long GetListCount(string key);
    public virtual TimeSpan GetListTtl(string key);
    public virtual List`1<string> GetRangeFromList(string key, int startingFrom, int endingAt);
    public virtual long GetHashCount(string key);
    public virtual TimeSpan GetHashTtl(string key);
    public virtual List`1<string> GetRangeFromSet(string key, int startingFrom, int endingAt);
    public virtual TimeSpan GetSetTtl(string key);
    public virtual string GetValueFromHash(string key, string name);
    private IDisposable AcquireLock(string resource, TimeSpan timeout);
    private void ReleaseLock(string resource, Guid lockId, bool onDisposing);
    [CompilerGeneratedAttribute]
private DbConnection <CreateWriteTransaction>b__6_0();
}
public class Hangfire.PostgreSql.PostgreSqlDistributedLock : object {
    private static ILog _logger;
    private static PostgreSqlDistributedLock();
    private static void Log(string resource, string message, Exception ex);
    internal static void Acquire(IDbConnection connection, string resource, TimeSpan timeout, PostgreSqlStorageOptions options);
    internal static void Release(IDbConnection connection, string resource, PostgreSqlStorageOptions options);
}
public class Hangfire.PostgreSql.PostgreSqlDistributedLockException : Exception {
    public PostgreSqlDistributedLockException(string message);
    public PostgreSqlDistributedLockException(string message, Exception innerException);
}
public class Hangfire.PostgreSql.PostgreSqlFetchedJob : object {
    private PostgreSqlStorage _storage;
    private bool _disposed;
    private bool _removedFromQueue;
    private bool _requeued;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Queue>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <JobId>k__BackingField;
    public long Id { get; }
    public string Queue { get; }
    public string JobId { get; }
    public PostgreSqlFetchedJob(PostgreSqlStorage storage, long id, string jobId, string queue);
    [CompilerGeneratedAttribute]
public long get_Id();
    [CompilerGeneratedAttribute]
public string get_Queue();
    [CompilerGeneratedAttribute]
public sealed virtual string get_JobId();
    public sealed virtual void RemoveFromQueue();
    public sealed virtual void Requeue();
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
private int <RemoveFromQueue>b__14_0(DbConnection connection);
    [CompilerGeneratedAttribute]
private int <Requeue>b__15_0(DbConnection connection);
}
public class Hangfire.PostgreSql.PostgreSqlJobQueue : object {
    private static string JobNotificationChannel;
    internal static AutoResetEvent _newItemInQueueEvent;
    private PostgreSqlStorage _storage;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private AutoResetEvent <SignalDequeue>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private AutoResetEvent <JobQueueNotification>k__BackingField;
    private AutoResetEvent SignalDequeue { get; }
    private AutoResetEvent JobQueueNotification { get; }
    public PostgreSqlJobQueue(PostgreSqlStorage storage);
    private static PostgreSqlJobQueue();
    [CompilerGeneratedAttribute]
private AutoResetEvent get_SignalDequeue();
    [CompilerGeneratedAttribute]
private AutoResetEvent get_JobQueueNotification();
    [NotNullAttribute]
public sealed virtual IFetchedJob Dequeue(String[] queues, CancellationToken cancellationToken);
    public sealed virtual void Enqueue(IDbConnection connection, string queue, string jobId);
    public void FetchNextJob();
    [NotNullAttribute]
internal IFetchedJob Dequeue_Transaction(String[] queues, CancellationToken cancellationToken);
    [NotNullAttribute]
internal IFetchedJob Dequeue_UpdateCount(String[] queues, CancellationToken cancellationToken);
    private Task ListenForNotificationsAsync(CancellationToken cancellationToken);
}
internal class Hangfire.PostgreSql.PostgreSqlJobQueueMonitoringApi : object {
    private PostgreSqlStorage _storage;
    public PostgreSqlJobQueueMonitoringApi(PostgreSqlStorage storage);
    public sealed virtual IEnumerable`1<string> GetQueues();
    public sealed virtual IEnumerable`1<long> GetEnqueuedJobIds(string queue, int from, int perPage);
    public sealed virtual IEnumerable`1<long> GetFetchedJobIds(string queue, int from, int perPage);
    public sealed virtual EnqueuedAndFetchedCountDto GetEnqueuedAndFetchedCount(string queue);
    private IEnumerable`1<long> GetQueuedOrFetchedJobIds(string queue, bool fetched, int from, int perPage);
}
public class Hangfire.PostgreSql.PostgreSqlJobQueueProvider : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private PostgreSqlStorageOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private PostgreSqlStorage <Storage>k__BackingField;
    public PostgreSqlStorageOptions Options { get; }
    public PostgreSqlStorage Storage { get; }
    public PostgreSqlJobQueueProvider(PostgreSqlStorage storage, PostgreSqlStorageOptions options);
    [CompilerGeneratedAttribute]
public PostgreSqlStorageOptions get_Options();
    [CompilerGeneratedAttribute]
public PostgreSqlStorage get_Storage();
    public sealed virtual IPersistentJobQueue GetJobQueue();
    public sealed virtual IPersistentJobQueueMonitoringApi GetJobQueueMonitoringApi();
}
public class Hangfire.PostgreSql.PostgreSqlMonitoringApi : object {
    private PersistentJobQueueProviderCollection _queueProviders;
    private PostgreSqlStorage _storage;
    public PostgreSqlMonitoringApi(PostgreSqlStorage storage, PersistentJobQueueProviderCollection queueProviders);
    public sealed virtual long ScheduledCount();
    public sealed virtual long EnqueuedCount(string queue);
    public sealed virtual long FetchedCount(string queue);
    public sealed virtual long FailedCount();
    public sealed virtual long ProcessingCount();
    public sealed virtual JobList`1<ProcessingJobDto> ProcessingJobs(int from, int count);
    public sealed virtual JobList`1<ScheduledJobDto> ScheduledJobs(int from, int count);
    public sealed virtual IDictionary`2<DateTime, long> SucceededByDatesCount();
    public sealed virtual IDictionary`2<DateTime, long> FailedByDatesCount();
    public sealed virtual IList`1<ServerDto> Servers();
    public sealed virtual JobList`1<FailedJobDto> FailedJobs(int from, int count);
    public sealed virtual JobList`1<SucceededJobDto> SucceededJobs(int from, int count);
    public sealed virtual JobList`1<DeletedJobDto> DeletedJobs(int from, int count);
    public sealed virtual IList`1<QueueWithTopEnqueuedJobsDto> Queues();
    public sealed virtual JobList`1<EnqueuedJobDto> EnqueuedJobs(string queue, int from, int perPage);
    public sealed virtual JobList`1<FetchedJobDto> FetchedJobs(string queue, int from, int perPage);
    public sealed virtual IDictionary`2<DateTime, long> HourlySucceededJobs();
    public sealed virtual IDictionary`2<DateTime, long> HourlyFailedJobs();
    public sealed virtual JobDetailsDto JobDetails(string jobId);
    public sealed virtual long SucceededListCount();
    public sealed virtual long DeletedListCount();
    public sealed virtual StatisticsDto GetStatistics();
    private Dictionary`2<DateTime, long> GetHourlyTimelineStats(string type);
    private Dictionary`2<DateTime, long> GetTimelineStats(string type);
    private Dictionary`2<DateTime, long> GetTimelineStats(IDictionary`2<string, DateTime> keyMaps);
    private IPersistentJobQueueMonitoringApi GetQueueApi(string queueName);
    private JobList`1<EnqueuedJobDto> EnqueuedJobs(IEnumerable`1<long> jobIds);
    private long GetNumberOfJobsByStateName(string stateName);
    private static Job DeserializeJob(string invocationData, string arguments);
    private JobList`1<TDto> GetJobs(int from, int count, string stateName, Func`4<SqlJob, Job, Dictionary`2<string, string>, TDto> selector);
    private static JobList`1<TDto> DeserializeJobs(ICollection`1<SqlJob> jobs, Func`4<SqlJob, Job, SafeDictionary`2<string, string>, TDto> selector);
    private JobList`1<FetchedJobDto> FetchedJobs(IEnumerable`1<long> jobIds);
    private T UseConnection(Func`2<IDbConnection, T> func);
    [CompilerGeneratedAttribute]
private List`1<ServerDto> <Servers>b__12_0(IDbConnection connection);
    [CompilerGeneratedAttribute]
private StatisticsDto <GetStatistics>b__24_0(IDbConnection connection);
    [CompilerGeneratedAttribute]
internal static long <GetStatistics>g__GetCountIfExists|24_4(string name, <>c__DisplayClass24_0& );
}
public static class Hangfire.PostgreSql.PostgreSqlObjectsInstaller : object {
    private static ILog _logger;
    private static PostgreSqlObjectsInstaller();
    public static void Install(NpgsqlConnection connection, string schemaName);
    private static bool VersionAlreadyApplied(NpgsqlConnection connection, string schemaName, int version);
    private static string GetStringResource(Assembly assembly, string resourceName);
}
public class Hangfire.PostgreSql.PostgreSqlStorage : JobStorage {
    private IConnectionFactory _connectionFactory;
    private Action`1<NpgsqlConnection> _connectionSetup;
    private NpgsqlConnectionStringBuilder _connectionStringBuilder;
    private NpgsqlConnection _existingConnection;
    private Dictionary`2<string, bool> _features;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private PersistentJobQueueProviderCollection <QueueProviders>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private PostgreSqlStorageOptions <Options>k__BackingField;
    public PersistentJobQueueProviderCollection QueueProviders { get; internal set; }
    internal PostgreSqlStorageOptions Options { get; }
    public PostgreSqlStorage(string connectionString);
    public PostgreSqlStorage(string connectionString, PostgreSqlStorageOptions options);
    public PostgreSqlStorage(IConnectionFactory connectionFactory, PostgreSqlStorageOptions options);
    public PostgreSqlStorage(string connectionString, Action`1<NpgsqlConnection> connectionSetup, PostgreSqlStorageOptions options);
    public PostgreSqlStorage(NpgsqlConnection existingConnection, PostgreSqlStorageOptions options);
    public PostgreSqlStorage(NpgsqlConnection existingConnection);
    [CompilerGeneratedAttribute]
public PersistentJobQueueProviderCollection get_QueueProviders();
    [CompilerGeneratedAttribute]
internal void set_QueueProviders(PersistentJobQueueProviderCollection value);
    [CompilerGeneratedAttribute]
internal PostgreSqlStorageOptions get_Options();
    public virtual IMonitoringApi GetMonitoringApi();
    public virtual IStorageConnection GetConnection();
    [IteratorStateMachineAttribute("Hangfire.PostgreSql.PostgreSqlStorage/<GetComponents>d__20")]
public virtual IEnumerable`1<IServerComponent> GetComponents();
    public virtual void WriteOptionsToLog(ILog logger);
    public virtual string ToString();
    internal NpgsqlConnection CreateAndOpenConnection();
    internal void UseTransaction(DbConnection dedicatedConnection, Action`2<DbConnection, IDbTransaction> action, Nullable`1<IsolationLevel> isolationLevel);
    internal T UseTransaction(DbConnection dedicatedConnection, Func`3<DbConnection, IDbTransaction, T> func, Nullable`1<IsolationLevel> isolationLevel);
    internal void UseTransaction(DbConnection dedicatedConnection, Action`2<DbConnection, DbTransaction> action, Func`1<TransactionScope> transactionScopeFactory);
    internal T UseTransaction(DbConnection dedicatedConnection, Func`3<DbConnection, DbTransaction, T> func, Func`1<TransactionScope> transactionScopeFactory);
    private static void Current_TransactionCompleted(object sender, TransactionEventArgs e);
    internal TransactionScope CreateTransactionScope(Nullable`1<IsolationLevel> isolationLevel, Nullable`1<TimeSpan> timeout);
    private static Nullable`1<IsolationLevel> ConvertIsolationLevel(Nullable`1<IsolationLevel> isolationLevel);
    internal void UseConnection(DbConnection dedicatedConnection, Action`1<DbConnection> action);
    internal T UseConnection(DbConnection dedicatedConnection, Func`2<DbConnection, T> func);
    internal void ReleaseConnection(DbConnection connection);
    private bool IsExistingConnection(IDbConnection connection);
    private void InitializeQueueProviders();
    private bool TryCreateConnectionStringBuilder(string connectionString, NpgsqlConnectionStringBuilder& builder);
    private NpgsqlConnectionStringBuilder SetupConnectionStringBuilderParameters(NpgsqlConnectionStringBuilder builder);
    public virtual bool HasFeature(string featureId);
}
public class Hangfire.PostgreSql.PostgreSqlStorageOptions : object {
    private static TimeSpan _minimumQueuePollInterval;
    private int _deleteExpiredBatchSize;
    private TimeSpan _distributedLockTimeout;
    private TimeSpan _invisibilityTimeout;
    private TimeSpan _jobExpirationCheckInterval;
    private TimeSpan _queuePollInterval;
    private TimeSpan _transactionSerializationTimeout;
    private TimeSpan _countersAggregateInterval;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <AllowUnsafeValues>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <UseNativeDatabaseTransactions>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <PrepareSchemaIfNecessary>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <SchemaName>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <EnableTransactionScopeEnlistment>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <EnableLongPolling>k__BackingField;
    public TimeSpan QueuePollInterval { get; public set; }
    public TimeSpan InvisibilityTimeout { get; public set; }
    public TimeSpan DistributedLockTimeout { get; public set; }
    public TimeSpan TransactionSynchronisationTimeout { get; public set; }
    public TimeSpan JobExpirationCheckInterval { get; public set; }
    public TimeSpan CountersAggregateInterval { get; public set; }
    public int DeleteExpiredBatchSize { get; public set; }
    public bool AllowUnsafeValues { get; public set; }
    public bool UseNativeDatabaseTransactions { get; public set; }
    public bool PrepareSchemaIfNecessary { get; public set; }
    public string SchemaName { get; public set; }
    public bool EnableTransactionScopeEnlistment { get; public set; }
    public bool EnableLongPolling { get; public set; }
    private static PostgreSqlStorageOptions();
    public TimeSpan get_QueuePollInterval();
    public void set_QueuePollInterval(TimeSpan value);
    public TimeSpan get_InvisibilityTimeout();
    public void set_InvisibilityTimeout(TimeSpan value);
    public TimeSpan get_DistributedLockTimeout();
    public void set_DistributedLockTimeout(TimeSpan value);
    public TimeSpan get_TransactionSynchronisationTimeout();
    public void set_TransactionSynchronisationTimeout(TimeSpan value);
    public TimeSpan get_JobExpirationCheckInterval();
    public void set_JobExpirationCheckInterval(TimeSpan value);
    public TimeSpan get_CountersAggregateInterval();
    public void set_CountersAggregateInterval(TimeSpan value);
    public int get_DeleteExpiredBatchSize();
    public void set_DeleteExpiredBatchSize(int value);
    [CompilerGeneratedAttribute]
public bool get_AllowUnsafeValues();
    [CompilerGeneratedAttribute]
public void set_AllowUnsafeValues(bool value);
    [CompilerGeneratedAttribute]
public bool get_UseNativeDatabaseTransactions();
    [CompilerGeneratedAttribute]
public void set_UseNativeDatabaseTransactions(bool value);
    [CompilerGeneratedAttribute]
public bool get_PrepareSchemaIfNecessary();
    [CompilerGeneratedAttribute]
public void set_PrepareSchemaIfNecessary(bool value);
    [CompilerGeneratedAttribute]
public string get_SchemaName();
    [CompilerGeneratedAttribute]
public void set_SchemaName(string value);
    [CompilerGeneratedAttribute]
public bool get_EnableTransactionScopeEnlistment();
    [CompilerGeneratedAttribute]
public void set_EnableTransactionScopeEnlistment(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableLongPolling();
    [CompilerGeneratedAttribute]
public void set_EnableLongPolling(bool value);
    private static void ThrowIfValueIsNotPositive(TimeSpan value, string fieldName);
    private void ThrowIfValueIsLowerThan(TimeSpan minValue, TimeSpan value, string fieldName);
    private static void ThrowIfValueIsNotPositive(int value, string fieldName);
}
public class Hangfire.PostgreSql.PostgreSqlWriteOnlyTransaction : JobStorageTransaction {
    private Queue`1<Action`1<IDbConnection>> _commandQueue;
    private Func`1<DbConnection> _dedicatedConnectionFunc;
    private PostgreSqlStorage _storage;
    public PostgreSqlWriteOnlyTransaction(PostgreSqlStorage storage, Func`1<DbConnection> dedicatedConnectionFunc);
    public virtual void Commit();
    private TransactionScope CreateTransactionScope();
    public virtual void ExpireJob(string jobId, TimeSpan expireIn);
    public virtual void PersistJob(string jobId);
    public virtual void SetJobState(string jobId, IState state);
    public virtual void AddJobState(string jobId, IState state);
    public virtual void AddToQueue(string queue, string jobId);
    public virtual void IncrementCounter(string key);
    public virtual void IncrementCounter(string key, TimeSpan expireIn);
    public virtual void DecrementCounter(string key);
    public virtual void DecrementCounter(string key, TimeSpan expireIn);
    public virtual void AddToSet(string key, string value);
    public virtual void AddToSet(string key, string value, double score);
    public virtual void RemoveFromSet(string key, string value);
    public virtual void InsertToList(string key, string value);
    public virtual void RemoveFromList(string key, string value);
    public virtual void TrimList(string key, int keepStartingFrom, int keepEndingAt);
    public virtual void SetRangeInHash(string key, IEnumerable`1<KeyValuePair`2<string, string>> keyValuePairs);
    public virtual void RemoveHash(string key);
    public virtual void ExpireSet(string key, TimeSpan expireIn);
    public virtual void ExpireList(string key, TimeSpan expireIn);
    public virtual void ExpireHash(string key, TimeSpan expireIn);
    public virtual void PersistSet(string key);
    public virtual void PersistList(string key);
    public virtual void PersistHash(string key);
    public virtual void AddRangeToSet(string key, IList`1<string> items);
    public virtual void RemoveSet(string key);
    internal void QueueCommand(Action`1<IDbConnection> action);
    [CompilerGeneratedAttribute]
private void <Commit>b__4_0(DbConnection connection, DbTransaction _);
}
[AttributeUsageAttribute("2112")]
public class Hangfire.PostgreSql.Properties.AspMvcActionAttribute : Attribute {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <AnonymousProperty>k__BackingField;
    [NotNullAttribute]
public string AnonymousProperty { get; }
    public AspMvcActionAttribute(string anonymousProperty);
    [CompilerGeneratedAttribute]
public string get_AnonymousProperty();
}
[AttributeUsageAttribute("2176")]
public class Hangfire.PostgreSql.Properties.AspMvcActionSelectorAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
public class Hangfire.PostgreSql.Properties.AspMvcAreaAttribute : PathReferenceAttribute {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <AnonymousProperty>k__BackingField;
    [NotNullAttribute]
public string AnonymousProperty { get; }
    public AspMvcAreaAttribute(string anonymousProperty);
    [CompilerGeneratedAttribute]
public string get_AnonymousProperty();
}
[AttributeUsageAttribute("1")]
public class Hangfire.PostgreSql.Properties.AspMvcAreaMasterLocationFormatAttribute : Attribute {
    public AspMvcAreaMasterLocationFormatAttribute(string format);
}
[AttributeUsageAttribute("1")]
public class Hangfire.PostgreSql.Properties.AspMvcAreaPartialViewLocationFormatAttribute : Attribute {
    public AspMvcAreaPartialViewLocationFormatAttribute(string format);
}
[AttributeUsageAttribute("1")]
public class Hangfire.PostgreSql.Properties.AspMvcAreaViewLocationFormatAttribute : Attribute {
    public AspMvcAreaViewLocationFormatAttribute(string format);
}
[AttributeUsageAttribute("2112")]
public class Hangfire.PostgreSql.Properties.AspMvcControllerAttribute : Attribute {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <AnonymousProperty>k__BackingField;
    [NotNullAttribute]
public string AnonymousProperty { get; }
    public AspMvcControllerAttribute(string anonymousProperty);
    [CompilerGeneratedAttribute]
public string get_AnonymousProperty();
}
[AttributeUsageAttribute("2048")]
public class Hangfire.PostgreSql.Properties.AspMvcDisplayTemplateAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
public class Hangfire.PostgreSql.Properties.AspMvcEditorTemplateAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
public class Hangfire.PostgreSql.Properties.AspMvcMasterAttribute : Attribute {
}
[AttributeUsageAttribute("1")]
public class Hangfire.PostgreSql.Properties.AspMvcMasterLocationFormatAttribute : Attribute {
    public AspMvcMasterLocationFormatAttribute(string format);
}
[AttributeUsageAttribute("2048")]
public class Hangfire.PostgreSql.Properties.AspMvcModelTypeAttribute : Attribute {
}
[AttributeUsageAttribute("2112")]
public class Hangfire.PostgreSql.Properties.AspMvcPartialViewAttribute : PathReferenceAttribute {
}
[AttributeUsageAttribute("1")]
public class Hangfire.PostgreSql.Properties.AspMvcPartialViewLocationFormatAttribute : Attribute {
    public AspMvcPartialViewLocationFormatAttribute(string format);
}
[AttributeUsageAttribute("68")]
public class Hangfire.PostgreSql.Properties.AspMvcSupressViewErrorAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
public class Hangfire.PostgreSql.Properties.AspMvcTemplateAttribute : Attribute {
}
[AttributeUsageAttribute("2112")]
public class Hangfire.PostgreSql.Properties.AspMvcViewAttribute : PathReferenceAttribute {
}
[AttributeUsageAttribute("1")]
public class Hangfire.PostgreSql.Properties.AspMvcViewLocationFormatAttribute : Attribute {
    public AspMvcViewLocationFormatAttribute(string format);
}
[AttributeUsageAttribute("4")]
[BaseTypeRequiredAttribute("System.Attribute")]
public class Hangfire.PostgreSql.Properties.BaseTypeRequiredAttribute : Attribute {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Type <BaseType>k__BackingField;
    [NotNullAttribute]
public Type BaseType { get; }
    public BaseTypeRequiredAttribute(Type baseType);
    [CompilerGeneratedAttribute]
public Type get_BaseType();
}
[AttributeUsageAttribute("6592")]
public class Hangfire.PostgreSql.Properties.CanBeNullAttribute : Attribute {
}
[AttributeUsageAttribute("1036")]
public class Hangfire.PostgreSql.Properties.CannotApplyEqualityOperatorAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
public class Hangfire.PostgreSql.Properties.ContractAnnotationAttribute : Attribute {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Contract>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <ForceFullStates>k__BackingField;
    public string Contract { get; }
    public bool ForceFullStates { get; }
    public ContractAnnotationAttribute(string contract);
    public ContractAnnotationAttribute(string contract, bool forceFullStates);
    [CompilerGeneratedAttribute]
public string get_Contract();
    [CompilerGeneratedAttribute]
public bool get_ForceFullStates();
}
[AttributeUsageAttribute("2432")]
public class Hangfire.PostgreSql.Properties.HtmlAttributeValueAttribute : Attribute {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Name>k__BackingField;
    [NotNullAttribute]
public string Name { get; }
    public HtmlAttributeValueAttribute(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
}
[AttributeUsageAttribute("2432")]
public class Hangfire.PostgreSql.Properties.HtmlElementAttributesAttribute : Attribute {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Name>k__BackingField;
    [NotNullAttribute]
public string Name { get; }
    public HtmlElementAttributesAttribute(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
}
[FlagsAttribute]
public enum Hangfire.PostgreSql.Properties.ImplicitUseKindFlags : Enum {
    public int value__;
    public static ImplicitUseKindFlags Default;
    public static ImplicitUseKindFlags Access;
    public static ImplicitUseKindFlags Assign;
    public static ImplicitUseKindFlags InstantiatedWithFixedConstructorSignature;
    public static ImplicitUseKindFlags InstantiatedNoFixedConstructorSignature;
}
[FlagsAttribute]
public enum Hangfire.PostgreSql.Properties.ImplicitUseTargetFlags : Enum {
    public int value__;
    public static ImplicitUseTargetFlags Default;
    public static ImplicitUseTargetFlags Itself;
    public static ImplicitUseTargetFlags Members;
    public static ImplicitUseTargetFlags WithMembers;
}
[AttributeUsageAttribute("2048")]
public class Hangfire.PostgreSql.Properties.InstantHandleAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
public class Hangfire.PostgreSql.Properties.InvokerParameterNameAttribute : Attribute {
}
[AttributeUsageAttribute("32767")]
public class Hangfire.PostgreSql.Properties.LocalizationRequiredAttribute : Attribute {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <Required>k__BackingField;
    public bool Required { get; }
    public LocalizationRequiredAttribute(bool required);
    [CompilerGeneratedAttribute]
public bool get_Required();
}
[AttributeUsageAttribute("4")]
public class Hangfire.PostgreSql.Properties.MeansImplicitUseAttribute : Attribute {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ImplicitUseKindFlags <UseKindFlags>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ImplicitUseTargetFlags <TargetFlags>k__BackingField;
    [UsedImplicitlyAttribute]
public ImplicitUseKindFlags UseKindFlags { get; }
    [UsedImplicitlyAttribute]
public ImplicitUseTargetFlags TargetFlags { get; }
    public MeansImplicitUseAttribute(ImplicitUseKindFlags useKindFlags);
    public MeansImplicitUseAttribute(ImplicitUseTargetFlags targetFlags);
    public MeansImplicitUseAttribute(ImplicitUseKindFlags useKindFlags, ImplicitUseTargetFlags targetFlags);
    [CompilerGeneratedAttribute]
public ImplicitUseKindFlags get_UseKindFlags();
    [CompilerGeneratedAttribute]
public ImplicitUseTargetFlags get_TargetFlags();
}
[AttributeUsageAttribute("64")]
public class Hangfire.PostgreSql.Properties.NotifyPropertyChangedInvocatorAttribute : Attribute {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotifyPropertyChangedInvocatorAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("6592")]
public class Hangfire.PostgreSql.Properties.NotNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
public class Hangfire.PostgreSql.Properties.PathReferenceAttribute : Attribute {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <BasePath>k__BackingField;
    [NotNullAttribute]
public string BasePath { get; }
    public PathReferenceAttribute(string basePath);
    [CompilerGeneratedAttribute]
public string get_BasePath();
}
[MeansImplicitUseAttribute]
public class Hangfire.PostgreSql.Properties.PublicAPIAttribute : Attribute {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Comment>k__BackingField;
    [NotNullAttribute]
public string Comment { get; }
    public PublicAPIAttribute(string comment);
    [CompilerGeneratedAttribute]
public string get_Comment();
}
[AttributeUsageAttribute("64")]
public class Hangfire.PostgreSql.Properties.PureAttribute : Attribute {
}
[AttributeUsageAttribute("2112")]
public class Hangfire.PostgreSql.Properties.RazorSectionAttribute : Attribute {
}
[AttributeUsageAttribute("96")]
public class Hangfire.PostgreSql.Properties.StringFormatMethodAttribute : Attribute {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <FormatParameterName>k__BackingField;
    public string FormatParameterName { get; }
    public StringFormatMethodAttribute(string formatParameterName);
    [CompilerGeneratedAttribute]
public string get_FormatParameterName();
}
[AttributeUsageAttribute("32767")]
[MeansImplicitUseAttribute("3")]
public class Hangfire.PostgreSql.Properties.UsedImplicitlyAttribute : Attribute {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ImplicitUseKindFlags <UseKindFlags>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ImplicitUseTargetFlags <TargetFlags>k__BackingField;
    public ImplicitUseKindFlags UseKindFlags { get; }
    public ImplicitUseTargetFlags TargetFlags { get; }
    public UsedImplicitlyAttribute(ImplicitUseKindFlags useKindFlags);
    public UsedImplicitlyAttribute(ImplicitUseTargetFlags targetFlags);
    public UsedImplicitlyAttribute(ImplicitUseKindFlags useKindFlags, ImplicitUseTargetFlags targetFlags);
    [CompilerGeneratedAttribute]
public ImplicitUseKindFlags get_UseKindFlags();
    [CompilerGeneratedAttribute]
public ImplicitUseTargetFlags get_TargetFlags();
}
[ExtensionAttribute]
internal static class Hangfire.PostgreSql.Utils.DbConnectionExtensions : object {
    private static Nullable`1<bool> _supportsNotifications;
    [ExtensionAttribute]
internal static bool SupportsNotifications(IDbConnection connection);
}
public static class Hangfire.PostgreSql.Utils.TransactionHelpers : object {
    internal static TransactionScope CreateTransactionScope(Nullable`1<IsolationLevel> isolationLevel, bool enlist, Nullable`1<TimeSpan> timeout);
}
public static class Hangfire.PostgreSql.Utils.Utils : object {
    public static bool TryExecute(Func`1<T> func, T& result, Func`2<Exception, bool> swallowException, Nullable`1<int> tryCount);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
