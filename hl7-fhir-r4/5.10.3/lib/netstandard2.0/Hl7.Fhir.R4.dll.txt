[ExtensionAttribute]
public static class Hl7.Fhir.ElementModel.PocoBuilderExtensions : object {
    [ExtensionAttribute]
public static Base ToPoco(ISourceNode source, Type pocoType, PocoBuilderSettings settings);
    [ExtensionAttribute]
public static T ToPoco(ISourceNode source, PocoBuilderSettings settings);
    [ExtensionAttribute]
public static Base ToPoco(ITypedElement element, PocoBuilderSettings settings);
    [ExtensionAttribute]
public static T ToPoco(ITypedElement element, PocoBuilderSettings settings);
}
[ExtensionAttribute]
public static class Hl7.Fhir.ElementModel.TypedElementExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static ITypedElement ToTypedElement(Base base, string rootName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Hl7.Fhir.FhirPath.FhirPathExtensions : object {
    private static FhirPathCompiler COMPILER;
    private static FhirPathCompilerCache CACHE;
    private static FhirPathExtensions();
    [ExtensionAttribute]
public static Func`2<string, ITypedElement> ToFhirPathResolver(Func`2<string, Resource> resolver);
    internal static SymbolTable GetSymbols();
    [ExtensionAttribute]
public static IEnumerable`1<Base> Select(Base input, string expression, FhirEvaluationContext ctx);
    [ExtensionAttribute]
public static object Scalar(Base input, string expression, FhirEvaluationContext ctx);
    [ExtensionAttribute]
public static bool Predicate(Base input, string expression, FhirEvaluationContext ctx);
    [ExtensionAttribute]
public static bool IsTrue(Base input, string expression, FhirEvaluationContext ctx);
    [ExtensionAttribute]
public static bool IsBoolean(Base input, string expression, bool value, FhirEvaluationContext ctx);
}
[DataContractAttribute]
[FhirTypeAttribute("Account", "http://hl7.org/fhir/StructureDefinition/Account")]
public class Hl7.Fhir.Model.Account : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<AccountStatus> _StatusElement;
    private CodeableConcept _Type;
    private FhirString _NameElement;
    private List`1<ResourceReference> _Subject;
    private Period _ServicePeriod;
    private List`1<CoverageComponent> _Coverage;
    private ResourceReference _Owner;
    private FhirString _DescriptionElement;
    private List`1<GuarantorComponent> _Guarantor;
    private ResourceReference _PartOf;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("AccountStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<AccountStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<AccountStatus> Status { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("AccountType")]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Subject { get; public set; }
    [FhirElementAttribute("servicePeriod")]
[DataMemberAttribute]
public Period ServicePeriod { get; public set; }
    [FhirElementAttribute("coverage")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CoverageComponent> Coverage { get; public set; }
    [FhirElementAttribute("owner")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Owner { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public FhirString DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("guarantor")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<GuarantorComponent> Guarantor { get; public set; }
    [FhirElementAttribute("partOf")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference PartOf { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<AccountStatus> get_StatusElement();
    public void set_StatusElement(Code`1<AccountStatus> value);
    public Nullable`1<AccountStatus> get_Status();
    public void set_Status(Nullable`1<AccountStatus> value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public List`1<ResourceReference> get_Subject();
    public void set_Subject(List`1<ResourceReference> value);
    public Period get_ServicePeriod();
    public void set_ServicePeriod(Period value);
    public List`1<CoverageComponent> get_Coverage();
    public void set_Coverage(List`1<CoverageComponent> value);
    public ResourceReference get_Owner();
    public void set_Owner(ResourceReference value);
    public FhirString get_DescriptionElement();
    public void set_DescriptionElement(FhirString value);
    public string get_Description();
    public void set_Description(string value);
    public List`1<GuarantorComponent> get_Guarantor();
    public void set_Guarantor(List`1<GuarantorComponent> value);
    public ResourceReference get_PartOf();
    public void set_PartOf(ResourceReference value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Account/<get_Children>d__70")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Account/<get_NamedChildren>d__72")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Account/<GetElementPairs>d__74")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("ActionCardinalityBehavior", "http://hl7.org/fhir/ValueSet/action-cardinality-behavior", "http://hl7.org/fhir/action-cardinality-behavior")]
public enum Hl7.Fhir.Model.ActionCardinalityBehavior : Enum {
    public int value__;
    [EnumLiteralAttribute("single", "")]
[DescriptionAttribute("Single")]
public static ActionCardinalityBehavior Single;
    [EnumLiteralAttribute("multiple", "")]
[DescriptionAttribute("Multiple")]
public static ActionCardinalityBehavior Multiple;
}
[FhirEnumerationAttribute("ActionConditionKind", "http://hl7.org/fhir/ValueSet/action-condition-kind", "http://hl7.org/fhir/action-condition-kind")]
public enum Hl7.Fhir.Model.ActionConditionKind : Enum {
    public int value__;
    [EnumLiteralAttribute("applicability", "")]
[DescriptionAttribute("Applicability")]
public static ActionConditionKind Applicability;
    [EnumLiteralAttribute("start", "")]
[DescriptionAttribute("Start")]
public static ActionConditionKind Start;
    [EnumLiteralAttribute("stop", "")]
[DescriptionAttribute("Stop")]
public static ActionConditionKind Stop;
}
[FhirEnumerationAttribute("ActionGroupingBehavior", "http://hl7.org/fhir/ValueSet/action-grouping-behavior", "http://hl7.org/fhir/action-grouping-behavior")]
public enum Hl7.Fhir.Model.ActionGroupingBehavior : Enum {
    public int value__;
    [EnumLiteralAttribute("visual-group", "")]
[DescriptionAttribute("Visual Group")]
public static ActionGroupingBehavior VisualGroup;
    [EnumLiteralAttribute("logical-group", "")]
[DescriptionAttribute("Logical Group")]
public static ActionGroupingBehavior LogicalGroup;
    [EnumLiteralAttribute("sentence-group", "")]
[DescriptionAttribute("Sentence Group")]
public static ActionGroupingBehavior SentenceGroup;
}
[FhirEnumerationAttribute("ActionParticipantType", "http://hl7.org/fhir/ValueSet/action-participant-type", "http://hl7.org/fhir/action-participant-type")]
public enum Hl7.Fhir.Model.ActionParticipantType : Enum {
    public int value__;
    [EnumLiteralAttribute("patient", "")]
[DescriptionAttribute("Patient")]
public static ActionParticipantType Patient;
    [EnumLiteralAttribute("practitioner", "")]
[DescriptionAttribute("Practitioner")]
public static ActionParticipantType Practitioner;
    [EnumLiteralAttribute("related-person", "")]
[DescriptionAttribute("Related Person")]
public static ActionParticipantType RelatedPerson;
    [EnumLiteralAttribute("device", "")]
[DescriptionAttribute("Device")]
public static ActionParticipantType Device;
}
[FhirEnumerationAttribute("ActionPrecheckBehavior", "http://hl7.org/fhir/ValueSet/action-precheck-behavior", "http://hl7.org/fhir/action-precheck-behavior")]
public enum Hl7.Fhir.Model.ActionPrecheckBehavior : Enum {
    public int value__;
    [EnumLiteralAttribute("yes", "")]
[DescriptionAttribute("Yes")]
public static ActionPrecheckBehavior Yes;
    [EnumLiteralAttribute("no", "")]
[DescriptionAttribute("No")]
public static ActionPrecheckBehavior No;
}
[FhirEnumerationAttribute("ActionRelationshipType", "http://hl7.org/fhir/ValueSet/action-relationship-type", "http://hl7.org/fhir/action-relationship-type")]
public enum Hl7.Fhir.Model.ActionRelationshipType : Enum {
    public int value__;
    [EnumLiteralAttribute("before-start", "")]
[DescriptionAttribute("Before Start")]
public static ActionRelationshipType BeforeStart;
    [EnumLiteralAttribute("before", "")]
[DescriptionAttribute("Before")]
public static ActionRelationshipType Before;
    [EnumLiteralAttribute("before-end", "")]
[DescriptionAttribute("Before End")]
public static ActionRelationshipType BeforeEnd;
    [EnumLiteralAttribute("concurrent-with-start", "")]
[DescriptionAttribute("Concurrent With Start")]
public static ActionRelationshipType ConcurrentWithStart;
    [EnumLiteralAttribute("concurrent", "")]
[DescriptionAttribute("Concurrent")]
public static ActionRelationshipType Concurrent;
    [EnumLiteralAttribute("concurrent-with-end", "")]
[DescriptionAttribute("Concurrent With End")]
public static ActionRelationshipType ConcurrentWithEnd;
    [EnumLiteralAttribute("after-start", "")]
[DescriptionAttribute("After Start")]
public static ActionRelationshipType AfterStart;
    [EnumLiteralAttribute("after", "")]
[DescriptionAttribute("After")]
public static ActionRelationshipType After;
    [EnumLiteralAttribute("after-end", "")]
[DescriptionAttribute("After End")]
public static ActionRelationshipType AfterEnd;
}
[FhirEnumerationAttribute("ActionRequiredBehavior", "http://hl7.org/fhir/ValueSet/action-required-behavior", "http://hl7.org/fhir/action-required-behavior")]
public enum Hl7.Fhir.Model.ActionRequiredBehavior : Enum {
    public int value__;
    [EnumLiteralAttribute("must", "")]
[DescriptionAttribute("Must")]
public static ActionRequiredBehavior Must;
    [EnumLiteralAttribute("could", "")]
[DescriptionAttribute("Could")]
public static ActionRequiredBehavior Could;
    [EnumLiteralAttribute("must-unless-documented", "")]
[DescriptionAttribute("Must Unless Documented")]
public static ActionRequiredBehavior MustUnlessDocumented;
}
[FhirEnumerationAttribute("ActionSelectionBehavior", "http://hl7.org/fhir/ValueSet/action-selection-behavior", "http://hl7.org/fhir/action-selection-behavior")]
public enum Hl7.Fhir.Model.ActionSelectionBehavior : Enum {
    public int value__;
    [EnumLiteralAttribute("any", "")]
[DescriptionAttribute("Any")]
public static ActionSelectionBehavior Any;
    [EnumLiteralAttribute("all", "")]
[DescriptionAttribute("All")]
public static ActionSelectionBehavior All;
    [EnumLiteralAttribute("all-or-none", "")]
[DescriptionAttribute("All Or None")]
public static ActionSelectionBehavior AllOrNone;
    [EnumLiteralAttribute("exactly-one", "")]
[DescriptionAttribute("Exactly One")]
public static ActionSelectionBehavior ExactlyOne;
    [EnumLiteralAttribute("at-most-one", "")]
[DescriptionAttribute("At Most One")]
public static ActionSelectionBehavior AtMostOne;
    [EnumLiteralAttribute("one-or-more", "")]
[DescriptionAttribute("One Or More")]
public static ActionSelectionBehavior OneOrMore;
}
[DataContractAttribute]
[FhirTypeAttribute("ActivityDefinition", "http://hl7.org/fhir/StructureDefinition/ActivityDefinition")]
public class Hl7.Fhir.Model.ActivityDefinition : DomainResource {
    private FhirUri _UrlElement;
    private List`1<Identifier> _Identifier;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private FhirString _TitleElement;
    private FhirString _SubtitleElement;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirBoolean _ExperimentalElement;
    private DataType _Subject;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _PurposeElement;
    private FhirString _UsageElement;
    private Markdown _CopyrightElement;
    private Date _ApprovalDateElement;
    private Date _LastReviewDateElement;
    private Period _EffectivePeriod;
    private List`1<CodeableConcept> _Topic;
    private List`1<ContactDetail> _Author;
    private List`1<ContactDetail> _Editor;
    private List`1<ContactDetail> _Reviewer;
    private List`1<ContactDetail> _Endorser;
    private List`1<RelatedArtifact> _RelatedArtifact;
    private List`1<Canonical> _LibraryElement;
    private Code`1<RequestResourceType> _KindElement;
    private Canonical _ProfileElement;
    private CodeableConcept _Code;
    private Code`1<RequestIntent> _IntentElement;
    private Code`1<RequestPriority> _PriorityElement;
    private FhirBoolean _DoNotPerformElement;
    private DataType _Timing;
    private ResourceReference _Location;
    private List`1<ParticipantComponent> _Participant;
    private DataType _Product;
    private Quantity _Quantity;
    private List`1<Dosage> _Dosage;
    private List`1<CodeableConcept> _BodySite;
    private List`1<ResourceReference> _SpecimenRequirement;
    private List`1<ResourceReference> _ObservationRequirement;
    private List`1<ResourceReference> _ObservationResultRequirement;
    private Canonical _TransformElement;
    private List`1<DynamicValueComponent> _DynamicValue;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("subtitle")]
[DataMemberAttribute]
public FhirString SubtitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Subtitle { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("experimental")]
[DataMemberAttribute]
public FhirBoolean ExperimentalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Experimental { get; public set; }
    [FhirElementAttribute]
[BindingAttribute("SubjectType")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Subject { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("purpose")]
[DataMemberAttribute]
public Markdown PurposeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Purpose { get; public set; }
    [FhirElementAttribute("usage")]
[DataMemberAttribute]
public FhirString UsageElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Usage { get; public set; }
    [FhirElementAttribute("copyright")]
[DataMemberAttribute]
public Markdown CopyrightElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Copyright { get; public set; }
    [FhirElementAttribute("approvalDate")]
[DataMemberAttribute]
public Date ApprovalDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ApprovalDate { get; public set; }
    [FhirElementAttribute("lastReviewDate")]
[DataMemberAttribute]
public Date LastReviewDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string LastReviewDate { get; public set; }
    [FhirElementAttribute("effectivePeriod")]
[DataMemberAttribute]
public Period EffectivePeriod { get; public set; }
    [FhirElementAttribute("topic")]
[BindingAttribute("DefinitionTopic")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Topic { get; public set; }
    [FhirElementAttribute("author")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Author { get; public set; }
    [FhirElementAttribute("editor")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Editor { get; public set; }
    [FhirElementAttribute("reviewer")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Reviewer { get; public set; }
    [FhirElementAttribute("endorser")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Endorser { get; public set; }
    [FhirElementAttribute("relatedArtifact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RelatedArtifact> RelatedArtifact { get; public set; }
    [FhirElementAttribute("library")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> LibraryElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Library { get; public set; }
    [FhirElementAttribute("kind")]
[DeclaredTypeAttribute]
[BindingAttribute("ActivityDefinitionKind")]
[DataMemberAttribute]
public Code`1<RequestResourceType> KindElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<RequestResourceType> Kind { get; public set; }
    [FhirElementAttribute("profile")]
[DataMemberAttribute]
public Canonical ProfileElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Profile { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("ActivityDefinitionType")]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [FhirElementAttribute("intent")]
[DeclaredTypeAttribute]
[BindingAttribute("RequestIntent")]
[DataMemberAttribute]
public Code`1<RequestIntent> IntentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<RequestIntent> Intent { get; public set; }
    [FhirElementAttribute("priority")]
[DeclaredTypeAttribute]
[BindingAttribute("RequestPriority")]
[DataMemberAttribute]
public Code`1<RequestPriority> PriorityElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<RequestPriority> Priority { get; public set; }
    [FhirElementAttribute("doNotPerform")]
[DataMemberAttribute]
public FhirBoolean DoNotPerformElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> DoNotPerform { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Timing { get; public set; }
    [FhirElementAttribute("location")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Location { get; public set; }
    [FhirElementAttribute("participant")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ParticipantComponent> Participant { get; public set; }
    [FhirElementAttribute]
[BindingAttribute("ActivityProduct")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Product { get; public set; }
    [FhirElementAttribute("quantity")]
[DataMemberAttribute]
public Quantity Quantity { get; public set; }
    [FhirElementAttribute("dosage")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Dosage> Dosage { get; public set; }
    [FhirElementAttribute("bodySite")]
[BindingAttribute("BodySite")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> BodySite { get; public set; }
    [FhirElementAttribute("specimenRequirement")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> SpecimenRequirement { get; public set; }
    [FhirElementAttribute("observationRequirement")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ObservationRequirement { get; public set; }
    [FhirElementAttribute("observationResultRequirement")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ObservationResultRequirement { get; public set; }
    [FhirElementAttribute("transform")]
[DataMemberAttribute]
public Canonical TransformElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Transform { get; public set; }
    [FhirElementAttribute("dynamicValue")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<DynamicValueComponent> DynamicValue { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public FhirUri get_UrlElement();
    public void set_UrlElement(FhirUri value);
    public string get_Url();
    public void set_Url(string value);
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirString get_VersionElement();
    public void set_VersionElement(FhirString value);
    public string get_Version();
    public void set_Version(string value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public FhirString get_SubtitleElement();
    public void set_SubtitleElement(FhirString value);
    public string get_Subtitle();
    public void set_Subtitle(string value);
    public Code`1<PublicationStatus> get_StatusElement();
    public void set_StatusElement(Code`1<PublicationStatus> value);
    public Nullable`1<PublicationStatus> get_Status();
    public void set_Status(Nullable`1<PublicationStatus> value);
    public FhirBoolean get_ExperimentalElement();
    public void set_ExperimentalElement(FhirBoolean value);
    public Nullable`1<bool> get_Experimental();
    public void set_Experimental(Nullable`1<bool> value);
    public DataType get_Subject();
    public void set_Subject(DataType value);
    public FhirDateTime get_DateElement();
    public void set_DateElement(FhirDateTime value);
    public string get_Date();
    public void set_Date(string value);
    public FhirString get_PublisherElement();
    public void set_PublisherElement(FhirString value);
    public string get_Publisher();
    public void set_Publisher(string value);
    public List`1<ContactDetail> get_Contact();
    public void set_Contact(List`1<ContactDetail> value);
    public Markdown get_DescriptionElement();
    public void set_DescriptionElement(Markdown value);
    public string get_Description();
    public void set_Description(string value);
    public List`1<UsageContext> get_UseContext();
    public void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public Markdown get_PurposeElement();
    public void set_PurposeElement(Markdown value);
    public string get_Purpose();
    public void set_Purpose(string value);
    public FhirString get_UsageElement();
    public void set_UsageElement(FhirString value);
    public string get_Usage();
    public void set_Usage(string value);
    public Markdown get_CopyrightElement();
    public void set_CopyrightElement(Markdown value);
    public string get_Copyright();
    public void set_Copyright(string value);
    public Date get_ApprovalDateElement();
    public void set_ApprovalDateElement(Date value);
    public string get_ApprovalDate();
    public void set_ApprovalDate(string value);
    public Date get_LastReviewDateElement();
    public void set_LastReviewDateElement(Date value);
    public string get_LastReviewDate();
    public void set_LastReviewDate(string value);
    public Period get_EffectivePeriod();
    public void set_EffectivePeriod(Period value);
    public List`1<CodeableConcept> get_Topic();
    public void set_Topic(List`1<CodeableConcept> value);
    public List`1<ContactDetail> get_Author();
    public void set_Author(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Editor();
    public void set_Editor(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Reviewer();
    public void set_Reviewer(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Endorser();
    public void set_Endorser(List`1<ContactDetail> value);
    public List`1<RelatedArtifact> get_RelatedArtifact();
    public void set_RelatedArtifact(List`1<RelatedArtifact> value);
    public List`1<Canonical> get_LibraryElement();
    public void set_LibraryElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_Library();
    public void set_Library(IEnumerable`1<string> value);
    public Code`1<RequestResourceType> get_KindElement();
    public void set_KindElement(Code`1<RequestResourceType> value);
    public Nullable`1<RequestResourceType> get_Kind();
    public void set_Kind(Nullable`1<RequestResourceType> value);
    public Canonical get_ProfileElement();
    public void set_ProfileElement(Canonical value);
    public string get_Profile();
    public void set_Profile(string value);
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public Code`1<RequestIntent> get_IntentElement();
    public void set_IntentElement(Code`1<RequestIntent> value);
    public Nullable`1<RequestIntent> get_Intent();
    public void set_Intent(Nullable`1<RequestIntent> value);
    public Code`1<RequestPriority> get_PriorityElement();
    public void set_PriorityElement(Code`1<RequestPriority> value);
    public Nullable`1<RequestPriority> get_Priority();
    public void set_Priority(Nullable`1<RequestPriority> value);
    public FhirBoolean get_DoNotPerformElement();
    public void set_DoNotPerformElement(FhirBoolean value);
    public Nullable`1<bool> get_DoNotPerform();
    public void set_DoNotPerform(Nullable`1<bool> value);
    public DataType get_Timing();
    public void set_Timing(DataType value);
    public ResourceReference get_Location();
    public void set_Location(ResourceReference value);
    public List`1<ParticipantComponent> get_Participant();
    public void set_Participant(List`1<ParticipantComponent> value);
    public DataType get_Product();
    public void set_Product(DataType value);
    public Quantity get_Quantity();
    public void set_Quantity(Quantity value);
    public List`1<Dosage> get_Dosage();
    public void set_Dosage(List`1<Dosage> value);
    public List`1<CodeableConcept> get_BodySite();
    public void set_BodySite(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_SpecimenRequirement();
    public void set_SpecimenRequirement(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_ObservationRequirement();
    public void set_ObservationRequirement(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_ObservationResultRequirement();
    public void set_ObservationResultRequirement(List`1<ResourceReference> value);
    public Canonical get_TransformElement();
    public void set_TransformElement(Canonical value);
    public string get_Transform();
    public void set_Transform(string value);
    public List`1<DynamicValueComponent> get_DynamicValue();
    public void set_DynamicValue(List`1<DynamicValueComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.set_Code(List`1<CodeableConcept> value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ActivityDefinition/<get_Children>d__267")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ActivityDefinition/<get_NamedChildren>d__269")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ActivityDefinition/<GetElementPairs>d__271")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Address", "http://hl7.org/fhir/StructureDefinition/Address")]
[DebuggerDisplayAttribute("\{{DebuggerDisplay(),nq}}")]
public class Hl7.Fhir.Model.Address : DataType {
    private Code`1<AddressUse> _UseElement;
    private Code`1<AddressType> _TypeElement;
    private FhirString _TextElement;
    private List`1<FhirString> _LineElement;
    private FhirString _CityElement;
    private FhirString _DistrictElement;
    private FhirString _StateElement;
    private FhirString _PostalCodeElement;
    private FhirString _CountryElement;
    private Period _Period;
    public string TypeName { get; }
    [FhirElementAttribute("use")]
[DeclaredTypeAttribute]
[BindingAttribute("AddressUse")]
[DataMemberAttribute]
public Code`1<AddressUse> UseElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<AddressUse> Use { get; public set; }
    [FhirElementAttribute("type")]
[DeclaredTypeAttribute]
[BindingAttribute("AddressType")]
[DataMemberAttribute]
public Code`1<AddressType> TypeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<AddressType> Type { get; public set; }
    [FhirElementAttribute("text")]
[DataMemberAttribute]
public FhirString TextElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Text { get; public set; }
    [FhirElementAttribute("line")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> LineElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Line { get; public set; }
    [FhirElementAttribute("city")]
[DataMemberAttribute]
public FhirString CityElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string City { get; public set; }
    [FhirElementAttribute("district")]
[DataMemberAttribute]
public FhirString DistrictElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string District { get; public set; }
    [FhirElementAttribute("state")]
[DataMemberAttribute]
public FhirString StateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string State { get; public set; }
    [FhirElementAttribute("postalCode")]
[DataMemberAttribute]
public FhirString PostalCodeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string PostalCode { get; public set; }
    [FhirElementAttribute("country")]
[DataMemberAttribute]
public FhirString CountryElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Country { get; public set; }
    [FhirElementAttribute("period")]
[DataMemberAttribute]
public Period Period { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Code`1<AddressUse> get_UseElement();
    public void set_UseElement(Code`1<AddressUse> value);
    public Nullable`1<AddressUse> get_Use();
    public void set_Use(Nullable`1<AddressUse> value);
    public Code`1<AddressType> get_TypeElement();
    public void set_TypeElement(Code`1<AddressType> value);
    public Nullable`1<AddressType> get_Type();
    public void set_Type(Nullable`1<AddressType> value);
    public FhirString get_TextElement();
    public void set_TextElement(FhirString value);
    public string get_Text();
    public void set_Text(string value);
    public List`1<FhirString> get_LineElement();
    public void set_LineElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_Line();
    public void set_Line(IEnumerable`1<string> value);
    public FhirString get_CityElement();
    public void set_CityElement(FhirString value);
    public string get_City();
    public void set_City(string value);
    public FhirString get_DistrictElement();
    public void set_DistrictElement(FhirString value);
    public string get_District();
    public void set_District(string value);
    public FhirString get_StateElement();
    public void set_StateElement(FhirString value);
    public string get_State();
    public void set_State(string value);
    public FhirString get_PostalCodeElement();
    public void set_PostalCodeElement(FhirString value);
    public string get_PostalCode();
    public void set_PostalCode(string value);
    public FhirString get_CountryElement();
    public void set_CountryElement(FhirString value);
    public string get_Country();
    public void set_Country(string value);
    public Period get_Period();
    public void set_Period(Period value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Address/<get_Children>d__76")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Address/<get_NamedChildren>d__78")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Address/<GetElementPairs>d__80")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    private string DebuggerDisplay();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("AdministrativeGender", "http://hl7.org/fhir/ValueSet/administrative-gender", "http://hl7.org/fhir/administrative-gender")]
public enum Hl7.Fhir.Model.AdministrativeGender : Enum {
    public int value__;
    [EnumLiteralAttribute("male", "")]
[DescriptionAttribute("Male")]
public static AdministrativeGender Male;
    [EnumLiteralAttribute("female", "")]
[DescriptionAttribute("Female")]
public static AdministrativeGender Female;
    [EnumLiteralAttribute("other", "")]
[DescriptionAttribute("Other")]
public static AdministrativeGender Other;
    [EnumLiteralAttribute("unknown", "")]
[DescriptionAttribute("Unknown")]
public static AdministrativeGender Unknown;
}
[DataContractAttribute]
[FhirTypeAttribute("AdverseEvent", "http://hl7.org/fhir/StructureDefinition/AdverseEvent")]
public class Hl7.Fhir.Model.AdverseEvent : DomainResource {
    private Identifier _Identifier;
    private Code`1<AdverseEventActuality> _ActualityElement;
    private List`1<CodeableConcept> _Category;
    private CodeableConcept _Event;
    private ResourceReference _Subject;
    private ResourceReference _Encounter;
    private FhirDateTime _DateElement;
    private FhirDateTime _DetectedElement;
    private FhirDateTime _RecordedDateElement;
    private List`1<ResourceReference> _ResultingCondition;
    private ResourceReference _Location;
    private CodeableConcept _Seriousness;
    private CodeableConcept _Severity;
    private CodeableConcept _Outcome;
    private ResourceReference _Recorder;
    private List`1<ResourceReference> _Contributor;
    private List`1<SuspectEntityComponent> _SuspectEntity;
    private List`1<ResourceReference> _SubjectMedicalHistory;
    private List`1<ResourceReference> _ReferenceDocument;
    private List`1<ResourceReference> _Study;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[DataMemberAttribute]
public Identifier Identifier { get; public set; }
    [FhirElementAttribute("actuality")]
[DeclaredTypeAttribute]
[BindingAttribute("AdverseEventActuality")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<AdverseEventActuality> ActualityElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<AdverseEventActuality> Actuality { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("AdverseEventCategory")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Category { get; public set; }
    [FhirElementAttribute("event")]
[BindingAttribute("AdverseEventType")]
[DataMemberAttribute]
public CodeableConcept Event { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("detected")]
[DataMemberAttribute]
public FhirDateTime DetectedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Detected { get; public set; }
    [FhirElementAttribute("recordedDate")]
[DataMemberAttribute]
public FhirDateTime RecordedDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string RecordedDate { get; public set; }
    [FhirElementAttribute("resultingCondition")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ResultingCondition { get; public set; }
    [FhirElementAttribute("location")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Location { get; public set; }
    [FhirElementAttribute("seriousness")]
[BindingAttribute("AdverseEventSeriousness")]
[DataMemberAttribute]
public CodeableConcept Seriousness { get; public set; }
    [FhirElementAttribute("severity")]
[BindingAttribute("AdverseEventSeverity")]
[DataMemberAttribute]
public CodeableConcept Severity { get; public set; }
    [FhirElementAttribute("outcome")]
[BindingAttribute("AdverseEventOutcome")]
[DataMemberAttribute]
public CodeableConcept Outcome { get; public set; }
    [FhirElementAttribute("recorder")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Recorder { get; public set; }
    [FhirElementAttribute("contributor")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Contributor { get; public set; }
    [FhirElementAttribute("suspectEntity")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<SuspectEntityComponent> SuspectEntity { get; public set; }
    [FhirElementAttribute("subjectMedicalHistory")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> SubjectMedicalHistory { get; public set; }
    [FhirElementAttribute("referenceDocument")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ReferenceDocument { get; public set; }
    [FhirElementAttribute("study")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Study { get; public set; }
    private Identifier Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Identifier get_Identifier();
    public void set_Identifier(Identifier value);
    public Code`1<AdverseEventActuality> get_ActualityElement();
    public void set_ActualityElement(Code`1<AdverseEventActuality> value);
    public Nullable`1<AdverseEventActuality> get_Actuality();
    public void set_Actuality(Nullable`1<AdverseEventActuality> value);
    public List`1<CodeableConcept> get_Category();
    public void set_Category(List`1<CodeableConcept> value);
    public CodeableConcept get_Event();
    public void set_Event(CodeableConcept value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public FhirDateTime get_DateElement();
    public void set_DateElement(FhirDateTime value);
    public string get_Date();
    public void set_Date(string value);
    public FhirDateTime get_DetectedElement();
    public void set_DetectedElement(FhirDateTime value);
    public string get_Detected();
    public void set_Detected(string value);
    public FhirDateTime get_RecordedDateElement();
    public void set_RecordedDateElement(FhirDateTime value);
    public string get_RecordedDate();
    public void set_RecordedDate(string value);
    public List`1<ResourceReference> get_ResultingCondition();
    public void set_ResultingCondition(List`1<ResourceReference> value);
    public ResourceReference get_Location();
    public void set_Location(ResourceReference value);
    public CodeableConcept get_Seriousness();
    public void set_Seriousness(CodeableConcept value);
    public CodeableConcept get_Severity();
    public void set_Severity(CodeableConcept value);
    public CodeableConcept get_Outcome();
    public void set_Outcome(CodeableConcept value);
    public ResourceReference get_Recorder();
    public void set_Recorder(ResourceReference value);
    public List`1<ResourceReference> get_Contributor();
    public void set_Contributor(List`1<ResourceReference> value);
    public List`1<SuspectEntityComponent> get_SuspectEntity();
    public void set_SuspectEntity(List`1<SuspectEntityComponent> value);
    public List`1<ResourceReference> get_SubjectMedicalHistory();
    public void set_SubjectMedicalHistory(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_ReferenceDocument();
    public void set_ReferenceDocument(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Study();
    public void set_Study(List`1<ResourceReference> value);
    private sealed virtual override Identifier Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.set_Identifier(Identifier value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.AdverseEvent/<get_Children>d__111")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.AdverseEvent/<get_NamedChildren>d__113")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.AdverseEvent/<GetElementPairs>d__115")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Age", "http://hl7.org/fhir/StructureDefinition/Age")]
public class Hl7.Fhir.Model.Age : Quantity {
    public string TypeName { get; }
    public virtual string get_TypeName();
    public virtual IDeepCopyable DeepCopy();
}
[DataContractAttribute]
[FhirTypeAttribute("AllergyIntolerance", "http://hl7.org/fhir/StructureDefinition/AllergyIntolerance")]
public class Hl7.Fhir.Model.AllergyIntolerance : DomainResource {
    private List`1<Identifier> _Identifier;
    private CodeableConcept _ClinicalStatus;
    private CodeableConcept _VerificationStatus;
    private Code`1<AllergyIntoleranceType> _TypeElement;
    private List`1<Code`1<AllergyIntoleranceCategory>> _CategoryElement;
    private Code`1<AllergyIntoleranceCriticality> _CriticalityElement;
    private CodeableConcept _Code;
    private ResourceReference _Patient;
    private ResourceReference _Encounter;
    private DataType _Onset;
    private FhirDateTime _RecordedDateElement;
    private ResourceReference _Recorder;
    private ResourceReference _Asserter;
    private FhirDateTime _LastOccurrenceElement;
    private List`1<Annotation> _Note;
    private List`1<ReactionComponent> _Reaction;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("clinicalStatus")]
[BindingAttribute("AllergyIntoleranceClinicalStatus")]
[DataMemberAttribute]
public CodeableConcept ClinicalStatus { get; public set; }
    [FhirElementAttribute("verificationStatus")]
[BindingAttribute("AllergyIntoleranceVerificationStatus")]
[DataMemberAttribute]
public CodeableConcept VerificationStatus { get; public set; }
    [FhirElementAttribute("type")]
[DeclaredTypeAttribute]
[BindingAttribute("AllergyIntoleranceType")]
[DataMemberAttribute]
public Code`1<AllergyIntoleranceType> TypeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<AllergyIntoleranceType> Type { get; public set; }
    [FhirElementAttribute("category")]
[DeclaredTypeAttribute]
[BindingAttribute("AllergyIntoleranceCategory")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Code`1<AllergyIntoleranceCategory>> CategoryElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Nullable`1<AllergyIntoleranceCategory>> Category { get; public set; }
    [FhirElementAttribute("criticality")]
[DeclaredTypeAttribute]
[BindingAttribute("AllergyIntoleranceCriticality")]
[DataMemberAttribute]
public Code`1<AllergyIntoleranceCriticality> CriticalityElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<AllergyIntoleranceCriticality> Criticality { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("AllergyIntoleranceCode")]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [FhirElementAttribute("patient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Patient { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Onset { get; public set; }
    [FhirElementAttribute("recordedDate")]
[DataMemberAttribute]
public FhirDateTime RecordedDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string RecordedDate { get; public set; }
    [FhirElementAttribute("recorder")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Recorder { get; public set; }
    [FhirElementAttribute("asserter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Asserter { get; public set; }
    [FhirElementAttribute("lastOccurrence")]
[DataMemberAttribute]
public FhirDateTime LastOccurrenceElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string LastOccurrence { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("reaction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ReactionComponent> Reaction { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public CodeableConcept get_ClinicalStatus();
    public void set_ClinicalStatus(CodeableConcept value);
    public CodeableConcept get_VerificationStatus();
    public void set_VerificationStatus(CodeableConcept value);
    public Code`1<AllergyIntoleranceType> get_TypeElement();
    public void set_TypeElement(Code`1<AllergyIntoleranceType> value);
    public Nullable`1<AllergyIntoleranceType> get_Type();
    public void set_Type(Nullable`1<AllergyIntoleranceType> value);
    public List`1<Code`1<AllergyIntoleranceCategory>> get_CategoryElement();
    public void set_CategoryElement(List`1<Code`1<AllergyIntoleranceCategory>> value);
    public IEnumerable`1<Nullable`1<AllergyIntoleranceCategory>> get_Category();
    public void set_Category(IEnumerable`1<Nullable`1<AllergyIntoleranceCategory>> value);
    public Code`1<AllergyIntoleranceCriticality> get_CriticalityElement();
    public void set_CriticalityElement(Code`1<AllergyIntoleranceCriticality> value);
    public Nullable`1<AllergyIntoleranceCriticality> get_Criticality();
    public void set_Criticality(Nullable`1<AllergyIntoleranceCriticality> value);
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public ResourceReference get_Patient();
    public void set_Patient(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public DataType get_Onset();
    public void set_Onset(DataType value);
    public FhirDateTime get_RecordedDateElement();
    public void set_RecordedDateElement(FhirDateTime value);
    public string get_RecordedDate();
    public void set_RecordedDate(string value);
    public ResourceReference get_Recorder();
    public void set_Recorder(ResourceReference value);
    public ResourceReference get_Asserter();
    public void set_Asserter(ResourceReference value);
    public FhirDateTime get_LastOccurrenceElement();
    public void set_LastOccurrenceElement(FhirDateTime value);
    public string get_LastOccurrence();
    public void set_LastOccurrence(string value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public List`1<ReactionComponent> get_Reaction();
    public void set_Reaction(List`1<ReactionComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.AllergyIntolerance/<get_Children>d__100")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.AllergyIntolerance/<get_NamedChildren>d__102")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.AllergyIntolerance/<GetElementPairs>d__104")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Annotation", "http://hl7.org/fhir/StructureDefinition/Annotation")]
public class Hl7.Fhir.Model.Annotation : DataType {
    private DataType _Author;
    private FhirDateTime _TimeElement;
    private Markdown _TextElement;
    public string TypeName { get; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Author { get; public set; }
    [FhirElementAttribute("time")]
[DataMemberAttribute]
public FhirDateTime TimeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Time { get; public set; }
    [FhirElementAttribute("text")]
[CardinalityAttribute]
[DataMemberAttribute]
public Markdown TextElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Text { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public DataType get_Author();
    public void set_Author(DataType value);
    public FhirDateTime get_TimeElement();
    public void set_TimeElement(FhirDateTime value);
    public string get_Time();
    public void set_Time(string value);
    public Markdown get_TextElement();
    public void set_TextElement(Markdown value);
    public string get_Text();
    public void set_Text(string value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Annotation/<get_Children>d__25")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Annotation/<get_NamedChildren>d__27")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Annotation/<GetElementPairs>d__29")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Appointment", "http://hl7.org/fhir/StructureDefinition/Appointment")]
public class Hl7.Fhir.Model.Appointment : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<AppointmentStatus> _StatusElement;
    private CodeableConcept _CancelationReason;
    private List`1<CodeableConcept> _ServiceCategory;
    private List`1<CodeableConcept> _ServiceType;
    private List`1<CodeableConcept> _Specialty;
    private CodeableConcept _AppointmentType;
    private List`1<CodeableConcept> _ReasonCode;
    private List`1<ResourceReference> _ReasonReference;
    private UnsignedInt _PriorityElement;
    private FhirString _DescriptionElement;
    private List`1<ResourceReference> _SupportingInformation;
    private Instant _StartElement;
    private Instant _EndElement;
    private PositiveInt _MinutesDurationElement;
    private List`1<ResourceReference> _Slot;
    private FhirDateTime _CreatedElement;
    private FhirString _CommentElement;
    private FhirString _PatientInstructionElement;
    private List`1<ResourceReference> _BasedOn;
    private List`1<ParticipantComponent> _Participant;
    private List`1<Period> _RequestedPeriod;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("AppointmentStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<AppointmentStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<AppointmentStatus> Status { get; public set; }
    [FhirElementAttribute("cancelationReason")]
[BindingAttribute("cancelation-reason")]
[DataMemberAttribute]
public CodeableConcept CancelationReason { get; public set; }
    [FhirElementAttribute("serviceCategory")]
[BindingAttribute("service-category")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ServiceCategory { get; public set; }
    [FhirElementAttribute("serviceType")]
[BindingAttribute("service-type")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ServiceType { get; public set; }
    [FhirElementAttribute("specialty")]
[BindingAttribute("specialty")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Specialty { get; public set; }
    [FhirElementAttribute("appointmentType")]
[BindingAttribute("appointment-type")]
[DataMemberAttribute]
public CodeableConcept AppointmentType { get; public set; }
    [FhirElementAttribute("reasonCode")]
[BindingAttribute("ApptReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ReasonCode { get; public set; }
    [FhirElementAttribute("reasonReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ReasonReference { get; public set; }
    [FhirElementAttribute("priority")]
[DataMemberAttribute]
public UnsignedInt PriorityElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<int> Priority { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public FhirString DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("supportingInformation")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> SupportingInformation { get; public set; }
    [FhirElementAttribute("start")]
[DataMemberAttribute]
public Instant StartElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<DateTimeOffset> Start { get; public set; }
    [FhirElementAttribute("end")]
[DataMemberAttribute]
public Instant EndElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<DateTimeOffset> End { get; public set; }
    [FhirElementAttribute("minutesDuration")]
[DataMemberAttribute]
public PositiveInt MinutesDurationElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<int> MinutesDuration { get; public set; }
    [FhirElementAttribute("slot")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Slot { get; public set; }
    [FhirElementAttribute("created")]
[DataMemberAttribute]
public FhirDateTime CreatedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Created { get; public set; }
    [FhirElementAttribute("comment")]
[DataMemberAttribute]
public FhirString CommentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Comment { get; public set; }
    [FhirElementAttribute("patientInstruction")]
[DataMemberAttribute]
public FhirString PatientInstructionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string PatientInstruction { get; public set; }
    [FhirElementAttribute("basedOn")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> BasedOn { get; public set; }
    [FhirElementAttribute("participant")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ParticipantComponent> Participant { get; public set; }
    [FhirElementAttribute("requestedPeriod")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Period> RequestedPeriod { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<AppointmentStatus> get_StatusElement();
    public void set_StatusElement(Code`1<AppointmentStatus> value);
    public Nullable`1<AppointmentStatus> get_Status();
    public void set_Status(Nullable`1<AppointmentStatus> value);
    public CodeableConcept get_CancelationReason();
    public void set_CancelationReason(CodeableConcept value);
    public List`1<CodeableConcept> get_ServiceCategory();
    public void set_ServiceCategory(List`1<CodeableConcept> value);
    public List`1<CodeableConcept> get_ServiceType();
    public void set_ServiceType(List`1<CodeableConcept> value);
    public List`1<CodeableConcept> get_Specialty();
    public void set_Specialty(List`1<CodeableConcept> value);
    public CodeableConcept get_AppointmentType();
    public void set_AppointmentType(CodeableConcept value);
    public List`1<CodeableConcept> get_ReasonCode();
    public void set_ReasonCode(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_ReasonReference();
    public void set_ReasonReference(List`1<ResourceReference> value);
    public UnsignedInt get_PriorityElement();
    public void set_PriorityElement(UnsignedInt value);
    public Nullable`1<int> get_Priority();
    public void set_Priority(Nullable`1<int> value);
    public FhirString get_DescriptionElement();
    public void set_DescriptionElement(FhirString value);
    public string get_Description();
    public void set_Description(string value);
    public List`1<ResourceReference> get_SupportingInformation();
    public void set_SupportingInformation(List`1<ResourceReference> value);
    public Instant get_StartElement();
    public void set_StartElement(Instant value);
    public Nullable`1<DateTimeOffset> get_Start();
    public void set_Start(Nullable`1<DateTimeOffset> value);
    public Instant get_EndElement();
    public void set_EndElement(Instant value);
    public Nullable`1<DateTimeOffset> get_End();
    public void set_End(Nullable`1<DateTimeOffset> value);
    public PositiveInt get_MinutesDurationElement();
    public void set_MinutesDurationElement(PositiveInt value);
    public Nullable`1<int> get_MinutesDuration();
    public void set_MinutesDuration(Nullable`1<int> value);
    public List`1<ResourceReference> get_Slot();
    public void set_Slot(List`1<ResourceReference> value);
    public FhirDateTime get_CreatedElement();
    public void set_CreatedElement(FhirDateTime value);
    public string get_Created();
    public void set_Created(string value);
    public FhirString get_CommentElement();
    public void set_CommentElement(FhirString value);
    public string get_Comment();
    public void set_Comment(string value);
    public FhirString get_PatientInstructionElement();
    public void set_PatientInstructionElement(FhirString value);
    public string get_PatientInstruction();
    public void set_PatientInstruction(string value);
    public List`1<ResourceReference> get_BasedOn();
    public void set_BasedOn(List`1<ResourceReference> value);
    public List`1<ParticipantComponent> get_Participant();
    public void set_Participant(List`1<ParticipantComponent> value);
    public List`1<Period> get_RequestedPeriod();
    public void set_RequestedPeriod(List`1<Period> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.set_Code(List`1<CodeableConcept> value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Appointment/<get_Children>d__132")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Appointment/<get_NamedChildren>d__134")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Appointment/<GetElementPairs>d__136")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("AppointmentResponse", "http://hl7.org/fhir/StructureDefinition/AppointmentResponse")]
public class Hl7.Fhir.Model.AppointmentResponse : DomainResource {
    private List`1<Identifier> _Identifier;
    private ResourceReference _Appointment;
    private Instant _StartElement;
    private Instant _EndElement;
    private List`1<CodeableConcept> _ParticipantType;
    private ResourceReference _Actor;
    private Code`1<ParticipationStatus> _ParticipantStatusElement;
    private FhirString _CommentElement;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("appointment")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Appointment { get; public set; }
    [FhirElementAttribute("start")]
[DataMemberAttribute]
public Instant StartElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<DateTimeOffset> Start { get; public set; }
    [FhirElementAttribute("end")]
[DataMemberAttribute]
public Instant EndElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<DateTimeOffset> End { get; public set; }
    [FhirElementAttribute("participantType")]
[BindingAttribute("ParticipantType")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ParticipantType { get; public set; }
    [FhirElementAttribute("actor")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Actor { get; public set; }
    [FhirElementAttribute("participantStatus")]
[DeclaredTypeAttribute]
[BindingAttribute("ParticipantStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ParticipationStatus> ParticipantStatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ParticipationStatus> ParticipantStatus { get; public set; }
    [FhirElementAttribute("comment")]
[DataMemberAttribute]
public FhirString CommentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Comment { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public ResourceReference get_Appointment();
    public void set_Appointment(ResourceReference value);
    public Instant get_StartElement();
    public void set_StartElement(Instant value);
    public Nullable`1<DateTimeOffset> get_Start();
    public void set_Start(Nullable`1<DateTimeOffset> value);
    public Instant get_EndElement();
    public void set_EndElement(Instant value);
    public Nullable`1<DateTimeOffset> get_End();
    public void set_End(Nullable`1<DateTimeOffset> value);
    public List`1<CodeableConcept> get_ParticipantType();
    public void set_ParticipantType(List`1<CodeableConcept> value);
    public ResourceReference get_Actor();
    public void set_Actor(ResourceReference value);
    public Code`1<ParticipationStatus> get_ParticipantStatusElement();
    public void set_ParticipantStatusElement(Code`1<ParticipationStatus> value);
    public Nullable`1<ParticipationStatus> get_ParticipantStatus();
    public void set_ParticipantStatus(Nullable`1<ParticipationStatus> value);
    public FhirString get_CommentElement();
    public void set_CommentElement(FhirString value);
    public string get_Comment();
    public void set_Comment(string value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.AppointmentResponse/<get_Children>d__54")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.AppointmentResponse/<get_NamedChildren>d__56")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.AppointmentResponse/<GetElementPairs>d__58")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("AuditEvent", "http://hl7.org/fhir/StructureDefinition/AuditEvent")]
public class Hl7.Fhir.Model.AuditEvent : DomainResource {
    private Coding _Type;
    private List`1<Coding> _Subtype;
    private Code`1<AuditEventAction> _ActionElement;
    private Period _Period;
    private Instant _RecordedElement;
    private Code`1<AuditEventOutcome> _OutcomeElement;
    private FhirString _OutcomeDescElement;
    private List`1<CodeableConcept> _PurposeOfEvent;
    private List`1<AgentComponent> _Agent;
    private SourceComponent _Source;
    private List`1<EntityComponent> _Entity;
    public string TypeName { get; }
    [FhirElementAttribute("type")]
[BindingAttribute("AuditEventType")]
[CardinalityAttribute]
[DataMemberAttribute]
public Coding Type { get; public set; }
    [FhirElementAttribute("subtype")]
[BindingAttribute("AuditEventSubType")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Coding> Subtype { get; public set; }
    [FhirElementAttribute("action")]
[DeclaredTypeAttribute]
[BindingAttribute("AuditEventAction")]
[DataMemberAttribute]
public Code`1<AuditEventAction> ActionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<AuditEventAction> Action { get; public set; }
    [FhirElementAttribute("period")]
[DataMemberAttribute]
public Period Period { get; public set; }
    [FhirElementAttribute("recorded")]
[CardinalityAttribute]
[DataMemberAttribute]
public Instant RecordedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<DateTimeOffset> Recorded { get; public set; }
    [FhirElementAttribute("outcome")]
[DeclaredTypeAttribute]
[BindingAttribute("AuditEventOutcome")]
[DataMemberAttribute]
public Code`1<AuditEventOutcome> OutcomeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<AuditEventOutcome> Outcome { get; public set; }
    [FhirElementAttribute("outcomeDesc")]
[DataMemberAttribute]
public FhirString OutcomeDescElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string OutcomeDesc { get; public set; }
    [FhirElementAttribute("purposeOfEvent")]
[BindingAttribute("AuditPurposeOfUse")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> PurposeOfEvent { get; public set; }
    [FhirElementAttribute("agent")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<AgentComponent> Agent { get; public set; }
    [FhirElementAttribute("source")]
[CardinalityAttribute]
[DataMemberAttribute]
public SourceComponent Source { get; public set; }
    [FhirElementAttribute("entity")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<EntityComponent> Entity { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Coding get_Type();
    public void set_Type(Coding value);
    public List`1<Coding> get_Subtype();
    public void set_Subtype(List`1<Coding> value);
    public Code`1<AuditEventAction> get_ActionElement();
    public void set_ActionElement(Code`1<AuditEventAction> value);
    public Nullable`1<AuditEventAction> get_Action();
    public void set_Action(Nullable`1<AuditEventAction> value);
    public Period get_Period();
    public void set_Period(Period value);
    public Instant get_RecordedElement();
    public void set_RecordedElement(Instant value);
    public Nullable`1<DateTimeOffset> get_Recorded();
    public void set_Recorded(Nullable`1<DateTimeOffset> value);
    public Code`1<AuditEventOutcome> get_OutcomeElement();
    public void set_OutcomeElement(Code`1<AuditEventOutcome> value);
    public Nullable`1<AuditEventOutcome> get_Outcome();
    public void set_Outcome(Nullable`1<AuditEventOutcome> value);
    public FhirString get_OutcomeDescElement();
    public void set_OutcomeDescElement(FhirString value);
    public string get_OutcomeDesc();
    public void set_OutcomeDesc(string value);
    public List`1<CodeableConcept> get_PurposeOfEvent();
    public void set_PurposeOfEvent(List`1<CodeableConcept> value);
    public List`1<AgentComponent> get_Agent();
    public void set_Agent(List`1<AgentComponent> value);
    public SourceComponent get_Source();
    public void set_Source(SourceComponent value);
    public List`1<EntityComponent> get_Entity();
    public void set_Entity(List`1<EntityComponent> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.AuditEvent/<get_Children>d__71")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.AuditEvent/<get_NamedChildren>d__73")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.AuditEvent/<GetElementPairs>d__75")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Basic", "http://hl7.org/fhir/StructureDefinition/Basic")]
public class Hl7.Fhir.Model.Basic : DomainResource {
    private List`1<Identifier> _Identifier;
    private CodeableConcept _Code;
    private ResourceReference _Subject;
    private Date _CreatedElement;
    private ResourceReference _Author;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("BasicResourceType")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("created")]
[DataMemberAttribute]
public Date CreatedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Created { get; public set; }
    [FhirElementAttribute("author")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Author { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public Date get_CreatedElement();
    public void set_CreatedElement(Date value);
    public string get_Created();
    public void set_Created(string value);
    public ResourceReference get_Author();
    public void set_Author(ResourceReference value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Basic/<get_Children>d__37")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Basic/<get_NamedChildren>d__39")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Basic/<GetElementPairs>d__41")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("BiologicallyDerivedProduct", "http://hl7.org/fhir/StructureDefinition/BiologicallyDerivedProduct")]
public class Hl7.Fhir.Model.BiologicallyDerivedProduct : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<BiologicallyDerivedProductCategory> _ProductCategoryElement;
    private CodeableConcept _ProductCode;
    private Code`1<BiologicallyDerivedProductStatus> _StatusElement;
    private List`1<ResourceReference> _Request;
    private Integer _QuantityElement;
    private List`1<ResourceReference> _Parent;
    private CollectionComponent _Collection;
    private List`1<ProcessingComponent> _Processing;
    private ManipulationComponent _Manipulation;
    private List`1<StorageComponent> _Storage;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("productCategory")]
[DeclaredTypeAttribute]
[BindingAttribute("BiologicallyDerivedProductCategory")]
[DataMemberAttribute]
public Code`1<BiologicallyDerivedProductCategory> ProductCategoryElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<BiologicallyDerivedProductCategory> ProductCategory { get; public set; }
    [FhirElementAttribute("productCode")]
[BindingAttribute("BiologicallyDerivedProductCode")]
[DataMemberAttribute]
public CodeableConcept ProductCode { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("BiologicallyDerivedProductStatus")]
[DataMemberAttribute]
public Code`1<BiologicallyDerivedProductStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<BiologicallyDerivedProductStatus> Status { get; public set; }
    [FhirElementAttribute("request")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Request { get; public set; }
    [FhirElementAttribute("quantity")]
[DataMemberAttribute]
public Integer QuantityElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<int> Quantity { get; public set; }
    [FhirElementAttribute("parent")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Parent { get; public set; }
    [FhirElementAttribute("collection")]
[DataMemberAttribute]
public CollectionComponent Collection { get; public set; }
    [FhirElementAttribute("processing")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ProcessingComponent> Processing { get; public set; }
    [FhirElementAttribute("manipulation")]
[DataMemberAttribute]
public ManipulationComponent Manipulation { get; public set; }
    [FhirElementAttribute("storage")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<StorageComponent> Storage { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<BiologicallyDerivedProductCategory> get_ProductCategoryElement();
    public void set_ProductCategoryElement(Code`1<BiologicallyDerivedProductCategory> value);
    public Nullable`1<BiologicallyDerivedProductCategory> get_ProductCategory();
    public void set_ProductCategory(Nullable`1<BiologicallyDerivedProductCategory> value);
    public CodeableConcept get_ProductCode();
    public void set_ProductCode(CodeableConcept value);
    public Code`1<BiologicallyDerivedProductStatus> get_StatusElement();
    public void set_StatusElement(Code`1<BiologicallyDerivedProductStatus> value);
    public Nullable`1<BiologicallyDerivedProductStatus> get_Status();
    public void set_Status(Nullable`1<BiologicallyDerivedProductStatus> value);
    public List`1<ResourceReference> get_Request();
    public void set_Request(List`1<ResourceReference> value);
    public Integer get_QuantityElement();
    public void set_QuantityElement(Integer value);
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    public List`1<ResourceReference> get_Parent();
    public void set_Parent(List`1<ResourceReference> value);
    public CollectionComponent get_Collection();
    public void set_Collection(CollectionComponent value);
    public List`1<ProcessingComponent> get_Processing();
    public void set_Processing(List`1<ProcessingComponent> value);
    public ManipulationComponent get_Manipulation();
    public void set_Manipulation(ManipulationComponent value);
    public List`1<StorageComponent> get_Storage();
    public void set_Storage(List`1<StorageComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.BiologicallyDerivedProduct/<get_Children>d__70")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.BiologicallyDerivedProduct/<get_NamedChildren>d__72")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.BiologicallyDerivedProduct/<GetElementPairs>d__74")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[ObsoleteAttribute("This resource was removed in R4", "True")]
public class Hl7.Fhir.Model.BodySite : object {
}
[DataContractAttribute]
[FhirTypeAttribute("BodyStructure", "http://hl7.org/fhir/StructureDefinition/BodyStructure")]
public class Hl7.Fhir.Model.BodyStructure : DomainResource {
    private List`1<Identifier> _Identifier;
    private FhirBoolean _ActiveElement;
    private CodeableConcept _Morphology;
    private CodeableConcept _Location;
    private List`1<CodeableConcept> _LocationQualifier;
    private FhirString _DescriptionElement;
    private List`1<Attachment> _Image;
    private ResourceReference _Patient;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("active")]
[DataMemberAttribute]
public FhirBoolean ActiveElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Active { get; public set; }
    [FhirElementAttribute("morphology")]
[BindingAttribute("BodyStructureCode")]
[DataMemberAttribute]
public CodeableConcept Morphology { get; public set; }
    [FhirElementAttribute("location")]
[BindingAttribute("BodySite")]
[DataMemberAttribute]
public CodeableConcept Location { get; public set; }
    [FhirElementAttribute("locationQualifier")]
[BindingAttribute("BodyStructureQualifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> LocationQualifier { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public FhirString DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("image")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Attachment> Image { get; public set; }
    [FhirElementAttribute("patient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Patient { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirBoolean get_ActiveElement();
    public void set_ActiveElement(FhirBoolean value);
    public Nullable`1<bool> get_Active();
    public void set_Active(Nullable`1<bool> value);
    public CodeableConcept get_Morphology();
    public void set_Morphology(CodeableConcept value);
    public CodeableConcept get_Location();
    public void set_Location(CodeableConcept value);
    public List`1<CodeableConcept> get_LocationQualifier();
    public void set_LocationQualifier(List`1<CodeableConcept> value);
    public FhirString get_DescriptionElement();
    public void set_DescriptionElement(FhirString value);
    public string get_Description();
    public void set_Description(string value);
    public List`1<Attachment> get_Image();
    public void set_Image(List`1<Attachment> value);
    public ResourceReference get_Patient();
    public void set_Patient(ResourceReference value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.BodyStructure/<get_Children>d__52")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.BodyStructure/<get_NamedChildren>d__54")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.BodyStructure/<GetElementPairs>d__56")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("CarePlan", "http://hl7.org/fhir/StructureDefinition/CarePlan")]
public class Hl7.Fhir.Model.CarePlan : DomainResource {
    private List`1<Identifier> _Identifier;
    private List`1<Canonical> _InstantiatesCanonicalElement;
    private List`1<FhirUri> _InstantiatesUriElement;
    private List`1<ResourceReference> _BasedOn;
    private List`1<ResourceReference> _Replaces;
    private List`1<ResourceReference> _PartOf;
    private Code`1<RequestStatus> _StatusElement;
    private Code`1<CarePlanIntent> _IntentElement;
    private List`1<CodeableConcept> _Category;
    private FhirString _TitleElement;
    private FhirString _DescriptionElement;
    private ResourceReference _Subject;
    private ResourceReference _Encounter;
    private Period _Period;
    private FhirDateTime _CreatedElement;
    private ResourceReference _Author;
    private List`1<ResourceReference> _Contributor;
    private List`1<ResourceReference> _CareTeam;
    private List`1<ResourceReference> _Addresses;
    private List`1<ResourceReference> _SupportingInfo;
    private List`1<ResourceReference> _Goal;
    private List`1<ActivityComponent> _Activity;
    private List`1<Annotation> _Note;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("instantiatesCanonical")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> InstantiatesCanonicalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> InstantiatesCanonical { get; public set; }
    [FhirElementAttribute("instantiatesUri")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirUri> InstantiatesUriElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> InstantiatesUri { get; public set; }
    [FhirElementAttribute("basedOn")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> BasedOn { get; public set; }
    [FhirElementAttribute("replaces")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Replaces { get; public set; }
    [FhirElementAttribute("partOf")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> PartOf { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("CarePlanStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<RequestStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<RequestStatus> Status { get; public set; }
    [FhirElementAttribute("intent")]
[DeclaredTypeAttribute]
[BindingAttribute("CarePlanIntent")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<CarePlanIntent> IntentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<CarePlanIntent> Intent { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("CarePlanCategory")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Category { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public FhirString DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute("period")]
[DataMemberAttribute]
public Period Period { get; public set; }
    [FhirElementAttribute("created")]
[DataMemberAttribute]
public FhirDateTime CreatedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Created { get; public set; }
    [FhirElementAttribute("author")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Author { get; public set; }
    [FhirElementAttribute("contributor")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Contributor { get; public set; }
    [FhirElementAttribute("careTeam")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> CareTeam { get; public set; }
    [FhirElementAttribute("addresses")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Addresses { get; public set; }
    [FhirElementAttribute("supportingInfo")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> SupportingInfo { get; public set; }
    [FhirElementAttribute("goal")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Goal { get; public set; }
    [FhirElementAttribute("activity")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ActivityComponent> Activity { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<Canonical> get_InstantiatesCanonicalElement();
    public void set_InstantiatesCanonicalElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_InstantiatesCanonical();
    public void set_InstantiatesCanonical(IEnumerable`1<string> value);
    public List`1<FhirUri> get_InstantiatesUriElement();
    public void set_InstantiatesUriElement(List`1<FhirUri> value);
    public IEnumerable`1<string> get_InstantiatesUri();
    public void set_InstantiatesUri(IEnumerable`1<string> value);
    public List`1<ResourceReference> get_BasedOn();
    public void set_BasedOn(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Replaces();
    public void set_Replaces(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_PartOf();
    public void set_PartOf(List`1<ResourceReference> value);
    public Code`1<RequestStatus> get_StatusElement();
    public void set_StatusElement(Code`1<RequestStatus> value);
    public Nullable`1<RequestStatus> get_Status();
    public void set_Status(Nullable`1<RequestStatus> value);
    public Code`1<CarePlanIntent> get_IntentElement();
    public void set_IntentElement(Code`1<CarePlanIntent> value);
    public Nullable`1<CarePlanIntent> get_Intent();
    public void set_Intent(Nullable`1<CarePlanIntent> value);
    public List`1<CodeableConcept> get_Category();
    public void set_Category(List`1<CodeableConcept> value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public FhirString get_DescriptionElement();
    public void set_DescriptionElement(FhirString value);
    public string get_Description();
    public void set_Description(string value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public Period get_Period();
    public void set_Period(Period value);
    public FhirDateTime get_CreatedElement();
    public void set_CreatedElement(FhirDateTime value);
    public string get_Created();
    public void set_Created(string value);
    public ResourceReference get_Author();
    public void set_Author(ResourceReference value);
    public List`1<ResourceReference> get_Contributor();
    public void set_Contributor(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_CareTeam();
    public void set_CareTeam(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Addresses();
    public void set_Addresses(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_SupportingInfo();
    public void set_SupportingInfo(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Goal();
    public void set_Goal(List`1<ResourceReference> value);
    public List`1<ActivityComponent> get_Activity();
    public void set_Activity(List`1<ActivityComponent> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.set_Code(List`1<CodeableConcept> value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CarePlan/<get_Children>d__132")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CarePlan/<get_NamedChildren>d__134")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CarePlan/<GetElementPairs>d__136")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("CareTeam", "http://hl7.org/fhir/StructureDefinition/CareTeam")]
public class Hl7.Fhir.Model.CareTeam : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<CareTeamStatus> _StatusElement;
    private List`1<CodeableConcept> _Category;
    private FhirString _NameElement;
    private ResourceReference _Subject;
    private ResourceReference _Encounter;
    private Period _Period;
    private List`1<ParticipantComponent> _Participant;
    private List`1<CodeableConcept> _ReasonCode;
    private List`1<ResourceReference> _ReasonReference;
    private List`1<ResourceReference> _ManagingOrganization;
    private List`1<ContactPoint> _Telecom;
    private List`1<Annotation> _Note;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("CareTeamStatus")]
[DataMemberAttribute]
public Code`1<CareTeamStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<CareTeamStatus> Status { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("CareTeamCategory")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Category { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute("period")]
[DataMemberAttribute]
public Period Period { get; public set; }
    [FhirElementAttribute("participant")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ParticipantComponent> Participant { get; public set; }
    [FhirElementAttribute("reasonCode")]
[BindingAttribute("CareTeamReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ReasonCode { get; public set; }
    [FhirElementAttribute("reasonReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ReasonReference { get; public set; }
    [FhirElementAttribute("managingOrganization")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ManagingOrganization { get; public set; }
    [FhirElementAttribute("telecom")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactPoint> Telecom { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<CareTeamStatus> get_StatusElement();
    public void set_StatusElement(Code`1<CareTeamStatus> value);
    public Nullable`1<CareTeamStatus> get_Status();
    public void set_Status(Nullable`1<CareTeamStatus> value);
    public List`1<CodeableConcept> get_Category();
    public void set_Category(List`1<CodeableConcept> value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public Period get_Period();
    public void set_Period(Period value);
    public List`1<ParticipantComponent> get_Participant();
    public void set_Participant(List`1<ParticipantComponent> value);
    public List`1<CodeableConcept> get_ReasonCode();
    public void set_ReasonCode(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_ReasonReference();
    public void set_ReasonReference(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_ManagingOrganization();
    public void set_ManagingOrganization(List`1<ResourceReference> value);
    public List`1<ContactPoint> get_Telecom();
    public void set_Telecom(List`1<ContactPoint> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.set_Code(List`1<CodeableConcept> value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CareTeam/<get_Children>d__74")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CareTeam/<get_NamedChildren>d__76")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CareTeam/<GetElementPairs>d__78")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("CatalogEntry", "http://hl7.org/fhir/StructureDefinition/CatalogEntry")]
public class Hl7.Fhir.Model.CatalogEntry : DomainResource {
    private List`1<Identifier> _Identifier;
    private CodeableConcept _Type;
    private FhirBoolean _OrderableElement;
    private ResourceReference _ReferencedItem;
    private List`1<Identifier> _AdditionalIdentifier;
    private List`1<CodeableConcept> _Classification;
    private Code`1<PublicationStatus> _StatusElement;
    private Period _ValidityPeriod;
    private FhirDateTime _ValidToElement;
    private FhirDateTime _LastUpdatedElement;
    private List`1<CodeableConcept> _AdditionalCharacteristic;
    private List`1<CodeableConcept> _AdditionalClassification;
    private List`1<RelatedEntryComponent> _RelatedEntry;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("type")]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("orderable")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirBoolean OrderableElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Orderable { get; public set; }
    [FhirElementAttribute("referencedItem")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference ReferencedItem { get; public set; }
    [FhirElementAttribute("additionalIdentifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> AdditionalIdentifier { get; public set; }
    [FhirElementAttribute("classification")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Classification { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("validityPeriod")]
[DataMemberAttribute]
public Period ValidityPeriod { get; public set; }
    [FhirElementAttribute("validTo")]
[DataMemberAttribute]
public FhirDateTime ValidToElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ValidTo { get; public set; }
    [FhirElementAttribute("lastUpdated")]
[DataMemberAttribute]
public FhirDateTime LastUpdatedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string LastUpdated { get; public set; }
    [FhirElementAttribute("additionalCharacteristic")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> AdditionalCharacteristic { get; public set; }
    [FhirElementAttribute("additionalClassification")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> AdditionalClassification { get; public set; }
    [FhirElementAttribute("relatedEntry")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RelatedEntryComponent> RelatedEntry { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public FhirBoolean get_OrderableElement();
    public void set_OrderableElement(FhirBoolean value);
    public Nullable`1<bool> get_Orderable();
    public void set_Orderable(Nullable`1<bool> value);
    public ResourceReference get_ReferencedItem();
    public void set_ReferencedItem(ResourceReference value);
    public List`1<Identifier> get_AdditionalIdentifier();
    public void set_AdditionalIdentifier(List`1<Identifier> value);
    public List`1<CodeableConcept> get_Classification();
    public void set_Classification(List`1<CodeableConcept> value);
    public Code`1<PublicationStatus> get_StatusElement();
    public void set_StatusElement(Code`1<PublicationStatus> value);
    public Nullable`1<PublicationStatus> get_Status();
    public void set_Status(Nullable`1<PublicationStatus> value);
    public Period get_ValidityPeriod();
    public void set_ValidityPeriod(Period value);
    public FhirDateTime get_ValidToElement();
    public void set_ValidToElement(FhirDateTime value);
    public string get_ValidTo();
    public void set_ValidTo(string value);
    public FhirDateTime get_LastUpdatedElement();
    public void set_LastUpdatedElement(FhirDateTime value);
    public string get_LastUpdated();
    public void set_LastUpdated(string value);
    public List`1<CodeableConcept> get_AdditionalCharacteristic();
    public void set_AdditionalCharacteristic(List`1<CodeableConcept> value);
    public List`1<CodeableConcept> get_AdditionalClassification();
    public void set_AdditionalClassification(List`1<CodeableConcept> value);
    public List`1<RelatedEntryComponent> get_RelatedEntry();
    public void set_RelatedEntry(List`1<RelatedEntryComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CatalogEntry/<get_Children>d__76")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CatalogEntry/<get_NamedChildren>d__78")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CatalogEntry/<GetElementPairs>d__80")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("ChargeItem", "http://hl7.org/fhir/StructureDefinition/ChargeItem")]
public class Hl7.Fhir.Model.ChargeItem : DomainResource {
    private List`1<Identifier> _Identifier;
    private List`1<FhirUri> _DefinitionUriElement;
    private List`1<Canonical> _DefinitionCanonicalElement;
    private Code`1<ChargeItemStatus> _StatusElement;
    private List`1<ResourceReference> _PartOf;
    private CodeableConcept _Code;
    private ResourceReference _Subject;
    private ResourceReference _Context;
    private DataType _Occurrence;
    private List`1<PerformerComponent> _Performer;
    private ResourceReference _PerformingOrganization;
    private ResourceReference _RequestingOrganization;
    private ResourceReference _CostCenter;
    private Quantity _Quantity;
    private List`1<CodeableConcept> _Bodysite;
    private FhirDecimal _FactorOverrideElement;
    private Money _PriceOverride;
    private FhirString _OverrideReasonElement;
    private ResourceReference _Enterer;
    private FhirDateTime _EnteredDateElement;
    private List`1<CodeableConcept> _Reason;
    private List`1<ResourceReference> _Service;
    private DataType _Product;
    private List`1<ResourceReference> _Account;
    private List`1<Annotation> _Note;
    private List`1<ResourceReference> _SupportingInformation;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("definitionUri")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirUri> DefinitionUriElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> DefinitionUri { get; public set; }
    [FhirElementAttribute("definitionCanonical")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> DefinitionCanonicalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> DefinitionCanonical { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("ChargeItemStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ChargeItemStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ChargeItemStatus> Status { get; public set; }
    [FhirElementAttribute("partOf")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> PartOf { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("ChargeItemCode")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("context")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Context { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Occurrence { get; public set; }
    [FhirElementAttribute("performer")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<PerformerComponent> Performer { get; public set; }
    [FhirElementAttribute("performingOrganization")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference PerformingOrganization { get; public set; }
    [FhirElementAttribute("requestingOrganization")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference RequestingOrganization { get; public set; }
    [FhirElementAttribute("costCenter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference CostCenter { get; public set; }
    [FhirElementAttribute("quantity")]
[DataMemberAttribute]
public Quantity Quantity { get; public set; }
    [FhirElementAttribute("bodysite")]
[BindingAttribute("BodySite")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Bodysite { get; public set; }
    [FhirElementAttribute("factorOverride")]
[DataMemberAttribute]
public FhirDecimal FactorOverrideElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<decimal> FactorOverride { get; public set; }
    [FhirElementAttribute("priceOverride")]
[DataMemberAttribute]
public Money PriceOverride { get; public set; }
    [FhirElementAttribute("overrideReason")]
[DataMemberAttribute]
public FhirString OverrideReasonElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string OverrideReason { get; public set; }
    [FhirElementAttribute("enterer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Enterer { get; public set; }
    [FhirElementAttribute("enteredDate")]
[DataMemberAttribute]
public FhirDateTime EnteredDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string EnteredDate { get; public set; }
    [FhirElementAttribute("reason")]
[BindingAttribute("ChargeItemReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Reason { get; public set; }
    [FhirElementAttribute("service")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Service { get; public set; }
    [FhirElementAttribute]
[BindingAttribute("ChargeItemProduct")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Product { get; public set; }
    [FhirElementAttribute("account")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Account { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("supportingInformation")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> SupportingInformation { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<FhirUri> get_DefinitionUriElement();
    public void set_DefinitionUriElement(List`1<FhirUri> value);
    public IEnumerable`1<string> get_DefinitionUri();
    public void set_DefinitionUri(IEnumerable`1<string> value);
    public List`1<Canonical> get_DefinitionCanonicalElement();
    public void set_DefinitionCanonicalElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_DefinitionCanonical();
    public void set_DefinitionCanonical(IEnumerable`1<string> value);
    public Code`1<ChargeItemStatus> get_StatusElement();
    public void set_StatusElement(Code`1<ChargeItemStatus> value);
    public Nullable`1<ChargeItemStatus> get_Status();
    public void set_Status(Nullable`1<ChargeItemStatus> value);
    public List`1<ResourceReference> get_PartOf();
    public void set_PartOf(List`1<ResourceReference> value);
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Context();
    public void set_Context(ResourceReference value);
    public DataType get_Occurrence();
    public void set_Occurrence(DataType value);
    public List`1<PerformerComponent> get_Performer();
    public void set_Performer(List`1<PerformerComponent> value);
    public ResourceReference get_PerformingOrganization();
    public void set_PerformingOrganization(ResourceReference value);
    public ResourceReference get_RequestingOrganization();
    public void set_RequestingOrganization(ResourceReference value);
    public ResourceReference get_CostCenter();
    public void set_CostCenter(ResourceReference value);
    public Quantity get_Quantity();
    public void set_Quantity(Quantity value);
    public List`1<CodeableConcept> get_Bodysite();
    public void set_Bodysite(List`1<CodeableConcept> value);
    public FhirDecimal get_FactorOverrideElement();
    public void set_FactorOverrideElement(FhirDecimal value);
    public Nullable`1<decimal> get_FactorOverride();
    public void set_FactorOverride(Nullable`1<decimal> value);
    public Money get_PriceOverride();
    public void set_PriceOverride(Money value);
    public FhirString get_OverrideReasonElement();
    public void set_OverrideReasonElement(FhirString value);
    public string get_OverrideReason();
    public void set_OverrideReason(string value);
    public ResourceReference get_Enterer();
    public void set_Enterer(ResourceReference value);
    public FhirDateTime get_EnteredDateElement();
    public void set_EnteredDateElement(FhirDateTime value);
    public string get_EnteredDate();
    public void set_EnteredDate(string value);
    public List`1<CodeableConcept> get_Reason();
    public void set_Reason(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_Service();
    public void set_Service(List`1<ResourceReference> value);
    public DataType get_Product();
    public void set_Product(DataType value);
    public List`1<ResourceReference> get_Account();
    public void set_Account(List`1<ResourceReference> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public List`1<ResourceReference> get_SupportingInformation();
    public void set_SupportingInformation(List`1<ResourceReference> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ChargeItem/<get_Children>d__138")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ChargeItem/<get_NamedChildren>d__140")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ChargeItem/<GetElementPairs>d__142")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("ChargeItemDefinition", "http://hl7.org/fhir/StructureDefinition/ChargeItemDefinition")]
public class Hl7.Fhir.Model.ChargeItemDefinition : DomainResource {
    private FhirUri _UrlElement;
    private List`1<Identifier> _Identifier;
    private FhirString _VersionElement;
    private FhirString _TitleElement;
    private List`1<FhirUri> _DerivedFromUriElement;
    private List`1<Canonical> _PartOfElement;
    private List`1<Canonical> _ReplacesElement;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirBoolean _ExperimentalElement;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _CopyrightElement;
    private Date _ApprovalDateElement;
    private Date _LastReviewDateElement;
    private Period _EffectivePeriod;
    private CodeableConcept _Code;
    private List`1<ResourceReference> _Instance;
    private List`1<ApplicabilityComponent> _Applicability;
    private List`1<PropertyGroupComponent> _PropertyGroup;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("derivedFromUri")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirUri> DerivedFromUriElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> DerivedFromUri { get; public set; }
    [FhirElementAttribute("partOf")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> PartOfElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> PartOf { get; public set; }
    [FhirElementAttribute("replaces")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> ReplacesElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Replaces { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("experimental")]
[DataMemberAttribute]
public FhirBoolean ExperimentalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Experimental { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("copyright")]
[DataMemberAttribute]
public Markdown CopyrightElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Copyright { get; public set; }
    [FhirElementAttribute("approvalDate")]
[DataMemberAttribute]
public Date ApprovalDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ApprovalDate { get; public set; }
    [FhirElementAttribute("lastReviewDate")]
[DataMemberAttribute]
public Date LastReviewDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string LastReviewDate { get; public set; }
    [FhirElementAttribute("effectivePeriod")]
[DataMemberAttribute]
public Period EffectivePeriod { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("ChargeItemDefinitionCode")]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [FhirElementAttribute("instance")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Instance { get; public set; }
    [FhirElementAttribute("applicability")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ApplicabilityComponent> Applicability { get; public set; }
    [FhirElementAttribute("propertyGroup")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<PropertyGroupComponent> PropertyGroup { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public FhirUri get_UrlElement();
    public void set_UrlElement(FhirUri value);
    public string get_Url();
    public void set_Url(string value);
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirString get_VersionElement();
    public void set_VersionElement(FhirString value);
    public string get_Version();
    public void set_Version(string value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public List`1<FhirUri> get_DerivedFromUriElement();
    public void set_DerivedFromUriElement(List`1<FhirUri> value);
    public IEnumerable`1<string> get_DerivedFromUri();
    public void set_DerivedFromUri(IEnumerable`1<string> value);
    public List`1<Canonical> get_PartOfElement();
    public void set_PartOfElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_PartOf();
    public void set_PartOf(IEnumerable`1<string> value);
    public List`1<Canonical> get_ReplacesElement();
    public void set_ReplacesElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_Replaces();
    public void set_Replaces(IEnumerable`1<string> value);
    public Code`1<PublicationStatus> get_StatusElement();
    public void set_StatusElement(Code`1<PublicationStatus> value);
    public Nullable`1<PublicationStatus> get_Status();
    public void set_Status(Nullable`1<PublicationStatus> value);
    public FhirBoolean get_ExperimentalElement();
    public void set_ExperimentalElement(FhirBoolean value);
    public Nullable`1<bool> get_Experimental();
    public void set_Experimental(Nullable`1<bool> value);
    public FhirDateTime get_DateElement();
    public void set_DateElement(FhirDateTime value);
    public string get_Date();
    public void set_Date(string value);
    public FhirString get_PublisherElement();
    public void set_PublisherElement(FhirString value);
    public string get_Publisher();
    public void set_Publisher(string value);
    public List`1<ContactDetail> get_Contact();
    public void set_Contact(List`1<ContactDetail> value);
    public Markdown get_DescriptionElement();
    public void set_DescriptionElement(Markdown value);
    public string get_Description();
    public void set_Description(string value);
    public List`1<UsageContext> get_UseContext();
    public void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public Markdown get_CopyrightElement();
    public void set_CopyrightElement(Markdown value);
    public string get_Copyright();
    public void set_Copyright(string value);
    public Date get_ApprovalDateElement();
    public void set_ApprovalDateElement(Date value);
    public string get_ApprovalDate();
    public void set_ApprovalDate(string value);
    public Date get_LastReviewDateElement();
    public void set_LastReviewDateElement(Date value);
    public string get_LastReviewDate();
    public void set_LastReviewDate(string value);
    public Period get_EffectivePeriod();
    public void set_EffectivePeriod(Period value);
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public List`1<ResourceReference> get_Instance();
    public void set_Instance(List`1<ResourceReference> value);
    public List`1<ApplicabilityComponent> get_Applicability();
    public void set_Applicability(List`1<ApplicabilityComponent> value);
    public List`1<PropertyGroupComponent> get_PropertyGroup();
    public void set_PropertyGroup(List`1<PropertyGroupComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ChargeItemDefinition/<get_Children>d__151")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ChargeItemDefinition/<get_NamedChildren>d__153")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ChargeItemDefinition/<GetElementPairs>d__155")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Claim", "http://hl7.org/fhir/StructureDefinition/Claim")]
public class Hl7.Fhir.Model.Claim : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<FinancialResourceStatusCodes> _StatusElement;
    private CodeableConcept _Type;
    private CodeableConcept _SubType;
    private Code`1<ClaimUseCode> _UseElement;
    private ResourceReference _Patient;
    private Period _BillablePeriod;
    private FhirDateTime _CreatedElement;
    private ResourceReference _Enterer;
    private ResourceReference _Insurer;
    private ResourceReference _Provider;
    private CodeableConcept _Priority;
    private CodeableConcept _FundsReserve;
    private List`1<RelatedClaimComponent> _Related;
    private ResourceReference _Prescription;
    private ResourceReference _OriginalPrescription;
    private PayeeComponent _Payee;
    private ResourceReference _Referral;
    private ResourceReference _Facility;
    private List`1<CareTeamComponent> _CareTeam;
    private List`1<SupportingInformationComponent> _SupportingInfo;
    private List`1<DiagnosisComponent> _Diagnosis;
    private List`1<ProcedureComponent> _Procedure;
    private List`1<InsuranceComponent> _Insurance;
    private AccidentComponent _Accident;
    private List`1<ItemComponent> _Item;
    private Money _Total;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("ClaimStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<FinancialResourceStatusCodes> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<FinancialResourceStatusCodes> Status { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("ClaimType")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("subType")]
[BindingAttribute("ClaimSubType")]
[DataMemberAttribute]
public CodeableConcept SubType { get; public set; }
    [FhirElementAttribute("use")]
[DeclaredTypeAttribute]
[BindingAttribute("Use")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ClaimUseCode> UseElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ClaimUseCode> Use { get; public set; }
    [FhirElementAttribute("patient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Patient { get; public set; }
    [FhirElementAttribute("billablePeriod")]
[DataMemberAttribute]
public Period BillablePeriod { get; public set; }
    [FhirElementAttribute("created")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirDateTime CreatedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Created { get; public set; }
    [FhirElementAttribute("enterer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Enterer { get; public set; }
    [FhirElementAttribute("insurer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Insurer { get; public set; }
    [FhirElementAttribute("provider")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Provider { get; public set; }
    [FhirElementAttribute("priority")]
[BindingAttribute("ProcessPriority")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept Priority { get; public set; }
    [FhirElementAttribute("fundsReserve")]
[BindingAttribute("FundsReserve")]
[DataMemberAttribute]
public CodeableConcept FundsReserve { get; public set; }
    [FhirElementAttribute("related")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RelatedClaimComponent> Related { get; public set; }
    [FhirElementAttribute("prescription")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Prescription { get; public set; }
    [FhirElementAttribute("originalPrescription")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference OriginalPrescription { get; public set; }
    [FhirElementAttribute("payee")]
[DataMemberAttribute]
public PayeeComponent Payee { get; public set; }
    [FhirElementAttribute("referral")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Referral { get; public set; }
    [FhirElementAttribute("facility")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Facility { get; public set; }
    [FhirElementAttribute("careTeam")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CareTeamComponent> CareTeam { get; public set; }
    [FhirElementAttribute("supportingInfo")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<SupportingInformationComponent> SupportingInfo { get; public set; }
    [FhirElementAttribute("diagnosis")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<DiagnosisComponent> Diagnosis { get; public set; }
    [FhirElementAttribute("procedure")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ProcedureComponent> Procedure { get; public set; }
    [FhirElementAttribute("insurance")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<InsuranceComponent> Insurance { get; public set; }
    [FhirElementAttribute("accident")]
[DataMemberAttribute]
public AccidentComponent Accident { get; public set; }
    [FhirElementAttribute("item")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ItemComponent> Item { get; public set; }
    [FhirElementAttribute("total")]
[DataMemberAttribute]
public Money Total { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<FinancialResourceStatusCodes> get_StatusElement();
    public void set_StatusElement(Code`1<FinancialResourceStatusCodes> value);
    public Nullable`1<FinancialResourceStatusCodes> get_Status();
    public void set_Status(Nullable`1<FinancialResourceStatusCodes> value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public CodeableConcept get_SubType();
    public void set_SubType(CodeableConcept value);
    public Code`1<ClaimUseCode> get_UseElement();
    public void set_UseElement(Code`1<ClaimUseCode> value);
    public Nullable`1<ClaimUseCode> get_Use();
    public void set_Use(Nullable`1<ClaimUseCode> value);
    public ResourceReference get_Patient();
    public void set_Patient(ResourceReference value);
    public Period get_BillablePeriod();
    public void set_BillablePeriod(Period value);
    public FhirDateTime get_CreatedElement();
    public void set_CreatedElement(FhirDateTime value);
    public string get_Created();
    public void set_Created(string value);
    public ResourceReference get_Enterer();
    public void set_Enterer(ResourceReference value);
    public ResourceReference get_Insurer();
    public void set_Insurer(ResourceReference value);
    public ResourceReference get_Provider();
    public void set_Provider(ResourceReference value);
    public CodeableConcept get_Priority();
    public void set_Priority(CodeableConcept value);
    public CodeableConcept get_FundsReserve();
    public void set_FundsReserve(CodeableConcept value);
    public List`1<RelatedClaimComponent> get_Related();
    public void set_Related(List`1<RelatedClaimComponent> value);
    public ResourceReference get_Prescription();
    public void set_Prescription(ResourceReference value);
    public ResourceReference get_OriginalPrescription();
    public void set_OriginalPrescription(ResourceReference value);
    public PayeeComponent get_Payee();
    public void set_Payee(PayeeComponent value);
    public ResourceReference get_Referral();
    public void set_Referral(ResourceReference value);
    public ResourceReference get_Facility();
    public void set_Facility(ResourceReference value);
    public List`1<CareTeamComponent> get_CareTeam();
    public void set_CareTeam(List`1<CareTeamComponent> value);
    public List`1<SupportingInformationComponent> get_SupportingInfo();
    public void set_SupportingInfo(List`1<SupportingInformationComponent> value);
    public List`1<DiagnosisComponent> get_Diagnosis();
    public void set_Diagnosis(List`1<DiagnosisComponent> value);
    public List`1<ProcedureComponent> get_Procedure();
    public void set_Procedure(List`1<ProcedureComponent> value);
    public List`1<InsuranceComponent> get_Insurance();
    public void set_Insurance(List`1<InsuranceComponent> value);
    public AccidentComponent get_Accident();
    public void set_Accident(AccidentComponent value);
    public List`1<ItemComponent> get_Item();
    public void set_Item(List`1<ItemComponent> value);
    public Money get_Total();
    public void set_Total(Money value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Claim/<get_Children>d__142")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Claim/<get_NamedChildren>d__144")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Claim/<GetElementPairs>d__146")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("ClaimProcessingCodes", "http://hl7.org/fhir/ValueSet/remittance-outcome", "http://hl7.org/fhir/remittance-outcome")]
public enum Hl7.Fhir.Model.ClaimProcessingCodes : Enum {
    public int value__;
    [EnumLiteralAttribute("queued", "")]
[DescriptionAttribute("Queued")]
public static ClaimProcessingCodes Queued;
    [EnumLiteralAttribute("complete", "")]
[DescriptionAttribute("Processing Complete")]
public static ClaimProcessingCodes Complete;
    [EnumLiteralAttribute("error", "")]
[DescriptionAttribute("Error")]
public static ClaimProcessingCodes Error;
    [EnumLiteralAttribute("partial", "")]
[DescriptionAttribute("Partial Processing")]
public static ClaimProcessingCodes Partial;
}
[DataContractAttribute]
[FhirTypeAttribute("ClaimResponse", "http://hl7.org/fhir/StructureDefinition/ClaimResponse")]
public class Hl7.Fhir.Model.ClaimResponse : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<FinancialResourceStatusCodes> _StatusElement;
    private CodeableConcept _Type;
    private CodeableConcept _SubType;
    private Code`1<ClaimUseCode> _UseElement;
    private ResourceReference _Patient;
    private FhirDateTime _CreatedElement;
    private ResourceReference _Insurer;
    private ResourceReference _Requestor;
    private ResourceReference _Request;
    private Code`1<ClaimProcessingCodes> _OutcomeElement;
    private FhirString _DispositionElement;
    private FhirString _PreAuthRefElement;
    private Period _PreAuthPeriod;
    private CodeableConcept _PayeeType;
    private List`1<ItemComponent> _Item;
    private List`1<AddedItemComponent> _AddItem;
    private List`1<AdjudicationComponent> _Adjudication;
    private List`1<TotalComponent> _Total;
    private PaymentComponent _Payment;
    private CodeableConcept _FundsReserve;
    private CodeableConcept _FormCode;
    private Attachment _Form;
    private List`1<NoteComponent> _ProcessNote;
    private List`1<ResourceReference> _CommunicationRequest;
    private List`1<InsuranceComponent> _Insurance;
    private List`1<ErrorComponent> _Error;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("ClaimResponseStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<FinancialResourceStatusCodes> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<FinancialResourceStatusCodes> Status { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("ClaimType")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("subType")]
[BindingAttribute("ClaimSubType")]
[DataMemberAttribute]
public CodeableConcept SubType { get; public set; }
    [FhirElementAttribute("use")]
[DeclaredTypeAttribute]
[BindingAttribute("Use")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ClaimUseCode> UseElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ClaimUseCode> Use { get; public set; }
    [FhirElementAttribute("patient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Patient { get; public set; }
    [FhirElementAttribute("created")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirDateTime CreatedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Created { get; public set; }
    [FhirElementAttribute("insurer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Insurer { get; public set; }
    [FhirElementAttribute("requestor")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Requestor { get; public set; }
    [FhirElementAttribute("request")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Request { get; public set; }
    [FhirElementAttribute("outcome")]
[DeclaredTypeAttribute]
[BindingAttribute("RemittanceOutcome")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ClaimProcessingCodes> OutcomeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ClaimProcessingCodes> Outcome { get; public set; }
    [FhirElementAttribute("disposition")]
[DataMemberAttribute]
public FhirString DispositionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Disposition { get; public set; }
    [FhirElementAttribute("preAuthRef")]
[DataMemberAttribute]
public FhirString PreAuthRefElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string PreAuthRef { get; public set; }
    [FhirElementAttribute("preAuthPeriod")]
[DataMemberAttribute]
public Period PreAuthPeriod { get; public set; }
    [FhirElementAttribute("payeeType")]
[BindingAttribute("PayeeType")]
[DataMemberAttribute]
public CodeableConcept PayeeType { get; public set; }
    [FhirElementAttribute("item")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ItemComponent> Item { get; public set; }
    [FhirElementAttribute("addItem")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<AddedItemComponent> AddItem { get; public set; }
    [FhirElementAttribute("adjudication")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<AdjudicationComponent> Adjudication { get; public set; }
    [FhirElementAttribute("total")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<TotalComponent> Total { get; public set; }
    [FhirElementAttribute("payment")]
[DataMemberAttribute]
public PaymentComponent Payment { get; public set; }
    [FhirElementAttribute("fundsReserve")]
[BindingAttribute("FundsReserve")]
[DataMemberAttribute]
public CodeableConcept FundsReserve { get; public set; }
    [FhirElementAttribute("formCode")]
[BindingAttribute("Forms")]
[DataMemberAttribute]
public CodeableConcept FormCode { get; public set; }
    [FhirElementAttribute("form")]
[DataMemberAttribute]
public Attachment Form { get; public set; }
    [FhirElementAttribute("processNote")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<NoteComponent> ProcessNote { get; public set; }
    [FhirElementAttribute("communicationRequest")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> CommunicationRequest { get; public set; }
    [FhirElementAttribute("insurance")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<InsuranceComponent> Insurance { get; public set; }
    [FhirElementAttribute("error")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ErrorComponent> Error { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<FinancialResourceStatusCodes> get_StatusElement();
    public void set_StatusElement(Code`1<FinancialResourceStatusCodes> value);
    public Nullable`1<FinancialResourceStatusCodes> get_Status();
    public void set_Status(Nullable`1<FinancialResourceStatusCodes> value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public CodeableConcept get_SubType();
    public void set_SubType(CodeableConcept value);
    public Code`1<ClaimUseCode> get_UseElement();
    public void set_UseElement(Code`1<ClaimUseCode> value);
    public Nullable`1<ClaimUseCode> get_Use();
    public void set_Use(Nullable`1<ClaimUseCode> value);
    public ResourceReference get_Patient();
    public void set_Patient(ResourceReference value);
    public FhirDateTime get_CreatedElement();
    public void set_CreatedElement(FhirDateTime value);
    public string get_Created();
    public void set_Created(string value);
    public ResourceReference get_Insurer();
    public void set_Insurer(ResourceReference value);
    public ResourceReference get_Requestor();
    public void set_Requestor(ResourceReference value);
    public ResourceReference get_Request();
    public void set_Request(ResourceReference value);
    public Code`1<ClaimProcessingCodes> get_OutcomeElement();
    public void set_OutcomeElement(Code`1<ClaimProcessingCodes> value);
    public Nullable`1<ClaimProcessingCodes> get_Outcome();
    public void set_Outcome(Nullable`1<ClaimProcessingCodes> value);
    public FhirString get_DispositionElement();
    public void set_DispositionElement(FhirString value);
    public string get_Disposition();
    public void set_Disposition(string value);
    public FhirString get_PreAuthRefElement();
    public void set_PreAuthRefElement(FhirString value);
    public string get_PreAuthRef();
    public void set_PreAuthRef(string value);
    public Period get_PreAuthPeriod();
    public void set_PreAuthPeriod(Period value);
    public CodeableConcept get_PayeeType();
    public void set_PayeeType(CodeableConcept value);
    public List`1<ItemComponent> get_Item();
    public void set_Item(List`1<ItemComponent> value);
    public List`1<AddedItemComponent> get_AddItem();
    public void set_AddItem(List`1<AddedItemComponent> value);
    public List`1<AdjudicationComponent> get_Adjudication();
    public void set_Adjudication(List`1<AdjudicationComponent> value);
    public List`1<TotalComponent> get_Total();
    public void set_Total(List`1<TotalComponent> value);
    public PaymentComponent get_Payment();
    public void set_Payment(PaymentComponent value);
    public CodeableConcept get_FundsReserve();
    public void set_FundsReserve(CodeableConcept value);
    public CodeableConcept get_FormCode();
    public void set_FormCode(CodeableConcept value);
    public Attachment get_Form();
    public void set_Form(Attachment value);
    public List`1<NoteComponent> get_ProcessNote();
    public void set_ProcessNote(List`1<NoteComponent> value);
    public List`1<ResourceReference> get_CommunicationRequest();
    public void set_CommunicationRequest(List`1<ResourceReference> value);
    public List`1<InsuranceComponent> get_Insurance();
    public void set_Insurance(List`1<InsuranceComponent> value);
    public List`1<ErrorComponent> get_Error();
    public void set_Error(List`1<ErrorComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ClaimResponse/<get_Children>d__148")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ClaimResponse/<get_NamedChildren>d__150")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ClaimResponse/<GetElementPairs>d__152")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("Use", "http://hl7.org/fhir/ValueSet/claim-use", "http://hl7.org/fhir/claim-use")]
public enum Hl7.Fhir.Model.ClaimUseCode : Enum {
    public int value__;
    [EnumLiteralAttribute("claim", "")]
[DescriptionAttribute("Claim")]
public static ClaimUseCode Claim;
    [EnumLiteralAttribute("preauthorization", "")]
[DescriptionAttribute("Preauthorization")]
public static ClaimUseCode Preauthorization;
    [EnumLiteralAttribute("predetermination", "")]
[DescriptionAttribute("Predetermination")]
public static ClaimUseCode Predetermination;
}
[DataContractAttribute]
[FhirTypeAttribute("ClinicalImpression", "http://hl7.org/fhir/StructureDefinition/ClinicalImpression")]
public class Hl7.Fhir.Model.ClinicalImpression : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<ClinicalImpressionStatus> _StatusElement;
    private CodeableConcept _StatusReason;
    private CodeableConcept _Code;
    private FhirString _DescriptionElement;
    private ResourceReference _Subject;
    private ResourceReference _Encounter;
    private DataType _Effective;
    private FhirDateTime _DateElement;
    private ResourceReference _Assessor;
    private ResourceReference _Previous;
    private List`1<ResourceReference> _Problem;
    private List`1<InvestigationComponent> _Investigation;
    private List`1<FhirUri> _ProtocolElement;
    private FhirString _SummaryElement;
    private List`1<FindingComponent> _Finding;
    private List`1<CodeableConcept> _PrognosisCodeableConcept;
    private List`1<ResourceReference> _PrognosisReference;
    private List`1<ResourceReference> _SupportingInfo;
    private List`1<Annotation> _Note;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("ClinicalImpressionStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ClinicalImpressionStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ClinicalImpressionStatus> Status { get; public set; }
    [FhirElementAttribute("statusReason")]
[BindingAttribute("ClinicalImpressionStatusReason")]
[DataMemberAttribute]
public CodeableConcept StatusReason { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("ClinicalImpressionCode")]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public FhirString DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Effective { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("assessor")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Assessor { get; public set; }
    [FhirElementAttribute("previous")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Previous { get; public set; }
    [FhirElementAttribute("problem")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Problem { get; public set; }
    [FhirElementAttribute("investigation")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<InvestigationComponent> Investigation { get; public set; }
    [FhirElementAttribute("protocol")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirUri> ProtocolElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Protocol { get; public set; }
    [FhirElementAttribute("summary")]
[DataMemberAttribute]
public FhirString SummaryElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Summary { get; public set; }
    [FhirElementAttribute("finding")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FindingComponent> Finding { get; public set; }
    [FhirElementAttribute("prognosisCodeableConcept")]
[BindingAttribute("ClinicalImpressionPrognosis")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> PrognosisCodeableConcept { get; public set; }
    [FhirElementAttribute("prognosisReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> PrognosisReference { get; public set; }
    [FhirElementAttribute("supportingInfo")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> SupportingInfo { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<ClinicalImpressionStatus> get_StatusElement();
    public void set_StatusElement(Code`1<ClinicalImpressionStatus> value);
    public Nullable`1<ClinicalImpressionStatus> get_Status();
    public void set_Status(Nullable`1<ClinicalImpressionStatus> value);
    public CodeableConcept get_StatusReason();
    public void set_StatusReason(CodeableConcept value);
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public FhirString get_DescriptionElement();
    public void set_DescriptionElement(FhirString value);
    public string get_Description();
    public void set_Description(string value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public DataType get_Effective();
    public void set_Effective(DataType value);
    public FhirDateTime get_DateElement();
    public void set_DateElement(FhirDateTime value);
    public string get_Date();
    public void set_Date(string value);
    public ResourceReference get_Assessor();
    public void set_Assessor(ResourceReference value);
    public ResourceReference get_Previous();
    public void set_Previous(ResourceReference value);
    public List`1<ResourceReference> get_Problem();
    public void set_Problem(List`1<ResourceReference> value);
    public List`1<InvestigationComponent> get_Investigation();
    public void set_Investigation(List`1<InvestigationComponent> value);
    public List`1<FhirUri> get_ProtocolElement();
    public void set_ProtocolElement(List`1<FhirUri> value);
    public IEnumerable`1<string> get_Protocol();
    public void set_Protocol(IEnumerable`1<string> value);
    public FhirString get_SummaryElement();
    public void set_SummaryElement(FhirString value);
    public string get_Summary();
    public void set_Summary(string value);
    public List`1<FindingComponent> get_Finding();
    public void set_Finding(List`1<FindingComponent> value);
    public List`1<CodeableConcept> get_PrognosisCodeableConcept();
    public void set_PrognosisCodeableConcept(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_PrognosisReference();
    public void set_PrognosisReference(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_SupportingInfo();
    public void set_SupportingInfo(List`1<ResourceReference> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ClinicalImpression/<get_Children>d__112")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ClinicalImpression/<get_NamedChildren>d__114")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ClinicalImpression/<GetElementPairs>d__116")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Communication", "http://hl7.org/fhir/StructureDefinition/Communication")]
public class Hl7.Fhir.Model.Communication : DomainResource {
    private List`1<Identifier> _Identifier;
    private List`1<Canonical> _InstantiatesCanonicalElement;
    private List`1<FhirUri> _InstantiatesUriElement;
    private List`1<ResourceReference> _BasedOn;
    private List`1<ResourceReference> _PartOf;
    private List`1<ResourceReference> _InResponseTo;
    private Code`1<EventStatus> _StatusElement;
    private CodeableConcept _StatusReason;
    private List`1<CodeableConcept> _Category;
    private Code`1<RequestPriority> _PriorityElement;
    private List`1<CodeableConcept> _Medium;
    private ResourceReference _Subject;
    private CodeableConcept _Topic;
    private List`1<ResourceReference> _About;
    private ResourceReference _Encounter;
    private FhirDateTime _SentElement;
    private FhirDateTime _ReceivedElement;
    private List`1<ResourceReference> _Recipient;
    private ResourceReference _Sender;
    private List`1<CodeableConcept> _ReasonCode;
    private List`1<ResourceReference> _ReasonReference;
    private List`1<PayloadComponent> _Payload;
    private List`1<Annotation> _Note;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("instantiatesCanonical")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> InstantiatesCanonicalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> InstantiatesCanonical { get; public set; }
    [FhirElementAttribute("instantiatesUri")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirUri> InstantiatesUriElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> InstantiatesUri { get; public set; }
    [FhirElementAttribute("basedOn")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> BasedOn { get; public set; }
    [FhirElementAttribute("partOf")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> PartOf { get; public set; }
    [FhirElementAttribute("inResponseTo")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> InResponseTo { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("CommunicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<EventStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<EventStatus> Status { get; public set; }
    [FhirElementAttribute("statusReason")]
[BindingAttribute("CommunicationNotDoneReason")]
[DataMemberAttribute]
public CodeableConcept StatusReason { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("CommunicationCategory")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Category { get; public set; }
    [FhirElementAttribute("priority")]
[DeclaredTypeAttribute]
[BindingAttribute("CommunicationPriority")]
[DataMemberAttribute]
public Code`1<RequestPriority> PriorityElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<RequestPriority> Priority { get; public set; }
    [FhirElementAttribute("medium")]
[BindingAttribute("CommunicationMedium")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Medium { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("topic")]
[BindingAttribute("CommunicationTopic")]
[DataMemberAttribute]
public CodeableConcept Topic { get; public set; }
    [FhirElementAttribute("about")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> About { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute("sent")]
[DataMemberAttribute]
public FhirDateTime SentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Sent { get; public set; }
    [FhirElementAttribute("received")]
[DataMemberAttribute]
public FhirDateTime ReceivedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Received { get; public set; }
    [FhirElementAttribute("recipient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Recipient { get; public set; }
    [FhirElementAttribute("sender")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Sender { get; public set; }
    [FhirElementAttribute("reasonCode")]
[BindingAttribute("CommunicationReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ReasonCode { get; public set; }
    [FhirElementAttribute("reasonReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ReasonReference { get; public set; }
    [FhirElementAttribute("payload")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<PayloadComponent> Payload { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<Canonical> get_InstantiatesCanonicalElement();
    public void set_InstantiatesCanonicalElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_InstantiatesCanonical();
    public void set_InstantiatesCanonical(IEnumerable`1<string> value);
    public List`1<FhirUri> get_InstantiatesUriElement();
    public void set_InstantiatesUriElement(List`1<FhirUri> value);
    public IEnumerable`1<string> get_InstantiatesUri();
    public void set_InstantiatesUri(IEnumerable`1<string> value);
    public List`1<ResourceReference> get_BasedOn();
    public void set_BasedOn(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_PartOf();
    public void set_PartOf(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_InResponseTo();
    public void set_InResponseTo(List`1<ResourceReference> value);
    public Code`1<EventStatus> get_StatusElement();
    public void set_StatusElement(Code`1<EventStatus> value);
    public Nullable`1<EventStatus> get_Status();
    public void set_Status(Nullable`1<EventStatus> value);
    public CodeableConcept get_StatusReason();
    public void set_StatusReason(CodeableConcept value);
    public List`1<CodeableConcept> get_Category();
    public void set_Category(List`1<CodeableConcept> value);
    public Code`1<RequestPriority> get_PriorityElement();
    public void set_PriorityElement(Code`1<RequestPriority> value);
    public Nullable`1<RequestPriority> get_Priority();
    public void set_Priority(Nullable`1<RequestPriority> value);
    public List`1<CodeableConcept> get_Medium();
    public void set_Medium(List`1<CodeableConcept> value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public CodeableConcept get_Topic();
    public void set_Topic(CodeableConcept value);
    public List`1<ResourceReference> get_About();
    public void set_About(List`1<ResourceReference> value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public FhirDateTime get_SentElement();
    public void set_SentElement(FhirDateTime value);
    public string get_Sent();
    public void set_Sent(string value);
    public FhirDateTime get_ReceivedElement();
    public void set_ReceivedElement(FhirDateTime value);
    public string get_Received();
    public void set_Received(string value);
    public List`1<ResourceReference> get_Recipient();
    public void set_Recipient(List`1<ResourceReference> value);
    public ResourceReference get_Sender();
    public void set_Sender(ResourceReference value);
    public List`1<CodeableConcept> get_ReasonCode();
    public void set_ReasonCode(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_ReasonReference();
    public void set_ReasonReference(List`1<ResourceReference> value);
    public List`1<PayloadComponent> get_Payload();
    public void set_Payload(List`1<PayloadComponent> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.set_Code(List`1<CodeableConcept> value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Communication/<get_Children>d__125")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Communication/<get_NamedChildren>d__127")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Communication/<GetElementPairs>d__129")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("CommunicationRequest", "http://hl7.org/fhir/StructureDefinition/CommunicationRequest")]
public class Hl7.Fhir.Model.CommunicationRequest : DomainResource {
    private List`1<Identifier> _Identifier;
    private List`1<ResourceReference> _BasedOn;
    private List`1<ResourceReference> _Replaces;
    private Identifier _GroupIdentifier;
    private Code`1<RequestStatus> _StatusElement;
    private CodeableConcept _StatusReason;
    private List`1<CodeableConcept> _Category;
    private Code`1<RequestPriority> _PriorityElement;
    private FhirBoolean _DoNotPerformElement;
    private List`1<CodeableConcept> _Medium;
    private ResourceReference _Subject;
    private List`1<ResourceReference> _About;
    private ResourceReference _Encounter;
    private List`1<PayloadComponent> _Payload;
    private DataType _Occurrence;
    private FhirDateTime _AuthoredOnElement;
    private ResourceReference _Requester;
    private List`1<ResourceReference> _Recipient;
    private ResourceReference _Sender;
    private List`1<CodeableConcept> _ReasonCode;
    private List`1<ResourceReference> _ReasonReference;
    private List`1<Annotation> _Note;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("basedOn")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> BasedOn { get; public set; }
    [FhirElementAttribute("replaces")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Replaces { get; public set; }
    [FhirElementAttribute("groupIdentifier")]
[DataMemberAttribute]
public Identifier GroupIdentifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("CommunicationRequestStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<RequestStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<RequestStatus> Status { get; public set; }
    [FhirElementAttribute("statusReason")]
[BindingAttribute("CommunicationRequestStatusReason")]
[DataMemberAttribute]
public CodeableConcept StatusReason { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("CommunicationCategory")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Category { get; public set; }
    [FhirElementAttribute("priority")]
[DeclaredTypeAttribute]
[BindingAttribute("CommunicationPriority")]
[DataMemberAttribute]
public Code`1<RequestPriority> PriorityElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<RequestPriority> Priority { get; public set; }
    [FhirElementAttribute("doNotPerform")]
[DataMemberAttribute]
public FhirBoolean DoNotPerformElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> DoNotPerform { get; public set; }
    [FhirElementAttribute("medium")]
[BindingAttribute("CommunicationMedium")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Medium { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("about")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> About { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute("payload")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<PayloadComponent> Payload { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Occurrence { get; public set; }
    [FhirElementAttribute("authoredOn")]
[DataMemberAttribute]
public FhirDateTime AuthoredOnElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string AuthoredOn { get; public set; }
    [FhirElementAttribute("requester")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Requester { get; public set; }
    [FhirElementAttribute("recipient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Recipient { get; public set; }
    [FhirElementAttribute("sender")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Sender { get; public set; }
    [FhirElementAttribute("reasonCode")]
[BindingAttribute("CommunicationReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ReasonCode { get; public set; }
    [FhirElementAttribute("reasonReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ReasonReference { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<ResourceReference> get_BasedOn();
    public void set_BasedOn(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Replaces();
    public void set_Replaces(List`1<ResourceReference> value);
    public Identifier get_GroupIdentifier();
    public void set_GroupIdentifier(Identifier value);
    public Code`1<RequestStatus> get_StatusElement();
    public void set_StatusElement(Code`1<RequestStatus> value);
    public Nullable`1<RequestStatus> get_Status();
    public void set_Status(Nullable`1<RequestStatus> value);
    public CodeableConcept get_StatusReason();
    public void set_StatusReason(CodeableConcept value);
    public List`1<CodeableConcept> get_Category();
    public void set_Category(List`1<CodeableConcept> value);
    public Code`1<RequestPriority> get_PriorityElement();
    public void set_PriorityElement(Code`1<RequestPriority> value);
    public Nullable`1<RequestPriority> get_Priority();
    public void set_Priority(Nullable`1<RequestPriority> value);
    public FhirBoolean get_DoNotPerformElement();
    public void set_DoNotPerformElement(FhirBoolean value);
    public Nullable`1<bool> get_DoNotPerform();
    public void set_DoNotPerform(Nullable`1<bool> value);
    public List`1<CodeableConcept> get_Medium();
    public void set_Medium(List`1<CodeableConcept> value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public List`1<ResourceReference> get_About();
    public void set_About(List`1<ResourceReference> value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public List`1<PayloadComponent> get_Payload();
    public void set_Payload(List`1<PayloadComponent> value);
    public DataType get_Occurrence();
    public void set_Occurrence(DataType value);
    public FhirDateTime get_AuthoredOnElement();
    public void set_AuthoredOnElement(FhirDateTime value);
    public string get_AuthoredOn();
    public void set_AuthoredOn(string value);
    public ResourceReference get_Requester();
    public void set_Requester(ResourceReference value);
    public List`1<ResourceReference> get_Recipient();
    public void set_Recipient(List`1<ResourceReference> value);
    public ResourceReference get_Sender();
    public void set_Sender(ResourceReference value);
    public List`1<CodeableConcept> get_ReasonCode();
    public void set_ReasonCode(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_ReasonReference();
    public void set_ReasonReference(List`1<ResourceReference> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.set_Code(List`1<CodeableConcept> value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CommunicationRequest/<get_Children>d__115")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CommunicationRequest/<get_NamedChildren>d__117")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CommunicationRequest/<GetElementPairs>d__119")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("CompartmentDefinition", "http://hl7.org/fhir/StructureDefinition/CompartmentDefinition")]
public class Hl7.Fhir.Model.CompartmentDefinition : DomainResource {
    private FhirUri _UrlElement;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirBoolean _ExperimentalElement;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<UsageContext> _UseContext;
    private Markdown _PurposeElement;
    private Code`1<CompartmentType> _CodeElement;
    private FhirBoolean _SearchElement;
    private List`1<ResourceComponent> _Resource;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("experimental")]
[DataMemberAttribute]
public FhirBoolean ExperimentalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Experimental { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("purpose")]
[DataMemberAttribute]
public Markdown PurposeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Purpose { get; public set; }
    [FhirElementAttribute("code")]
[DeclaredTypeAttribute]
[BindingAttribute("CompartmentType")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<CompartmentType> CodeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<CompartmentType> Code { get; public set; }
    [FhirElementAttribute("search")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirBoolean SearchElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Search { get; public set; }
    [FhirElementAttribute("resource")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceComponent> Resource { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public sealed virtual FhirUri get_UrlElement();
    public sealed virtual void set_UrlElement(FhirUri value);
    public sealed virtual string get_Url();
    public sealed virtual void set_Url(string value);
    public sealed virtual FhirString get_VersionElement();
    public sealed virtual void set_VersionElement(FhirString value);
    public sealed virtual string get_Version();
    public sealed virtual void set_Version(string value);
    public sealed virtual FhirString get_NameElement();
    public sealed virtual void set_NameElement(FhirString value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public sealed virtual Code`1<PublicationStatus> get_StatusElement();
    public sealed virtual void set_StatusElement(Code`1<PublicationStatus> value);
    public sealed virtual Nullable`1<PublicationStatus> get_Status();
    public sealed virtual void set_Status(Nullable`1<PublicationStatus> value);
    public sealed virtual FhirBoolean get_ExperimentalElement();
    public sealed virtual void set_ExperimentalElement(FhirBoolean value);
    public sealed virtual Nullable`1<bool> get_Experimental();
    public sealed virtual void set_Experimental(Nullable`1<bool> value);
    public sealed virtual FhirDateTime get_DateElement();
    public sealed virtual void set_DateElement(FhirDateTime value);
    public sealed virtual string get_Date();
    public sealed virtual void set_Date(string value);
    public sealed virtual FhirString get_PublisherElement();
    public sealed virtual void set_PublisherElement(FhirString value);
    public sealed virtual string get_Publisher();
    public sealed virtual void set_Publisher(string value);
    public sealed virtual List`1<ContactDetail> get_Contact();
    public sealed virtual void set_Contact(List`1<ContactDetail> value);
    public sealed virtual Markdown get_DescriptionElement();
    public sealed virtual void set_DescriptionElement(Markdown value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual List`1<UsageContext> get_UseContext();
    public sealed virtual void set_UseContext(List`1<UsageContext> value);
    public sealed virtual Markdown get_PurposeElement();
    public sealed virtual void set_PurposeElement(Markdown value);
    public sealed virtual string get_Purpose();
    public sealed virtual void set_Purpose(string value);
    public Code`1<CompartmentType> get_CodeElement();
    public void set_CodeElement(Code`1<CompartmentType> value);
    public Nullable`1<CompartmentType> get_Code();
    public void set_Code(Nullable`1<CompartmentType> value);
    public FhirBoolean get_SearchElement();
    public void set_SearchElement(FhirBoolean value);
    public Nullable`1<bool> get_Search();
    public void set_Search(Nullable`1<bool> value);
    public List`1<ResourceComponent> get_Resource();
    public void set_Resource(List`1<ResourceComponent> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CompartmentDefinition/<get_Children>d__97")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CompartmentDefinition/<get_NamedChildren>d__99")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CompartmentDefinition/<GetElementPairs>d__101")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("CompartmentType", "http://hl7.org/fhir/ValueSet/compartment-type", "http://hl7.org/fhir/compartment-type")]
public enum Hl7.Fhir.Model.CompartmentType : Enum {
    public int value__;
    [EnumLiteralAttribute("Patient", "")]
[DescriptionAttribute("Patient")]
public static CompartmentType Patient;
    [EnumLiteralAttribute("Encounter", "")]
[DescriptionAttribute("Encounter")]
public static CompartmentType Encounter;
    [EnumLiteralAttribute("RelatedPerson", "")]
[DescriptionAttribute("RelatedPerson")]
public static CompartmentType RelatedPerson;
    [EnumLiteralAttribute("Practitioner", "")]
[DescriptionAttribute("Practitioner")]
public static CompartmentType Practitioner;
    [EnumLiteralAttribute("Device", "")]
[DescriptionAttribute("Device")]
public static CompartmentType Device;
}
[DataContractAttribute]
[FhirTypeAttribute("Composition", "http://hl7.org/fhir/StructureDefinition/Composition")]
public class Hl7.Fhir.Model.Composition : DomainResource {
    private Identifier _Identifier;
    private Code`1<CompositionStatus> _StatusElement;
    private CodeableConcept _Type;
    private List`1<CodeableConcept> _Category;
    private ResourceReference _Subject;
    private ResourceReference _Encounter;
    private FhirDateTime _DateElement;
    private List`1<ResourceReference> _Author;
    private FhirString _TitleElement;
    private Code`1<V3ConfidentialityClassification> _ConfidentialityElement;
    private List`1<AttesterComponent> _Attester;
    private ResourceReference _Custodian;
    private List`1<RelatesToComponent> _RelatesTo;
    private List`1<EventComponent> _Event;
    private List`1<SectionComponent> _Section;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[DataMemberAttribute]
public Identifier Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("CompositionStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<CompositionStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<CompositionStatus> Status { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("DocumentType")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("DocumentCategory")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Category { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute("date")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("author")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Author { get; public set; }
    [FhirElementAttribute("title")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("confidentiality")]
[DeclaredTypeAttribute]
[BindingAttribute("DocumentConfidentiality")]
[DataMemberAttribute]
public Code`1<V3ConfidentialityClassification> ConfidentialityElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<V3ConfidentialityClassification> Confidentiality { get; public set; }
    [FhirElementAttribute("attester")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<AttesterComponent> Attester { get; public set; }
    [FhirElementAttribute("custodian")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Custodian { get; public set; }
    [FhirElementAttribute("relatesTo")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RelatesToComponent> RelatesTo { get; public set; }
    [FhirElementAttribute("event")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<EventComponent> Event { get; public set; }
    [FhirElementAttribute("section")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<SectionComponent> Section { get; public set; }
    private Identifier Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Identifier get_Identifier();
    public void set_Identifier(Identifier value);
    public Code`1<CompositionStatus> get_StatusElement();
    public void set_StatusElement(Code`1<CompositionStatus> value);
    public Nullable`1<CompositionStatus> get_Status();
    public void set_Status(Nullable`1<CompositionStatus> value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public List`1<CodeableConcept> get_Category();
    public void set_Category(List`1<CodeableConcept> value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public FhirDateTime get_DateElement();
    public void set_DateElement(FhirDateTime value);
    public string get_Date();
    public void set_Date(string value);
    public List`1<ResourceReference> get_Author();
    public void set_Author(List`1<ResourceReference> value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public Code`1<V3ConfidentialityClassification> get_ConfidentialityElement();
    public void set_ConfidentialityElement(Code`1<V3ConfidentialityClassification> value);
    public Nullable`1<V3ConfidentialityClassification> get_Confidentiality();
    public void set_Confidentiality(Nullable`1<V3ConfidentialityClassification> value);
    public List`1<AttesterComponent> get_Attester();
    public void set_Attester(List`1<AttesterComponent> value);
    public ResourceReference get_Custodian();
    public void set_Custodian(ResourceReference value);
    public List`1<RelatesToComponent> get_RelatesTo();
    public void set_RelatesTo(List`1<RelatesToComponent> value);
    public List`1<EventComponent> get_Event();
    public void set_Event(List`1<EventComponent> value);
    public List`1<SectionComponent> get_Section();
    public void set_Section(List`1<SectionComponent> value);
    private sealed virtual override Identifier Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.set_Identifier(Identifier value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Composition/<get_Children>d__92")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Composition/<get_NamedChildren>d__94")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Composition/<GetElementPairs>d__96")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("CompositionStatus", "http://hl7.org/fhir/ValueSet/composition-status", "http://hl7.org/fhir/composition-status")]
public enum Hl7.Fhir.Model.CompositionStatus : Enum {
    public int value__;
    [EnumLiteralAttribute("preliminary", "")]
[DescriptionAttribute("Preliminary")]
public static CompositionStatus Preliminary;
    [EnumLiteralAttribute("final", "")]
[DescriptionAttribute("Final")]
public static CompositionStatus Final;
    [EnumLiteralAttribute("amended", "")]
[DescriptionAttribute("Amended")]
public static CompositionStatus Amended;
    [EnumLiteralAttribute("entered-in-error", "")]
[DescriptionAttribute("Entered in Error")]
public static CompositionStatus EnteredInError;
}
[DataContractAttribute]
[FhirTypeAttribute("ConceptMap", "http://hl7.org/fhir/StructureDefinition/ConceptMap")]
public class Hl7.Fhir.Model.ConceptMap : DomainResource {
    private FhirUri _UrlElement;
    private Identifier _Identifier;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private FhirString _TitleElement;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirBoolean _ExperimentalElement;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _PurposeElement;
    private Markdown _CopyrightElement;
    private DataType _Source;
    private DataType _Target;
    private List`1<GroupComponent> _Group;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("identifier")]
[DataMemberAttribute]
public Identifier Identifier { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("experimental")]
[DataMemberAttribute]
public FhirBoolean ExperimentalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Experimental { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("purpose")]
[DataMemberAttribute]
public Markdown PurposeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Purpose { get; public set; }
    [FhirElementAttribute("copyright")]
[DataMemberAttribute]
public Markdown CopyrightElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Copyright { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Source { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Target { get; public set; }
    [FhirElementAttribute("group")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<GroupComponent> Group { get; public set; }
    private Identifier Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public sealed virtual FhirUri get_UrlElement();
    public sealed virtual void set_UrlElement(FhirUri value);
    public sealed virtual string get_Url();
    public sealed virtual void set_Url(string value);
    public Identifier get_Identifier();
    public void set_Identifier(Identifier value);
    public sealed virtual FhirString get_VersionElement();
    public sealed virtual void set_VersionElement(FhirString value);
    public sealed virtual string get_Version();
    public sealed virtual void set_Version(string value);
    public sealed virtual FhirString get_NameElement();
    public sealed virtual void set_NameElement(FhirString value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public sealed virtual Code`1<PublicationStatus> get_StatusElement();
    public sealed virtual void set_StatusElement(Code`1<PublicationStatus> value);
    public sealed virtual Nullable`1<PublicationStatus> get_Status();
    public sealed virtual void set_Status(Nullable`1<PublicationStatus> value);
    public sealed virtual FhirBoolean get_ExperimentalElement();
    public sealed virtual void set_ExperimentalElement(FhirBoolean value);
    public sealed virtual Nullable`1<bool> get_Experimental();
    public sealed virtual void set_Experimental(Nullable`1<bool> value);
    public sealed virtual FhirDateTime get_DateElement();
    public sealed virtual void set_DateElement(FhirDateTime value);
    public sealed virtual string get_Date();
    public sealed virtual void set_Date(string value);
    public sealed virtual FhirString get_PublisherElement();
    public sealed virtual void set_PublisherElement(FhirString value);
    public sealed virtual string get_Publisher();
    public sealed virtual void set_Publisher(string value);
    public sealed virtual List`1<ContactDetail> get_Contact();
    public sealed virtual void set_Contact(List`1<ContactDetail> value);
    public sealed virtual Markdown get_DescriptionElement();
    public sealed virtual void set_DescriptionElement(Markdown value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual List`1<UsageContext> get_UseContext();
    public sealed virtual void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public sealed virtual Markdown get_PurposeElement();
    public sealed virtual void set_PurposeElement(Markdown value);
    public sealed virtual string get_Purpose();
    public sealed virtual void set_Purpose(string value);
    public Markdown get_CopyrightElement();
    public void set_CopyrightElement(Markdown value);
    public string get_Copyright();
    public void set_Copyright(string value);
    public DataType get_Source();
    public void set_Source(DataType value);
    public DataType get_Target();
    public void set_Target(DataType value);
    public List`1<GroupComponent> get_Group();
    public void set_Group(List`1<GroupComponent> value);
    private sealed virtual override Identifier Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.set_Identifier(Identifier value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ConceptMap/<get_Children>d__121")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ConceptMap/<get_NamedChildren>d__123")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ConceptMap/<GetElementPairs>d__125")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("ConceptMapEquivalence", "http://hl7.org/fhir/ValueSet/concept-map-equivalence", "http://hl7.org/fhir/concept-map-equivalence")]
public enum Hl7.Fhir.Model.ConceptMapEquivalence : Enum {
    public int value__;
    [EnumLiteralAttribute("relatedto", "")]
[DescriptionAttribute("Related To")]
public static ConceptMapEquivalence Relatedto;
    [EnumLiteralAttribute("equivalent", "")]
[DescriptionAttribute("Equivalent")]
public static ConceptMapEquivalence Equivalent;
    [EnumLiteralAttribute("equal", "")]
[DescriptionAttribute("Equal")]
public static ConceptMapEquivalence Equal;
    [EnumLiteralAttribute("wider", "")]
[DescriptionAttribute("Wider")]
public static ConceptMapEquivalence Wider;
    [EnumLiteralAttribute("subsumes", "")]
[DescriptionAttribute("Subsumes")]
public static ConceptMapEquivalence Subsumes;
    [EnumLiteralAttribute("narrower", "")]
[DescriptionAttribute("Narrower")]
public static ConceptMapEquivalence Narrower;
    [EnumLiteralAttribute("specializes", "")]
[DescriptionAttribute("Specializes")]
public static ConceptMapEquivalence Specializes;
    [EnumLiteralAttribute("inexact", "")]
[DescriptionAttribute("Inexact")]
public static ConceptMapEquivalence Inexact;
    [EnumLiteralAttribute("unmatched", "")]
[DescriptionAttribute("Unmatched")]
public static ConceptMapEquivalence Unmatched;
    [EnumLiteralAttribute("disjoint", "")]
[DescriptionAttribute("Disjoint")]
public static ConceptMapEquivalence Disjoint;
}
[DataContractAttribute]
[FhirTypeAttribute("Condition", "http://hl7.org/fhir/StructureDefinition/Condition")]
public class Hl7.Fhir.Model.Condition : DomainResource {
    private List`1<Identifier> _Identifier;
    private CodeableConcept _ClinicalStatus;
    private CodeableConcept _VerificationStatus;
    private List`1<CodeableConcept> _Category;
    private CodeableConcept _Severity;
    private CodeableConcept _Code;
    private List`1<CodeableConcept> _BodySite;
    private ResourceReference _Subject;
    private ResourceReference _Encounter;
    private DataType _Onset;
    private DataType _Abatement;
    private FhirDateTime _RecordedDateElement;
    private ResourceReference _Recorder;
    private ResourceReference _Asserter;
    private List`1<StageComponent> _Stage;
    private List`1<EvidenceComponent> _Evidence;
    private List`1<Annotation> _Note;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("clinicalStatus")]
[BindingAttribute("ConditionClinicalStatus")]
[DataMemberAttribute]
public CodeableConcept ClinicalStatus { get; public set; }
    [FhirElementAttribute("verificationStatus")]
[BindingAttribute("ConditionVerificationStatus")]
[DataMemberAttribute]
public CodeableConcept VerificationStatus { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("ConditionCategory")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Category { get; public set; }
    [FhirElementAttribute("severity")]
[BindingAttribute("ConditionSeverity")]
[DataMemberAttribute]
public CodeableConcept Severity { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("ConditionKind")]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [FhirElementAttribute("bodySite")]
[BindingAttribute("BodySite")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> BodySite { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Onset { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Abatement { get; public set; }
    [FhirElementAttribute("recordedDate")]
[DataMemberAttribute]
public FhirDateTime RecordedDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string RecordedDate { get; public set; }
    [FhirElementAttribute("recorder")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Recorder { get; public set; }
    [FhirElementAttribute("asserter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Asserter { get; public set; }
    [FhirElementAttribute("stage")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<StageComponent> Stage { get; public set; }
    [FhirElementAttribute("evidence")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<EvidenceComponent> Evidence { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public CodeableConcept get_ClinicalStatus();
    public void set_ClinicalStatus(CodeableConcept value);
    public CodeableConcept get_VerificationStatus();
    public void set_VerificationStatus(CodeableConcept value);
    public List`1<CodeableConcept> get_Category();
    public void set_Category(List`1<CodeableConcept> value);
    public CodeableConcept get_Severity();
    public void set_Severity(CodeableConcept value);
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public List`1<CodeableConcept> get_BodySite();
    public void set_BodySite(List`1<CodeableConcept> value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public DataType get_Onset();
    public void set_Onset(DataType value);
    public DataType get_Abatement();
    public void set_Abatement(DataType value);
    public FhirDateTime get_RecordedDateElement();
    public void set_RecordedDateElement(FhirDateTime value);
    public string get_RecordedDate();
    public void set_RecordedDate(string value);
    public ResourceReference get_Recorder();
    public void set_Recorder(ResourceReference value);
    public ResourceReference get_Asserter();
    public void set_Asserter(ResourceReference value);
    public List`1<StageComponent> get_Stage();
    public void set_Stage(List`1<StageComponent> value);
    public List`1<EvidenceComponent> get_Evidence();
    public void set_Evidence(List`1<EvidenceComponent> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Condition/<get_Children>d__89")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Condition/<get_NamedChildren>d__91")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Condition/<GetElementPairs>d__93")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Consent", "http://hl7.org/fhir/StructureDefinition/Consent")]
public class Hl7.Fhir.Model.Consent : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<ConsentState> _StatusElement;
    private CodeableConcept _Scope;
    private List`1<CodeableConcept> _Category;
    private ResourceReference _Patient;
    private FhirDateTime _DateTimeElement;
    private List`1<ResourceReference> _Performer;
    private List`1<ResourceReference> _Organization;
    private DataType _Source;
    private List`1<PolicyComponent> _Policy;
    private CodeableConcept _PolicyRule;
    private List`1<VerificationComponent> _Verification;
    private provisionComponent _Provision;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("ConsentState")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ConsentState> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ConsentState> Status { get; public set; }
    [FhirElementAttribute("scope")]
[BindingAttribute("ConsentScope")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept Scope { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("ConsentCategory")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Category { get; public set; }
    [FhirElementAttribute("patient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Patient { get; public set; }
    [FhirElementAttribute("dateTime")]
[DataMemberAttribute]
public FhirDateTime DateTimeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string DateTime { get; public set; }
    [FhirElementAttribute("performer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Performer { get; public set; }
    [FhirElementAttribute("organization")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Organization { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Source { get; public set; }
    [FhirElementAttribute("policy")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<PolicyComponent> Policy { get; public set; }
    [FhirElementAttribute("policyRule")]
[BindingAttribute("ConsentPolicyRule")]
[DataMemberAttribute]
public CodeableConcept PolicyRule { get; public set; }
    [FhirElementAttribute("verification")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<VerificationComponent> Verification { get; public set; }
    [FhirElementAttribute("provision")]
[DataMemberAttribute]
public provisionComponent Provision { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<ConsentState> get_StatusElement();
    public void set_StatusElement(Code`1<ConsentState> value);
    public Nullable`1<ConsentState> get_Status();
    public void set_Status(Nullable`1<ConsentState> value);
    public CodeableConcept get_Scope();
    public void set_Scope(CodeableConcept value);
    public List`1<CodeableConcept> get_Category();
    public void set_Category(List`1<CodeableConcept> value);
    public ResourceReference get_Patient();
    public void set_Patient(ResourceReference value);
    public FhirDateTime get_DateTimeElement();
    public void set_DateTimeElement(FhirDateTime value);
    public string get_DateTime();
    public void set_DateTime(string value);
    public List`1<ResourceReference> get_Performer();
    public void set_Performer(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Organization();
    public void set_Organization(List`1<ResourceReference> value);
    public DataType get_Source();
    public void set_Source(DataType value);
    public List`1<PolicyComponent> get_Policy();
    public void set_Policy(List`1<PolicyComponent> value);
    public CodeableConcept get_PolicyRule();
    public void set_PolicyRule(CodeableConcept value);
    public List`1<VerificationComponent> get_Verification();
    public void set_Verification(List`1<VerificationComponent> value);
    public provisionComponent get_Provision();
    public void set_Provision(provisionComponent value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.set_Code(List`1<CodeableConcept> value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Consent/<get_Children>d__80")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Consent/<get_NamedChildren>d__82")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Consent/<GetElementPairs>d__84")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Contract", "http://hl7.org/fhir/StructureDefinition/Contract")]
public class Hl7.Fhir.Model.Contract : DomainResource {
    private List`1<Identifier> _Identifier;
    private FhirUri _UrlElement;
    private FhirString _VersionElement;
    private Code`1<ContractResourceStatusCodes> _StatusElement;
    private CodeableConcept _LegalState;
    private ResourceReference _InstantiatesCanonical;
    private FhirUri _InstantiatesUriElement;
    private CodeableConcept _ContentDerivative;
    private FhirDateTime _IssuedElement;
    private Period _Applies;
    private CodeableConcept _ExpirationType;
    private List`1<ResourceReference> _Subject;
    private List`1<ResourceReference> _Authority;
    private List`1<ResourceReference> _Domain;
    private List`1<ResourceReference> _Site;
    private FhirString _NameElement;
    private FhirString _TitleElement;
    private FhirString _SubtitleElement;
    private List`1<FhirString> _AliasElement;
    private ResourceReference _Author;
    private CodeableConcept _Scope;
    private DataType _Topic;
    private CodeableConcept _Type;
    private List`1<CodeableConcept> _SubType;
    private ContentDefinitionComponent _ContentDefinition;
    private List`1<TermComponent> _Term;
    private List`1<ResourceReference> _SupportingInfo;
    private List`1<ResourceReference> _RelevantHistory;
    private List`1<SignatoryComponent> _Signer;
    private List`1<FriendlyLanguageComponent> _Friendly;
    private List`1<LegalLanguageComponent> _Legal;
    private List`1<ComputableLanguageComponent> _Rule;
    private DataType _LegallyBinding;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("url")]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("ContractStatus")]
[DataMemberAttribute]
public Code`1<ContractResourceStatusCodes> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ContractResourceStatusCodes> Status { get; public set; }
    [FhirElementAttribute("legalState")]
[BindingAttribute("ContractLegalState")]
[DataMemberAttribute]
public CodeableConcept LegalState { get; public set; }
    [FhirElementAttribute("instantiatesCanonical")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference InstantiatesCanonical { get; public set; }
    [FhirElementAttribute("instantiatesUri")]
[DataMemberAttribute]
public FhirUri InstantiatesUriElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string InstantiatesUri { get; public set; }
    [FhirElementAttribute("contentDerivative")]
[BindingAttribute("ContractContentDerivative")]
[DataMemberAttribute]
public CodeableConcept ContentDerivative { get; public set; }
    [FhirElementAttribute("issued")]
[DataMemberAttribute]
public FhirDateTime IssuedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Issued { get; public set; }
    [FhirElementAttribute("applies")]
[DataMemberAttribute]
public Period Applies { get; public set; }
    [FhirElementAttribute("expirationType")]
[BindingAttribute("ContractExpiration")]
[DataMemberAttribute]
public CodeableConcept ExpirationType { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Subject { get; public set; }
    [FhirElementAttribute("authority")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Authority { get; public set; }
    [FhirElementAttribute("domain")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Domain { get; public set; }
    [FhirElementAttribute("site")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Site { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("subtitle")]
[DataMemberAttribute]
public FhirString SubtitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Subtitle { get; public set; }
    [FhirElementAttribute("alias")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> AliasElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Alias { get; public set; }
    [FhirElementAttribute("author")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Author { get; public set; }
    [FhirElementAttribute("scope")]
[BindingAttribute("ContractScope")]
[DataMemberAttribute]
public CodeableConcept Scope { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Topic { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("ContractType")]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("subType")]
[BindingAttribute("ContractSubtype")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> SubType { get; public set; }
    [FhirElementAttribute("contentDefinition")]
[DataMemberAttribute]
public ContentDefinitionComponent ContentDefinition { get; public set; }
    [FhirElementAttribute("term")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<TermComponent> Term { get; public set; }
    [FhirElementAttribute("supportingInfo")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> SupportingInfo { get; public set; }
    [FhirElementAttribute("relevantHistory")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> RelevantHistory { get; public set; }
    [FhirElementAttribute("signer")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<SignatoryComponent> Signer { get; public set; }
    [FhirElementAttribute("friendly")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FriendlyLanguageComponent> Friendly { get; public set; }
    [FhirElementAttribute("legal")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<LegalLanguageComponent> Legal { get; public set; }
    [FhirElementAttribute("rule")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ComputableLanguageComponent> Rule { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType LegallyBinding { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirUri get_UrlElement();
    public void set_UrlElement(FhirUri value);
    public string get_Url();
    public void set_Url(string value);
    public FhirString get_VersionElement();
    public void set_VersionElement(FhirString value);
    public string get_Version();
    public void set_Version(string value);
    public Code`1<ContractResourceStatusCodes> get_StatusElement();
    public void set_StatusElement(Code`1<ContractResourceStatusCodes> value);
    public Nullable`1<ContractResourceStatusCodes> get_Status();
    public void set_Status(Nullable`1<ContractResourceStatusCodes> value);
    public CodeableConcept get_LegalState();
    public void set_LegalState(CodeableConcept value);
    public ResourceReference get_InstantiatesCanonical();
    public void set_InstantiatesCanonical(ResourceReference value);
    public FhirUri get_InstantiatesUriElement();
    public void set_InstantiatesUriElement(FhirUri value);
    public string get_InstantiatesUri();
    public void set_InstantiatesUri(string value);
    public CodeableConcept get_ContentDerivative();
    public void set_ContentDerivative(CodeableConcept value);
    public FhirDateTime get_IssuedElement();
    public void set_IssuedElement(FhirDateTime value);
    public string get_Issued();
    public void set_Issued(string value);
    public Period get_Applies();
    public void set_Applies(Period value);
    public CodeableConcept get_ExpirationType();
    public void set_ExpirationType(CodeableConcept value);
    public List`1<ResourceReference> get_Subject();
    public void set_Subject(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Authority();
    public void set_Authority(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Domain();
    public void set_Domain(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Site();
    public void set_Site(List`1<ResourceReference> value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public FhirString get_SubtitleElement();
    public void set_SubtitleElement(FhirString value);
    public string get_Subtitle();
    public void set_Subtitle(string value);
    public List`1<FhirString> get_AliasElement();
    public void set_AliasElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_Alias();
    public void set_Alias(IEnumerable`1<string> value);
    public ResourceReference get_Author();
    public void set_Author(ResourceReference value);
    public CodeableConcept get_Scope();
    public void set_Scope(CodeableConcept value);
    public DataType get_Topic();
    public void set_Topic(DataType value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public List`1<CodeableConcept> get_SubType();
    public void set_SubType(List`1<CodeableConcept> value);
    public ContentDefinitionComponent get_ContentDefinition();
    public void set_ContentDefinition(ContentDefinitionComponent value);
    public List`1<TermComponent> get_Term();
    public void set_Term(List`1<TermComponent> value);
    public List`1<ResourceReference> get_SupportingInfo();
    public void set_SupportingInfo(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_RelevantHistory();
    public void set_RelevantHistory(List`1<ResourceReference> value);
    public List`1<SignatoryComponent> get_Signer();
    public void set_Signer(List`1<SignatoryComponent> value);
    public List`1<FriendlyLanguageComponent> get_Friendly();
    public void set_Friendly(List`1<FriendlyLanguageComponent> value);
    public List`1<LegalLanguageComponent> get_Legal();
    public void set_Legal(List`1<LegalLanguageComponent> value);
    public List`1<ComputableLanguageComponent> get_Rule();
    public void set_Rule(List`1<ComputableLanguageComponent> value);
    public DataType get_LegallyBinding();
    public void set_LegallyBinding(DataType value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Contract/<get_Children>d__186")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Contract/<get_NamedChildren>d__188")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Contract/<GetElementPairs>d__190")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Contributor", "http://hl7.org/fhir/StructureDefinition/Contributor")]
public class Hl7.Fhir.Model.Contributor : DataType {
    private Code`1<ContributorType> _TypeElement;
    private FhirString _NameElement;
    private List`1<ContactDetail> _Contact;
    public string TypeName { get; }
    [FhirElementAttribute("type")]
[DeclaredTypeAttribute]
[BindingAttribute("ContributorType")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ContributorType> TypeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ContributorType> Type { get; public set; }
    [FhirElementAttribute("name")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Code`1<ContributorType> get_TypeElement();
    public void set_TypeElement(Code`1<ContributorType> value);
    public Nullable`1<ContributorType> get_Type();
    public void set_Type(Nullable`1<ContributorType> value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public List`1<ContactDetail> get_Contact();
    public void set_Contact(List`1<ContactDetail> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Contributor/<get_Children>d__26")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Contributor/<get_NamedChildren>d__28")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Contributor/<GetElementPairs>d__30")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Count", "http://hl7.org/fhir/StructureDefinition/Count")]
public class Hl7.Fhir.Model.Count : Quantity {
    public string TypeName { get; }
    public virtual string get_TypeName();
    public virtual IDeepCopyable DeepCopy();
}
[DataContractAttribute]
[FhirTypeAttribute("Coverage", "http://hl7.org/fhir/StructureDefinition/Coverage")]
public class Hl7.Fhir.Model.Coverage : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<FinancialResourceStatusCodes> _StatusElement;
    private CodeableConcept _Type;
    private ResourceReference _PolicyHolder;
    private ResourceReference _Subscriber;
    private FhirString _SubscriberIdElement;
    private ResourceReference _Beneficiary;
    private FhirString _DependentElement;
    private CodeableConcept _Relationship;
    private Period _Period;
    private List`1<ResourceReference> _Payor;
    private List`1<ClassComponent> _Class;
    private PositiveInt _OrderElement;
    private FhirString _NetworkElement;
    private List`1<CostToBeneficiaryComponent> _CostToBeneficiary;
    private FhirBoolean _SubrogationElement;
    private List`1<ResourceReference> _Contract;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("CoverageStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<FinancialResourceStatusCodes> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<FinancialResourceStatusCodes> Status { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("CoverageType")]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("policyHolder")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference PolicyHolder { get; public set; }
    [FhirElementAttribute("subscriber")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Subscriber { get; public set; }
    [FhirElementAttribute("subscriberId")]
[DataMemberAttribute]
public FhirString SubscriberIdElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string SubscriberId { get; public set; }
    [FhirElementAttribute("beneficiary")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Beneficiary { get; public set; }
    [FhirElementAttribute("dependent")]
[DataMemberAttribute]
public FhirString DependentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Dependent { get; public set; }
    [FhirElementAttribute("relationship")]
[BindingAttribute("Relationship")]
[DataMemberAttribute]
public CodeableConcept Relationship { get; public set; }
    [FhirElementAttribute("period")]
[DataMemberAttribute]
public Period Period { get; public set; }
    [FhirElementAttribute("payor")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Payor { get; public set; }
    [FhirElementAttribute("class")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ClassComponent> Class { get; public set; }
    [FhirElementAttribute("order")]
[DataMemberAttribute]
public PositiveInt OrderElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<int> Order { get; public set; }
    [FhirElementAttribute("network")]
[DataMemberAttribute]
public FhirString NetworkElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Network { get; public set; }
    [FhirElementAttribute("costToBeneficiary")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CostToBeneficiaryComponent> CostToBeneficiary { get; public set; }
    [FhirElementAttribute("subrogation")]
[DataMemberAttribute]
public FhirBoolean SubrogationElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Subrogation { get; public set; }
    [FhirElementAttribute("contract")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Contract { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<FinancialResourceStatusCodes> get_StatusElement();
    public void set_StatusElement(Code`1<FinancialResourceStatusCodes> value);
    public Nullable`1<FinancialResourceStatusCodes> get_Status();
    public void set_Status(Nullable`1<FinancialResourceStatusCodes> value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public ResourceReference get_PolicyHolder();
    public void set_PolicyHolder(ResourceReference value);
    public ResourceReference get_Subscriber();
    public void set_Subscriber(ResourceReference value);
    public FhirString get_SubscriberIdElement();
    public void set_SubscriberIdElement(FhirString value);
    public string get_SubscriberId();
    public void set_SubscriberId(string value);
    public ResourceReference get_Beneficiary();
    public void set_Beneficiary(ResourceReference value);
    public FhirString get_DependentElement();
    public void set_DependentElement(FhirString value);
    public string get_Dependent();
    public void set_Dependent(string value);
    public CodeableConcept get_Relationship();
    public void set_Relationship(CodeableConcept value);
    public Period get_Period();
    public void set_Period(Period value);
    public List`1<ResourceReference> get_Payor();
    public void set_Payor(List`1<ResourceReference> value);
    public List`1<ClassComponent> get_Class();
    public void set_Class(List`1<ClassComponent> value);
    public PositiveInt get_OrderElement();
    public void set_OrderElement(PositiveInt value);
    public Nullable`1<int> get_Order();
    public void set_Order(Nullable`1<int> value);
    public FhirString get_NetworkElement();
    public void set_NetworkElement(FhirString value);
    public string get_Network();
    public void set_Network(string value);
    public List`1<CostToBeneficiaryComponent> get_CostToBeneficiary();
    public void set_CostToBeneficiary(List`1<CostToBeneficiaryComponent> value);
    public FhirBoolean get_SubrogationElement();
    public void set_SubrogationElement(FhirBoolean value);
    public Nullable`1<bool> get_Subrogation();
    public void set_Subrogation(Nullable`1<bool> value);
    public List`1<ResourceReference> get_Contract();
    public void set_Contract(List`1<ResourceReference> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Coverage/<get_Children>d__103")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Coverage/<get_NamedChildren>d__105")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Coverage/<GetElementPairs>d__107")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("CoverageEligibilityRequest", "http://hl7.org/fhir/StructureDefinition/CoverageEligibilityRequest")]
public class Hl7.Fhir.Model.CoverageEligibilityRequest : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<FinancialResourceStatusCodes> _StatusElement;
    private CodeableConcept _Priority;
    private List`1<Code`1<EligibilityRequestPurpose>> _PurposeElement;
    private ResourceReference _Patient;
    private DataType _Serviced;
    private FhirDateTime _CreatedElement;
    private ResourceReference _Enterer;
    private ResourceReference _Provider;
    private ResourceReference _Insurer;
    private ResourceReference _Facility;
    private List`1<SupportingInformationComponent> _SupportingInfo;
    private List`1<InsuranceComponent> _Insurance;
    private List`1<DetailsComponent> _Item;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("EligibilityRequestStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<FinancialResourceStatusCodes> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<FinancialResourceStatusCodes> Status { get; public set; }
    [FhirElementAttribute("priority")]
[BindingAttribute("ProcessPriority")]
[DataMemberAttribute]
public CodeableConcept Priority { get; public set; }
    [FhirElementAttribute("purpose")]
[DeclaredTypeAttribute]
[BindingAttribute("EligibilityRequestPurpose")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Code`1<EligibilityRequestPurpose>> PurposeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Nullable`1<EligibilityRequestPurpose>> Purpose { get; public set; }
    [FhirElementAttribute("patient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Patient { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Serviced { get; public set; }
    [FhirElementAttribute("created")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirDateTime CreatedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Created { get; public set; }
    [FhirElementAttribute("enterer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Enterer { get; public set; }
    [FhirElementAttribute("provider")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Provider { get; public set; }
    [FhirElementAttribute("insurer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Insurer { get; public set; }
    [FhirElementAttribute("facility")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Facility { get; public set; }
    [FhirElementAttribute("supportingInfo")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<SupportingInformationComponent> SupportingInfo { get; public set; }
    [FhirElementAttribute("insurance")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<InsuranceComponent> Insurance { get; public set; }
    [FhirElementAttribute("item")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<DetailsComponent> Item { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<FinancialResourceStatusCodes> get_StatusElement();
    public void set_StatusElement(Code`1<FinancialResourceStatusCodes> value);
    public Nullable`1<FinancialResourceStatusCodes> get_Status();
    public void set_Status(Nullable`1<FinancialResourceStatusCodes> value);
    public CodeableConcept get_Priority();
    public void set_Priority(CodeableConcept value);
    public List`1<Code`1<EligibilityRequestPurpose>> get_PurposeElement();
    public void set_PurposeElement(List`1<Code`1<EligibilityRequestPurpose>> value);
    public IEnumerable`1<Nullable`1<EligibilityRequestPurpose>> get_Purpose();
    public void set_Purpose(IEnumerable`1<Nullable`1<EligibilityRequestPurpose>> value);
    public ResourceReference get_Patient();
    public void set_Patient(ResourceReference value);
    public DataType get_Serviced();
    public void set_Serviced(DataType value);
    public FhirDateTime get_CreatedElement();
    public void set_CreatedElement(FhirDateTime value);
    public string get_Created();
    public void set_Created(string value);
    public ResourceReference get_Enterer();
    public void set_Enterer(ResourceReference value);
    public ResourceReference get_Provider();
    public void set_Provider(ResourceReference value);
    public ResourceReference get_Insurer();
    public void set_Insurer(ResourceReference value);
    public ResourceReference get_Facility();
    public void set_Facility(ResourceReference value);
    public List`1<SupportingInformationComponent> get_SupportingInfo();
    public void set_SupportingInfo(List`1<SupportingInformationComponent> value);
    public List`1<InsuranceComponent> get_Insurance();
    public void set_Insurance(List`1<InsuranceComponent> value);
    public List`1<DetailsComponent> get_Item();
    public void set_Item(List`1<DetailsComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CoverageEligibilityRequest/<get_Children>d__80")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CoverageEligibilityRequest/<get_NamedChildren>d__82")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CoverageEligibilityRequest/<GetElementPairs>d__84")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("CoverageEligibilityResponse", "http://hl7.org/fhir/StructureDefinition/CoverageEligibilityResponse")]
public class Hl7.Fhir.Model.CoverageEligibilityResponse : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<FinancialResourceStatusCodes> _StatusElement;
    private List`1<Code`1<EligibilityResponsePurpose>> _PurposeElement;
    private ResourceReference _Patient;
    private DataType _Serviced;
    private FhirDateTime _CreatedElement;
    private ResourceReference _Requestor;
    private ResourceReference _Request;
    private Code`1<ClaimProcessingCodes> _OutcomeElement;
    private FhirString _DispositionElement;
    private ResourceReference _Insurer;
    private List`1<InsuranceComponent> _Insurance;
    private FhirString _PreAuthRefElement;
    private CodeableConcept _Form;
    private List`1<ErrorsComponent> _Error;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("EligibilityResponseStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<FinancialResourceStatusCodes> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<FinancialResourceStatusCodes> Status { get; public set; }
    [FhirElementAttribute("purpose")]
[DeclaredTypeAttribute]
[BindingAttribute("EligibilityResponsePurpose")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Code`1<EligibilityResponsePurpose>> PurposeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Nullable`1<EligibilityResponsePurpose>> Purpose { get; public set; }
    [FhirElementAttribute("patient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Patient { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Serviced { get; public set; }
    [FhirElementAttribute("created")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirDateTime CreatedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Created { get; public set; }
    [FhirElementAttribute("requestor")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Requestor { get; public set; }
    [FhirElementAttribute("request")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Request { get; public set; }
    [FhirElementAttribute("outcome")]
[DeclaredTypeAttribute]
[BindingAttribute("RemittanceOutcome")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ClaimProcessingCodes> OutcomeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ClaimProcessingCodes> Outcome { get; public set; }
    [FhirElementAttribute("disposition")]
[DataMemberAttribute]
public FhirString DispositionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Disposition { get; public set; }
    [FhirElementAttribute("insurer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Insurer { get; public set; }
    [FhirElementAttribute("insurance")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<InsuranceComponent> Insurance { get; public set; }
    [FhirElementAttribute("preAuthRef")]
[DataMemberAttribute]
public FhirString PreAuthRefElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string PreAuthRef { get; public set; }
    [FhirElementAttribute("form")]
[BindingAttribute("Forms")]
[DataMemberAttribute]
public CodeableConcept Form { get; public set; }
    [FhirElementAttribute("error")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ErrorsComponent> Error { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<FinancialResourceStatusCodes> get_StatusElement();
    public void set_StatusElement(Code`1<FinancialResourceStatusCodes> value);
    public Nullable`1<FinancialResourceStatusCodes> get_Status();
    public void set_Status(Nullable`1<FinancialResourceStatusCodes> value);
    public List`1<Code`1<EligibilityResponsePurpose>> get_PurposeElement();
    public void set_PurposeElement(List`1<Code`1<EligibilityResponsePurpose>> value);
    public IEnumerable`1<Nullable`1<EligibilityResponsePurpose>> get_Purpose();
    public void set_Purpose(IEnumerable`1<Nullable`1<EligibilityResponsePurpose>> value);
    public ResourceReference get_Patient();
    public void set_Patient(ResourceReference value);
    public DataType get_Serviced();
    public void set_Serviced(DataType value);
    public FhirDateTime get_CreatedElement();
    public void set_CreatedElement(FhirDateTime value);
    public string get_Created();
    public void set_Created(string value);
    public ResourceReference get_Requestor();
    public void set_Requestor(ResourceReference value);
    public ResourceReference get_Request();
    public void set_Request(ResourceReference value);
    public Code`1<ClaimProcessingCodes> get_OutcomeElement();
    public void set_OutcomeElement(Code`1<ClaimProcessingCodes> value);
    public Nullable`1<ClaimProcessingCodes> get_Outcome();
    public void set_Outcome(Nullable`1<ClaimProcessingCodes> value);
    public FhirString get_DispositionElement();
    public void set_DispositionElement(FhirString value);
    public string get_Disposition();
    public void set_Disposition(string value);
    public ResourceReference get_Insurer();
    public void set_Insurer(ResourceReference value);
    public List`1<InsuranceComponent> get_Insurance();
    public void set_Insurance(List`1<InsuranceComponent> value);
    public FhirString get_PreAuthRefElement();
    public void set_PreAuthRefElement(FhirString value);
    public string get_PreAuthRef();
    public void set_PreAuthRef(string value);
    public CodeableConcept get_Form();
    public void set_Form(CodeableConcept value);
    public List`1<ErrorsComponent> get_Error();
    public void set_Error(List`1<ErrorsComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CoverageEligibilityResponse/<get_Children>d__93")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CoverageEligibilityResponse/<get_NamedChildren>d__95")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CoverageEligibilityResponse/<GetElementPairs>d__97")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("DataRequirement", "http://hl7.org/fhir/StructureDefinition/DataRequirement")]
public class Hl7.Fhir.Model.DataRequirement : DataType {
    private Code`1<FHIRAllTypes> _TypeElement;
    private List`1<Canonical> _ProfileElement;
    private DataType _Subject;
    private List`1<FhirString> _MustSupportElement;
    private List`1<CodeFilterComponent> _CodeFilter;
    private List`1<DateFilterComponent> _DateFilter;
    private PositiveInt _LimitElement;
    private List`1<SortComponent> _Sort;
    public string TypeName { get; }
    [FhirElementAttribute("type")]
[DeclaredTypeAttribute]
[BindingAttribute("FHIRAllTypes")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<FHIRAllTypes> TypeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<FHIRAllTypes> Type { get; public set; }
    [FhirElementAttribute("profile")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> ProfileElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Profile { get; public set; }
    [FhirElementAttribute]
[BindingAttribute("SubjectType")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Subject { get; public set; }
    [FhirElementAttribute("mustSupport")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> MustSupportElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> MustSupport { get; public set; }
    [FhirElementAttribute("codeFilter")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeFilterComponent> CodeFilter { get; public set; }
    [FhirElementAttribute("dateFilter")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<DateFilterComponent> DateFilter { get; public set; }
    [FhirElementAttribute("limit")]
[DataMemberAttribute]
public PositiveInt LimitElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<int> Limit { get; public set; }
    [FhirElementAttribute("sort")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<SortComponent> Sort { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Code`1<FHIRAllTypes> get_TypeElement();
    public void set_TypeElement(Code`1<FHIRAllTypes> value);
    public Nullable`1<FHIRAllTypes> get_Type();
    public void set_Type(Nullable`1<FHIRAllTypes> value);
    public List`1<Canonical> get_ProfileElement();
    public void set_ProfileElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_Profile();
    public void set_Profile(IEnumerable`1<string> value);
    public DataType get_Subject();
    public void set_Subject(DataType value);
    public List`1<FhirString> get_MustSupportElement();
    public void set_MustSupportElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_MustSupport();
    public void set_MustSupport(IEnumerable`1<string> value);
    public List`1<CodeFilterComponent> get_CodeFilter();
    public void set_CodeFilter(List`1<CodeFilterComponent> value);
    public List`1<DateFilterComponent> get_DateFilter();
    public void set_DateFilter(List`1<DateFilterComponent> value);
    public PositiveInt get_LimitElement();
    public void set_LimitElement(PositiveInt value);
    public Nullable`1<int> get_Limit();
    public void set_Limit(Nullable`1<int> value);
    public List`1<SortComponent> get_Sort();
    public void set_Sort(List`1<SortComponent> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DataRequirement/<get_Children>d__55")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DataRequirement/<get_NamedChildren>d__57")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DataRequirement/<GetElementPairs>d__59")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("DaysOfWeek", "http://hl7.org/fhir/ValueSet/days-of-week", "http://hl7.org/fhir/days-of-week")]
public enum Hl7.Fhir.Model.DaysOfWeek : Enum {
    public int value__;
    [EnumLiteralAttribute("mon", "")]
[DescriptionAttribute("Monday")]
public static DaysOfWeek Mon;
    [EnumLiteralAttribute("tue", "")]
[DescriptionAttribute("Tuesday")]
public static DaysOfWeek Tue;
    [EnumLiteralAttribute("wed", "")]
[DescriptionAttribute("Wednesday")]
public static DaysOfWeek Wed;
    [EnumLiteralAttribute("thu", "")]
[DescriptionAttribute("Thursday")]
public static DaysOfWeek Thu;
    [EnumLiteralAttribute("fri", "")]
[DescriptionAttribute("Friday")]
public static DaysOfWeek Fri;
    [EnumLiteralAttribute("sat", "")]
[DescriptionAttribute("Saturday")]
public static DaysOfWeek Sat;
    [EnumLiteralAttribute("sun", "")]
[DescriptionAttribute("Sunday")]
public static DaysOfWeek Sun;
}
[DataContractAttribute]
[FhirTypeAttribute("DetectedIssue", "http://hl7.org/fhir/StructureDefinition/DetectedIssue")]
public class Hl7.Fhir.Model.DetectedIssue : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<ObservationStatus> _StatusElement;
    private CodeableConcept _Code;
    private Code`1<DetectedIssueSeverity> _SeverityElement;
    private ResourceReference _Patient;
    private DataType _Identified;
    private ResourceReference _Author;
    private List`1<ResourceReference> _Implicated;
    private List`1<EvidenceComponent> _Evidence;
    private FhirString _DetailElement;
    private FhirUri _ReferenceElement;
    private List`1<MitigationComponent> _Mitigation;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("DetectedIssueStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ObservationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ObservationStatus> Status { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("DetectedIssueCategory")]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [FhirElementAttribute("severity")]
[DeclaredTypeAttribute]
[BindingAttribute("DetectedIssueSeverity")]
[DataMemberAttribute]
public Code`1<DetectedIssueSeverity> SeverityElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<DetectedIssueSeverity> Severity { get; public set; }
    [FhirElementAttribute("patient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Patient { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Identified { get; public set; }
    [FhirElementAttribute("author")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Author { get; public set; }
    [FhirElementAttribute("implicated")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Implicated { get; public set; }
    [FhirElementAttribute("evidence")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<EvidenceComponent> Evidence { get; public set; }
    [FhirElementAttribute("detail")]
[DataMemberAttribute]
public FhirString DetailElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Detail { get; public set; }
    [FhirElementAttribute("reference")]
[DataMemberAttribute]
public FhirUri ReferenceElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Reference { get; public set; }
    [FhirElementAttribute("mitigation")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<MitigationComponent> Mitigation { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<ObservationStatus> get_StatusElement();
    public void set_StatusElement(Code`1<ObservationStatus> value);
    public Nullable`1<ObservationStatus> get_Status();
    public void set_Status(Nullable`1<ObservationStatus> value);
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public Code`1<DetectedIssueSeverity> get_SeverityElement();
    public void set_SeverityElement(Code`1<DetectedIssueSeverity> value);
    public Nullable`1<DetectedIssueSeverity> get_Severity();
    public void set_Severity(Nullable`1<DetectedIssueSeverity> value);
    public ResourceReference get_Patient();
    public void set_Patient(ResourceReference value);
    public DataType get_Identified();
    public void set_Identified(DataType value);
    public ResourceReference get_Author();
    public void set_Author(ResourceReference value);
    public List`1<ResourceReference> get_Implicated();
    public void set_Implicated(List`1<ResourceReference> value);
    public List`1<EvidenceComponent> get_Evidence();
    public void set_Evidence(List`1<EvidenceComponent> value);
    public FhirString get_DetailElement();
    public void set_DetailElement(FhirString value);
    public string get_Detail();
    public void set_Detail(string value);
    public FhirUri get_ReferenceElement();
    public void set_ReferenceElement(FhirUri value);
    public string get_Reference();
    public void set_Reference(string value);
    public List`1<MitigationComponent> get_Mitigation();
    public void set_Mitigation(List`1<MitigationComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DetectedIssue/<get_Children>d__77")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DetectedIssue/<get_NamedChildren>d__79")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DetectedIssue/<GetElementPairs>d__81")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Device", "http://hl7.org/fhir/StructureDefinition/Device")]
public class Hl7.Fhir.Model.Device : DomainResource {
    private List`1<Identifier> _Identifier;
    private ResourceReference _Definition;
    private List`1<UdiCarrierComponent> _UdiCarrier;
    private Code`1<FHIRDeviceStatus> _StatusElement;
    private List`1<CodeableConcept> _StatusReason;
    private FhirString _DistinctIdentifierElement;
    private FhirString _ManufacturerElement;
    private FhirDateTime _ManufactureDateElement;
    private FhirDateTime _ExpirationDateElement;
    private FhirString _LotNumberElement;
    private FhirString _SerialNumberElement;
    private List`1<DeviceNameComponent> _DeviceName;
    private FhirString _ModelNumberElement;
    private FhirString _PartNumberElement;
    private CodeableConcept _Type;
    private List`1<SpecializationComponent> _Specialization;
    private List`1<VersionComponent> _Version;
    private List`1<PropertyComponent> _Property;
    private ResourceReference _Patient;
    private ResourceReference _Owner;
    private List`1<ContactPoint> _Contact;
    private ResourceReference _Location;
    private FhirUri _UrlElement;
    private List`1<Annotation> _Note;
    private List`1<CodeableConcept> _Safety;
    private ResourceReference _Parent;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("definition")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Definition { get; public set; }
    [FhirElementAttribute("udiCarrier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UdiCarrierComponent> UdiCarrier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("FHIRDeviceStatus")]
[DataMemberAttribute]
public Code`1<FHIRDeviceStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<FHIRDeviceStatus> Status { get; public set; }
    [FhirElementAttribute("statusReason")]
[BindingAttribute("FHIRDeviceStatusReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> StatusReason { get; public set; }
    [FhirElementAttribute("distinctIdentifier")]
[DataMemberAttribute]
public FhirString DistinctIdentifierElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string DistinctIdentifier { get; public set; }
    [FhirElementAttribute("manufacturer")]
[DataMemberAttribute]
public FhirString ManufacturerElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Manufacturer { get; public set; }
    [FhirElementAttribute("manufactureDate")]
[DataMemberAttribute]
public FhirDateTime ManufactureDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ManufactureDate { get; public set; }
    [FhirElementAttribute("expirationDate")]
[DataMemberAttribute]
public FhirDateTime ExpirationDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ExpirationDate { get; public set; }
    [FhirElementAttribute("lotNumber")]
[DataMemberAttribute]
public FhirString LotNumberElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string LotNumber { get; public set; }
    [FhirElementAttribute("serialNumber")]
[DataMemberAttribute]
public FhirString SerialNumberElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string SerialNumber { get; public set; }
    [FhirElementAttribute("deviceName")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<DeviceNameComponent> DeviceName { get; public set; }
    [FhirElementAttribute("modelNumber")]
[DataMemberAttribute]
public FhirString ModelNumberElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ModelNumber { get; public set; }
    [FhirElementAttribute("partNumber")]
[DataMemberAttribute]
public FhirString PartNumberElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string PartNumber { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("DeviceType")]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("specialization")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<SpecializationComponent> Specialization { get; public set; }
    [FhirElementAttribute("version")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<VersionComponent> Version { get; public set; }
    [FhirElementAttribute("property")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<PropertyComponent> Property { get; public set; }
    [FhirElementAttribute("patient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Patient { get; public set; }
    [FhirElementAttribute("owner")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Owner { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactPoint> Contact { get; public set; }
    [FhirElementAttribute("location")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Location { get; public set; }
    [FhirElementAttribute("url")]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("safety")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Safety { get; public set; }
    [FhirElementAttribute("parent")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Parent { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public ResourceReference get_Definition();
    public void set_Definition(ResourceReference value);
    public List`1<UdiCarrierComponent> get_UdiCarrier();
    public void set_UdiCarrier(List`1<UdiCarrierComponent> value);
    public Code`1<FHIRDeviceStatus> get_StatusElement();
    public void set_StatusElement(Code`1<FHIRDeviceStatus> value);
    public Nullable`1<FHIRDeviceStatus> get_Status();
    public void set_Status(Nullable`1<FHIRDeviceStatus> value);
    public List`1<CodeableConcept> get_StatusReason();
    public void set_StatusReason(List`1<CodeableConcept> value);
    public FhirString get_DistinctIdentifierElement();
    public void set_DistinctIdentifierElement(FhirString value);
    public string get_DistinctIdentifier();
    public void set_DistinctIdentifier(string value);
    public FhirString get_ManufacturerElement();
    public void set_ManufacturerElement(FhirString value);
    public string get_Manufacturer();
    public void set_Manufacturer(string value);
    public FhirDateTime get_ManufactureDateElement();
    public void set_ManufactureDateElement(FhirDateTime value);
    public string get_ManufactureDate();
    public void set_ManufactureDate(string value);
    public FhirDateTime get_ExpirationDateElement();
    public void set_ExpirationDateElement(FhirDateTime value);
    public string get_ExpirationDate();
    public void set_ExpirationDate(string value);
    public FhirString get_LotNumberElement();
    public void set_LotNumberElement(FhirString value);
    public string get_LotNumber();
    public void set_LotNumber(string value);
    public FhirString get_SerialNumberElement();
    public void set_SerialNumberElement(FhirString value);
    public string get_SerialNumber();
    public void set_SerialNumber(string value);
    public List`1<DeviceNameComponent> get_DeviceName();
    public void set_DeviceName(List`1<DeviceNameComponent> value);
    public FhirString get_ModelNumberElement();
    public void set_ModelNumberElement(FhirString value);
    public string get_ModelNumber();
    public void set_ModelNumber(string value);
    public FhirString get_PartNumberElement();
    public void set_PartNumberElement(FhirString value);
    public string get_PartNumber();
    public void set_PartNumber(string value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public List`1<SpecializationComponent> get_Specialization();
    public void set_Specialization(List`1<SpecializationComponent> value);
    public List`1<VersionComponent> get_Version();
    public void set_Version(List`1<VersionComponent> value);
    public List`1<PropertyComponent> get_Property();
    public void set_Property(List`1<PropertyComponent> value);
    public ResourceReference get_Patient();
    public void set_Patient(ResourceReference value);
    public ResourceReference get_Owner();
    public void set_Owner(ResourceReference value);
    public List`1<ContactPoint> get_Contact();
    public void set_Contact(List`1<ContactPoint> value);
    public ResourceReference get_Location();
    public void set_Location(ResourceReference value);
    public FhirUri get_UrlElement();
    public void set_UrlElement(FhirUri value);
    public string get_Url();
    public void set_Url(string value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public List`1<CodeableConcept> get_Safety();
    public void set_Safety(List`1<CodeableConcept> value);
    public ResourceReference get_Parent();
    public void set_Parent(ResourceReference value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Device/<get_Children>d__155")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Device/<get_NamedChildren>d__157")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Device/<GetElementPairs>d__159")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("DeviceDefinition", "http://hl7.org/fhir/StructureDefinition/DeviceDefinition")]
public class Hl7.Fhir.Model.DeviceDefinition : DomainResource {
    private List`1<Identifier> _Identifier;
    private List`1<UdiDeviceIdentifierComponent> _UdiDeviceIdentifier;
    private DataType _Manufacturer;
    private List`1<DeviceNameComponent> _DeviceName;
    private FhirString _ModelNumberElement;
    private CodeableConcept _Type;
    private List`1<SpecializationComponent> _Specialization;
    private List`1<FhirString> _VersionElement;
    private List`1<CodeableConcept> _Safety;
    private List`1<ProductShelfLife> _ShelfLifeStorage;
    private ProdCharacteristic _PhysicalCharacteristics;
    private List`1<CodeableConcept> _LanguageCode;
    private List`1<CapabilityComponent> _Capability;
    private List`1<PropertyComponent> _Property;
    private ResourceReference _Owner;
    private List`1<ContactPoint> _Contact;
    private FhirUri _UrlElement;
    private FhirUri _OnlineInformationElement;
    private List`1<Annotation> _Note;
    private Quantity _Quantity;
    private ResourceReference _ParentDevice;
    private List`1<MaterialComponent> _Material;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("udiDeviceIdentifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UdiDeviceIdentifierComponent> UdiDeviceIdentifier { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Manufacturer { get; public set; }
    [FhirElementAttribute("deviceName")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<DeviceNameComponent> DeviceName { get; public set; }
    [FhirElementAttribute("modelNumber")]
[DataMemberAttribute]
public FhirString ModelNumberElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ModelNumber { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("DeviceKind")]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("specialization")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<SpecializationComponent> Specialization { get; public set; }
    [FhirElementAttribute("version")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Version { get; public set; }
    [FhirElementAttribute("safety")]
[BindingAttribute("Safety")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Safety { get; public set; }
    [FhirElementAttribute("shelfLifeStorage")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ProductShelfLife> ShelfLifeStorage { get; public set; }
    [FhirElementAttribute("physicalCharacteristics")]
[DataMemberAttribute]
public ProdCharacteristic PhysicalCharacteristics { get; public set; }
    [FhirElementAttribute("languageCode")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> LanguageCode { get; public set; }
    [FhirElementAttribute("capability")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CapabilityComponent> Capability { get; public set; }
    [FhirElementAttribute("property")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<PropertyComponent> Property { get; public set; }
    [FhirElementAttribute("owner")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Owner { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactPoint> Contact { get; public set; }
    [FhirElementAttribute("url")]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("onlineInformation")]
[DataMemberAttribute]
public FhirUri OnlineInformationElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string OnlineInformation { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("quantity")]
[DataMemberAttribute]
public Quantity Quantity { get; public set; }
    [FhirElementAttribute("parentDevice")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference ParentDevice { get; public set; }
    [FhirElementAttribute("material")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<MaterialComponent> Material { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<UdiDeviceIdentifierComponent> get_UdiDeviceIdentifier();
    public void set_UdiDeviceIdentifier(List`1<UdiDeviceIdentifierComponent> value);
    public DataType get_Manufacturer();
    public void set_Manufacturer(DataType value);
    public List`1<DeviceNameComponent> get_DeviceName();
    public void set_DeviceName(List`1<DeviceNameComponent> value);
    public FhirString get_ModelNumberElement();
    public void set_ModelNumberElement(FhirString value);
    public string get_ModelNumber();
    public void set_ModelNumber(string value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public List`1<SpecializationComponent> get_Specialization();
    public void set_Specialization(List`1<SpecializationComponent> value);
    public List`1<FhirString> get_VersionElement();
    public void set_VersionElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_Version();
    public void set_Version(IEnumerable`1<string> value);
    public List`1<CodeableConcept> get_Safety();
    public void set_Safety(List`1<CodeableConcept> value);
    public List`1<ProductShelfLife> get_ShelfLifeStorage();
    public void set_ShelfLifeStorage(List`1<ProductShelfLife> value);
    public ProdCharacteristic get_PhysicalCharacteristics();
    public void set_PhysicalCharacteristics(ProdCharacteristic value);
    public List`1<CodeableConcept> get_LanguageCode();
    public void set_LanguageCode(List`1<CodeableConcept> value);
    public List`1<CapabilityComponent> get_Capability();
    public void set_Capability(List`1<CapabilityComponent> value);
    public List`1<PropertyComponent> get_Property();
    public void set_Property(List`1<PropertyComponent> value);
    public ResourceReference get_Owner();
    public void set_Owner(ResourceReference value);
    public List`1<ContactPoint> get_Contact();
    public void set_Contact(List`1<ContactPoint> value);
    public FhirUri get_UrlElement();
    public void set_UrlElement(FhirUri value);
    public string get_Url();
    public void set_Url(string value);
    public FhirUri get_OnlineInformationElement();
    public void set_OnlineInformationElement(FhirUri value);
    public string get_OnlineInformation();
    public void set_OnlineInformation(string value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public Quantity get_Quantity();
    public void set_Quantity(Quantity value);
    public ResourceReference get_ParentDevice();
    public void set_ParentDevice(ResourceReference value);
    public List`1<MaterialComponent> get_Material();
    public void set_Material(List`1<MaterialComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DeviceDefinition/<get_Children>d__116")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DeviceDefinition/<get_NamedChildren>d__118")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DeviceDefinition/<GetElementPairs>d__120")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("DeviceMetric", "http://hl7.org/fhir/StructureDefinition/DeviceMetric")]
public class Hl7.Fhir.Model.DeviceMetric : DomainResource {
    private List`1<Identifier> _Identifier;
    private CodeableConcept _Type;
    private CodeableConcept _Unit;
    private ResourceReference _Source;
    private ResourceReference _Parent;
    private Code`1<DeviceMetricOperationalStatus> _OperationalStatusElement;
    private Code`1<DeviceMetricColor> _ColorElement;
    private Code`1<DeviceMetricCategory> _CategoryElement;
    private Timing _MeasurementPeriod;
    private List`1<CalibrationComponent> _Calibration;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("MetricType")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("unit")]
[BindingAttribute("MetricUnit")]
[DataMemberAttribute]
public CodeableConcept Unit { get; public set; }
    [FhirElementAttribute("source")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Source { get; public set; }
    [FhirElementAttribute("parent")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Parent { get; public set; }
    [FhirElementAttribute("operationalStatus")]
[DeclaredTypeAttribute]
[BindingAttribute("DeviceMetricOperationalStatus")]
[DataMemberAttribute]
public Code`1<DeviceMetricOperationalStatus> OperationalStatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<DeviceMetricOperationalStatus> OperationalStatus { get; public set; }
    [FhirElementAttribute("color")]
[DeclaredTypeAttribute]
[BindingAttribute("DeviceMetricColor")]
[DataMemberAttribute]
public Code`1<DeviceMetricColor> ColorElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<DeviceMetricColor> Color { get; public set; }
    [FhirElementAttribute("category")]
[DeclaredTypeAttribute]
[BindingAttribute("DeviceMetricCategory")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<DeviceMetricCategory> CategoryElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<DeviceMetricCategory> Category { get; public set; }
    [FhirElementAttribute("measurementPeriod")]
[DataMemberAttribute]
public Timing MeasurementPeriod { get; public set; }
    [FhirElementAttribute("calibration")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CalibrationComponent> Calibration { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public CodeableConcept get_Unit();
    public void set_Unit(CodeableConcept value);
    public ResourceReference get_Source();
    public void set_Source(ResourceReference value);
    public ResourceReference get_Parent();
    public void set_Parent(ResourceReference value);
    public Code`1<DeviceMetricOperationalStatus> get_OperationalStatusElement();
    public void set_OperationalStatusElement(Code`1<DeviceMetricOperationalStatus> value);
    public Nullable`1<DeviceMetricOperationalStatus> get_OperationalStatus();
    public void set_OperationalStatus(Nullable`1<DeviceMetricOperationalStatus> value);
    public Code`1<DeviceMetricColor> get_ColorElement();
    public void set_ColorElement(Code`1<DeviceMetricColor> value);
    public Nullable`1<DeviceMetricColor> get_Color();
    public void set_Color(Nullable`1<DeviceMetricColor> value);
    public Code`1<DeviceMetricCategory> get_CategoryElement();
    public void set_CategoryElement(Code`1<DeviceMetricCategory> value);
    public Nullable`1<DeviceMetricCategory> get_Category();
    public void set_Category(Nullable`1<DeviceMetricCategory> value);
    public Timing get_MeasurementPeriod();
    public void set_MeasurementPeriod(Timing value);
    public List`1<CalibrationComponent> get_Calibration();
    public void set_Calibration(List`1<CalibrationComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DeviceMetric/<get_Children>d__69")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DeviceMetric/<get_NamedChildren>d__71")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DeviceMetric/<GetElementPairs>d__73")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("DeviceNameType", "http://hl7.org/fhir/ValueSet/device-nametype", "http://hl7.org/fhir/device-nametype")]
public enum Hl7.Fhir.Model.DeviceNameType : Enum {
    public int value__;
    [EnumLiteralAttribute("udi-label-name", "")]
[DescriptionAttribute("UDI Label name")]
public static DeviceNameType UdiLabelName;
    [EnumLiteralAttribute("user-friendly-name", "")]
[DescriptionAttribute("User Friendly name")]
public static DeviceNameType UserFriendlyName;
    [EnumLiteralAttribute("patient-reported-name", "")]
[DescriptionAttribute("Patient Reported name")]
public static DeviceNameType PatientReportedName;
    [EnumLiteralAttribute("manufacturer-name", "")]
[DescriptionAttribute("Manufacturer name")]
public static DeviceNameType ManufacturerName;
    [EnumLiteralAttribute("model-name", "")]
[DescriptionAttribute("Model name")]
public static DeviceNameType ModelName;
    [EnumLiteralAttribute("other", "")]
[DescriptionAttribute("other")]
public static DeviceNameType Other;
}
[DataContractAttribute]
[FhirTypeAttribute("DeviceRequest", "http://hl7.org/fhir/StructureDefinition/DeviceRequest")]
public class Hl7.Fhir.Model.DeviceRequest : DomainResource {
    private List`1<Identifier> _Identifier;
    private List`1<Canonical> _InstantiatesCanonicalElement;
    private List`1<FhirUri> _InstantiatesUriElement;
    private List`1<ResourceReference> _BasedOn;
    private List`1<ResourceReference> _PriorRequest;
    private Identifier _GroupIdentifier;
    private Code`1<RequestStatus> _StatusElement;
    private Code`1<RequestIntent> _IntentElement;
    private Code`1<RequestPriority> _PriorityElement;
    private DataType _Code;
    private List`1<ParameterComponent> _Parameter;
    private ResourceReference _Subject;
    private ResourceReference _Encounter;
    private DataType _Occurrence;
    private FhirDateTime _AuthoredOnElement;
    private ResourceReference _Requester;
    private CodeableConcept _PerformerType;
    private ResourceReference _Performer;
    private List`1<CodeableConcept> _ReasonCode;
    private List`1<ResourceReference> _ReasonReference;
    private List`1<ResourceReference> _Insurance;
    private List`1<ResourceReference> _SupportingInfo;
    private List`1<Annotation> _Note;
    private List`1<ResourceReference> _RelevantHistory;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("instantiatesCanonical")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> InstantiatesCanonicalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> InstantiatesCanonical { get; public set; }
    [FhirElementAttribute("instantiatesUri")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirUri> InstantiatesUriElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> InstantiatesUri { get; public set; }
    [FhirElementAttribute("basedOn")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> BasedOn { get; public set; }
    [FhirElementAttribute("priorRequest")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> PriorRequest { get; public set; }
    [FhirElementAttribute("groupIdentifier")]
[DataMemberAttribute]
public Identifier GroupIdentifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("DeviceRequestStatus")]
[DataMemberAttribute]
public Code`1<RequestStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<RequestStatus> Status { get; public set; }
    [FhirElementAttribute("intent")]
[DeclaredTypeAttribute]
[BindingAttribute("RequestIntent")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<RequestIntent> IntentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<RequestIntent> Intent { get; public set; }
    [FhirElementAttribute("priority")]
[DeclaredTypeAttribute]
[BindingAttribute("RequestPriority")]
[DataMemberAttribute]
public Code`1<RequestPriority> PriorityElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<RequestPriority> Priority { get; public set; }
    [FhirElementAttribute]
[BindingAttribute("DeviceRequestCode")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public DataType Code { get; public set; }
    [FhirElementAttribute("parameter")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ParameterComponent> Parameter { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Occurrence { get; public set; }
    [FhirElementAttribute("authoredOn")]
[DataMemberAttribute]
public FhirDateTime AuthoredOnElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string AuthoredOn { get; public set; }
    [FhirElementAttribute("requester")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Requester { get; public set; }
    [FhirElementAttribute("performerType")]
[BindingAttribute("DeviceRequestParticipantRole")]
[DataMemberAttribute]
public CodeableConcept PerformerType { get; public set; }
    [FhirElementAttribute("performer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Performer { get; public set; }
    [FhirElementAttribute("reasonCode")]
[BindingAttribute("DeviceRequestReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ReasonCode { get; public set; }
    [FhirElementAttribute("reasonReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ReasonReference { get; public set; }
    [FhirElementAttribute("insurance")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Insurance { get; public set; }
    [FhirElementAttribute("supportingInfo")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> SupportingInfo { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("relevantHistory")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> RelevantHistory { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private DataType Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.DataType>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<Canonical> get_InstantiatesCanonicalElement();
    public void set_InstantiatesCanonicalElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_InstantiatesCanonical();
    public void set_InstantiatesCanonical(IEnumerable`1<string> value);
    public List`1<FhirUri> get_InstantiatesUriElement();
    public void set_InstantiatesUriElement(List`1<FhirUri> value);
    public IEnumerable`1<string> get_InstantiatesUri();
    public void set_InstantiatesUri(IEnumerable`1<string> value);
    public List`1<ResourceReference> get_BasedOn();
    public void set_BasedOn(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_PriorRequest();
    public void set_PriorRequest(List`1<ResourceReference> value);
    public Identifier get_GroupIdentifier();
    public void set_GroupIdentifier(Identifier value);
    public Code`1<RequestStatus> get_StatusElement();
    public void set_StatusElement(Code`1<RequestStatus> value);
    public Nullable`1<RequestStatus> get_Status();
    public void set_Status(Nullable`1<RequestStatus> value);
    public Code`1<RequestIntent> get_IntentElement();
    public void set_IntentElement(Code`1<RequestIntent> value);
    public Nullable`1<RequestIntent> get_Intent();
    public void set_Intent(Nullable`1<RequestIntent> value);
    public Code`1<RequestPriority> get_PriorityElement();
    public void set_PriorityElement(Code`1<RequestPriority> value);
    public Nullable`1<RequestPriority> get_Priority();
    public void set_Priority(Nullable`1<RequestPriority> value);
    public DataType get_Code();
    public void set_Code(DataType value);
    public List`1<ParameterComponent> get_Parameter();
    public void set_Parameter(List`1<ParameterComponent> value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public DataType get_Occurrence();
    public void set_Occurrence(DataType value);
    public FhirDateTime get_AuthoredOnElement();
    public void set_AuthoredOnElement(FhirDateTime value);
    public string get_AuthoredOn();
    public void set_AuthoredOn(string value);
    public ResourceReference get_Requester();
    public void set_Requester(ResourceReference value);
    public CodeableConcept get_PerformerType();
    public void set_PerformerType(CodeableConcept value);
    public ResourceReference get_Performer();
    public void set_Performer(ResourceReference value);
    public List`1<CodeableConcept> get_ReasonCode();
    public void set_ReasonCode(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_ReasonReference();
    public void set_ReasonReference(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Insurance();
    public void set_Insurance(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_SupportingInfo();
    public void set_SupportingInfo(List`1<ResourceReference> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public List`1<ResourceReference> get_RelevantHistory();
    public void set_RelevantHistory(List`1<ResourceReference> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override DataType Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.DataType>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.DataType>.set_Code(DataType value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DeviceRequest/<get_Children>d__129")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DeviceRequest/<get_NamedChildren>d__131")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DeviceRequest/<GetElementPairs>d__133")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("DeviceUseStatement", "http://hl7.org/fhir/StructureDefinition/DeviceUseStatement")]
public class Hl7.Fhir.Model.DeviceUseStatement : DomainResource {
    private List`1<Identifier> _Identifier;
    private List`1<ResourceReference> _BasedOn;
    private Code`1<DeviceUseStatementStatus> _StatusElement;
    private ResourceReference _Subject;
    private List`1<ResourceReference> _DerivedFrom;
    private DataType _Timing;
    private FhirDateTime _RecordedOnElement;
    private ResourceReference _Source;
    private ResourceReference _Device;
    private List`1<CodeableConcept> _ReasonCode;
    private List`1<ResourceReference> _ReasonReference;
    private CodeableConcept _BodySite;
    private List`1<Annotation> _Note;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("basedOn")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> BasedOn { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("DeviceUseStatementStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<DeviceUseStatementStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<DeviceUseStatementStatus> Status { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("derivedFrom")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> DerivedFrom { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Timing { get; public set; }
    [FhirElementAttribute("recordedOn")]
[DataMemberAttribute]
public FhirDateTime RecordedOnElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string RecordedOn { get; public set; }
    [FhirElementAttribute("source")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Source { get; public set; }
    [FhirElementAttribute("device")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Device { get; public set; }
    [FhirElementAttribute("reasonCode")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ReasonCode { get; public set; }
    [FhirElementAttribute("reasonReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ReasonReference { get; public set; }
    [FhirElementAttribute("bodySite")]
[BindingAttribute("BodySite")]
[DataMemberAttribute]
public CodeableConcept BodySite { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<ResourceReference> get_BasedOn();
    public void set_BasedOn(List`1<ResourceReference> value);
    public Code`1<DeviceUseStatementStatus> get_StatusElement();
    public void set_StatusElement(Code`1<DeviceUseStatementStatus> value);
    public Nullable`1<DeviceUseStatementStatus> get_Status();
    public void set_Status(Nullable`1<DeviceUseStatementStatus> value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public List`1<ResourceReference> get_DerivedFrom();
    public void set_DerivedFrom(List`1<ResourceReference> value);
    public DataType get_Timing();
    public void set_Timing(DataType value);
    public FhirDateTime get_RecordedOnElement();
    public void set_RecordedOnElement(FhirDateTime value);
    public string get_RecordedOn();
    public void set_RecordedOn(string value);
    public ResourceReference get_Source();
    public void set_Source(ResourceReference value);
    public ResourceReference get_Device();
    public void set_Device(ResourceReference value);
    public List`1<CodeableConcept> get_ReasonCode();
    public void set_ReasonCode(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_ReasonReference();
    public void set_ReasonReference(List`1<ResourceReference> value);
    public CodeableConcept get_BodySite();
    public void set_BodySite(CodeableConcept value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DeviceUseStatement/<get_Children>d__69")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DeviceUseStatement/<get_NamedChildren>d__71")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DeviceUseStatement/<GetElementPairs>d__73")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("DiagnosticReport", "http://hl7.org/fhir/StructureDefinition/DiagnosticReport")]
public class Hl7.Fhir.Model.DiagnosticReport : DomainResource {
    private List`1<Identifier> _Identifier;
    private List`1<ResourceReference> _BasedOn;
    private Code`1<DiagnosticReportStatus> _StatusElement;
    private List`1<CodeableConcept> _Category;
    private CodeableConcept _Code;
    private ResourceReference _Subject;
    private ResourceReference _Encounter;
    private DataType _Effective;
    private Instant _IssuedElement;
    private List`1<ResourceReference> _Performer;
    private List`1<ResourceReference> _ResultsInterpreter;
    private List`1<ResourceReference> _Specimen;
    private List`1<ResourceReference> _Result;
    private List`1<ResourceReference> _ImagingStudy;
    private List`1<MediaComponent> _Media;
    private FhirString _ConclusionElement;
    private List`1<CodeableConcept> _ConclusionCode;
    private List`1<Attachment> _PresentedForm;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("basedOn")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> BasedOn { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("DiagnosticReportStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<DiagnosticReportStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<DiagnosticReportStatus> Status { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("DiagnosticServiceSection")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Category { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("DiagnosticReportCodes")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Effective { get; public set; }
    [FhirElementAttribute("issued")]
[DataMemberAttribute]
public Instant IssuedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<DateTimeOffset> Issued { get; public set; }
    [FhirElementAttribute("performer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Performer { get; public set; }
    [FhirElementAttribute("resultsInterpreter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ResultsInterpreter { get; public set; }
    [FhirElementAttribute("specimen")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Specimen { get; public set; }
    [FhirElementAttribute("result")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Result { get; public set; }
    [FhirElementAttribute("imagingStudy")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ImagingStudy { get; public set; }
    [FhirElementAttribute("media")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<MediaComponent> Media { get; public set; }
    [FhirElementAttribute("conclusion")]
[DataMemberAttribute]
public FhirString ConclusionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Conclusion { get; public set; }
    [FhirElementAttribute("conclusionCode")]
[BindingAttribute("AdjunctDiagnosis")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ConclusionCode { get; public set; }
    [FhirElementAttribute("presentedForm")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Attachment> PresentedForm { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<ResourceReference> get_BasedOn();
    public void set_BasedOn(List`1<ResourceReference> value);
    public Code`1<DiagnosticReportStatus> get_StatusElement();
    public void set_StatusElement(Code`1<DiagnosticReportStatus> value);
    public Nullable`1<DiagnosticReportStatus> get_Status();
    public void set_Status(Nullable`1<DiagnosticReportStatus> value);
    public List`1<CodeableConcept> get_Category();
    public void set_Category(List`1<CodeableConcept> value);
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public DataType get_Effective();
    public void set_Effective(DataType value);
    public Instant get_IssuedElement();
    public void set_IssuedElement(Instant value);
    public Nullable`1<DateTimeOffset> get_Issued();
    public void set_Issued(Nullable`1<DateTimeOffset> value);
    public List`1<ResourceReference> get_Performer();
    public void set_Performer(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_ResultsInterpreter();
    public void set_ResultsInterpreter(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Specimen();
    public void set_Specimen(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Result();
    public void set_Result(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_ImagingStudy();
    public void set_ImagingStudy(List`1<ResourceReference> value);
    public List`1<MediaComponent> get_Media();
    public void set_Media(List`1<MediaComponent> value);
    public FhirString get_ConclusionElement();
    public void set_ConclusionElement(FhirString value);
    public string get_Conclusion();
    public void set_Conclusion(string value);
    public List`1<CodeableConcept> get_ConclusionCode();
    public void set_ConclusionCode(List`1<CodeableConcept> value);
    public List`1<Attachment> get_PresentedForm();
    public void set_PresentedForm(List`1<Attachment> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DiagnosticReport/<get_Children>d__97")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DiagnosticReport/<get_NamedChildren>d__99")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DiagnosticReport/<GetElementPairs>d__101")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Distance", "http://hl7.org/fhir/StructureDefinition/Distance")]
public class Hl7.Fhir.Model.Distance : Quantity {
    public string TypeName { get; }
    public virtual string get_TypeName();
    public virtual IDeepCopyable DeepCopy();
}
[DataContractAttribute]
[FhirTypeAttribute("DocumentManifest", "http://hl7.org/fhir/StructureDefinition/DocumentManifest")]
public class Hl7.Fhir.Model.DocumentManifest : DomainResource {
    private Identifier _MasterIdentifier;
    private List`1<Identifier> _Identifier;
    private Code`1<DocumentReferenceStatus> _StatusElement;
    private CodeableConcept _Type;
    private ResourceReference _Subject;
    private FhirDateTime _CreatedElement;
    private List`1<ResourceReference> _Author;
    private List`1<ResourceReference> _Recipient;
    private FhirUri _SourceElement;
    private FhirString _DescriptionElement;
    private List`1<ResourceReference> _Content;
    private List`1<RelatedComponent> _Related;
    public string TypeName { get; }
    [FhirElementAttribute("masterIdentifier")]
[DataMemberAttribute]
public Identifier MasterIdentifier { get; public set; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("DocumentReferenceStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<DocumentReferenceStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<DocumentReferenceStatus> Status { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("v3Act")]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("created")]
[DataMemberAttribute]
public FhirDateTime CreatedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Created { get; public set; }
    [FhirElementAttribute("author")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Author { get; public set; }
    [FhirElementAttribute("recipient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Recipient { get; public set; }
    [FhirElementAttribute("source")]
[DataMemberAttribute]
public FhirUri SourceElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Source { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public FhirString DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("content")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Content { get; public set; }
    [FhirElementAttribute("related")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RelatedComponent> Related { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Identifier get_MasterIdentifier();
    public void set_MasterIdentifier(Identifier value);
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<DocumentReferenceStatus> get_StatusElement();
    public void set_StatusElement(Code`1<DocumentReferenceStatus> value);
    public Nullable`1<DocumentReferenceStatus> get_Status();
    public void set_Status(Nullable`1<DocumentReferenceStatus> value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public FhirDateTime get_CreatedElement();
    public void set_CreatedElement(FhirDateTime value);
    public string get_Created();
    public void set_Created(string value);
    public List`1<ResourceReference> get_Author();
    public void set_Author(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Recipient();
    public void set_Recipient(List`1<ResourceReference> value);
    public FhirUri get_SourceElement();
    public void set_SourceElement(FhirUri value);
    public string get_Source();
    public void set_Source(string value);
    public FhirString get_DescriptionElement();
    public void set_DescriptionElement(FhirString value);
    public string get_Description();
    public void set_Description(string value);
    public List`1<ResourceReference> get_Content();
    public void set_Content(List`1<ResourceReference> value);
    public List`1<RelatedComponent> get_Related();
    public void set_Related(List`1<RelatedComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DocumentManifest/<get_Children>d__71")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DocumentManifest/<get_NamedChildren>d__73")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DocumentManifest/<GetElementPairs>d__75")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("DocumentReference", "http://hl7.org/fhir/StructureDefinition/DocumentReference")]
public class Hl7.Fhir.Model.DocumentReference : DomainResource {
    private Identifier _MasterIdentifier;
    private List`1<Identifier> _Identifier;
    private Code`1<DocumentReferenceStatus> _StatusElement;
    private Code`1<CompositionStatus> _DocStatusElement;
    private CodeableConcept _Type;
    private List`1<CodeableConcept> _Category;
    private ResourceReference _Subject;
    private Instant _DateElement;
    private List`1<ResourceReference> _Author;
    private ResourceReference _Authenticator;
    private ResourceReference _Custodian;
    private List`1<RelatesToComponent> _RelatesTo;
    private FhirString _DescriptionElement;
    private List`1<CodeableConcept> _SecurityLabel;
    private List`1<ContentComponent> _Content;
    private ContextComponent _Context;
    public string TypeName { get; }
    [FhirElementAttribute("masterIdentifier")]
[DataMemberAttribute]
public Identifier MasterIdentifier { get; public set; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("DocumentReferenceStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<DocumentReferenceStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<DocumentReferenceStatus> Status { get; public set; }
    [FhirElementAttribute("docStatus")]
[DeclaredTypeAttribute]
[BindingAttribute("ReferredDocumentStatus")]
[DataMemberAttribute]
public Code`1<CompositionStatus> DocStatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<CompositionStatus> DocStatus { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("DocumentC80Type")]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("DocumentC80Class")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Category { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public Instant DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<DateTimeOffset> Date { get; public set; }
    [FhirElementAttribute("author")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Author { get; public set; }
    [FhirElementAttribute("authenticator")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Authenticator { get; public set; }
    [FhirElementAttribute("custodian")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Custodian { get; public set; }
    [FhirElementAttribute("relatesTo")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RelatesToComponent> RelatesTo { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public FhirString DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("securityLabel")]
[BindingAttribute("SecurityLabels")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> SecurityLabel { get; public set; }
    [FhirElementAttribute("content")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContentComponent> Content { get; public set; }
    [FhirElementAttribute("context")]
[DataMemberAttribute]
public ContextComponent Context { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Identifier get_MasterIdentifier();
    public void set_MasterIdentifier(Identifier value);
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<DocumentReferenceStatus> get_StatusElement();
    public void set_StatusElement(Code`1<DocumentReferenceStatus> value);
    public Nullable`1<DocumentReferenceStatus> get_Status();
    public void set_Status(Nullable`1<DocumentReferenceStatus> value);
    public Code`1<CompositionStatus> get_DocStatusElement();
    public void set_DocStatusElement(Code`1<CompositionStatus> value);
    public Nullable`1<CompositionStatus> get_DocStatus();
    public void set_DocStatus(Nullable`1<CompositionStatus> value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public List`1<CodeableConcept> get_Category();
    public void set_Category(List`1<CodeableConcept> value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public Instant get_DateElement();
    public void set_DateElement(Instant value);
    public Nullable`1<DateTimeOffset> get_Date();
    public void set_Date(Nullable`1<DateTimeOffset> value);
    public List`1<ResourceReference> get_Author();
    public void set_Author(List`1<ResourceReference> value);
    public ResourceReference get_Authenticator();
    public void set_Authenticator(ResourceReference value);
    public ResourceReference get_Custodian();
    public void set_Custodian(ResourceReference value);
    public List`1<RelatesToComponent> get_RelatesTo();
    public void set_RelatesTo(List`1<RelatesToComponent> value);
    public FhirString get_DescriptionElement();
    public void set_DescriptionElement(FhirString value);
    public string get_Description();
    public void set_Description(string value);
    public List`1<CodeableConcept> get_SecurityLabel();
    public void set_SecurityLabel(List`1<CodeableConcept> value);
    public List`1<ContentComponent> get_Content();
    public void set_Content(List`1<ContentComponent> value);
    public ContextComponent get_Context();
    public void set_Context(ContextComponent value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DocumentReference/<get_Children>d__89")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DocumentReference/<get_NamedChildren>d__91")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DocumentReference/<GetElementPairs>d__93")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("DocumentReferenceStatus", "http://hl7.org/fhir/ValueSet/document-reference-status", "http://hl7.org/fhir/document-reference-status")]
public enum Hl7.Fhir.Model.DocumentReferenceStatus : Enum {
    public int value__;
    [EnumLiteralAttribute("current", "")]
[DescriptionAttribute("Current")]
public static DocumentReferenceStatus Current;
    [EnumLiteralAttribute("superseded", "")]
[DescriptionAttribute("Superseded")]
public static DocumentReferenceStatus Superseded;
    [EnumLiteralAttribute("entered-in-error", "")]
[DescriptionAttribute("Entered in Error")]
public static DocumentReferenceStatus EnteredInError;
}
[FhirEnumerationAttribute("DocumentRelationshipType", "http://hl7.org/fhir/ValueSet/document-relationship-type", "http://hl7.org/fhir/document-relationship-type")]
public enum Hl7.Fhir.Model.DocumentRelationshipType : Enum {
    public int value__;
    [EnumLiteralAttribute("replaces", "")]
[DescriptionAttribute("Replaces")]
public static DocumentRelationshipType Replaces;
    [EnumLiteralAttribute("transforms", "")]
[DescriptionAttribute("Transforms")]
public static DocumentRelationshipType Transforms;
    [EnumLiteralAttribute("signs", "")]
[DescriptionAttribute("Signs")]
public static DocumentRelationshipType Signs;
    [EnumLiteralAttribute("appends", "")]
[DescriptionAttribute("Appends")]
public static DocumentRelationshipType Appends;
}
[DataContractAttribute]
[FhirTypeAttribute("Dosage", "http://hl7.org/fhir/StructureDefinition/Dosage")]
public class Hl7.Fhir.Model.Dosage : BackboneType {
    private Integer _SequenceElement;
    private FhirString _TextElement;
    private List`1<CodeableConcept> _AdditionalInstruction;
    private FhirString _PatientInstructionElement;
    private Timing _Timing;
    private DataType _AsNeeded;
    private CodeableConcept _Site;
    private CodeableConcept _Route;
    private CodeableConcept _Method;
    private List`1<DoseAndRateComponent> _DoseAndRate;
    private Ratio _MaxDosePerPeriod;
    private Quantity _MaxDosePerAdministration;
    private Quantity _MaxDosePerLifetime;
    public string TypeName { get; }
    [FhirElementAttribute("sequence")]
[DataMemberAttribute]
public Integer SequenceElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<int> Sequence { get; public set; }
    [FhirElementAttribute("text")]
[DataMemberAttribute]
public FhirString TextElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Text { get; public set; }
    [FhirElementAttribute("additionalInstruction")]
[BindingAttribute("AdditionalInstruction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> AdditionalInstruction { get; public set; }
    [FhirElementAttribute("patientInstruction")]
[DataMemberAttribute]
public FhirString PatientInstructionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string PatientInstruction { get; public set; }
    [FhirElementAttribute("timing")]
[DataMemberAttribute]
public Timing Timing { get; public set; }
    [FhirElementAttribute]
[BindingAttribute("MedicationAsNeededReason")]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType AsNeeded { get; public set; }
    [FhirElementAttribute("site")]
[BindingAttribute("MedicationAdministrationSite")]
[DataMemberAttribute]
public CodeableConcept Site { get; public set; }
    [FhirElementAttribute("route")]
[BindingAttribute("RouteOfAdministration")]
[DataMemberAttribute]
public CodeableConcept Route { get; public set; }
    [FhirElementAttribute("method")]
[BindingAttribute("MedicationAdministrationMethod")]
[DataMemberAttribute]
public CodeableConcept Method { get; public set; }
    [FhirElementAttribute("doseAndRate")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<DoseAndRateComponent> DoseAndRate { get; public set; }
    [FhirElementAttribute("maxDosePerPeriod")]
[DataMemberAttribute]
public Ratio MaxDosePerPeriod { get; public set; }
    [FhirElementAttribute("maxDosePerAdministration")]
[DataMemberAttribute]
public Quantity MaxDosePerAdministration { get; public set; }
    [FhirElementAttribute("maxDosePerLifetime")]
[DataMemberAttribute]
public Quantity MaxDosePerLifetime { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Integer get_SequenceElement();
    public void set_SequenceElement(Integer value);
    public Nullable`1<int> get_Sequence();
    public void set_Sequence(Nullable`1<int> value);
    public FhirString get_TextElement();
    public void set_TextElement(FhirString value);
    public string get_Text();
    public void set_Text(string value);
    public List`1<CodeableConcept> get_AdditionalInstruction();
    public void set_AdditionalInstruction(List`1<CodeableConcept> value);
    public FhirString get_PatientInstructionElement();
    public void set_PatientInstructionElement(FhirString value);
    public string get_PatientInstruction();
    public void set_PatientInstruction(string value);
    public Timing get_Timing();
    public void set_Timing(Timing value);
    public DataType get_AsNeeded();
    public void set_AsNeeded(DataType value);
    public CodeableConcept get_Site();
    public void set_Site(CodeableConcept value);
    public CodeableConcept get_Route();
    public void set_Route(CodeableConcept value);
    public CodeableConcept get_Method();
    public void set_Method(CodeableConcept value);
    public List`1<DoseAndRateComponent> get_DoseAndRate();
    public void set_DoseAndRate(List`1<DoseAndRateComponent> value);
    public Ratio get_MaxDosePerPeriod();
    public void set_MaxDosePerPeriod(Ratio value);
    public Quantity get_MaxDosePerAdministration();
    public void set_MaxDosePerAdministration(Quantity value);
    public Quantity get_MaxDosePerLifetime();
    public void set_MaxDosePerLifetime(Quantity value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Dosage/<get_Children>d__69")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Dosage/<get_NamedChildren>d__71")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Dosage/<GetElementPairs>d__73")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Duration", "http://hl7.org/fhir/StructureDefinition/Duration")]
public class Hl7.Fhir.Model.Duration : Quantity {
    public string TypeName { get; }
    public virtual string get_TypeName();
    public virtual IDeepCopyable DeepCopy();
}
[DataContractAttribute]
[FhirTypeAttribute("EffectEvidenceSynthesis", "http://hl7.org/fhir/StructureDefinition/EffectEvidenceSynthesis")]
public class Hl7.Fhir.Model.EffectEvidenceSynthesis : DomainResource {
    private FhirUri _UrlElement;
    private List`1<Identifier> _Identifier;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private FhirString _TitleElement;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<Annotation> _Note;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _CopyrightElement;
    private Date _ApprovalDateElement;
    private Date _LastReviewDateElement;
    private Period _EffectivePeriod;
    private List`1<CodeableConcept> _Topic;
    private List`1<ContactDetail> _Author;
    private List`1<ContactDetail> _Editor;
    private List`1<ContactDetail> _Reviewer;
    private List`1<ContactDetail> _Endorser;
    private List`1<RelatedArtifact> _RelatedArtifact;
    private CodeableConcept _SynthesisType;
    private CodeableConcept _StudyType;
    private ResourceReference _Population;
    private ResourceReference _Exposure;
    private ResourceReference _ExposureAlternative;
    private ResourceReference _Outcome;
    private SampleSizeComponent _SampleSize;
    private List`1<ResultsByExposureComponent> _ResultsByExposure;
    private List`1<EffectEstimateComponent> _EffectEstimate;
    private List`1<CertaintyComponent> _Certainty;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("copyright")]
[DataMemberAttribute]
public Markdown CopyrightElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Copyright { get; public set; }
    [FhirElementAttribute("approvalDate")]
[DataMemberAttribute]
public Date ApprovalDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ApprovalDate { get; public set; }
    [FhirElementAttribute("lastReviewDate")]
[DataMemberAttribute]
public Date LastReviewDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string LastReviewDate { get; public set; }
    [FhirElementAttribute("effectivePeriod")]
[DataMemberAttribute]
public Period EffectivePeriod { get; public set; }
    [FhirElementAttribute("topic")]
[BindingAttribute("DefinitionTopic")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Topic { get; public set; }
    [FhirElementAttribute("author")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Author { get; public set; }
    [FhirElementAttribute("editor")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Editor { get; public set; }
    [FhirElementAttribute("reviewer")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Reviewer { get; public set; }
    [FhirElementAttribute("endorser")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Endorser { get; public set; }
    [FhirElementAttribute("relatedArtifact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RelatedArtifact> RelatedArtifact { get; public set; }
    [FhirElementAttribute("synthesisType")]
[BindingAttribute("SynthesisType")]
[DataMemberAttribute]
public CodeableConcept SynthesisType { get; public set; }
    [FhirElementAttribute("studyType")]
[BindingAttribute("StudyType")]
[DataMemberAttribute]
public CodeableConcept StudyType { get; public set; }
    [FhirElementAttribute("population")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Population { get; public set; }
    [FhirElementAttribute("exposure")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Exposure { get; public set; }
    [FhirElementAttribute("exposureAlternative")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference ExposureAlternative { get; public set; }
    [FhirElementAttribute("outcome")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Outcome { get; public set; }
    [FhirElementAttribute("sampleSize")]
[DataMemberAttribute]
public SampleSizeComponent SampleSize { get; public set; }
    [FhirElementAttribute("resultsByExposure")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResultsByExposureComponent> ResultsByExposure { get; public set; }
    [FhirElementAttribute("effectEstimate")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<EffectEstimateComponent> EffectEstimate { get; public set; }
    [FhirElementAttribute("certainty")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CertaintyComponent> Certainty { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public FhirUri get_UrlElement();
    public void set_UrlElement(FhirUri value);
    public string get_Url();
    public void set_Url(string value);
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirString get_VersionElement();
    public void set_VersionElement(FhirString value);
    public string get_Version();
    public void set_Version(string value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public Code`1<PublicationStatus> get_StatusElement();
    public void set_StatusElement(Code`1<PublicationStatus> value);
    public Nullable`1<PublicationStatus> get_Status();
    public void set_Status(Nullable`1<PublicationStatus> value);
    public FhirDateTime get_DateElement();
    public void set_DateElement(FhirDateTime value);
    public string get_Date();
    public void set_Date(string value);
    public FhirString get_PublisherElement();
    public void set_PublisherElement(FhirString value);
    public string get_Publisher();
    public void set_Publisher(string value);
    public List`1<ContactDetail> get_Contact();
    public void set_Contact(List`1<ContactDetail> value);
    public Markdown get_DescriptionElement();
    public void set_DescriptionElement(Markdown value);
    public string get_Description();
    public void set_Description(string value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public List`1<UsageContext> get_UseContext();
    public void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public Markdown get_CopyrightElement();
    public void set_CopyrightElement(Markdown value);
    public string get_Copyright();
    public void set_Copyright(string value);
    public Date get_ApprovalDateElement();
    public void set_ApprovalDateElement(Date value);
    public string get_ApprovalDate();
    public void set_ApprovalDate(string value);
    public Date get_LastReviewDateElement();
    public void set_LastReviewDateElement(Date value);
    public string get_LastReviewDate();
    public void set_LastReviewDate(string value);
    public Period get_EffectivePeriod();
    public void set_EffectivePeriod(Period value);
    public List`1<CodeableConcept> get_Topic();
    public void set_Topic(List`1<CodeableConcept> value);
    public List`1<ContactDetail> get_Author();
    public void set_Author(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Editor();
    public void set_Editor(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Reviewer();
    public void set_Reviewer(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Endorser();
    public void set_Endorser(List`1<ContactDetail> value);
    public List`1<RelatedArtifact> get_RelatedArtifact();
    public void set_RelatedArtifact(List`1<RelatedArtifact> value);
    public CodeableConcept get_SynthesisType();
    public void set_SynthesisType(CodeableConcept value);
    public CodeableConcept get_StudyType();
    public void set_StudyType(CodeableConcept value);
    public ResourceReference get_Population();
    public void set_Population(ResourceReference value);
    public ResourceReference get_Exposure();
    public void set_Exposure(ResourceReference value);
    public ResourceReference get_ExposureAlternative();
    public void set_ExposureAlternative(ResourceReference value);
    public ResourceReference get_Outcome();
    public void set_Outcome(ResourceReference value);
    public SampleSizeComponent get_SampleSize();
    public void set_SampleSize(SampleSizeComponent value);
    public List`1<ResultsByExposureComponent> get_ResultsByExposure();
    public void set_ResultsByExposure(List`1<ResultsByExposureComponent> value);
    public List`1<EffectEstimateComponent> get_EffectEstimate();
    public void set_EffectEstimate(List`1<EffectEstimateComponent> value);
    public List`1<CertaintyComponent> get_Certainty();
    public void set_Certainty(List`1<CertaintyComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.EffectEvidenceSynthesis/<get_Children>d__182")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.EffectEvidenceSynthesis/<get_NamedChildren>d__184")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.EffectEvidenceSynthesis/<GetElementPairs>d__186")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Hl7.Fhir.Model.ElementDefinitionExtensions : object {
    [ExtensionAttribute]
public static ElementDefinition OfType(ElementDefinition ed, FHIRAllTypes type, IEnumerable`1<string> profiles);
    [ExtensionAttribute]
public static ElementDefinition OfType(ElementDefinition ed, FHIRAllTypes type, string profile);
    [ExtensionAttribute]
public static ElementDefinition OrType(ElementDefinition ed, FHIRAllTypes type, string profile);
    [ExtensionAttribute]
public static ElementDefinition OrType(ElementDefinition ed, FHIRAllTypes type, IEnumerable`1<string> profiles);
}
[DataContractAttribute]
[FhirTypeAttribute("Encounter", "http://hl7.org/fhir/StructureDefinition/Encounter")]
public class Hl7.Fhir.Model.Encounter : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<EncounterStatus> _StatusElement;
    private List`1<StatusHistoryComponent> _StatusHistory;
    private Coding _Class;
    private List`1<ClassHistoryComponent> _ClassHistory;
    private List`1<CodeableConcept> _Type;
    private CodeableConcept _ServiceType;
    private CodeableConcept _Priority;
    private ResourceReference _Subject;
    private List`1<ResourceReference> _EpisodeOfCare;
    private List`1<ResourceReference> _BasedOn;
    private List`1<ParticipantComponent> _Participant;
    private List`1<ResourceReference> _Appointment;
    private Period _Period;
    private Duration _Length;
    private List`1<CodeableConcept> _ReasonCode;
    private List`1<ResourceReference> _ReasonReference;
    private List`1<DiagnosisComponent> _Diagnosis;
    private List`1<ResourceReference> _Account;
    private HospitalizationComponent _Hospitalization;
    private List`1<LocationComponent> _Location;
    private ResourceReference _ServiceProvider;
    private ResourceReference _PartOf;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("EncounterStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<EncounterStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<EncounterStatus> Status { get; public set; }
    [FhirElementAttribute("statusHistory")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<StatusHistoryComponent> StatusHistory { get; public set; }
    [FhirElementAttribute("class")]
[BindingAttribute("EncounterClass")]
[CardinalityAttribute]
[DataMemberAttribute]
public Coding Class { get; public set; }
    [FhirElementAttribute("classHistory")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ClassHistoryComponent> ClassHistory { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("EncounterType")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Type { get; public set; }
    [FhirElementAttribute("serviceType")]
[BindingAttribute("EncounterServiceType")]
[DataMemberAttribute]
public CodeableConcept ServiceType { get; public set; }
    [FhirElementAttribute("priority")]
[BindingAttribute("Priority")]
[DataMemberAttribute]
public CodeableConcept Priority { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("episodeOfCare")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> EpisodeOfCare { get; public set; }
    [FhirElementAttribute("basedOn")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> BasedOn { get; public set; }
    [FhirElementAttribute("participant")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ParticipantComponent> Participant { get; public set; }
    [FhirElementAttribute("appointment")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Appointment { get; public set; }
    [FhirElementAttribute("period")]
[DataMemberAttribute]
public Period Period { get; public set; }
    [FhirElementAttribute("length")]
[DataMemberAttribute]
public Duration Length { get; public set; }
    [FhirElementAttribute("reasonCode")]
[BindingAttribute("EncounterReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ReasonCode { get; public set; }
    [FhirElementAttribute("reasonReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ReasonReference { get; public set; }
    [FhirElementAttribute("diagnosis")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<DiagnosisComponent> Diagnosis { get; public set; }
    [FhirElementAttribute("account")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Account { get; public set; }
    [FhirElementAttribute("hospitalization")]
[DataMemberAttribute]
public HospitalizationComponent Hospitalization { get; public set; }
    [FhirElementAttribute("location")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<LocationComponent> Location { get; public set; }
    [FhirElementAttribute("serviceProvider")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference ServiceProvider { get; public set; }
    [FhirElementAttribute("partOf")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference PartOf { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<EncounterStatus> get_StatusElement();
    public void set_StatusElement(Code`1<EncounterStatus> value);
    public Nullable`1<EncounterStatus> get_Status();
    public void set_Status(Nullable`1<EncounterStatus> value);
    public List`1<StatusHistoryComponent> get_StatusHistory();
    public void set_StatusHistory(List`1<StatusHistoryComponent> value);
    public Coding get_Class();
    public void set_Class(Coding value);
    public List`1<ClassHistoryComponent> get_ClassHistory();
    public void set_ClassHistory(List`1<ClassHistoryComponent> value);
    public List`1<CodeableConcept> get_Type();
    public void set_Type(List`1<CodeableConcept> value);
    public CodeableConcept get_ServiceType();
    public void set_ServiceType(CodeableConcept value);
    public CodeableConcept get_Priority();
    public void set_Priority(CodeableConcept value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public List`1<ResourceReference> get_EpisodeOfCare();
    public void set_EpisodeOfCare(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_BasedOn();
    public void set_BasedOn(List`1<ResourceReference> value);
    public List`1<ParticipantComponent> get_Participant();
    public void set_Participant(List`1<ParticipantComponent> value);
    public List`1<ResourceReference> get_Appointment();
    public void set_Appointment(List`1<ResourceReference> value);
    public Period get_Period();
    public void set_Period(Period value);
    public Duration get_Length();
    public void set_Length(Duration value);
    public List`1<CodeableConcept> get_ReasonCode();
    public void set_ReasonCode(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_ReasonReference();
    public void set_ReasonReference(List`1<ResourceReference> value);
    public List`1<DiagnosisComponent> get_Diagnosis();
    public void set_Diagnosis(List`1<DiagnosisComponent> value);
    public List`1<ResourceReference> get_Account();
    public void set_Account(List`1<ResourceReference> value);
    public HospitalizationComponent get_Hospitalization();
    public void set_Hospitalization(HospitalizationComponent value);
    public List`1<LocationComponent> get_Location();
    public void set_Location(List`1<LocationComponent> value);
    public ResourceReference get_ServiceProvider();
    public void set_ServiceProvider(ResourceReference value);
    public ResourceReference get_PartOf();
    public void set_PartOf(ResourceReference value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.set_Code(List`1<CodeableConcept> value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Encounter/<get_Children>d__117")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Encounter/<get_NamedChildren>d__119")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Encounter/<GetElementPairs>d__121")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Endpoint", "http://hl7.org/fhir/StructureDefinition/Endpoint")]
public class Hl7.Fhir.Model.Endpoint : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<EndpointStatus> _StatusElement;
    private Coding _ConnectionType;
    private FhirString _NameElement;
    private ResourceReference _ManagingOrganization;
    private List`1<ContactPoint> _Contact;
    private Period _Period;
    private List`1<CodeableConcept> _PayloadType;
    private List`1<Code> _PayloadMimeTypeElement;
    private FhirUrl _AddressElement;
    private List`1<FhirString> _HeaderElement;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("EndpointStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<EndpointStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<EndpointStatus> Status { get; public set; }
    [FhirElementAttribute("connectionType")]
[BindingAttribute("endpoint-contype")]
[CardinalityAttribute]
[DataMemberAttribute]
public Coding ConnectionType { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("managingOrganization")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference ManagingOrganization { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactPoint> Contact { get; public set; }
    [FhirElementAttribute("period")]
[DataMemberAttribute]
public Period Period { get; public set; }
    [FhirElementAttribute("payloadType")]
[BindingAttribute("PayloadType")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> PayloadType { get; public set; }
    [FhirElementAttribute("payloadMimeType")]
[BindingAttribute("MimeType")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Code> PayloadMimeTypeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> PayloadMimeType { get; public set; }
    [FhirElementAttribute("address")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirUrl AddressElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Address { get; public set; }
    [FhirElementAttribute("header")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> HeaderElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Header { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<EndpointStatus> get_StatusElement();
    public void set_StatusElement(Code`1<EndpointStatus> value);
    public Nullable`1<EndpointStatus> get_Status();
    public void set_Status(Nullable`1<EndpointStatus> value);
    public Coding get_ConnectionType();
    public void set_ConnectionType(Coding value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public ResourceReference get_ManagingOrganization();
    public void set_ManagingOrganization(ResourceReference value);
    public List`1<ContactPoint> get_Contact();
    public void set_Contact(List`1<ContactPoint> value);
    public Period get_Period();
    public void set_Period(Period value);
    public List`1<CodeableConcept> get_PayloadType();
    public void set_PayloadType(List`1<CodeableConcept> value);
    public List`1<Code> get_PayloadMimeTypeElement();
    public void set_PayloadMimeTypeElement(List`1<Code> value);
    public IEnumerable`1<string> get_PayloadMimeType();
    public void set_PayloadMimeType(IEnumerable`1<string> value);
    public FhirUrl get_AddressElement();
    public void set_AddressElement(FhirUrl value);
    public string get_Address();
    public void set_Address(string value);
    public List`1<FhirString> get_HeaderElement();
    public void set_HeaderElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_Header();
    public void set_Header(IEnumerable`1<string> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Endpoint/<get_Children>d__70")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Endpoint/<get_NamedChildren>d__72")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Endpoint/<GetElementPairs>d__74")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("EnrollmentRequest", "http://hl7.org/fhir/StructureDefinition/EnrollmentRequest")]
public class Hl7.Fhir.Model.EnrollmentRequest : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<FinancialResourceStatusCodes> _StatusElement;
    private FhirDateTime _CreatedElement;
    private ResourceReference _Insurer;
    private ResourceReference _Provider;
    private ResourceReference _Candidate;
    private ResourceReference _Coverage;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("EnrollmentRequestStatus")]
[DataMemberAttribute]
public Code`1<FinancialResourceStatusCodes> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<FinancialResourceStatusCodes> Status { get; public set; }
    [FhirElementAttribute("created")]
[DataMemberAttribute]
public FhirDateTime CreatedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Created { get; public set; }
    [FhirElementAttribute("insurer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Insurer { get; public set; }
    [FhirElementAttribute("provider")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Provider { get; public set; }
    [FhirElementAttribute("candidate")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Candidate { get; public set; }
    [FhirElementAttribute("coverage")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Coverage { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<FinancialResourceStatusCodes> get_StatusElement();
    public void set_StatusElement(Code`1<FinancialResourceStatusCodes> value);
    public Nullable`1<FinancialResourceStatusCodes> get_Status();
    public void set_Status(Nullable`1<FinancialResourceStatusCodes> value);
    public FhirDateTime get_CreatedElement();
    public void set_CreatedElement(FhirDateTime value);
    public string get_Created();
    public void set_Created(string value);
    public ResourceReference get_Insurer();
    public void set_Insurer(ResourceReference value);
    public ResourceReference get_Provider();
    public void set_Provider(ResourceReference value);
    public ResourceReference get_Candidate();
    public void set_Candidate(ResourceReference value);
    public ResourceReference get_Coverage();
    public void set_Coverage(ResourceReference value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.EnrollmentRequest/<get_Children>d__44")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.EnrollmentRequest/<get_NamedChildren>d__46")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.EnrollmentRequest/<GetElementPairs>d__48")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("EnrollmentResponse", "http://hl7.org/fhir/StructureDefinition/EnrollmentResponse")]
public class Hl7.Fhir.Model.EnrollmentResponse : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<FinancialResourceStatusCodes> _StatusElement;
    private ResourceReference _Request;
    private Code`1<ClaimProcessingCodes> _OutcomeElement;
    private FhirString _DispositionElement;
    private FhirDateTime _CreatedElement;
    private ResourceReference _Organization;
    private ResourceReference _RequestProvider;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("EnrollmentResponseStatus")]
[DataMemberAttribute]
public Code`1<FinancialResourceStatusCodes> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<FinancialResourceStatusCodes> Status { get; public set; }
    [FhirElementAttribute("request")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Request { get; public set; }
    [FhirElementAttribute("outcome")]
[DeclaredTypeAttribute]
[BindingAttribute("RemittanceOutcome")]
[DataMemberAttribute]
public Code`1<ClaimProcessingCodes> OutcomeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ClaimProcessingCodes> Outcome { get; public set; }
    [FhirElementAttribute("disposition")]
[DataMemberAttribute]
public FhirString DispositionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Disposition { get; public set; }
    [FhirElementAttribute("created")]
[DataMemberAttribute]
public FhirDateTime CreatedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Created { get; public set; }
    [FhirElementAttribute("organization")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Organization { get; public set; }
    [FhirElementAttribute("requestProvider")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference RequestProvider { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<FinancialResourceStatusCodes> get_StatusElement();
    public void set_StatusElement(Code`1<FinancialResourceStatusCodes> value);
    public Nullable`1<FinancialResourceStatusCodes> get_Status();
    public void set_Status(Nullable`1<FinancialResourceStatusCodes> value);
    public ResourceReference get_Request();
    public void set_Request(ResourceReference value);
    public Code`1<ClaimProcessingCodes> get_OutcomeElement();
    public void set_OutcomeElement(Code`1<ClaimProcessingCodes> value);
    public Nullable`1<ClaimProcessingCodes> get_Outcome();
    public void set_Outcome(Nullable`1<ClaimProcessingCodes> value);
    public FhirString get_DispositionElement();
    public void set_DispositionElement(FhirString value);
    public string get_Disposition();
    public void set_Disposition(string value);
    public FhirDateTime get_CreatedElement();
    public void set_CreatedElement(FhirDateTime value);
    public string get_Created();
    public void set_Created(string value);
    public ResourceReference get_Organization();
    public void set_Organization(ResourceReference value);
    public ResourceReference get_RequestProvider();
    public void set_RequestProvider(ResourceReference value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.EnrollmentResponse/<get_Children>d__54")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.EnrollmentResponse/<get_NamedChildren>d__56")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.EnrollmentResponse/<GetElementPairs>d__58")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[ObsoleteAttribute("This resource was removed in R4", "True")]
public class Hl7.Fhir.Model.EntryDefinition : object {
}
[DataContractAttribute]
[FhirTypeAttribute("EpisodeOfCare", "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare")]
public class Hl7.Fhir.Model.EpisodeOfCare : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<EpisodeOfCareStatus> _StatusElement;
    private List`1<StatusHistoryComponent> _StatusHistory;
    private List`1<CodeableConcept> _Type;
    private List`1<DiagnosisComponent> _Diagnosis;
    private ResourceReference _Patient;
    private ResourceReference _ManagingOrganization;
    private Period _Period;
    private List`1<ResourceReference> _ReferralRequest;
    private ResourceReference _CareManager;
    private List`1<ResourceReference> _Team;
    private List`1<ResourceReference> _Account;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("EpisodeOfCareStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<EpisodeOfCareStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<EpisodeOfCareStatus> Status { get; public set; }
    [FhirElementAttribute("statusHistory")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<StatusHistoryComponent> StatusHistory { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("EpisodeOfCareType")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Type { get; public set; }
    [FhirElementAttribute("diagnosis")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<DiagnosisComponent> Diagnosis { get; public set; }
    [FhirElementAttribute("patient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Patient { get; public set; }
    [FhirElementAttribute("managingOrganization")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference ManagingOrganization { get; public set; }
    [FhirElementAttribute("period")]
[DataMemberAttribute]
public Period Period { get; public set; }
    [FhirElementAttribute("referralRequest")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ReferralRequest { get; public set; }
    [FhirElementAttribute("careManager")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference CareManager { get; public set; }
    [FhirElementAttribute("team")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Team { get; public set; }
    [FhirElementAttribute("account")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Account { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<EpisodeOfCareStatus> get_StatusElement();
    public void set_StatusElement(Code`1<EpisodeOfCareStatus> value);
    public Nullable`1<EpisodeOfCareStatus> get_Status();
    public void set_Status(Nullable`1<EpisodeOfCareStatus> value);
    public List`1<StatusHistoryComponent> get_StatusHistory();
    public void set_StatusHistory(List`1<StatusHistoryComponent> value);
    public List`1<CodeableConcept> get_Type();
    public void set_Type(List`1<CodeableConcept> value);
    public List`1<DiagnosisComponent> get_Diagnosis();
    public void set_Diagnosis(List`1<DiagnosisComponent> value);
    public ResourceReference get_Patient();
    public void set_Patient(ResourceReference value);
    public ResourceReference get_ManagingOrganization();
    public void set_ManagingOrganization(ResourceReference value);
    public Period get_Period();
    public void set_Period(Period value);
    public List`1<ResourceReference> get_ReferralRequest();
    public void set_ReferralRequest(List`1<ResourceReference> value);
    public ResourceReference get_CareManager();
    public void set_CareManager(ResourceReference value);
    public List`1<ResourceReference> get_Team();
    public void set_Team(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Account();
    public void set_Account(List`1<ResourceReference> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.set_Code(List`1<CodeableConcept> value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.EpisodeOfCare/<get_Children>d__68")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.EpisodeOfCare/<get_NamedChildren>d__70")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.EpisodeOfCare/<GetElementPairs>d__72")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("EventDefinition", "http://hl7.org/fhir/StructureDefinition/EventDefinition")]
public class Hl7.Fhir.Model.EventDefinition : DomainResource {
    private FhirUri _UrlElement;
    private List`1<Identifier> _Identifier;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private FhirString _TitleElement;
    private FhirString _SubtitleElement;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirBoolean _ExperimentalElement;
    private DataType _Subject;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _PurposeElement;
    private FhirString _UsageElement;
    private Markdown _CopyrightElement;
    private Date _ApprovalDateElement;
    private Date _LastReviewDateElement;
    private Period _EffectivePeriod;
    private List`1<CodeableConcept> _Topic;
    private List`1<ContactDetail> _Author;
    private List`1<ContactDetail> _Editor;
    private List`1<ContactDetail> _Reviewer;
    private List`1<ContactDetail> _Endorser;
    private List`1<RelatedArtifact> _RelatedArtifact;
    private List`1<TriggerDefinition> _Trigger;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("subtitle")]
[DataMemberAttribute]
public FhirString SubtitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Subtitle { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("experimental")]
[DataMemberAttribute]
public FhirBoolean ExperimentalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Experimental { get; public set; }
    [FhirElementAttribute]
[BindingAttribute("SubjectType")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Subject { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("purpose")]
[DataMemberAttribute]
public Markdown PurposeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Purpose { get; public set; }
    [FhirElementAttribute("usage")]
[DataMemberAttribute]
public FhirString UsageElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Usage { get; public set; }
    [FhirElementAttribute("copyright")]
[DataMemberAttribute]
public Markdown CopyrightElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Copyright { get; public set; }
    [FhirElementAttribute("approvalDate")]
[DataMemberAttribute]
public Date ApprovalDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ApprovalDate { get; public set; }
    [FhirElementAttribute("lastReviewDate")]
[DataMemberAttribute]
public Date LastReviewDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string LastReviewDate { get; public set; }
    [FhirElementAttribute("effectivePeriod")]
[DataMemberAttribute]
public Period EffectivePeriod { get; public set; }
    [FhirElementAttribute("topic")]
[BindingAttribute("DefinitionTopic")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Topic { get; public set; }
    [FhirElementAttribute("author")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Author { get; public set; }
    [FhirElementAttribute("editor")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Editor { get; public set; }
    [FhirElementAttribute("reviewer")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Reviewer { get; public set; }
    [FhirElementAttribute("endorser")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Endorser { get; public set; }
    [FhirElementAttribute("relatedArtifact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RelatedArtifact> RelatedArtifact { get; public set; }
    [FhirElementAttribute("trigger")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<TriggerDefinition> Trigger { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public FhirUri get_UrlElement();
    public void set_UrlElement(FhirUri value);
    public string get_Url();
    public void set_Url(string value);
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirString get_VersionElement();
    public void set_VersionElement(FhirString value);
    public string get_Version();
    public void set_Version(string value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public FhirString get_SubtitleElement();
    public void set_SubtitleElement(FhirString value);
    public string get_Subtitle();
    public void set_Subtitle(string value);
    public Code`1<PublicationStatus> get_StatusElement();
    public void set_StatusElement(Code`1<PublicationStatus> value);
    public Nullable`1<PublicationStatus> get_Status();
    public void set_Status(Nullable`1<PublicationStatus> value);
    public FhirBoolean get_ExperimentalElement();
    public void set_ExperimentalElement(FhirBoolean value);
    public Nullable`1<bool> get_Experimental();
    public void set_Experimental(Nullable`1<bool> value);
    public DataType get_Subject();
    public void set_Subject(DataType value);
    public FhirDateTime get_DateElement();
    public void set_DateElement(FhirDateTime value);
    public string get_Date();
    public void set_Date(string value);
    public FhirString get_PublisherElement();
    public void set_PublisherElement(FhirString value);
    public string get_Publisher();
    public void set_Publisher(string value);
    public List`1<ContactDetail> get_Contact();
    public void set_Contact(List`1<ContactDetail> value);
    public Markdown get_DescriptionElement();
    public void set_DescriptionElement(Markdown value);
    public string get_Description();
    public void set_Description(string value);
    public List`1<UsageContext> get_UseContext();
    public void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public Markdown get_PurposeElement();
    public void set_PurposeElement(Markdown value);
    public string get_Purpose();
    public void set_Purpose(string value);
    public FhirString get_UsageElement();
    public void set_UsageElement(FhirString value);
    public string get_Usage();
    public void set_Usage(string value);
    public Markdown get_CopyrightElement();
    public void set_CopyrightElement(Markdown value);
    public string get_Copyright();
    public void set_Copyright(string value);
    public Date get_ApprovalDateElement();
    public void set_ApprovalDateElement(Date value);
    public string get_ApprovalDate();
    public void set_ApprovalDate(string value);
    public Date get_LastReviewDateElement();
    public void set_LastReviewDateElement(Date value);
    public string get_LastReviewDate();
    public void set_LastReviewDate(string value);
    public Period get_EffectivePeriod();
    public void set_EffectivePeriod(Period value);
    public List`1<CodeableConcept> get_Topic();
    public void set_Topic(List`1<CodeableConcept> value);
    public List`1<ContactDetail> get_Author();
    public void set_Author(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Editor();
    public void set_Editor(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Reviewer();
    public void set_Reviewer(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Endorser();
    public void set_Endorser(List`1<ContactDetail> value);
    public List`1<RelatedArtifact> get_RelatedArtifact();
    public void set_RelatedArtifact(List`1<RelatedArtifact> value);
    public List`1<TriggerDefinition> get_Trigger();
    public void set_Trigger(List`1<TriggerDefinition> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.EventDefinition/<get_Children>d__167")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.EventDefinition/<get_NamedChildren>d__169")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.EventDefinition/<GetElementPairs>d__171")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("EventStatus", "http://hl7.org/fhir/ValueSet/event-status", "http://hl7.org/fhir/event-status")]
public enum Hl7.Fhir.Model.EventStatus : Enum {
    public int value__;
    [EnumLiteralAttribute("preparation", "")]
[DescriptionAttribute("Preparation")]
public static EventStatus Preparation;
    [EnumLiteralAttribute("in-progress", "")]
[DescriptionAttribute("In Progress")]
public static EventStatus InProgress;
    [EnumLiteralAttribute("not-done", "")]
[DescriptionAttribute("Not Done")]
public static EventStatus NotDone;
    [EnumLiteralAttribute("on-hold", "")]
[DescriptionAttribute("On Hold")]
public static EventStatus OnHold;
    [EnumLiteralAttribute("stopped", "")]
[DescriptionAttribute("Stopped")]
public static EventStatus Stopped;
    [EnumLiteralAttribute("completed", "")]
[DescriptionAttribute("Completed")]
public static EventStatus Completed;
    [EnumLiteralAttribute("entered-in-error", "")]
[DescriptionAttribute("Entered in Error")]
public static EventStatus EnteredInError;
    [EnumLiteralAttribute("unknown", "")]
[DescriptionAttribute("Unknown")]
public static EventStatus Unknown;
}
[DataContractAttribute]
[FhirTypeAttribute("Evidence", "http://hl7.org/fhir/StructureDefinition/Evidence")]
public class Hl7.Fhir.Model.Evidence : DomainResource {
    private FhirUri _UrlElement;
    private List`1<Identifier> _Identifier;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private FhirString _TitleElement;
    private FhirString _ShortTitleElement;
    private FhirString _SubtitleElement;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<Annotation> _Note;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _CopyrightElement;
    private Date _ApprovalDateElement;
    private Date _LastReviewDateElement;
    private Period _EffectivePeriod;
    private List`1<CodeableConcept> _Topic;
    private List`1<ContactDetail> _Author;
    private List`1<ContactDetail> _Editor;
    private List`1<ContactDetail> _Reviewer;
    private List`1<ContactDetail> _Endorser;
    private List`1<RelatedArtifact> _RelatedArtifact;
    private ResourceReference _ExposureBackground;
    private List`1<ResourceReference> _ExposureVariant;
    private List`1<ResourceReference> _Outcome;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("shortTitle")]
[DataMemberAttribute]
public FhirString ShortTitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ShortTitle { get; public set; }
    [FhirElementAttribute("subtitle")]
[DataMemberAttribute]
public FhirString SubtitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Subtitle { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("copyright")]
[DataMemberAttribute]
public Markdown CopyrightElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Copyright { get; public set; }
    [FhirElementAttribute("approvalDate")]
[DataMemberAttribute]
public Date ApprovalDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ApprovalDate { get; public set; }
    [FhirElementAttribute("lastReviewDate")]
[DataMemberAttribute]
public Date LastReviewDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string LastReviewDate { get; public set; }
    [FhirElementAttribute("effectivePeriod")]
[DataMemberAttribute]
public Period EffectivePeriod { get; public set; }
    [FhirElementAttribute("topic")]
[BindingAttribute("DefinitionTopic")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Topic { get; public set; }
    [FhirElementAttribute("author")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Author { get; public set; }
    [FhirElementAttribute("editor")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Editor { get; public set; }
    [FhirElementAttribute("reviewer")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Reviewer { get; public set; }
    [FhirElementAttribute("endorser")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Endorser { get; public set; }
    [FhirElementAttribute("relatedArtifact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RelatedArtifact> RelatedArtifact { get; public set; }
    [FhirElementAttribute("exposureBackground")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference ExposureBackground { get; public set; }
    [FhirElementAttribute("exposureVariant")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ExposureVariant { get; public set; }
    [FhirElementAttribute("outcome")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Outcome { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public FhirUri get_UrlElement();
    public void set_UrlElement(FhirUri value);
    public string get_Url();
    public void set_Url(string value);
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirString get_VersionElement();
    public void set_VersionElement(FhirString value);
    public string get_Version();
    public void set_Version(string value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public FhirString get_ShortTitleElement();
    public void set_ShortTitleElement(FhirString value);
    public string get_ShortTitle();
    public void set_ShortTitle(string value);
    public FhirString get_SubtitleElement();
    public void set_SubtitleElement(FhirString value);
    public string get_Subtitle();
    public void set_Subtitle(string value);
    public Code`1<PublicationStatus> get_StatusElement();
    public void set_StatusElement(Code`1<PublicationStatus> value);
    public Nullable`1<PublicationStatus> get_Status();
    public void set_Status(Nullable`1<PublicationStatus> value);
    public FhirDateTime get_DateElement();
    public void set_DateElement(FhirDateTime value);
    public string get_Date();
    public void set_Date(string value);
    public FhirString get_PublisherElement();
    public void set_PublisherElement(FhirString value);
    public string get_Publisher();
    public void set_Publisher(string value);
    public List`1<ContactDetail> get_Contact();
    public void set_Contact(List`1<ContactDetail> value);
    public Markdown get_DescriptionElement();
    public void set_DescriptionElement(Markdown value);
    public string get_Description();
    public void set_Description(string value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public List`1<UsageContext> get_UseContext();
    public void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public Markdown get_CopyrightElement();
    public void set_CopyrightElement(Markdown value);
    public string get_Copyright();
    public void set_Copyright(string value);
    public Date get_ApprovalDateElement();
    public void set_ApprovalDateElement(Date value);
    public string get_ApprovalDate();
    public void set_ApprovalDate(string value);
    public Date get_LastReviewDateElement();
    public void set_LastReviewDateElement(Date value);
    public string get_LastReviewDate();
    public void set_LastReviewDate(string value);
    public Period get_EffectivePeriod();
    public void set_EffectivePeriod(Period value);
    public List`1<CodeableConcept> get_Topic();
    public void set_Topic(List`1<CodeableConcept> value);
    public List`1<ContactDetail> get_Author();
    public void set_Author(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Editor();
    public void set_Editor(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Reviewer();
    public void set_Reviewer(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Endorser();
    public void set_Endorser(List`1<ContactDetail> value);
    public List`1<RelatedArtifact> get_RelatedArtifact();
    public void set_RelatedArtifact(List`1<RelatedArtifact> value);
    public ResourceReference get_ExposureBackground();
    public void set_ExposureBackground(ResourceReference value);
    public List`1<ResourceReference> get_ExposureVariant();
    public void set_ExposureVariant(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Outcome();
    public void set_Outcome(List`1<ResourceReference> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Evidence/<get_Children>d__161")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Evidence/<get_NamedChildren>d__163")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Evidence/<GetElementPairs>d__165")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("EvidenceVariable", "http://hl7.org/fhir/StructureDefinition/EvidenceVariable")]
public class Hl7.Fhir.Model.EvidenceVariable : DomainResource {
    private FhirUri _UrlElement;
    private List`1<Identifier> _Identifier;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private FhirString _TitleElement;
    private FhirString _ShortTitleElement;
    private FhirString _SubtitleElement;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<Annotation> _Note;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _CopyrightElement;
    private Date _ApprovalDateElement;
    private Date _LastReviewDateElement;
    private Period _EffectivePeriod;
    private List`1<CodeableConcept> _Topic;
    private List`1<ContactDetail> _Author;
    private List`1<ContactDetail> _Editor;
    private List`1<ContactDetail> _Reviewer;
    private List`1<ContactDetail> _Endorser;
    private List`1<RelatedArtifact> _RelatedArtifact;
    private Code`1<VariableTypeCode> _TypeElement;
    private List`1<CharacteristicComponent> _Characteristic;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("shortTitle")]
[DataMemberAttribute]
public FhirString ShortTitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ShortTitle { get; public set; }
    [FhirElementAttribute("subtitle")]
[DataMemberAttribute]
public FhirString SubtitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Subtitle { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("copyright")]
[DataMemberAttribute]
public Markdown CopyrightElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Copyright { get; public set; }
    [FhirElementAttribute("approvalDate")]
[DataMemberAttribute]
public Date ApprovalDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ApprovalDate { get; public set; }
    [FhirElementAttribute("lastReviewDate")]
[DataMemberAttribute]
public Date LastReviewDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string LastReviewDate { get; public set; }
    [FhirElementAttribute("effectivePeriod")]
[DataMemberAttribute]
public Period EffectivePeriod { get; public set; }
    [FhirElementAttribute("topic")]
[BindingAttribute("DefinitionTopic")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Topic { get; public set; }
    [FhirElementAttribute("author")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Author { get; public set; }
    [FhirElementAttribute("editor")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Editor { get; public set; }
    [FhirElementAttribute("reviewer")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Reviewer { get; public set; }
    [FhirElementAttribute("endorser")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Endorser { get; public set; }
    [FhirElementAttribute("relatedArtifact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RelatedArtifact> RelatedArtifact { get; public set; }
    [FhirElementAttribute("type")]
[DeclaredTypeAttribute]
[BindingAttribute("EvidenceVariableType")]
[DataMemberAttribute]
public Code`1<VariableTypeCode> TypeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<VariableTypeCode> Type { get; public set; }
    [FhirElementAttribute("characteristic")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CharacteristicComponent> Characteristic { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public FhirUri get_UrlElement();
    public void set_UrlElement(FhirUri value);
    public string get_Url();
    public void set_Url(string value);
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirString get_VersionElement();
    public void set_VersionElement(FhirString value);
    public string get_Version();
    public void set_Version(string value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public FhirString get_ShortTitleElement();
    public void set_ShortTitleElement(FhirString value);
    public string get_ShortTitle();
    public void set_ShortTitle(string value);
    public FhirString get_SubtitleElement();
    public void set_SubtitleElement(FhirString value);
    public string get_Subtitle();
    public void set_Subtitle(string value);
    public Code`1<PublicationStatus> get_StatusElement();
    public void set_StatusElement(Code`1<PublicationStatus> value);
    public Nullable`1<PublicationStatus> get_Status();
    public void set_Status(Nullable`1<PublicationStatus> value);
    public FhirDateTime get_DateElement();
    public void set_DateElement(FhirDateTime value);
    public string get_Date();
    public void set_Date(string value);
    public FhirString get_PublisherElement();
    public void set_PublisherElement(FhirString value);
    public string get_Publisher();
    public void set_Publisher(string value);
    public List`1<ContactDetail> get_Contact();
    public void set_Contact(List`1<ContactDetail> value);
    public Markdown get_DescriptionElement();
    public void set_DescriptionElement(Markdown value);
    public string get_Description();
    public void set_Description(string value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public List`1<UsageContext> get_UseContext();
    public void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public Markdown get_CopyrightElement();
    public void set_CopyrightElement(Markdown value);
    public string get_Copyright();
    public void set_Copyright(string value);
    public Date get_ApprovalDateElement();
    public void set_ApprovalDateElement(Date value);
    public string get_ApprovalDate();
    public void set_ApprovalDate(string value);
    public Date get_LastReviewDateElement();
    public void set_LastReviewDateElement(Date value);
    public string get_LastReviewDate();
    public void set_LastReviewDate(string value);
    public Period get_EffectivePeriod();
    public void set_EffectivePeriod(Period value);
    public List`1<CodeableConcept> get_Topic();
    public void set_Topic(List`1<CodeableConcept> value);
    public List`1<ContactDetail> get_Author();
    public void set_Author(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Editor();
    public void set_Editor(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Reviewer();
    public void set_Reviewer(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Endorser();
    public void set_Endorser(List`1<ContactDetail> value);
    public List`1<RelatedArtifact> get_RelatedArtifact();
    public void set_RelatedArtifact(List`1<RelatedArtifact> value);
    public Code`1<VariableTypeCode> get_TypeElement();
    public void set_TypeElement(Code`1<VariableTypeCode> value);
    public Nullable`1<VariableTypeCode> get_Type();
    public void set_Type(Nullable`1<VariableTypeCode> value);
    public List`1<CharacteristicComponent> get_Characteristic();
    public void set_Characteristic(List`1<CharacteristicComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.EvidenceVariable/<get_Children>d__161")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.EvidenceVariable/<get_NamedChildren>d__163")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.EvidenceVariable/<GetElementPairs>d__165")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("ExampleScenario", "http://hl7.org/fhir/StructureDefinition/ExampleScenario")]
public class Hl7.Fhir.Model.ExampleScenario : DomainResource {
    private FhirUri _UrlElement;
    private List`1<Identifier> _Identifier;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirBoolean _ExperimentalElement;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _CopyrightElement;
    private Markdown _PurposeElement;
    private List`1<ActorComponent> _Actor;
    private List`1<InstanceComponent> _Instance;
    private List`1<ProcessComponent> _Process;
    private List`1<Canonical> _WorkflowElement;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("experimental")]
[DataMemberAttribute]
public FhirBoolean ExperimentalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Experimental { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("copyright")]
[DataMemberAttribute]
public Markdown CopyrightElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Copyright { get; public set; }
    [FhirElementAttribute("purpose")]
[DataMemberAttribute]
public Markdown PurposeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Purpose { get; public set; }
    [FhirElementAttribute("actor")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ActorComponent> Actor { get; public set; }
    [FhirElementAttribute("instance")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<InstanceComponent> Instance { get; public set; }
    [FhirElementAttribute("process")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ProcessComponent> Process { get; public set; }
    [FhirElementAttribute("workflow")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> WorkflowElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Workflow { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public FhirUri get_UrlElement();
    public void set_UrlElement(FhirUri value);
    public string get_Url();
    public void set_Url(string value);
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirString get_VersionElement();
    public void set_VersionElement(FhirString value);
    public string get_Version();
    public void set_Version(string value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public Code`1<PublicationStatus> get_StatusElement();
    public void set_StatusElement(Code`1<PublicationStatus> value);
    public Nullable`1<PublicationStatus> get_Status();
    public void set_Status(Nullable`1<PublicationStatus> value);
    public FhirBoolean get_ExperimentalElement();
    public void set_ExperimentalElement(FhirBoolean value);
    public Nullable`1<bool> get_Experimental();
    public void set_Experimental(Nullable`1<bool> value);
    public FhirDateTime get_DateElement();
    public void set_DateElement(FhirDateTime value);
    public string get_Date();
    public void set_Date(string value);
    public FhirString get_PublisherElement();
    public void set_PublisherElement(FhirString value);
    public string get_Publisher();
    public void set_Publisher(string value);
    public List`1<ContactDetail> get_Contact();
    public void set_Contact(List`1<ContactDetail> value);
    public List`1<UsageContext> get_UseContext();
    public void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public Markdown get_CopyrightElement();
    public void set_CopyrightElement(Markdown value);
    public string get_Copyright();
    public void set_Copyright(string value);
    public Markdown get_PurposeElement();
    public void set_PurposeElement(Markdown value);
    public string get_Purpose();
    public void set_Purpose(string value);
    public List`1<ActorComponent> get_Actor();
    public void set_Actor(List`1<ActorComponent> value);
    public List`1<InstanceComponent> get_Instance();
    public void set_Instance(List`1<InstanceComponent> value);
    public List`1<ProcessComponent> get_Process();
    public void set_Process(List`1<ProcessComponent> value);
    public List`1<Canonical> get_WorkflowElement();
    public void set_WorkflowElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_Workflow();
    public void set_Workflow(IEnumerable`1<string> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ExampleScenario/<get_Children>d__117")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ExampleScenario/<get_NamedChildren>d__119")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ExampleScenario/<GetElementPairs>d__121")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("ExplanationOfBenefit", "http://hl7.org/fhir/StructureDefinition/ExplanationOfBenefit")]
public class Hl7.Fhir.Model.ExplanationOfBenefit : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<ExplanationOfBenefitStatus> _StatusElement;
    private CodeableConcept _Type;
    private CodeableConcept _SubType;
    private Code`1<ClaimUseCode> _UseElement;
    private ResourceReference _Patient;
    private Period _BillablePeriod;
    private FhirDateTime _CreatedElement;
    private ResourceReference _Enterer;
    private ResourceReference _Insurer;
    private ResourceReference _Provider;
    private CodeableConcept _Priority;
    private CodeableConcept _FundsReserveRequested;
    private CodeableConcept _FundsReserve;
    private List`1<RelatedClaimComponent> _Related;
    private ResourceReference _Prescription;
    private ResourceReference _OriginalPrescription;
    private PayeeComponent _Payee;
    private ResourceReference _Referral;
    private ResourceReference _Facility;
    private ResourceReference _Claim;
    private ResourceReference _ClaimResponse;
    private Code`1<ClaimProcessingCodes> _OutcomeElement;
    private FhirString _DispositionElement;
    private List`1<FhirString> _PreAuthRefElement;
    private List`1<Period> _PreAuthRefPeriod;
    private List`1<CareTeamComponent> _CareTeam;
    private List`1<SupportingInformationComponent> _SupportingInfo;
    private List`1<DiagnosisComponent> _Diagnosis;
    private List`1<ProcedureComponent> _Procedure;
    private PositiveInt _PrecedenceElement;
    private List`1<InsuranceComponent> _Insurance;
    private AccidentComponent _Accident;
    private List`1<ItemComponent> _Item;
    private List`1<AddedItemComponent> _AddItem;
    private List`1<AdjudicationComponent> _Adjudication;
    private List`1<TotalComponent> _Total;
    private PaymentComponent _Payment;
    private CodeableConcept _FormCode;
    private Attachment _Form;
    private List`1<NoteComponent> _ProcessNote;
    private Period _BenefitPeriod;
    private List`1<BenefitBalanceComponent> _BenefitBalance;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("ExplanationOfBenefitStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ExplanationOfBenefitStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ExplanationOfBenefitStatus> Status { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("ClaimType")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("subType")]
[BindingAttribute("ClaimSubType")]
[DataMemberAttribute]
public CodeableConcept SubType { get; public set; }
    [FhirElementAttribute("use")]
[DeclaredTypeAttribute]
[BindingAttribute("Use")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ClaimUseCode> UseElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ClaimUseCode> Use { get; public set; }
    [FhirElementAttribute("patient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Patient { get; public set; }
    [FhirElementAttribute("billablePeriod")]
[DataMemberAttribute]
public Period BillablePeriod { get; public set; }
    [FhirElementAttribute("created")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirDateTime CreatedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Created { get; public set; }
    [FhirElementAttribute("enterer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Enterer { get; public set; }
    [FhirElementAttribute("insurer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Insurer { get; public set; }
    [FhirElementAttribute("provider")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Provider { get; public set; }
    [FhirElementAttribute("priority")]
[BindingAttribute("ProcessPriority")]
[DataMemberAttribute]
public CodeableConcept Priority { get; public set; }
    [FhirElementAttribute("fundsReserveRequested")]
[BindingAttribute("FundsReserve")]
[DataMemberAttribute]
public CodeableConcept FundsReserveRequested { get; public set; }
    [FhirElementAttribute("fundsReserve")]
[BindingAttribute("FundsReserve")]
[DataMemberAttribute]
public CodeableConcept FundsReserve { get; public set; }
    [FhirElementAttribute("related")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RelatedClaimComponent> Related { get; public set; }
    [FhirElementAttribute("prescription")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Prescription { get; public set; }
    [FhirElementAttribute("originalPrescription")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference OriginalPrescription { get; public set; }
    [FhirElementAttribute("payee")]
[DataMemberAttribute]
public PayeeComponent Payee { get; public set; }
    [FhirElementAttribute("referral")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Referral { get; public set; }
    [FhirElementAttribute("facility")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Facility { get; public set; }
    [FhirElementAttribute("claim")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Claim { get; public set; }
    [FhirElementAttribute("claimResponse")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference ClaimResponse { get; public set; }
    [FhirElementAttribute("outcome")]
[DeclaredTypeAttribute]
[BindingAttribute("RemittanceOutcome")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ClaimProcessingCodes> OutcomeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ClaimProcessingCodes> Outcome { get; public set; }
    [FhirElementAttribute("disposition")]
[DataMemberAttribute]
public FhirString DispositionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Disposition { get; public set; }
    [FhirElementAttribute("preAuthRef")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> PreAuthRefElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> PreAuthRef { get; public set; }
    [FhirElementAttribute("preAuthRefPeriod")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Period> PreAuthRefPeriod { get; public set; }
    [FhirElementAttribute("careTeam")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CareTeamComponent> CareTeam { get; public set; }
    [FhirElementAttribute("supportingInfo")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<SupportingInformationComponent> SupportingInfo { get; public set; }
    [FhirElementAttribute("diagnosis")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<DiagnosisComponent> Diagnosis { get; public set; }
    [FhirElementAttribute("procedure")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ProcedureComponent> Procedure { get; public set; }
    [FhirElementAttribute("precedence")]
[DataMemberAttribute]
public PositiveInt PrecedenceElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<int> Precedence { get; public set; }
    [FhirElementAttribute("insurance")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<InsuranceComponent> Insurance { get; public set; }
    [FhirElementAttribute("accident")]
[DataMemberAttribute]
public AccidentComponent Accident { get; public set; }
    [FhirElementAttribute("item")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ItemComponent> Item { get; public set; }
    [FhirElementAttribute("addItem")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<AddedItemComponent> AddItem { get; public set; }
    [FhirElementAttribute("adjudication")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<AdjudicationComponent> Adjudication { get; public set; }
    [FhirElementAttribute("total")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<TotalComponent> Total { get; public set; }
    [FhirElementAttribute("payment")]
[DataMemberAttribute]
public PaymentComponent Payment { get; public set; }
    [FhirElementAttribute("formCode")]
[BindingAttribute("Forms")]
[DataMemberAttribute]
public CodeableConcept FormCode { get; public set; }
    [FhirElementAttribute("form")]
[DataMemberAttribute]
public Attachment Form { get; public set; }
    [FhirElementAttribute("processNote")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<NoteComponent> ProcessNote { get; public set; }
    [FhirElementAttribute("benefitPeriod")]
[DataMemberAttribute]
public Period BenefitPeriod { get; public set; }
    [FhirElementAttribute("benefitBalance")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<BenefitBalanceComponent> BenefitBalance { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<ExplanationOfBenefitStatus> get_StatusElement();
    public void set_StatusElement(Code`1<ExplanationOfBenefitStatus> value);
    public Nullable`1<ExplanationOfBenefitStatus> get_Status();
    public void set_Status(Nullable`1<ExplanationOfBenefitStatus> value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public CodeableConcept get_SubType();
    public void set_SubType(CodeableConcept value);
    public Code`1<ClaimUseCode> get_UseElement();
    public void set_UseElement(Code`1<ClaimUseCode> value);
    public Nullable`1<ClaimUseCode> get_Use();
    public void set_Use(Nullable`1<ClaimUseCode> value);
    public ResourceReference get_Patient();
    public void set_Patient(ResourceReference value);
    public Period get_BillablePeriod();
    public void set_BillablePeriod(Period value);
    public FhirDateTime get_CreatedElement();
    public void set_CreatedElement(FhirDateTime value);
    public string get_Created();
    public void set_Created(string value);
    public ResourceReference get_Enterer();
    public void set_Enterer(ResourceReference value);
    public ResourceReference get_Insurer();
    public void set_Insurer(ResourceReference value);
    public ResourceReference get_Provider();
    public void set_Provider(ResourceReference value);
    public CodeableConcept get_Priority();
    public void set_Priority(CodeableConcept value);
    public CodeableConcept get_FundsReserveRequested();
    public void set_FundsReserveRequested(CodeableConcept value);
    public CodeableConcept get_FundsReserve();
    public void set_FundsReserve(CodeableConcept value);
    public List`1<RelatedClaimComponent> get_Related();
    public void set_Related(List`1<RelatedClaimComponent> value);
    public ResourceReference get_Prescription();
    public void set_Prescription(ResourceReference value);
    public ResourceReference get_OriginalPrescription();
    public void set_OriginalPrescription(ResourceReference value);
    public PayeeComponent get_Payee();
    public void set_Payee(PayeeComponent value);
    public ResourceReference get_Referral();
    public void set_Referral(ResourceReference value);
    public ResourceReference get_Facility();
    public void set_Facility(ResourceReference value);
    public ResourceReference get_Claim();
    public void set_Claim(ResourceReference value);
    public ResourceReference get_ClaimResponse();
    public void set_ClaimResponse(ResourceReference value);
    public Code`1<ClaimProcessingCodes> get_OutcomeElement();
    public void set_OutcomeElement(Code`1<ClaimProcessingCodes> value);
    public Nullable`1<ClaimProcessingCodes> get_Outcome();
    public void set_Outcome(Nullable`1<ClaimProcessingCodes> value);
    public FhirString get_DispositionElement();
    public void set_DispositionElement(FhirString value);
    public string get_Disposition();
    public void set_Disposition(string value);
    public List`1<FhirString> get_PreAuthRefElement();
    public void set_PreAuthRefElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_PreAuthRef();
    public void set_PreAuthRef(IEnumerable`1<string> value);
    public List`1<Period> get_PreAuthRefPeriod();
    public void set_PreAuthRefPeriod(List`1<Period> value);
    public List`1<CareTeamComponent> get_CareTeam();
    public void set_CareTeam(List`1<CareTeamComponent> value);
    public List`1<SupportingInformationComponent> get_SupportingInfo();
    public void set_SupportingInfo(List`1<SupportingInformationComponent> value);
    public List`1<DiagnosisComponent> get_Diagnosis();
    public void set_Diagnosis(List`1<DiagnosisComponent> value);
    public List`1<ProcedureComponent> get_Procedure();
    public void set_Procedure(List`1<ProcedureComponent> value);
    public PositiveInt get_PrecedenceElement();
    public void set_PrecedenceElement(PositiveInt value);
    public Nullable`1<int> get_Precedence();
    public void set_Precedence(Nullable`1<int> value);
    public List`1<InsuranceComponent> get_Insurance();
    public void set_Insurance(List`1<InsuranceComponent> value);
    public AccidentComponent get_Accident();
    public void set_Accident(AccidentComponent value);
    public List`1<ItemComponent> get_Item();
    public void set_Item(List`1<ItemComponent> value);
    public List`1<AddedItemComponent> get_AddItem();
    public void set_AddItem(List`1<AddedItemComponent> value);
    public List`1<AdjudicationComponent> get_Adjudication();
    public void set_Adjudication(List`1<AdjudicationComponent> value);
    public List`1<TotalComponent> get_Total();
    public void set_Total(List`1<TotalComponent> value);
    public PaymentComponent get_Payment();
    public void set_Payment(PaymentComponent value);
    public CodeableConcept get_FormCode();
    public void set_FormCode(CodeableConcept value);
    public Attachment get_Form();
    public void set_Form(Attachment value);
    public List`1<NoteComponent> get_ProcessNote();
    public void set_ProcessNote(List`1<NoteComponent> value);
    public Period get_BenefitPeriod();
    public void set_BenefitPeriod(Period value);
    public List`1<BenefitBalanceComponent> get_BenefitBalance();
    public void set_BenefitBalance(List`1<BenefitBalanceComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ExplanationOfBenefit/<get_Children>d__228")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ExplanationOfBenefit/<get_NamedChildren>d__230")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ExplanationOfBenefit/<GetElementPairs>d__232")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Expression", "http://hl7.org/fhir/StructureDefinition/Expression")]
public class Hl7.Fhir.Model.Expression : DataType {
    private FhirString _DescriptionElement;
    private Id _NameElement;
    private Code _LanguageElement;
    private FhirString _ExpressionElement;
    private FhirUri _ReferenceElement;
    public string TypeName { get; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public FhirString DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public Id NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("language")]
[BindingAttribute("ExpressionLanguage")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code LanguageElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Language { get; public set; }
    [FhirElementAttribute("expression")]
[DataMemberAttribute]
public FhirString ExpressionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Expression_ { get; public set; }
    [FhirElementAttribute("reference")]
[DataMemberAttribute]
public FhirUri ReferenceElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Reference { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public FhirString get_DescriptionElement();
    public void set_DescriptionElement(FhirString value);
    public string get_Description();
    public void set_Description(string value);
    public Id get_NameElement();
    public void set_NameElement(Id value);
    public string get_Name();
    public void set_Name(string value);
    public Code get_LanguageElement();
    public void set_LanguageElement(Code value);
    public string get_Language();
    public void set_Language(string value);
    public FhirString get_ExpressionElement();
    public void set_ExpressionElement(FhirString value);
    public string get_Expression_();
    public void set_Expression_(string value);
    public FhirUri get_ReferenceElement();
    public void set_ReferenceElement(FhirUri value);
    public string get_Reference();
    public void set_Reference(string value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Expression/<get_Children>d__42")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Expression/<get_NamedChildren>d__44")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Expression/<GetElementPairs>d__46")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("FamilyMemberHistory", "http://hl7.org/fhir/StructureDefinition/FamilyMemberHistory")]
public class Hl7.Fhir.Model.FamilyMemberHistory : DomainResource {
    private List`1<Identifier> _Identifier;
    private List`1<Canonical> _InstantiatesCanonicalElement;
    private List`1<FhirUri> _InstantiatesUriElement;
    private Code`1<FamilyHistoryStatus> _StatusElement;
    private CodeableConcept _DataAbsentReason;
    private ResourceReference _Patient;
    private FhirDateTime _DateElement;
    private FhirString _NameElement;
    private CodeableConcept _Relationship;
    private CodeableConcept _Sex;
    private DataType _Born;
    private DataType _Age;
    private FhirBoolean _EstimatedAgeElement;
    private DataType _Deceased;
    private List`1<CodeableConcept> _ReasonCode;
    private List`1<ResourceReference> _ReasonReference;
    private List`1<Annotation> _Note;
    private List`1<ConditionComponent> _Condition;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("instantiatesCanonical")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> InstantiatesCanonicalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> InstantiatesCanonical { get; public set; }
    [FhirElementAttribute("instantiatesUri")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirUri> InstantiatesUriElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> InstantiatesUri { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("FamilyHistoryStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<FamilyHistoryStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<FamilyHistoryStatus> Status { get; public set; }
    [FhirElementAttribute("dataAbsentReason")]
[BindingAttribute("FamilyHistoryAbsentReason")]
[DataMemberAttribute]
public CodeableConcept DataAbsentReason { get; public set; }
    [FhirElementAttribute("patient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Patient { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("relationship")]
[BindingAttribute("FamilialRelationship")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept Relationship { get; public set; }
    [FhirElementAttribute("sex")]
[BindingAttribute("Sex")]
[DataMemberAttribute]
public CodeableConcept Sex { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Born { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Age { get; public set; }
    [FhirElementAttribute("estimatedAge")]
[DataMemberAttribute]
public FhirBoolean EstimatedAgeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> EstimatedAge { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Deceased { get; public set; }
    [FhirElementAttribute("reasonCode")]
[BindingAttribute("FamilyHistoryReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ReasonCode { get; public set; }
    [FhirElementAttribute("reasonReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ReasonReference { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("condition")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ConditionComponent> Condition { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<Canonical> get_InstantiatesCanonicalElement();
    public void set_InstantiatesCanonicalElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_InstantiatesCanonical();
    public void set_InstantiatesCanonical(IEnumerable`1<string> value);
    public List`1<FhirUri> get_InstantiatesUriElement();
    public void set_InstantiatesUriElement(List`1<FhirUri> value);
    public IEnumerable`1<string> get_InstantiatesUri();
    public void set_InstantiatesUri(IEnumerable`1<string> value);
    public Code`1<FamilyHistoryStatus> get_StatusElement();
    public void set_StatusElement(Code`1<FamilyHistoryStatus> value);
    public Nullable`1<FamilyHistoryStatus> get_Status();
    public void set_Status(Nullable`1<FamilyHistoryStatus> value);
    public CodeableConcept get_DataAbsentReason();
    public void set_DataAbsentReason(CodeableConcept value);
    public ResourceReference get_Patient();
    public void set_Patient(ResourceReference value);
    public FhirDateTime get_DateElement();
    public void set_DateElement(FhirDateTime value);
    public string get_Date();
    public void set_Date(string value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public CodeableConcept get_Relationship();
    public void set_Relationship(CodeableConcept value);
    public CodeableConcept get_Sex();
    public void set_Sex(CodeableConcept value);
    public DataType get_Born();
    public void set_Born(DataType value);
    public DataType get_Age();
    public void set_Age(DataType value);
    public FhirBoolean get_EstimatedAgeElement();
    public void set_EstimatedAgeElement(FhirBoolean value);
    public Nullable`1<bool> get_EstimatedAge();
    public void set_EstimatedAge(Nullable`1<bool> value);
    public DataType get_Deceased();
    public void set_Deceased(DataType value);
    public List`1<CodeableConcept> get_ReasonCode();
    public void set_ReasonCode(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_ReasonReference();
    public void set_ReasonReference(List`1<ResourceReference> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public List`1<ConditionComponent> get_Condition();
    public void set_Condition(List`1<ConditionComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.FamilyMemberHistory/<get_Children>d__102")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.FamilyMemberHistory/<get_NamedChildren>d__104")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.FamilyMemberHistory/<GetElementPairs>d__106")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("FHIRAllTypes", "http://hl7.org/fhir/ValueSet/all-types", "http://hl7.org/fhir/resource-types")]
public enum Hl7.Fhir.Model.FHIRAllTypes : Enum {
    public int value__;
    [EnumLiteralAttribute("Address", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Address")]
public static FHIRAllTypes Address;
    [EnumLiteralAttribute("Age", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Age")]
public static FHIRAllTypes Age;
    [EnumLiteralAttribute("Annotation", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Annotation")]
public static FHIRAllTypes Annotation;
    [EnumLiteralAttribute("Attachment", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Attachment")]
public static FHIRAllTypes Attachment;
    [EnumLiteralAttribute("BackboneElement", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("BackboneElement")]
public static FHIRAllTypes BackboneElement;
    [EnumLiteralAttribute("CodeableConcept", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("CodeableConcept")]
public static FHIRAllTypes CodeableConcept;
    [EnumLiteralAttribute("Coding", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Coding")]
public static FHIRAllTypes Coding;
    [EnumLiteralAttribute("ContactDetail", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("ContactDetail")]
public static FHIRAllTypes ContactDetail;
    [EnumLiteralAttribute("ContactPoint", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("ContactPoint")]
public static FHIRAllTypes ContactPoint;
    [EnumLiteralAttribute("Contributor", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Contributor")]
public static FHIRAllTypes Contributor;
    [EnumLiteralAttribute("Count", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Count")]
public static FHIRAllTypes Count;
    [EnumLiteralAttribute("DataRequirement", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("DataRequirement")]
public static FHIRAllTypes DataRequirement;
    [EnumLiteralAttribute("Distance", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Distance")]
public static FHIRAllTypes Distance;
    [EnumLiteralAttribute("Dosage", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Dosage")]
public static FHIRAllTypes Dosage;
    [EnumLiteralAttribute("Duration", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Duration")]
public static FHIRAllTypes Duration;
    [EnumLiteralAttribute("Element", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Element")]
public static FHIRAllTypes Element;
    [EnumLiteralAttribute("ElementDefinition", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("ElementDefinition")]
public static FHIRAllTypes ElementDefinition;
    [EnumLiteralAttribute("Expression", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Expression")]
public static FHIRAllTypes Expression;
    [EnumLiteralAttribute("Extension", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Extension")]
public static FHIRAllTypes Extension;
    [EnumLiteralAttribute("HumanName", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("HumanName")]
public static FHIRAllTypes HumanName;
    [EnumLiteralAttribute("Identifier", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Identifier")]
public static FHIRAllTypes Identifier;
    [EnumLiteralAttribute("MarketingStatus", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("MarketingStatus")]
public static FHIRAllTypes MarketingStatus;
    [EnumLiteralAttribute("Meta", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Meta")]
public static FHIRAllTypes Meta;
    [EnumLiteralAttribute("Money", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Money")]
public static FHIRAllTypes Money;
    [EnumLiteralAttribute("MoneyQuantity", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("MoneyQuantity")]
public static FHIRAllTypes MoneyQuantity;
    [EnumLiteralAttribute("Narrative", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Narrative")]
public static FHIRAllTypes Narrative;
    [EnumLiteralAttribute("ParameterDefinition", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("ParameterDefinition")]
public static FHIRAllTypes ParameterDefinition;
    [EnumLiteralAttribute("Period", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Period")]
public static FHIRAllTypes Period;
    [EnumLiteralAttribute("Population", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Population")]
public static FHIRAllTypes Population;
    [EnumLiteralAttribute("ProdCharacteristic", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("ProdCharacteristic")]
public static FHIRAllTypes ProdCharacteristic;
    [EnumLiteralAttribute("ProductShelfLife", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("ProductShelfLife")]
public static FHIRAllTypes ProductShelfLife;
    [EnumLiteralAttribute("Quantity", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Quantity")]
public static FHIRAllTypes Quantity;
    [EnumLiteralAttribute("Range", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Range")]
public static FHIRAllTypes Range;
    [EnumLiteralAttribute("Ratio", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Ratio")]
public static FHIRAllTypes Ratio;
    [EnumLiteralAttribute("Reference", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Reference")]
public static FHIRAllTypes Reference;
    [EnumLiteralAttribute("RelatedArtifact", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("RelatedArtifact")]
public static FHIRAllTypes RelatedArtifact;
    [EnumLiteralAttribute("SampledData", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("SampledData")]
public static FHIRAllTypes SampledData;
    [EnumLiteralAttribute("Signature", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Signature")]
public static FHIRAllTypes Signature;
    [EnumLiteralAttribute("SimpleQuantity", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("SimpleQuantity")]
public static FHIRAllTypes SimpleQuantity;
    [EnumLiteralAttribute("SubstanceAmount", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("SubstanceAmount")]
public static FHIRAllTypes SubstanceAmount;
    [EnumLiteralAttribute("Timing", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Timing")]
public static FHIRAllTypes Timing;
    [EnumLiteralAttribute("TriggerDefinition", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("TriggerDefinition")]
public static FHIRAllTypes TriggerDefinition;
    [EnumLiteralAttribute("UsageContext", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("UsageContext")]
public static FHIRAllTypes UsageContext;
    [EnumLiteralAttribute("base64Binary", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("base64Binary")]
public static FHIRAllTypes Base64Binary;
    [EnumLiteralAttribute("boolean", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("boolean")]
public static FHIRAllTypes Boolean;
    [EnumLiteralAttribute("canonical", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("canonical")]
public static FHIRAllTypes Canonical;
    [EnumLiteralAttribute("code", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("code")]
public static FHIRAllTypes Code;
    [EnumLiteralAttribute("date", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("date")]
public static FHIRAllTypes Date;
    [EnumLiteralAttribute("dateTime", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("dateTime")]
public static FHIRAllTypes DateTime;
    [EnumLiteralAttribute("decimal", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("decimal")]
public static FHIRAllTypes Decimal;
    [EnumLiteralAttribute("id", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("id")]
public static FHIRAllTypes Id;
    [EnumLiteralAttribute("instant", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("instant")]
public static FHIRAllTypes Instant;
    [EnumLiteralAttribute("integer", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("integer")]
public static FHIRAllTypes Integer;
    [EnumLiteralAttribute("markdown", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("markdown")]
public static FHIRAllTypes Markdown;
    [EnumLiteralAttribute("oid", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("oid")]
public static FHIRAllTypes Oid;
    [EnumLiteralAttribute("positiveInt", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("positiveInt")]
public static FHIRAllTypes PositiveInt;
    [EnumLiteralAttribute("string", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("string")]
public static FHIRAllTypes String;
    [EnumLiteralAttribute("time", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("time")]
public static FHIRAllTypes Time;
    [EnumLiteralAttribute("unsignedInt", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("unsignedInt")]
public static FHIRAllTypes UnsignedInt;
    [EnumLiteralAttribute("uri", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("uri")]
public static FHIRAllTypes Uri;
    [EnumLiteralAttribute("url", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("url")]
public static FHIRAllTypes Url;
    [EnumLiteralAttribute("uuid", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("uuid")]
public static FHIRAllTypes Uuid;
    [EnumLiteralAttribute("xhtml", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("XHTML")]
public static FHIRAllTypes Xhtml;
    [EnumLiteralAttribute("Account", "")]
[DescriptionAttribute("Account")]
public static FHIRAllTypes Account;
    [EnumLiteralAttribute("ActivityDefinition", "")]
[DescriptionAttribute("ActivityDefinition")]
public static FHIRAllTypes ActivityDefinition;
    [EnumLiteralAttribute("AdverseEvent", "")]
[DescriptionAttribute("AdverseEvent")]
public static FHIRAllTypes AdverseEvent;
    [EnumLiteralAttribute("AllergyIntolerance", "")]
[DescriptionAttribute("AllergyIntolerance")]
public static FHIRAllTypes AllergyIntolerance;
    [EnumLiteralAttribute("Appointment", "")]
[DescriptionAttribute("Appointment")]
public static FHIRAllTypes Appointment;
    [EnumLiteralAttribute("AppointmentResponse", "")]
[DescriptionAttribute("AppointmentResponse")]
public static FHIRAllTypes AppointmentResponse;
    [EnumLiteralAttribute("AuditEvent", "")]
[DescriptionAttribute("AuditEvent")]
public static FHIRAllTypes AuditEvent;
    [EnumLiteralAttribute("Basic", "")]
[DescriptionAttribute("Basic")]
public static FHIRAllTypes Basic;
    [EnumLiteralAttribute("Binary", "")]
[DescriptionAttribute("Binary")]
public static FHIRAllTypes Binary;
    [EnumLiteralAttribute("BiologicallyDerivedProduct", "")]
[DescriptionAttribute("BiologicallyDerivedProduct")]
public static FHIRAllTypes BiologicallyDerivedProduct;
    [EnumLiteralAttribute("BodyStructure", "")]
[DescriptionAttribute("BodyStructure")]
public static FHIRAllTypes BodyStructure;
    [EnumLiteralAttribute("Bundle", "")]
[DescriptionAttribute("Bundle")]
public static FHIRAllTypes Bundle;
    [EnumLiteralAttribute("CapabilityStatement", "")]
[DescriptionAttribute("CapabilityStatement")]
public static FHIRAllTypes CapabilityStatement;
    [EnumLiteralAttribute("CarePlan", "")]
[DescriptionAttribute("CarePlan")]
public static FHIRAllTypes CarePlan;
    [EnumLiteralAttribute("CareTeam", "")]
[DescriptionAttribute("CareTeam")]
public static FHIRAllTypes CareTeam;
    [EnumLiteralAttribute("CatalogEntry", "")]
[DescriptionAttribute("CatalogEntry")]
public static FHIRAllTypes CatalogEntry;
    [EnumLiteralAttribute("ChargeItem", "")]
[DescriptionAttribute("ChargeItem")]
public static FHIRAllTypes ChargeItem;
    [EnumLiteralAttribute("ChargeItemDefinition", "")]
[DescriptionAttribute("ChargeItemDefinition")]
public static FHIRAllTypes ChargeItemDefinition;
    [EnumLiteralAttribute("Claim", "")]
[DescriptionAttribute("Claim")]
public static FHIRAllTypes Claim;
    [EnumLiteralAttribute("ClaimResponse", "")]
[DescriptionAttribute("ClaimResponse")]
public static FHIRAllTypes ClaimResponse;
    [EnumLiteralAttribute("ClinicalImpression", "")]
[DescriptionAttribute("ClinicalImpression")]
public static FHIRAllTypes ClinicalImpression;
    [EnumLiteralAttribute("CodeSystem", "")]
[DescriptionAttribute("CodeSystem")]
public static FHIRAllTypes CodeSystem;
    [EnumLiteralAttribute("Communication", "")]
[DescriptionAttribute("Communication")]
public static FHIRAllTypes Communication;
    [EnumLiteralAttribute("CommunicationRequest", "")]
[DescriptionAttribute("CommunicationRequest")]
public static FHIRAllTypes CommunicationRequest;
    [EnumLiteralAttribute("CompartmentDefinition", "")]
[DescriptionAttribute("CompartmentDefinition")]
public static FHIRAllTypes CompartmentDefinition;
    [EnumLiteralAttribute("Composition", "")]
[DescriptionAttribute("Composition")]
public static FHIRAllTypes Composition;
    [EnumLiteralAttribute("ConceptMap", "")]
[DescriptionAttribute("ConceptMap")]
public static FHIRAllTypes ConceptMap;
    [EnumLiteralAttribute("Condition", "")]
[DescriptionAttribute("Condition")]
public static FHIRAllTypes Condition;
    [EnumLiteralAttribute("Consent", "")]
[DescriptionAttribute("Consent")]
public static FHIRAllTypes Consent;
    [EnumLiteralAttribute("Contract", "")]
[DescriptionAttribute("Contract")]
public static FHIRAllTypes Contract;
    [EnumLiteralAttribute("Coverage", "")]
[DescriptionAttribute("Coverage")]
public static FHIRAllTypes Coverage;
    [EnumLiteralAttribute("CoverageEligibilityRequest", "")]
[DescriptionAttribute("CoverageEligibilityRequest")]
public static FHIRAllTypes CoverageEligibilityRequest;
    [EnumLiteralAttribute("CoverageEligibilityResponse", "")]
[DescriptionAttribute("CoverageEligibilityResponse")]
public static FHIRAllTypes CoverageEligibilityResponse;
    [EnumLiteralAttribute("DetectedIssue", "")]
[DescriptionAttribute("DetectedIssue")]
public static FHIRAllTypes DetectedIssue;
    [EnumLiteralAttribute("Device", "")]
[DescriptionAttribute("Device")]
public static FHIRAllTypes Device;
    [EnumLiteralAttribute("DeviceDefinition", "")]
[DescriptionAttribute("DeviceDefinition")]
public static FHIRAllTypes DeviceDefinition;
    [EnumLiteralAttribute("DeviceMetric", "")]
[DescriptionAttribute("DeviceMetric")]
public static FHIRAllTypes DeviceMetric;
    [EnumLiteralAttribute("DeviceRequest", "")]
[DescriptionAttribute("DeviceRequest")]
public static FHIRAllTypes DeviceRequest;
    [EnumLiteralAttribute("DeviceUseStatement", "")]
[DescriptionAttribute("DeviceUseStatement")]
public static FHIRAllTypes DeviceUseStatement;
    [EnumLiteralAttribute("DiagnosticReport", "")]
[DescriptionAttribute("DiagnosticReport")]
public static FHIRAllTypes DiagnosticReport;
    [EnumLiteralAttribute("DocumentManifest", "")]
[DescriptionAttribute("DocumentManifest")]
public static FHIRAllTypes DocumentManifest;
    [EnumLiteralAttribute("DocumentReference", "")]
[DescriptionAttribute("DocumentReference")]
public static FHIRAllTypes DocumentReference;
    [EnumLiteralAttribute("DomainResource", "")]
[DescriptionAttribute("DomainResource")]
public static FHIRAllTypes DomainResource;
    [EnumLiteralAttribute("EffectEvidenceSynthesis", "")]
[DescriptionAttribute("EffectEvidenceSynthesis")]
public static FHIRAllTypes EffectEvidenceSynthesis;
    [EnumLiteralAttribute("Encounter", "")]
[DescriptionAttribute("Encounter")]
public static FHIRAllTypes Encounter;
    [EnumLiteralAttribute("Endpoint", "")]
[DescriptionAttribute("Endpoint")]
public static FHIRAllTypes Endpoint;
    [EnumLiteralAttribute("EnrollmentRequest", "")]
[DescriptionAttribute("EnrollmentRequest")]
public static FHIRAllTypes EnrollmentRequest;
    [EnumLiteralAttribute("EnrollmentResponse", "")]
[DescriptionAttribute("EnrollmentResponse")]
public static FHIRAllTypes EnrollmentResponse;
    [EnumLiteralAttribute("EpisodeOfCare", "")]
[DescriptionAttribute("EpisodeOfCare")]
public static FHIRAllTypes EpisodeOfCare;
    [EnumLiteralAttribute("EventDefinition", "")]
[DescriptionAttribute("EventDefinition")]
public static FHIRAllTypes EventDefinition;
    [EnumLiteralAttribute("Evidence", "")]
[DescriptionAttribute("Evidence")]
public static FHIRAllTypes Evidence;
    [EnumLiteralAttribute("EvidenceVariable", "")]
[DescriptionAttribute("EvidenceVariable")]
public static FHIRAllTypes EvidenceVariable;
    [EnumLiteralAttribute("ExampleScenario", "")]
[DescriptionAttribute("ExampleScenario")]
public static FHIRAllTypes ExampleScenario;
    [EnumLiteralAttribute("ExplanationOfBenefit", "")]
[DescriptionAttribute("ExplanationOfBenefit")]
public static FHIRAllTypes ExplanationOfBenefit;
    [EnumLiteralAttribute("FamilyMemberHistory", "")]
[DescriptionAttribute("FamilyMemberHistory")]
public static FHIRAllTypes FamilyMemberHistory;
    [EnumLiteralAttribute("Flag", "")]
[DescriptionAttribute("Flag")]
public static FHIRAllTypes Flag;
    [EnumLiteralAttribute("Goal", "")]
[DescriptionAttribute("Goal")]
public static FHIRAllTypes Goal;
    [EnumLiteralAttribute("GraphDefinition", "")]
[DescriptionAttribute("GraphDefinition")]
public static FHIRAllTypes GraphDefinition;
    [EnumLiteralAttribute("Group", "")]
[DescriptionAttribute("Group")]
public static FHIRAllTypes Group;
    [EnumLiteralAttribute("GuidanceResponse", "")]
[DescriptionAttribute("GuidanceResponse")]
public static FHIRAllTypes GuidanceResponse;
    [EnumLiteralAttribute("HealthcareService", "")]
[DescriptionAttribute("HealthcareService")]
public static FHIRAllTypes HealthcareService;
    [EnumLiteralAttribute("ImagingStudy", "")]
[DescriptionAttribute("ImagingStudy")]
public static FHIRAllTypes ImagingStudy;
    [EnumLiteralAttribute("Immunization", "")]
[DescriptionAttribute("Immunization")]
public static FHIRAllTypes Immunization;
    [EnumLiteralAttribute("ImmunizationEvaluation", "")]
[DescriptionAttribute("ImmunizationEvaluation")]
public static FHIRAllTypes ImmunizationEvaluation;
    [EnumLiteralAttribute("ImmunizationRecommendation", "")]
[DescriptionAttribute("ImmunizationRecommendation")]
public static FHIRAllTypes ImmunizationRecommendation;
    [EnumLiteralAttribute("ImplementationGuide", "")]
[DescriptionAttribute("ImplementationGuide")]
public static FHIRAllTypes ImplementationGuide;
    [EnumLiteralAttribute("InsurancePlan", "")]
[DescriptionAttribute("InsurancePlan")]
public static FHIRAllTypes InsurancePlan;
    [EnumLiteralAttribute("Invoice", "")]
[DescriptionAttribute("Invoice")]
public static FHIRAllTypes Invoice;
    [EnumLiteralAttribute("Library", "")]
[DescriptionAttribute("Library")]
public static FHIRAllTypes Library;
    [EnumLiteralAttribute("Linkage", "")]
[DescriptionAttribute("Linkage")]
public static FHIRAllTypes Linkage;
    [EnumLiteralAttribute("List", "")]
[DescriptionAttribute("List")]
public static FHIRAllTypes List;
    [EnumLiteralAttribute("Location", "")]
[DescriptionAttribute("Location")]
public static FHIRAllTypes Location;
    [EnumLiteralAttribute("Measure", "")]
[DescriptionAttribute("Measure")]
public static FHIRAllTypes Measure;
    [EnumLiteralAttribute("MeasureReport", "")]
[DescriptionAttribute("MeasureReport")]
public static FHIRAllTypes MeasureReport;
    [EnumLiteralAttribute("Media", "")]
[DescriptionAttribute("Media")]
public static FHIRAllTypes Media;
    [EnumLiteralAttribute("Medication", "")]
[DescriptionAttribute("Medication")]
public static FHIRAllTypes Medication;
    [EnumLiteralAttribute("MedicationAdministration", "")]
[DescriptionAttribute("MedicationAdministration")]
public static FHIRAllTypes MedicationAdministration;
    [EnumLiteralAttribute("MedicationDispense", "")]
[DescriptionAttribute("MedicationDispense")]
public static FHIRAllTypes MedicationDispense;
    [EnumLiteralAttribute("MedicationKnowledge", "")]
[DescriptionAttribute("MedicationKnowledge")]
public static FHIRAllTypes MedicationKnowledge;
    [EnumLiteralAttribute("MedicationRequest", "")]
[DescriptionAttribute("MedicationRequest")]
public static FHIRAllTypes MedicationRequest;
    [EnumLiteralAttribute("MedicationStatement", "")]
[DescriptionAttribute("MedicationStatement")]
public static FHIRAllTypes MedicationStatement;
    [EnumLiteralAttribute("MedicinalProduct", "")]
[DescriptionAttribute("MedicinalProduct")]
public static FHIRAllTypes MedicinalProduct;
    [EnumLiteralAttribute("MedicinalProductAuthorization", "")]
[DescriptionAttribute("MedicinalProductAuthorization")]
public static FHIRAllTypes MedicinalProductAuthorization;
    [EnumLiteralAttribute("MedicinalProductContraindication", "")]
[DescriptionAttribute("MedicinalProductContraindication")]
public static FHIRAllTypes MedicinalProductContraindication;
    [EnumLiteralAttribute("MedicinalProductIndication", "")]
[DescriptionAttribute("MedicinalProductIndication")]
public static FHIRAllTypes MedicinalProductIndication;
    [EnumLiteralAttribute("MedicinalProductIngredient", "")]
[DescriptionAttribute("MedicinalProductIngredient")]
public static FHIRAllTypes MedicinalProductIngredient;
    [EnumLiteralAttribute("MedicinalProductInteraction", "")]
[DescriptionAttribute("MedicinalProductInteraction")]
public static FHIRAllTypes MedicinalProductInteraction;
    [EnumLiteralAttribute("MedicinalProductManufactured", "")]
[DescriptionAttribute("MedicinalProductManufactured")]
public static FHIRAllTypes MedicinalProductManufactured;
    [EnumLiteralAttribute("MedicinalProductPackaged", "")]
[DescriptionAttribute("MedicinalProductPackaged")]
public static FHIRAllTypes MedicinalProductPackaged;
    [EnumLiteralAttribute("MedicinalProductPharmaceutical", "")]
[DescriptionAttribute("MedicinalProductPharmaceutical")]
public static FHIRAllTypes MedicinalProductPharmaceutical;
    [EnumLiteralAttribute("MedicinalProductUndesirableEffect", "")]
[DescriptionAttribute("MedicinalProductUndesirableEffect")]
public static FHIRAllTypes MedicinalProductUndesirableEffect;
    [EnumLiteralAttribute("MessageDefinition", "")]
[DescriptionAttribute("MessageDefinition")]
public static FHIRAllTypes MessageDefinition;
    [EnumLiteralAttribute("MessageHeader", "")]
[DescriptionAttribute("MessageHeader")]
public static FHIRAllTypes MessageHeader;
    [EnumLiteralAttribute("MolecularSequence", "")]
[DescriptionAttribute("MolecularSequence")]
public static FHIRAllTypes MolecularSequence;
    [EnumLiteralAttribute("NamingSystem", "")]
[DescriptionAttribute("NamingSystem")]
public static FHIRAllTypes NamingSystem;
    [EnumLiteralAttribute("NutritionOrder", "")]
[DescriptionAttribute("NutritionOrder")]
public static FHIRAllTypes NutritionOrder;
    [EnumLiteralAttribute("Observation", "")]
[DescriptionAttribute("Observation")]
public static FHIRAllTypes Observation;
    [EnumLiteralAttribute("ObservationDefinition", "")]
[DescriptionAttribute("ObservationDefinition")]
public static FHIRAllTypes ObservationDefinition;
    [EnumLiteralAttribute("OperationDefinition", "")]
[DescriptionAttribute("OperationDefinition")]
public static FHIRAllTypes OperationDefinition;
    [EnumLiteralAttribute("OperationOutcome", "")]
[DescriptionAttribute("OperationOutcome")]
public static FHIRAllTypes OperationOutcome;
    [EnumLiteralAttribute("Organization", "")]
[DescriptionAttribute("Organization")]
public static FHIRAllTypes Organization;
    [EnumLiteralAttribute("OrganizationAffiliation", "")]
[DescriptionAttribute("OrganizationAffiliation")]
public static FHIRAllTypes OrganizationAffiliation;
    [EnumLiteralAttribute("Parameters", "")]
[DescriptionAttribute("Parameters")]
public static FHIRAllTypes Parameters;
    [EnumLiteralAttribute("Patient", "")]
[DescriptionAttribute("Patient")]
public static FHIRAllTypes Patient;
    [EnumLiteralAttribute("PaymentNotice", "")]
[DescriptionAttribute("PaymentNotice")]
public static FHIRAllTypes PaymentNotice;
    [EnumLiteralAttribute("PaymentReconciliation", "")]
[DescriptionAttribute("PaymentReconciliation")]
public static FHIRAllTypes PaymentReconciliation;
    [EnumLiteralAttribute("Person", "")]
[DescriptionAttribute("Person")]
public static FHIRAllTypes Person;
    [EnumLiteralAttribute("PlanDefinition", "")]
[DescriptionAttribute("PlanDefinition")]
public static FHIRAllTypes PlanDefinition;
    [EnumLiteralAttribute("Practitioner", "")]
[DescriptionAttribute("Practitioner")]
public static FHIRAllTypes Practitioner;
    [EnumLiteralAttribute("PractitionerRole", "")]
[DescriptionAttribute("PractitionerRole")]
public static FHIRAllTypes PractitionerRole;
    [EnumLiteralAttribute("Procedure", "")]
[DescriptionAttribute("Procedure")]
public static FHIRAllTypes Procedure;
    [EnumLiteralAttribute("Provenance", "")]
[DescriptionAttribute("Provenance")]
public static FHIRAllTypes Provenance;
    [EnumLiteralAttribute("Questionnaire", "")]
[DescriptionAttribute("Questionnaire")]
public static FHIRAllTypes Questionnaire;
    [EnumLiteralAttribute("QuestionnaireResponse", "")]
[DescriptionAttribute("QuestionnaireResponse")]
public static FHIRAllTypes QuestionnaireResponse;
    [EnumLiteralAttribute("RelatedPerson", "")]
[DescriptionAttribute("RelatedPerson")]
public static FHIRAllTypes RelatedPerson;
    [EnumLiteralAttribute("RequestGroup", "")]
[DescriptionAttribute("RequestGroup")]
public static FHIRAllTypes RequestGroup;
    [EnumLiteralAttribute("ResearchDefinition", "")]
[DescriptionAttribute("ResearchDefinition")]
public static FHIRAllTypes ResearchDefinition;
    [EnumLiteralAttribute("ResearchElementDefinition", "")]
[DescriptionAttribute("ResearchElementDefinition")]
public static FHIRAllTypes ResearchElementDefinition;
    [EnumLiteralAttribute("ResearchStudy", "")]
[DescriptionAttribute("ResearchStudy")]
public static FHIRAllTypes ResearchStudy;
    [EnumLiteralAttribute("ResearchSubject", "")]
[DescriptionAttribute("ResearchSubject")]
public static FHIRAllTypes ResearchSubject;
    [EnumLiteralAttribute("Resource", "")]
[DescriptionAttribute("Resource")]
public static FHIRAllTypes Resource;
    [EnumLiteralAttribute("RiskAssessment", "")]
[DescriptionAttribute("RiskAssessment")]
public static FHIRAllTypes RiskAssessment;
    [EnumLiteralAttribute("RiskEvidenceSynthesis", "")]
[DescriptionAttribute("RiskEvidenceSynthesis")]
public static FHIRAllTypes RiskEvidenceSynthesis;
    [EnumLiteralAttribute("Schedule", "")]
[DescriptionAttribute("Schedule")]
public static FHIRAllTypes Schedule;
    [EnumLiteralAttribute("SearchParameter", "")]
[DescriptionAttribute("SearchParameter")]
public static FHIRAllTypes SearchParameter;
    [EnumLiteralAttribute("ServiceRequest", "")]
[DescriptionAttribute("ServiceRequest")]
public static FHIRAllTypes ServiceRequest;
    [EnumLiteralAttribute("Slot", "")]
[DescriptionAttribute("Slot")]
public static FHIRAllTypes Slot;
    [EnumLiteralAttribute("Specimen", "")]
[DescriptionAttribute("Specimen")]
public static FHIRAllTypes Specimen;
    [EnumLiteralAttribute("SpecimenDefinition", "")]
[DescriptionAttribute("SpecimenDefinition")]
public static FHIRAllTypes SpecimenDefinition;
    [EnumLiteralAttribute("StructureDefinition", "")]
[DescriptionAttribute("StructureDefinition")]
public static FHIRAllTypes StructureDefinition;
    [EnumLiteralAttribute("StructureMap", "")]
[DescriptionAttribute("StructureMap")]
public static FHIRAllTypes StructureMap;
    [EnumLiteralAttribute("Subscription", "")]
[DescriptionAttribute("Subscription")]
public static FHIRAllTypes Subscription;
    [EnumLiteralAttribute("Substance", "")]
[DescriptionAttribute("Substance")]
public static FHIRAllTypes Substance;
    [EnumLiteralAttribute("SubstanceNucleicAcid", "")]
[DescriptionAttribute("SubstanceNucleicAcid")]
public static FHIRAllTypes SubstanceNucleicAcid;
    [EnumLiteralAttribute("SubstancePolymer", "")]
[DescriptionAttribute("SubstancePolymer")]
public static FHIRAllTypes SubstancePolymer;
    [EnumLiteralAttribute("SubstanceProtein", "")]
[DescriptionAttribute("SubstanceProtein")]
public static FHIRAllTypes SubstanceProtein;
    [EnumLiteralAttribute("SubstanceReferenceInformation", "")]
[DescriptionAttribute("SubstanceReferenceInformation")]
public static FHIRAllTypes SubstanceReferenceInformation;
    [EnumLiteralAttribute("SubstanceSourceMaterial", "")]
[DescriptionAttribute("SubstanceSourceMaterial")]
public static FHIRAllTypes SubstanceSourceMaterial;
    [EnumLiteralAttribute("SubstanceSpecification", "")]
[DescriptionAttribute("SubstanceSpecification")]
public static FHIRAllTypes SubstanceSpecification;
    [EnumLiteralAttribute("SupplyDelivery", "")]
[DescriptionAttribute("SupplyDelivery")]
public static FHIRAllTypes SupplyDelivery;
    [EnumLiteralAttribute("SupplyRequest", "")]
[DescriptionAttribute("SupplyRequest")]
public static FHIRAllTypes SupplyRequest;
    [EnumLiteralAttribute("Task", "")]
[DescriptionAttribute("Task")]
public static FHIRAllTypes Task;
    [EnumLiteralAttribute("TerminologyCapabilities", "")]
[DescriptionAttribute("TerminologyCapabilities")]
public static FHIRAllTypes TerminologyCapabilities;
    [EnumLiteralAttribute("TestReport", "")]
[DescriptionAttribute("TestReport")]
public static FHIRAllTypes TestReport;
    [EnumLiteralAttribute("TestScript", "")]
[DescriptionAttribute("TestScript")]
public static FHIRAllTypes TestScript;
    [EnumLiteralAttribute("ValueSet", "")]
[DescriptionAttribute("ValueSet")]
public static FHIRAllTypes ValueSet;
    [EnumLiteralAttribute("VerificationResult", "")]
[DescriptionAttribute("VerificationResult")]
public static FHIRAllTypes VerificationResult;
    [EnumLiteralAttribute("VisionPrescription", "")]
[DescriptionAttribute("VisionPrescription")]
public static FHIRAllTypes VisionPrescription;
    [EnumLiteralAttribute("Type", "http://hl7.org/fhir/abstract-types")]
[DescriptionAttribute("Type")]
public static FHIRAllTypes Type;
    [EnumLiteralAttribute("Any", "http://hl7.org/fhir/abstract-types")]
[DescriptionAttribute("Any")]
public static FHIRAllTypes Any;
}
[FhirEnumerationAttribute("FHIRDefinedType", "http://hl7.org/fhir/ValueSet/defined-types", "http://hl7.org/fhir/resource-types")]
public enum Hl7.Fhir.Model.FHIRDefinedType : Enum {
    public int value__;
    [EnumLiteralAttribute("Address", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Address")]
public static FHIRDefinedType Address;
    [EnumLiteralAttribute("Age", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Age")]
public static FHIRDefinedType Age;
    [EnumLiteralAttribute("Annotation", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Annotation")]
public static FHIRDefinedType Annotation;
    [EnumLiteralAttribute("Attachment", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Attachment")]
public static FHIRDefinedType Attachment;
    [EnumLiteralAttribute("BackboneElement", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("BackboneElement")]
public static FHIRDefinedType BackboneElement;
    [EnumLiteralAttribute("CodeableConcept", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("CodeableConcept")]
public static FHIRDefinedType CodeableConcept;
    [EnumLiteralAttribute("Coding", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Coding")]
public static FHIRDefinedType Coding;
    [EnumLiteralAttribute("ContactDetail", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("ContactDetail")]
public static FHIRDefinedType ContactDetail;
    [EnumLiteralAttribute("ContactPoint", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("ContactPoint")]
public static FHIRDefinedType ContactPoint;
    [EnumLiteralAttribute("Contributor", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Contributor")]
public static FHIRDefinedType Contributor;
    [EnumLiteralAttribute("Count", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Count")]
public static FHIRDefinedType Count;
    [EnumLiteralAttribute("DataRequirement", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("DataRequirement")]
public static FHIRDefinedType DataRequirement;
    [EnumLiteralAttribute("Distance", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Distance")]
public static FHIRDefinedType Distance;
    [EnumLiteralAttribute("Dosage", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Dosage")]
public static FHIRDefinedType Dosage;
    [EnumLiteralAttribute("Duration", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Duration")]
public static FHIRDefinedType Duration;
    [EnumLiteralAttribute("Element", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Element")]
public static FHIRDefinedType Element;
    [EnumLiteralAttribute("ElementDefinition", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("ElementDefinition")]
public static FHIRDefinedType ElementDefinition;
    [EnumLiteralAttribute("Expression", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Expression")]
public static FHIRDefinedType Expression;
    [EnumLiteralAttribute("Extension", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Extension")]
public static FHIRDefinedType Extension;
    [EnumLiteralAttribute("HumanName", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("HumanName")]
public static FHIRDefinedType HumanName;
    [EnumLiteralAttribute("Identifier", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Identifier")]
public static FHIRDefinedType Identifier;
    [EnumLiteralAttribute("MarketingStatus", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("MarketingStatus")]
public static FHIRDefinedType MarketingStatus;
    [EnumLiteralAttribute("Meta", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Meta")]
public static FHIRDefinedType Meta;
    [EnumLiteralAttribute("Money", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Money")]
public static FHIRDefinedType Money;
    [EnumLiteralAttribute("MoneyQuantity", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("MoneyQuantity")]
public static FHIRDefinedType MoneyQuantity;
    [EnumLiteralAttribute("Narrative", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Narrative")]
public static FHIRDefinedType Narrative;
    [EnumLiteralAttribute("ParameterDefinition", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("ParameterDefinition")]
public static FHIRDefinedType ParameterDefinition;
    [EnumLiteralAttribute("Period", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Period")]
public static FHIRDefinedType Period;
    [EnumLiteralAttribute("Population", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Population")]
public static FHIRDefinedType Population;
    [EnumLiteralAttribute("ProdCharacteristic", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("ProdCharacteristic")]
public static FHIRDefinedType ProdCharacteristic;
    [EnumLiteralAttribute("ProductShelfLife", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("ProductShelfLife")]
public static FHIRDefinedType ProductShelfLife;
    [EnumLiteralAttribute("Quantity", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Quantity")]
public static FHIRDefinedType Quantity;
    [EnumLiteralAttribute("Range", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Range")]
public static FHIRDefinedType Range;
    [EnumLiteralAttribute("Ratio", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Ratio")]
public static FHIRDefinedType Ratio;
    [EnumLiteralAttribute("Reference", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Reference")]
public static FHIRDefinedType Reference;
    [EnumLiteralAttribute("RelatedArtifact", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("RelatedArtifact")]
public static FHIRDefinedType RelatedArtifact;
    [EnumLiteralAttribute("SampledData", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("SampledData")]
public static FHIRDefinedType SampledData;
    [EnumLiteralAttribute("Signature", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Signature")]
public static FHIRDefinedType Signature;
    [EnumLiteralAttribute("SimpleQuantity", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("SimpleQuantity")]
public static FHIRDefinedType SimpleQuantity;
    [EnumLiteralAttribute("SubstanceAmount", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("SubstanceAmount")]
public static FHIRDefinedType SubstanceAmount;
    [EnumLiteralAttribute("Timing", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("Timing")]
public static FHIRDefinedType Timing;
    [EnumLiteralAttribute("TriggerDefinition", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("TriggerDefinition")]
public static FHIRDefinedType TriggerDefinition;
    [EnumLiteralAttribute("UsageContext", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("UsageContext")]
public static FHIRDefinedType UsageContext;
    [EnumLiteralAttribute("base64Binary", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("base64Binary")]
public static FHIRDefinedType Base64Binary;
    [EnumLiteralAttribute("boolean", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("boolean")]
public static FHIRDefinedType Boolean;
    [EnumLiteralAttribute("canonical", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("canonical")]
public static FHIRDefinedType Canonical;
    [EnumLiteralAttribute("code", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("code")]
public static FHIRDefinedType Code;
    [EnumLiteralAttribute("date", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("date")]
public static FHIRDefinedType Date;
    [EnumLiteralAttribute("dateTime", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("dateTime")]
public static FHIRDefinedType DateTime;
    [EnumLiteralAttribute("decimal", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("decimal")]
public static FHIRDefinedType Decimal;
    [EnumLiteralAttribute("id", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("id")]
public static FHIRDefinedType Id;
    [EnumLiteralAttribute("instant", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("instant")]
public static FHIRDefinedType Instant;
    [EnumLiteralAttribute("integer", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("integer")]
public static FHIRDefinedType Integer;
    [EnumLiteralAttribute("markdown", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("markdown")]
public static FHIRDefinedType Markdown;
    [EnumLiteralAttribute("oid", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("oid")]
public static FHIRDefinedType Oid;
    [EnumLiteralAttribute("positiveInt", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("positiveInt")]
public static FHIRDefinedType PositiveInt;
    [EnumLiteralAttribute("string", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("string")]
public static FHIRDefinedType String;
    [EnumLiteralAttribute("time", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("time")]
public static FHIRDefinedType Time;
    [EnumLiteralAttribute("unsignedInt", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("unsignedInt")]
public static FHIRDefinedType UnsignedInt;
    [EnumLiteralAttribute("uri", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("uri")]
public static FHIRDefinedType Uri;
    [EnumLiteralAttribute("url", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("url")]
public static FHIRDefinedType Url;
    [EnumLiteralAttribute("uuid", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("uuid")]
public static FHIRDefinedType Uuid;
    [EnumLiteralAttribute("xhtml", "http://hl7.org/fhir/data-types")]
[DescriptionAttribute("XHTML")]
public static FHIRDefinedType Xhtml;
    [EnumLiteralAttribute("Account", "")]
[DescriptionAttribute("Account")]
public static FHIRDefinedType Account;
    [EnumLiteralAttribute("ActivityDefinition", "")]
[DescriptionAttribute("ActivityDefinition")]
public static FHIRDefinedType ActivityDefinition;
    [EnumLiteralAttribute("AdverseEvent", "")]
[DescriptionAttribute("AdverseEvent")]
public static FHIRDefinedType AdverseEvent;
    [EnumLiteralAttribute("AllergyIntolerance", "")]
[DescriptionAttribute("AllergyIntolerance")]
public static FHIRDefinedType AllergyIntolerance;
    [EnumLiteralAttribute("Appointment", "")]
[DescriptionAttribute("Appointment")]
public static FHIRDefinedType Appointment;
    [EnumLiteralAttribute("AppointmentResponse", "")]
[DescriptionAttribute("AppointmentResponse")]
public static FHIRDefinedType AppointmentResponse;
    [EnumLiteralAttribute("AuditEvent", "")]
[DescriptionAttribute("AuditEvent")]
public static FHIRDefinedType AuditEvent;
    [EnumLiteralAttribute("Basic", "")]
[DescriptionAttribute("Basic")]
public static FHIRDefinedType Basic;
    [EnumLiteralAttribute("Binary", "")]
[DescriptionAttribute("Binary")]
public static FHIRDefinedType Binary;
    [EnumLiteralAttribute("BiologicallyDerivedProduct", "")]
[DescriptionAttribute("BiologicallyDerivedProduct")]
public static FHIRDefinedType BiologicallyDerivedProduct;
    [EnumLiteralAttribute("BodyStructure", "")]
[DescriptionAttribute("BodyStructure")]
public static FHIRDefinedType BodyStructure;
    [EnumLiteralAttribute("Bundle", "")]
[DescriptionAttribute("Bundle")]
public static FHIRDefinedType Bundle;
    [EnumLiteralAttribute("CapabilityStatement", "")]
[DescriptionAttribute("CapabilityStatement")]
public static FHIRDefinedType CapabilityStatement;
    [EnumLiteralAttribute("CarePlan", "")]
[DescriptionAttribute("CarePlan")]
public static FHIRDefinedType CarePlan;
    [EnumLiteralAttribute("CareTeam", "")]
[DescriptionAttribute("CareTeam")]
public static FHIRDefinedType CareTeam;
    [EnumLiteralAttribute("CatalogEntry", "")]
[DescriptionAttribute("CatalogEntry")]
public static FHIRDefinedType CatalogEntry;
    [EnumLiteralAttribute("ChargeItem", "")]
[DescriptionAttribute("ChargeItem")]
public static FHIRDefinedType ChargeItem;
    [EnumLiteralAttribute("ChargeItemDefinition", "")]
[DescriptionAttribute("ChargeItemDefinition")]
public static FHIRDefinedType ChargeItemDefinition;
    [EnumLiteralAttribute("Claim", "")]
[DescriptionAttribute("Claim")]
public static FHIRDefinedType Claim;
    [EnumLiteralAttribute("ClaimResponse", "")]
[DescriptionAttribute("ClaimResponse")]
public static FHIRDefinedType ClaimResponse;
    [EnumLiteralAttribute("ClinicalImpression", "")]
[DescriptionAttribute("ClinicalImpression")]
public static FHIRDefinedType ClinicalImpression;
    [EnumLiteralAttribute("CodeSystem", "")]
[DescriptionAttribute("CodeSystem")]
public static FHIRDefinedType CodeSystem;
    [EnumLiteralAttribute("Communication", "")]
[DescriptionAttribute("Communication")]
public static FHIRDefinedType Communication;
    [EnumLiteralAttribute("CommunicationRequest", "")]
[DescriptionAttribute("CommunicationRequest")]
public static FHIRDefinedType CommunicationRequest;
    [EnumLiteralAttribute("CompartmentDefinition", "")]
[DescriptionAttribute("CompartmentDefinition")]
public static FHIRDefinedType CompartmentDefinition;
    [EnumLiteralAttribute("Composition", "")]
[DescriptionAttribute("Composition")]
public static FHIRDefinedType Composition;
    [EnumLiteralAttribute("ConceptMap", "")]
[DescriptionAttribute("ConceptMap")]
public static FHIRDefinedType ConceptMap;
    [EnumLiteralAttribute("Condition", "")]
[DescriptionAttribute("Condition")]
public static FHIRDefinedType Condition;
    [EnumLiteralAttribute("Consent", "")]
[DescriptionAttribute("Consent")]
public static FHIRDefinedType Consent;
    [EnumLiteralAttribute("Contract", "")]
[DescriptionAttribute("Contract")]
public static FHIRDefinedType Contract;
    [EnumLiteralAttribute("Coverage", "")]
[DescriptionAttribute("Coverage")]
public static FHIRDefinedType Coverage;
    [EnumLiteralAttribute("CoverageEligibilityRequest", "")]
[DescriptionAttribute("CoverageEligibilityRequest")]
public static FHIRDefinedType CoverageEligibilityRequest;
    [EnumLiteralAttribute("CoverageEligibilityResponse", "")]
[DescriptionAttribute("CoverageEligibilityResponse")]
public static FHIRDefinedType CoverageEligibilityResponse;
    [EnumLiteralAttribute("DetectedIssue", "")]
[DescriptionAttribute("DetectedIssue")]
public static FHIRDefinedType DetectedIssue;
    [EnumLiteralAttribute("Device", "")]
[DescriptionAttribute("Device")]
public static FHIRDefinedType Device;
    [EnumLiteralAttribute("DeviceDefinition", "")]
[DescriptionAttribute("DeviceDefinition")]
public static FHIRDefinedType DeviceDefinition;
    [EnumLiteralAttribute("DeviceMetric", "")]
[DescriptionAttribute("DeviceMetric")]
public static FHIRDefinedType DeviceMetric;
    [EnumLiteralAttribute("DeviceRequest", "")]
[DescriptionAttribute("DeviceRequest")]
public static FHIRDefinedType DeviceRequest;
    [EnumLiteralAttribute("DeviceUseStatement", "")]
[DescriptionAttribute("DeviceUseStatement")]
public static FHIRDefinedType DeviceUseStatement;
    [EnumLiteralAttribute("DiagnosticReport", "")]
[DescriptionAttribute("DiagnosticReport")]
public static FHIRDefinedType DiagnosticReport;
    [EnumLiteralAttribute("DocumentManifest", "")]
[DescriptionAttribute("DocumentManifest")]
public static FHIRDefinedType DocumentManifest;
    [EnumLiteralAttribute("DocumentReference", "")]
[DescriptionAttribute("DocumentReference")]
public static FHIRDefinedType DocumentReference;
    [EnumLiteralAttribute("DomainResource", "")]
[DescriptionAttribute("DomainResource")]
public static FHIRDefinedType DomainResource;
    [EnumLiteralAttribute("EffectEvidenceSynthesis", "")]
[DescriptionAttribute("EffectEvidenceSynthesis")]
public static FHIRDefinedType EffectEvidenceSynthesis;
    [EnumLiteralAttribute("Encounter", "")]
[DescriptionAttribute("Encounter")]
public static FHIRDefinedType Encounter;
    [EnumLiteralAttribute("Endpoint", "")]
[DescriptionAttribute("Endpoint")]
public static FHIRDefinedType Endpoint;
    [EnumLiteralAttribute("EnrollmentRequest", "")]
[DescriptionAttribute("EnrollmentRequest")]
public static FHIRDefinedType EnrollmentRequest;
    [EnumLiteralAttribute("EnrollmentResponse", "")]
[DescriptionAttribute("EnrollmentResponse")]
public static FHIRDefinedType EnrollmentResponse;
    [EnumLiteralAttribute("EpisodeOfCare", "")]
[DescriptionAttribute("EpisodeOfCare")]
public static FHIRDefinedType EpisodeOfCare;
    [EnumLiteralAttribute("EventDefinition", "")]
[DescriptionAttribute("EventDefinition")]
public static FHIRDefinedType EventDefinition;
    [EnumLiteralAttribute("Evidence", "")]
[DescriptionAttribute("Evidence")]
public static FHIRDefinedType Evidence;
    [EnumLiteralAttribute("EvidenceVariable", "")]
[DescriptionAttribute("EvidenceVariable")]
public static FHIRDefinedType EvidenceVariable;
    [EnumLiteralAttribute("ExampleScenario", "")]
[DescriptionAttribute("ExampleScenario")]
public static FHIRDefinedType ExampleScenario;
    [EnumLiteralAttribute("ExplanationOfBenefit", "")]
[DescriptionAttribute("ExplanationOfBenefit")]
public static FHIRDefinedType ExplanationOfBenefit;
    [EnumLiteralAttribute("FamilyMemberHistory", "")]
[DescriptionAttribute("FamilyMemberHistory")]
public static FHIRDefinedType FamilyMemberHistory;
    [EnumLiteralAttribute("Flag", "")]
[DescriptionAttribute("Flag")]
public static FHIRDefinedType Flag;
    [EnumLiteralAttribute("Goal", "")]
[DescriptionAttribute("Goal")]
public static FHIRDefinedType Goal;
    [EnumLiteralAttribute("GraphDefinition", "")]
[DescriptionAttribute("GraphDefinition")]
public static FHIRDefinedType GraphDefinition;
    [EnumLiteralAttribute("Group", "")]
[DescriptionAttribute("Group")]
public static FHIRDefinedType Group;
    [EnumLiteralAttribute("GuidanceResponse", "")]
[DescriptionAttribute("GuidanceResponse")]
public static FHIRDefinedType GuidanceResponse;
    [EnumLiteralAttribute("HealthcareService", "")]
[DescriptionAttribute("HealthcareService")]
public static FHIRDefinedType HealthcareService;
    [EnumLiteralAttribute("ImagingStudy", "")]
[DescriptionAttribute("ImagingStudy")]
public static FHIRDefinedType ImagingStudy;
    [EnumLiteralAttribute("Immunization", "")]
[DescriptionAttribute("Immunization")]
public static FHIRDefinedType Immunization;
    [EnumLiteralAttribute("ImmunizationEvaluation", "")]
[DescriptionAttribute("ImmunizationEvaluation")]
public static FHIRDefinedType ImmunizationEvaluation;
    [EnumLiteralAttribute("ImmunizationRecommendation", "")]
[DescriptionAttribute("ImmunizationRecommendation")]
public static FHIRDefinedType ImmunizationRecommendation;
    [EnumLiteralAttribute("ImplementationGuide", "")]
[DescriptionAttribute("ImplementationGuide")]
public static FHIRDefinedType ImplementationGuide;
    [EnumLiteralAttribute("InsurancePlan", "")]
[DescriptionAttribute("InsurancePlan")]
public static FHIRDefinedType InsurancePlan;
    [EnumLiteralAttribute("Invoice", "")]
[DescriptionAttribute("Invoice")]
public static FHIRDefinedType Invoice;
    [EnumLiteralAttribute("Library", "")]
[DescriptionAttribute("Library")]
public static FHIRDefinedType Library;
    [EnumLiteralAttribute("Linkage", "")]
[DescriptionAttribute("Linkage")]
public static FHIRDefinedType Linkage;
    [EnumLiteralAttribute("List", "")]
[DescriptionAttribute("List")]
public static FHIRDefinedType List;
    [EnumLiteralAttribute("Location", "")]
[DescriptionAttribute("Location")]
public static FHIRDefinedType Location;
    [EnumLiteralAttribute("Measure", "")]
[DescriptionAttribute("Measure")]
public static FHIRDefinedType Measure;
    [EnumLiteralAttribute("MeasureReport", "")]
[DescriptionAttribute("MeasureReport")]
public static FHIRDefinedType MeasureReport;
    [EnumLiteralAttribute("Media", "")]
[DescriptionAttribute("Media")]
public static FHIRDefinedType Media;
    [EnumLiteralAttribute("Medication", "")]
[DescriptionAttribute("Medication")]
public static FHIRDefinedType Medication;
    [EnumLiteralAttribute("MedicationAdministration", "")]
[DescriptionAttribute("MedicationAdministration")]
public static FHIRDefinedType MedicationAdministration;
    [EnumLiteralAttribute("MedicationDispense", "")]
[DescriptionAttribute("MedicationDispense")]
public static FHIRDefinedType MedicationDispense;
    [EnumLiteralAttribute("MedicationKnowledge", "")]
[DescriptionAttribute("MedicationKnowledge")]
public static FHIRDefinedType MedicationKnowledge;
    [EnumLiteralAttribute("MedicationRequest", "")]
[DescriptionAttribute("MedicationRequest")]
public static FHIRDefinedType MedicationRequest;
    [EnumLiteralAttribute("MedicationStatement", "")]
[DescriptionAttribute("MedicationStatement")]
public static FHIRDefinedType MedicationStatement;
    [EnumLiteralAttribute("MedicinalProduct", "")]
[DescriptionAttribute("MedicinalProduct")]
public static FHIRDefinedType MedicinalProduct;
    [EnumLiteralAttribute("MedicinalProductAuthorization", "")]
[DescriptionAttribute("MedicinalProductAuthorization")]
public static FHIRDefinedType MedicinalProductAuthorization;
    [EnumLiteralAttribute("MedicinalProductContraindication", "")]
[DescriptionAttribute("MedicinalProductContraindication")]
public static FHIRDefinedType MedicinalProductContraindication;
    [EnumLiteralAttribute("MedicinalProductIndication", "")]
[DescriptionAttribute("MedicinalProductIndication")]
public static FHIRDefinedType MedicinalProductIndication;
    [EnumLiteralAttribute("MedicinalProductIngredient", "")]
[DescriptionAttribute("MedicinalProductIngredient")]
public static FHIRDefinedType MedicinalProductIngredient;
    [EnumLiteralAttribute("MedicinalProductInteraction", "")]
[DescriptionAttribute("MedicinalProductInteraction")]
public static FHIRDefinedType MedicinalProductInteraction;
    [EnumLiteralAttribute("MedicinalProductManufactured", "")]
[DescriptionAttribute("MedicinalProductManufactured")]
public static FHIRDefinedType MedicinalProductManufactured;
    [EnumLiteralAttribute("MedicinalProductPackaged", "")]
[DescriptionAttribute("MedicinalProductPackaged")]
public static FHIRDefinedType MedicinalProductPackaged;
    [EnumLiteralAttribute("MedicinalProductPharmaceutical", "")]
[DescriptionAttribute("MedicinalProductPharmaceutical")]
public static FHIRDefinedType MedicinalProductPharmaceutical;
    [EnumLiteralAttribute("MedicinalProductUndesirableEffect", "")]
[DescriptionAttribute("MedicinalProductUndesirableEffect")]
public static FHIRDefinedType MedicinalProductUndesirableEffect;
    [EnumLiteralAttribute("MessageDefinition", "")]
[DescriptionAttribute("MessageDefinition")]
public static FHIRDefinedType MessageDefinition;
    [EnumLiteralAttribute("MessageHeader", "")]
[DescriptionAttribute("MessageHeader")]
public static FHIRDefinedType MessageHeader;
    [EnumLiteralAttribute("MolecularSequence", "")]
[DescriptionAttribute("MolecularSequence")]
public static FHIRDefinedType MolecularSequence;
    [EnumLiteralAttribute("NamingSystem", "")]
[DescriptionAttribute("NamingSystem")]
public static FHIRDefinedType NamingSystem;
    [EnumLiteralAttribute("NutritionOrder", "")]
[DescriptionAttribute("NutritionOrder")]
public static FHIRDefinedType NutritionOrder;
    [EnumLiteralAttribute("Observation", "")]
[DescriptionAttribute("Observation")]
public static FHIRDefinedType Observation;
    [EnumLiteralAttribute("ObservationDefinition", "")]
[DescriptionAttribute("ObservationDefinition")]
public static FHIRDefinedType ObservationDefinition;
    [EnumLiteralAttribute("OperationDefinition", "")]
[DescriptionAttribute("OperationDefinition")]
public static FHIRDefinedType OperationDefinition;
    [EnumLiteralAttribute("OperationOutcome", "")]
[DescriptionAttribute("OperationOutcome")]
public static FHIRDefinedType OperationOutcome;
    [EnumLiteralAttribute("Organization", "")]
[DescriptionAttribute("Organization")]
public static FHIRDefinedType Organization;
    [EnumLiteralAttribute("OrganizationAffiliation", "")]
[DescriptionAttribute("OrganizationAffiliation")]
public static FHIRDefinedType OrganizationAffiliation;
    [EnumLiteralAttribute("Parameters", "")]
[DescriptionAttribute("Parameters")]
public static FHIRDefinedType Parameters;
    [EnumLiteralAttribute("Patient", "")]
[DescriptionAttribute("Patient")]
public static FHIRDefinedType Patient;
    [EnumLiteralAttribute("PaymentNotice", "")]
[DescriptionAttribute("PaymentNotice")]
public static FHIRDefinedType PaymentNotice;
    [EnumLiteralAttribute("PaymentReconciliation", "")]
[DescriptionAttribute("PaymentReconciliation")]
public static FHIRDefinedType PaymentReconciliation;
    [EnumLiteralAttribute("Person", "")]
[DescriptionAttribute("Person")]
public static FHIRDefinedType Person;
    [EnumLiteralAttribute("PlanDefinition", "")]
[DescriptionAttribute("PlanDefinition")]
public static FHIRDefinedType PlanDefinition;
    [EnumLiteralAttribute("Practitioner", "")]
[DescriptionAttribute("Practitioner")]
public static FHIRDefinedType Practitioner;
    [EnumLiteralAttribute("PractitionerRole", "")]
[DescriptionAttribute("PractitionerRole")]
public static FHIRDefinedType PractitionerRole;
    [EnumLiteralAttribute("Procedure", "")]
[DescriptionAttribute("Procedure")]
public static FHIRDefinedType Procedure;
    [EnumLiteralAttribute("Provenance", "")]
[DescriptionAttribute("Provenance")]
public static FHIRDefinedType Provenance;
    [EnumLiteralAttribute("Questionnaire", "")]
[DescriptionAttribute("Questionnaire")]
public static FHIRDefinedType Questionnaire;
    [EnumLiteralAttribute("QuestionnaireResponse", "")]
[DescriptionAttribute("QuestionnaireResponse")]
public static FHIRDefinedType QuestionnaireResponse;
    [EnumLiteralAttribute("RelatedPerson", "")]
[DescriptionAttribute("RelatedPerson")]
public static FHIRDefinedType RelatedPerson;
    [EnumLiteralAttribute("RequestGroup", "")]
[DescriptionAttribute("RequestGroup")]
public static FHIRDefinedType RequestGroup;
    [EnumLiteralAttribute("ResearchDefinition", "")]
[DescriptionAttribute("ResearchDefinition")]
public static FHIRDefinedType ResearchDefinition;
    [EnumLiteralAttribute("ResearchElementDefinition", "")]
[DescriptionAttribute("ResearchElementDefinition")]
public static FHIRDefinedType ResearchElementDefinition;
    [EnumLiteralAttribute("ResearchStudy", "")]
[DescriptionAttribute("ResearchStudy")]
public static FHIRDefinedType ResearchStudy;
    [EnumLiteralAttribute("ResearchSubject", "")]
[DescriptionAttribute("ResearchSubject")]
public static FHIRDefinedType ResearchSubject;
    [EnumLiteralAttribute("Resource", "")]
[DescriptionAttribute("Resource")]
public static FHIRDefinedType Resource;
    [EnumLiteralAttribute("RiskAssessment", "")]
[DescriptionAttribute("RiskAssessment")]
public static FHIRDefinedType RiskAssessment;
    [EnumLiteralAttribute("RiskEvidenceSynthesis", "")]
[DescriptionAttribute("RiskEvidenceSynthesis")]
public static FHIRDefinedType RiskEvidenceSynthesis;
    [EnumLiteralAttribute("Schedule", "")]
[DescriptionAttribute("Schedule")]
public static FHIRDefinedType Schedule;
    [EnumLiteralAttribute("SearchParameter", "")]
[DescriptionAttribute("SearchParameter")]
public static FHIRDefinedType SearchParameter;
    [EnumLiteralAttribute("ServiceRequest", "")]
[DescriptionAttribute("ServiceRequest")]
public static FHIRDefinedType ServiceRequest;
    [EnumLiteralAttribute("Slot", "")]
[DescriptionAttribute("Slot")]
public static FHIRDefinedType Slot;
    [EnumLiteralAttribute("Specimen", "")]
[DescriptionAttribute("Specimen")]
public static FHIRDefinedType Specimen;
    [EnumLiteralAttribute("SpecimenDefinition", "")]
[DescriptionAttribute("SpecimenDefinition")]
public static FHIRDefinedType SpecimenDefinition;
    [EnumLiteralAttribute("StructureDefinition", "")]
[DescriptionAttribute("StructureDefinition")]
public static FHIRDefinedType StructureDefinition;
    [EnumLiteralAttribute("StructureMap", "")]
[DescriptionAttribute("StructureMap")]
public static FHIRDefinedType StructureMap;
    [EnumLiteralAttribute("Subscription", "")]
[DescriptionAttribute("Subscription")]
public static FHIRDefinedType Subscription;
    [EnumLiteralAttribute("Substance", "")]
[DescriptionAttribute("Substance")]
public static FHIRDefinedType Substance;
    [EnumLiteralAttribute("SubstanceNucleicAcid", "")]
[DescriptionAttribute("SubstanceNucleicAcid")]
public static FHIRDefinedType SubstanceNucleicAcid;
    [EnumLiteralAttribute("SubstancePolymer", "")]
[DescriptionAttribute("SubstancePolymer")]
public static FHIRDefinedType SubstancePolymer;
    [EnumLiteralAttribute("SubstanceProtein", "")]
[DescriptionAttribute("SubstanceProtein")]
public static FHIRDefinedType SubstanceProtein;
    [EnumLiteralAttribute("SubstanceReferenceInformation", "")]
[DescriptionAttribute("SubstanceReferenceInformation")]
public static FHIRDefinedType SubstanceReferenceInformation;
    [EnumLiteralAttribute("SubstanceSourceMaterial", "")]
[DescriptionAttribute("SubstanceSourceMaterial")]
public static FHIRDefinedType SubstanceSourceMaterial;
    [EnumLiteralAttribute("SubstanceSpecification", "")]
[DescriptionAttribute("SubstanceSpecification")]
public static FHIRDefinedType SubstanceSpecification;
    [EnumLiteralAttribute("SupplyDelivery", "")]
[DescriptionAttribute("SupplyDelivery")]
public static FHIRDefinedType SupplyDelivery;
    [EnumLiteralAttribute("SupplyRequest", "")]
[DescriptionAttribute("SupplyRequest")]
public static FHIRDefinedType SupplyRequest;
    [EnumLiteralAttribute("Task", "")]
[DescriptionAttribute("Task")]
public static FHIRDefinedType Task;
    [EnumLiteralAttribute("TerminologyCapabilities", "")]
[DescriptionAttribute("TerminologyCapabilities")]
public static FHIRDefinedType TerminologyCapabilities;
    [EnumLiteralAttribute("TestReport", "")]
[DescriptionAttribute("TestReport")]
public static FHIRDefinedType TestReport;
    [EnumLiteralAttribute("TestScript", "")]
[DescriptionAttribute("TestScript")]
public static FHIRDefinedType TestScript;
    [EnumLiteralAttribute("ValueSet", "")]
[DescriptionAttribute("ValueSet")]
public static FHIRDefinedType ValueSet;
    [EnumLiteralAttribute("VerificationResult", "")]
[DescriptionAttribute("VerificationResult")]
public static FHIRDefinedType VerificationResult;
    [EnumLiteralAttribute("VisionPrescription", "")]
[DescriptionAttribute("VisionPrescription")]
public static FHIRDefinedType VisionPrescription;
}
[FhirEnumerationAttribute("FinancialResourceStatusCodes", "http://hl7.org/fhir/ValueSet/fm-status", "http://hl7.org/fhir/fm-status")]
public enum Hl7.Fhir.Model.FinancialResourceStatusCodes : Enum {
    public int value__;
    [EnumLiteralAttribute("active", "")]
[DescriptionAttribute("Active")]
public static FinancialResourceStatusCodes Active;
    [EnumLiteralAttribute("cancelled", "")]
[DescriptionAttribute("Cancelled")]
public static FinancialResourceStatusCodes Cancelled;
    [EnumLiteralAttribute("draft", "")]
[DescriptionAttribute("Draft")]
public static FinancialResourceStatusCodes Draft;
    [EnumLiteralAttribute("entered-in-error", "")]
[DescriptionAttribute("Entered in Error")]
public static FinancialResourceStatusCodes EnteredInError;
}
[DataContractAttribute]
[FhirTypeAttribute("Flag", "http://hl7.org/fhir/StructureDefinition/Flag")]
public class Hl7.Fhir.Model.Flag : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<FlagStatus> _StatusElement;
    private List`1<CodeableConcept> _Category;
    private CodeableConcept _Code;
    private ResourceReference _Subject;
    private Period _Period;
    private ResourceReference _Encounter;
    private ResourceReference _Author;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("FlagStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<FlagStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<FlagStatus> Status { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("FlagCategory")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Category { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("FlagCode")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("period")]
[DataMemberAttribute]
public Period Period { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute("author")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Author { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<FlagStatus> get_StatusElement();
    public void set_StatusElement(Code`1<FlagStatus> value);
    public Nullable`1<FlagStatus> get_Status();
    public void set_Status(Nullable`1<FlagStatus> value);
    public List`1<CodeableConcept> get_Category();
    public void set_Category(List`1<CodeableConcept> value);
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public Period get_Period();
    public void set_Period(Period value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public ResourceReference get_Author();
    public void set_Author(ResourceReference value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Flag/<get_Children>d__50")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Flag/<get_NamedChildren>d__52")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Flag/<GetElementPairs>d__54")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Goal", "http://hl7.org/fhir/StructureDefinition/Goal")]
public class Hl7.Fhir.Model.Goal : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<GoalLifecycleStatus> _LifecycleStatusElement;
    private CodeableConcept _AchievementStatus;
    private List`1<CodeableConcept> _Category;
    private CodeableConcept _Priority;
    private CodeableConcept _Description;
    private ResourceReference _Subject;
    private DataType _Start;
    private List`1<TargetComponent> _Target;
    private Date _StatusDateElement;
    private FhirString _StatusReasonElement;
    private ResourceReference _ExpressedBy;
    private List`1<ResourceReference> _Addresses;
    private List`1<Annotation> _Note;
    private List`1<CodeableConcept> _OutcomeCode;
    private List`1<ResourceReference> _OutcomeReference;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("lifecycleStatus")]
[DeclaredTypeAttribute]
[BindingAttribute("GoalLifecycleStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<GoalLifecycleStatus> LifecycleStatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<GoalLifecycleStatus> LifecycleStatus { get; public set; }
    [FhirElementAttribute("achievementStatus")]
[BindingAttribute("GoalAchievementStatus")]
[DataMemberAttribute]
public CodeableConcept AchievementStatus { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("GoalCategory")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Category { get; public set; }
    [FhirElementAttribute("priority")]
[BindingAttribute("GoalPriority")]
[DataMemberAttribute]
public CodeableConcept Priority { get; public set; }
    [FhirElementAttribute("description")]
[BindingAttribute("GoalDescription")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept Description { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute]
[BindingAttribute("GoalStartEvent")]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Start { get; public set; }
    [FhirElementAttribute("target")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<TargetComponent> Target { get; public set; }
    [FhirElementAttribute("statusDate")]
[DataMemberAttribute]
public Date StatusDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string StatusDate { get; public set; }
    [FhirElementAttribute("statusReason")]
[DataMemberAttribute]
public FhirString StatusReasonElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string StatusReason { get; public set; }
    [FhirElementAttribute("expressedBy")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference ExpressedBy { get; public set; }
    [FhirElementAttribute("addresses")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Addresses { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("outcomeCode")]
[BindingAttribute("GoalOutcome")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> OutcomeCode { get; public set; }
    [FhirElementAttribute("outcomeReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> OutcomeReference { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<GoalLifecycleStatus> get_LifecycleStatusElement();
    public void set_LifecycleStatusElement(Code`1<GoalLifecycleStatus> value);
    public Nullable`1<GoalLifecycleStatus> get_LifecycleStatus();
    public void set_LifecycleStatus(Nullable`1<GoalLifecycleStatus> value);
    public CodeableConcept get_AchievementStatus();
    public void set_AchievementStatus(CodeableConcept value);
    public List`1<CodeableConcept> get_Category();
    public void set_Category(List`1<CodeableConcept> value);
    public CodeableConcept get_Priority();
    public void set_Priority(CodeableConcept value);
    public CodeableConcept get_Description();
    public void set_Description(CodeableConcept value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public DataType get_Start();
    public void set_Start(DataType value);
    public List`1<TargetComponent> get_Target();
    public void set_Target(List`1<TargetComponent> value);
    public Date get_StatusDateElement();
    public void set_StatusDateElement(Date value);
    public string get_StatusDate();
    public void set_StatusDate(string value);
    public FhirString get_StatusReasonElement();
    public void set_StatusReasonElement(FhirString value);
    public string get_StatusReason();
    public void set_StatusReason(string value);
    public ResourceReference get_ExpressedBy();
    public void set_ExpressedBy(ResourceReference value);
    public List`1<ResourceReference> get_Addresses();
    public void set_Addresses(List`1<ResourceReference> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public List`1<CodeableConcept> get_OutcomeCode();
    public void set_OutcomeCode(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_OutcomeReference();
    public void set_OutcomeReference(List`1<ResourceReference> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.set_Code(List`1<CodeableConcept> value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Goal/<get_Children>d__89")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Goal/<get_NamedChildren>d__91")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Goal/<GetElementPairs>d__93")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("GraphDefinition", "http://hl7.org/fhir/StructureDefinition/GraphDefinition")]
public class Hl7.Fhir.Model.GraphDefinition : DomainResource {
    private FhirUri _UrlElement;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirBoolean _ExperimentalElement;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _PurposeElement;
    private Code`1<ResourceType> _StartElement;
    private Canonical _ProfileElement;
    private List`1<LinkComponent> _Link;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("experimental")]
[DataMemberAttribute]
public FhirBoolean ExperimentalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Experimental { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("purpose")]
[DataMemberAttribute]
public Markdown PurposeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Purpose { get; public set; }
    [FhirElementAttribute("start")]
[DeclaredTypeAttribute]
[BindingAttribute("ResourceType")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ResourceType> StartElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ResourceType> Start { get; public set; }
    [FhirElementAttribute("profile")]
[DataMemberAttribute]
public Canonical ProfileElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Profile { get; public set; }
    [FhirElementAttribute("link")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<LinkComponent> Link { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public sealed virtual FhirUri get_UrlElement();
    public sealed virtual void set_UrlElement(FhirUri value);
    public sealed virtual string get_Url();
    public sealed virtual void set_Url(string value);
    public sealed virtual FhirString get_VersionElement();
    public sealed virtual void set_VersionElement(FhirString value);
    public sealed virtual string get_Version();
    public sealed virtual void set_Version(string value);
    public sealed virtual FhirString get_NameElement();
    public sealed virtual void set_NameElement(FhirString value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public sealed virtual Code`1<PublicationStatus> get_StatusElement();
    public sealed virtual void set_StatusElement(Code`1<PublicationStatus> value);
    public sealed virtual Nullable`1<PublicationStatus> get_Status();
    public sealed virtual void set_Status(Nullable`1<PublicationStatus> value);
    public sealed virtual FhirBoolean get_ExperimentalElement();
    public sealed virtual void set_ExperimentalElement(FhirBoolean value);
    public sealed virtual Nullable`1<bool> get_Experimental();
    public sealed virtual void set_Experimental(Nullable`1<bool> value);
    public sealed virtual FhirDateTime get_DateElement();
    public sealed virtual void set_DateElement(FhirDateTime value);
    public sealed virtual string get_Date();
    public sealed virtual void set_Date(string value);
    public sealed virtual FhirString get_PublisherElement();
    public sealed virtual void set_PublisherElement(FhirString value);
    public sealed virtual string get_Publisher();
    public sealed virtual void set_Publisher(string value);
    public sealed virtual List`1<ContactDetail> get_Contact();
    public sealed virtual void set_Contact(List`1<ContactDetail> value);
    public sealed virtual Markdown get_DescriptionElement();
    public sealed virtual void set_DescriptionElement(Markdown value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual List`1<UsageContext> get_UseContext();
    public sealed virtual void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public sealed virtual Markdown get_PurposeElement();
    public sealed virtual void set_PurposeElement(Markdown value);
    public sealed virtual string get_Purpose();
    public sealed virtual void set_Purpose(string value);
    public Code`1<ResourceType> get_StartElement();
    public void set_StartElement(Code`1<ResourceType> value);
    public Nullable`1<ResourceType> get_Start();
    public void set_Start(Nullable`1<ResourceType> value);
    public Canonical get_ProfileElement();
    public void set_ProfileElement(Canonical value);
    public string get_Profile();
    public void set_Profile(string value);
    public List`1<LinkComponent> get_Link();
    public void set_Link(List`1<LinkComponent> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.GraphDefinition/<get_Children>d__105")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.GraphDefinition/<get_NamedChildren>d__107")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.GraphDefinition/<GetElementPairs>d__109")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Group", "http://hl7.org/fhir/StructureDefinition/Group")]
public class Hl7.Fhir.Model.Group : DomainResource {
    private List`1<Identifier> _Identifier;
    private FhirBoolean _ActiveElement;
    private Code`1<GroupType> _TypeElement;
    private FhirBoolean _ActualElement;
    private CodeableConcept _Code;
    private FhirString _NameElement;
    private UnsignedInt _QuantityElement;
    private ResourceReference _ManagingEntity;
    private List`1<CharacteristicComponent> _Characteristic;
    private List`1<MemberComponent> _Member;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("active")]
[DataMemberAttribute]
public FhirBoolean ActiveElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Active { get; public set; }
    [FhirElementAttribute("type")]
[DeclaredTypeAttribute]
[BindingAttribute("GroupType")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<GroupType> TypeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<GroupType> Type { get; public set; }
    [FhirElementAttribute("actual")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirBoolean ActualElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Actual { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("GroupKind")]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("quantity")]
[DataMemberAttribute]
public UnsignedInt QuantityElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<int> Quantity { get; public set; }
    [FhirElementAttribute("managingEntity")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference ManagingEntity { get; public set; }
    [FhirElementAttribute("characteristic")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CharacteristicComponent> Characteristic { get; public set; }
    [FhirElementAttribute("member")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<MemberComponent> Member { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirBoolean get_ActiveElement();
    public void set_ActiveElement(FhirBoolean value);
    public Nullable`1<bool> get_Active();
    public void set_Active(Nullable`1<bool> value);
    public Code`1<GroupType> get_TypeElement();
    public void set_TypeElement(Code`1<GroupType> value);
    public Nullable`1<GroupType> get_Type();
    public void set_Type(Nullable`1<GroupType> value);
    public FhirBoolean get_ActualElement();
    public void set_ActualElement(FhirBoolean value);
    public Nullable`1<bool> get_Actual();
    public void set_Actual(Nullable`1<bool> value);
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public UnsignedInt get_QuantityElement();
    public void set_QuantityElement(UnsignedInt value);
    public Nullable`1<int> get_Quantity();
    public void set_Quantity(Nullable`1<int> value);
    public ResourceReference get_ManagingEntity();
    public void set_ManagingEntity(ResourceReference value);
    public List`1<CharacteristicComponent> get_Characteristic();
    public void set_Characteristic(List`1<CharacteristicComponent> value);
    public List`1<MemberComponent> get_Member();
    public void set_Member(List`1<MemberComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Group/<get_Children>d__72")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Group/<get_NamedChildren>d__74")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Group/<GetElementPairs>d__76")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("GroupMeasure", "http://hl7.org/fhir/ValueSet/group-measure", "http://hl7.org/fhir/group-measure")]
public enum Hl7.Fhir.Model.GroupMeasureCode : Enum {
    public int value__;
    [EnumLiteralAttribute("mean", "")]
[DescriptionAttribute("Mean")]
public static GroupMeasureCode Mean;
    [EnumLiteralAttribute("median", "")]
[DescriptionAttribute("Median")]
public static GroupMeasureCode Median;
    [EnumLiteralAttribute("mean-of-mean", "")]
[DescriptionAttribute("Mean of Study Means")]
public static GroupMeasureCode MeanOfMean;
    [EnumLiteralAttribute("mean-of-median", "")]
[DescriptionAttribute("Mean of Study Medins")]
public static GroupMeasureCode MeanOfMedian;
    [EnumLiteralAttribute("median-of-mean", "")]
[DescriptionAttribute("Median of Study Means")]
public static GroupMeasureCode MedianOfMean;
    [EnumLiteralAttribute("median-of-median", "")]
[DescriptionAttribute("Median of Study Medians")]
public static GroupMeasureCode MedianOfMedian;
}
[DataContractAttribute]
[FhirTypeAttribute("GuidanceResponse", "http://hl7.org/fhir/StructureDefinition/GuidanceResponse")]
public class Hl7.Fhir.Model.GuidanceResponse : DomainResource {
    private Identifier _RequestIdentifier;
    private List`1<Identifier> _Identifier;
    private DataType _Module;
    private Code`1<GuidanceResponseStatus> _StatusElement;
    private ResourceReference _Subject;
    private ResourceReference _Encounter;
    private FhirDateTime _OccurrenceDateTimeElement;
    private ResourceReference _Performer;
    private List`1<CodeableConcept> _ReasonCode;
    private List`1<ResourceReference> _ReasonReference;
    private List`1<Annotation> _Note;
    private List`1<ResourceReference> _EvaluationMessage;
    private ResourceReference _OutputParameters;
    private ResourceReference _Result;
    private List`1<DataRequirement> _DataRequirement;
    public string TypeName { get; }
    [FhirElementAttribute("requestIdentifier")]
[DataMemberAttribute]
public Identifier RequestIdentifier { get; public set; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public DataType Module { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("GuidanceResponseStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<GuidanceResponseStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<GuidanceResponseStatus> Status { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute("occurrenceDateTime")]
[DataMemberAttribute]
public FhirDateTime OccurrenceDateTimeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string OccurrenceDateTime { get; public set; }
    [FhirElementAttribute("performer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Performer { get; public set; }
    [FhirElementAttribute("reasonCode")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ReasonCode { get; public set; }
    [FhirElementAttribute("reasonReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ReasonReference { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("evaluationMessage")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> EvaluationMessage { get; public set; }
    [FhirElementAttribute("outputParameters")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference OutputParameters { get; public set; }
    [FhirElementAttribute("result")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Result { get; public set; }
    [FhirElementAttribute("dataRequirement")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<DataRequirement> DataRequirement { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private DataType Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.DataType>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Identifier get_RequestIdentifier();
    public void set_RequestIdentifier(Identifier value);
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public DataType get_Module();
    public void set_Module(DataType value);
    public Code`1<GuidanceResponseStatus> get_StatusElement();
    public void set_StatusElement(Code`1<GuidanceResponseStatus> value);
    public Nullable`1<GuidanceResponseStatus> get_Status();
    public void set_Status(Nullable`1<GuidanceResponseStatus> value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public FhirDateTime get_OccurrenceDateTimeElement();
    public void set_OccurrenceDateTimeElement(FhirDateTime value);
    public string get_OccurrenceDateTime();
    public void set_OccurrenceDateTime(string value);
    public ResourceReference get_Performer();
    public void set_Performer(ResourceReference value);
    public List`1<CodeableConcept> get_ReasonCode();
    public void set_ReasonCode(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_ReasonReference();
    public void set_ReasonReference(List`1<ResourceReference> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public List`1<ResourceReference> get_EvaluationMessage();
    public void set_EvaluationMessage(List`1<ResourceReference> value);
    public ResourceReference get_OutputParameters();
    public void set_OutputParameters(ResourceReference value);
    public ResourceReference get_Result();
    public void set_Result(ResourceReference value);
    public List`1<DataRequirement> get_DataRequirement();
    public void set_DataRequirement(List`1<DataRequirement> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override DataType Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.DataType>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.DataType>.set_Code(DataType value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.GuidanceResponse/<get_Children>d__81")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.GuidanceResponse/<get_NamedChildren>d__83")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.GuidanceResponse/<GetElementPairs>d__85")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("HealthcareService", "http://hl7.org/fhir/StructureDefinition/HealthcareService")]
public class Hl7.Fhir.Model.HealthcareService : DomainResource {
    private List`1<Identifier> _Identifier;
    private FhirBoolean _ActiveElement;
    private ResourceReference _ProvidedBy;
    private List`1<CodeableConcept> _Category;
    private List`1<CodeableConcept> _Type;
    private List`1<CodeableConcept> _Specialty;
    private List`1<ResourceReference> _Location;
    private FhirString _NameElement;
    private FhirString _CommentElement;
    private Markdown _ExtraDetailsElement;
    private Attachment _Photo;
    private List`1<ContactPoint> _Telecom;
    private List`1<ResourceReference> _CoverageArea;
    private List`1<CodeableConcept> _ServiceProvisionCode;
    private List`1<EligibilityComponent> _Eligibility;
    private List`1<CodeableConcept> _Program;
    private List`1<CodeableConcept> _Characteristic;
    private List`1<CodeableConcept> _Communication;
    private List`1<CodeableConcept> _ReferralMethod;
    private FhirBoolean _AppointmentRequiredElement;
    private List`1<AvailableTimeComponent> _AvailableTime;
    private List`1<NotAvailableComponent> _NotAvailable;
    private FhirString _AvailabilityExceptionsElement;
    private List`1<ResourceReference> _Endpoint;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("active")]
[DataMemberAttribute]
public FhirBoolean ActiveElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Active { get; public set; }
    [FhirElementAttribute("providedBy")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference ProvidedBy { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("service-category")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Category { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("service-type")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Type { get; public set; }
    [FhirElementAttribute("specialty")]
[BindingAttribute("service-specialty")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Specialty { get; public set; }
    [FhirElementAttribute("location")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Location { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("comment")]
[DataMemberAttribute]
public FhirString CommentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Comment { get; public set; }
    [FhirElementAttribute("extraDetails")]
[DataMemberAttribute]
public Markdown ExtraDetailsElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ExtraDetails { get; public set; }
    [FhirElementAttribute("photo")]
[DataMemberAttribute]
public Attachment Photo { get; public set; }
    [FhirElementAttribute("telecom")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactPoint> Telecom { get; public set; }
    [FhirElementAttribute("coverageArea")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> CoverageArea { get; public set; }
    [FhirElementAttribute("serviceProvisionCode")]
[BindingAttribute("ServiceProvisionConditions")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ServiceProvisionCode { get; public set; }
    [FhirElementAttribute("eligibility")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<EligibilityComponent> Eligibility { get; public set; }
    [FhirElementAttribute("program")]
[BindingAttribute("Program")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Program { get; public set; }
    [FhirElementAttribute("characteristic")]
[BindingAttribute("ServiceCharacteristic")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Characteristic { get; public set; }
    [FhirElementAttribute("communication")]
[BindingAttribute("Language")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Communication { get; public set; }
    [FhirElementAttribute("referralMethod")]
[BindingAttribute("ReferralMethod")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ReferralMethod { get; public set; }
    [FhirElementAttribute("appointmentRequired")]
[DataMemberAttribute]
public FhirBoolean AppointmentRequiredElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> AppointmentRequired { get; public set; }
    [FhirElementAttribute("availableTime")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<AvailableTimeComponent> AvailableTime { get; public set; }
    [FhirElementAttribute("notAvailable")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<NotAvailableComponent> NotAvailable { get; public set; }
    [FhirElementAttribute("availabilityExceptions")]
[DataMemberAttribute]
public FhirString AvailabilityExceptionsElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string AvailabilityExceptions { get; public set; }
    [FhirElementAttribute("endpoint")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Endpoint { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirBoolean get_ActiveElement();
    public void set_ActiveElement(FhirBoolean value);
    public Nullable`1<bool> get_Active();
    public void set_Active(Nullable`1<bool> value);
    public ResourceReference get_ProvidedBy();
    public void set_ProvidedBy(ResourceReference value);
    public List`1<CodeableConcept> get_Category();
    public void set_Category(List`1<CodeableConcept> value);
    public List`1<CodeableConcept> get_Type();
    public void set_Type(List`1<CodeableConcept> value);
    public List`1<CodeableConcept> get_Specialty();
    public void set_Specialty(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_Location();
    public void set_Location(List`1<ResourceReference> value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public FhirString get_CommentElement();
    public void set_CommentElement(FhirString value);
    public string get_Comment();
    public void set_Comment(string value);
    public Markdown get_ExtraDetailsElement();
    public void set_ExtraDetailsElement(Markdown value);
    public string get_ExtraDetails();
    public void set_ExtraDetails(string value);
    public Attachment get_Photo();
    public void set_Photo(Attachment value);
    public List`1<ContactPoint> get_Telecom();
    public void set_Telecom(List`1<ContactPoint> value);
    public List`1<ResourceReference> get_CoverageArea();
    public void set_CoverageArea(List`1<ResourceReference> value);
    public List`1<CodeableConcept> get_ServiceProvisionCode();
    public void set_ServiceProvisionCode(List`1<CodeableConcept> value);
    public List`1<EligibilityComponent> get_Eligibility();
    public void set_Eligibility(List`1<EligibilityComponent> value);
    public List`1<CodeableConcept> get_Program();
    public void set_Program(List`1<CodeableConcept> value);
    public List`1<CodeableConcept> get_Characteristic();
    public void set_Characteristic(List`1<CodeableConcept> value);
    public List`1<CodeableConcept> get_Communication();
    public void set_Communication(List`1<CodeableConcept> value);
    public List`1<CodeableConcept> get_ReferralMethod();
    public void set_ReferralMethod(List`1<CodeableConcept> value);
    public FhirBoolean get_AppointmentRequiredElement();
    public void set_AppointmentRequiredElement(FhirBoolean value);
    public Nullable`1<bool> get_AppointmentRequired();
    public void set_AppointmentRequired(Nullable`1<bool> value);
    public List`1<AvailableTimeComponent> get_AvailableTime();
    public void set_AvailableTime(List`1<AvailableTimeComponent> value);
    public List`1<NotAvailableComponent> get_NotAvailable();
    public void set_NotAvailable(List`1<NotAvailableComponent> value);
    public FhirString get_AvailabilityExceptionsElement();
    public void set_AvailabilityExceptionsElement(FhirString value);
    public string get_AvailabilityExceptions();
    public void set_AvailabilityExceptions(string value);
    public List`1<ResourceReference> get_Endpoint();
    public void set_Endpoint(List`1<ResourceReference> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.set_Code(List`1<CodeableConcept> value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.HealthcareService/<get_Children>d__131")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.HealthcareService/<get_NamedChildren>d__133")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.HealthcareService/<GetElementPairs>d__135")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("HumanName", "http://hl7.org/fhir/StructureDefinition/HumanName")]
[DebuggerDisplayAttribute("\{{DebuggerDisplay,nq}}")]
public class Hl7.Fhir.Model.HumanName : DataType {
    private Code`1<NameUse> _UseElement;
    private FhirString _TextElement;
    private FhirString _FamilyElement;
    private List`1<FhirString> _GivenElement;
    private List`1<FhirString> _PrefixElement;
    private List`1<FhirString> _SuffixElement;
    private Period _Period;
    public string TypeName { get; }
    [FhirElementAttribute("use")]
[DeclaredTypeAttribute]
[BindingAttribute("NameUse")]
[DataMemberAttribute]
public Code`1<NameUse> UseElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<NameUse> Use { get; public set; }
    [FhirElementAttribute("text")]
[DataMemberAttribute]
public FhirString TextElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Text { get; public set; }
    [FhirElementAttribute("family")]
[DataMemberAttribute]
public FhirString FamilyElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Family { get; public set; }
    [FhirElementAttribute("given")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> GivenElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Given { get; public set; }
    [FhirElementAttribute("prefix")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> PrefixElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Prefix { get; public set; }
    [FhirElementAttribute("suffix")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> SuffixElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Suffix { get; public set; }
    [FhirElementAttribute("period")]
[DataMemberAttribute]
public Period Period { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    [DebuggerBrowsableAttribute("0")]
private string DebuggerDisplay { get; }
    public virtual string get_TypeName();
    public Code`1<NameUse> get_UseElement();
    public void set_UseElement(Code`1<NameUse> value);
    public Nullable`1<NameUse> get_Use();
    public void set_Use(Nullable`1<NameUse> value);
    public FhirString get_TextElement();
    public void set_TextElement(FhirString value);
    public string get_Text();
    public void set_Text(string value);
    public FhirString get_FamilyElement();
    public void set_FamilyElement(FhirString value);
    public string get_Family();
    public void set_Family(string value);
    public List`1<FhirString> get_GivenElement();
    public void set_GivenElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_Given();
    public void set_Given(IEnumerable`1<string> value);
    public List`1<FhirString> get_PrefixElement();
    public void set_PrefixElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_Prefix();
    public void set_Prefix(IEnumerable`1<string> value);
    public List`1<FhirString> get_SuffixElement();
    public void set_SuffixElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_Suffix();
    public void set_Suffix(IEnumerable`1<string> value);
    public Period get_Period();
    public void set_Period(Period value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.HumanName/<get_Children>d__54")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.HumanName/<get_NamedChildren>d__56")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.HumanName/<GetElementPairs>d__58")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    private string get_DebuggerDisplay();
    public virtual string ToString();
    public static HumanName ForFamily(string family);
    public HumanName WithGiven(string given);
    public HumanName WithPrefix(string prefix);
    public HumanName WithSuffix(string prefix);
    public HumanName AndFamily(string family);
    public List`1<HumanName> AsList();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[ObsoleteAttribute("This resource was removed in R4", "True")]
public class Hl7.Fhir.Model.ImagingManifest : object {
}
[DataContractAttribute]
[FhirTypeAttribute("ImagingStudy", "http://hl7.org/fhir/StructureDefinition/ImagingStudy")]
public class Hl7.Fhir.Model.ImagingStudy : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<ImagingStudyStatus> _StatusElement;
    private List`1<Coding> _Modality;
    private ResourceReference _Subject;
    private ResourceReference _Encounter;
    private FhirDateTime _StartedElement;
    private List`1<ResourceReference> _BasedOn;
    private ResourceReference _Referrer;
    private List`1<ResourceReference> _Interpreter;
    private List`1<ResourceReference> _Endpoint;
    private UnsignedInt _NumberOfSeriesElement;
    private UnsignedInt _NumberOfInstancesElement;
    private ResourceReference _ProcedureReference;
    private List`1<CodeableConcept> _ProcedureCode;
    private ResourceReference _Location;
    private List`1<CodeableConcept> _ReasonCode;
    private List`1<ResourceReference> _ReasonReference;
    private List`1<Annotation> _Note;
    private FhirString _DescriptionElement;
    private List`1<SeriesComponent> _Series;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("ImagingStudyStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ImagingStudyStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ImagingStudyStatus> Status { get; public set; }
    [FhirElementAttribute("modality")]
[BindingAttribute("ImagingModality")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Coding> Modality { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute("started")]
[DataMemberAttribute]
public FhirDateTime StartedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Started { get; public set; }
    [FhirElementAttribute("basedOn")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> BasedOn { get; public set; }
    [FhirElementAttribute("referrer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Referrer { get; public set; }
    [FhirElementAttribute("interpreter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Interpreter { get; public set; }
    [FhirElementAttribute("endpoint")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Endpoint { get; public set; }
    [FhirElementAttribute("numberOfSeries")]
[DataMemberAttribute]
public UnsignedInt NumberOfSeriesElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<int> NumberOfSeries { get; public set; }
    [FhirElementAttribute("numberOfInstances")]
[DataMemberAttribute]
public UnsignedInt NumberOfInstancesElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<int> NumberOfInstances { get; public set; }
    [FhirElementAttribute("procedureReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference ProcedureReference { get; public set; }
    [FhirElementAttribute("procedureCode")]
[BindingAttribute("ImagingProcedureCode")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ProcedureCode { get; public set; }
    [FhirElementAttribute("location")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Location { get; public set; }
    [FhirElementAttribute("reasonCode")]
[BindingAttribute("ImagingReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ReasonCode { get; public set; }
    [FhirElementAttribute("reasonReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ReasonReference { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public FhirString DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("series")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<SeriesComponent> Series { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<ImagingStudyStatus> get_StatusElement();
    public void set_StatusElement(Code`1<ImagingStudyStatus> value);
    public Nullable`1<ImagingStudyStatus> get_Status();
    public void set_Status(Nullable`1<ImagingStudyStatus> value);
    public List`1<Coding> get_Modality();
    public void set_Modality(List`1<Coding> value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public FhirDateTime get_StartedElement();
    public void set_StartedElement(FhirDateTime value);
    public string get_Started();
    public void set_Started(string value);
    public List`1<ResourceReference> get_BasedOn();
    public void set_BasedOn(List`1<ResourceReference> value);
    public ResourceReference get_Referrer();
    public void set_Referrer(ResourceReference value);
    public List`1<ResourceReference> get_Interpreter();
    public void set_Interpreter(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Endpoint();
    public void set_Endpoint(List`1<ResourceReference> value);
    public UnsignedInt get_NumberOfSeriesElement();
    public void set_NumberOfSeriesElement(UnsignedInt value);
    public Nullable`1<int> get_NumberOfSeries();
    public void set_NumberOfSeries(Nullable`1<int> value);
    public UnsignedInt get_NumberOfInstancesElement();
    public void set_NumberOfInstancesElement(UnsignedInt value);
    public Nullable`1<int> get_NumberOfInstances();
    public void set_NumberOfInstances(Nullable`1<int> value);
    public ResourceReference get_ProcedureReference();
    public void set_ProcedureReference(ResourceReference value);
    public List`1<CodeableConcept> get_ProcedureCode();
    public void set_ProcedureCode(List`1<CodeableConcept> value);
    public ResourceReference get_Location();
    public void set_Location(ResourceReference value);
    public List`1<CodeableConcept> get_ReasonCode();
    public void set_ReasonCode(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_ReasonReference();
    public void set_ReasonReference(List`1<ResourceReference> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public FhirString get_DescriptionElement();
    public void set_DescriptionElement(FhirString value);
    public string get_Description();
    public void set_Description(string value);
    public List`1<SeriesComponent> get_Series();
    public void set_Series(List`1<SeriesComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ImagingStudy/<get_Children>d__109")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ImagingStudy/<get_NamedChildren>d__111")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ImagingStudy/<GetElementPairs>d__113")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Immunization", "http://hl7.org/fhir/StructureDefinition/Immunization")]
public class Hl7.Fhir.Model.Immunization : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<ImmunizationStatusCodes> _StatusElement;
    private CodeableConcept _StatusReason;
    private CodeableConcept _VaccineCode;
    private ResourceReference _Patient;
    private ResourceReference _Encounter;
    private DataType _Occurrence;
    private FhirDateTime _RecordedElement;
    private FhirBoolean _PrimarySourceElement;
    private CodeableConcept _ReportOrigin;
    private ResourceReference _Location;
    private ResourceReference _Manufacturer;
    private FhirString _LotNumberElement;
    private Date _ExpirationDateElement;
    private CodeableConcept _Site;
    private CodeableConcept _Route;
    private Quantity _DoseQuantity;
    private List`1<PerformerComponent> _Performer;
    private List`1<Annotation> _Note;
    private List`1<CodeableConcept> _ReasonCode;
    private List`1<ResourceReference> _ReasonReference;
    private FhirBoolean _IsSubpotentElement;
    private List`1<CodeableConcept> _SubpotentReason;
    private List`1<EducationComponent> _Education;
    private List`1<CodeableConcept> _ProgramEligibility;
    private CodeableConcept _FundingSource;
    private List`1<ReactionComponent> _Reaction;
    private List`1<ProtocolAppliedComponent> _ProtocolApplied;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("ImmunizationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ImmunizationStatusCodes> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ImmunizationStatusCodes> Status { get; public set; }
    [FhirElementAttribute("statusReason")]
[BindingAttribute("ImmunizationStatusReason")]
[DataMemberAttribute]
public CodeableConcept StatusReason { get; public set; }
    [FhirElementAttribute("vaccineCode")]
[BindingAttribute("VaccineCode")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept VaccineCode { get; public set; }
    [FhirElementAttribute("patient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Patient { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public DataType Occurrence { get; public set; }
    [FhirElementAttribute("recorded")]
[DataMemberAttribute]
public FhirDateTime RecordedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Recorded { get; public set; }
    [FhirElementAttribute("primarySource")]
[DataMemberAttribute]
public FhirBoolean PrimarySourceElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> PrimarySource { get; public set; }
    [FhirElementAttribute("reportOrigin")]
[BindingAttribute("ImmunizationReportOrigin")]
[DataMemberAttribute]
public CodeableConcept ReportOrigin { get; public set; }
    [FhirElementAttribute("location")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Location { get; public set; }
    [FhirElementAttribute("manufacturer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Manufacturer { get; public set; }
    [FhirElementAttribute("lotNumber")]
[DataMemberAttribute]
public FhirString LotNumberElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string LotNumber { get; public set; }
    [FhirElementAttribute("expirationDate")]
[DataMemberAttribute]
public Date ExpirationDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ExpirationDate { get; public set; }
    [FhirElementAttribute("site")]
[BindingAttribute("ImmunizationSite")]
[DataMemberAttribute]
public CodeableConcept Site { get; public set; }
    [FhirElementAttribute("route")]
[BindingAttribute("ImmunizationRoute")]
[DataMemberAttribute]
public CodeableConcept Route { get; public set; }
    [FhirElementAttribute("doseQuantity")]
[DataMemberAttribute]
public Quantity DoseQuantity { get; public set; }
    [FhirElementAttribute("performer")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<PerformerComponent> Performer { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("reasonCode")]
[BindingAttribute("ImmunizationReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ReasonCode { get; public set; }
    [FhirElementAttribute("reasonReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ReasonReference { get; public set; }
    [FhirElementAttribute("isSubpotent")]
[DataMemberAttribute]
public FhirBoolean IsSubpotentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> IsSubpotent { get; public set; }
    [FhirElementAttribute("subpotentReason")]
[BindingAttribute("SubpotentReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> SubpotentReason { get; public set; }
    [FhirElementAttribute("education")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<EducationComponent> Education { get; public set; }
    [FhirElementAttribute("programEligibility")]
[BindingAttribute("ProgramEligibility")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ProgramEligibility { get; public set; }
    [FhirElementAttribute("fundingSource")]
[BindingAttribute("FundingSource")]
[DataMemberAttribute]
public CodeableConcept FundingSource { get; public set; }
    [FhirElementAttribute("reaction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ReactionComponent> Reaction { get; public set; }
    [FhirElementAttribute("protocolApplied")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ProtocolAppliedComponent> ProtocolApplied { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<ImmunizationStatusCodes> get_StatusElement();
    public void set_StatusElement(Code`1<ImmunizationStatusCodes> value);
    public Nullable`1<ImmunizationStatusCodes> get_Status();
    public void set_Status(Nullable`1<ImmunizationStatusCodes> value);
    public CodeableConcept get_StatusReason();
    public void set_StatusReason(CodeableConcept value);
    public CodeableConcept get_VaccineCode();
    public void set_VaccineCode(CodeableConcept value);
    public ResourceReference get_Patient();
    public void set_Patient(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public DataType get_Occurrence();
    public void set_Occurrence(DataType value);
    public FhirDateTime get_RecordedElement();
    public void set_RecordedElement(FhirDateTime value);
    public string get_Recorded();
    public void set_Recorded(string value);
    public FhirBoolean get_PrimarySourceElement();
    public void set_PrimarySourceElement(FhirBoolean value);
    public Nullable`1<bool> get_PrimarySource();
    public void set_PrimarySource(Nullable`1<bool> value);
    public CodeableConcept get_ReportOrigin();
    public void set_ReportOrigin(CodeableConcept value);
    public ResourceReference get_Location();
    public void set_Location(ResourceReference value);
    public ResourceReference get_Manufacturer();
    public void set_Manufacturer(ResourceReference value);
    public FhirString get_LotNumberElement();
    public void set_LotNumberElement(FhirString value);
    public string get_LotNumber();
    public void set_LotNumber(string value);
    public Date get_ExpirationDateElement();
    public void set_ExpirationDateElement(Date value);
    public string get_ExpirationDate();
    public void set_ExpirationDate(string value);
    public CodeableConcept get_Site();
    public void set_Site(CodeableConcept value);
    public CodeableConcept get_Route();
    public void set_Route(CodeableConcept value);
    public Quantity get_DoseQuantity();
    public void set_DoseQuantity(Quantity value);
    public List`1<PerformerComponent> get_Performer();
    public void set_Performer(List`1<PerformerComponent> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public List`1<CodeableConcept> get_ReasonCode();
    public void set_ReasonCode(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_ReasonReference();
    public void set_ReasonReference(List`1<ResourceReference> value);
    public FhirBoolean get_IsSubpotentElement();
    public void set_IsSubpotentElement(FhirBoolean value);
    public Nullable`1<bool> get_IsSubpotent();
    public void set_IsSubpotent(Nullable`1<bool> value);
    public List`1<CodeableConcept> get_SubpotentReason();
    public void set_SubpotentReason(List`1<CodeableConcept> value);
    public List`1<EducationComponent> get_Education();
    public void set_Education(List`1<EducationComponent> value);
    public List`1<CodeableConcept> get_ProgramEligibility();
    public void set_ProgramEligibility(List`1<CodeableConcept> value);
    public CodeableConcept get_FundingSource();
    public void set_FundingSource(CodeableConcept value);
    public List`1<ReactionComponent> get_Reaction();
    public void set_Reaction(List`1<ReactionComponent> value);
    public List`1<ProtocolAppliedComponent> get_ProtocolApplied();
    public void set_ProtocolApplied(List`1<ProtocolAppliedComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Immunization/<get_Children>d__149")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Immunization/<get_NamedChildren>d__151")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Immunization/<GetElementPairs>d__153")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("ImmunizationEvaluation", "http://hl7.org/fhir/StructureDefinition/ImmunizationEvaluation")]
public class Hl7.Fhir.Model.ImmunizationEvaluation : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<ImmunizationEvaluationStatusCodes> _StatusElement;
    private ResourceReference _Patient;
    private FhirDateTime _DateElement;
    private ResourceReference _Authority;
    private CodeableConcept _TargetDisease;
    private ResourceReference _ImmunizationEvent;
    private CodeableConcept _DoseStatus;
    private List`1<CodeableConcept> _DoseStatusReason;
    private FhirString _DescriptionElement;
    private FhirString _SeriesElement;
    private DataType _DoseNumber;
    private DataType _SeriesDoses;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("ImmunizationEvaluationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ImmunizationEvaluationStatusCodes> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ImmunizationEvaluationStatusCodes> Status { get; public set; }
    [FhirElementAttribute("patient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Patient { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("authority")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Authority { get; public set; }
    [FhirElementAttribute("targetDisease")]
[BindingAttribute("EvaluationTargetDisease")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept TargetDisease { get; public set; }
    [FhirElementAttribute("immunizationEvent")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference ImmunizationEvent { get; public set; }
    [FhirElementAttribute("doseStatus")]
[BindingAttribute("EvaluationDoseStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept DoseStatus { get; public set; }
    [FhirElementAttribute("doseStatusReason")]
[BindingAttribute("EvaluationDoseStatusReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> DoseStatusReason { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public FhirString DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("series")]
[DataMemberAttribute]
public FhirString SeriesElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Series { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType DoseNumber { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType SeriesDoses { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<ImmunizationEvaluationStatusCodes> get_StatusElement();
    public void set_StatusElement(Code`1<ImmunizationEvaluationStatusCodes> value);
    public Nullable`1<ImmunizationEvaluationStatusCodes> get_Status();
    public void set_Status(Nullable`1<ImmunizationEvaluationStatusCodes> value);
    public ResourceReference get_Patient();
    public void set_Patient(ResourceReference value);
    public FhirDateTime get_DateElement();
    public void set_DateElement(FhirDateTime value);
    public string get_Date();
    public void set_Date(string value);
    public ResourceReference get_Authority();
    public void set_Authority(ResourceReference value);
    public CodeableConcept get_TargetDisease();
    public void set_TargetDisease(CodeableConcept value);
    public ResourceReference get_ImmunizationEvent();
    public void set_ImmunizationEvent(ResourceReference value);
    public CodeableConcept get_DoseStatus();
    public void set_DoseStatus(CodeableConcept value);
    public List`1<CodeableConcept> get_DoseStatusReason();
    public void set_DoseStatusReason(List`1<CodeableConcept> value);
    public FhirString get_DescriptionElement();
    public void set_DescriptionElement(FhirString value);
    public string get_Description();
    public void set_Description(string value);
    public FhirString get_SeriesElement();
    public void set_SeriesElement(FhirString value);
    public string get_Series();
    public void set_Series(string value);
    public DataType get_DoseNumber();
    public void set_DoseNumber(DataType value);
    public DataType get_SeriesDoses();
    public void set_SeriesDoses(DataType value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ImmunizationEvaluation/<get_Children>d__75")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ImmunizationEvaluation/<get_NamedChildren>d__77")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ImmunizationEvaluation/<GetElementPairs>d__79")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("ImmunizationRecommendation", "http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation")]
public class Hl7.Fhir.Model.ImmunizationRecommendation : DomainResource {
    private List`1<Identifier> _Identifier;
    private ResourceReference _Patient;
    private FhirDateTime _DateElement;
    private ResourceReference _Authority;
    private List`1<RecommendationComponent> _Recommendation;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("patient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Patient { get; public set; }
    [FhirElementAttribute("date")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("authority")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Authority { get; public set; }
    [FhirElementAttribute("recommendation")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RecommendationComponent> Recommendation { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public ResourceReference get_Patient();
    public void set_Patient(ResourceReference value);
    public FhirDateTime get_DateElement();
    public void set_DateElement(FhirDateTime value);
    public string get_Date();
    public void set_Date(string value);
    public ResourceReference get_Authority();
    public void set_Authority(ResourceReference value);
    public List`1<RecommendationComponent> get_Recommendation();
    public void set_Recommendation(List`1<RecommendationComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ImmunizationRecommendation/<get_Children>d__35")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ImmunizationRecommendation/<get_NamedChildren>d__37")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ImmunizationRecommendation/<GetElementPairs>d__39")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("ImplementationGuide", "http://hl7.org/fhir/StructureDefinition/ImplementationGuide")]
public class Hl7.Fhir.Model.ImplementationGuide : DomainResource {
    private FhirUri _UrlElement;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private FhirString _TitleElement;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirBoolean _ExperimentalElement;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _CopyrightElement;
    private Id _PackageIdElement;
    private Code`1<SPDXLicense> _LicenseElement;
    private List`1<Code`1<FHIRVersion>> _FhirVersionElement;
    private List`1<DependsOnComponent> _DependsOn;
    private List`1<GlobalComponent> _Global;
    private DefinitionComponent _Definition;
    private ManifestComponent _Manifest;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("experimental")]
[DataMemberAttribute]
public FhirBoolean ExperimentalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Experimental { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("copyright")]
[DataMemberAttribute]
public Markdown CopyrightElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Copyright { get; public set; }
    [FhirElementAttribute("packageId")]
[CardinalityAttribute]
[DataMemberAttribute]
public Id PackageIdElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string PackageId { get; public set; }
    [FhirElementAttribute("license")]
[DeclaredTypeAttribute]
[BindingAttribute("SPDXLicense")]
[DataMemberAttribute]
public Code`1<SPDXLicense> LicenseElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<SPDXLicense> License { get; public set; }
    [FhirElementAttribute("fhirVersion")]
[DeclaredTypeAttribute]
[BindingAttribute("FHIRVersion")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Code`1<FHIRVersion>> FhirVersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Nullable`1<FHIRVersion>> FhirVersion { get; public set; }
    [FhirElementAttribute("dependsOn")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<DependsOnComponent> DependsOn { get; public set; }
    [FhirElementAttribute("global")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<GlobalComponent> Global { get; public set; }
    [FhirElementAttribute("definition")]
[DataMemberAttribute]
public DefinitionComponent Definition { get; public set; }
    [FhirElementAttribute("manifest")]
[DataMemberAttribute]
public ManifestComponent Manifest { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    [ObsoleteAttribute("This property is not a part of the official FHIR specification", "True")]
public Markdown PurposeElement { get; public set; }
    public string Purpose { get; public set; }
    public virtual string get_TypeName();
    public sealed virtual FhirUri get_UrlElement();
    public sealed virtual void set_UrlElement(FhirUri value);
    public sealed virtual string get_Url();
    public sealed virtual void set_Url(string value);
    public sealed virtual FhirString get_VersionElement();
    public sealed virtual void set_VersionElement(FhirString value);
    public sealed virtual string get_Version();
    public sealed virtual void set_Version(string value);
    public sealed virtual FhirString get_NameElement();
    public sealed virtual void set_NameElement(FhirString value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public sealed virtual Code`1<PublicationStatus> get_StatusElement();
    public sealed virtual void set_StatusElement(Code`1<PublicationStatus> value);
    public sealed virtual Nullable`1<PublicationStatus> get_Status();
    public sealed virtual void set_Status(Nullable`1<PublicationStatus> value);
    public sealed virtual FhirBoolean get_ExperimentalElement();
    public sealed virtual void set_ExperimentalElement(FhirBoolean value);
    public sealed virtual Nullable`1<bool> get_Experimental();
    public sealed virtual void set_Experimental(Nullable`1<bool> value);
    public sealed virtual FhirDateTime get_DateElement();
    public sealed virtual void set_DateElement(FhirDateTime value);
    public sealed virtual string get_Date();
    public sealed virtual void set_Date(string value);
    public sealed virtual FhirString get_PublisherElement();
    public sealed virtual void set_PublisherElement(FhirString value);
    public sealed virtual string get_Publisher();
    public sealed virtual void set_Publisher(string value);
    public sealed virtual List`1<ContactDetail> get_Contact();
    public sealed virtual void set_Contact(List`1<ContactDetail> value);
    public sealed virtual Markdown get_DescriptionElement();
    public sealed virtual void set_DescriptionElement(Markdown value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual List`1<UsageContext> get_UseContext();
    public sealed virtual void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public Markdown get_CopyrightElement();
    public void set_CopyrightElement(Markdown value);
    public string get_Copyright();
    public void set_Copyright(string value);
    public Id get_PackageIdElement();
    public void set_PackageIdElement(Id value);
    public string get_PackageId();
    public void set_PackageId(string value);
    public Code`1<SPDXLicense> get_LicenseElement();
    public void set_LicenseElement(Code`1<SPDXLicense> value);
    public Nullable`1<SPDXLicense> get_License();
    public void set_License(Nullable`1<SPDXLicense> value);
    public List`1<Code`1<FHIRVersion>> get_FhirVersionElement();
    public void set_FhirVersionElement(List`1<Code`1<FHIRVersion>> value);
    public IEnumerable`1<Nullable`1<FHIRVersion>> get_FhirVersion();
    public void set_FhirVersion(IEnumerable`1<Nullable`1<FHIRVersion>> value);
    public List`1<DependsOnComponent> get_DependsOn();
    public void set_DependsOn(List`1<DependsOnComponent> value);
    public List`1<GlobalComponent> get_Global();
    public void set_Global(List`1<GlobalComponent> value);
    public DefinitionComponent get_Definition();
    public void set_Definition(DefinitionComponent value);
    public ManifestComponent get_Manifest();
    public void set_Manifest(ManifestComponent value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ImplementationGuide/<get_Children>d__140")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ImplementationGuide/<get_NamedChildren>d__142")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ImplementationGuide/<GetElementPairs>d__144")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    public sealed virtual Markdown get_PurposeElement();
    public sealed virtual void set_PurposeElement(Markdown value);
    public sealed virtual string get_Purpose();
    public sealed virtual void set_Purpose(string value);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("InsurancePlan", "http://hl7.org/fhir/StructureDefinition/InsurancePlan")]
public class Hl7.Fhir.Model.InsurancePlan : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<PublicationStatus> _StatusElement;
    private List`1<CodeableConcept> _Type;
    private FhirString _NameElement;
    private List`1<FhirString> _AliasElement;
    private Period _Period;
    private ResourceReference _OwnedBy;
    private ResourceReference _AdministeredBy;
    private List`1<ResourceReference> _CoverageArea;
    private List`1<ContactComponent> _Contact;
    private List`1<ResourceReference> _Endpoint;
    private List`1<ResourceReference> _Network;
    private List`1<CoverageComponent> _Coverage;
    private List`1<PlanComponent> _Plan;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("InsurancePlanType")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Type { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("alias")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> AliasElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Alias { get; public set; }
    [FhirElementAttribute("period")]
[DataMemberAttribute]
public Period Period { get; public set; }
    [FhirElementAttribute("ownedBy")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference OwnedBy { get; public set; }
    [FhirElementAttribute("administeredBy")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference AdministeredBy { get; public set; }
    [FhirElementAttribute("coverageArea")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> CoverageArea { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactComponent> Contact { get; public set; }
    [FhirElementAttribute("endpoint")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Endpoint { get; public set; }
    [FhirElementAttribute("network")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Network { get; public set; }
    [FhirElementAttribute("coverage")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CoverageComponent> Coverage { get; public set; }
    [FhirElementAttribute("plan")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<PlanComponent> Plan { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<PublicationStatus> get_StatusElement();
    public void set_StatusElement(Code`1<PublicationStatus> value);
    public Nullable`1<PublicationStatus> get_Status();
    public void set_Status(Nullable`1<PublicationStatus> value);
    public List`1<CodeableConcept> get_Type();
    public void set_Type(List`1<CodeableConcept> value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public List`1<FhirString> get_AliasElement();
    public void set_AliasElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_Alias();
    public void set_Alias(IEnumerable`1<string> value);
    public Period get_Period();
    public void set_Period(Period value);
    public ResourceReference get_OwnedBy();
    public void set_OwnedBy(ResourceReference value);
    public ResourceReference get_AdministeredBy();
    public void set_AdministeredBy(ResourceReference value);
    public List`1<ResourceReference> get_CoverageArea();
    public void set_CoverageArea(List`1<ResourceReference> value);
    public List`1<ContactComponent> get_Contact();
    public void set_Contact(List`1<ContactComponent> value);
    public List`1<ResourceReference> get_Endpoint();
    public void set_Endpoint(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Network();
    public void set_Network(List`1<ResourceReference> value);
    public List`1<CoverageComponent> get_Coverage();
    public void set_Coverage(List`1<CoverageComponent> value);
    public List`1<PlanComponent> get_Plan();
    public void set_Plan(List`1<PlanComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.InsurancePlan/<get_Children>d__85")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.InsurancePlan/<get_NamedChildren>d__87")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.InsurancePlan/<GetElementPairs>d__89")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Invoice", "http://hl7.org/fhir/StructureDefinition/Invoice")]
public class Hl7.Fhir.Model.Invoice : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<InvoiceStatus> _StatusElement;
    private FhirString _CancelledReasonElement;
    private CodeableConcept _Type;
    private ResourceReference _Subject;
    private ResourceReference _Recipient;
    private FhirDateTime _DateElement;
    private List`1<ParticipantComponent> _Participant;
    private ResourceReference _Issuer;
    private ResourceReference _Account;
    private List`1<LineItemComponent> _LineItem;
    private List`1<PriceComponentComponent> _TotalPriceComponent;
    private Money _TotalNet;
    private Money _TotalGross;
    private Markdown _PaymentTermsElement;
    private List`1<Annotation> _Note;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("InvoiceStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<InvoiceStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<InvoiceStatus> Status { get; public set; }
    [FhirElementAttribute("cancelledReason")]
[DataMemberAttribute]
public FhirString CancelledReasonElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string CancelledReason { get; public set; }
    [FhirElementAttribute("type")]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("recipient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Recipient { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("participant")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ParticipantComponent> Participant { get; public set; }
    [FhirElementAttribute("issuer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Issuer { get; public set; }
    [FhirElementAttribute("account")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Account { get; public set; }
    [FhirElementAttribute("lineItem")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<LineItemComponent> LineItem { get; public set; }
    [FhirElementAttribute("totalPriceComponent")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<PriceComponentComponent> TotalPriceComponent { get; public set; }
    [FhirElementAttribute("totalNet")]
[DataMemberAttribute]
public Money TotalNet { get; public set; }
    [FhirElementAttribute("totalGross")]
[DataMemberAttribute]
public Money TotalGross { get; public set; }
    [FhirElementAttribute("paymentTerms")]
[DataMemberAttribute]
public Markdown PaymentTermsElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string PaymentTerms { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<InvoiceStatus> get_StatusElement();
    public void set_StatusElement(Code`1<InvoiceStatus> value);
    public Nullable`1<InvoiceStatus> get_Status();
    public void set_Status(Nullable`1<InvoiceStatus> value);
    public FhirString get_CancelledReasonElement();
    public void set_CancelledReasonElement(FhirString value);
    public string get_CancelledReason();
    public void set_CancelledReason(string value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Recipient();
    public void set_Recipient(ResourceReference value);
    public FhirDateTime get_DateElement();
    public void set_DateElement(FhirDateTime value);
    public string get_Date();
    public void set_Date(string value);
    public List`1<ParticipantComponent> get_Participant();
    public void set_Participant(List`1<ParticipantComponent> value);
    public ResourceReference get_Issuer();
    public void set_Issuer(ResourceReference value);
    public ResourceReference get_Account();
    public void set_Account(ResourceReference value);
    public List`1<LineItemComponent> get_LineItem();
    public void set_LineItem(List`1<LineItemComponent> value);
    public List`1<PriceComponentComponent> get_TotalPriceComponent();
    public void set_TotalPriceComponent(List`1<PriceComponentComponent> value);
    public Money get_TotalNet();
    public void set_TotalNet(Money value);
    public Money get_TotalGross();
    public void set_TotalGross(Money value);
    public Markdown get_PaymentTermsElement();
    public void set_PaymentTermsElement(Markdown value);
    public string get_PaymentTerms();
    public void set_PaymentTerms(string value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Invoice/<get_Children>d__90")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Invoice/<get_NamedChildren>d__92")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Invoice/<GetElementPairs>d__94")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("InvoicePriceComponentType", "http://hl7.org/fhir/ValueSet/invoice-priceComponentType", "http://hl7.org/fhir/invoice-priceComponentType")]
public enum Hl7.Fhir.Model.InvoicePriceComponentType : Enum {
    public int value__;
    [EnumLiteralAttribute("base", "")]
[DescriptionAttribute("base price")]
public static InvoicePriceComponentType Base;
    [EnumLiteralAttribute("surcharge", "")]
[DescriptionAttribute("surcharge")]
public static InvoicePriceComponentType Surcharge;
    [EnumLiteralAttribute("deduction", "")]
[DescriptionAttribute("deduction")]
public static InvoicePriceComponentType Deduction;
    [EnumLiteralAttribute("discount", "")]
[DescriptionAttribute("discount")]
public static InvoicePriceComponentType Discount;
    [EnumLiteralAttribute("tax", "")]
[DescriptionAttribute("tax")]
public static InvoicePriceComponentType Tax;
    [EnumLiteralAttribute("informational", "")]
[DescriptionAttribute("informational")]
public static InvoicePriceComponentType Informational;
}
[DataContractAttribute]
[FhirTypeAttribute("Library", "http://hl7.org/fhir/StructureDefinition/Library")]
public class Hl7.Fhir.Model.Library : DomainResource {
    private FhirUri _UrlElement;
    private List`1<Identifier> _Identifier;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private FhirString _TitleElement;
    private FhirString _SubtitleElement;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirBoolean _ExperimentalElement;
    private CodeableConcept _Type;
    private DataType _Subject;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _PurposeElement;
    private FhirString _UsageElement;
    private Markdown _CopyrightElement;
    private Date _ApprovalDateElement;
    private Date _LastReviewDateElement;
    private Period _EffectivePeriod;
    private List`1<CodeableConcept> _Topic;
    private List`1<ContactDetail> _Author;
    private List`1<ContactDetail> _Editor;
    private List`1<ContactDetail> _Reviewer;
    private List`1<ContactDetail> _Endorser;
    private List`1<RelatedArtifact> _RelatedArtifact;
    private List`1<ParameterDefinition> _Parameter;
    private List`1<DataRequirement> _DataRequirement;
    private List`1<Attachment> _Content;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("subtitle")]
[DataMemberAttribute]
public FhirString SubtitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Subtitle { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("experimental")]
[DataMemberAttribute]
public FhirBoolean ExperimentalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Experimental { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("LibraryType")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute]
[BindingAttribute("SubjectType")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Subject { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("purpose")]
[DataMemberAttribute]
public Markdown PurposeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Purpose { get; public set; }
    [FhirElementAttribute("usage")]
[DataMemberAttribute]
public FhirString UsageElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Usage { get; public set; }
    [FhirElementAttribute("copyright")]
[DataMemberAttribute]
public Markdown CopyrightElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Copyright { get; public set; }
    [FhirElementAttribute("approvalDate")]
[DataMemberAttribute]
public Date ApprovalDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ApprovalDate { get; public set; }
    [FhirElementAttribute("lastReviewDate")]
[DataMemberAttribute]
public Date LastReviewDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string LastReviewDate { get; public set; }
    [FhirElementAttribute("effectivePeriod")]
[DataMemberAttribute]
public Period EffectivePeriod { get; public set; }
    [FhirElementAttribute("topic")]
[BindingAttribute("DefinitionTopic")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Topic { get; public set; }
    [FhirElementAttribute("author")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Author { get; public set; }
    [FhirElementAttribute("editor")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Editor { get; public set; }
    [FhirElementAttribute("reviewer")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Reviewer { get; public set; }
    [FhirElementAttribute("endorser")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Endorser { get; public set; }
    [FhirElementAttribute("relatedArtifact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RelatedArtifact> RelatedArtifact { get; public set; }
    [FhirElementAttribute("parameter")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ParameterDefinition> Parameter { get; public set; }
    [FhirElementAttribute("dataRequirement")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<DataRequirement> DataRequirement { get; public set; }
    [FhirElementAttribute("content")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Attachment> Content { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public sealed virtual FhirUri get_UrlElement();
    public sealed virtual void set_UrlElement(FhirUri value);
    public sealed virtual string get_Url();
    public sealed virtual void set_Url(string value);
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public sealed virtual FhirString get_VersionElement();
    public sealed virtual void set_VersionElement(FhirString value);
    public sealed virtual string get_Version();
    public sealed virtual void set_Version(string value);
    public sealed virtual FhirString get_NameElement();
    public sealed virtual void set_NameElement(FhirString value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public FhirString get_SubtitleElement();
    public void set_SubtitleElement(FhirString value);
    public string get_Subtitle();
    public void set_Subtitle(string value);
    public sealed virtual Code`1<PublicationStatus> get_StatusElement();
    public sealed virtual void set_StatusElement(Code`1<PublicationStatus> value);
    public sealed virtual Nullable`1<PublicationStatus> get_Status();
    public sealed virtual void set_Status(Nullable`1<PublicationStatus> value);
    public sealed virtual FhirBoolean get_ExperimentalElement();
    public sealed virtual void set_ExperimentalElement(FhirBoolean value);
    public sealed virtual Nullable`1<bool> get_Experimental();
    public sealed virtual void set_Experimental(Nullable`1<bool> value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public DataType get_Subject();
    public void set_Subject(DataType value);
    public sealed virtual FhirDateTime get_DateElement();
    public sealed virtual void set_DateElement(FhirDateTime value);
    public sealed virtual string get_Date();
    public sealed virtual void set_Date(string value);
    public sealed virtual FhirString get_PublisherElement();
    public sealed virtual void set_PublisherElement(FhirString value);
    public sealed virtual string get_Publisher();
    public sealed virtual void set_Publisher(string value);
    public sealed virtual List`1<ContactDetail> get_Contact();
    public sealed virtual void set_Contact(List`1<ContactDetail> value);
    public sealed virtual Markdown get_DescriptionElement();
    public sealed virtual void set_DescriptionElement(Markdown value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual List`1<UsageContext> get_UseContext();
    public sealed virtual void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public sealed virtual Markdown get_PurposeElement();
    public sealed virtual void set_PurposeElement(Markdown value);
    public sealed virtual string get_Purpose();
    public sealed virtual void set_Purpose(string value);
    public FhirString get_UsageElement();
    public void set_UsageElement(FhirString value);
    public string get_Usage();
    public void set_Usage(string value);
    public Markdown get_CopyrightElement();
    public void set_CopyrightElement(Markdown value);
    public string get_Copyright();
    public void set_Copyright(string value);
    public Date get_ApprovalDateElement();
    public void set_ApprovalDateElement(Date value);
    public string get_ApprovalDate();
    public void set_ApprovalDate(string value);
    public Date get_LastReviewDateElement();
    public void set_LastReviewDateElement(Date value);
    public string get_LastReviewDate();
    public void set_LastReviewDate(string value);
    public Period get_EffectivePeriod();
    public void set_EffectivePeriod(Period value);
    public List`1<CodeableConcept> get_Topic();
    public void set_Topic(List`1<CodeableConcept> value);
    public List`1<ContactDetail> get_Author();
    public void set_Author(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Editor();
    public void set_Editor(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Reviewer();
    public void set_Reviewer(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Endorser();
    public void set_Endorser(List`1<ContactDetail> value);
    public List`1<RelatedArtifact> get_RelatedArtifact();
    public void set_RelatedArtifact(List`1<RelatedArtifact> value);
    public List`1<ParameterDefinition> get_Parameter();
    public void set_Parameter(List`1<ParameterDefinition> value);
    public List`1<DataRequirement> get_DataRequirement();
    public void set_DataRequirement(List`1<DataRequirement> value);
    public List`1<Attachment> get_Content();
    public void set_Content(List`1<Attachment> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.set_Code(List`1<CodeableConcept> value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Library/<get_Children>d__183")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Library/<get_NamedChildren>d__185")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Library/<GetElementPairs>d__187")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Linkage", "http://hl7.org/fhir/StructureDefinition/Linkage")]
public class Hl7.Fhir.Model.Linkage : DomainResource {
    private FhirBoolean _ActiveElement;
    private ResourceReference _Author;
    private List`1<ItemComponent> _Item;
    public string TypeName { get; }
    [FhirElementAttribute("active")]
[DataMemberAttribute]
public FhirBoolean ActiveElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Active { get; public set; }
    [FhirElementAttribute("author")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Author { get; public set; }
    [FhirElementAttribute("item")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ItemComponent> Item { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public FhirBoolean get_ActiveElement();
    public void set_ActiveElement(FhirBoolean value);
    public Nullable`1<bool> get_Active();
    public void set_Active(Nullable`1<bool> value);
    public ResourceReference get_Author();
    public void set_Author(ResourceReference value);
    public List`1<ItemComponent> get_Item();
    public void set_Item(List`1<ItemComponent> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Linkage/<get_Children>d__24")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Linkage/<get_NamedChildren>d__26")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Linkage/<GetElementPairs>d__28")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("List", "http://hl7.org/fhir/StructureDefinition/List")]
public class Hl7.Fhir.Model.List : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<ListStatus> _StatusElement;
    private Code`1<ListMode> _ModeElement;
    private FhirString _TitleElement;
    private CodeableConcept _Code;
    private ResourceReference _Subject;
    private ResourceReference _Encounter;
    private FhirDateTime _DateElement;
    private ResourceReference _Source;
    private CodeableConcept _OrderedBy;
    private List`1<Annotation> _Note;
    private List`1<EntryComponent> _Entry;
    private CodeableConcept _EmptyReason;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("ListStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ListStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ListStatus> Status { get; public set; }
    [FhirElementAttribute("mode")]
[DeclaredTypeAttribute]
[BindingAttribute("ListMode")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ListMode> ModeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ListMode> Mode { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("ListPurpose")]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("source")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Source { get; public set; }
    [FhirElementAttribute("orderedBy")]
[BindingAttribute("ListOrder")]
[DataMemberAttribute]
public CodeableConcept OrderedBy { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("entry")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<EntryComponent> Entry { get; public set; }
    [FhirElementAttribute("emptyReason")]
[BindingAttribute("ListEmptyReason")]
[DataMemberAttribute]
public CodeableConcept EmptyReason { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<ListStatus> get_StatusElement();
    public void set_StatusElement(Code`1<ListStatus> value);
    public Nullable`1<ListStatus> get_Status();
    public void set_Status(Nullable`1<ListStatus> value);
    public Code`1<ListMode> get_ModeElement();
    public void set_ModeElement(Code`1<ListMode> value);
    public Nullable`1<ListMode> get_Mode();
    public void set_Mode(Nullable`1<ListMode> value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public FhirDateTime get_DateElement();
    public void set_DateElement(FhirDateTime value);
    public string get_Date();
    public void set_Date(string value);
    public ResourceReference get_Source();
    public void set_Source(ResourceReference value);
    public CodeableConcept get_OrderedBy();
    public void set_OrderedBy(CodeableConcept value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public List`1<EntryComponent> get_Entry();
    public void set_Entry(List`1<EntryComponent> value);
    public CodeableConcept get_EmptyReason();
    public void set_EmptyReason(CodeableConcept value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.List/<get_Children>d__80")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.List/<get_NamedChildren>d__82")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.List/<GetElementPairs>d__84")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("ListMode", "http://hl7.org/fhir/ValueSet/list-mode", "http://hl7.org/fhir/list-mode")]
public enum Hl7.Fhir.Model.ListMode : Enum {
    public int value__;
    [EnumLiteralAttribute("working", "")]
[DescriptionAttribute("Working List")]
public static ListMode Working;
    [EnumLiteralAttribute("snapshot", "")]
[DescriptionAttribute("Snapshot List")]
public static ListMode Snapshot;
    [EnumLiteralAttribute("changes", "")]
[DescriptionAttribute("Change List")]
public static ListMode Changes;
}
[DataContractAttribute]
[FhirTypeAttribute("Location", "http://hl7.org/fhir/StructureDefinition/Location")]
public class Hl7.Fhir.Model.Location : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<LocationStatus> _StatusElement;
    private Coding _OperationalStatus;
    private FhirString _NameElement;
    private List`1<FhirString> _AliasElement;
    private FhirString _DescriptionElement;
    private Code`1<LocationMode> _ModeElement;
    private List`1<CodeableConcept> _Type;
    private List`1<ContactPoint> _Telecom;
    private Address _Address;
    private CodeableConcept _PhysicalType;
    private PositionComponent _Position;
    private ResourceReference _ManagingOrganization;
    private ResourceReference _PartOf;
    private List`1<HoursOfOperationComponent> _HoursOfOperation;
    private FhirString _AvailabilityExceptionsElement;
    private List`1<ResourceReference> _Endpoint;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("LocationStatus")]
[DataMemberAttribute]
public Code`1<LocationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<LocationStatus> Status { get; public set; }
    [FhirElementAttribute("operationalStatus")]
[BindingAttribute("OperationalStatus")]
[DataMemberAttribute]
public Coding OperationalStatus { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("alias")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> AliasElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Alias { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public FhirString DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("mode")]
[DeclaredTypeAttribute]
[BindingAttribute("LocationMode")]
[DataMemberAttribute]
public Code`1<LocationMode> ModeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<LocationMode> Mode { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("LocationType")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Type { get; public set; }
    [FhirElementAttribute("telecom")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactPoint> Telecom { get; public set; }
    [FhirElementAttribute("address")]
[DataMemberAttribute]
public Address Address { get; public set; }
    [FhirElementAttribute("physicalType")]
[BindingAttribute("PhysicalType")]
[DataMemberAttribute]
public CodeableConcept PhysicalType { get; public set; }
    [FhirElementAttribute("position")]
[DataMemberAttribute]
public PositionComponent Position { get; public set; }
    [FhirElementAttribute("managingOrganization")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference ManagingOrganization { get; public set; }
    [FhirElementAttribute("partOf")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference PartOf { get; public set; }
    [FhirElementAttribute("hoursOfOperation")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<HoursOfOperationComponent> HoursOfOperation { get; public set; }
    [FhirElementAttribute("availabilityExceptions")]
[DataMemberAttribute]
public FhirString AvailabilityExceptionsElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string AvailabilityExceptions { get; public set; }
    [FhirElementAttribute("endpoint")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Endpoint { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<LocationStatus> get_StatusElement();
    public void set_StatusElement(Code`1<LocationStatus> value);
    public Nullable`1<LocationStatus> get_Status();
    public void set_Status(Nullable`1<LocationStatus> value);
    public Coding get_OperationalStatus();
    public void set_OperationalStatus(Coding value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public List`1<FhirString> get_AliasElement();
    public void set_AliasElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_Alias();
    public void set_Alias(IEnumerable`1<string> value);
    public FhirString get_DescriptionElement();
    public void set_DescriptionElement(FhirString value);
    public string get_Description();
    public void set_Description(string value);
    public Code`1<LocationMode> get_ModeElement();
    public void set_ModeElement(Code`1<LocationMode> value);
    public Nullable`1<LocationMode> get_Mode();
    public void set_Mode(Nullable`1<LocationMode> value);
    public List`1<CodeableConcept> get_Type();
    public void set_Type(List`1<CodeableConcept> value);
    public List`1<ContactPoint> get_Telecom();
    public void set_Telecom(List`1<ContactPoint> value);
    public Address get_Address();
    public void set_Address(Address value);
    public CodeableConcept get_PhysicalType();
    public void set_PhysicalType(CodeableConcept value);
    public PositionComponent get_Position();
    public void set_Position(PositionComponent value);
    public ResourceReference get_ManagingOrganization();
    public void set_ManagingOrganization(ResourceReference value);
    public ResourceReference get_PartOf();
    public void set_PartOf(ResourceReference value);
    public List`1<HoursOfOperationComponent> get_HoursOfOperation();
    public void set_HoursOfOperation(List`1<HoursOfOperationComponent> value);
    public FhirString get_AvailabilityExceptionsElement();
    public void set_AvailabilityExceptionsElement(FhirString value);
    public string get_AvailabilityExceptions();
    public void set_AvailabilityExceptions(string value);
    public List`1<ResourceReference> get_Endpoint();
    public void set_Endpoint(List`1<ResourceReference> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.set_Code(List`1<CodeableConcept> value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Location/<get_Children>d__104")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Location/<get_NamedChildren>d__106")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Location/<GetElementPairs>d__108")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("MarketingStatus", "http://hl7.org/fhir/StructureDefinition/MarketingStatus")]
public class Hl7.Fhir.Model.MarketingStatus : BackboneType {
    private CodeableConcept _Country;
    private CodeableConcept _Jurisdiction;
    private CodeableConcept _Status;
    private Period _DateRange;
    private FhirDateTime _RestoreDateElement;
    public string TypeName { get; }
    [FhirElementAttribute("country")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept Country { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[DataMemberAttribute]
public CodeableConcept Jurisdiction { get; public set; }
    [FhirElementAttribute("status")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept Status { get; public set; }
    [FhirElementAttribute("dateRange")]
[CardinalityAttribute]
[DataMemberAttribute]
public Period DateRange { get; public set; }
    [FhirElementAttribute("restoreDate")]
[DataMemberAttribute]
public FhirDateTime RestoreDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string RestoreDate { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public CodeableConcept get_Country();
    public void set_Country(CodeableConcept value);
    public CodeableConcept get_Jurisdiction();
    public void set_Jurisdiction(CodeableConcept value);
    public CodeableConcept get_Status();
    public void set_Status(CodeableConcept value);
    public Period get_DateRange();
    public void set_DateRange(Period value);
    public FhirDateTime get_RestoreDateElement();
    public void set_RestoreDateElement(FhirDateTime value);
    public string get_RestoreDate();
    public void set_RestoreDate(string value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MarketingStatus/<get_Children>d__30")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MarketingStatus/<get_NamedChildren>d__32")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MarketingStatus/<GetElementPairs>d__34")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Measure", "http://hl7.org/fhir/StructureDefinition/Measure")]
public class Hl7.Fhir.Model.Measure : DomainResource {
    private FhirUri _UrlElement;
    private List`1<Identifier> _Identifier;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private FhirString _TitleElement;
    private FhirString _SubtitleElement;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirBoolean _ExperimentalElement;
    private DataType _Subject;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _PurposeElement;
    private FhirString _UsageElement;
    private Markdown _CopyrightElement;
    private Date _ApprovalDateElement;
    private Date _LastReviewDateElement;
    private Period _EffectivePeriod;
    private List`1<CodeableConcept> _Topic;
    private List`1<ContactDetail> _Author;
    private List`1<ContactDetail> _Editor;
    private List`1<ContactDetail> _Reviewer;
    private List`1<ContactDetail> _Endorser;
    private List`1<RelatedArtifact> _RelatedArtifact;
    private List`1<Canonical> _LibraryElement;
    private Markdown _DisclaimerElement;
    private CodeableConcept _Scoring;
    private CodeableConcept _CompositeScoring;
    private List`1<CodeableConcept> _Type;
    private FhirString _RiskAdjustmentElement;
    private FhirString _RateAggregationElement;
    private Markdown _RationaleElement;
    private Markdown _ClinicalRecommendationStatementElement;
    private CodeableConcept _ImprovementNotation;
    private List`1<Markdown> _DefinitionElement;
    private Markdown _GuidanceElement;
    private List`1<GroupComponent> _Group;
    private List`1<SupplementalDataComponent> _SupplementalData;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("subtitle")]
[DataMemberAttribute]
public FhirString SubtitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Subtitle { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("experimental")]
[DataMemberAttribute]
public FhirBoolean ExperimentalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Experimental { get; public set; }
    [FhirElementAttribute]
[BindingAttribute("SubjectType")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Subject { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("purpose")]
[DataMemberAttribute]
public Markdown PurposeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Purpose { get; public set; }
    [FhirElementAttribute("usage")]
[DataMemberAttribute]
public FhirString UsageElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Usage { get; public set; }
    [FhirElementAttribute("copyright")]
[DataMemberAttribute]
public Markdown CopyrightElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Copyright { get; public set; }
    [FhirElementAttribute("approvalDate")]
[DataMemberAttribute]
public Date ApprovalDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ApprovalDate { get; public set; }
    [FhirElementAttribute("lastReviewDate")]
[DataMemberAttribute]
public Date LastReviewDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string LastReviewDate { get; public set; }
    [FhirElementAttribute("effectivePeriod")]
[DataMemberAttribute]
public Period EffectivePeriod { get; public set; }
    [FhirElementAttribute("topic")]
[BindingAttribute("DefinitionTopic")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Topic { get; public set; }
    [FhirElementAttribute("author")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Author { get; public set; }
    [FhirElementAttribute("editor")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Editor { get; public set; }
    [FhirElementAttribute("reviewer")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Reviewer { get; public set; }
    [FhirElementAttribute("endorser")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Endorser { get; public set; }
    [FhirElementAttribute("relatedArtifact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RelatedArtifact> RelatedArtifact { get; public set; }
    [FhirElementAttribute("library")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> LibraryElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Library { get; public set; }
    [FhirElementAttribute("disclaimer")]
[DataMemberAttribute]
public Markdown DisclaimerElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Disclaimer { get; public set; }
    [FhirElementAttribute("scoring")]
[BindingAttribute("MeasureScoring")]
[DataMemberAttribute]
public CodeableConcept Scoring { get; public set; }
    [FhirElementAttribute("compositeScoring")]
[BindingAttribute("CompositeMeasureScoring")]
[DataMemberAttribute]
public CodeableConcept CompositeScoring { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("MeasureType")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Type { get; public set; }
    [FhirElementAttribute("riskAdjustment")]
[DataMemberAttribute]
public FhirString RiskAdjustmentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string RiskAdjustment { get; public set; }
    [FhirElementAttribute("rateAggregation")]
[DataMemberAttribute]
public FhirString RateAggregationElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string RateAggregation { get; public set; }
    [FhirElementAttribute("rationale")]
[DataMemberAttribute]
public Markdown RationaleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Rationale { get; public set; }
    [FhirElementAttribute("clinicalRecommendationStatement")]
[DataMemberAttribute]
public Markdown ClinicalRecommendationStatementElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ClinicalRecommendationStatement { get; public set; }
    [FhirElementAttribute("improvementNotation")]
[BindingAttribute("MeasureImprovementNotation")]
[DataMemberAttribute]
public CodeableConcept ImprovementNotation { get; public set; }
    [FhirElementAttribute("definition")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Markdown> DefinitionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Definition { get; public set; }
    [FhirElementAttribute("guidance")]
[DataMemberAttribute]
public Markdown GuidanceElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Guidance { get; public set; }
    [FhirElementAttribute("group")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<GroupComponent> Group { get; public set; }
    [FhirElementAttribute("supplementalData")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<SupplementalDataComponent> SupplementalData { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public FhirUri get_UrlElement();
    public void set_UrlElement(FhirUri value);
    public string get_Url();
    public void set_Url(string value);
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirString get_VersionElement();
    public void set_VersionElement(FhirString value);
    public string get_Version();
    public void set_Version(string value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public FhirString get_SubtitleElement();
    public void set_SubtitleElement(FhirString value);
    public string get_Subtitle();
    public void set_Subtitle(string value);
    public Code`1<PublicationStatus> get_StatusElement();
    public void set_StatusElement(Code`1<PublicationStatus> value);
    public Nullable`1<PublicationStatus> get_Status();
    public void set_Status(Nullable`1<PublicationStatus> value);
    public FhirBoolean get_ExperimentalElement();
    public void set_ExperimentalElement(FhirBoolean value);
    public Nullable`1<bool> get_Experimental();
    public void set_Experimental(Nullable`1<bool> value);
    public DataType get_Subject();
    public void set_Subject(DataType value);
    public FhirDateTime get_DateElement();
    public void set_DateElement(FhirDateTime value);
    public string get_Date();
    public void set_Date(string value);
    public FhirString get_PublisherElement();
    public void set_PublisherElement(FhirString value);
    public string get_Publisher();
    public void set_Publisher(string value);
    public List`1<ContactDetail> get_Contact();
    public void set_Contact(List`1<ContactDetail> value);
    public Markdown get_DescriptionElement();
    public void set_DescriptionElement(Markdown value);
    public string get_Description();
    public void set_Description(string value);
    public List`1<UsageContext> get_UseContext();
    public void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public Markdown get_PurposeElement();
    public void set_PurposeElement(Markdown value);
    public string get_Purpose();
    public void set_Purpose(string value);
    public FhirString get_UsageElement();
    public void set_UsageElement(FhirString value);
    public string get_Usage();
    public void set_Usage(string value);
    public Markdown get_CopyrightElement();
    public void set_CopyrightElement(Markdown value);
    public string get_Copyright();
    public void set_Copyright(string value);
    public Date get_ApprovalDateElement();
    public void set_ApprovalDateElement(Date value);
    public string get_ApprovalDate();
    public void set_ApprovalDate(string value);
    public Date get_LastReviewDateElement();
    public void set_LastReviewDateElement(Date value);
    public string get_LastReviewDate();
    public void set_LastReviewDate(string value);
    public Period get_EffectivePeriod();
    public void set_EffectivePeriod(Period value);
    public List`1<CodeableConcept> get_Topic();
    public void set_Topic(List`1<CodeableConcept> value);
    public List`1<ContactDetail> get_Author();
    public void set_Author(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Editor();
    public void set_Editor(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Reviewer();
    public void set_Reviewer(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Endorser();
    public void set_Endorser(List`1<ContactDetail> value);
    public List`1<RelatedArtifact> get_RelatedArtifact();
    public void set_RelatedArtifact(List`1<RelatedArtifact> value);
    public List`1<Canonical> get_LibraryElement();
    public void set_LibraryElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_Library();
    public void set_Library(IEnumerable`1<string> value);
    public Markdown get_DisclaimerElement();
    public void set_DisclaimerElement(Markdown value);
    public string get_Disclaimer();
    public void set_Disclaimer(string value);
    public CodeableConcept get_Scoring();
    public void set_Scoring(CodeableConcept value);
    public CodeableConcept get_CompositeScoring();
    public void set_CompositeScoring(CodeableConcept value);
    public List`1<CodeableConcept> get_Type();
    public void set_Type(List`1<CodeableConcept> value);
    public FhirString get_RiskAdjustmentElement();
    public void set_RiskAdjustmentElement(FhirString value);
    public string get_RiskAdjustment();
    public void set_RiskAdjustment(string value);
    public FhirString get_RateAggregationElement();
    public void set_RateAggregationElement(FhirString value);
    public string get_RateAggregation();
    public void set_RateAggregation(string value);
    public Markdown get_RationaleElement();
    public void set_RationaleElement(Markdown value);
    public string get_Rationale();
    public void set_Rationale(string value);
    public Markdown get_ClinicalRecommendationStatementElement();
    public void set_ClinicalRecommendationStatementElement(Markdown value);
    public string get_ClinicalRecommendationStatement();
    public void set_ClinicalRecommendationStatement(string value);
    public CodeableConcept get_ImprovementNotation();
    public void set_ImprovementNotation(CodeableConcept value);
    public List`1<Markdown> get_DefinitionElement();
    public void set_DefinitionElement(List`1<Markdown> value);
    public IEnumerable`1<string> get_Definition();
    public void set_Definition(IEnumerable`1<string> value);
    public Markdown get_GuidanceElement();
    public void set_GuidanceElement(Markdown value);
    public string get_Guidance();
    public void set_Guidance(string value);
    public List`1<GroupComponent> get_Group();
    public void set_Group(List`1<GroupComponent> value);
    public List`1<SupplementalDataComponent> get_SupplementalData();
    public void set_SupplementalData(List`1<SupplementalDataComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.set_Code(List`1<CodeableConcept> value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Measure/<get_Children>d__252")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Measure/<get_NamedChildren>d__254")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Measure/<GetElementPairs>d__256")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("MeasureImprovementNotation", "http://hl7.org/fhir/ValueSet/measure-improvement-notation", "http://terminology.hl7.org/CodeSystem/measure-improvement-notation")]
public enum Hl7.Fhir.Model.MeasureImprovementNotation : Enum {
    public int value__;
    [EnumLiteralAttribute("increase", "")]
[DescriptionAttribute("Increased score indicates improvement")]
public static MeasureImprovementNotation Increase;
    [EnumLiteralAttribute("decrease", "")]
[DescriptionAttribute("Decreased score indicates improvement")]
public static MeasureImprovementNotation Decrease;
}
[DataContractAttribute]
[FhirTypeAttribute("MeasureReport", "http://hl7.org/fhir/StructureDefinition/MeasureReport")]
public class Hl7.Fhir.Model.MeasureReport : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<MeasureReportStatus> _StatusElement;
    private Code`1<MeasureReportType> _TypeElement;
    private Canonical _MeasureElement;
    private ResourceReference _Subject;
    private FhirDateTime _DateElement;
    private ResourceReference _Reporter;
    private Period _Period;
    private CodeableConcept _ImprovementNotation;
    private List`1<GroupComponent> _Group;
    private List`1<ResourceReference> _EvaluatedResource;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("MeasureReportStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<MeasureReportStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<MeasureReportStatus> Status { get; public set; }
    [FhirElementAttribute("type")]
[DeclaredTypeAttribute]
[BindingAttribute("MeasureReportType")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<MeasureReportType> TypeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<MeasureReportType> Type { get; public set; }
    [FhirElementAttribute("measure")]
[CardinalityAttribute]
[DataMemberAttribute]
public Canonical MeasureElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Measure { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("reporter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Reporter { get; public set; }
    [FhirElementAttribute("period")]
[CardinalityAttribute]
[DataMemberAttribute]
public Period Period { get; public set; }
    [FhirElementAttribute("improvementNotation")]
[BindingAttribute("MeasureImprovementNotation")]
[DataMemberAttribute]
public CodeableConcept ImprovementNotation { get; public set; }
    [FhirElementAttribute("group")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<GroupComponent> Group { get; public set; }
    [FhirElementAttribute("evaluatedResource")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> EvaluatedResource { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<MeasureReportStatus> get_StatusElement();
    public void set_StatusElement(Code`1<MeasureReportStatus> value);
    public Nullable`1<MeasureReportStatus> get_Status();
    public void set_Status(Nullable`1<MeasureReportStatus> value);
    public Code`1<MeasureReportType> get_TypeElement();
    public void set_TypeElement(Code`1<MeasureReportType> value);
    public Nullable`1<MeasureReportType> get_Type();
    public void set_Type(Nullable`1<MeasureReportType> value);
    public Canonical get_MeasureElement();
    public void set_MeasureElement(Canonical value);
    public string get_Measure();
    public void set_Measure(string value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public FhirDateTime get_DateElement();
    public void set_DateElement(FhirDateTime value);
    public string get_Date();
    public void set_Date(string value);
    public ResourceReference get_Reporter();
    public void set_Reporter(ResourceReference value);
    public Period get_Period();
    public void set_Period(Period value);
    public CodeableConcept get_ImprovementNotation();
    public void set_ImprovementNotation(CodeableConcept value);
    public List`1<GroupComponent> get_Group();
    public void set_Group(List`1<GroupComponent> value);
    public List`1<ResourceReference> get_EvaluatedResource();
    public void set_EvaluatedResource(List`1<ResourceReference> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MeasureReport/<get_Children>d__74")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MeasureReport/<get_NamedChildren>d__76")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MeasureReport/<GetElementPairs>d__78")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Media", "http://hl7.org/fhir/StructureDefinition/Media")]
public class Hl7.Fhir.Model.Media : DomainResource {
    private List`1<Identifier> _Identifier;
    private List`1<ResourceReference> _BasedOn;
    private List`1<ResourceReference> _PartOf;
    private Code`1<EventStatus> _StatusElement;
    private CodeableConcept _Type;
    private CodeableConcept _Modality;
    private CodeableConcept _View;
    private ResourceReference _Subject;
    private ResourceReference _Encounter;
    private DataType _Created;
    private Instant _IssuedElement;
    private ResourceReference _Operator;
    private List`1<CodeableConcept> _ReasonCode;
    private CodeableConcept _BodySite;
    private FhirString _DeviceNameElement;
    private ResourceReference _Device;
    private PositiveInt _HeightElement;
    private PositiveInt _WidthElement;
    private PositiveInt _FramesElement;
    private FhirDecimal _DurationElement;
    private Attachment _Content;
    private List`1<Annotation> _Note;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("basedOn")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> BasedOn { get; public set; }
    [FhirElementAttribute("partOf")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> PartOf { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("MediaStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<EventStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<EventStatus> Status { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("MediaType")]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("modality")]
[BindingAttribute("MediaModality")]
[DataMemberAttribute]
public CodeableConcept Modality { get; public set; }
    [FhirElementAttribute("view")]
[BindingAttribute("MediaView")]
[DataMemberAttribute]
public CodeableConcept View { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Created { get; public set; }
    [FhirElementAttribute("issued")]
[DataMemberAttribute]
public Instant IssuedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<DateTimeOffset> Issued { get; public set; }
    [FhirElementAttribute("operator")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Operator { get; public set; }
    [FhirElementAttribute("reasonCode")]
[BindingAttribute("MediaReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ReasonCode { get; public set; }
    [FhirElementAttribute("bodySite")]
[BindingAttribute("BodySite")]
[DataMemberAttribute]
public CodeableConcept BodySite { get; public set; }
    [FhirElementAttribute("deviceName")]
[DataMemberAttribute]
public FhirString DeviceNameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string DeviceName { get; public set; }
    [FhirElementAttribute("device")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Device { get; public set; }
    [FhirElementAttribute("height")]
[DataMemberAttribute]
public PositiveInt HeightElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<int> Height { get; public set; }
    [FhirElementAttribute("width")]
[DataMemberAttribute]
public PositiveInt WidthElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<int> Width { get; public set; }
    [FhirElementAttribute("frames")]
[DataMemberAttribute]
public PositiveInt FramesElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<int> Frames { get; public set; }
    [FhirElementAttribute("duration")]
[DataMemberAttribute]
public FhirDecimal DurationElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<decimal> Duration { get; public set; }
    [FhirElementAttribute("content")]
[CardinalityAttribute]
[DataMemberAttribute]
public Attachment Content { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<ResourceReference> get_BasedOn();
    public void set_BasedOn(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_PartOf();
    public void set_PartOf(List`1<ResourceReference> value);
    public Code`1<EventStatus> get_StatusElement();
    public void set_StatusElement(Code`1<EventStatus> value);
    public Nullable`1<EventStatus> get_Status();
    public void set_Status(Nullable`1<EventStatus> value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public CodeableConcept get_Modality();
    public void set_Modality(CodeableConcept value);
    public CodeableConcept get_View();
    public void set_View(CodeableConcept value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public DataType get_Created();
    public void set_Created(DataType value);
    public Instant get_IssuedElement();
    public void set_IssuedElement(Instant value);
    public Nullable`1<DateTimeOffset> get_Issued();
    public void set_Issued(Nullable`1<DateTimeOffset> value);
    public ResourceReference get_Operator();
    public void set_Operator(ResourceReference value);
    public List`1<CodeableConcept> get_ReasonCode();
    public void set_ReasonCode(List`1<CodeableConcept> value);
    public CodeableConcept get_BodySite();
    public void set_BodySite(CodeableConcept value);
    public FhirString get_DeviceNameElement();
    public void set_DeviceNameElement(FhirString value);
    public string get_DeviceName();
    public void set_DeviceName(string value);
    public ResourceReference get_Device();
    public void set_Device(ResourceReference value);
    public PositiveInt get_HeightElement();
    public void set_HeightElement(PositiveInt value);
    public Nullable`1<int> get_Height();
    public void set_Height(Nullable`1<int> value);
    public PositiveInt get_WidthElement();
    public void set_WidthElement(PositiveInt value);
    public Nullable`1<int> get_Width();
    public void set_Width(Nullable`1<int> value);
    public PositiveInt get_FramesElement();
    public void set_FramesElement(PositiveInt value);
    public Nullable`1<int> get_Frames();
    public void set_Frames(Nullable`1<int> value);
    public FhirDecimal get_DurationElement();
    public void set_DurationElement(FhirDecimal value);
    public Nullable`1<decimal> get_Duration();
    public void set_Duration(Nullable`1<decimal> value);
    public Attachment get_Content();
    public void set_Content(Attachment value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Media/<get_Children>d__119")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Media/<get_NamedChildren>d__121")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Media/<GetElementPairs>d__123")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Medication", "http://hl7.org/fhir/StructureDefinition/Medication")]
public class Hl7.Fhir.Model.Medication : DomainResource {
    private List`1<Identifier> _Identifier;
    private CodeableConcept _Code;
    private Code`1<MedicationStatusCodes> _StatusElement;
    private ResourceReference _Manufacturer;
    private CodeableConcept _Form;
    private Ratio _Amount;
    private List`1<IngredientComponent> _Ingredient;
    private BatchComponent _Batch;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("MedicationFormalRepresentation")]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("MedicationStatus")]
[DataMemberAttribute]
public Code`1<MedicationStatusCodes> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<MedicationStatusCodes> Status { get; public set; }
    [FhirElementAttribute("manufacturer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Manufacturer { get; public set; }
    [FhirElementAttribute("form")]
[BindingAttribute("MedicationForm")]
[DataMemberAttribute]
public CodeableConcept Form { get; public set; }
    [FhirElementAttribute("amount")]
[DataMemberAttribute]
public Ratio Amount { get; public set; }
    [FhirElementAttribute("ingredient")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<IngredientComponent> Ingredient { get; public set; }
    [FhirElementAttribute("batch")]
[DataMemberAttribute]
public BatchComponent Batch { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public Code`1<MedicationStatusCodes> get_StatusElement();
    public void set_StatusElement(Code`1<MedicationStatusCodes> value);
    public Nullable`1<MedicationStatusCodes> get_Status();
    public void set_Status(Nullable`1<MedicationStatusCodes> value);
    public ResourceReference get_Manufacturer();
    public void set_Manufacturer(ResourceReference value);
    public CodeableConcept get_Form();
    public void set_Form(CodeableConcept value);
    public Ratio get_Amount();
    public void set_Amount(Ratio value);
    public List`1<IngredientComponent> get_Ingredient();
    public void set_Ingredient(List`1<IngredientComponent> value);
    public BatchComponent get_Batch();
    public void set_Batch(BatchComponent value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Medication/<get_Children>d__52")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Medication/<get_NamedChildren>d__54")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Medication/<GetElementPairs>d__56")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("MedicationAdministration", "http://hl7.org/fhir/StructureDefinition/MedicationAdministration")]
public class Hl7.Fhir.Model.MedicationAdministration : DomainResource {
    private List`1<Identifier> _Identifier;
    private List`1<FhirUri> _InstantiatesElement;
    private List`1<ResourceReference> _PartOf;
    private Code`1<MedicationAdministrationStatusCodes> _StatusElement;
    private List`1<CodeableConcept> _StatusReason;
    private CodeableConcept _Category;
    private DataType _Medication;
    private ResourceReference _Subject;
    private ResourceReference _Context;
    private List`1<ResourceReference> _SupportingInformation;
    private DataType _Effective;
    private List`1<PerformerComponent> _Performer;
    private List`1<CodeableConcept> _ReasonCode;
    private List`1<ResourceReference> _ReasonReference;
    private ResourceReference _Request;
    private List`1<ResourceReference> _Device;
    private List`1<Annotation> _Note;
    private DosageComponent _Dosage;
    private List`1<ResourceReference> _EventHistory;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("instantiates")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirUri> InstantiatesElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Instantiates { get; public set; }
    [FhirElementAttribute("partOf")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> PartOf { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("MedicationAdministrationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<MedicationAdministrationStatusCodes> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<MedicationAdministrationStatusCodes> Status { get; public set; }
    [FhirElementAttribute("statusReason")]
[BindingAttribute("MedicationAdministrationNegationReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> StatusReason { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("MedicationAdministrationCategory")]
[DataMemberAttribute]
public CodeableConcept Category { get; public set; }
    [FhirElementAttribute]
[BindingAttribute("MedicationCode")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public DataType Medication { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("context")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Context { get; public set; }
    [FhirElementAttribute("supportingInformation")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> SupportingInformation { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public DataType Effective { get; public set; }
    [FhirElementAttribute("performer")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<PerformerComponent> Performer { get; public set; }
    [FhirElementAttribute("reasonCode")]
[BindingAttribute("MedicationAdministrationReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ReasonCode { get; public set; }
    [FhirElementAttribute("reasonReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ReasonReference { get; public set; }
    [FhirElementAttribute("request")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Request { get; public set; }
    [FhirElementAttribute("device")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Device { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("dosage")]
[DataMemberAttribute]
public DosageComponent Dosage { get; public set; }
    [FhirElementAttribute("eventHistory")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> EventHistory { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private DataType Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.DataType>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<FhirUri> get_InstantiatesElement();
    public void set_InstantiatesElement(List`1<FhirUri> value);
    public IEnumerable`1<string> get_Instantiates();
    public void set_Instantiates(IEnumerable`1<string> value);
    public List`1<ResourceReference> get_PartOf();
    public void set_PartOf(List`1<ResourceReference> value);
    public Code`1<MedicationAdministrationStatusCodes> get_StatusElement();
    public void set_StatusElement(Code`1<MedicationAdministrationStatusCodes> value);
    public Nullable`1<MedicationAdministrationStatusCodes> get_Status();
    public void set_Status(Nullable`1<MedicationAdministrationStatusCodes> value);
    public List`1<CodeableConcept> get_StatusReason();
    public void set_StatusReason(List`1<CodeableConcept> value);
    public CodeableConcept get_Category();
    public void set_Category(CodeableConcept value);
    public DataType get_Medication();
    public void set_Medication(DataType value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Context();
    public void set_Context(ResourceReference value);
    public List`1<ResourceReference> get_SupportingInformation();
    public void set_SupportingInformation(List`1<ResourceReference> value);
    public DataType get_Effective();
    public void set_Effective(DataType value);
    public List`1<PerformerComponent> get_Performer();
    public void set_Performer(List`1<PerformerComponent> value);
    public List`1<CodeableConcept> get_ReasonCode();
    public void set_ReasonCode(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_ReasonReference();
    public void set_ReasonReference(List`1<ResourceReference> value);
    public ResourceReference get_Request();
    public void set_Request(ResourceReference value);
    public List`1<ResourceReference> get_Device();
    public void set_Device(List`1<ResourceReference> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public DosageComponent get_Dosage();
    public void set_Dosage(DosageComponent value);
    public List`1<ResourceReference> get_EventHistory();
    public void set_EventHistory(List`1<ResourceReference> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override DataType Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.DataType>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.DataType>.set_Code(DataType value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicationAdministration/<get_Children>d__99")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicationAdministration/<get_NamedChildren>d__101")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicationAdministration/<GetElementPairs>d__103")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("MedicationDispense", "http://hl7.org/fhir/StructureDefinition/MedicationDispense")]
public class Hl7.Fhir.Model.MedicationDispense : DomainResource {
    private List`1<Identifier> _Identifier;
    private List`1<ResourceReference> _PartOf;
    private Code`1<MedicationDispenseStatusCodes> _StatusElement;
    private DataType _StatusReason;
    private CodeableConcept _Category;
    private DataType _Medication;
    private ResourceReference _Subject;
    private ResourceReference _Context;
    private List`1<ResourceReference> _SupportingInformation;
    private List`1<PerformerComponent> _Performer;
    private ResourceReference _Location;
    private List`1<ResourceReference> _AuthorizingPrescription;
    private CodeableConcept _Type;
    private Quantity _Quantity;
    private Quantity _DaysSupply;
    private FhirDateTime _WhenPreparedElement;
    private FhirDateTime _WhenHandedOverElement;
    private ResourceReference _Destination;
    private List`1<ResourceReference> _Receiver;
    private List`1<Annotation> _Note;
    private List`1<Dosage> _DosageInstruction;
    private SubstitutionComponent _Substitution;
    private List`1<ResourceReference> _DetectedIssue;
    private List`1<ResourceReference> _EventHistory;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("partOf")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> PartOf { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("MedicationDispenseStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<MedicationDispenseStatusCodes> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<MedicationDispenseStatusCodes> Status { get; public set; }
    [FhirElementAttribute]
[BindingAttribute("MedicationDispenseStatusReason")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType StatusReason { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("MedicationDispenseCategory")]
[DataMemberAttribute]
public CodeableConcept Category { get; public set; }
    [FhirElementAttribute]
[BindingAttribute("MedicationCode")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public DataType Medication { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("context")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Context { get; public set; }
    [FhirElementAttribute("supportingInformation")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> SupportingInformation { get; public set; }
    [FhirElementAttribute("performer")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<PerformerComponent> Performer { get; public set; }
    [FhirElementAttribute("location")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Location { get; public set; }
    [FhirElementAttribute("authorizingPrescription")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> AuthorizingPrescription { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("MedicationDispenseType")]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("quantity")]
[DataMemberAttribute]
public Quantity Quantity { get; public set; }
    [FhirElementAttribute("daysSupply")]
[DataMemberAttribute]
public Quantity DaysSupply { get; public set; }
    [FhirElementAttribute("whenPrepared")]
[DataMemberAttribute]
public FhirDateTime WhenPreparedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string WhenPrepared { get; public set; }
    [FhirElementAttribute("whenHandedOver")]
[DataMemberAttribute]
public FhirDateTime WhenHandedOverElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string WhenHandedOver { get; public set; }
    [FhirElementAttribute("destination")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Destination { get; public set; }
    [FhirElementAttribute("receiver")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Receiver { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("dosageInstruction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Dosage> DosageInstruction { get; public set; }
    [FhirElementAttribute("substitution")]
[DataMemberAttribute]
public SubstitutionComponent Substitution { get; public set; }
    [FhirElementAttribute("detectedIssue")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> DetectedIssue { get; public set; }
    [FhirElementAttribute("eventHistory")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> EventHistory { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private DataType Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.DataType>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<ResourceReference> get_PartOf();
    public void set_PartOf(List`1<ResourceReference> value);
    public Code`1<MedicationDispenseStatusCodes> get_StatusElement();
    public void set_StatusElement(Code`1<MedicationDispenseStatusCodes> value);
    public Nullable`1<MedicationDispenseStatusCodes> get_Status();
    public void set_Status(Nullable`1<MedicationDispenseStatusCodes> value);
    public DataType get_StatusReason();
    public void set_StatusReason(DataType value);
    public CodeableConcept get_Category();
    public void set_Category(CodeableConcept value);
    public DataType get_Medication();
    public void set_Medication(DataType value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Context();
    public void set_Context(ResourceReference value);
    public List`1<ResourceReference> get_SupportingInformation();
    public void set_SupportingInformation(List`1<ResourceReference> value);
    public List`1<PerformerComponent> get_Performer();
    public void set_Performer(List`1<PerformerComponent> value);
    public ResourceReference get_Location();
    public void set_Location(ResourceReference value);
    public List`1<ResourceReference> get_AuthorizingPrescription();
    public void set_AuthorizingPrescription(List`1<ResourceReference> value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public Quantity get_Quantity();
    public void set_Quantity(Quantity value);
    public Quantity get_DaysSupply();
    public void set_DaysSupply(Quantity value);
    public FhirDateTime get_WhenPreparedElement();
    public void set_WhenPreparedElement(FhirDateTime value);
    public string get_WhenPrepared();
    public void set_WhenPrepared(string value);
    public FhirDateTime get_WhenHandedOverElement();
    public void set_WhenHandedOverElement(FhirDateTime value);
    public string get_WhenHandedOver();
    public void set_WhenHandedOver(string value);
    public ResourceReference get_Destination();
    public void set_Destination(ResourceReference value);
    public List`1<ResourceReference> get_Receiver();
    public void set_Receiver(List`1<ResourceReference> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public List`1<Dosage> get_DosageInstruction();
    public void set_DosageInstruction(List`1<Dosage> value);
    public SubstitutionComponent get_Substitution();
    public void set_Substitution(SubstitutionComponent value);
    public List`1<ResourceReference> get_DetectedIssue();
    public void set_DetectedIssue(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_EventHistory();
    public void set_EventHistory(List`1<ResourceReference> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override DataType Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.DataType>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.DataType>.set_Code(DataType value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicationDispense/<get_Children>d__122")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicationDispense/<get_NamedChildren>d__124")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicationDispense/<GetElementPairs>d__126")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("MedicationKnowledge", "http://hl7.org/fhir/StructureDefinition/MedicationKnowledge")]
public class Hl7.Fhir.Model.MedicationKnowledge : DomainResource {
    private CodeableConcept _Code;
    private Code`1<MedicationKnowledgeStatusCodes> _StatusElement;
    private ResourceReference _Manufacturer;
    private CodeableConcept _DoseForm;
    private Quantity _Amount;
    private List`1<FhirString> _SynonymElement;
    private List`1<RelatedMedicationKnowledgeComponent> _RelatedMedicationKnowledge;
    private List`1<ResourceReference> _AssociatedMedication;
    private List`1<CodeableConcept> _ProductType;
    private List`1<MonographComponent> _Monograph;
    private List`1<IngredientComponent> _Ingredient;
    private Markdown _PreparationInstructionElement;
    private List`1<CodeableConcept> _IntendedRoute;
    private List`1<CostComponent> _Cost;
    private List`1<MonitoringProgramComponent> _MonitoringProgram;
    private List`1<AdministrationGuidelinesComponent> _AdministrationGuidelines;
    private List`1<MedicineClassificationComponent> _MedicineClassification;
    private PackagingComponent _Packaging;
    private List`1<DrugCharacteristicComponent> _DrugCharacteristic;
    private List`1<ResourceReference> _Contraindication;
    private List`1<RegulatoryComponent> _Regulatory;
    private List`1<KineticsComponent> _Kinetics;
    public string TypeName { get; }
    [FhirElementAttribute("code")]
[BindingAttribute("MedicationFormalRepresentation")]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("MedicationKnowledgeStatus")]
[DataMemberAttribute]
public Code`1<MedicationKnowledgeStatusCodes> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<MedicationKnowledgeStatusCodes> Status { get; public set; }
    [FhirElementAttribute("manufacturer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Manufacturer { get; public set; }
    [FhirElementAttribute("doseForm")]
[BindingAttribute("MedicationForm")]
[DataMemberAttribute]
public CodeableConcept DoseForm { get; public set; }
    [FhirElementAttribute("amount")]
[DataMemberAttribute]
public Quantity Amount { get; public set; }
    [FhirElementAttribute("synonym")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> SynonymElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Synonym { get; public set; }
    [FhirElementAttribute("relatedMedicationKnowledge")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RelatedMedicationKnowledgeComponent> RelatedMedicationKnowledge { get; public set; }
    [FhirElementAttribute("associatedMedication")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> AssociatedMedication { get; public set; }
    [FhirElementAttribute("productType")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ProductType { get; public set; }
    [FhirElementAttribute("monograph")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<MonographComponent> Monograph { get; public set; }
    [FhirElementAttribute("ingredient")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<IngredientComponent> Ingredient { get; public set; }
    [FhirElementAttribute("preparationInstruction")]
[DataMemberAttribute]
public Markdown PreparationInstructionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string PreparationInstruction { get; public set; }
    [FhirElementAttribute("intendedRoute")]
[BindingAttribute("MedicationRoute")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> IntendedRoute { get; public set; }
    [FhirElementAttribute("cost")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CostComponent> Cost { get; public set; }
    [FhirElementAttribute("monitoringProgram")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<MonitoringProgramComponent> MonitoringProgram { get; public set; }
    [FhirElementAttribute("administrationGuidelines")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<AdministrationGuidelinesComponent> AdministrationGuidelines { get; public set; }
    [FhirElementAttribute("medicineClassification")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<MedicineClassificationComponent> MedicineClassification { get; public set; }
    [FhirElementAttribute("packaging")]
[DataMemberAttribute]
public PackagingComponent Packaging { get; public set; }
    [FhirElementAttribute("drugCharacteristic")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<DrugCharacteristicComponent> DrugCharacteristic { get; public set; }
    [FhirElementAttribute("contraindication")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Contraindication { get; public set; }
    [FhirElementAttribute("regulatory")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RegulatoryComponent> Regulatory { get; public set; }
    [FhirElementAttribute("kinetics")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<KineticsComponent> Kinetics { get; public set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public Code`1<MedicationKnowledgeStatusCodes> get_StatusElement();
    public void set_StatusElement(Code`1<MedicationKnowledgeStatusCodes> value);
    public Nullable`1<MedicationKnowledgeStatusCodes> get_Status();
    public void set_Status(Nullable`1<MedicationKnowledgeStatusCodes> value);
    public ResourceReference get_Manufacturer();
    public void set_Manufacturer(ResourceReference value);
    public CodeableConcept get_DoseForm();
    public void set_DoseForm(CodeableConcept value);
    public Quantity get_Amount();
    public void set_Amount(Quantity value);
    public List`1<FhirString> get_SynonymElement();
    public void set_SynonymElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_Synonym();
    public void set_Synonym(IEnumerable`1<string> value);
    public List`1<RelatedMedicationKnowledgeComponent> get_RelatedMedicationKnowledge();
    public void set_RelatedMedicationKnowledge(List`1<RelatedMedicationKnowledgeComponent> value);
    public List`1<ResourceReference> get_AssociatedMedication();
    public void set_AssociatedMedication(List`1<ResourceReference> value);
    public List`1<CodeableConcept> get_ProductType();
    public void set_ProductType(List`1<CodeableConcept> value);
    public List`1<MonographComponent> get_Monograph();
    public void set_Monograph(List`1<MonographComponent> value);
    public List`1<IngredientComponent> get_Ingredient();
    public void set_Ingredient(List`1<IngredientComponent> value);
    public Markdown get_PreparationInstructionElement();
    public void set_PreparationInstructionElement(Markdown value);
    public string get_PreparationInstruction();
    public void set_PreparationInstruction(string value);
    public List`1<CodeableConcept> get_IntendedRoute();
    public void set_IntendedRoute(List`1<CodeableConcept> value);
    public List`1<CostComponent> get_Cost();
    public void set_Cost(List`1<CostComponent> value);
    public List`1<MonitoringProgramComponent> get_MonitoringProgram();
    public void set_MonitoringProgram(List`1<MonitoringProgramComponent> value);
    public List`1<AdministrationGuidelinesComponent> get_AdministrationGuidelines();
    public void set_AdministrationGuidelines(List`1<AdministrationGuidelinesComponent> value);
    public List`1<MedicineClassificationComponent> get_MedicineClassification();
    public void set_MedicineClassification(List`1<MedicineClassificationComponent> value);
    public PackagingComponent get_Packaging();
    public void set_Packaging(PackagingComponent value);
    public List`1<DrugCharacteristicComponent> get_DrugCharacteristic();
    public void set_DrugCharacteristic(List`1<DrugCharacteristicComponent> value);
    public List`1<ResourceReference> get_Contraindication();
    public void set_Contraindication(List`1<ResourceReference> value);
    public List`1<RegulatoryComponent> get_Regulatory();
    public void set_Regulatory(List`1<RegulatoryComponent> value);
    public List`1<KineticsComponent> get_Kinetics();
    public void set_Kinetics(List`1<KineticsComponent> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicationKnowledge/<get_Children>d__125")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicationKnowledge/<get_NamedChildren>d__127")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicationKnowledge/<GetElementPairs>d__129")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("MedicationRequest", "http://hl7.org/fhir/StructureDefinition/MedicationRequest")]
public class Hl7.Fhir.Model.MedicationRequest : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<MedicationrequestStatus> _StatusElement;
    private CodeableConcept _StatusReason;
    private Code`1<MedicationRequestIntent> _IntentElement;
    private List`1<CodeableConcept> _Category;
    private Code`1<RequestPriority> _PriorityElement;
    private FhirBoolean _DoNotPerformElement;
    private DataType _Reported;
    private DataType _Medication;
    private ResourceReference _Subject;
    private ResourceReference _Encounter;
    private List`1<ResourceReference> _SupportingInformation;
    private FhirDateTime _AuthoredOnElement;
    private ResourceReference _Requester;
    private ResourceReference _Performer;
    private CodeableConcept _PerformerType;
    private ResourceReference _Recorder;
    private List`1<CodeableConcept> _ReasonCode;
    private List`1<ResourceReference> _ReasonReference;
    private List`1<Canonical> _InstantiatesCanonicalElement;
    private List`1<FhirUri> _InstantiatesUriElement;
    private List`1<ResourceReference> _BasedOn;
    private Identifier _GroupIdentifier;
    private CodeableConcept _CourseOfTherapyType;
    private List`1<ResourceReference> _Insurance;
    private List`1<Annotation> _Note;
    private List`1<Dosage> _DosageInstruction;
    private DispenseRequestComponent _DispenseRequest;
    private SubstitutionComponent _Substitution;
    private ResourceReference _PriorPrescription;
    private List`1<ResourceReference> _DetectedIssue;
    private List`1<ResourceReference> _EventHistory;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("MedicationRequestStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<MedicationrequestStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<MedicationrequestStatus> Status { get; public set; }
    [FhirElementAttribute("statusReason")]
[BindingAttribute("MedicationRequestStatusReason")]
[DataMemberAttribute]
public CodeableConcept StatusReason { get; public set; }
    [FhirElementAttribute("intent")]
[DeclaredTypeAttribute]
[BindingAttribute("MedicationRequestIntent")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<MedicationRequestIntent> IntentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<MedicationRequestIntent> Intent { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("MedicationRequestCategory")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Category { get; public set; }
    [FhirElementAttribute("priority")]
[DeclaredTypeAttribute]
[BindingAttribute("MedicationRequestPriority")]
[DataMemberAttribute]
public Code`1<RequestPriority> PriorityElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<RequestPriority> Priority { get; public set; }
    [FhirElementAttribute("doNotPerform")]
[DataMemberAttribute]
public FhirBoolean DoNotPerformElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> DoNotPerform { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Reported { get; public set; }
    [FhirElementAttribute]
[BindingAttribute("MedicationCode")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public DataType Medication { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute("supportingInformation")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> SupportingInformation { get; public set; }
    [FhirElementAttribute("authoredOn")]
[DataMemberAttribute]
public FhirDateTime AuthoredOnElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string AuthoredOn { get; public set; }
    [FhirElementAttribute("requester")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Requester { get; public set; }
    [FhirElementAttribute("performer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Performer { get; public set; }
    [FhirElementAttribute("performerType")]
[BindingAttribute("MedicationRequestPerformerType")]
[DataMemberAttribute]
public CodeableConcept PerformerType { get; public set; }
    [FhirElementAttribute("recorder")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Recorder { get; public set; }
    [FhirElementAttribute("reasonCode")]
[BindingAttribute("MedicationRequestReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ReasonCode { get; public set; }
    [FhirElementAttribute("reasonReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ReasonReference { get; public set; }
    [FhirElementAttribute("instantiatesCanonical")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> InstantiatesCanonicalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> InstantiatesCanonical { get; public set; }
    [FhirElementAttribute("instantiatesUri")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirUri> InstantiatesUriElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> InstantiatesUri { get; public set; }
    [FhirElementAttribute("basedOn")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> BasedOn { get; public set; }
    [FhirElementAttribute("groupIdentifier")]
[DataMemberAttribute]
public Identifier GroupIdentifier { get; public set; }
    [FhirElementAttribute("courseOfTherapyType")]
[BindingAttribute("MedicationRequestCourseOfTherapy")]
[DataMemberAttribute]
public CodeableConcept CourseOfTherapyType { get; public set; }
    [FhirElementAttribute("insurance")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Insurance { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("dosageInstruction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Dosage> DosageInstruction { get; public set; }
    [FhirElementAttribute("dispenseRequest")]
[DataMemberAttribute]
public DispenseRequestComponent DispenseRequest { get; public set; }
    [FhirElementAttribute("substitution")]
[DataMemberAttribute]
public SubstitutionComponent Substitution { get; public set; }
    [FhirElementAttribute("priorPrescription")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference PriorPrescription { get; public set; }
    [FhirElementAttribute("detectedIssue")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> DetectedIssue { get; public set; }
    [FhirElementAttribute("eventHistory")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> EventHistory { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private DataType Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.DataType>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<MedicationrequestStatus> get_StatusElement();
    public void set_StatusElement(Code`1<MedicationrequestStatus> value);
    public Nullable`1<MedicationrequestStatus> get_Status();
    public void set_Status(Nullable`1<MedicationrequestStatus> value);
    public CodeableConcept get_StatusReason();
    public void set_StatusReason(CodeableConcept value);
    public Code`1<MedicationRequestIntent> get_IntentElement();
    public void set_IntentElement(Code`1<MedicationRequestIntent> value);
    public Nullable`1<MedicationRequestIntent> get_Intent();
    public void set_Intent(Nullable`1<MedicationRequestIntent> value);
    public List`1<CodeableConcept> get_Category();
    public void set_Category(List`1<CodeableConcept> value);
    public Code`1<RequestPriority> get_PriorityElement();
    public void set_PriorityElement(Code`1<RequestPriority> value);
    public Nullable`1<RequestPriority> get_Priority();
    public void set_Priority(Nullable`1<RequestPriority> value);
    public FhirBoolean get_DoNotPerformElement();
    public void set_DoNotPerformElement(FhirBoolean value);
    public Nullable`1<bool> get_DoNotPerform();
    public void set_DoNotPerform(Nullable`1<bool> value);
    public DataType get_Reported();
    public void set_Reported(DataType value);
    public DataType get_Medication();
    public void set_Medication(DataType value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public List`1<ResourceReference> get_SupportingInformation();
    public void set_SupportingInformation(List`1<ResourceReference> value);
    public FhirDateTime get_AuthoredOnElement();
    public void set_AuthoredOnElement(FhirDateTime value);
    public string get_AuthoredOn();
    public void set_AuthoredOn(string value);
    public ResourceReference get_Requester();
    public void set_Requester(ResourceReference value);
    public ResourceReference get_Performer();
    public void set_Performer(ResourceReference value);
    public CodeableConcept get_PerformerType();
    public void set_PerformerType(CodeableConcept value);
    public ResourceReference get_Recorder();
    public void set_Recorder(ResourceReference value);
    public List`1<CodeableConcept> get_ReasonCode();
    public void set_ReasonCode(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_ReasonReference();
    public void set_ReasonReference(List`1<ResourceReference> value);
    public List`1<Canonical> get_InstantiatesCanonicalElement();
    public void set_InstantiatesCanonicalElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_InstantiatesCanonical();
    public void set_InstantiatesCanonical(IEnumerable`1<string> value);
    public List`1<FhirUri> get_InstantiatesUriElement();
    public void set_InstantiatesUriElement(List`1<FhirUri> value);
    public IEnumerable`1<string> get_InstantiatesUri();
    public void set_InstantiatesUri(IEnumerable`1<string> value);
    public List`1<ResourceReference> get_BasedOn();
    public void set_BasedOn(List`1<ResourceReference> value);
    public Identifier get_GroupIdentifier();
    public void set_GroupIdentifier(Identifier value);
    public CodeableConcept get_CourseOfTherapyType();
    public void set_CourseOfTherapyType(CodeableConcept value);
    public List`1<ResourceReference> get_Insurance();
    public void set_Insurance(List`1<ResourceReference> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public List`1<Dosage> get_DosageInstruction();
    public void set_DosageInstruction(List`1<Dosage> value);
    public DispenseRequestComponent get_DispenseRequest();
    public void set_DispenseRequest(DispenseRequestComponent value);
    public SubstitutionComponent get_Substitution();
    public void set_Substitution(SubstitutionComponent value);
    public ResourceReference get_PriorPrescription();
    public void set_PriorPrescription(ResourceReference value);
    public List`1<ResourceReference> get_DetectedIssue();
    public void set_DetectedIssue(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_EventHistory();
    public void set_EventHistory(List`1<ResourceReference> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override DataType Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.DataType>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.DataType>.set_Code(DataType value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicationRequest/<get_Children>d__168")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicationRequest/<get_NamedChildren>d__170")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicationRequest/<GetElementPairs>d__172")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("MedicationStatement", "http://hl7.org/fhir/StructureDefinition/MedicationStatement")]
public class Hl7.Fhir.Model.MedicationStatement : DomainResource {
    private List`1<Identifier> _Identifier;
    private List`1<ResourceReference> _BasedOn;
    private List`1<ResourceReference> _PartOf;
    private Code`1<MedicationStatusCodes> _StatusElement;
    private List`1<CodeableConcept> _StatusReason;
    private CodeableConcept _Category;
    private DataType _Medication;
    private ResourceReference _Subject;
    private ResourceReference _Context;
    private DataType _Effective;
    private FhirDateTime _DateAssertedElement;
    private ResourceReference _InformationSource;
    private List`1<ResourceReference> _DerivedFrom;
    private List`1<CodeableConcept> _ReasonCode;
    private List`1<ResourceReference> _ReasonReference;
    private List`1<Annotation> _Note;
    private List`1<Dosage> _Dosage;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("basedOn")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> BasedOn { get; public set; }
    [FhirElementAttribute("partOf")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> PartOf { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("MedicationStatementStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<MedicationStatusCodes> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<MedicationStatusCodes> Status { get; public set; }
    [FhirElementAttribute("statusReason")]
[BindingAttribute("MedicationStatementStatusReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> StatusReason { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("MedicationStatementCategory")]
[DataMemberAttribute]
public CodeableConcept Category { get; public set; }
    [FhirElementAttribute]
[BindingAttribute("MedicationCode")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public DataType Medication { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("context")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Context { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Effective { get; public set; }
    [FhirElementAttribute("dateAsserted")]
[DataMemberAttribute]
public FhirDateTime DateAssertedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string DateAsserted { get; public set; }
    [FhirElementAttribute("informationSource")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference InformationSource { get; public set; }
    [FhirElementAttribute("derivedFrom")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> DerivedFrom { get; public set; }
    [FhirElementAttribute("reasonCode")]
[BindingAttribute("MedicationReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ReasonCode { get; public set; }
    [FhirElementAttribute("reasonReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ReasonReference { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("dosage")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Dosage> Dosage { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private DataType Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.DataType>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<ResourceReference> get_BasedOn();
    public void set_BasedOn(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_PartOf();
    public void set_PartOf(List`1<ResourceReference> value);
    public Code`1<MedicationStatusCodes> get_StatusElement();
    public void set_StatusElement(Code`1<MedicationStatusCodes> value);
    public Nullable`1<MedicationStatusCodes> get_Status();
    public void set_Status(Nullable`1<MedicationStatusCodes> value);
    public List`1<CodeableConcept> get_StatusReason();
    public void set_StatusReason(List`1<CodeableConcept> value);
    public CodeableConcept get_Category();
    public void set_Category(CodeableConcept value);
    public DataType get_Medication();
    public void set_Medication(DataType value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Context();
    public void set_Context(ResourceReference value);
    public DataType get_Effective();
    public void set_Effective(DataType value);
    public FhirDateTime get_DateAssertedElement();
    public void set_DateAssertedElement(FhirDateTime value);
    public string get_DateAsserted();
    public void set_DateAsserted(string value);
    public ResourceReference get_InformationSource();
    public void set_InformationSource(ResourceReference value);
    public List`1<ResourceReference> get_DerivedFrom();
    public void set_DerivedFrom(List`1<ResourceReference> value);
    public List`1<CodeableConcept> get_ReasonCode();
    public void set_ReasonCode(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_ReasonReference();
    public void set_ReasonReference(List`1<ResourceReference> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public List`1<Dosage> get_Dosage();
    public void set_Dosage(List`1<Dosage> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override DataType Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.DataType>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.DataType>.set_Code(DataType value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicationStatement/<get_Children>d__89")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicationStatement/<get_NamedChildren>d__91")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicationStatement/<GetElementPairs>d__93")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("MedicinalProduct", "http://hl7.org/fhir/StructureDefinition/MedicinalProduct")]
public class Hl7.Fhir.Model.MedicinalProduct : DomainResource {
    private List`1<Identifier> _Identifier;
    private CodeableConcept _Type;
    private Coding _Domain;
    private CodeableConcept _CombinedPharmaceuticalDoseForm;
    private CodeableConcept _LegalStatusOfSupply;
    private CodeableConcept _AdditionalMonitoringIndicator;
    private List`1<FhirString> _SpecialMeasuresElement;
    private CodeableConcept _PaediatricUseIndicator;
    private List`1<CodeableConcept> _ProductClassification;
    private List`1<MarketingStatus> _MarketingStatus;
    private List`1<ResourceReference> _PharmaceuticalProduct;
    private List`1<ResourceReference> _PackagedMedicinalProduct;
    private List`1<ResourceReference> _AttachedDocument;
    private List`1<ResourceReference> _MasterFile;
    private List`1<ResourceReference> _Contact;
    private List`1<ResourceReference> _ClinicalTrial;
    private List`1<NameComponent> _Name;
    private List`1<Identifier> _CrossReference;
    private List`1<ManufacturingBusinessOperationComponent> _ManufacturingBusinessOperation;
    private List`1<SpecialDesignationComponent> _SpecialDesignation;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("type")]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("domain")]
[DataMemberAttribute]
public Coding Domain { get; public set; }
    [FhirElementAttribute("combinedPharmaceuticalDoseForm")]
[DataMemberAttribute]
public CodeableConcept CombinedPharmaceuticalDoseForm { get; public set; }
    [FhirElementAttribute("legalStatusOfSupply")]
[DataMemberAttribute]
public CodeableConcept LegalStatusOfSupply { get; public set; }
    [FhirElementAttribute("additionalMonitoringIndicator")]
[DataMemberAttribute]
public CodeableConcept AdditionalMonitoringIndicator { get; public set; }
    [FhirElementAttribute("specialMeasures")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> SpecialMeasuresElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> SpecialMeasures { get; public set; }
    [FhirElementAttribute("paediatricUseIndicator")]
[DataMemberAttribute]
public CodeableConcept PaediatricUseIndicator { get; public set; }
    [FhirElementAttribute("productClassification")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ProductClassification { get; public set; }
    [FhirElementAttribute("marketingStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<MarketingStatus> MarketingStatus { get; public set; }
    [FhirElementAttribute("pharmaceuticalProduct")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> PharmaceuticalProduct { get; public set; }
    [FhirElementAttribute("packagedMedicinalProduct")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> PackagedMedicinalProduct { get; public set; }
    [FhirElementAttribute("attachedDocument")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> AttachedDocument { get; public set; }
    [FhirElementAttribute("masterFile")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> MasterFile { get; public set; }
    [FhirElementAttribute("contact")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Contact { get; public set; }
    [FhirElementAttribute("clinicalTrial")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ClinicalTrial { get; public set; }
    [FhirElementAttribute("name")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<NameComponent> Name { get; public set; }
    [FhirElementAttribute("crossReference")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> CrossReference { get; public set; }
    [FhirElementAttribute("manufacturingBusinessOperation")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ManufacturingBusinessOperationComponent> ManufacturingBusinessOperation { get; public set; }
    [FhirElementAttribute("specialDesignation")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<SpecialDesignationComponent> SpecialDesignation { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public Coding get_Domain();
    public void set_Domain(Coding value);
    public CodeableConcept get_CombinedPharmaceuticalDoseForm();
    public void set_CombinedPharmaceuticalDoseForm(CodeableConcept value);
    public CodeableConcept get_LegalStatusOfSupply();
    public void set_LegalStatusOfSupply(CodeableConcept value);
    public CodeableConcept get_AdditionalMonitoringIndicator();
    public void set_AdditionalMonitoringIndicator(CodeableConcept value);
    public List`1<FhirString> get_SpecialMeasuresElement();
    public void set_SpecialMeasuresElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_SpecialMeasures();
    public void set_SpecialMeasures(IEnumerable`1<string> value);
    public CodeableConcept get_PaediatricUseIndicator();
    public void set_PaediatricUseIndicator(CodeableConcept value);
    public List`1<CodeableConcept> get_ProductClassification();
    public void set_ProductClassification(List`1<CodeableConcept> value);
    public List`1<MarketingStatus> get_MarketingStatus();
    public void set_MarketingStatus(List`1<MarketingStatus> value);
    public List`1<ResourceReference> get_PharmaceuticalProduct();
    public void set_PharmaceuticalProduct(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_PackagedMedicinalProduct();
    public void set_PackagedMedicinalProduct(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_AttachedDocument();
    public void set_AttachedDocument(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_MasterFile();
    public void set_MasterFile(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Contact();
    public void set_Contact(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_ClinicalTrial();
    public void set_ClinicalTrial(List`1<ResourceReference> value);
    public List`1<NameComponent> get_Name();
    public void set_Name(List`1<NameComponent> value);
    public List`1<Identifier> get_CrossReference();
    public void set_CrossReference(List`1<Identifier> value);
    public List`1<ManufacturingBusinessOperationComponent> get_ManufacturingBusinessOperation();
    public void set_ManufacturingBusinessOperation(List`1<ManufacturingBusinessOperationComponent> value);
    public List`1<SpecialDesignationComponent> get_SpecialDesignation();
    public void set_SpecialDesignation(List`1<SpecialDesignationComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProduct/<get_Children>d__98")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProduct/<get_NamedChildren>d__100")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProduct/<GetElementPairs>d__102")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("MedicinalProductAuthorization", "http://hl7.org/fhir/StructureDefinition/MedicinalProductAuthorization")]
public class Hl7.Fhir.Model.MedicinalProductAuthorization : DomainResource {
    private List`1<Identifier> _Identifier;
    private ResourceReference _Subject;
    private List`1<CodeableConcept> _Country;
    private List`1<CodeableConcept> _Jurisdiction;
    private CodeableConcept _Status;
    private FhirDateTime _StatusDateElement;
    private FhirDateTime _RestoreDateElement;
    private Period _ValidityPeriod;
    private Period _DataExclusivityPeriod;
    private FhirDateTime _DateOfFirstAuthorizationElement;
    private FhirDateTime _InternationalBirthDateElement;
    private CodeableConcept _LegalBasis;
    private List`1<JurisdictionalAuthorizationComponent> _JurisdictionalAuthorization;
    private ResourceReference _Holder;
    private ResourceReference _Regulator;
    private ProcedureComponent _Procedure;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("country")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Country { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("status")]
[DataMemberAttribute]
public CodeableConcept Status { get; public set; }
    [FhirElementAttribute("statusDate")]
[DataMemberAttribute]
public FhirDateTime StatusDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string StatusDate { get; public set; }
    [FhirElementAttribute("restoreDate")]
[DataMemberAttribute]
public FhirDateTime RestoreDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string RestoreDate { get; public set; }
    [FhirElementAttribute("validityPeriod")]
[DataMemberAttribute]
public Period ValidityPeriod { get; public set; }
    [FhirElementAttribute("dataExclusivityPeriod")]
[DataMemberAttribute]
public Period DataExclusivityPeriod { get; public set; }
    [FhirElementAttribute("dateOfFirstAuthorization")]
[DataMemberAttribute]
public FhirDateTime DateOfFirstAuthorizationElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string DateOfFirstAuthorization { get; public set; }
    [FhirElementAttribute("internationalBirthDate")]
[DataMemberAttribute]
public FhirDateTime InternationalBirthDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string InternationalBirthDate { get; public set; }
    [FhirElementAttribute("legalBasis")]
[DataMemberAttribute]
public CodeableConcept LegalBasis { get; public set; }
    [FhirElementAttribute("jurisdictionalAuthorization")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<JurisdictionalAuthorizationComponent> JurisdictionalAuthorization { get; public set; }
    [FhirElementAttribute("holder")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Holder { get; public set; }
    [FhirElementAttribute("regulator")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Regulator { get; public set; }
    [FhirElementAttribute("procedure")]
[DataMemberAttribute]
public ProcedureComponent Procedure { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public List`1<CodeableConcept> get_Country();
    public void set_Country(List`1<CodeableConcept> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public CodeableConcept get_Status();
    public void set_Status(CodeableConcept value);
    public FhirDateTime get_StatusDateElement();
    public void set_StatusDateElement(FhirDateTime value);
    public string get_StatusDate();
    public void set_StatusDate(string value);
    public FhirDateTime get_RestoreDateElement();
    public void set_RestoreDateElement(FhirDateTime value);
    public string get_RestoreDate();
    public void set_RestoreDate(string value);
    public Period get_ValidityPeriod();
    public void set_ValidityPeriod(Period value);
    public Period get_DataExclusivityPeriod();
    public void set_DataExclusivityPeriod(Period value);
    public FhirDateTime get_DateOfFirstAuthorizationElement();
    public void set_DateOfFirstAuthorizationElement(FhirDateTime value);
    public string get_DateOfFirstAuthorization();
    public void set_DateOfFirstAuthorization(string value);
    public FhirDateTime get_InternationalBirthDateElement();
    public void set_InternationalBirthDateElement(FhirDateTime value);
    public string get_InternationalBirthDate();
    public void set_InternationalBirthDate(string value);
    public CodeableConcept get_LegalBasis();
    public void set_LegalBasis(CodeableConcept value);
    public List`1<JurisdictionalAuthorizationComponent> get_JurisdictionalAuthorization();
    public void set_JurisdictionalAuthorization(List`1<JurisdictionalAuthorizationComponent> value);
    public ResourceReference get_Holder();
    public void set_Holder(ResourceReference value);
    public ResourceReference get_Regulator();
    public void set_Regulator(ResourceReference value);
    public ProcedureComponent get_Procedure();
    public void set_Procedure(ProcedureComponent value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductAuthorization/<get_Children>d__88")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductAuthorization/<get_NamedChildren>d__90")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductAuthorization/<GetElementPairs>d__92")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[ObsoleteAttribute("This resource was removed in R4", "True")]
public class Hl7.Fhir.Model.MedicinalProductClinicals : object {
}
[DataContractAttribute]
[FhirTypeAttribute("MedicinalProductContraindication", "http://hl7.org/fhir/StructureDefinition/MedicinalProductContraindication")]
public class Hl7.Fhir.Model.MedicinalProductContraindication : DomainResource {
    private List`1<ResourceReference> _Subject;
    private CodeableConcept _Disease;
    private CodeableConcept _DiseaseStatus;
    private List`1<CodeableConcept> _Comorbidity;
    private List`1<ResourceReference> _TherapeuticIndication;
    private List`1<OtherTherapyComponent> _OtherTherapy;
    private List`1<Population> _Population;
    public string TypeName { get; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Subject { get; public set; }
    [FhirElementAttribute("disease")]
[DataMemberAttribute]
public CodeableConcept Disease { get; public set; }
    [FhirElementAttribute("diseaseStatus")]
[DataMemberAttribute]
public CodeableConcept DiseaseStatus { get; public set; }
    [FhirElementAttribute("comorbidity")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Comorbidity { get; public set; }
    [FhirElementAttribute("therapeuticIndication")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> TherapeuticIndication { get; public set; }
    [FhirElementAttribute("otherTherapy")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<OtherTherapyComponent> OtherTherapy { get; public set; }
    [FhirElementAttribute("population")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Population> Population { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<ResourceReference> get_Subject();
    public void set_Subject(List`1<ResourceReference> value);
    public CodeableConcept get_Disease();
    public void set_Disease(CodeableConcept value);
    public CodeableConcept get_DiseaseStatus();
    public void set_DiseaseStatus(CodeableConcept value);
    public List`1<CodeableConcept> get_Comorbidity();
    public void set_Comorbidity(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_TherapeuticIndication();
    public void set_TherapeuticIndication(List`1<ResourceReference> value);
    public List`1<OtherTherapyComponent> get_OtherTherapy();
    public void set_OtherTherapy(List`1<OtherTherapyComponent> value);
    public List`1<Population> get_Population();
    public void set_Population(List`1<Population> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductContraindication/<get_Children>d__36")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductContraindication/<get_NamedChildren>d__38")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductContraindication/<GetElementPairs>d__40")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[ObsoleteAttribute("This resource was removed in R4", "True")]
public class Hl7.Fhir.Model.MedicinalProductDeviceSpec : object {
}
[DataContractAttribute]
[FhirTypeAttribute("MedicinalProductIndication", "http://hl7.org/fhir/StructureDefinition/MedicinalProductIndication")]
public class Hl7.Fhir.Model.MedicinalProductIndication : DomainResource {
    private List`1<ResourceReference> _Subject;
    private CodeableConcept _DiseaseSymptomProcedure;
    private CodeableConcept _DiseaseStatus;
    private List`1<CodeableConcept> _Comorbidity;
    private CodeableConcept _IntendedEffect;
    private Quantity _Duration;
    private List`1<OtherTherapyComponent> _OtherTherapy;
    private List`1<ResourceReference> _UndesirableEffect;
    private List`1<Population> _Population;
    public string TypeName { get; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Subject { get; public set; }
    [FhirElementAttribute("diseaseSymptomProcedure")]
[DataMemberAttribute]
public CodeableConcept DiseaseSymptomProcedure { get; public set; }
    [FhirElementAttribute("diseaseStatus")]
[DataMemberAttribute]
public CodeableConcept DiseaseStatus { get; public set; }
    [FhirElementAttribute("comorbidity")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Comorbidity { get; public set; }
    [FhirElementAttribute("intendedEffect")]
[DataMemberAttribute]
public CodeableConcept IntendedEffect { get; public set; }
    [FhirElementAttribute("duration")]
[DataMemberAttribute]
public Quantity Duration { get; public set; }
    [FhirElementAttribute("otherTherapy")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<OtherTherapyComponent> OtherTherapy { get; public set; }
    [FhirElementAttribute("undesirableEffect")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> UndesirableEffect { get; public set; }
    [FhirElementAttribute("population")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Population> Population { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<ResourceReference> get_Subject();
    public void set_Subject(List`1<ResourceReference> value);
    public CodeableConcept get_DiseaseSymptomProcedure();
    public void set_DiseaseSymptomProcedure(CodeableConcept value);
    public CodeableConcept get_DiseaseStatus();
    public void set_DiseaseStatus(CodeableConcept value);
    public List`1<CodeableConcept> get_Comorbidity();
    public void set_Comorbidity(List`1<CodeableConcept> value);
    public CodeableConcept get_IntendedEffect();
    public void set_IntendedEffect(CodeableConcept value);
    public Quantity get_Duration();
    public void set_Duration(Quantity value);
    public List`1<OtherTherapyComponent> get_OtherTherapy();
    public void set_OtherTherapy(List`1<OtherTherapyComponent> value);
    public List`1<ResourceReference> get_UndesirableEffect();
    public void set_UndesirableEffect(List`1<ResourceReference> value);
    public List`1<Population> get_Population();
    public void set_Population(List`1<Population> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductIndication/<get_Children>d__44")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductIndication/<get_NamedChildren>d__46")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductIndication/<GetElementPairs>d__48")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("MedicinalProductIngredient", "http://hl7.org/fhir/StructureDefinition/MedicinalProductIngredient")]
public class Hl7.Fhir.Model.MedicinalProductIngredient : DomainResource {
    private Identifier _Identifier;
    private CodeableConcept _Role;
    private FhirBoolean _AllergenicIndicatorElement;
    private List`1<ResourceReference> _Manufacturer;
    private List`1<SpecifiedSubstanceComponent> _SpecifiedSubstance;
    private SubstanceComponent _Substance;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[DataMemberAttribute]
public Identifier Identifier { get; public set; }
    [FhirElementAttribute("role")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept Role { get; public set; }
    [FhirElementAttribute("allergenicIndicator")]
[DataMemberAttribute]
public FhirBoolean AllergenicIndicatorElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> AllergenicIndicator { get; public set; }
    [FhirElementAttribute("manufacturer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Manufacturer { get; public set; }
    [FhirElementAttribute("specifiedSubstance")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<SpecifiedSubstanceComponent> SpecifiedSubstance { get; public set; }
    [FhirElementAttribute("substance")]
[DataMemberAttribute]
public SubstanceComponent Substance { get; public set; }
    private Identifier Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Identifier get_Identifier();
    public void set_Identifier(Identifier value);
    public CodeableConcept get_Role();
    public void set_Role(CodeableConcept value);
    public FhirBoolean get_AllergenicIndicatorElement();
    public void set_AllergenicIndicatorElement(FhirBoolean value);
    public Nullable`1<bool> get_AllergenicIndicator();
    public void set_AllergenicIndicator(Nullable`1<bool> value);
    public List`1<ResourceReference> get_Manufacturer();
    public void set_Manufacturer(List`1<ResourceReference> value);
    public List`1<SpecifiedSubstanceComponent> get_SpecifiedSubstance();
    public void set_SpecifiedSubstance(List`1<SpecifiedSubstanceComponent> value);
    public SubstanceComponent get_Substance();
    public void set_Substance(SubstanceComponent value);
    private sealed virtual override Identifier Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.set_Identifier(Identifier value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductIngredient/<get_Children>d__41")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductIngredient/<get_NamedChildren>d__43")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductIngredient/<GetElementPairs>d__45")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("MedicinalProductInteraction", "http://hl7.org/fhir/StructureDefinition/MedicinalProductInteraction")]
public class Hl7.Fhir.Model.MedicinalProductInteraction : DomainResource {
    private List`1<ResourceReference> _Subject;
    private FhirString _DescriptionElement;
    private List`1<InteractantComponent> _Interactant;
    private CodeableConcept _Type;
    private CodeableConcept _Effect;
    private CodeableConcept _Incidence;
    private CodeableConcept _Management;
    public string TypeName { get; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Subject { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public FhirString DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("interactant")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<InteractantComponent> Interactant { get; public set; }
    [FhirElementAttribute("type")]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("effect")]
[DataMemberAttribute]
public CodeableConcept Effect { get; public set; }
    [FhirElementAttribute("incidence")]
[DataMemberAttribute]
public CodeableConcept Incidence { get; public set; }
    [FhirElementAttribute("management")]
[DataMemberAttribute]
public CodeableConcept Management { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<ResourceReference> get_Subject();
    public void set_Subject(List`1<ResourceReference> value);
    public FhirString get_DescriptionElement();
    public void set_DescriptionElement(FhirString value);
    public string get_Description();
    public void set_Description(string value);
    public List`1<InteractantComponent> get_Interactant();
    public void set_Interactant(List`1<InteractantComponent> value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public CodeableConcept get_Effect();
    public void set_Effect(CodeableConcept value);
    public CodeableConcept get_Incidence();
    public void set_Incidence(CodeableConcept value);
    public CodeableConcept get_Management();
    public void set_Management(CodeableConcept value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductInteraction/<get_Children>d__39")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductInteraction/<get_NamedChildren>d__41")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductInteraction/<GetElementPairs>d__43")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("MedicinalProductManufactured", "http://hl7.org/fhir/StructureDefinition/MedicinalProductManufactured")]
public class Hl7.Fhir.Model.MedicinalProductManufactured : DomainResource {
    private CodeableConcept _ManufacturedDoseForm;
    private CodeableConcept _UnitOfPresentation;
    private Quantity _Quantity;
    private List`1<ResourceReference> _Manufacturer;
    private List`1<ResourceReference> _Ingredient;
    private ProdCharacteristic _PhysicalCharacteristics;
    private List`1<CodeableConcept> _OtherCharacteristics;
    public string TypeName { get; }
    [FhirElementAttribute("manufacturedDoseForm")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept ManufacturedDoseForm { get; public set; }
    [FhirElementAttribute("unitOfPresentation")]
[DataMemberAttribute]
public CodeableConcept UnitOfPresentation { get; public set; }
    [FhirElementAttribute("quantity")]
[CardinalityAttribute]
[DataMemberAttribute]
public Quantity Quantity { get; public set; }
    [FhirElementAttribute("manufacturer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Manufacturer { get; public set; }
    [FhirElementAttribute("ingredient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Ingredient { get; public set; }
    [FhirElementAttribute("physicalCharacteristics")]
[DataMemberAttribute]
public ProdCharacteristic PhysicalCharacteristics { get; public set; }
    [FhirElementAttribute("otherCharacteristics")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> OtherCharacteristics { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public CodeableConcept get_ManufacturedDoseForm();
    public void set_ManufacturedDoseForm(CodeableConcept value);
    public CodeableConcept get_UnitOfPresentation();
    public void set_UnitOfPresentation(CodeableConcept value);
    public Quantity get_Quantity();
    public void set_Quantity(Quantity value);
    public List`1<ResourceReference> get_Manufacturer();
    public void set_Manufacturer(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Ingredient();
    public void set_Ingredient(List`1<ResourceReference> value);
    public ProdCharacteristic get_PhysicalCharacteristics();
    public void set_PhysicalCharacteristics(ProdCharacteristic value);
    public List`1<CodeableConcept> get_OtherCharacteristics();
    public void set_OtherCharacteristics(List`1<CodeableConcept> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductManufactured/<get_Children>d__35")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductManufactured/<get_NamedChildren>d__37")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductManufactured/<GetElementPairs>d__39")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("MedicinalProductPackaged", "http://hl7.org/fhir/StructureDefinition/MedicinalProductPackaged")]
public class Hl7.Fhir.Model.MedicinalProductPackaged : DomainResource {
    private List`1<Identifier> _Identifier;
    private List`1<ResourceReference> _Subject;
    private FhirString _DescriptionElement;
    private CodeableConcept _LegalStatusOfSupply;
    private List`1<MarketingStatus> _MarketingStatus;
    private ResourceReference _MarketingAuthorization;
    private List`1<ResourceReference> _Manufacturer;
    private List`1<BatchIdentifierComponent> _BatchIdentifier;
    private List`1<PackageItemComponent> _PackageItem;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Subject { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public FhirString DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("legalStatusOfSupply")]
[DataMemberAttribute]
public CodeableConcept LegalStatusOfSupply { get; public set; }
    [FhirElementAttribute("marketingStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<MarketingStatus> MarketingStatus { get; public set; }
    [FhirElementAttribute("marketingAuthorization")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference MarketingAuthorization { get; public set; }
    [FhirElementAttribute("manufacturer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Manufacturer { get; public set; }
    [FhirElementAttribute("batchIdentifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<BatchIdentifierComponent> BatchIdentifier { get; public set; }
    [FhirElementAttribute("packageItem")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<PackageItemComponent> PackageItem { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<ResourceReference> get_Subject();
    public void set_Subject(List`1<ResourceReference> value);
    public FhirString get_DescriptionElement();
    public void set_DescriptionElement(FhirString value);
    public string get_Description();
    public void set_Description(string value);
    public CodeableConcept get_LegalStatusOfSupply();
    public void set_LegalStatusOfSupply(CodeableConcept value);
    public List`1<MarketingStatus> get_MarketingStatus();
    public void set_MarketingStatus(List`1<MarketingStatus> value);
    public ResourceReference get_MarketingAuthorization();
    public void set_MarketingAuthorization(ResourceReference value);
    public List`1<ResourceReference> get_Manufacturer();
    public void set_Manufacturer(List`1<ResourceReference> value);
    public List`1<BatchIdentifierComponent> get_BatchIdentifier();
    public void set_BatchIdentifier(List`1<BatchIdentifierComponent> value);
    public List`1<PackageItemComponent> get_PackageItem();
    public void set_PackageItem(List`1<PackageItemComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductPackaged/<get_Children>d__51")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductPackaged/<get_NamedChildren>d__53")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductPackaged/<GetElementPairs>d__55")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("MedicinalProductPharmaceutical", "http://hl7.org/fhir/StructureDefinition/MedicinalProductPharmaceutical")]
public class Hl7.Fhir.Model.MedicinalProductPharmaceutical : DomainResource {
    private List`1<Identifier> _Identifier;
    private CodeableConcept _AdministrableDoseForm;
    private CodeableConcept _UnitOfPresentation;
    private List`1<ResourceReference> _Ingredient;
    private List`1<ResourceReference> _Device;
    private List`1<CharacteristicsComponent> _Characteristics;
    private List`1<RouteOfAdministrationComponent> _RouteOfAdministration;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("administrableDoseForm")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept AdministrableDoseForm { get; public set; }
    [FhirElementAttribute("unitOfPresentation")]
[DataMemberAttribute]
public CodeableConcept UnitOfPresentation { get; public set; }
    [FhirElementAttribute("ingredient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Ingredient { get; public set; }
    [FhirElementAttribute("device")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Device { get; public set; }
    [FhirElementAttribute("characteristics")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CharacteristicsComponent> Characteristics { get; public set; }
    [FhirElementAttribute("routeOfAdministration")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RouteOfAdministrationComponent> RouteOfAdministration { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public CodeableConcept get_AdministrableDoseForm();
    public void set_AdministrableDoseForm(CodeableConcept value);
    public CodeableConcept get_UnitOfPresentation();
    public void set_UnitOfPresentation(CodeableConcept value);
    public List`1<ResourceReference> get_Ingredient();
    public void set_Ingredient(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Device();
    public void set_Device(List`1<ResourceReference> value);
    public List`1<CharacteristicsComponent> get_Characteristics();
    public void set_Characteristics(List`1<CharacteristicsComponent> value);
    public List`1<RouteOfAdministrationComponent> get_RouteOfAdministration();
    public void set_RouteOfAdministration(List`1<RouteOfAdministrationComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductPharmaceutical/<get_Children>d__42")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductPharmaceutical/<get_NamedChildren>d__44")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductPharmaceutical/<GetElementPairs>d__46")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("MedicinalProductUndesirableEffect", "http://hl7.org/fhir/StructureDefinition/MedicinalProductUndesirableEffect")]
public class Hl7.Fhir.Model.MedicinalProductUndesirableEffect : DomainResource {
    private List`1<ResourceReference> _Subject;
    private CodeableConcept _SymptomConditionEffect;
    private CodeableConcept _Classification;
    private CodeableConcept _FrequencyOfOccurrence;
    private List`1<Population> _Population;
    public string TypeName { get; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Subject { get; public set; }
    [FhirElementAttribute("symptomConditionEffect")]
[DataMemberAttribute]
public CodeableConcept SymptomConditionEffect { get; public set; }
    [FhirElementAttribute("classification")]
[DataMemberAttribute]
public CodeableConcept Classification { get; public set; }
    [FhirElementAttribute("frequencyOfOccurrence")]
[DataMemberAttribute]
public CodeableConcept FrequencyOfOccurrence { get; public set; }
    [FhirElementAttribute("population")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Population> Population { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<ResourceReference> get_Subject();
    public void set_Subject(List`1<ResourceReference> value);
    public CodeableConcept get_SymptomConditionEffect();
    public void set_SymptomConditionEffect(CodeableConcept value);
    public CodeableConcept get_Classification();
    public void set_Classification(CodeableConcept value);
    public CodeableConcept get_FrequencyOfOccurrence();
    public void set_FrequencyOfOccurrence(CodeableConcept value);
    public List`1<Population> get_Population();
    public void set_Population(List`1<Population> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductUndesirableEffect/<get_Children>d__27")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductUndesirableEffect/<get_NamedChildren>d__29")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MedicinalProductUndesirableEffect/<GetElementPairs>d__31")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("MessageDefinition", "http://hl7.org/fhir/StructureDefinition/MessageDefinition")]
public class Hl7.Fhir.Model.MessageDefinition : DomainResource {
    private FhirUri _UrlElement;
    private List`1<Identifier> _Identifier;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private FhirString _TitleElement;
    private List`1<Canonical> _ReplacesElement;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirBoolean _ExperimentalElement;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _PurposeElement;
    private Markdown _CopyrightElement;
    private Canonical _BaseElement;
    private List`1<Canonical> _ParentElement;
    private DataType _Event;
    private Code`1<MessageSignificanceCategory> _CategoryElement;
    private List`1<FocusComponent> _Focus;
    private Code`1<MessageheaderResponseRequest> _ResponseRequiredElement;
    private List`1<AllowedResponseComponent> _AllowedResponse;
    private List`1<Canonical> _GraphElement;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("replaces")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> ReplacesElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Replaces { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("experimental")]
[DataMemberAttribute]
public FhirBoolean ExperimentalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Experimental { get; public set; }
    [FhirElementAttribute("date")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("purpose")]
[DataMemberAttribute]
public Markdown PurposeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Purpose { get; public set; }
    [FhirElementAttribute("copyright")]
[DataMemberAttribute]
public Markdown CopyrightElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Copyright { get; public set; }
    [FhirElementAttribute("base")]
[DataMemberAttribute]
public Canonical BaseElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Base { get; public set; }
    [FhirElementAttribute("parent")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> ParentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Parent { get; public set; }
    [FhirElementAttribute]
[BindingAttribute("MessageEvent")]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public DataType Event { get; public set; }
    [FhirElementAttribute("category")]
[DeclaredTypeAttribute]
[BindingAttribute("MessageSignificanceCategory")]
[DataMemberAttribute]
public Code`1<MessageSignificanceCategory> CategoryElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<MessageSignificanceCategory> Category { get; public set; }
    [FhirElementAttribute("focus")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FocusComponent> Focus { get; public set; }
    [FhirElementAttribute("responseRequired")]
[DeclaredTypeAttribute]
[BindingAttribute("messageheader-response-request")]
[DataMemberAttribute]
public Code`1<MessageheaderResponseRequest> ResponseRequiredElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<MessageheaderResponseRequest> ResponseRequired { get; public set; }
    [FhirElementAttribute("allowedResponse")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<AllowedResponseComponent> AllowedResponse { get; public set; }
    [FhirElementAttribute("graph")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> GraphElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Graph { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private DataType Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.DataType>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public sealed virtual FhirUri get_UrlElement();
    public sealed virtual void set_UrlElement(FhirUri value);
    public sealed virtual string get_Url();
    public sealed virtual void set_Url(string value);
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public sealed virtual FhirString get_VersionElement();
    public sealed virtual void set_VersionElement(FhirString value);
    public sealed virtual string get_Version();
    public sealed virtual void set_Version(string value);
    public sealed virtual FhirString get_NameElement();
    public sealed virtual void set_NameElement(FhirString value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public List`1<Canonical> get_ReplacesElement();
    public void set_ReplacesElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_Replaces();
    public void set_Replaces(IEnumerable`1<string> value);
    public sealed virtual Code`1<PublicationStatus> get_StatusElement();
    public sealed virtual void set_StatusElement(Code`1<PublicationStatus> value);
    public sealed virtual Nullable`1<PublicationStatus> get_Status();
    public sealed virtual void set_Status(Nullable`1<PublicationStatus> value);
    public sealed virtual FhirBoolean get_ExperimentalElement();
    public sealed virtual void set_ExperimentalElement(FhirBoolean value);
    public sealed virtual Nullable`1<bool> get_Experimental();
    public sealed virtual void set_Experimental(Nullable`1<bool> value);
    public sealed virtual FhirDateTime get_DateElement();
    public sealed virtual void set_DateElement(FhirDateTime value);
    public sealed virtual string get_Date();
    public sealed virtual void set_Date(string value);
    public sealed virtual FhirString get_PublisherElement();
    public sealed virtual void set_PublisherElement(FhirString value);
    public sealed virtual string get_Publisher();
    public sealed virtual void set_Publisher(string value);
    public sealed virtual List`1<ContactDetail> get_Contact();
    public sealed virtual void set_Contact(List`1<ContactDetail> value);
    public sealed virtual Markdown get_DescriptionElement();
    public sealed virtual void set_DescriptionElement(Markdown value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual List`1<UsageContext> get_UseContext();
    public sealed virtual void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public sealed virtual Markdown get_PurposeElement();
    public sealed virtual void set_PurposeElement(Markdown value);
    public sealed virtual string get_Purpose();
    public sealed virtual void set_Purpose(string value);
    public Markdown get_CopyrightElement();
    public void set_CopyrightElement(Markdown value);
    public string get_Copyright();
    public void set_Copyright(string value);
    public Canonical get_BaseElement();
    public void set_BaseElement(Canonical value);
    public string get_Base();
    public void set_Base(string value);
    public List`1<Canonical> get_ParentElement();
    public void set_ParentElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_Parent();
    public void set_Parent(IEnumerable`1<string> value);
    public DataType get_Event();
    public void set_Event(DataType value);
    public Code`1<MessageSignificanceCategory> get_CategoryElement();
    public void set_CategoryElement(Code`1<MessageSignificanceCategory> value);
    public Nullable`1<MessageSignificanceCategory> get_Category();
    public void set_Category(Nullable`1<MessageSignificanceCategory> value);
    public List`1<FocusComponent> get_Focus();
    public void set_Focus(List`1<FocusComponent> value);
    public Code`1<MessageheaderResponseRequest> get_ResponseRequiredElement();
    public void set_ResponseRequiredElement(Code`1<MessageheaderResponseRequest> value);
    public Nullable`1<MessageheaderResponseRequest> get_ResponseRequired();
    public void set_ResponseRequired(Nullable`1<MessageheaderResponseRequest> value);
    public List`1<AllowedResponseComponent> get_AllowedResponse();
    public void set_AllowedResponse(List`1<AllowedResponseComponent> value);
    public List`1<Canonical> get_GraphElement();
    public void set_GraphElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_Graph();
    public void set_Graph(IEnumerable`1<string> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override DataType Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.DataType>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.DataType>.set_Code(DataType value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MessageDefinition/<get_Children>d__164")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MessageDefinition/<get_NamedChildren>d__166")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MessageDefinition/<GetElementPairs>d__168")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("MessageHeader", "http://hl7.org/fhir/StructureDefinition/MessageHeader")]
public class Hl7.Fhir.Model.MessageHeader : DomainResource {
    private DataType _Event;
    private List`1<MessageDestinationComponent> _Destination;
    private ResourceReference _Sender;
    private ResourceReference _Enterer;
    private ResourceReference _Author;
    private MessageSourceComponent _Source;
    private ResourceReference _Responsible;
    private CodeableConcept _Reason;
    private ResponseComponent _Response;
    private List`1<ResourceReference> _Focus;
    private Canonical _DefinitionElement;
    public string TypeName { get; }
    [FhirElementAttribute]
[BindingAttribute("MessageEvent")]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public DataType Event { get; public set; }
    [FhirElementAttribute("destination")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<MessageDestinationComponent> Destination { get; public set; }
    [FhirElementAttribute("sender")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Sender { get; public set; }
    [FhirElementAttribute("enterer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Enterer { get; public set; }
    [FhirElementAttribute("author")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Author { get; public set; }
    [FhirElementAttribute("source")]
[CardinalityAttribute]
[DataMemberAttribute]
public MessageSourceComponent Source { get; public set; }
    [FhirElementAttribute("responsible")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Responsible { get; public set; }
    [FhirElementAttribute("reason")]
[BindingAttribute("EventReason")]
[DataMemberAttribute]
public CodeableConcept Reason { get; public set; }
    [FhirElementAttribute("response")]
[DataMemberAttribute]
public ResponseComponent Response { get; public set; }
    [FhirElementAttribute("focus")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Focus { get; public set; }
    [FhirElementAttribute("definition")]
[DataMemberAttribute]
public Canonical DefinitionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Definition { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public DataType get_Event();
    public void set_Event(DataType value);
    public List`1<MessageDestinationComponent> get_Destination();
    public void set_Destination(List`1<MessageDestinationComponent> value);
    public ResourceReference get_Sender();
    public void set_Sender(ResourceReference value);
    public ResourceReference get_Enterer();
    public void set_Enterer(ResourceReference value);
    public ResourceReference get_Author();
    public void set_Author(ResourceReference value);
    public MessageSourceComponent get_Source();
    public void set_Source(MessageSourceComponent value);
    public ResourceReference get_Responsible();
    public void set_Responsible(ResourceReference value);
    public CodeableConcept get_Reason();
    public void set_Reason(CodeableConcept value);
    public ResponseComponent get_Response();
    public void set_Response(ResponseComponent value);
    public List`1<ResourceReference> get_Focus();
    public void set_Focus(List`1<ResourceReference> value);
    public Canonical get_DefinitionElement();
    public void set_DefinitionElement(Canonical value);
    public string get_Definition();
    public void set_Definition(string value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MessageHeader/<get_Children>d__58")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MessageHeader/<get_NamedChildren>d__60")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MessageHeader/<GetElementPairs>d__62")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("messageheader-response-request", "http://hl7.org/fhir/ValueSet/messageheader-response-request", "http://hl7.org/fhir/messageheader-response-request")]
public enum Hl7.Fhir.Model.MessageheaderResponseRequest : Enum {
    public int value__;
    [EnumLiteralAttribute("always", "")]
[DescriptionAttribute("Always")]
public static MessageheaderResponseRequest Always;
    [EnumLiteralAttribute("on-error", "")]
[DescriptionAttribute("Error/reject conditions only")]
public static MessageheaderResponseRequest OnError;
    [EnumLiteralAttribute("never", "")]
[DescriptionAttribute("Never")]
public static MessageheaderResponseRequest Never;
    [EnumLiteralAttribute("on-success", "")]
[DescriptionAttribute("Successful completion only")]
public static MessageheaderResponseRequest OnSuccess;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Hl7.Fhir.Model.ModelInfo : object {
    [NullableAttribute("0")]
public static List`1<string> SupportedResources;
    [NullableAttribute("0")]
public static Dictionary`2<string, Type> FhirTypeToCsType;
    [NullableAttribute("0")]
public static Dictionary`2<Type, string> FhirCsTypeToString;
    [NullableAttribute("0")]
public static List`1<SearchParamDefinition> SearchParameters;
    public static Type[] OpenTypes;
    private static Dictionary`2<string, FHIRAllTypes> _fhirTypeNameToFhirType;
    private static Dictionary`2<FHIRAllTypes, string> _fhirTypeToFhirTypeName;
    private static Dictionary`2<string, ResourceType> _fhirTypeNameToResourceType;
    private static Dictionary`2<ResourceType, string> _resourceTypeToFhirTypeName;
    [NullableAttribute("0")]
public static string Version { get; }
    public static ModelInspector ModelInspector { get; }
    private static ModelInfo();
    [NullableContextAttribute("0")]
public static string get_Version();
    public static Nullable`1<FHIRAllTypes> FhirTypeNameToFhirType(string typeName);
    [NullableContextAttribute("2")]
public static string FhirTypeToFhirTypeName(FHIRAllTypes type);
    public static Nullable`1<ResourceType> FhirTypeNameToResourceType(string typeName);
    [NullableContextAttribute("2")]
public static string ResourceTypeToFhirTypeName(ResourceType type);
    public static Type GetTypeForFhirType(string name);
    public static string GetFhirTypeNameForType(Type type);
    public static bool IsKnownResource(string name);
    public static bool IsKnownResource(Type type);
    public static bool IsKnownResource(FHIRAllTypes type);
    public static bool IsPrimitive(string name);
    public static bool IsPrimitive(Type type);
    public static bool IsPrimitive(FHIRAllTypes type);
    public static bool IsDataType(string name);
    public static bool IsDataType(Type type);
    public static bool IsDataType(FHIRAllTypes type);
    public static bool IsReference(string name);
    public static bool IsReference(Type type);
    public static bool IsReference(FHIRAllTypes type);
    public static bool IsConformanceResource(Type type);
    public static bool IsConformanceResource(string name);
    public static bool IsConformanceResource(Nullable`1<FHIRAllTypes> type);
    public static bool IsConformanceResource(Nullable`1<ResourceType> type);
    public static bool IsCoreModelType(string name);
    public static bool IsCoreModelType(Type type);
    public static bool IsCoreModelTypeUri(Uri uri);
    public static bool IsCoreSuperType(FHIRAllTypes type);
    public static bool IsCoreSuperType(Type type);
    public static bool IsCoreSuperType(string name);
    public static bool IsBindable(string type);
    public static bool IsBindable(FHIRAllTypes t);
    public static bool CheckMinorVersionCompatibility(string externalVersion);
    public static bool IsInstanceTypeFor(string superclass, string subclass);
    public static bool IsInstanceTypeFor(Type superclass, Type subclass);
    public static bool IsInstanceTypeFor(FHIRAllTypes superclass, FHIRAllTypes subclass);
    public static Canonical CanonicalUriForFhirCoreType(string typename);
    public static Canonical CanonicalUriForFhirCoreType(Type type);
    [NullableContextAttribute("2")]
public static Canonical CanonicalUriForFhirCoreType(FHIRAllTypes type);
    public static ModelInspector get_ModelInspector();
}
[ExtensionAttribute]
public static class Hl7.Fhir.Model.ModelInfoExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool TryDeriveResourceType(Resource r, ResourceType& rt);
}
[DataContractAttribute]
[FhirTypeAttribute("MolecularSequence", "http://hl7.org/fhir/StructureDefinition/MolecularSequence")]
public class Hl7.Fhir.Model.MolecularSequence : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<SequenceType> _TypeElement;
    private Integer _CoordinateSystemElement;
    private ResourceReference _Patient;
    private ResourceReference _Specimen;
    private ResourceReference _Device;
    private ResourceReference _Performer;
    private Quantity _Quantity;
    private ReferenceSeqComponent _ReferenceSeq;
    private List`1<VariantComponent> _Variant;
    private FhirString _ObservedSeqElement;
    private List`1<QualityComponent> _Quality;
    private Integer _ReadCoverageElement;
    private List`1<RepositoryComponent> _Repository;
    private List`1<ResourceReference> _Pointer;
    private List`1<StructureVariantComponent> _StructureVariant;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("type")]
[DeclaredTypeAttribute]
[BindingAttribute("sequenceType")]
[DataMemberAttribute]
public Code`1<SequenceType> TypeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<SequenceType> Type { get; public set; }
    [FhirElementAttribute("coordinateSystem")]
[CardinalityAttribute]
[DataMemberAttribute]
public Integer CoordinateSystemElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<int> CoordinateSystem { get; public set; }
    [FhirElementAttribute("patient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Patient { get; public set; }
    [FhirElementAttribute("specimen")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Specimen { get; public set; }
    [FhirElementAttribute("device")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Device { get; public set; }
    [FhirElementAttribute("performer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Performer { get; public set; }
    [FhirElementAttribute("quantity")]
[DataMemberAttribute]
public Quantity Quantity { get; public set; }
    [FhirElementAttribute("referenceSeq")]
[DataMemberAttribute]
public ReferenceSeqComponent ReferenceSeq { get; public set; }
    [FhirElementAttribute("variant")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<VariantComponent> Variant { get; public set; }
    [FhirElementAttribute("observedSeq")]
[DataMemberAttribute]
public FhirString ObservedSeqElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ObservedSeq { get; public set; }
    [FhirElementAttribute("quality")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<QualityComponent> Quality { get; public set; }
    [FhirElementAttribute("readCoverage")]
[DataMemberAttribute]
public Integer ReadCoverageElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<int> ReadCoverage { get; public set; }
    [FhirElementAttribute("repository")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RepositoryComponent> Repository { get; public set; }
    [FhirElementAttribute("pointer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Pointer { get; public set; }
    [FhirElementAttribute("structureVariant")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<StructureVariantComponent> StructureVariant { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<SequenceType> get_TypeElement();
    public void set_TypeElement(Code`1<SequenceType> value);
    public Nullable`1<SequenceType> get_Type();
    public void set_Type(Nullable`1<SequenceType> value);
    public Integer get_CoordinateSystemElement();
    public void set_CoordinateSystemElement(Integer value);
    public Nullable`1<int> get_CoordinateSystem();
    public void set_CoordinateSystem(Nullable`1<int> value);
    public ResourceReference get_Patient();
    public void set_Patient(ResourceReference value);
    public ResourceReference get_Specimen();
    public void set_Specimen(ResourceReference value);
    public ResourceReference get_Device();
    public void set_Device(ResourceReference value);
    public ResourceReference get_Performer();
    public void set_Performer(ResourceReference value);
    public Quantity get_Quantity();
    public void set_Quantity(Quantity value);
    public ReferenceSeqComponent get_ReferenceSeq();
    public void set_ReferenceSeq(ReferenceSeqComponent value);
    public List`1<VariantComponent> get_Variant();
    public void set_Variant(List`1<VariantComponent> value);
    public FhirString get_ObservedSeqElement();
    public void set_ObservedSeqElement(FhirString value);
    public string get_ObservedSeq();
    public void set_ObservedSeq(string value);
    public List`1<QualityComponent> get_Quality();
    public void set_Quality(List`1<QualityComponent> value);
    public Integer get_ReadCoverageElement();
    public void set_ReadCoverageElement(Integer value);
    public Nullable`1<int> get_ReadCoverage();
    public void set_ReadCoverage(Nullable`1<int> value);
    public List`1<RepositoryComponent> get_Repository();
    public void set_Repository(List`1<RepositoryComponent> value);
    public List`1<ResourceReference> get_Pointer();
    public void set_Pointer(List`1<ResourceReference> value);
    public List`1<StructureVariantComponent> get_StructureVariant();
    public void set_StructureVariant(List`1<StructureVariantComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MolecularSequence/<get_Children>d__99")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MolecularSequence/<get_NamedChildren>d__101")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.MolecularSequence/<GetElementPairs>d__103")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Money", "http://hl7.org/fhir/StructureDefinition/Money")]
public class Hl7.Fhir.Model.Money : DataType {
    private FhirDecimal _ValueElement;
    private Code`1<Currencies> _CurrencyElement;
    public string TypeName { get; }
    [FhirElementAttribute("value")]
[DataMemberAttribute]
public FhirDecimal ValueElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<decimal> Value { get; public set; }
    [FhirElementAttribute("currency")]
[DeclaredTypeAttribute]
[BindingAttribute("CurrencyCode")]
[DataMemberAttribute]
public Code`1<Currencies> CurrencyElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<Currencies> Currency { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public FhirDecimal get_ValueElement();
    public void set_ValueElement(FhirDecimal value);
    public Nullable`1<decimal> get_Value();
    public void set_Value(Nullable`1<decimal> value);
    public Code`1<Currencies> get_CurrencyElement();
    public void set_CurrencyElement(Code`1<Currencies> value);
    public Nullable`1<Currencies> get_Currency();
    public void set_Currency(Nullable`1<Currencies> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Money/<get_Children>d__22")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Money/<get_NamedChildren>d__24")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Money/<GetElementPairs>d__26")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("NamingSystem", "http://hl7.org/fhir/StructureDefinition/NamingSystem")]
public class Hl7.Fhir.Model.NamingSystem : DomainResource {
    private FhirString _NameElement;
    private Code`1<PublicationStatus> _StatusElement;
    private Code`1<NamingSystemType> _KindElement;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private FhirString _ResponsibleElement;
    private CodeableConcept _Type;
    private Markdown _DescriptionElement;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private FhirString _UsageElement;
    private List`1<UniqueIdComponent> _UniqueId;
    public string TypeName { get; }
    [FhirElementAttribute("name")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("kind")]
[DeclaredTypeAttribute]
[BindingAttribute("NamingSystemType")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<NamingSystemType> KindElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<NamingSystemType> Kind { get; public set; }
    [FhirElementAttribute("date")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("responsible")]
[DataMemberAttribute]
public FhirString ResponsibleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Responsible { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("IdentifierType")]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("usage")]
[DataMemberAttribute]
public FhirString UsageElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Usage { get; public set; }
    [FhirElementAttribute("uniqueId")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UniqueIdComponent> UniqueId { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    [ObsoleteAttribute("This property is not a part of the official FHIR specification", "True")]
public Markdown PurposeElement { get; public set; }
    public Nullable`1<bool> Experimental { get; public set; }
    public FhirBoolean ExperimentalElement { get; public set; }
    public string Url { get; public set; }
    public FhirUri UrlElement { get; public set; }
    public string Purpose { get; public set; }
    public virtual string get_TypeName();
    public sealed virtual FhirString get_NameElement();
    public sealed virtual void set_NameElement(FhirString value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public sealed virtual Code`1<PublicationStatus> get_StatusElement();
    public sealed virtual void set_StatusElement(Code`1<PublicationStatus> value);
    public sealed virtual Nullable`1<PublicationStatus> get_Status();
    public sealed virtual void set_Status(Nullable`1<PublicationStatus> value);
    public Code`1<NamingSystemType> get_KindElement();
    public void set_KindElement(Code`1<NamingSystemType> value);
    public Nullable`1<NamingSystemType> get_Kind();
    public void set_Kind(Nullable`1<NamingSystemType> value);
    public sealed virtual FhirDateTime get_DateElement();
    public sealed virtual void set_DateElement(FhirDateTime value);
    public sealed virtual string get_Date();
    public sealed virtual void set_Date(string value);
    public sealed virtual FhirString get_PublisherElement();
    public sealed virtual void set_PublisherElement(FhirString value);
    public sealed virtual string get_Publisher();
    public sealed virtual void set_Publisher(string value);
    public sealed virtual List`1<ContactDetail> get_Contact();
    public sealed virtual void set_Contact(List`1<ContactDetail> value);
    public FhirString get_ResponsibleElement();
    public void set_ResponsibleElement(FhirString value);
    public string get_Responsible();
    public void set_Responsible(string value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public sealed virtual Markdown get_DescriptionElement();
    public sealed virtual void set_DescriptionElement(Markdown value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual List`1<UsageContext> get_UseContext();
    public sealed virtual void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public FhirString get_UsageElement();
    public void set_UsageElement(FhirString value);
    public string get_Usage();
    public void set_Usage(string value);
    public List`1<UniqueIdComponent> get_UniqueId();
    public void set_UniqueId(List`1<UniqueIdComponent> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.NamingSystem/<get_Children>d__86")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.NamingSystem/<get_NamedChildren>d__88")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.NamingSystem/<GetElementPairs>d__90")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    public sealed virtual Markdown get_PurposeElement();
    public sealed virtual void set_PurposeElement(Markdown value);
    public sealed virtual Nullable`1<bool> get_Experimental();
    public sealed virtual void set_Experimental(Nullable`1<bool> value);
    public sealed virtual FhirBoolean get_ExperimentalElement();
    public sealed virtual void set_ExperimentalElement(FhirBoolean value);
    public sealed virtual string get_Url();
    public sealed virtual void set_Url(string value);
    public sealed virtual FhirUri get_UrlElement();
    public sealed virtual void set_UrlElement(FhirUri value);
    public sealed virtual string get_Purpose();
    public sealed virtual void set_Purpose(string value);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("NoteType", "http://hl7.org/fhir/ValueSet/note-type", "http://hl7.org/fhir/note-type")]
public enum Hl7.Fhir.Model.NoteType : Enum {
    public int value__;
    [EnumLiteralAttribute("display", "")]
[DescriptionAttribute("Display")]
public static NoteType Display;
    [EnumLiteralAttribute("print", "")]
[DescriptionAttribute("Print (Form)")]
public static NoteType Print;
    [EnumLiteralAttribute("printoper", "")]
[DescriptionAttribute("Print (Operator)")]
public static NoteType Printoper;
}
[DataContractAttribute]
[FhirTypeAttribute("NutritionOrder", "http://hl7.org/fhir/StructureDefinition/NutritionOrder")]
public class Hl7.Fhir.Model.NutritionOrder : DomainResource {
    private List`1<Identifier> _Identifier;
    private List`1<Canonical> _InstantiatesCanonicalElement;
    private List`1<FhirUri> _InstantiatesUriElement;
    private List`1<FhirUri> _InstantiatesElement;
    private Code`1<RequestStatus> _StatusElement;
    private Code`1<RequestIntent> _IntentElement;
    private ResourceReference _Patient;
    private ResourceReference _Encounter;
    private FhirDateTime _DateTimeElement;
    private ResourceReference _Orderer;
    private List`1<ResourceReference> _AllergyIntolerance;
    private List`1<CodeableConcept> _FoodPreferenceModifier;
    private List`1<CodeableConcept> _ExcludeFoodModifier;
    private OralDietComponent _OralDiet;
    private List`1<SupplementComponent> _Supplement;
    private EnteralFormulaComponent _EnteralFormula;
    private List`1<Annotation> _Note;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("instantiatesCanonical")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> InstantiatesCanonicalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> InstantiatesCanonical { get; public set; }
    [FhirElementAttribute("instantiatesUri")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirUri> InstantiatesUriElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> InstantiatesUri { get; public set; }
    [FhirElementAttribute("instantiates")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirUri> InstantiatesElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Instantiates { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("NutritionOrderStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<RequestStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<RequestStatus> Status { get; public set; }
    [FhirElementAttribute("intent")]
[DeclaredTypeAttribute]
[BindingAttribute("NutritiionOrderIntent")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<RequestIntent> IntentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<RequestIntent> Intent { get; public set; }
    [FhirElementAttribute("patient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Patient { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute("dateTime")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirDateTime DateTimeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string DateTime { get; public set; }
    [FhirElementAttribute("orderer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Orderer { get; public set; }
    [FhirElementAttribute("allergyIntolerance")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> AllergyIntolerance { get; public set; }
    [FhirElementAttribute("foodPreferenceModifier")]
[BindingAttribute("PatientDiet")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> FoodPreferenceModifier { get; public set; }
    [FhirElementAttribute("excludeFoodModifier")]
[BindingAttribute("FoodType")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ExcludeFoodModifier { get; public set; }
    [FhirElementAttribute("oralDiet")]
[DataMemberAttribute]
public OralDietComponent OralDiet { get; public set; }
    [FhirElementAttribute("supplement")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<SupplementComponent> Supplement { get; public set; }
    [FhirElementAttribute("enteralFormula")]
[DataMemberAttribute]
public EnteralFormulaComponent EnteralFormula { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<Canonical> get_InstantiatesCanonicalElement();
    public void set_InstantiatesCanonicalElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_InstantiatesCanonical();
    public void set_InstantiatesCanonical(IEnumerable`1<string> value);
    public List`1<FhirUri> get_InstantiatesUriElement();
    public void set_InstantiatesUriElement(List`1<FhirUri> value);
    public IEnumerable`1<string> get_InstantiatesUri();
    public void set_InstantiatesUri(IEnumerable`1<string> value);
    public List`1<FhirUri> get_InstantiatesElement();
    public void set_InstantiatesElement(List`1<FhirUri> value);
    public IEnumerable`1<string> get_Instantiates();
    public void set_Instantiates(IEnumerable`1<string> value);
    public Code`1<RequestStatus> get_StatusElement();
    public void set_StatusElement(Code`1<RequestStatus> value);
    public Nullable`1<RequestStatus> get_Status();
    public void set_Status(Nullable`1<RequestStatus> value);
    public Code`1<RequestIntent> get_IntentElement();
    public void set_IntentElement(Code`1<RequestIntent> value);
    public Nullable`1<RequestIntent> get_Intent();
    public void set_Intent(Nullable`1<RequestIntent> value);
    public ResourceReference get_Patient();
    public void set_Patient(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public FhirDateTime get_DateTimeElement();
    public void set_DateTimeElement(FhirDateTime value);
    public string get_DateTime();
    public void set_DateTime(string value);
    public ResourceReference get_Orderer();
    public void set_Orderer(ResourceReference value);
    public List`1<ResourceReference> get_AllergyIntolerance();
    public void set_AllergyIntolerance(List`1<ResourceReference> value);
    public List`1<CodeableConcept> get_FoodPreferenceModifier();
    public void set_FoodPreferenceModifier(List`1<CodeableConcept> value);
    public List`1<CodeableConcept> get_ExcludeFoodModifier();
    public void set_ExcludeFoodModifier(List`1<CodeableConcept> value);
    public OralDietComponent get_OralDiet();
    public void set_OralDiet(OralDietComponent value);
    public List`1<SupplementComponent> get_Supplement();
    public void set_Supplement(List`1<SupplementComponent> value);
    public EnteralFormulaComponent get_EnteralFormula();
    public void set_EnteralFormula(EnteralFormulaComponent value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.NutritionOrder/<get_Children>d__102")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.NutritionOrder/<get_NamedChildren>d__104")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.NutritionOrder/<GetElementPairs>d__106")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Observation", "http://hl7.org/fhir/StructureDefinition/Observation")]
public class Hl7.Fhir.Model.Observation : DomainResource {
    private List`1<Identifier> _Identifier;
    private List`1<ResourceReference> _BasedOn;
    private List`1<ResourceReference> _PartOf;
    private Code`1<ObservationStatus> _StatusElement;
    private List`1<CodeableConcept> _Category;
    private CodeableConcept _Code;
    private ResourceReference _Subject;
    private List`1<ResourceReference> _Focus;
    private ResourceReference _Encounter;
    private DataType _Effective;
    private Instant _IssuedElement;
    private List`1<ResourceReference> _Performer;
    private DataType _Value;
    private CodeableConcept _DataAbsentReason;
    private List`1<CodeableConcept> _Interpretation;
    private List`1<Annotation> _Note;
    private CodeableConcept _BodySite;
    private CodeableConcept _Method;
    private ResourceReference _Specimen;
    private ResourceReference _Device;
    private List`1<ReferenceRangeComponent> _ReferenceRange;
    private List`1<ResourceReference> _HasMember;
    private List`1<ResourceReference> _DerivedFrom;
    private List`1<ComponentComponent> _Component;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("basedOn")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> BasedOn { get; public set; }
    [FhirElementAttribute("partOf")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> PartOf { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("ObservationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ObservationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ObservationStatus> Status { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("ObservationCategory")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Category { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("ObservationCode")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("focus")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Focus { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Effective { get; public set; }
    [FhirElementAttribute("issued")]
[DataMemberAttribute]
public Instant IssuedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<DateTimeOffset> Issued { get; public set; }
    [FhirElementAttribute("performer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Performer { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Value { get; public set; }
    [FhirElementAttribute("dataAbsentReason")]
[BindingAttribute("ObservationValueAbsentReason")]
[DataMemberAttribute]
public CodeableConcept DataAbsentReason { get; public set; }
    [FhirElementAttribute("interpretation")]
[BindingAttribute("ObservationInterpretation")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Interpretation { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("bodySite")]
[BindingAttribute("BodySite")]
[DataMemberAttribute]
public CodeableConcept BodySite { get; public set; }
    [FhirElementAttribute("method")]
[BindingAttribute("ObservationMethod")]
[DataMemberAttribute]
public CodeableConcept Method { get; public set; }
    [FhirElementAttribute("specimen")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Specimen { get; public set; }
    [FhirElementAttribute("device")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Device { get; public set; }
    [FhirElementAttribute("referenceRange")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ReferenceRangeComponent> ReferenceRange { get; public set; }
    [FhirElementAttribute("hasMember")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> HasMember { get; public set; }
    [FhirElementAttribute("derivedFrom")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> DerivedFrom { get; public set; }
    [FhirElementAttribute("component")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ComponentComponent> Component { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<ResourceReference> get_BasedOn();
    public void set_BasedOn(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_PartOf();
    public void set_PartOf(List`1<ResourceReference> value);
    public Code`1<ObservationStatus> get_StatusElement();
    public void set_StatusElement(Code`1<ObservationStatus> value);
    public Nullable`1<ObservationStatus> get_Status();
    public void set_Status(Nullable`1<ObservationStatus> value);
    public List`1<CodeableConcept> get_Category();
    public void set_Category(List`1<CodeableConcept> value);
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public List`1<ResourceReference> get_Focus();
    public void set_Focus(List`1<ResourceReference> value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public DataType get_Effective();
    public void set_Effective(DataType value);
    public Instant get_IssuedElement();
    public void set_IssuedElement(Instant value);
    public Nullable`1<DateTimeOffset> get_Issued();
    public void set_Issued(Nullable`1<DateTimeOffset> value);
    public List`1<ResourceReference> get_Performer();
    public void set_Performer(List`1<ResourceReference> value);
    public DataType get_Value();
    public void set_Value(DataType value);
    public CodeableConcept get_DataAbsentReason();
    public void set_DataAbsentReason(CodeableConcept value);
    public List`1<CodeableConcept> get_Interpretation();
    public void set_Interpretation(List`1<CodeableConcept> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public CodeableConcept get_BodySite();
    public void set_BodySite(CodeableConcept value);
    public CodeableConcept get_Method();
    public void set_Method(CodeableConcept value);
    public ResourceReference get_Specimen();
    public void set_Specimen(ResourceReference value);
    public ResourceReference get_Device();
    public void set_Device(ResourceReference value);
    public List`1<ReferenceRangeComponent> get_ReferenceRange();
    public void set_ReferenceRange(List`1<ReferenceRangeComponent> value);
    public List`1<ResourceReference> get_HasMember();
    public void set_HasMember(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_DerivedFrom();
    public void set_DerivedFrom(List`1<ResourceReference> value);
    public List`1<ComponentComponent> get_Component();
    public void set_Component(List`1<ComponentComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Observation/<get_Children>d__118")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Observation/<get_NamedChildren>d__120")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Observation/<GetElementPairs>d__122")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("ObservationDefinition", "http://hl7.org/fhir/StructureDefinition/ObservationDefinition")]
public class Hl7.Fhir.Model.ObservationDefinition : DomainResource {
    private List`1<CodeableConcept> _Category;
    private CodeableConcept _Code;
    private List`1<Identifier> _Identifier;
    private List`1<Code`1<ObservationDataType>> _PermittedDataTypeElement;
    private FhirBoolean _MultipleResultsAllowedElement;
    private CodeableConcept _Method;
    private FhirString _PreferredReportNameElement;
    private QuantitativeDetailsComponent _QuantitativeDetails;
    private List`1<QualifiedIntervalComponent> _QualifiedInterval;
    private ResourceReference _ValidCodedValueSet;
    private ResourceReference _NormalCodedValueSet;
    private ResourceReference _AbnormalCodedValueSet;
    private ResourceReference _CriticalCodedValueSet;
    public string TypeName { get; }
    [FhirElementAttribute("category")]
[BindingAttribute("ObservationCategory")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Category { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("ObservationCode")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("permittedDataType")]
[DeclaredTypeAttribute]
[BindingAttribute("ObservationDataType")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Code`1<ObservationDataType>> PermittedDataTypeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Nullable`1<ObservationDataType>> PermittedDataType { get; public set; }
    [FhirElementAttribute("multipleResultsAllowed")]
[DataMemberAttribute]
public FhirBoolean MultipleResultsAllowedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> MultipleResultsAllowed { get; public set; }
    [FhirElementAttribute("method")]
[BindingAttribute("ObservationMethod")]
[DataMemberAttribute]
public CodeableConcept Method { get; public set; }
    [FhirElementAttribute("preferredReportName")]
[DataMemberAttribute]
public FhirString PreferredReportNameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string PreferredReportName { get; public set; }
    [FhirElementAttribute("quantitativeDetails")]
[DataMemberAttribute]
public QuantitativeDetailsComponent QuantitativeDetails { get; public set; }
    [FhirElementAttribute("qualifiedInterval")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<QualifiedIntervalComponent> QualifiedInterval { get; public set; }
    [FhirElementAttribute("validCodedValueSet")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference ValidCodedValueSet { get; public set; }
    [FhirElementAttribute("normalCodedValueSet")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference NormalCodedValueSet { get; public set; }
    [FhirElementAttribute("abnormalCodedValueSet")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference AbnormalCodedValueSet { get; public set; }
    [FhirElementAttribute("criticalCodedValueSet")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference CriticalCodedValueSet { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<CodeableConcept> get_Category();
    public void set_Category(List`1<CodeableConcept> value);
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<Code`1<ObservationDataType>> get_PermittedDataTypeElement();
    public void set_PermittedDataTypeElement(List`1<Code`1<ObservationDataType>> value);
    public IEnumerable`1<Nullable`1<ObservationDataType>> get_PermittedDataType();
    public void set_PermittedDataType(IEnumerable`1<Nullable`1<ObservationDataType>> value);
    public FhirBoolean get_MultipleResultsAllowedElement();
    public void set_MultipleResultsAllowedElement(FhirBoolean value);
    public Nullable`1<bool> get_MultipleResultsAllowed();
    public void set_MultipleResultsAllowed(Nullable`1<bool> value);
    public CodeableConcept get_Method();
    public void set_Method(CodeableConcept value);
    public FhirString get_PreferredReportNameElement();
    public void set_PreferredReportNameElement(FhirString value);
    public string get_PreferredReportName();
    public void set_PreferredReportName(string value);
    public QuantitativeDetailsComponent get_QuantitativeDetails();
    public void set_QuantitativeDetails(QuantitativeDetailsComponent value);
    public List`1<QualifiedIntervalComponent> get_QualifiedInterval();
    public void set_QualifiedInterval(List`1<QualifiedIntervalComponent> value);
    public ResourceReference get_ValidCodedValueSet();
    public void set_ValidCodedValueSet(ResourceReference value);
    public ResourceReference get_NormalCodedValueSet();
    public void set_NormalCodedValueSet(ResourceReference value);
    public ResourceReference get_AbnormalCodedValueSet();
    public void set_AbnormalCodedValueSet(ResourceReference value);
    public ResourceReference get_CriticalCodedValueSet();
    public void set_CriticalCodedValueSet(ResourceReference value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ObservationDefinition/<get_Children>d__79")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ObservationDefinition/<get_NamedChildren>d__81")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ObservationDefinition/<GetElementPairs>d__83")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("ObservationStatus", "http://hl7.org/fhir/ValueSet/observation-status", "http://hl7.org/fhir/observation-status")]
public enum Hl7.Fhir.Model.ObservationStatus : Enum {
    public int value__;
    [EnumLiteralAttribute("registered", "")]
[DescriptionAttribute("Registered")]
public static ObservationStatus Registered;
    [EnumLiteralAttribute("preliminary", "")]
[DescriptionAttribute("Preliminary")]
public static ObservationStatus Preliminary;
    [EnumLiteralAttribute("final", "")]
[DescriptionAttribute("Final")]
public static ObservationStatus Final;
    [EnumLiteralAttribute("amended", "")]
[DescriptionAttribute("Amended")]
public static ObservationStatus Amended;
    [EnumLiteralAttribute("corrected", "")]
[DescriptionAttribute("Corrected")]
public static ObservationStatus Corrected;
    [EnumLiteralAttribute("cancelled", "")]
[DescriptionAttribute("Cancelled")]
public static ObservationStatus Cancelled;
    [EnumLiteralAttribute("entered-in-error", "")]
[DescriptionAttribute("Entered in Error")]
public static ObservationStatus EnteredInError;
    [EnumLiteralAttribute("unknown", "")]
[DescriptionAttribute("Unknown")]
public static ObservationStatus Unknown;
}
[DataContractAttribute]
[FhirTypeAttribute("OperationDefinition", "http://hl7.org/fhir/StructureDefinition/OperationDefinition")]
public class Hl7.Fhir.Model.OperationDefinition : DomainResource {
    private FhirUri _UrlElement;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private FhirString _TitleElement;
    private Code`1<PublicationStatus> _StatusElement;
    private Code`1<OperationKind> _KindElement;
    private FhirBoolean _ExperimentalElement;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _PurposeElement;
    private FhirBoolean _AffectsStateElement;
    private Code _CodeElement;
    private Markdown _CommentElement;
    private Canonical _BaseElement;
    private List`1<Code`1<ResourceType>> _ResourceElement;
    private FhirBoolean _SystemElement;
    private FhirBoolean _TypeElement;
    private FhirBoolean _InstanceElement;
    private Canonical _InputProfileElement;
    private Canonical _OutputProfileElement;
    private List`1<ParameterComponent> _Parameter;
    private List`1<OverloadComponent> _Overload;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("kind")]
[DeclaredTypeAttribute]
[BindingAttribute("OperationKind")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<OperationKind> KindElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<OperationKind> Kind { get; public set; }
    [FhirElementAttribute("experimental")]
[DataMemberAttribute]
public FhirBoolean ExperimentalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Experimental { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("purpose")]
[DataMemberAttribute]
public Markdown PurposeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Purpose { get; public set; }
    [FhirElementAttribute("affectsState")]
[DataMemberAttribute]
public FhirBoolean AffectsStateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> AffectsState { get; public set; }
    [FhirElementAttribute("code")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code CodeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Code { get; public set; }
    [FhirElementAttribute("comment")]
[DataMemberAttribute]
public Markdown CommentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Comment { get; public set; }
    [FhirElementAttribute("base")]
[DataMemberAttribute]
public Canonical BaseElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Base { get; public set; }
    [FhirElementAttribute("resource")]
[DeclaredTypeAttribute]
[BindingAttribute("ResourceType")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Code`1<ResourceType>> ResourceElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Nullable`1<ResourceType>> Resource { get; public set; }
    [FhirElementAttribute("system")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirBoolean SystemElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> System { get; public set; }
    [FhirElementAttribute("type")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirBoolean TypeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Type { get; public set; }
    [FhirElementAttribute("instance")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirBoolean InstanceElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Instance { get; public set; }
    [FhirElementAttribute("inputProfile")]
[DataMemberAttribute]
public Canonical InputProfileElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string InputProfile { get; public set; }
    [FhirElementAttribute("outputProfile")]
[DataMemberAttribute]
public Canonical OutputProfileElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string OutputProfile { get; public set; }
    [FhirElementAttribute("parameter")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ParameterComponent> Parameter { get; public set; }
    [FhirElementAttribute("overload")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<OverloadComponent> Overload { get; public set; }
    private Code Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.Code>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public sealed virtual FhirUri get_UrlElement();
    public sealed virtual void set_UrlElement(FhirUri value);
    public sealed virtual string get_Url();
    public sealed virtual void set_Url(string value);
    public sealed virtual FhirString get_VersionElement();
    public sealed virtual void set_VersionElement(FhirString value);
    public sealed virtual string get_Version();
    public sealed virtual void set_Version(string value);
    public sealed virtual FhirString get_NameElement();
    public sealed virtual void set_NameElement(FhirString value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public sealed virtual Code`1<PublicationStatus> get_StatusElement();
    public sealed virtual void set_StatusElement(Code`1<PublicationStatus> value);
    public sealed virtual Nullable`1<PublicationStatus> get_Status();
    public sealed virtual void set_Status(Nullable`1<PublicationStatus> value);
    public Code`1<OperationKind> get_KindElement();
    public void set_KindElement(Code`1<OperationKind> value);
    public Nullable`1<OperationKind> get_Kind();
    public void set_Kind(Nullable`1<OperationKind> value);
    public sealed virtual FhirBoolean get_ExperimentalElement();
    public sealed virtual void set_ExperimentalElement(FhirBoolean value);
    public sealed virtual Nullable`1<bool> get_Experimental();
    public sealed virtual void set_Experimental(Nullable`1<bool> value);
    public sealed virtual FhirDateTime get_DateElement();
    public sealed virtual void set_DateElement(FhirDateTime value);
    public sealed virtual string get_Date();
    public sealed virtual void set_Date(string value);
    public sealed virtual FhirString get_PublisherElement();
    public sealed virtual void set_PublisherElement(FhirString value);
    public sealed virtual string get_Publisher();
    public sealed virtual void set_Publisher(string value);
    public sealed virtual List`1<ContactDetail> get_Contact();
    public sealed virtual void set_Contact(List`1<ContactDetail> value);
    public sealed virtual Markdown get_DescriptionElement();
    public sealed virtual void set_DescriptionElement(Markdown value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual List`1<UsageContext> get_UseContext();
    public sealed virtual void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public sealed virtual Markdown get_PurposeElement();
    public sealed virtual void set_PurposeElement(Markdown value);
    public sealed virtual string get_Purpose();
    public sealed virtual void set_Purpose(string value);
    public FhirBoolean get_AffectsStateElement();
    public void set_AffectsStateElement(FhirBoolean value);
    public Nullable`1<bool> get_AffectsState();
    public void set_AffectsState(Nullable`1<bool> value);
    public Code get_CodeElement();
    public void set_CodeElement(Code value);
    public string get_Code();
    public void set_Code(string value);
    public Markdown get_CommentElement();
    public void set_CommentElement(Markdown value);
    public string get_Comment();
    public void set_Comment(string value);
    public Canonical get_BaseElement();
    public void set_BaseElement(Canonical value);
    public string get_Base();
    public void set_Base(string value);
    public List`1<Code`1<ResourceType>> get_ResourceElement();
    public void set_ResourceElement(List`1<Code`1<ResourceType>> value);
    public IEnumerable`1<Nullable`1<ResourceType>> get_Resource();
    public void set_Resource(IEnumerable`1<Nullable`1<ResourceType>> value);
    public FhirBoolean get_SystemElement();
    public void set_SystemElement(FhirBoolean value);
    public Nullable`1<bool> get_System();
    public void set_System(Nullable`1<bool> value);
    public FhirBoolean get_TypeElement();
    public void set_TypeElement(FhirBoolean value);
    public Nullable`1<bool> get_Type();
    public void set_Type(Nullable`1<bool> value);
    public FhirBoolean get_InstanceElement();
    public void set_InstanceElement(FhirBoolean value);
    public Nullable`1<bool> get_Instance();
    public void set_Instance(Nullable`1<bool> value);
    public Canonical get_InputProfileElement();
    public void set_InputProfileElement(Canonical value);
    public string get_InputProfile();
    public void set_InputProfile(string value);
    public Canonical get_OutputProfileElement();
    public void set_OutputProfileElement(Canonical value);
    public string get_OutputProfile();
    public void set_OutputProfile(string value);
    public List`1<ParameterComponent> get_Parameter();
    public void set_Parameter(List`1<ParameterComponent> value);
    public List`1<OverloadComponent> get_Overload();
    public void set_Overload(List`1<OverloadComponent> value);
    private sealed virtual override Code Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.Code>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.Code>.set_Code(Code value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.OperationDefinition/<get_Children>d__183")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.OperationDefinition/<get_NamedChildren>d__185")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.OperationDefinition/<GetElementPairs>d__187")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("OperationParameterUse", "http://hl7.org/fhir/ValueSet/operation-parameter-use", "http://hl7.org/fhir/operation-parameter-use")]
public enum Hl7.Fhir.Model.OperationParameterUse : Enum {
    public int value__;
    [EnumLiteralAttribute("in", "")]
[DescriptionAttribute("In")]
public static OperationParameterUse In;
    [EnumLiteralAttribute("out", "")]
[DescriptionAttribute("Out")]
public static OperationParameterUse Out;
}
[DataContractAttribute]
[FhirTypeAttribute("Organization", "http://hl7.org/fhir/StructureDefinition/Organization")]
public class Hl7.Fhir.Model.Organization : DomainResource {
    private List`1<Identifier> _Identifier;
    private FhirBoolean _ActiveElement;
    private List`1<CodeableConcept> _Type;
    private FhirString _NameElement;
    private List`1<FhirString> _AliasElement;
    private List`1<ContactPoint> _Telecom;
    private List`1<Address> _Address;
    private ResourceReference _PartOf;
    private List`1<ContactComponent> _Contact;
    private List`1<ResourceReference> _Endpoint;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("active")]
[DataMemberAttribute]
public FhirBoolean ActiveElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Active { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("OrganizationType")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Type { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("alias")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> AliasElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Alias { get; public set; }
    [FhirElementAttribute("telecom")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactPoint> Telecom { get; public set; }
    [FhirElementAttribute("address")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Address> Address { get; public set; }
    [FhirElementAttribute("partOf")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference PartOf { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactComponent> Contact { get; public set; }
    [FhirElementAttribute("endpoint")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Endpoint { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirBoolean get_ActiveElement();
    public void set_ActiveElement(FhirBoolean value);
    public Nullable`1<bool> get_Active();
    public void set_Active(Nullable`1<bool> value);
    public List`1<CodeableConcept> get_Type();
    public void set_Type(List`1<CodeableConcept> value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public List`1<FhirString> get_AliasElement();
    public void set_AliasElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_Alias();
    public void set_Alias(IEnumerable`1<string> value);
    public List`1<ContactPoint> get_Telecom();
    public void set_Telecom(List`1<ContactPoint> value);
    public List`1<Address> get_Address();
    public void set_Address(List`1<Address> value);
    public ResourceReference get_PartOf();
    public void set_PartOf(ResourceReference value);
    public List`1<ContactComponent> get_Contact();
    public void set_Contact(List`1<ContactComponent> value);
    public List`1<ResourceReference> get_Endpoint();
    public void set_Endpoint(List`1<ResourceReference> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Organization/<get_Children>d__60")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Organization/<get_NamedChildren>d__62")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Organization/<GetElementPairs>d__64")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("OrganizationAffiliation", "http://hl7.org/fhir/StructureDefinition/OrganizationAffiliation")]
public class Hl7.Fhir.Model.OrganizationAffiliation : DomainResource {
    private List`1<Identifier> _Identifier;
    private FhirBoolean _ActiveElement;
    private Period _Period;
    private ResourceReference _Organization;
    private ResourceReference _ParticipatingOrganization;
    private List`1<ResourceReference> _Network;
    private List`1<CodeableConcept> _Code;
    private List`1<CodeableConcept> _Specialty;
    private List`1<ResourceReference> _Location;
    private List`1<ResourceReference> _HealthcareService;
    private List`1<ContactPoint> _Telecom;
    private List`1<ResourceReference> _Endpoint;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("active")]
[DataMemberAttribute]
public FhirBoolean ActiveElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Active { get; public set; }
    [FhirElementAttribute("period")]
[DataMemberAttribute]
public Period Period { get; public set; }
    [FhirElementAttribute("organization")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Organization { get; public set; }
    [FhirElementAttribute("participatingOrganization")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference ParticipatingOrganization { get; public set; }
    [FhirElementAttribute("network")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Network { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("OrganizationAffiliation")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Code { get; public set; }
    [FhirElementAttribute("specialty")]
[BindingAttribute("OrganizationSpecialty")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Specialty { get; public set; }
    [FhirElementAttribute("location")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Location { get; public set; }
    [FhirElementAttribute("healthcareService")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> HealthcareService { get; public set; }
    [FhirElementAttribute("telecom")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactPoint> Telecom { get; public set; }
    [FhirElementAttribute("endpoint")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Endpoint { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirBoolean get_ActiveElement();
    public void set_ActiveElement(FhirBoolean value);
    public Nullable`1<bool> get_Active();
    public void set_Active(Nullable`1<bool> value);
    public Period get_Period();
    public void set_Period(Period value);
    public ResourceReference get_Organization();
    public void set_Organization(ResourceReference value);
    public ResourceReference get_ParticipatingOrganization();
    public void set_ParticipatingOrganization(ResourceReference value);
    public List`1<ResourceReference> get_Network();
    public void set_Network(List`1<ResourceReference> value);
    public List`1<CodeableConcept> get_Code();
    public void set_Code(List`1<CodeableConcept> value);
    public List`1<CodeableConcept> get_Specialty();
    public void set_Specialty(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_Location();
    public void set_Location(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_HealthcareService();
    public void set_HealthcareService(List`1<ResourceReference> value);
    public List`1<ContactPoint> get_Telecom();
    public void set_Telecom(List`1<ContactPoint> value);
    public List`1<ResourceReference> get_Endpoint();
    public void set_Endpoint(List`1<ResourceReference> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.OrganizationAffiliation/<get_Children>d__61")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.OrganizationAffiliation/<get_NamedChildren>d__63")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.OrganizationAffiliation/<GetElementPairs>d__65")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("ParameterDefinition", "http://hl7.org/fhir/StructureDefinition/ParameterDefinition")]
public class Hl7.Fhir.Model.ParameterDefinition : DataType {
    private Code _NameElement;
    private Code`1<OperationParameterUse> _UseElement;
    private Integer _MinElement;
    private FhirString _MaxElement;
    private FhirString _DocumentationElement;
    private Code`1<FHIRAllTypes> _TypeElement;
    private Canonical _ProfileElement;
    public string TypeName { get; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public Code NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("use")]
[DeclaredTypeAttribute]
[BindingAttribute("ParameterUse")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<OperationParameterUse> UseElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<OperationParameterUse> Use { get; public set; }
    [FhirElementAttribute("min")]
[DataMemberAttribute]
public Integer MinElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<int> Min { get; public set; }
    [FhirElementAttribute("max")]
[DataMemberAttribute]
public FhirString MaxElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Max { get; public set; }
    [FhirElementAttribute("documentation")]
[DataMemberAttribute]
public FhirString DocumentationElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Documentation { get; public set; }
    [FhirElementAttribute("type")]
[DeclaredTypeAttribute]
[BindingAttribute("FHIRAllTypes")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<FHIRAllTypes> TypeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<FHIRAllTypes> Type { get; public set; }
    [FhirElementAttribute("profile")]
[DataMemberAttribute]
public Canonical ProfileElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Profile { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Code get_NameElement();
    public void set_NameElement(Code value);
    public string get_Name();
    public void set_Name(string value);
    public Code`1<OperationParameterUse> get_UseElement();
    public void set_UseElement(Code`1<OperationParameterUse> value);
    public Nullable`1<OperationParameterUse> get_Use();
    public void set_Use(Nullable`1<OperationParameterUse> value);
    public Integer get_MinElement();
    public void set_MinElement(Integer value);
    public Nullable`1<int> get_Min();
    public void set_Min(Nullable`1<int> value);
    public FhirString get_MaxElement();
    public void set_MaxElement(FhirString value);
    public string get_Max();
    public void set_Max(string value);
    public FhirString get_DocumentationElement();
    public void set_DocumentationElement(FhirString value);
    public string get_Documentation();
    public void set_Documentation(string value);
    public Code`1<FHIRAllTypes> get_TypeElement();
    public void set_TypeElement(Code`1<FHIRAllTypes> value);
    public Nullable`1<FHIRAllTypes> get_Type();
    public void set_Type(Nullable`1<FHIRAllTypes> value);
    public Canonical get_ProfileElement();
    public void set_ProfileElement(Canonical value);
    public string get_Profile();
    public void set_Profile(string value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ParameterDefinition/<get_Children>d__56")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ParameterDefinition/<get_NamedChildren>d__58")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ParameterDefinition/<GetElementPairs>d__60")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("ParticipationStatus", "http://hl7.org/fhir/ValueSet/participationstatus", "http://hl7.org/fhir/participationstatus")]
public enum Hl7.Fhir.Model.ParticipationStatus : Enum {
    public int value__;
    [EnumLiteralAttribute("accepted", "")]
[DescriptionAttribute("Accepted")]
public static ParticipationStatus Accepted;
    [EnumLiteralAttribute("declined", "")]
[DescriptionAttribute("Declined")]
public static ParticipationStatus Declined;
    [EnumLiteralAttribute("tentative", "")]
[DescriptionAttribute("Tentative")]
public static ParticipationStatus Tentative;
    [EnumLiteralAttribute("needs-action", "")]
[DescriptionAttribute("Needs Action")]
public static ParticipationStatus NeedsAction;
}
[DataContractAttribute]
[FhirTypeAttribute("Patient", "http://hl7.org/fhir/StructureDefinition/Patient")]
public class Hl7.Fhir.Model.Patient : DomainResource {
    private List`1<Identifier> _Identifier;
    private FhirBoolean _ActiveElement;
    private List`1<HumanName> _Name;
    private List`1<ContactPoint> _Telecom;
    private Code`1<AdministrativeGender> _GenderElement;
    private Date _BirthDateElement;
    private DataType _Deceased;
    private List`1<Address> _Address;
    private CodeableConcept _MaritalStatus;
    private DataType _MultipleBirth;
    private List`1<Attachment> _Photo;
    private List`1<ContactComponent> _Contact;
    private List`1<CommunicationComponent> _Communication;
    private List`1<ResourceReference> _GeneralPractitioner;
    private ResourceReference _ManagingOrganization;
    private List`1<LinkComponent> _Link;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("active")]
[DataMemberAttribute]
public FhirBoolean ActiveElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Active { get; public set; }
    [FhirElementAttribute("name")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<HumanName> Name { get; public set; }
    [FhirElementAttribute("telecom")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactPoint> Telecom { get; public set; }
    [FhirElementAttribute("gender")]
[DeclaredTypeAttribute]
[BindingAttribute("AdministrativeGender")]
[DataMemberAttribute]
public Code`1<AdministrativeGender> GenderElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<AdministrativeGender> Gender { get; public set; }
    [FhirElementAttribute("birthDate")]
[DataMemberAttribute]
public Date BirthDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string BirthDate { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Deceased { get; public set; }
    [FhirElementAttribute("address")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Address> Address { get; public set; }
    [FhirElementAttribute("maritalStatus")]
[BindingAttribute("MaritalStatus")]
[DataMemberAttribute]
public CodeableConcept MaritalStatus { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType MultipleBirth { get; public set; }
    [FhirElementAttribute("photo")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Attachment> Photo { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactComponent> Contact { get; public set; }
    [FhirElementAttribute("communication")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CommunicationComponent> Communication { get; public set; }
    [FhirElementAttribute("generalPractitioner")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> GeneralPractitioner { get; public set; }
    [FhirElementAttribute("managingOrganization")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference ManagingOrganization { get; public set; }
    [FhirElementAttribute("link")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<LinkComponent> Link { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private Date Hl7.Fhir.Model.IPatient.BirthDate { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirBoolean get_ActiveElement();
    public void set_ActiveElement(FhirBoolean value);
    public Nullable`1<bool> get_Active();
    public void set_Active(Nullable`1<bool> value);
    public List`1<HumanName> get_Name();
    public void set_Name(List`1<HumanName> value);
    public List`1<ContactPoint> get_Telecom();
    public void set_Telecom(List`1<ContactPoint> value);
    public Code`1<AdministrativeGender> get_GenderElement();
    public void set_GenderElement(Code`1<AdministrativeGender> value);
    public Nullable`1<AdministrativeGender> get_Gender();
    public void set_Gender(Nullable`1<AdministrativeGender> value);
    public Date get_BirthDateElement();
    public void set_BirthDateElement(Date value);
    public string get_BirthDate();
    public void set_BirthDate(string value);
    public DataType get_Deceased();
    public void set_Deceased(DataType value);
    public List`1<Address> get_Address();
    public void set_Address(List`1<Address> value);
    public CodeableConcept get_MaritalStatus();
    public void set_MaritalStatus(CodeableConcept value);
    public DataType get_MultipleBirth();
    public void set_MultipleBirth(DataType value);
    public List`1<Attachment> get_Photo();
    public void set_Photo(List`1<Attachment> value);
    public List`1<ContactComponent> get_Contact();
    public void set_Contact(List`1<ContactComponent> value);
    public List`1<CommunicationComponent> get_Communication();
    public void set_Communication(List`1<CommunicationComponent> value);
    public List`1<ResourceReference> get_GeneralPractitioner();
    public void set_GeneralPractitioner(List`1<ResourceReference> value);
    public ResourceReference get_ManagingOrganization();
    public void set_ManagingOrganization(ResourceReference value);
    public List`1<LinkComponent> get_Link();
    public void set_Link(List`1<LinkComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override Date Hl7.Fhir.Model.IPatient.get_BirthDate();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Patient/<get_Children>d__89")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Patient/<get_NamedChildren>d__91")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Patient/<GetElementPairs>d__93")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("PaymentNotice", "http://hl7.org/fhir/StructureDefinition/PaymentNotice")]
public class Hl7.Fhir.Model.PaymentNotice : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<FinancialResourceStatusCodes> _StatusElement;
    private ResourceReference _Request;
    private ResourceReference _Response;
    private FhirDateTime _CreatedElement;
    private ResourceReference _Provider;
    private ResourceReference _Payment;
    private Date _PaymentDateElement;
    private ResourceReference _Payee;
    private ResourceReference _Recipient;
    private Money _Amount;
    private CodeableConcept _PaymentStatus;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PaymentNoticeStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<FinancialResourceStatusCodes> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<FinancialResourceStatusCodes> Status { get; public set; }
    [FhirElementAttribute("request")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Request { get; public set; }
    [FhirElementAttribute("response")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Response { get; public set; }
    [FhirElementAttribute("created")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirDateTime CreatedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Created { get; public set; }
    [FhirElementAttribute("provider")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Provider { get; public set; }
    [FhirElementAttribute("payment")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Payment { get; public set; }
    [FhirElementAttribute("paymentDate")]
[DataMemberAttribute]
public Date PaymentDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string PaymentDate { get; public set; }
    [FhirElementAttribute("payee")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Payee { get; public set; }
    [FhirElementAttribute("recipient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Recipient { get; public set; }
    [FhirElementAttribute("amount")]
[CardinalityAttribute]
[DataMemberAttribute]
public Money Amount { get; public set; }
    [FhirElementAttribute("paymentStatus")]
[BindingAttribute("PaymentStatus")]
[DataMemberAttribute]
public CodeableConcept PaymentStatus { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<FinancialResourceStatusCodes> get_StatusElement();
    public void set_StatusElement(Code`1<FinancialResourceStatusCodes> value);
    public Nullable`1<FinancialResourceStatusCodes> get_Status();
    public void set_Status(Nullable`1<FinancialResourceStatusCodes> value);
    public ResourceReference get_Request();
    public void set_Request(ResourceReference value);
    public ResourceReference get_Response();
    public void set_Response(ResourceReference value);
    public FhirDateTime get_CreatedElement();
    public void set_CreatedElement(FhirDateTime value);
    public string get_Created();
    public void set_Created(string value);
    public ResourceReference get_Provider();
    public void set_Provider(ResourceReference value);
    public ResourceReference get_Payment();
    public void set_Payment(ResourceReference value);
    public Date get_PaymentDateElement();
    public void set_PaymentDateElement(Date value);
    public string get_PaymentDate();
    public void set_PaymentDate(string value);
    public ResourceReference get_Payee();
    public void set_Payee(ResourceReference value);
    public ResourceReference get_Recipient();
    public void set_Recipient(ResourceReference value);
    public Money get_Amount();
    public void set_Amount(Money value);
    public CodeableConcept get_PaymentStatus();
    public void set_PaymentStatus(CodeableConcept value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.PaymentNotice/<get_Children>d__67")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.PaymentNotice/<get_NamedChildren>d__69")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.PaymentNotice/<GetElementPairs>d__71")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("PaymentReconciliation", "http://hl7.org/fhir/StructureDefinition/PaymentReconciliation")]
public class Hl7.Fhir.Model.PaymentReconciliation : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<FinancialResourceStatusCodes> _StatusElement;
    private Period _Period;
    private FhirDateTime _CreatedElement;
    private ResourceReference _PaymentIssuer;
    private ResourceReference _Request;
    private ResourceReference _Requestor;
    private Code`1<ClaimProcessingCodes> _OutcomeElement;
    private FhirString _DispositionElement;
    private Date _PaymentDateElement;
    private Money _PaymentAmount;
    private Identifier _PaymentIdentifier;
    private List`1<DetailsComponent> _Detail;
    private CodeableConcept _FormCode;
    private List`1<NotesComponent> _ProcessNote;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PaymentReconciliationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<FinancialResourceStatusCodes> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<FinancialResourceStatusCodes> Status { get; public set; }
    [FhirElementAttribute("period")]
[DataMemberAttribute]
public Period Period { get; public set; }
    [FhirElementAttribute("created")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirDateTime CreatedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Created { get; public set; }
    [FhirElementAttribute("paymentIssuer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference PaymentIssuer { get; public set; }
    [FhirElementAttribute("request")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Request { get; public set; }
    [FhirElementAttribute("requestor")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Requestor { get; public set; }
    [FhirElementAttribute("outcome")]
[DeclaredTypeAttribute]
[BindingAttribute("RemittanceOutcome")]
[DataMemberAttribute]
public Code`1<ClaimProcessingCodes> OutcomeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ClaimProcessingCodes> Outcome { get; public set; }
    [FhirElementAttribute("disposition")]
[DataMemberAttribute]
public FhirString DispositionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Disposition { get; public set; }
    [FhirElementAttribute("paymentDate")]
[CardinalityAttribute]
[DataMemberAttribute]
public Date PaymentDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string PaymentDate { get; public set; }
    [FhirElementAttribute("paymentAmount")]
[CardinalityAttribute]
[DataMemberAttribute]
public Money PaymentAmount { get; public set; }
    [FhirElementAttribute("paymentIdentifier")]
[DataMemberAttribute]
public Identifier PaymentIdentifier { get; public set; }
    [FhirElementAttribute("detail")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<DetailsComponent> Detail { get; public set; }
    [FhirElementAttribute("formCode")]
[BindingAttribute("Forms")]
[DataMemberAttribute]
public CodeableConcept FormCode { get; public set; }
    [FhirElementAttribute("processNote")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<NotesComponent> ProcessNote { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<FinancialResourceStatusCodes> get_StatusElement();
    public void set_StatusElement(Code`1<FinancialResourceStatusCodes> value);
    public Nullable`1<FinancialResourceStatusCodes> get_Status();
    public void set_Status(Nullable`1<FinancialResourceStatusCodes> value);
    public Period get_Period();
    public void set_Period(Period value);
    public FhirDateTime get_CreatedElement();
    public void set_CreatedElement(FhirDateTime value);
    public string get_Created();
    public void set_Created(string value);
    public ResourceReference get_PaymentIssuer();
    public void set_PaymentIssuer(ResourceReference value);
    public ResourceReference get_Request();
    public void set_Request(ResourceReference value);
    public ResourceReference get_Requestor();
    public void set_Requestor(ResourceReference value);
    public Code`1<ClaimProcessingCodes> get_OutcomeElement();
    public void set_OutcomeElement(Code`1<ClaimProcessingCodes> value);
    public Nullable`1<ClaimProcessingCodes> get_Outcome();
    public void set_Outcome(Nullable`1<ClaimProcessingCodes> value);
    public FhirString get_DispositionElement();
    public void set_DispositionElement(FhirString value);
    public string get_Disposition();
    public void set_Disposition(string value);
    public Date get_PaymentDateElement();
    public void set_PaymentDateElement(Date value);
    public string get_PaymentDate();
    public void set_PaymentDate(string value);
    public Money get_PaymentAmount();
    public void set_PaymentAmount(Money value);
    public Identifier get_PaymentIdentifier();
    public void set_PaymentIdentifier(Identifier value);
    public List`1<DetailsComponent> get_Detail();
    public void set_Detail(List`1<DetailsComponent> value);
    public CodeableConcept get_FormCode();
    public void set_FormCode(CodeableConcept value);
    public List`1<NotesComponent> get_ProcessNote();
    public void set_ProcessNote(List`1<NotesComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.PaymentReconciliation/<get_Children>d__87")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.PaymentReconciliation/<get_NamedChildren>d__89")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.PaymentReconciliation/<GetElementPairs>d__91")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Person", "http://hl7.org/fhir/StructureDefinition/Person")]
public class Hl7.Fhir.Model.Person : DomainResource {
    private List`1<Identifier> _Identifier;
    private List`1<HumanName> _Name;
    private List`1<ContactPoint> _Telecom;
    private Code`1<AdministrativeGender> _GenderElement;
    private Date _BirthDateElement;
    private List`1<Address> _Address;
    private Attachment _Photo;
    private ResourceReference _ManagingOrganization;
    private FhirBoolean _ActiveElement;
    private List`1<LinkComponent> _Link;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("name")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<HumanName> Name { get; public set; }
    [FhirElementAttribute("telecom")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactPoint> Telecom { get; public set; }
    [FhirElementAttribute("gender")]
[DeclaredTypeAttribute]
[BindingAttribute("AdministrativeGender")]
[DataMemberAttribute]
public Code`1<AdministrativeGender> GenderElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<AdministrativeGender> Gender { get; public set; }
    [FhirElementAttribute("birthDate")]
[DataMemberAttribute]
public Date BirthDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string BirthDate { get; public set; }
    [FhirElementAttribute("address")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Address> Address { get; public set; }
    [FhirElementAttribute("photo")]
[DataMemberAttribute]
public Attachment Photo { get; public set; }
    [FhirElementAttribute("managingOrganization")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference ManagingOrganization { get; public set; }
    [FhirElementAttribute("active")]
[DataMemberAttribute]
public FhirBoolean ActiveElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Active { get; public set; }
    [FhirElementAttribute("link")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<LinkComponent> Link { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<HumanName> get_Name();
    public void set_Name(List`1<HumanName> value);
    public List`1<ContactPoint> get_Telecom();
    public void set_Telecom(List`1<ContactPoint> value);
    public Code`1<AdministrativeGender> get_GenderElement();
    public void set_GenderElement(Code`1<AdministrativeGender> value);
    public Nullable`1<AdministrativeGender> get_Gender();
    public void set_Gender(Nullable`1<AdministrativeGender> value);
    public Date get_BirthDateElement();
    public void set_BirthDateElement(Date value);
    public string get_BirthDate();
    public void set_BirthDate(string value);
    public List`1<Address> get_Address();
    public void set_Address(List`1<Address> value);
    public Attachment get_Photo();
    public void set_Photo(Attachment value);
    public ResourceReference get_ManagingOrganization();
    public void set_ManagingOrganization(ResourceReference value);
    public FhirBoolean get_ActiveElement();
    public void set_ActiveElement(FhirBoolean value);
    public Nullable`1<bool> get_Active();
    public void set_Active(Nullable`1<bool> value);
    public List`1<LinkComponent> get_Link();
    public void set_Link(List`1<LinkComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Person/<get_Children>d__61")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Person/<get_NamedChildren>d__63")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Person/<GetElementPairs>d__65")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("PlanDefinition", "http://hl7.org/fhir/StructureDefinition/PlanDefinition")]
public class Hl7.Fhir.Model.PlanDefinition : DomainResource {
    private FhirUri _UrlElement;
    private List`1<Identifier> _Identifier;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private FhirString _TitleElement;
    private FhirString _SubtitleElement;
    private CodeableConcept _Type;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirBoolean _ExperimentalElement;
    private DataType _Subject;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _PurposeElement;
    private FhirString _UsageElement;
    private Markdown _CopyrightElement;
    private Date _ApprovalDateElement;
    private Date _LastReviewDateElement;
    private Period _EffectivePeriod;
    private List`1<CodeableConcept> _Topic;
    private List`1<ContactDetail> _Author;
    private List`1<ContactDetail> _Editor;
    private List`1<ContactDetail> _Reviewer;
    private List`1<ContactDetail> _Endorser;
    private List`1<RelatedArtifact> _RelatedArtifact;
    private List`1<Canonical> _LibraryElement;
    private List`1<GoalComponent> _Goal;
    private List`1<ActionComponent> _Action;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("subtitle")]
[DataMemberAttribute]
public FhirString SubtitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Subtitle { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("PlanDefinitionType")]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("experimental")]
[DataMemberAttribute]
public FhirBoolean ExperimentalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Experimental { get; public set; }
    [FhirElementAttribute]
[BindingAttribute("SubjectType")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Subject { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("purpose")]
[DataMemberAttribute]
public Markdown PurposeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Purpose { get; public set; }
    [FhirElementAttribute("usage")]
[DataMemberAttribute]
public FhirString UsageElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Usage { get; public set; }
    [FhirElementAttribute("copyright")]
[DataMemberAttribute]
public Markdown CopyrightElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Copyright { get; public set; }
    [FhirElementAttribute("approvalDate")]
[DataMemberAttribute]
public Date ApprovalDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ApprovalDate { get; public set; }
    [FhirElementAttribute("lastReviewDate")]
[DataMemberAttribute]
public Date LastReviewDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string LastReviewDate { get; public set; }
    [FhirElementAttribute("effectivePeriod")]
[DataMemberAttribute]
public Period EffectivePeriod { get; public set; }
    [FhirElementAttribute("topic")]
[BindingAttribute("DefinitionTopic")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Topic { get; public set; }
    [FhirElementAttribute("author")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Author { get; public set; }
    [FhirElementAttribute("editor")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Editor { get; public set; }
    [FhirElementAttribute("reviewer")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Reviewer { get; public set; }
    [FhirElementAttribute("endorser")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Endorser { get; public set; }
    [FhirElementAttribute("relatedArtifact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RelatedArtifact> RelatedArtifact { get; public set; }
    [FhirElementAttribute("library")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> LibraryElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Library { get; public set; }
    [FhirElementAttribute("goal")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<GoalComponent> Goal { get; public set; }
    [FhirElementAttribute("action")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ActionComponent> Action { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public FhirUri get_UrlElement();
    public void set_UrlElement(FhirUri value);
    public string get_Url();
    public void set_Url(string value);
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirString get_VersionElement();
    public void set_VersionElement(FhirString value);
    public string get_Version();
    public void set_Version(string value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public FhirString get_SubtitleElement();
    public void set_SubtitleElement(FhirString value);
    public string get_Subtitle();
    public void set_Subtitle(string value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public Code`1<PublicationStatus> get_StatusElement();
    public void set_StatusElement(Code`1<PublicationStatus> value);
    public Nullable`1<PublicationStatus> get_Status();
    public void set_Status(Nullable`1<PublicationStatus> value);
    public FhirBoolean get_ExperimentalElement();
    public void set_ExperimentalElement(FhirBoolean value);
    public Nullable`1<bool> get_Experimental();
    public void set_Experimental(Nullable`1<bool> value);
    public DataType get_Subject();
    public void set_Subject(DataType value);
    public FhirDateTime get_DateElement();
    public void set_DateElement(FhirDateTime value);
    public string get_Date();
    public void set_Date(string value);
    public FhirString get_PublisherElement();
    public void set_PublisherElement(FhirString value);
    public string get_Publisher();
    public void set_Publisher(string value);
    public List`1<ContactDetail> get_Contact();
    public void set_Contact(List`1<ContactDetail> value);
    public Markdown get_DescriptionElement();
    public void set_DescriptionElement(Markdown value);
    public string get_Description();
    public void set_Description(string value);
    public List`1<UsageContext> get_UseContext();
    public void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public Markdown get_PurposeElement();
    public void set_PurposeElement(Markdown value);
    public string get_Purpose();
    public void set_Purpose(string value);
    public FhirString get_UsageElement();
    public void set_UsageElement(FhirString value);
    public string get_Usage();
    public void set_Usage(string value);
    public Markdown get_CopyrightElement();
    public void set_CopyrightElement(Markdown value);
    public string get_Copyright();
    public void set_Copyright(string value);
    public Date get_ApprovalDateElement();
    public void set_ApprovalDateElement(Date value);
    public string get_ApprovalDate();
    public void set_ApprovalDate(string value);
    public Date get_LastReviewDateElement();
    public void set_LastReviewDateElement(Date value);
    public string get_LastReviewDate();
    public void set_LastReviewDate(string value);
    public Period get_EffectivePeriod();
    public void set_EffectivePeriod(Period value);
    public List`1<CodeableConcept> get_Topic();
    public void set_Topic(List`1<CodeableConcept> value);
    public List`1<ContactDetail> get_Author();
    public void set_Author(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Editor();
    public void set_Editor(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Reviewer();
    public void set_Reviewer(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Endorser();
    public void set_Endorser(List`1<ContactDetail> value);
    public List`1<RelatedArtifact> get_RelatedArtifact();
    public void set_RelatedArtifact(List`1<RelatedArtifact> value);
    public List`1<Canonical> get_LibraryElement();
    public void set_LibraryElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_Library();
    public void set_Library(IEnumerable`1<string> value);
    public List`1<GoalComponent> get_Goal();
    public void set_Goal(List`1<GoalComponent> value);
    public List`1<ActionComponent> get_Action();
    public void set_Action(List`1<ActionComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.PlanDefinition/<get_Children>d__189")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.PlanDefinition/<get_NamedChildren>d__191")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.PlanDefinition/<GetElementPairs>d__193")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Population", "http://hl7.org/fhir/StructureDefinition/Population")]
public class Hl7.Fhir.Model.Population : BackboneType {
    private DataType _Age;
    private CodeableConcept _Gender;
    private CodeableConcept _Race;
    private CodeableConcept _PhysiologicalCondition;
    public string TypeName { get; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Age { get; public set; }
    [FhirElementAttribute("gender")]
[DataMemberAttribute]
public CodeableConcept Gender { get; public set; }
    [FhirElementAttribute("race")]
[DataMemberAttribute]
public CodeableConcept Race { get; public set; }
    [FhirElementAttribute("physiologicalCondition")]
[DataMemberAttribute]
public CodeableConcept PhysiologicalCondition { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public DataType get_Age();
    public void set_Age(DataType value);
    public CodeableConcept get_Gender();
    public void set_Gender(CodeableConcept value);
    public CodeableConcept get_Race();
    public void set_Race(CodeableConcept value);
    public CodeableConcept get_PhysiologicalCondition();
    public void set_PhysiologicalCondition(CodeableConcept value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Population/<get_Children>d__23")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Population/<get_NamedChildren>d__25")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Population/<GetElementPairs>d__27")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Practitioner", "http://hl7.org/fhir/StructureDefinition/Practitioner")]
public class Hl7.Fhir.Model.Practitioner : DomainResource {
    private List`1<Identifier> _Identifier;
    private FhirBoolean _ActiveElement;
    private List`1<HumanName> _Name;
    private List`1<ContactPoint> _Telecom;
    private List`1<Address> _Address;
    private Code`1<AdministrativeGender> _GenderElement;
    private Date _BirthDateElement;
    private List`1<Attachment> _Photo;
    private List`1<QualificationComponent> _Qualification;
    private List`1<CodeableConcept> _Communication;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("active")]
[DataMemberAttribute]
public FhirBoolean ActiveElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Active { get; public set; }
    [FhirElementAttribute("name")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<HumanName> Name { get; public set; }
    [FhirElementAttribute("telecom")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactPoint> Telecom { get; public set; }
    [FhirElementAttribute("address")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Address> Address { get; public set; }
    [FhirElementAttribute("gender")]
[DeclaredTypeAttribute]
[BindingAttribute("AdministrativeGender")]
[DataMemberAttribute]
public Code`1<AdministrativeGender> GenderElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<AdministrativeGender> Gender { get; public set; }
    [FhirElementAttribute("birthDate")]
[DataMemberAttribute]
public Date BirthDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string BirthDate { get; public set; }
    [FhirElementAttribute("photo")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Attachment> Photo { get; public set; }
    [FhirElementAttribute("qualification")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<QualificationComponent> Qualification { get; public set; }
    [FhirElementAttribute("communication")]
[BindingAttribute("Language")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Communication { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirBoolean get_ActiveElement();
    public void set_ActiveElement(FhirBoolean value);
    public Nullable`1<bool> get_Active();
    public void set_Active(Nullable`1<bool> value);
    public List`1<HumanName> get_Name();
    public void set_Name(List`1<HumanName> value);
    public List`1<ContactPoint> get_Telecom();
    public void set_Telecom(List`1<ContactPoint> value);
    public List`1<Address> get_Address();
    public void set_Address(List`1<Address> value);
    public Code`1<AdministrativeGender> get_GenderElement();
    public void set_GenderElement(Code`1<AdministrativeGender> value);
    public Nullable`1<AdministrativeGender> get_Gender();
    public void set_Gender(Nullable`1<AdministrativeGender> value);
    public Date get_BirthDateElement();
    public void set_BirthDateElement(Date value);
    public string get_BirthDate();
    public void set_BirthDate(string value);
    public List`1<Attachment> get_Photo();
    public void set_Photo(List`1<Attachment> value);
    public List`1<QualificationComponent> get_Qualification();
    public void set_Qualification(List`1<QualificationComponent> value);
    public List`1<CodeableConcept> get_Communication();
    public void set_Communication(List`1<CodeableConcept> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Practitioner/<get_Children>d__60")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Practitioner/<get_NamedChildren>d__62")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Practitioner/<GetElementPairs>d__64")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("PractitionerRole", "http://hl7.org/fhir/StructureDefinition/PractitionerRole")]
public class Hl7.Fhir.Model.PractitionerRole : DomainResource {
    private List`1<Identifier> _Identifier;
    private FhirBoolean _ActiveElement;
    private Period _Period;
    private ResourceReference _Practitioner;
    private ResourceReference _Organization;
    private List`1<CodeableConcept> _Code;
    private List`1<CodeableConcept> _Specialty;
    private List`1<ResourceReference> _Location;
    private List`1<ResourceReference> _HealthcareService;
    private List`1<ContactPoint> _Telecom;
    private List`1<AvailableTimeComponent> _AvailableTime;
    private List`1<NotAvailableComponent> _NotAvailable;
    private FhirString _AvailabilityExceptionsElement;
    private List`1<ResourceReference> _Endpoint;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("active")]
[DataMemberAttribute]
public FhirBoolean ActiveElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Active { get; public set; }
    [FhirElementAttribute("period")]
[DataMemberAttribute]
public Period Period { get; public set; }
    [FhirElementAttribute("practitioner")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Practitioner { get; public set; }
    [FhirElementAttribute("organization")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Organization { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("PractitionerRole")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Code { get; public set; }
    [FhirElementAttribute("specialty")]
[BindingAttribute("PractitionerSpecialty")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Specialty { get; public set; }
    [FhirElementAttribute("location")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Location { get; public set; }
    [FhirElementAttribute("healthcareService")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> HealthcareService { get; public set; }
    [FhirElementAttribute("telecom")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactPoint> Telecom { get; public set; }
    [FhirElementAttribute("availableTime")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<AvailableTimeComponent> AvailableTime { get; public set; }
    [FhirElementAttribute("notAvailable")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<NotAvailableComponent> NotAvailable { get; public set; }
    [FhirElementAttribute("availabilityExceptions")]
[DataMemberAttribute]
public FhirString AvailabilityExceptionsElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string AvailabilityExceptions { get; public set; }
    [FhirElementAttribute("endpoint")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Endpoint { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirBoolean get_ActiveElement();
    public void set_ActiveElement(FhirBoolean value);
    public Nullable`1<bool> get_Active();
    public void set_Active(Nullable`1<bool> value);
    public Period get_Period();
    public void set_Period(Period value);
    public ResourceReference get_Practitioner();
    public void set_Practitioner(ResourceReference value);
    public ResourceReference get_Organization();
    public void set_Organization(ResourceReference value);
    public List`1<CodeableConcept> get_Code();
    public void set_Code(List`1<CodeableConcept> value);
    public List`1<CodeableConcept> get_Specialty();
    public void set_Specialty(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_Location();
    public void set_Location(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_HealthcareService();
    public void set_HealthcareService(List`1<ResourceReference> value);
    public List`1<ContactPoint> get_Telecom();
    public void set_Telecom(List`1<ContactPoint> value);
    public List`1<AvailableTimeComponent> get_AvailableTime();
    public void set_AvailableTime(List`1<AvailableTimeComponent> value);
    public List`1<NotAvailableComponent> get_NotAvailable();
    public void set_NotAvailable(List`1<NotAvailableComponent> value);
    public FhirString get_AvailabilityExceptionsElement();
    public void set_AvailabilityExceptionsElement(FhirString value);
    public string get_AvailabilityExceptions();
    public void set_AvailabilityExceptions(string value);
    public List`1<ResourceReference> get_Endpoint();
    public void set_Endpoint(List`1<ResourceReference> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.set_Code(List`1<CodeableConcept> value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.PractitionerRole/<get_Children>d__78")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.PractitionerRole/<get_NamedChildren>d__80")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.PractitionerRole/<GetElementPairs>d__82")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Procedure", "http://hl7.org/fhir/StructureDefinition/Procedure")]
public class Hl7.Fhir.Model.Procedure : DomainResource {
    private List`1<Identifier> _Identifier;
    private List`1<Canonical> _InstantiatesCanonicalElement;
    private List`1<FhirUri> _InstantiatesUriElement;
    private List`1<ResourceReference> _BasedOn;
    private List`1<ResourceReference> _PartOf;
    private Code`1<EventStatus> _StatusElement;
    private CodeableConcept _StatusReason;
    private CodeableConcept _Category;
    private CodeableConcept _Code;
    private ResourceReference _Subject;
    private ResourceReference _Encounter;
    private DataType _Performed;
    private ResourceReference _Recorder;
    private ResourceReference _Asserter;
    private List`1<PerformerComponent> _Performer;
    private ResourceReference _Location;
    private List`1<CodeableConcept> _ReasonCode;
    private List`1<ResourceReference> _ReasonReference;
    private List`1<CodeableConcept> _BodySite;
    private CodeableConcept _Outcome;
    private List`1<ResourceReference> _Report;
    private List`1<CodeableConcept> _Complication;
    private List`1<ResourceReference> _ComplicationDetail;
    private List`1<CodeableConcept> _FollowUp;
    private List`1<Annotation> _Note;
    private List`1<FocalDeviceComponent> _FocalDevice;
    private List`1<ResourceReference> _UsedReference;
    private List`1<CodeableConcept> _UsedCode;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("instantiatesCanonical")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> InstantiatesCanonicalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> InstantiatesCanonical { get; public set; }
    [FhirElementAttribute("instantiatesUri")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirUri> InstantiatesUriElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> InstantiatesUri { get; public set; }
    [FhirElementAttribute("basedOn")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> BasedOn { get; public set; }
    [FhirElementAttribute("partOf")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> PartOf { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("ProcedureStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<EventStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<EventStatus> Status { get; public set; }
    [FhirElementAttribute("statusReason")]
[BindingAttribute("ProcedureNegationReason")]
[DataMemberAttribute]
public CodeableConcept StatusReason { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("ProcedureCategory")]
[DataMemberAttribute]
public CodeableConcept Category { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("ProcedureCode")]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Performed { get; public set; }
    [FhirElementAttribute("recorder")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Recorder { get; public set; }
    [FhirElementAttribute("asserter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Asserter { get; public set; }
    [FhirElementAttribute("performer")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<PerformerComponent> Performer { get; public set; }
    [FhirElementAttribute("location")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Location { get; public set; }
    [FhirElementAttribute("reasonCode")]
[BindingAttribute("ProcedureReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ReasonCode { get; public set; }
    [FhirElementAttribute("reasonReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ReasonReference { get; public set; }
    [FhirElementAttribute("bodySite")]
[BindingAttribute("BodySite")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> BodySite { get; public set; }
    [FhirElementAttribute("outcome")]
[BindingAttribute("ProcedureOutcome")]
[DataMemberAttribute]
public CodeableConcept Outcome { get; public set; }
    [FhirElementAttribute("report")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Report { get; public set; }
    [FhirElementAttribute("complication")]
[BindingAttribute("ProcedureComplication")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Complication { get; public set; }
    [FhirElementAttribute("complicationDetail")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ComplicationDetail { get; public set; }
    [FhirElementAttribute("followUp")]
[BindingAttribute("ProcedureFollowUp")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> FollowUp { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("focalDevice")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FocalDeviceComponent> FocalDevice { get; public set; }
    [FhirElementAttribute("usedReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> UsedReference { get; public set; }
    [FhirElementAttribute("usedCode")]
[BindingAttribute("ProcedureUsed")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> UsedCode { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<Canonical> get_InstantiatesCanonicalElement();
    public void set_InstantiatesCanonicalElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_InstantiatesCanonical();
    public void set_InstantiatesCanonical(IEnumerable`1<string> value);
    public List`1<FhirUri> get_InstantiatesUriElement();
    public void set_InstantiatesUriElement(List`1<FhirUri> value);
    public IEnumerable`1<string> get_InstantiatesUri();
    public void set_InstantiatesUri(IEnumerable`1<string> value);
    public List`1<ResourceReference> get_BasedOn();
    public void set_BasedOn(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_PartOf();
    public void set_PartOf(List`1<ResourceReference> value);
    public Code`1<EventStatus> get_StatusElement();
    public void set_StatusElement(Code`1<EventStatus> value);
    public Nullable`1<EventStatus> get_Status();
    public void set_Status(Nullable`1<EventStatus> value);
    public CodeableConcept get_StatusReason();
    public void set_StatusReason(CodeableConcept value);
    public CodeableConcept get_Category();
    public void set_Category(CodeableConcept value);
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public DataType get_Performed();
    public void set_Performed(DataType value);
    public ResourceReference get_Recorder();
    public void set_Recorder(ResourceReference value);
    public ResourceReference get_Asserter();
    public void set_Asserter(ResourceReference value);
    public List`1<PerformerComponent> get_Performer();
    public void set_Performer(List`1<PerformerComponent> value);
    public ResourceReference get_Location();
    public void set_Location(ResourceReference value);
    public List`1<CodeableConcept> get_ReasonCode();
    public void set_ReasonCode(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_ReasonReference();
    public void set_ReasonReference(List`1<ResourceReference> value);
    public List`1<CodeableConcept> get_BodySite();
    public void set_BodySite(List`1<CodeableConcept> value);
    public CodeableConcept get_Outcome();
    public void set_Outcome(CodeableConcept value);
    public List`1<ResourceReference> get_Report();
    public void set_Report(List`1<ResourceReference> value);
    public List`1<CodeableConcept> get_Complication();
    public void set_Complication(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_ComplicationDetail();
    public void set_ComplicationDetail(List`1<ResourceReference> value);
    public List`1<CodeableConcept> get_FollowUp();
    public void set_FollowUp(List`1<CodeableConcept> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public List`1<FocalDeviceComponent> get_FocalDevice();
    public void set_FocalDevice(List`1<FocalDeviceComponent> value);
    public List`1<ResourceReference> get_UsedReference();
    public void set_UsedReference(List`1<ResourceReference> value);
    public List`1<CodeableConcept> get_UsedCode();
    public void set_UsedCode(List`1<CodeableConcept> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Procedure/<get_Children>d__137")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Procedure/<get_NamedChildren>d__139")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Procedure/<GetElementPairs>d__141")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[ObsoleteAttribute("The ProcedureRequest has been merged with ReferralRequest and renamed ServiceRequest", "True")]
public class Hl7.Fhir.Model.ProcedureRequest : ServiceRequest {
}
[DataContractAttribute]
[FhirTypeAttribute("ProdCharacteristic", "http://hl7.org/fhir/StructureDefinition/ProdCharacteristic")]
public class Hl7.Fhir.Model.ProdCharacteristic : BackboneType {
    private Quantity _Height;
    private Quantity _Width;
    private Quantity _Depth;
    private Quantity _Weight;
    private Quantity _NominalVolume;
    private Quantity _ExternalDiameter;
    private FhirString _ShapeElement;
    private List`1<FhirString> _ColorElement;
    private List`1<FhirString> _ImprintElement;
    private List`1<Attachment> _Image;
    private CodeableConcept _Scoring;
    public string TypeName { get; }
    [FhirElementAttribute("height")]
[DataMemberAttribute]
public Quantity Height { get; public set; }
    [FhirElementAttribute("width")]
[DataMemberAttribute]
public Quantity Width { get; public set; }
    [FhirElementAttribute("depth")]
[DataMemberAttribute]
public Quantity Depth { get; public set; }
    [FhirElementAttribute("weight")]
[DataMemberAttribute]
public Quantity Weight { get; public set; }
    [FhirElementAttribute("nominalVolume")]
[DataMemberAttribute]
public Quantity NominalVolume { get; public set; }
    [FhirElementAttribute("externalDiameter")]
[DataMemberAttribute]
public Quantity ExternalDiameter { get; public set; }
    [FhirElementAttribute("shape")]
[DataMemberAttribute]
public FhirString ShapeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Shape { get; public set; }
    [FhirElementAttribute("color")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> ColorElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Color { get; public set; }
    [FhirElementAttribute("imprint")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> ImprintElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Imprint { get; public set; }
    [FhirElementAttribute("image")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Attachment> Image { get; public set; }
    [FhirElementAttribute("scoring")]
[DataMemberAttribute]
public CodeableConcept Scoring { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Quantity get_Height();
    public void set_Height(Quantity value);
    public Quantity get_Width();
    public void set_Width(Quantity value);
    public Quantity get_Depth();
    public void set_Depth(Quantity value);
    public Quantity get_Weight();
    public void set_Weight(Quantity value);
    public Quantity get_NominalVolume();
    public void set_NominalVolume(Quantity value);
    public Quantity get_ExternalDiameter();
    public void set_ExternalDiameter(Quantity value);
    public FhirString get_ShapeElement();
    public void set_ShapeElement(FhirString value);
    public string get_Shape();
    public void set_Shape(string value);
    public List`1<FhirString> get_ColorElement();
    public void set_ColorElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_Color();
    public void set_Color(IEnumerable`1<string> value);
    public List`1<FhirString> get_ImprintElement();
    public void set_ImprintElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_Imprint();
    public void set_Imprint(IEnumerable`1<string> value);
    public List`1<Attachment> get_Image();
    public void set_Image(List`1<Attachment> value);
    public CodeableConcept get_Scoring();
    public void set_Scoring(CodeableConcept value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ProdCharacteristic/<get_Children>d__60")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ProdCharacteristic/<get_NamedChildren>d__62")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ProdCharacteristic/<GetElementPairs>d__64")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("ProductShelfLife", "http://hl7.org/fhir/StructureDefinition/ProductShelfLife")]
public class Hl7.Fhir.Model.ProductShelfLife : BackboneType {
    private Identifier _Identifier;
    private CodeableConcept _Type;
    private Quantity _Period;
    private List`1<CodeableConcept> _SpecialPrecautionsForStorage;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[DataMemberAttribute]
public Identifier Identifier { get; public set; }
    [FhirElementAttribute("type")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("period")]
[CardinalityAttribute]
[DataMemberAttribute]
public Quantity Period { get; public set; }
    [FhirElementAttribute("specialPrecautionsForStorage")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> SpecialPrecautionsForStorage { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Identifier get_Identifier();
    public void set_Identifier(Identifier value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public Quantity get_Period();
    public void set_Period(Quantity value);
    public List`1<CodeableConcept> get_SpecialPrecautionsForStorage();
    public void set_SpecialPrecautionsForStorage(List`1<CodeableConcept> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ProductShelfLife/<get_Children>d__23")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ProductShelfLife/<get_NamedChildren>d__25")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ProductShelfLife/<GetElementPairs>d__27")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Provenance", "http://hl7.org/fhir/StructureDefinition/Provenance")]
public class Hl7.Fhir.Model.Provenance : DomainResource {
    private List`1<ResourceReference> _Target;
    private DataType _Occurred;
    private Instant _RecordedElement;
    private List`1<FhirUri> _PolicyElement;
    private ResourceReference _Location;
    private List`1<CodeableConcept> _Reason;
    private CodeableConcept _Activity;
    private List`1<AgentComponent> _Agent;
    private List`1<EntityComponent> _Entity;
    private List`1<Signature> _Signature;
    public string TypeName { get; }
    [FhirElementAttribute("target")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Target { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Occurred { get; public set; }
    [FhirElementAttribute("recorded")]
[CardinalityAttribute]
[DataMemberAttribute]
public Instant RecordedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<DateTimeOffset> Recorded { get; public set; }
    [FhirElementAttribute("policy")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirUri> PolicyElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Policy { get; public set; }
    [FhirElementAttribute("location")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Location { get; public set; }
    [FhirElementAttribute("reason")]
[BindingAttribute("ProvenanceReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Reason { get; public set; }
    [FhirElementAttribute("activity")]
[BindingAttribute("ProvenanceActivity")]
[DataMemberAttribute]
public CodeableConcept Activity { get; public set; }
    [FhirElementAttribute("agent")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<AgentComponent> Agent { get; public set; }
    [FhirElementAttribute("entity")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<EntityComponent> Entity { get; public set; }
    [FhirElementAttribute("signature")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Signature> Signature { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<ResourceReference> get_Target();
    public void set_Target(List`1<ResourceReference> value);
    public DataType get_Occurred();
    public void set_Occurred(DataType value);
    public Instant get_RecordedElement();
    public void set_RecordedElement(Instant value);
    public Nullable`1<DateTimeOffset> get_Recorded();
    public void set_Recorded(Nullable`1<DateTimeOffset> value);
    public List`1<FhirUri> get_PolicyElement();
    public void set_PolicyElement(List`1<FhirUri> value);
    public IEnumerable`1<string> get_Policy();
    public void set_Policy(IEnumerable`1<string> value);
    public ResourceReference get_Location();
    public void set_Location(ResourceReference value);
    public List`1<CodeableConcept> get_Reason();
    public void set_Reason(List`1<CodeableConcept> value);
    public CodeableConcept get_Activity();
    public void set_Activity(CodeableConcept value);
    public List`1<AgentComponent> get_Agent();
    public void set_Agent(List`1<AgentComponent> value);
    public List`1<EntityComponent> get_Entity();
    public void set_Entity(List`1<EntityComponent> value);
    public List`1<Signature> get_Signature();
    public void set_Signature(List`1<Signature> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Provenance/<get_Children>d__56")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Provenance/<get_NamedChildren>d__58")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Provenance/<GetElementPairs>d__60")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Questionnaire", "http://hl7.org/fhir/StructureDefinition/Questionnaire")]
public class Hl7.Fhir.Model.Questionnaire : DomainResource {
    private FhirUri _UrlElement;
    private List`1<Identifier> _Identifier;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private FhirString _TitleElement;
    private List`1<Canonical> _DerivedFromElement;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirBoolean _ExperimentalElement;
    private List`1<Code`1<ResourceType>> _SubjectTypeElement;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _PurposeElement;
    private Markdown _CopyrightElement;
    private Date _ApprovalDateElement;
    private Date _LastReviewDateElement;
    private Period _EffectivePeriod;
    private List`1<Coding> _Code;
    private List`1<ItemComponent> _Item;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("derivedFrom")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> DerivedFromElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> DerivedFrom { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("experimental")]
[DataMemberAttribute]
public FhirBoolean ExperimentalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Experimental { get; public set; }
    [FhirElementAttribute("subjectType")]
[DeclaredTypeAttribute]
[BindingAttribute("ResourceType")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Code`1<ResourceType>> SubjectTypeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Nullable`1<ResourceType>> SubjectType { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("purpose")]
[DataMemberAttribute]
public Markdown PurposeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Purpose { get; public set; }
    [FhirElementAttribute("copyright")]
[DataMemberAttribute]
public Markdown CopyrightElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Copyright { get; public set; }
    [FhirElementAttribute("approvalDate")]
[DataMemberAttribute]
public Date ApprovalDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ApprovalDate { get; public set; }
    [FhirElementAttribute("lastReviewDate")]
[DataMemberAttribute]
public Date LastReviewDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string LastReviewDate { get; public set; }
    [FhirElementAttribute("effectivePeriod")]
[DataMemberAttribute]
public Period EffectivePeriod { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("QuestionnaireConcept")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Coding> Code { get; public set; }
    [FhirElementAttribute("item")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ItemComponent> Item { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private FhirString Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.FhirString>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public sealed virtual FhirUri get_UrlElement();
    public sealed virtual void set_UrlElement(FhirUri value);
    public sealed virtual string get_Url();
    public sealed virtual void set_Url(string value);
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public sealed virtual FhirString get_VersionElement();
    public sealed virtual void set_VersionElement(FhirString value);
    public sealed virtual string get_Version();
    public sealed virtual void set_Version(string value);
    public sealed virtual FhirString get_NameElement();
    public sealed virtual void set_NameElement(FhirString value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public List`1<Canonical> get_DerivedFromElement();
    public void set_DerivedFromElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_DerivedFrom();
    public void set_DerivedFrom(IEnumerable`1<string> value);
    public sealed virtual Code`1<PublicationStatus> get_StatusElement();
    public sealed virtual void set_StatusElement(Code`1<PublicationStatus> value);
    public sealed virtual Nullable`1<PublicationStatus> get_Status();
    public sealed virtual void set_Status(Nullable`1<PublicationStatus> value);
    public sealed virtual FhirBoolean get_ExperimentalElement();
    public sealed virtual void set_ExperimentalElement(FhirBoolean value);
    public sealed virtual Nullable`1<bool> get_Experimental();
    public sealed virtual void set_Experimental(Nullable`1<bool> value);
    public List`1<Code`1<ResourceType>> get_SubjectTypeElement();
    public void set_SubjectTypeElement(List`1<Code`1<ResourceType>> value);
    public IEnumerable`1<Nullable`1<ResourceType>> get_SubjectType();
    public void set_SubjectType(IEnumerable`1<Nullable`1<ResourceType>> value);
    public sealed virtual FhirDateTime get_DateElement();
    public sealed virtual void set_DateElement(FhirDateTime value);
    public sealed virtual string get_Date();
    public sealed virtual void set_Date(string value);
    public sealed virtual FhirString get_PublisherElement();
    public sealed virtual void set_PublisherElement(FhirString value);
    public sealed virtual string get_Publisher();
    public sealed virtual void set_Publisher(string value);
    public sealed virtual List`1<ContactDetail> get_Contact();
    public sealed virtual void set_Contact(List`1<ContactDetail> value);
    public sealed virtual Markdown get_DescriptionElement();
    public sealed virtual void set_DescriptionElement(Markdown value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual List`1<UsageContext> get_UseContext();
    public sealed virtual void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public sealed virtual Markdown get_PurposeElement();
    public sealed virtual void set_PurposeElement(Markdown value);
    public sealed virtual string get_Purpose();
    public sealed virtual void set_Purpose(string value);
    public Markdown get_CopyrightElement();
    public void set_CopyrightElement(Markdown value);
    public string get_Copyright();
    public void set_Copyright(string value);
    public Date get_ApprovalDateElement();
    public void set_ApprovalDateElement(Date value);
    public string get_ApprovalDate();
    public void set_ApprovalDate(string value);
    public Date get_LastReviewDateElement();
    public void set_LastReviewDateElement(Date value);
    public string get_LastReviewDate();
    public void set_LastReviewDate(string value);
    public Period get_EffectivePeriod();
    public void set_EffectivePeriod(Period value);
    public List`1<Coding> get_Code();
    public void set_Code(List`1<Coding> value);
    public List`1<ItemComponent> get_Item();
    public void set_Item(List`1<ItemComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override FhirString Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.FhirString>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.FhirString>.set_Code(FhirString value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Questionnaire/<get_Children>d__154")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Questionnaire/<get_NamedChildren>d__156")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Questionnaire/<GetElementPairs>d__158")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("QuestionnaireResponse", "http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse")]
public class Hl7.Fhir.Model.QuestionnaireResponse : DomainResource {
    private Identifier _Identifier;
    private List`1<ResourceReference> _BasedOn;
    private List`1<ResourceReference> _PartOf;
    private Canonical _QuestionnaireElement;
    private Code`1<QuestionnaireResponseStatus> _StatusElement;
    private ResourceReference _Subject;
    private ResourceReference _Encounter;
    private FhirDateTime _AuthoredElement;
    private ResourceReference _Author;
    private ResourceReference _Source;
    private List`1<ItemComponent> _Item;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[DataMemberAttribute]
public Identifier Identifier { get; public set; }
    [FhirElementAttribute("basedOn")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> BasedOn { get; public set; }
    [FhirElementAttribute("partOf")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> PartOf { get; public set; }
    [FhirElementAttribute("questionnaire")]
[DataMemberAttribute]
public Canonical QuestionnaireElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Questionnaire { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("QuestionnaireResponseStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<QuestionnaireResponseStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<QuestionnaireResponseStatus> Status { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute("authored")]
[DataMemberAttribute]
public FhirDateTime AuthoredElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Authored { get; public set; }
    [FhirElementAttribute("author")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Author { get; public set; }
    [FhirElementAttribute("source")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Source { get; public set; }
    [FhirElementAttribute("item")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ItemComponent> Item { get; public set; }
    private Identifier Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Identifier get_Identifier();
    public void set_Identifier(Identifier value);
    public List`1<ResourceReference> get_BasedOn();
    public void set_BasedOn(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_PartOf();
    public void set_PartOf(List`1<ResourceReference> value);
    public Canonical get_QuestionnaireElement();
    public void set_QuestionnaireElement(Canonical value);
    public string get_Questionnaire();
    public void set_Questionnaire(string value);
    public Code`1<QuestionnaireResponseStatus> get_StatusElement();
    public void set_StatusElement(Code`1<QuestionnaireResponseStatus> value);
    public Nullable`1<QuestionnaireResponseStatus> get_Status();
    public void set_Status(Nullable`1<QuestionnaireResponseStatus> value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public FhirDateTime get_AuthoredElement();
    public void set_AuthoredElement(FhirDateTime value);
    public string get_Authored();
    public void set_Authored(string value);
    public ResourceReference get_Author();
    public void set_Author(ResourceReference value);
    public ResourceReference get_Source();
    public void set_Source(ResourceReference value);
    public List`1<ItemComponent> get_Item();
    public void set_Item(List`1<ItemComponent> value);
    private sealed virtual override Identifier Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.set_Identifier(Identifier value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.QuestionnaireResponse/<get_Children>d__66")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.QuestionnaireResponse/<get_NamedChildren>d__68")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.QuestionnaireResponse/<GetElementPairs>d__70")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Ratio", "http://hl7.org/fhir/StructureDefinition/Ratio")]
public class Hl7.Fhir.Model.Ratio : DataType {
    private Quantity _Numerator;
    private Quantity _Denominator;
    public string TypeName { get; }
    [FhirElementAttribute("numerator")]
[DataMemberAttribute]
public Quantity Numerator { get; public set; }
    [FhirElementAttribute("denominator")]
[DataMemberAttribute]
public Quantity Denominator { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    [NullableContextAttribute("1")]
public Ratio(Quantity numerator, Quantity denominator);
    public virtual string get_TypeName();
    public Quantity get_Numerator();
    public void set_Numerator(Quantity value);
    public Quantity get_Denominator();
    public void set_Denominator(Quantity value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Ratio/<get_Children>d__15")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Ratio/<get_NamedChildren>d__17")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Ratio/<GetElementPairs>d__19")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[ObsoleteAttribute("The ReferralRequest has been merged with ProcedureRequest and renamed ServiceRequest", "True")]
public class Hl7.Fhir.Model.ReferralRequest : ServiceRequest {
}
[DataContractAttribute]
[FhirTypeAttribute("RelatedPerson", "http://hl7.org/fhir/StructureDefinition/RelatedPerson")]
public class Hl7.Fhir.Model.RelatedPerson : DomainResource {
    private List`1<Identifier> _Identifier;
    private FhirBoolean _ActiveElement;
    private ResourceReference _Patient;
    private List`1<CodeableConcept> _Relationship;
    private List`1<HumanName> _Name;
    private List`1<ContactPoint> _Telecom;
    private Code`1<AdministrativeGender> _GenderElement;
    private Date _BirthDateElement;
    private List`1<Address> _Address;
    private List`1<Attachment> _Photo;
    private Period _Period;
    private List`1<CommunicationComponent> _Communication;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("active")]
[DataMemberAttribute]
public FhirBoolean ActiveElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Active { get; public set; }
    [FhirElementAttribute("patient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Patient { get; public set; }
    [FhirElementAttribute("relationship")]
[BindingAttribute("PatientRelationshipType")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Relationship { get; public set; }
    [FhirElementAttribute("name")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<HumanName> Name { get; public set; }
    [FhirElementAttribute("telecom")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactPoint> Telecom { get; public set; }
    [FhirElementAttribute("gender")]
[DeclaredTypeAttribute]
[BindingAttribute("AdministrativeGender")]
[DataMemberAttribute]
public Code`1<AdministrativeGender> GenderElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<AdministrativeGender> Gender { get; public set; }
    [FhirElementAttribute("birthDate")]
[DataMemberAttribute]
public Date BirthDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string BirthDate { get; public set; }
    [FhirElementAttribute("address")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Address> Address { get; public set; }
    [FhirElementAttribute("photo")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Attachment> Photo { get; public set; }
    [FhirElementAttribute("period")]
[DataMemberAttribute]
public Period Period { get; public set; }
    [FhirElementAttribute("communication")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CommunicationComponent> Communication { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirBoolean get_ActiveElement();
    public void set_ActiveElement(FhirBoolean value);
    public Nullable`1<bool> get_Active();
    public void set_Active(Nullable`1<bool> value);
    public ResourceReference get_Patient();
    public void set_Patient(ResourceReference value);
    public List`1<CodeableConcept> get_Relationship();
    public void set_Relationship(List`1<CodeableConcept> value);
    public List`1<HumanName> get_Name();
    public void set_Name(List`1<HumanName> value);
    public List`1<ContactPoint> get_Telecom();
    public void set_Telecom(List`1<ContactPoint> value);
    public Code`1<AdministrativeGender> get_GenderElement();
    public void set_GenderElement(Code`1<AdministrativeGender> value);
    public Nullable`1<AdministrativeGender> get_Gender();
    public void set_Gender(Nullable`1<AdministrativeGender> value);
    public Date get_BirthDateElement();
    public void set_BirthDateElement(Date value);
    public string get_BirthDate();
    public void set_BirthDate(string value);
    public List`1<Address> get_Address();
    public void set_Address(List`1<Address> value);
    public List`1<Attachment> get_Photo();
    public void set_Photo(List`1<Attachment> value);
    public Period get_Period();
    public void set_Period(Period value);
    public List`1<CommunicationComponent> get_Communication();
    public void set_Communication(List`1<CommunicationComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override List`1<CodeableConcept> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.CodeableConcept>>.set_Code(List`1<CodeableConcept> value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.RelatedPerson/<get_Children>d__72")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.RelatedPerson/<get_NamedChildren>d__74")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.RelatedPerson/<GetElementPairs>d__76")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("RequestGroup", "http://hl7.org/fhir/StructureDefinition/RequestGroup")]
public class Hl7.Fhir.Model.RequestGroup : DomainResource {
    private List`1<Identifier> _Identifier;
    private List`1<Canonical> _InstantiatesCanonicalElement;
    private List`1<FhirUri> _InstantiatesUriElement;
    private List`1<ResourceReference> _BasedOn;
    private List`1<ResourceReference> _Replaces;
    private Identifier _GroupIdentifier;
    private Code`1<RequestStatus> _StatusElement;
    private Code`1<RequestIntent> _IntentElement;
    private Code`1<RequestPriority> _PriorityElement;
    private CodeableConcept _Code;
    private ResourceReference _Subject;
    private ResourceReference _Encounter;
    private FhirDateTime _AuthoredOnElement;
    private ResourceReference _Author;
    private List`1<CodeableConcept> _ReasonCode;
    private List`1<ResourceReference> _ReasonReference;
    private List`1<Annotation> _Note;
    private List`1<ActionComponent> _Action;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("instantiatesCanonical")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> InstantiatesCanonicalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> InstantiatesCanonical { get; public set; }
    [FhirElementAttribute("instantiatesUri")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirUri> InstantiatesUriElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> InstantiatesUri { get; public set; }
    [FhirElementAttribute("basedOn")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> BasedOn { get; public set; }
    [FhirElementAttribute("replaces")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Replaces { get; public set; }
    [FhirElementAttribute("groupIdentifier")]
[DataMemberAttribute]
public Identifier GroupIdentifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("RequestStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<RequestStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<RequestStatus> Status { get; public set; }
    [FhirElementAttribute("intent")]
[DeclaredTypeAttribute]
[BindingAttribute("RequestIntent")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<RequestIntent> IntentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<RequestIntent> Intent { get; public set; }
    [FhirElementAttribute("priority")]
[DeclaredTypeAttribute]
[BindingAttribute("RequestPriority")]
[DataMemberAttribute]
public Code`1<RequestPriority> PriorityElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<RequestPriority> Priority { get; public set; }
    [FhirElementAttribute("code")]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute("authoredOn")]
[DataMemberAttribute]
public FhirDateTime AuthoredOnElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string AuthoredOn { get; public set; }
    [FhirElementAttribute("author")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Author { get; public set; }
    [FhirElementAttribute("reasonCode")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ReasonCode { get; public set; }
    [FhirElementAttribute("reasonReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ReasonReference { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("action")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ActionComponent> Action { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<Canonical> get_InstantiatesCanonicalElement();
    public void set_InstantiatesCanonicalElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_InstantiatesCanonical();
    public void set_InstantiatesCanonical(IEnumerable`1<string> value);
    public List`1<FhirUri> get_InstantiatesUriElement();
    public void set_InstantiatesUriElement(List`1<FhirUri> value);
    public IEnumerable`1<string> get_InstantiatesUri();
    public void set_InstantiatesUri(IEnumerable`1<string> value);
    public List`1<ResourceReference> get_BasedOn();
    public void set_BasedOn(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Replaces();
    public void set_Replaces(List`1<ResourceReference> value);
    public Identifier get_GroupIdentifier();
    public void set_GroupIdentifier(Identifier value);
    public Code`1<RequestStatus> get_StatusElement();
    public void set_StatusElement(Code`1<RequestStatus> value);
    public Nullable`1<RequestStatus> get_Status();
    public void set_Status(Nullable`1<RequestStatus> value);
    public Code`1<RequestIntent> get_IntentElement();
    public void set_IntentElement(Code`1<RequestIntent> value);
    public Nullable`1<RequestIntent> get_Intent();
    public void set_Intent(Nullable`1<RequestIntent> value);
    public Code`1<RequestPriority> get_PriorityElement();
    public void set_PriorityElement(Code`1<RequestPriority> value);
    public Nullable`1<RequestPriority> get_Priority();
    public void set_Priority(Nullable`1<RequestPriority> value);
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public FhirDateTime get_AuthoredOnElement();
    public void set_AuthoredOnElement(FhirDateTime value);
    public string get_AuthoredOn();
    public void set_AuthoredOn(string value);
    public ResourceReference get_Author();
    public void set_Author(ResourceReference value);
    public List`1<CodeableConcept> get_ReasonCode();
    public void set_ReasonCode(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_ReasonReference();
    public void set_ReasonReference(List`1<ResourceReference> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public List`1<ActionComponent> get_Action();
    public void set_Action(List`1<ActionComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.RequestGroup/<get_Children>d__107")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.RequestGroup/<get_NamedChildren>d__109")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.RequestGroup/<GetElementPairs>d__111")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("RequestIntent", "http://hl7.org/fhir/ValueSet/request-intent", "http://hl7.org/fhir/request-intent")]
public enum Hl7.Fhir.Model.RequestIntent : Enum {
    public int value__;
    [EnumLiteralAttribute("proposal", "")]
[DescriptionAttribute("Proposal")]
public static RequestIntent Proposal;
    [EnumLiteralAttribute("plan", "")]
[DescriptionAttribute("Plan")]
public static RequestIntent Plan;
    [EnumLiteralAttribute("directive", "")]
[DescriptionAttribute("Directive")]
public static RequestIntent Directive;
    [EnumLiteralAttribute("order", "")]
[DescriptionAttribute("Order")]
public static RequestIntent Order;
    [EnumLiteralAttribute("original-order", "")]
[DescriptionAttribute("Original Order")]
public static RequestIntent OriginalOrder;
    [EnumLiteralAttribute("reflex-order", "")]
[DescriptionAttribute("Reflex Order")]
public static RequestIntent ReflexOrder;
    [EnumLiteralAttribute("filler-order", "")]
[DescriptionAttribute("Filler Order")]
public static RequestIntent FillerOrder;
    [EnumLiteralAttribute("instance-order", "")]
[DescriptionAttribute("Instance Order")]
public static RequestIntent InstanceOrder;
    [EnumLiteralAttribute("option", "")]
[DescriptionAttribute("Option")]
public static RequestIntent Option;
}
[FhirEnumerationAttribute("RequestPriority", "http://hl7.org/fhir/ValueSet/request-priority", "http://hl7.org/fhir/request-priority")]
public enum Hl7.Fhir.Model.RequestPriority : Enum {
    public int value__;
    [EnumLiteralAttribute("routine", "")]
[DescriptionAttribute("Routine")]
public static RequestPriority Routine;
    [EnumLiteralAttribute("urgent", "")]
[DescriptionAttribute("Urgent")]
public static RequestPriority Urgent;
    [EnumLiteralAttribute("asap", "")]
[DescriptionAttribute("ASAP")]
public static RequestPriority Asap;
    [EnumLiteralAttribute("stat", "")]
[DescriptionAttribute("STAT")]
public static RequestPriority Stat;
}
[FhirEnumerationAttribute("RequestStatus", "http://hl7.org/fhir/ValueSet/request-status", "http://hl7.org/fhir/request-status")]
public enum Hl7.Fhir.Model.RequestStatus : Enum {
    public int value__;
    [EnumLiteralAttribute("draft", "")]
[DescriptionAttribute("Draft")]
public static RequestStatus Draft;
    [EnumLiteralAttribute("active", "")]
[DescriptionAttribute("Active")]
public static RequestStatus Active;
    [EnumLiteralAttribute("on-hold", "")]
[DescriptionAttribute("On Hold")]
public static RequestStatus OnHold;
    [EnumLiteralAttribute("revoked", "")]
[DescriptionAttribute("Revoked")]
public static RequestStatus Revoked;
    [EnumLiteralAttribute("completed", "")]
[DescriptionAttribute("Completed")]
public static RequestStatus Completed;
    [EnumLiteralAttribute("entered-in-error", "")]
[DescriptionAttribute("Entered in Error")]
public static RequestStatus EnteredInError;
    [EnumLiteralAttribute("unknown", "")]
[DescriptionAttribute("Unknown")]
public static RequestStatus Unknown;
}
[DataContractAttribute]
[FhirTypeAttribute("ResearchDefinition", "http://hl7.org/fhir/StructureDefinition/ResearchDefinition")]
public class Hl7.Fhir.Model.ResearchDefinition : DomainResource {
    private FhirUri _UrlElement;
    private List`1<Identifier> _Identifier;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private FhirString _TitleElement;
    private FhirString _ShortTitleElement;
    private FhirString _SubtitleElement;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirBoolean _ExperimentalElement;
    private DataType _Subject;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<FhirString> _CommentElement;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _PurposeElement;
    private FhirString _UsageElement;
    private Markdown _CopyrightElement;
    private Date _ApprovalDateElement;
    private Date _LastReviewDateElement;
    private Period _EffectivePeriod;
    private List`1<CodeableConcept> _Topic;
    private List`1<ContactDetail> _Author;
    private List`1<ContactDetail> _Editor;
    private List`1<ContactDetail> _Reviewer;
    private List`1<ContactDetail> _Endorser;
    private List`1<RelatedArtifact> _RelatedArtifact;
    private List`1<Canonical> _LibraryElement;
    private ResourceReference _Population;
    private ResourceReference _Exposure;
    private ResourceReference _ExposureAlternative;
    private ResourceReference _Outcome;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("shortTitle")]
[DataMemberAttribute]
public FhirString ShortTitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ShortTitle { get; public set; }
    [FhirElementAttribute("subtitle")]
[DataMemberAttribute]
public FhirString SubtitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Subtitle { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("experimental")]
[DataMemberAttribute]
public FhirBoolean ExperimentalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Experimental { get; public set; }
    [FhirElementAttribute]
[BindingAttribute("SubjectType")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Subject { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("comment")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> CommentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Comment { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("purpose")]
[DataMemberAttribute]
public Markdown PurposeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Purpose { get; public set; }
    [FhirElementAttribute("usage")]
[DataMemberAttribute]
public FhirString UsageElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Usage { get; public set; }
    [FhirElementAttribute("copyright")]
[DataMemberAttribute]
public Markdown CopyrightElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Copyright { get; public set; }
    [FhirElementAttribute("approvalDate")]
[DataMemberAttribute]
public Date ApprovalDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ApprovalDate { get; public set; }
    [FhirElementAttribute("lastReviewDate")]
[DataMemberAttribute]
public Date LastReviewDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string LastReviewDate { get; public set; }
    [FhirElementAttribute("effectivePeriod")]
[DataMemberAttribute]
public Period EffectivePeriod { get; public set; }
    [FhirElementAttribute("topic")]
[BindingAttribute("DefinitionTopic")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Topic { get; public set; }
    [FhirElementAttribute("author")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Author { get; public set; }
    [FhirElementAttribute("editor")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Editor { get; public set; }
    [FhirElementAttribute("reviewer")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Reviewer { get; public set; }
    [FhirElementAttribute("endorser")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Endorser { get; public set; }
    [FhirElementAttribute("relatedArtifact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RelatedArtifact> RelatedArtifact { get; public set; }
    [FhirElementAttribute("library")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> LibraryElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Library { get; public set; }
    [FhirElementAttribute("population")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Population { get; public set; }
    [FhirElementAttribute("exposure")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Exposure { get; public set; }
    [FhirElementAttribute("exposureAlternative")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference ExposureAlternative { get; public set; }
    [FhirElementAttribute("outcome")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Outcome { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public FhirUri get_UrlElement();
    public void set_UrlElement(FhirUri value);
    public string get_Url();
    public void set_Url(string value);
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirString get_VersionElement();
    public void set_VersionElement(FhirString value);
    public string get_Version();
    public void set_Version(string value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public FhirString get_ShortTitleElement();
    public void set_ShortTitleElement(FhirString value);
    public string get_ShortTitle();
    public void set_ShortTitle(string value);
    public FhirString get_SubtitleElement();
    public void set_SubtitleElement(FhirString value);
    public string get_Subtitle();
    public void set_Subtitle(string value);
    public Code`1<PublicationStatus> get_StatusElement();
    public void set_StatusElement(Code`1<PublicationStatus> value);
    public Nullable`1<PublicationStatus> get_Status();
    public void set_Status(Nullable`1<PublicationStatus> value);
    public FhirBoolean get_ExperimentalElement();
    public void set_ExperimentalElement(FhirBoolean value);
    public Nullable`1<bool> get_Experimental();
    public void set_Experimental(Nullable`1<bool> value);
    public DataType get_Subject();
    public void set_Subject(DataType value);
    public FhirDateTime get_DateElement();
    public void set_DateElement(FhirDateTime value);
    public string get_Date();
    public void set_Date(string value);
    public FhirString get_PublisherElement();
    public void set_PublisherElement(FhirString value);
    public string get_Publisher();
    public void set_Publisher(string value);
    public List`1<ContactDetail> get_Contact();
    public void set_Contact(List`1<ContactDetail> value);
    public Markdown get_DescriptionElement();
    public void set_DescriptionElement(Markdown value);
    public string get_Description();
    public void set_Description(string value);
    public List`1<FhirString> get_CommentElement();
    public void set_CommentElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_Comment();
    public void set_Comment(IEnumerable`1<string> value);
    public List`1<UsageContext> get_UseContext();
    public void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public Markdown get_PurposeElement();
    public void set_PurposeElement(Markdown value);
    public string get_Purpose();
    public void set_Purpose(string value);
    public FhirString get_UsageElement();
    public void set_UsageElement(FhirString value);
    public string get_Usage();
    public void set_Usage(string value);
    public Markdown get_CopyrightElement();
    public void set_CopyrightElement(Markdown value);
    public string get_Copyright();
    public void set_Copyright(string value);
    public Date get_ApprovalDateElement();
    public void set_ApprovalDateElement(Date value);
    public string get_ApprovalDate();
    public void set_ApprovalDate(string value);
    public Date get_LastReviewDateElement();
    public void set_LastReviewDateElement(Date value);
    public string get_LastReviewDate();
    public void set_LastReviewDate(string value);
    public Period get_EffectivePeriod();
    public void set_EffectivePeriod(Period value);
    public List`1<CodeableConcept> get_Topic();
    public void set_Topic(List`1<CodeableConcept> value);
    public List`1<ContactDetail> get_Author();
    public void set_Author(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Editor();
    public void set_Editor(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Reviewer();
    public void set_Reviewer(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Endorser();
    public void set_Endorser(List`1<ContactDetail> value);
    public List`1<RelatedArtifact> get_RelatedArtifact();
    public void set_RelatedArtifact(List`1<RelatedArtifact> value);
    public List`1<Canonical> get_LibraryElement();
    public void set_LibraryElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_Library();
    public void set_Library(IEnumerable`1<string> value);
    public ResourceReference get_Population();
    public void set_Population(ResourceReference value);
    public ResourceReference get_Exposure();
    public void set_Exposure(ResourceReference value);
    public ResourceReference get_ExposureAlternative();
    public void set_ExposureAlternative(ResourceReference value);
    public ResourceReference get_Outcome();
    public void set_Outcome(ResourceReference value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ResearchDefinition/<get_Children>d__200")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ResearchDefinition/<get_NamedChildren>d__202")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ResearchDefinition/<GetElementPairs>d__204")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("ResearchElementDefinition", "http://hl7.org/fhir/StructureDefinition/ResearchElementDefinition")]
public class Hl7.Fhir.Model.ResearchElementDefinition : DomainResource {
    private FhirUri _UrlElement;
    private List`1<Identifier> _Identifier;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private FhirString _TitleElement;
    private FhirString _ShortTitleElement;
    private FhirString _SubtitleElement;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirBoolean _ExperimentalElement;
    private DataType _Subject;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<FhirString> _CommentElement;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _PurposeElement;
    private FhirString _UsageElement;
    private Markdown _CopyrightElement;
    private Date _ApprovalDateElement;
    private Date _LastReviewDateElement;
    private Period _EffectivePeriod;
    private List`1<CodeableConcept> _Topic;
    private List`1<ContactDetail> _Author;
    private List`1<ContactDetail> _Editor;
    private List`1<ContactDetail> _Reviewer;
    private List`1<ContactDetail> _Endorser;
    private List`1<RelatedArtifact> _RelatedArtifact;
    private List`1<Canonical> _LibraryElement;
    private Code`1<ResearchElementType> _TypeElement;
    private Code`1<VariableTypeCode> _VariableTypeElement;
    private List`1<CharacteristicComponent> _Characteristic;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("shortTitle")]
[DataMemberAttribute]
public FhirString ShortTitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ShortTitle { get; public set; }
    [FhirElementAttribute("subtitle")]
[DataMemberAttribute]
public FhirString SubtitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Subtitle { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("experimental")]
[DataMemberAttribute]
public FhirBoolean ExperimentalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Experimental { get; public set; }
    [FhirElementAttribute]
[BindingAttribute("SubjectType")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Subject { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("comment")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> CommentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Comment { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("purpose")]
[DataMemberAttribute]
public Markdown PurposeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Purpose { get; public set; }
    [FhirElementAttribute("usage")]
[DataMemberAttribute]
public FhirString UsageElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Usage { get; public set; }
    [FhirElementAttribute("copyright")]
[DataMemberAttribute]
public Markdown CopyrightElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Copyright { get; public set; }
    [FhirElementAttribute("approvalDate")]
[DataMemberAttribute]
public Date ApprovalDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ApprovalDate { get; public set; }
    [FhirElementAttribute("lastReviewDate")]
[DataMemberAttribute]
public Date LastReviewDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string LastReviewDate { get; public set; }
    [FhirElementAttribute("effectivePeriod")]
[DataMemberAttribute]
public Period EffectivePeriod { get; public set; }
    [FhirElementAttribute("topic")]
[BindingAttribute("DefinitionTopic")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Topic { get; public set; }
    [FhirElementAttribute("author")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Author { get; public set; }
    [FhirElementAttribute("editor")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Editor { get; public set; }
    [FhirElementAttribute("reviewer")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Reviewer { get; public set; }
    [FhirElementAttribute("endorser")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Endorser { get; public set; }
    [FhirElementAttribute("relatedArtifact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RelatedArtifact> RelatedArtifact { get; public set; }
    [FhirElementAttribute("library")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> LibraryElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Library { get; public set; }
    [FhirElementAttribute("type")]
[DeclaredTypeAttribute]
[BindingAttribute("ResearchElementType")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ResearchElementType> TypeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ResearchElementType> Type { get; public set; }
    [FhirElementAttribute("variableType")]
[DeclaredTypeAttribute]
[BindingAttribute("VariableType")]
[DataMemberAttribute]
public Code`1<VariableTypeCode> VariableTypeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<VariableTypeCode> VariableType { get; public set; }
    [FhirElementAttribute("characteristic")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CharacteristicComponent> Characteristic { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public FhirUri get_UrlElement();
    public void set_UrlElement(FhirUri value);
    public string get_Url();
    public void set_Url(string value);
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirString get_VersionElement();
    public void set_VersionElement(FhirString value);
    public string get_Version();
    public void set_Version(string value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public FhirString get_ShortTitleElement();
    public void set_ShortTitleElement(FhirString value);
    public string get_ShortTitle();
    public void set_ShortTitle(string value);
    public FhirString get_SubtitleElement();
    public void set_SubtitleElement(FhirString value);
    public string get_Subtitle();
    public void set_Subtitle(string value);
    public Code`1<PublicationStatus> get_StatusElement();
    public void set_StatusElement(Code`1<PublicationStatus> value);
    public Nullable`1<PublicationStatus> get_Status();
    public void set_Status(Nullable`1<PublicationStatus> value);
    public FhirBoolean get_ExperimentalElement();
    public void set_ExperimentalElement(FhirBoolean value);
    public Nullable`1<bool> get_Experimental();
    public void set_Experimental(Nullable`1<bool> value);
    public DataType get_Subject();
    public void set_Subject(DataType value);
    public FhirDateTime get_DateElement();
    public void set_DateElement(FhirDateTime value);
    public string get_Date();
    public void set_Date(string value);
    public FhirString get_PublisherElement();
    public void set_PublisherElement(FhirString value);
    public string get_Publisher();
    public void set_Publisher(string value);
    public List`1<ContactDetail> get_Contact();
    public void set_Contact(List`1<ContactDetail> value);
    public Markdown get_DescriptionElement();
    public void set_DescriptionElement(Markdown value);
    public string get_Description();
    public void set_Description(string value);
    public List`1<FhirString> get_CommentElement();
    public void set_CommentElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_Comment();
    public void set_Comment(IEnumerable`1<string> value);
    public List`1<UsageContext> get_UseContext();
    public void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public Markdown get_PurposeElement();
    public void set_PurposeElement(Markdown value);
    public string get_Purpose();
    public void set_Purpose(string value);
    public FhirString get_UsageElement();
    public void set_UsageElement(FhirString value);
    public string get_Usage();
    public void set_Usage(string value);
    public Markdown get_CopyrightElement();
    public void set_CopyrightElement(Markdown value);
    public string get_Copyright();
    public void set_Copyright(string value);
    public Date get_ApprovalDateElement();
    public void set_ApprovalDateElement(Date value);
    public string get_ApprovalDate();
    public void set_ApprovalDate(string value);
    public Date get_LastReviewDateElement();
    public void set_LastReviewDateElement(Date value);
    public string get_LastReviewDate();
    public void set_LastReviewDate(string value);
    public Period get_EffectivePeriod();
    public void set_EffectivePeriod(Period value);
    public List`1<CodeableConcept> get_Topic();
    public void set_Topic(List`1<CodeableConcept> value);
    public List`1<ContactDetail> get_Author();
    public void set_Author(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Editor();
    public void set_Editor(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Reviewer();
    public void set_Reviewer(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Endorser();
    public void set_Endorser(List`1<ContactDetail> value);
    public List`1<RelatedArtifact> get_RelatedArtifact();
    public void set_RelatedArtifact(List`1<RelatedArtifact> value);
    public List`1<Canonical> get_LibraryElement();
    public void set_LibraryElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_Library();
    public void set_Library(IEnumerable`1<string> value);
    public Code`1<ResearchElementType> get_TypeElement();
    public void set_TypeElement(Code`1<ResearchElementType> value);
    public Nullable`1<ResearchElementType> get_Type();
    public void set_Type(Nullable`1<ResearchElementType> value);
    public Code`1<VariableTypeCode> get_VariableTypeElement();
    public void set_VariableTypeElement(Code`1<VariableTypeCode> value);
    public Nullable`1<VariableTypeCode> get_VariableType();
    public void set_VariableType(Nullable`1<VariableTypeCode> value);
    public List`1<CharacteristicComponent> get_Characteristic();
    public void set_Characteristic(List`1<CharacteristicComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ResearchElementDefinition/<get_Children>d__204")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ResearchElementDefinition/<get_NamedChildren>d__206")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ResearchElementDefinition/<GetElementPairs>d__208")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("ResearchStudy", "http://hl7.org/fhir/StructureDefinition/ResearchStudy")]
public class Hl7.Fhir.Model.ResearchStudy : DomainResource {
    private List`1<Identifier> _Identifier;
    private FhirString _TitleElement;
    private List`1<ResourceReference> _Protocol;
    private List`1<ResourceReference> _PartOf;
    private Code`1<ResearchStudyStatus> _StatusElement;
    private CodeableConcept _PrimaryPurposeType;
    private CodeableConcept _Phase;
    private List`1<CodeableConcept> _Category;
    private List`1<CodeableConcept> _Focus;
    private List`1<CodeableConcept> _Condition;
    private List`1<ContactDetail> _Contact;
    private List`1<RelatedArtifact> _RelatedArtifact;
    private List`1<CodeableConcept> _Keyword;
    private List`1<CodeableConcept> _Location;
    private Markdown _DescriptionElement;
    private List`1<ResourceReference> _Enrollment;
    private Period _Period;
    private ResourceReference _Sponsor;
    private ResourceReference _PrincipalInvestigator;
    private List`1<ResourceReference> _Site;
    private CodeableConcept _ReasonStopped;
    private List`1<Annotation> _Note;
    private List`1<ArmComponent> _Arm;
    private List`1<ObjectiveComponent> _Objective;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("protocol")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Protocol { get; public set; }
    [FhirElementAttribute("partOf")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> PartOf { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("ResearchStudyStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ResearchStudyStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ResearchStudyStatus> Status { get; public set; }
    [FhirElementAttribute("primaryPurposeType")]
[BindingAttribute("ResearchStudyPrimaryPurposeType")]
[DataMemberAttribute]
public CodeableConcept PrimaryPurposeType { get; public set; }
    [FhirElementAttribute("phase")]
[BindingAttribute("ResearchStudyPhase")]
[DataMemberAttribute]
public CodeableConcept Phase { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("ResearchStudyCategory")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Category { get; public set; }
    [FhirElementAttribute("focus")]
[BindingAttribute("ResearchStudyFocus")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Focus { get; public set; }
    [FhirElementAttribute("condition")]
[BindingAttribute("ConditionCode")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Condition { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("relatedArtifact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RelatedArtifact> RelatedArtifact { get; public set; }
    [FhirElementAttribute("keyword")]
[BindingAttribute("ResearchStudyKeyword")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Keyword { get; public set; }
    [FhirElementAttribute("location")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Location { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("enrollment")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Enrollment { get; public set; }
    [FhirElementAttribute("period")]
[DataMemberAttribute]
public Period Period { get; public set; }
    [FhirElementAttribute("sponsor")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Sponsor { get; public set; }
    [FhirElementAttribute("principalInvestigator")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference PrincipalInvestigator { get; public set; }
    [FhirElementAttribute("site")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Site { get; public set; }
    [FhirElementAttribute("reasonStopped")]
[BindingAttribute("ResearchStudyReasonStopped")]
[DataMemberAttribute]
public CodeableConcept ReasonStopped { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("arm")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ArmComponent> Arm { get; public set; }
    [FhirElementAttribute("objective")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ObjectiveComponent> Objective { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public List`1<ResourceReference> get_Protocol();
    public void set_Protocol(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_PartOf();
    public void set_PartOf(List`1<ResourceReference> value);
    public Code`1<ResearchStudyStatus> get_StatusElement();
    public void set_StatusElement(Code`1<ResearchStudyStatus> value);
    public Nullable`1<ResearchStudyStatus> get_Status();
    public void set_Status(Nullable`1<ResearchStudyStatus> value);
    public CodeableConcept get_PrimaryPurposeType();
    public void set_PrimaryPurposeType(CodeableConcept value);
    public CodeableConcept get_Phase();
    public void set_Phase(CodeableConcept value);
    public List`1<CodeableConcept> get_Category();
    public void set_Category(List`1<CodeableConcept> value);
    public List`1<CodeableConcept> get_Focus();
    public void set_Focus(List`1<CodeableConcept> value);
    public List`1<CodeableConcept> get_Condition();
    public void set_Condition(List`1<CodeableConcept> value);
    public List`1<ContactDetail> get_Contact();
    public void set_Contact(List`1<ContactDetail> value);
    public List`1<RelatedArtifact> get_RelatedArtifact();
    public void set_RelatedArtifact(List`1<RelatedArtifact> value);
    public List`1<CodeableConcept> get_Keyword();
    public void set_Keyword(List`1<CodeableConcept> value);
    public List`1<CodeableConcept> get_Location();
    public void set_Location(List`1<CodeableConcept> value);
    public Markdown get_DescriptionElement();
    public void set_DescriptionElement(Markdown value);
    public string get_Description();
    public void set_Description(string value);
    public List`1<ResourceReference> get_Enrollment();
    public void set_Enrollment(List`1<ResourceReference> value);
    public Period get_Period();
    public void set_Period(Period value);
    public ResourceReference get_Sponsor();
    public void set_Sponsor(ResourceReference value);
    public ResourceReference get_PrincipalInvestigator();
    public void set_PrincipalInvestigator(ResourceReference value);
    public List`1<ResourceReference> get_Site();
    public void set_Site(List`1<ResourceReference> value);
    public CodeableConcept get_ReasonStopped();
    public void set_ReasonStopped(CodeableConcept value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public List`1<ArmComponent> get_Arm();
    public void set_Arm(List`1<ArmComponent> value);
    public List`1<ObjectiveComponent> get_Objective();
    public void set_Objective(List`1<ObjectiveComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ResearchStudy/<get_Children>d__118")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ResearchStudy/<get_NamedChildren>d__120")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ResearchStudy/<GetElementPairs>d__122")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("ResearchSubject", "http://hl7.org/fhir/StructureDefinition/ResearchSubject")]
public class Hl7.Fhir.Model.ResearchSubject : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<ResearchSubjectStatus> _StatusElement;
    private Period _Period;
    private ResourceReference _Study;
    private ResourceReference _Individual;
    private FhirString _AssignedArmElement;
    private FhirString _ActualArmElement;
    private ResourceReference _Consent;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("ResearchSubjectStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ResearchSubjectStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ResearchSubjectStatus> Status { get; public set; }
    [FhirElementAttribute("period")]
[DataMemberAttribute]
public Period Period { get; public set; }
    [FhirElementAttribute("study")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Study { get; public set; }
    [FhirElementAttribute("individual")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Individual { get; public set; }
    [FhirElementAttribute("assignedArm")]
[DataMemberAttribute]
public FhirString AssignedArmElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string AssignedArm { get; public set; }
    [FhirElementAttribute("actualArm")]
[DataMemberAttribute]
public FhirString ActualArmElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ActualArm { get; public set; }
    [FhirElementAttribute("consent")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Consent { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<ResearchSubjectStatus> get_StatusElement();
    public void set_StatusElement(Code`1<ResearchSubjectStatus> value);
    public Nullable`1<ResearchSubjectStatus> get_Status();
    public void set_Status(Nullable`1<ResearchSubjectStatus> value);
    public Period get_Period();
    public void set_Period(Period value);
    public ResourceReference get_Study();
    public void set_Study(ResourceReference value);
    public ResourceReference get_Individual();
    public void set_Individual(ResourceReference value);
    public FhirString get_AssignedArmElement();
    public void set_AssignedArmElement(FhirString value);
    public string get_AssignedArm();
    public void set_AssignedArm(string value);
    public FhirString get_ActualArmElement();
    public void set_ActualArmElement(FhirString value);
    public string get_ActualArm();
    public void set_ActualArm(string value);
    public ResourceReference get_Consent();
    public void set_Consent(ResourceReference value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ResearchSubject/<get_Children>d__52")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ResearchSubject/<get_NamedChildren>d__54")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ResearchSubject/<GetElementPairs>d__56")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirEnumerationAttribute("ResourceType", "http://hl7.org/fhir/ValueSet/resource-types", "http://hl7.org/fhir/resource-types")]
public enum Hl7.Fhir.Model.ResourceType : Enum {
    public int value__;
    [EnumLiteralAttribute("Account", "")]
[DescriptionAttribute("Account")]
public static ResourceType Account;
    [EnumLiteralAttribute("ActivityDefinition", "")]
[DescriptionAttribute("ActivityDefinition")]
public static ResourceType ActivityDefinition;
    [EnumLiteralAttribute("AdverseEvent", "")]
[DescriptionAttribute("AdverseEvent")]
public static ResourceType AdverseEvent;
    [EnumLiteralAttribute("AllergyIntolerance", "")]
[DescriptionAttribute("AllergyIntolerance")]
public static ResourceType AllergyIntolerance;
    [EnumLiteralAttribute("Appointment", "")]
[DescriptionAttribute("Appointment")]
public static ResourceType Appointment;
    [EnumLiteralAttribute("AppointmentResponse", "")]
[DescriptionAttribute("AppointmentResponse")]
public static ResourceType AppointmentResponse;
    [EnumLiteralAttribute("AuditEvent", "")]
[DescriptionAttribute("AuditEvent")]
public static ResourceType AuditEvent;
    [EnumLiteralAttribute("Basic", "")]
[DescriptionAttribute("Basic")]
public static ResourceType Basic;
    [EnumLiteralAttribute("Binary", "")]
[DescriptionAttribute("Binary")]
public static ResourceType Binary;
    [EnumLiteralAttribute("BiologicallyDerivedProduct", "")]
[DescriptionAttribute("BiologicallyDerivedProduct")]
public static ResourceType BiologicallyDerivedProduct;
    [EnumLiteralAttribute("BodyStructure", "")]
[DescriptionAttribute("BodyStructure")]
public static ResourceType BodyStructure;
    [EnumLiteralAttribute("Bundle", "")]
[DescriptionAttribute("Bundle")]
public static ResourceType Bundle;
    [EnumLiteralAttribute("CapabilityStatement", "")]
[DescriptionAttribute("CapabilityStatement")]
public static ResourceType CapabilityStatement;
    [EnumLiteralAttribute("CarePlan", "")]
[DescriptionAttribute("CarePlan")]
public static ResourceType CarePlan;
    [EnumLiteralAttribute("CareTeam", "")]
[DescriptionAttribute("CareTeam")]
public static ResourceType CareTeam;
    [EnumLiteralAttribute("CatalogEntry", "")]
[DescriptionAttribute("CatalogEntry")]
public static ResourceType CatalogEntry;
    [EnumLiteralAttribute("ChargeItem", "")]
[DescriptionAttribute("ChargeItem")]
public static ResourceType ChargeItem;
    [EnumLiteralAttribute("ChargeItemDefinition", "")]
[DescriptionAttribute("ChargeItemDefinition")]
public static ResourceType ChargeItemDefinition;
    [EnumLiteralAttribute("Claim", "")]
[DescriptionAttribute("Claim")]
public static ResourceType Claim;
    [EnumLiteralAttribute("ClaimResponse", "")]
[DescriptionAttribute("ClaimResponse")]
public static ResourceType ClaimResponse;
    [EnumLiteralAttribute("ClinicalImpression", "")]
[DescriptionAttribute("ClinicalImpression")]
public static ResourceType ClinicalImpression;
    [EnumLiteralAttribute("CodeSystem", "")]
[DescriptionAttribute("CodeSystem")]
public static ResourceType CodeSystem;
    [EnumLiteralAttribute("Communication", "")]
[DescriptionAttribute("Communication")]
public static ResourceType Communication;
    [EnumLiteralAttribute("CommunicationRequest", "")]
[DescriptionAttribute("CommunicationRequest")]
public static ResourceType CommunicationRequest;
    [EnumLiteralAttribute("CompartmentDefinition", "")]
[DescriptionAttribute("CompartmentDefinition")]
public static ResourceType CompartmentDefinition;
    [EnumLiteralAttribute("Composition", "")]
[DescriptionAttribute("Composition")]
public static ResourceType Composition;
    [EnumLiteralAttribute("ConceptMap", "")]
[DescriptionAttribute("ConceptMap")]
public static ResourceType ConceptMap;
    [EnumLiteralAttribute("Condition", "")]
[DescriptionAttribute("Condition")]
public static ResourceType Condition;
    [EnumLiteralAttribute("Consent", "")]
[DescriptionAttribute("Consent")]
public static ResourceType Consent;
    [EnumLiteralAttribute("Contract", "")]
[DescriptionAttribute("Contract")]
public static ResourceType Contract;
    [EnumLiteralAttribute("Coverage", "")]
[DescriptionAttribute("Coverage")]
public static ResourceType Coverage;
    [EnumLiteralAttribute("CoverageEligibilityRequest", "")]
[DescriptionAttribute("CoverageEligibilityRequest")]
public static ResourceType CoverageEligibilityRequest;
    [EnumLiteralAttribute("CoverageEligibilityResponse", "")]
[DescriptionAttribute("CoverageEligibilityResponse")]
public static ResourceType CoverageEligibilityResponse;
    [EnumLiteralAttribute("DetectedIssue", "")]
[DescriptionAttribute("DetectedIssue")]
public static ResourceType DetectedIssue;
    [EnumLiteralAttribute("Device", "")]
[DescriptionAttribute("Device")]
public static ResourceType Device;
    [EnumLiteralAttribute("DeviceDefinition", "")]
[DescriptionAttribute("DeviceDefinition")]
public static ResourceType DeviceDefinition;
    [EnumLiteralAttribute("DeviceMetric", "")]
[DescriptionAttribute("DeviceMetric")]
public static ResourceType DeviceMetric;
    [EnumLiteralAttribute("DeviceRequest", "")]
[DescriptionAttribute("DeviceRequest")]
public static ResourceType DeviceRequest;
    [EnumLiteralAttribute("DeviceUseStatement", "")]
[DescriptionAttribute("DeviceUseStatement")]
public static ResourceType DeviceUseStatement;
    [EnumLiteralAttribute("DiagnosticReport", "")]
[DescriptionAttribute("DiagnosticReport")]
public static ResourceType DiagnosticReport;
    [EnumLiteralAttribute("DocumentManifest", "")]
[DescriptionAttribute("DocumentManifest")]
public static ResourceType DocumentManifest;
    [EnumLiteralAttribute("DocumentReference", "")]
[DescriptionAttribute("DocumentReference")]
public static ResourceType DocumentReference;
    [EnumLiteralAttribute("DomainResource", "")]
[DescriptionAttribute("DomainResource")]
public static ResourceType DomainResource;
    [EnumLiteralAttribute("EffectEvidenceSynthesis", "")]
[DescriptionAttribute("EffectEvidenceSynthesis")]
public static ResourceType EffectEvidenceSynthesis;
    [EnumLiteralAttribute("Encounter", "")]
[DescriptionAttribute("Encounter")]
public static ResourceType Encounter;
    [EnumLiteralAttribute("Endpoint", "")]
[DescriptionAttribute("Endpoint")]
public static ResourceType Endpoint;
    [EnumLiteralAttribute("EnrollmentRequest", "")]
[DescriptionAttribute("EnrollmentRequest")]
public static ResourceType EnrollmentRequest;
    [EnumLiteralAttribute("EnrollmentResponse", "")]
[DescriptionAttribute("EnrollmentResponse")]
public static ResourceType EnrollmentResponse;
    [EnumLiteralAttribute("EpisodeOfCare", "")]
[DescriptionAttribute("EpisodeOfCare")]
public static ResourceType EpisodeOfCare;
    [EnumLiteralAttribute("EventDefinition", "")]
[DescriptionAttribute("EventDefinition")]
public static ResourceType EventDefinition;
    [EnumLiteralAttribute("Evidence", "")]
[DescriptionAttribute("Evidence")]
public static ResourceType Evidence;
    [EnumLiteralAttribute("EvidenceVariable", "")]
[DescriptionAttribute("EvidenceVariable")]
public static ResourceType EvidenceVariable;
    [EnumLiteralAttribute("ExampleScenario", "")]
[DescriptionAttribute("ExampleScenario")]
public static ResourceType ExampleScenario;
    [EnumLiteralAttribute("ExplanationOfBenefit", "")]
[DescriptionAttribute("ExplanationOfBenefit")]
public static ResourceType ExplanationOfBenefit;
    [EnumLiteralAttribute("FamilyMemberHistory", "")]
[DescriptionAttribute("FamilyMemberHistory")]
public static ResourceType FamilyMemberHistory;
    [EnumLiteralAttribute("Flag", "")]
[DescriptionAttribute("Flag")]
public static ResourceType Flag;
    [EnumLiteralAttribute("Goal", "")]
[DescriptionAttribute("Goal")]
public static ResourceType Goal;
    [EnumLiteralAttribute("GraphDefinition", "")]
[DescriptionAttribute("GraphDefinition")]
public static ResourceType GraphDefinition;
    [EnumLiteralAttribute("Group", "")]
[DescriptionAttribute("Group")]
public static ResourceType Group;
    [EnumLiteralAttribute("GuidanceResponse", "")]
[DescriptionAttribute("GuidanceResponse")]
public static ResourceType GuidanceResponse;
    [EnumLiteralAttribute("HealthcareService", "")]
[DescriptionAttribute("HealthcareService")]
public static ResourceType HealthcareService;
    [EnumLiteralAttribute("ImagingStudy", "")]
[DescriptionAttribute("ImagingStudy")]
public static ResourceType ImagingStudy;
    [EnumLiteralAttribute("Immunization", "")]
[DescriptionAttribute("Immunization")]
public static ResourceType Immunization;
    [EnumLiteralAttribute("ImmunizationEvaluation", "")]
[DescriptionAttribute("ImmunizationEvaluation")]
public static ResourceType ImmunizationEvaluation;
    [EnumLiteralAttribute("ImmunizationRecommendation", "")]
[DescriptionAttribute("ImmunizationRecommendation")]
public static ResourceType ImmunizationRecommendation;
    [EnumLiteralAttribute("ImplementationGuide", "")]
[DescriptionAttribute("ImplementationGuide")]
public static ResourceType ImplementationGuide;
    [EnumLiteralAttribute("InsurancePlan", "")]
[DescriptionAttribute("InsurancePlan")]
public static ResourceType InsurancePlan;
    [EnumLiteralAttribute("Invoice", "")]
[DescriptionAttribute("Invoice")]
public static ResourceType Invoice;
    [EnumLiteralAttribute("Library", "")]
[DescriptionAttribute("Library")]
public static ResourceType Library;
    [EnumLiteralAttribute("Linkage", "")]
[DescriptionAttribute("Linkage")]
public static ResourceType Linkage;
    [EnumLiteralAttribute("List", "")]
[DescriptionAttribute("List")]
public static ResourceType List;
    [EnumLiteralAttribute("Location", "")]
[DescriptionAttribute("Location")]
public static ResourceType Location;
    [EnumLiteralAttribute("Measure", "")]
[DescriptionAttribute("Measure")]
public static ResourceType Measure;
    [EnumLiteralAttribute("MeasureReport", "")]
[DescriptionAttribute("MeasureReport")]
public static ResourceType MeasureReport;
    [EnumLiteralAttribute("Media", "")]
[DescriptionAttribute("Media")]
public static ResourceType Media;
    [EnumLiteralAttribute("Medication", "")]
[DescriptionAttribute("Medication")]
public static ResourceType Medication;
    [EnumLiteralAttribute("MedicationAdministration", "")]
[DescriptionAttribute("MedicationAdministration")]
public static ResourceType MedicationAdministration;
    [EnumLiteralAttribute("MedicationDispense", "")]
[DescriptionAttribute("MedicationDispense")]
public static ResourceType MedicationDispense;
    [EnumLiteralAttribute("MedicationKnowledge", "")]
[DescriptionAttribute("MedicationKnowledge")]
public static ResourceType MedicationKnowledge;
    [EnumLiteralAttribute("MedicationRequest", "")]
[DescriptionAttribute("MedicationRequest")]
public static ResourceType MedicationRequest;
    [EnumLiteralAttribute("MedicationStatement", "")]
[DescriptionAttribute("MedicationStatement")]
public static ResourceType MedicationStatement;
    [EnumLiteralAttribute("MedicinalProduct", "")]
[DescriptionAttribute("MedicinalProduct")]
public static ResourceType MedicinalProduct;
    [EnumLiteralAttribute("MedicinalProductAuthorization", "")]
[DescriptionAttribute("MedicinalProductAuthorization")]
public static ResourceType MedicinalProductAuthorization;
    [EnumLiteralAttribute("MedicinalProductContraindication", "")]
[DescriptionAttribute("MedicinalProductContraindication")]
public static ResourceType MedicinalProductContraindication;
    [EnumLiteralAttribute("MedicinalProductIndication", "")]
[DescriptionAttribute("MedicinalProductIndication")]
public static ResourceType MedicinalProductIndication;
    [EnumLiteralAttribute("MedicinalProductIngredient", "")]
[DescriptionAttribute("MedicinalProductIngredient")]
public static ResourceType MedicinalProductIngredient;
    [EnumLiteralAttribute("MedicinalProductInteraction", "")]
[DescriptionAttribute("MedicinalProductInteraction")]
public static ResourceType MedicinalProductInteraction;
    [EnumLiteralAttribute("MedicinalProductManufactured", "")]
[DescriptionAttribute("MedicinalProductManufactured")]
public static ResourceType MedicinalProductManufactured;
    [EnumLiteralAttribute("MedicinalProductPackaged", "")]
[DescriptionAttribute("MedicinalProductPackaged")]
public static ResourceType MedicinalProductPackaged;
    [EnumLiteralAttribute("MedicinalProductPharmaceutical", "")]
[DescriptionAttribute("MedicinalProductPharmaceutical")]
public static ResourceType MedicinalProductPharmaceutical;
    [EnumLiteralAttribute("MedicinalProductUndesirableEffect", "")]
[DescriptionAttribute("MedicinalProductUndesirableEffect")]
public static ResourceType MedicinalProductUndesirableEffect;
    [EnumLiteralAttribute("MessageDefinition", "")]
[DescriptionAttribute("MessageDefinition")]
public static ResourceType MessageDefinition;
    [EnumLiteralAttribute("MessageHeader", "")]
[DescriptionAttribute("MessageHeader")]
public static ResourceType MessageHeader;
    [EnumLiteralAttribute("MolecularSequence", "")]
[DescriptionAttribute("MolecularSequence")]
public static ResourceType MolecularSequence;
    [EnumLiteralAttribute("NamingSystem", "")]
[DescriptionAttribute("NamingSystem")]
public static ResourceType NamingSystem;
    [EnumLiteralAttribute("NutritionOrder", "")]
[DescriptionAttribute("NutritionOrder")]
public static ResourceType NutritionOrder;
    [EnumLiteralAttribute("Observation", "")]
[DescriptionAttribute("Observation")]
public static ResourceType Observation;
    [EnumLiteralAttribute("ObservationDefinition", "")]
[DescriptionAttribute("ObservationDefinition")]
public static ResourceType ObservationDefinition;
    [EnumLiteralAttribute("OperationDefinition", "")]
[DescriptionAttribute("OperationDefinition")]
public static ResourceType OperationDefinition;
    [EnumLiteralAttribute("OperationOutcome", "")]
[DescriptionAttribute("OperationOutcome")]
public static ResourceType OperationOutcome;
    [EnumLiteralAttribute("Organization", "")]
[DescriptionAttribute("Organization")]
public static ResourceType Organization;
    [EnumLiteralAttribute("OrganizationAffiliation", "")]
[DescriptionAttribute("OrganizationAffiliation")]
public static ResourceType OrganizationAffiliation;
    [EnumLiteralAttribute("Parameters", "")]
[DescriptionAttribute("Parameters")]
public static ResourceType Parameters;
    [EnumLiteralAttribute("Patient", "")]
[DescriptionAttribute("Patient")]
public static ResourceType Patient;
    [EnumLiteralAttribute("PaymentNotice", "")]
[DescriptionAttribute("PaymentNotice")]
public static ResourceType PaymentNotice;
    [EnumLiteralAttribute("PaymentReconciliation", "")]
[DescriptionAttribute("PaymentReconciliation")]
public static ResourceType PaymentReconciliation;
    [EnumLiteralAttribute("Person", "")]
[DescriptionAttribute("Person")]
public static ResourceType Person;
    [EnumLiteralAttribute("PlanDefinition", "")]
[DescriptionAttribute("PlanDefinition")]
public static ResourceType PlanDefinition;
    [EnumLiteralAttribute("Practitioner", "")]
[DescriptionAttribute("Practitioner")]
public static ResourceType Practitioner;
    [EnumLiteralAttribute("PractitionerRole", "")]
[DescriptionAttribute("PractitionerRole")]
public static ResourceType PractitionerRole;
    [EnumLiteralAttribute("Procedure", "")]
[DescriptionAttribute("Procedure")]
public static ResourceType Procedure;
    [EnumLiteralAttribute("Provenance", "")]
[DescriptionAttribute("Provenance")]
public static ResourceType Provenance;
    [EnumLiteralAttribute("Questionnaire", "")]
[DescriptionAttribute("Questionnaire")]
public static ResourceType Questionnaire;
    [EnumLiteralAttribute("QuestionnaireResponse", "")]
[DescriptionAttribute("QuestionnaireResponse")]
public static ResourceType QuestionnaireResponse;
    [EnumLiteralAttribute("RelatedPerson", "")]
[DescriptionAttribute("RelatedPerson")]
public static ResourceType RelatedPerson;
    [EnumLiteralAttribute("RequestGroup", "")]
[DescriptionAttribute("RequestGroup")]
public static ResourceType RequestGroup;
    [EnumLiteralAttribute("ResearchDefinition", "")]
[DescriptionAttribute("ResearchDefinition")]
public static ResourceType ResearchDefinition;
    [EnumLiteralAttribute("ResearchElementDefinition", "")]
[DescriptionAttribute("ResearchElementDefinition")]
public static ResourceType ResearchElementDefinition;
    [EnumLiteralAttribute("ResearchStudy", "")]
[DescriptionAttribute("ResearchStudy")]
public static ResourceType ResearchStudy;
    [EnumLiteralAttribute("ResearchSubject", "")]
[DescriptionAttribute("ResearchSubject")]
public static ResourceType ResearchSubject;
    [EnumLiteralAttribute("Resource", "")]
[DescriptionAttribute("Resource")]
public static ResourceType Resource;
    [EnumLiteralAttribute("RiskAssessment", "")]
[DescriptionAttribute("RiskAssessment")]
public static ResourceType RiskAssessment;
    [EnumLiteralAttribute("RiskEvidenceSynthesis", "")]
[DescriptionAttribute("RiskEvidenceSynthesis")]
public static ResourceType RiskEvidenceSynthesis;
    [EnumLiteralAttribute("Schedule", "")]
[DescriptionAttribute("Schedule")]
public static ResourceType Schedule;
    [EnumLiteralAttribute("SearchParameter", "")]
[DescriptionAttribute("SearchParameter")]
public static ResourceType SearchParameter;
    [EnumLiteralAttribute("ServiceRequest", "")]
[DescriptionAttribute("ServiceRequest")]
public static ResourceType ServiceRequest;
    [EnumLiteralAttribute("Slot", "")]
[DescriptionAttribute("Slot")]
public static ResourceType Slot;
    [EnumLiteralAttribute("Specimen", "")]
[DescriptionAttribute("Specimen")]
public static ResourceType Specimen;
    [EnumLiteralAttribute("SpecimenDefinition", "")]
[DescriptionAttribute("SpecimenDefinition")]
public static ResourceType SpecimenDefinition;
    [EnumLiteralAttribute("StructureDefinition", "")]
[DescriptionAttribute("StructureDefinition")]
public static ResourceType StructureDefinition;
    [EnumLiteralAttribute("StructureMap", "")]
[DescriptionAttribute("StructureMap")]
public static ResourceType StructureMap;
    [EnumLiteralAttribute("Subscription", "")]
[DescriptionAttribute("Subscription")]
public static ResourceType Subscription;
    [EnumLiteralAttribute("Substance", "")]
[DescriptionAttribute("Substance")]
public static ResourceType Substance;
    [EnumLiteralAttribute("SubstanceNucleicAcid", "")]
[DescriptionAttribute("SubstanceNucleicAcid")]
public static ResourceType SubstanceNucleicAcid;
    [EnumLiteralAttribute("SubstancePolymer", "")]
[DescriptionAttribute("SubstancePolymer")]
public static ResourceType SubstancePolymer;
    [EnumLiteralAttribute("SubstanceProtein", "")]
[DescriptionAttribute("SubstanceProtein")]
public static ResourceType SubstanceProtein;
    [EnumLiteralAttribute("SubstanceReferenceInformation", "")]
[DescriptionAttribute("SubstanceReferenceInformation")]
public static ResourceType SubstanceReferenceInformation;
    [EnumLiteralAttribute("SubstanceSourceMaterial", "")]
[DescriptionAttribute("SubstanceSourceMaterial")]
public static ResourceType SubstanceSourceMaterial;
    [EnumLiteralAttribute("SubstanceSpecification", "")]
[DescriptionAttribute("SubstanceSpecification")]
public static ResourceType SubstanceSpecification;
    [EnumLiteralAttribute("SupplyDelivery", "")]
[DescriptionAttribute("SupplyDelivery")]
public static ResourceType SupplyDelivery;
    [EnumLiteralAttribute("SupplyRequest", "")]
[DescriptionAttribute("SupplyRequest")]
public static ResourceType SupplyRequest;
    [EnumLiteralAttribute("Task", "")]
[DescriptionAttribute("Task")]
public static ResourceType Task;
    [EnumLiteralAttribute("TerminologyCapabilities", "")]
[DescriptionAttribute("TerminologyCapabilities")]
public static ResourceType TerminologyCapabilities;
    [EnumLiteralAttribute("TestReport", "")]
[DescriptionAttribute("TestReport")]
public static ResourceType TestReport;
    [EnumLiteralAttribute("TestScript", "")]
[DescriptionAttribute("TestScript")]
public static ResourceType TestScript;
    [EnumLiteralAttribute("ValueSet", "")]
[DescriptionAttribute("ValueSet")]
public static ResourceType ValueSet;
    [EnumLiteralAttribute("VerificationResult", "")]
[DescriptionAttribute("VerificationResult")]
public static ResourceType VerificationResult;
    [EnumLiteralAttribute("VisionPrescription", "")]
[DescriptionAttribute("VisionPrescription")]
public static ResourceType VisionPrescription;
}
[DataContractAttribute]
[FhirTypeAttribute("RiskAssessment", "http://hl7.org/fhir/StructureDefinition/RiskAssessment")]
public class Hl7.Fhir.Model.RiskAssessment : DomainResource {
    private List`1<Identifier> _Identifier;
    private ResourceReference _BasedOn;
    private ResourceReference _Parent;
    private Code`1<ObservationStatus> _StatusElement;
    private CodeableConcept _Method;
    private CodeableConcept _Code;
    private ResourceReference _Subject;
    private ResourceReference _Encounter;
    private DataType _Occurrence;
    private ResourceReference _Condition;
    private ResourceReference _Performer;
    private List`1<CodeableConcept> _ReasonCode;
    private List`1<ResourceReference> _ReasonReference;
    private List`1<ResourceReference> _Basis;
    private List`1<PredictionComponent> _Prediction;
    private FhirString _MitigationElement;
    private List`1<Annotation> _Note;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("basedOn")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference BasedOn { get; public set; }
    [FhirElementAttribute("parent")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Parent { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("RiskAssessmentStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<ObservationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ObservationStatus> Status { get; public set; }
    [FhirElementAttribute("method")]
[BindingAttribute("RiskAssessmentMethod")]
[DataMemberAttribute]
public CodeableConcept Method { get; public set; }
    [FhirElementAttribute("code")]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Occurrence { get; public set; }
    [FhirElementAttribute("condition")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Condition { get; public set; }
    [FhirElementAttribute("performer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Performer { get; public set; }
    [FhirElementAttribute("reasonCode")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ReasonCode { get; public set; }
    [FhirElementAttribute("reasonReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ReasonReference { get; public set; }
    [FhirElementAttribute("basis")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Basis { get; public set; }
    [FhirElementAttribute("prediction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<PredictionComponent> Prediction { get; public set; }
    [FhirElementAttribute("mitigation")]
[DataMemberAttribute]
public FhirString MitigationElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Mitigation { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public ResourceReference get_BasedOn();
    public void set_BasedOn(ResourceReference value);
    public ResourceReference get_Parent();
    public void set_Parent(ResourceReference value);
    public Code`1<ObservationStatus> get_StatusElement();
    public void set_StatusElement(Code`1<ObservationStatus> value);
    public Nullable`1<ObservationStatus> get_Status();
    public void set_Status(Nullable`1<ObservationStatus> value);
    public CodeableConcept get_Method();
    public void set_Method(CodeableConcept value);
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public DataType get_Occurrence();
    public void set_Occurrence(DataType value);
    public ResourceReference get_Condition();
    public void set_Condition(ResourceReference value);
    public ResourceReference get_Performer();
    public void set_Performer(ResourceReference value);
    public List`1<CodeableConcept> get_ReasonCode();
    public void set_ReasonCode(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_ReasonReference();
    public void set_ReasonReference(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Basis();
    public void set_Basis(List`1<ResourceReference> value);
    public List`1<PredictionComponent> get_Prediction();
    public void set_Prediction(List`1<PredictionComponent> value);
    public FhirString get_MitigationElement();
    public void set_MitigationElement(FhirString value);
    public string get_Mitigation();
    public void set_Mitigation(string value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.RiskAssessment/<get_Children>d__89")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.RiskAssessment/<get_NamedChildren>d__91")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.RiskAssessment/<GetElementPairs>d__93")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("RiskEvidenceSynthesis", "http://hl7.org/fhir/StructureDefinition/RiskEvidenceSynthesis")]
public class Hl7.Fhir.Model.RiskEvidenceSynthesis : DomainResource {
    private FhirUri _UrlElement;
    private List`1<Identifier> _Identifier;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private FhirString _TitleElement;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<Annotation> _Note;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _CopyrightElement;
    private Date _ApprovalDateElement;
    private Date _LastReviewDateElement;
    private Period _EffectivePeriod;
    private List`1<CodeableConcept> _Topic;
    private List`1<ContactDetail> _Author;
    private List`1<ContactDetail> _Editor;
    private List`1<ContactDetail> _Reviewer;
    private List`1<ContactDetail> _Endorser;
    private List`1<RelatedArtifact> _RelatedArtifact;
    private CodeableConcept _SynthesisType;
    private CodeableConcept _StudyType;
    private ResourceReference _Population;
    private ResourceReference _Exposure;
    private ResourceReference _Outcome;
    private SampleSizeComponent _SampleSize;
    private RiskEstimateComponent _RiskEstimate;
    private List`1<CertaintyComponent> _Certainty;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("copyright")]
[DataMemberAttribute]
public Markdown CopyrightElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Copyright { get; public set; }
    [FhirElementAttribute("approvalDate")]
[DataMemberAttribute]
public Date ApprovalDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ApprovalDate { get; public set; }
    [FhirElementAttribute("lastReviewDate")]
[DataMemberAttribute]
public Date LastReviewDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string LastReviewDate { get; public set; }
    [FhirElementAttribute("effectivePeriod")]
[DataMemberAttribute]
public Period EffectivePeriod { get; public set; }
    [FhirElementAttribute("topic")]
[BindingAttribute("DefinitionTopic")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Topic { get; public set; }
    [FhirElementAttribute("author")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Author { get; public set; }
    [FhirElementAttribute("editor")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Editor { get; public set; }
    [FhirElementAttribute("reviewer")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Reviewer { get; public set; }
    [FhirElementAttribute("endorser")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Endorser { get; public set; }
    [FhirElementAttribute("relatedArtifact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RelatedArtifact> RelatedArtifact { get; public set; }
    [FhirElementAttribute("synthesisType")]
[BindingAttribute("SynthesisType")]
[DataMemberAttribute]
public CodeableConcept SynthesisType { get; public set; }
    [FhirElementAttribute("studyType")]
[BindingAttribute("StudyType")]
[DataMemberAttribute]
public CodeableConcept StudyType { get; public set; }
    [FhirElementAttribute("population")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Population { get; public set; }
    [FhirElementAttribute("exposure")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Exposure { get; public set; }
    [FhirElementAttribute("outcome")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Outcome { get; public set; }
    [FhirElementAttribute("sampleSize")]
[DataMemberAttribute]
public SampleSizeComponent SampleSize { get; public set; }
    [FhirElementAttribute("riskEstimate")]
[DataMemberAttribute]
public RiskEstimateComponent RiskEstimate { get; public set; }
    [FhirElementAttribute("certainty")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CertaintyComponent> Certainty { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public FhirUri get_UrlElement();
    public void set_UrlElement(FhirUri value);
    public string get_Url();
    public void set_Url(string value);
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirString get_VersionElement();
    public void set_VersionElement(FhirString value);
    public string get_Version();
    public void set_Version(string value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public Code`1<PublicationStatus> get_StatusElement();
    public void set_StatusElement(Code`1<PublicationStatus> value);
    public Nullable`1<PublicationStatus> get_Status();
    public void set_Status(Nullable`1<PublicationStatus> value);
    public FhirDateTime get_DateElement();
    public void set_DateElement(FhirDateTime value);
    public string get_Date();
    public void set_Date(string value);
    public FhirString get_PublisherElement();
    public void set_PublisherElement(FhirString value);
    public string get_Publisher();
    public void set_Publisher(string value);
    public List`1<ContactDetail> get_Contact();
    public void set_Contact(List`1<ContactDetail> value);
    public Markdown get_DescriptionElement();
    public void set_DescriptionElement(Markdown value);
    public string get_Description();
    public void set_Description(string value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public List`1<UsageContext> get_UseContext();
    public void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public Markdown get_CopyrightElement();
    public void set_CopyrightElement(Markdown value);
    public string get_Copyright();
    public void set_Copyright(string value);
    public Date get_ApprovalDateElement();
    public void set_ApprovalDateElement(Date value);
    public string get_ApprovalDate();
    public void set_ApprovalDate(string value);
    public Date get_LastReviewDateElement();
    public void set_LastReviewDateElement(Date value);
    public string get_LastReviewDate();
    public void set_LastReviewDate(string value);
    public Period get_EffectivePeriod();
    public void set_EffectivePeriod(Period value);
    public List`1<CodeableConcept> get_Topic();
    public void set_Topic(List`1<CodeableConcept> value);
    public List`1<ContactDetail> get_Author();
    public void set_Author(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Editor();
    public void set_Editor(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Reviewer();
    public void set_Reviewer(List`1<ContactDetail> value);
    public List`1<ContactDetail> get_Endorser();
    public void set_Endorser(List`1<ContactDetail> value);
    public List`1<RelatedArtifact> get_RelatedArtifact();
    public void set_RelatedArtifact(List`1<RelatedArtifact> value);
    public CodeableConcept get_SynthesisType();
    public void set_SynthesisType(CodeableConcept value);
    public CodeableConcept get_StudyType();
    public void set_StudyType(CodeableConcept value);
    public ResourceReference get_Population();
    public void set_Population(ResourceReference value);
    public ResourceReference get_Exposure();
    public void set_Exposure(ResourceReference value);
    public ResourceReference get_Outcome();
    public void set_Outcome(ResourceReference value);
    public SampleSizeComponent get_SampleSize();
    public void set_SampleSize(SampleSizeComponent value);
    public RiskEstimateComponent get_RiskEstimate();
    public void set_RiskEstimate(RiskEstimateComponent value);
    public List`1<CertaintyComponent> get_Certainty();
    public void set_Certainty(List`1<CertaintyComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.RiskEvidenceSynthesis/<get_Children>d__172")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.RiskEvidenceSynthesis/<get_NamedChildren>d__174")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.RiskEvidenceSynthesis/<GetElementPairs>d__176")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("SampledData", "http://hl7.org/fhir/StructureDefinition/SampledData")]
public class Hl7.Fhir.Model.SampledData : DataType {
    private Quantity _Origin;
    private FhirDecimal _PeriodElement;
    private FhirDecimal _FactorElement;
    private FhirDecimal _LowerLimitElement;
    private FhirDecimal _UpperLimitElement;
    private PositiveInt _DimensionsElement;
    private FhirString _DataElement;
    public string TypeName { get; }
    [FhirElementAttribute("origin")]
[CardinalityAttribute]
[DataMemberAttribute]
public Quantity Origin { get; public set; }
    [FhirElementAttribute("period")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirDecimal PeriodElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<decimal> Period { get; public set; }
    [FhirElementAttribute("factor")]
[DataMemberAttribute]
public FhirDecimal FactorElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<decimal> Factor { get; public set; }
    [FhirElementAttribute("lowerLimit")]
[DataMemberAttribute]
public FhirDecimal LowerLimitElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<decimal> LowerLimit { get; public set; }
    [FhirElementAttribute("upperLimit")]
[DataMemberAttribute]
public FhirDecimal UpperLimitElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<decimal> UpperLimit { get; public set; }
    [FhirElementAttribute("dimensions")]
[CardinalityAttribute]
[DataMemberAttribute]
public PositiveInt DimensionsElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<int> Dimensions { get; public set; }
    [FhirElementAttribute("data")]
[DataMemberAttribute]
public FhirString DataElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Data { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Quantity get_Origin();
    public void set_Origin(Quantity value);
    public FhirDecimal get_PeriodElement();
    public void set_PeriodElement(FhirDecimal value);
    public Nullable`1<decimal> get_Period();
    public void set_Period(Nullable`1<decimal> value);
    public FhirDecimal get_FactorElement();
    public void set_FactorElement(FhirDecimal value);
    public Nullable`1<decimal> get_Factor();
    public void set_Factor(Nullable`1<decimal> value);
    public FhirDecimal get_LowerLimitElement();
    public void set_LowerLimitElement(FhirDecimal value);
    public Nullable`1<decimal> get_LowerLimit();
    public void set_LowerLimit(Nullable`1<decimal> value);
    public FhirDecimal get_UpperLimitElement();
    public void set_UpperLimitElement(FhirDecimal value);
    public Nullable`1<decimal> get_UpperLimit();
    public void set_UpperLimit(Nullable`1<decimal> value);
    public PositiveInt get_DimensionsElement();
    public void set_DimensionsElement(PositiveInt value);
    public Nullable`1<int> get_Dimensions();
    public void set_Dimensions(Nullable`1<int> value);
    public FhirString get_DataElement();
    public void set_DataElement(FhirString value);
    public string get_Data();
    public void set_Data(string value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SampledData/<get_Children>d__53")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SampledData/<get_NamedChildren>d__55")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SampledData/<GetElementPairs>d__57")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Schedule", "http://hl7.org/fhir/StructureDefinition/Schedule")]
public class Hl7.Fhir.Model.Schedule : DomainResource {
    private List`1<Identifier> _Identifier;
    private FhirBoolean _ActiveElement;
    private List`1<CodeableConcept> _ServiceCategory;
    private List`1<CodeableConcept> _ServiceType;
    private List`1<CodeableConcept> _Specialty;
    private List`1<ResourceReference> _Actor;
    private Period _PlanningHorizon;
    private FhirString _CommentElement;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("active")]
[DataMemberAttribute]
public FhirBoolean ActiveElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Active { get; public set; }
    [FhirElementAttribute("serviceCategory")]
[BindingAttribute("service-category")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ServiceCategory { get; public set; }
    [FhirElementAttribute("serviceType")]
[BindingAttribute("service-type")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ServiceType { get; public set; }
    [FhirElementAttribute("specialty")]
[BindingAttribute("specialty")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Specialty { get; public set; }
    [FhirElementAttribute("actor")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Actor { get; public set; }
    [FhirElementAttribute("planningHorizon")]
[DataMemberAttribute]
public Period PlanningHorizon { get; public set; }
    [FhirElementAttribute("comment")]
[DataMemberAttribute]
public FhirString CommentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Comment { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public FhirBoolean get_ActiveElement();
    public void set_ActiveElement(FhirBoolean value);
    public Nullable`1<bool> get_Active();
    public void set_Active(Nullable`1<bool> value);
    public List`1<CodeableConcept> get_ServiceCategory();
    public void set_ServiceCategory(List`1<CodeableConcept> value);
    public List`1<CodeableConcept> get_ServiceType();
    public void set_ServiceType(List`1<CodeableConcept> value);
    public List`1<CodeableConcept> get_Specialty();
    public void set_Specialty(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_Actor();
    public void set_Actor(List`1<ResourceReference> value);
    public Period get_PlanningHorizon();
    public void set_PlanningHorizon(Period value);
    public FhirString get_CommentElement();
    public void set_CommentElement(FhirString value);
    public string get_Comment();
    public void set_Comment(string value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Schedule/<get_Children>d__48")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Schedule/<get_NamedChildren>d__50")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Schedule/<GetElementPairs>d__52")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("SearchParameter", "http://hl7.org/fhir/StructureDefinition/SearchParameter")]
public class Hl7.Fhir.Model.SearchParameter : DomainResource {
    private FhirUri _UrlElement;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private Canonical _DerivedFromElement;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirBoolean _ExperimentalElement;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _PurposeElement;
    private Code _CodeElement;
    private List`1<Code`1<ResourceType>> _BaseElement;
    private Code`1<SearchParamType> _TypeElement;
    private FhirString _ExpressionElement;
    private FhirString _XpathElement;
    private Code`1<XPathUsageType> _XpathUsageElement;
    private List`1<Code`1<ResourceType>> _TargetElement;
    private FhirBoolean _MultipleOrElement;
    private FhirBoolean _MultipleAndElement;
    private List`1<Code`1<SearchComparator>> _ComparatorElement;
    private List`1<Code`1<SearchModifierCode>> _ModifierElement;
    private List`1<FhirString> _ChainElement;
    private List`1<ComponentComponent> _Component;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("derivedFrom")]
[DataMemberAttribute]
public Canonical DerivedFromElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string DerivedFrom { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("experimental")]
[DataMemberAttribute]
public FhirBoolean ExperimentalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Experimental { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[CardinalityAttribute]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("purpose")]
[DataMemberAttribute]
public Markdown PurposeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Purpose { get; public set; }
    [FhirElementAttribute("code")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code CodeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Code { get; public set; }
    [FhirElementAttribute("base")]
[DeclaredTypeAttribute]
[BindingAttribute("ResourceType")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Code`1<ResourceType>> BaseElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Nullable`1<ResourceType>> Base { get; public set; }
    [FhirElementAttribute("type")]
[DeclaredTypeAttribute]
[BindingAttribute("SearchParamType")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<SearchParamType> TypeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<SearchParamType> Type { get; public set; }
    [FhirElementAttribute("expression")]
[DataMemberAttribute]
public FhirString ExpressionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Expression { get; public set; }
    [FhirElementAttribute("xpath")]
[DataMemberAttribute]
public FhirString XpathElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Xpath { get; public set; }
    [FhirElementAttribute("xpathUsage")]
[DeclaredTypeAttribute]
[BindingAttribute("XPathUsageType")]
[DataMemberAttribute]
public Code`1<XPathUsageType> XpathUsageElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<XPathUsageType> XpathUsage { get; public set; }
    [FhirElementAttribute("target")]
[DeclaredTypeAttribute]
[BindingAttribute("ResourceType")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Code`1<ResourceType>> TargetElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Nullable`1<ResourceType>> Target { get; public set; }
    [FhirElementAttribute("multipleOr")]
[DataMemberAttribute]
public FhirBoolean MultipleOrElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> MultipleOr { get; public set; }
    [FhirElementAttribute("multipleAnd")]
[DataMemberAttribute]
public FhirBoolean MultipleAndElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> MultipleAnd { get; public set; }
    [FhirElementAttribute("comparator")]
[DeclaredTypeAttribute]
[BindingAttribute("SearchComparator")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Code`1<SearchComparator>> ComparatorElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Nullable`1<SearchComparator>> Comparator { get; public set; }
    [FhirElementAttribute("modifier")]
[DeclaredTypeAttribute]
[BindingAttribute("SearchModifierCode")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Code`1<SearchModifierCode>> ModifierElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Nullable`1<SearchModifierCode>> Modifier { get; public set; }
    [FhirElementAttribute("chain")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> ChainElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Chain { get; public set; }
    [FhirElementAttribute("component")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ComponentComponent> Component { get; public set; }
    private List`1<Code`1<ResourceType>> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.Code<Hl7.Fhir.Model.ResourceType>>>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public sealed virtual FhirUri get_UrlElement();
    public sealed virtual void set_UrlElement(FhirUri value);
    public sealed virtual string get_Url();
    public sealed virtual void set_Url(string value);
    public sealed virtual FhirString get_VersionElement();
    public sealed virtual void set_VersionElement(FhirString value);
    public sealed virtual string get_Version();
    public sealed virtual void set_Version(string value);
    public sealed virtual FhirString get_NameElement();
    public sealed virtual void set_NameElement(FhirString value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public Canonical get_DerivedFromElement();
    public void set_DerivedFromElement(Canonical value);
    public string get_DerivedFrom();
    public void set_DerivedFrom(string value);
    public sealed virtual Code`1<PublicationStatus> get_StatusElement();
    public sealed virtual void set_StatusElement(Code`1<PublicationStatus> value);
    public sealed virtual Nullable`1<PublicationStatus> get_Status();
    public sealed virtual void set_Status(Nullable`1<PublicationStatus> value);
    public sealed virtual FhirBoolean get_ExperimentalElement();
    public sealed virtual void set_ExperimentalElement(FhirBoolean value);
    public sealed virtual Nullable`1<bool> get_Experimental();
    public sealed virtual void set_Experimental(Nullable`1<bool> value);
    public sealed virtual FhirDateTime get_DateElement();
    public sealed virtual void set_DateElement(FhirDateTime value);
    public sealed virtual string get_Date();
    public sealed virtual void set_Date(string value);
    public sealed virtual FhirString get_PublisherElement();
    public sealed virtual void set_PublisherElement(FhirString value);
    public sealed virtual string get_Publisher();
    public sealed virtual void set_Publisher(string value);
    public sealed virtual List`1<ContactDetail> get_Contact();
    public sealed virtual void set_Contact(List`1<ContactDetail> value);
    public sealed virtual Markdown get_DescriptionElement();
    public sealed virtual void set_DescriptionElement(Markdown value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual List`1<UsageContext> get_UseContext();
    public sealed virtual void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public sealed virtual Markdown get_PurposeElement();
    public sealed virtual void set_PurposeElement(Markdown value);
    public sealed virtual string get_Purpose();
    public sealed virtual void set_Purpose(string value);
    public Code get_CodeElement();
    public void set_CodeElement(Code value);
    public string get_Code();
    public void set_Code(string value);
    public List`1<Code`1<ResourceType>> get_BaseElement();
    public void set_BaseElement(List`1<Code`1<ResourceType>> value);
    public IEnumerable`1<Nullable`1<ResourceType>> get_Base();
    public void set_Base(IEnumerable`1<Nullable`1<ResourceType>> value);
    public Code`1<SearchParamType> get_TypeElement();
    public void set_TypeElement(Code`1<SearchParamType> value);
    public Nullable`1<SearchParamType> get_Type();
    public void set_Type(Nullable`1<SearchParamType> value);
    public FhirString get_ExpressionElement();
    public void set_ExpressionElement(FhirString value);
    public string get_Expression();
    public void set_Expression(string value);
    public FhirString get_XpathElement();
    public void set_XpathElement(FhirString value);
    public string get_Xpath();
    public void set_Xpath(string value);
    public Code`1<XPathUsageType> get_XpathUsageElement();
    public void set_XpathUsageElement(Code`1<XPathUsageType> value);
    public Nullable`1<XPathUsageType> get_XpathUsage();
    public void set_XpathUsage(Nullable`1<XPathUsageType> value);
    public List`1<Code`1<ResourceType>> get_TargetElement();
    public void set_TargetElement(List`1<Code`1<ResourceType>> value);
    public IEnumerable`1<Nullable`1<ResourceType>> get_Target();
    public void set_Target(IEnumerable`1<Nullable`1<ResourceType>> value);
    public FhirBoolean get_MultipleOrElement();
    public void set_MultipleOrElement(FhirBoolean value);
    public Nullable`1<bool> get_MultipleOr();
    public void set_MultipleOr(Nullable`1<bool> value);
    public FhirBoolean get_MultipleAndElement();
    public void set_MultipleAndElement(FhirBoolean value);
    public Nullable`1<bool> get_MultipleAnd();
    public void set_MultipleAnd(Nullable`1<bool> value);
    public List`1<Code`1<SearchComparator>> get_ComparatorElement();
    public void set_ComparatorElement(List`1<Code`1<SearchComparator>> value);
    public IEnumerable`1<Nullable`1<SearchComparator>> get_Comparator();
    public void set_Comparator(IEnumerable`1<Nullable`1<SearchComparator>> value);
    public List`1<Code`1<SearchModifierCode>> get_ModifierElement();
    public void set_ModifierElement(List`1<Code`1<SearchModifierCode>> value);
    public IEnumerable`1<Nullable`1<SearchModifierCode>> get_Modifier();
    public void set_Modifier(IEnumerable`1<Nullable`1<SearchModifierCode>> value);
    public List`1<FhirString> get_ChainElement();
    public void set_ChainElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_Chain();
    public void set_Chain(IEnumerable`1<string> value);
    public List`1<ComponentComponent> get_Component();
    public void set_Component(List`1<ComponentComponent> value);
    private sealed virtual override List`1<Code`1<ResourceType>> Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.Code<Hl7.Fhir.Model.ResourceType>>>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<System.Collections.Generic.List<Hl7.Fhir.Model.Code<Hl7.Fhir.Model.ResourceType>>>.set_Code(List`1<Code`1<ResourceType>> value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SearchParameter/<get_Children>d__185")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SearchParameter/<get_NamedChildren>d__187")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SearchParameter/<GetElementPairs>d__189")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[ObsoleteAttribute("This resource was removed in R4", "True")]
public class Hl7.Fhir.Model.Sequence : object {
}
[DataContractAttribute]
[FhirTypeAttribute("ServiceRequest", "http://hl7.org/fhir/StructureDefinition/ServiceRequest")]
public class Hl7.Fhir.Model.ServiceRequest : DomainResource {
    private List`1<Identifier> _Identifier;
    private List`1<Canonical> _InstantiatesCanonicalElement;
    private List`1<FhirUri> _InstantiatesUriElement;
    private List`1<ResourceReference> _BasedOn;
    private List`1<ResourceReference> _Replaces;
    private Identifier _Requisition;
    private Code`1<RequestStatus> _StatusElement;
    private Code`1<RequestIntent> _IntentElement;
    private List`1<CodeableConcept> _Category;
    private Code`1<RequestPriority> _PriorityElement;
    private FhirBoolean _DoNotPerformElement;
    private CodeableConcept _Code;
    private List`1<CodeableConcept> _OrderDetail;
    private DataType _Quantity;
    private ResourceReference _Subject;
    private ResourceReference _Encounter;
    private DataType _Occurrence;
    private DataType _AsNeeded;
    private FhirDateTime _AuthoredOnElement;
    private ResourceReference _Requester;
    private CodeableConcept _PerformerType;
    private List`1<ResourceReference> _Performer;
    private List`1<CodeableConcept> _LocationCode;
    private List`1<ResourceReference> _LocationReference;
    private List`1<CodeableConcept> _ReasonCode;
    private List`1<ResourceReference> _ReasonReference;
    private List`1<ResourceReference> _Insurance;
    private List`1<ResourceReference> _SupportingInfo;
    private List`1<ResourceReference> _Specimen;
    private List`1<CodeableConcept> _BodySite;
    private List`1<Annotation> _Note;
    private FhirString _PatientInstructionElement;
    private List`1<ResourceReference> _RelevantHistory;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("instantiatesCanonical")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> InstantiatesCanonicalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> InstantiatesCanonical { get; public set; }
    [FhirElementAttribute("instantiatesUri")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirUri> InstantiatesUriElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> InstantiatesUri { get; public set; }
    [FhirElementAttribute("basedOn")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> BasedOn { get; public set; }
    [FhirElementAttribute("replaces")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Replaces { get; public set; }
    [FhirElementAttribute("requisition")]
[DataMemberAttribute]
public Identifier Requisition { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("ServiceRequestStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<RequestStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<RequestStatus> Status { get; public set; }
    [FhirElementAttribute("intent")]
[DeclaredTypeAttribute]
[BindingAttribute("ServiceRequestIntent")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<RequestIntent> IntentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<RequestIntent> Intent { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("ServiceRequestCategory")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Category { get; public set; }
    [FhirElementAttribute("priority")]
[DeclaredTypeAttribute]
[BindingAttribute("ServiceRequestPriority")]
[DataMemberAttribute]
public Code`1<RequestPriority> PriorityElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<RequestPriority> Priority { get; public set; }
    [FhirElementAttribute("doNotPerform")]
[DataMemberAttribute]
public FhirBoolean DoNotPerformElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> DoNotPerform { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("ServiceRequestCode")]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [FhirElementAttribute("orderDetail")]
[BindingAttribute("OrderDetail")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> OrderDetail { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Quantity { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Occurrence { get; public set; }
    [FhirElementAttribute]
[BindingAttribute("ProcedureAsNeededReason")]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType AsNeeded { get; public set; }
    [FhirElementAttribute("authoredOn")]
[DataMemberAttribute]
public FhirDateTime AuthoredOnElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string AuthoredOn { get; public set; }
    [FhirElementAttribute("requester")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Requester { get; public set; }
    [FhirElementAttribute("performerType")]
[BindingAttribute("ServiceRequestParticipantRole")]
[DataMemberAttribute]
public CodeableConcept PerformerType { get; public set; }
    [FhirElementAttribute("performer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Performer { get; public set; }
    [FhirElementAttribute("locationCode")]
[BindingAttribute("ServiceRequestLocation")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> LocationCode { get; public set; }
    [FhirElementAttribute("locationReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> LocationReference { get; public set; }
    [FhirElementAttribute("reasonCode")]
[BindingAttribute("ServiceRequestReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ReasonCode { get; public set; }
    [FhirElementAttribute("reasonReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ReasonReference { get; public set; }
    [FhirElementAttribute("insurance")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Insurance { get; public set; }
    [FhirElementAttribute("supportingInfo")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> SupportingInfo { get; public set; }
    [FhirElementAttribute("specimen")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Specimen { get; public set; }
    [FhirElementAttribute("bodySite")]
[BindingAttribute("BodySite")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> BodySite { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("patientInstruction")]
[DataMemberAttribute]
public FhirString PatientInstructionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string PatientInstruction { get; public set; }
    [FhirElementAttribute("relevantHistory")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> RelevantHistory { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<Canonical> get_InstantiatesCanonicalElement();
    public void set_InstantiatesCanonicalElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_InstantiatesCanonical();
    public void set_InstantiatesCanonical(IEnumerable`1<string> value);
    public List`1<FhirUri> get_InstantiatesUriElement();
    public void set_InstantiatesUriElement(List`1<FhirUri> value);
    public IEnumerable`1<string> get_InstantiatesUri();
    public void set_InstantiatesUri(IEnumerable`1<string> value);
    public List`1<ResourceReference> get_BasedOn();
    public void set_BasedOn(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Replaces();
    public void set_Replaces(List`1<ResourceReference> value);
    public Identifier get_Requisition();
    public void set_Requisition(Identifier value);
    public Code`1<RequestStatus> get_StatusElement();
    public void set_StatusElement(Code`1<RequestStatus> value);
    public Nullable`1<RequestStatus> get_Status();
    public void set_Status(Nullable`1<RequestStatus> value);
    public Code`1<RequestIntent> get_IntentElement();
    public void set_IntentElement(Code`1<RequestIntent> value);
    public Nullable`1<RequestIntent> get_Intent();
    public void set_Intent(Nullable`1<RequestIntent> value);
    public List`1<CodeableConcept> get_Category();
    public void set_Category(List`1<CodeableConcept> value);
    public Code`1<RequestPriority> get_PriorityElement();
    public void set_PriorityElement(Code`1<RequestPriority> value);
    public Nullable`1<RequestPriority> get_Priority();
    public void set_Priority(Nullable`1<RequestPriority> value);
    public FhirBoolean get_DoNotPerformElement();
    public void set_DoNotPerformElement(FhirBoolean value);
    public Nullable`1<bool> get_DoNotPerform();
    public void set_DoNotPerform(Nullable`1<bool> value);
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public List`1<CodeableConcept> get_OrderDetail();
    public void set_OrderDetail(List`1<CodeableConcept> value);
    public DataType get_Quantity();
    public void set_Quantity(DataType value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public DataType get_Occurrence();
    public void set_Occurrence(DataType value);
    public DataType get_AsNeeded();
    public void set_AsNeeded(DataType value);
    public FhirDateTime get_AuthoredOnElement();
    public void set_AuthoredOnElement(FhirDateTime value);
    public string get_AuthoredOn();
    public void set_AuthoredOn(string value);
    public ResourceReference get_Requester();
    public void set_Requester(ResourceReference value);
    public CodeableConcept get_PerformerType();
    public void set_PerformerType(CodeableConcept value);
    public List`1<ResourceReference> get_Performer();
    public void set_Performer(List`1<ResourceReference> value);
    public List`1<CodeableConcept> get_LocationCode();
    public void set_LocationCode(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_LocationReference();
    public void set_LocationReference(List`1<ResourceReference> value);
    public List`1<CodeableConcept> get_ReasonCode();
    public void set_ReasonCode(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_ReasonReference();
    public void set_ReasonReference(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Insurance();
    public void set_Insurance(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_SupportingInfo();
    public void set_SupportingInfo(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Specimen();
    public void set_Specimen(List`1<ResourceReference> value);
    public List`1<CodeableConcept> get_BodySite();
    public void set_BodySite(List`1<CodeableConcept> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public FhirString get_PatientInstructionElement();
    public void set_PatientInstructionElement(FhirString value);
    public string get_PatientInstruction();
    public void set_PatientInstruction(string value);
    public List`1<ResourceReference> get_RelevantHistory();
    public void set_RelevantHistory(List`1<ResourceReference> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ServiceRequest/<get_Children>d__170")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ServiceRequest/<get_NamedChildren>d__172")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ServiceRequest/<GetElementPairs>d__174")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Slot", "http://hl7.org/fhir/StructureDefinition/Slot")]
public class Hl7.Fhir.Model.Slot : DomainResource {
    private List`1<Identifier> _Identifier;
    private List`1<CodeableConcept> _ServiceCategory;
    private List`1<CodeableConcept> _ServiceType;
    private List`1<CodeableConcept> _Specialty;
    private CodeableConcept _AppointmentType;
    private ResourceReference _Schedule;
    private Code`1<SlotStatus> _StatusElement;
    private Instant _StartElement;
    private Instant _EndElement;
    private FhirBoolean _OverbookedElement;
    private FhirString _CommentElement;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("serviceCategory")]
[BindingAttribute("service-category")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ServiceCategory { get; public set; }
    [FhirElementAttribute("serviceType")]
[BindingAttribute("service-type")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ServiceType { get; public set; }
    [FhirElementAttribute("specialty")]
[BindingAttribute("specialty")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Specialty { get; public set; }
    [FhirElementAttribute("appointmentType")]
[BindingAttribute("appointment-type")]
[DataMemberAttribute]
public CodeableConcept AppointmentType { get; public set; }
    [FhirElementAttribute("schedule")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Schedule { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("SlotStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<SlotStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<SlotStatus> Status { get; public set; }
    [FhirElementAttribute("start")]
[CardinalityAttribute]
[DataMemberAttribute]
public Instant StartElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<DateTimeOffset> Start { get; public set; }
    [FhirElementAttribute("end")]
[CardinalityAttribute]
[DataMemberAttribute]
public Instant EndElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<DateTimeOffset> End { get; public set; }
    [FhirElementAttribute("overbooked")]
[DataMemberAttribute]
public FhirBoolean OverbookedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Overbooked { get; public set; }
    [FhirElementAttribute("comment")]
[DataMemberAttribute]
public FhirString CommentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Comment { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<CodeableConcept> get_ServiceCategory();
    public void set_ServiceCategory(List`1<CodeableConcept> value);
    public List`1<CodeableConcept> get_ServiceType();
    public void set_ServiceType(List`1<CodeableConcept> value);
    public List`1<CodeableConcept> get_Specialty();
    public void set_Specialty(List`1<CodeableConcept> value);
    public CodeableConcept get_AppointmentType();
    public void set_AppointmentType(CodeableConcept value);
    public ResourceReference get_Schedule();
    public void set_Schedule(ResourceReference value);
    public Code`1<SlotStatus> get_StatusElement();
    public void set_StatusElement(Code`1<SlotStatus> value);
    public Nullable`1<SlotStatus> get_Status();
    public void set_Status(Nullable`1<SlotStatus> value);
    public Instant get_StartElement();
    public void set_StartElement(Instant value);
    public Nullable`1<DateTimeOffset> get_Start();
    public void set_Start(Nullable`1<DateTimeOffset> value);
    public Instant get_EndElement();
    public void set_EndElement(Instant value);
    public Nullable`1<DateTimeOffset> get_End();
    public void set_End(Nullable`1<DateTimeOffset> value);
    public FhirBoolean get_OverbookedElement();
    public void set_OverbookedElement(FhirBoolean value);
    public Nullable`1<bool> get_Overbooked();
    public void set_Overbooked(Nullable`1<bool> value);
    public FhirString get_CommentElement();
    public void set_CommentElement(FhirString value);
    public string get_Comment();
    public void set_Comment(string value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Slot/<get_Children>d__70")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Slot/<get_NamedChildren>d__72")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Slot/<GetElementPairs>d__74")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Specimen", "http://hl7.org/fhir/StructureDefinition/Specimen")]
public class Hl7.Fhir.Model.Specimen : DomainResource {
    private List`1<Identifier> _Identifier;
    private Identifier _AccessionIdentifier;
    private Code`1<SpecimenStatus> _StatusElement;
    private CodeableConcept _Type;
    private ResourceReference _Subject;
    private FhirDateTime _ReceivedTimeElement;
    private List`1<ResourceReference> _Parent;
    private List`1<ResourceReference> _Request;
    private CollectionComponent _Collection;
    private List`1<ProcessingComponent> _Processing;
    private List`1<ContainerComponent> _Container;
    private List`1<CodeableConcept> _Condition;
    private List`1<Annotation> _Note;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("accessionIdentifier")]
[DataMemberAttribute]
public Identifier AccessionIdentifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("SpecimenStatus")]
[DataMemberAttribute]
public Code`1<SpecimenStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<SpecimenStatus> Status { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("SpecimenType")]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("subject")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Subject { get; public set; }
    [FhirElementAttribute("receivedTime")]
[DataMemberAttribute]
public FhirDateTime ReceivedTimeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ReceivedTime { get; public set; }
    [FhirElementAttribute("parent")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Parent { get; public set; }
    [FhirElementAttribute("request")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Request { get; public set; }
    [FhirElementAttribute("collection")]
[DataMemberAttribute]
public CollectionComponent Collection { get; public set; }
    [FhirElementAttribute("processing")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ProcessingComponent> Processing { get; public set; }
    [FhirElementAttribute("container")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContainerComponent> Container { get; public set; }
    [FhirElementAttribute("condition")]
[BindingAttribute("SpecimenCondition")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Condition { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Identifier get_AccessionIdentifier();
    public void set_AccessionIdentifier(Identifier value);
    public Code`1<SpecimenStatus> get_StatusElement();
    public void set_StatusElement(Code`1<SpecimenStatus> value);
    public Nullable`1<SpecimenStatus> get_Status();
    public void set_Status(Nullable`1<SpecimenStatus> value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public ResourceReference get_Subject();
    public void set_Subject(ResourceReference value);
    public FhirDateTime get_ReceivedTimeElement();
    public void set_ReceivedTimeElement(FhirDateTime value);
    public string get_ReceivedTime();
    public void set_ReceivedTime(string value);
    public List`1<ResourceReference> get_Parent();
    public void set_Parent(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_Request();
    public void set_Request(List`1<ResourceReference> value);
    public CollectionComponent get_Collection();
    public void set_Collection(CollectionComponent value);
    public List`1<ProcessingComponent> get_Processing();
    public void set_Processing(List`1<ProcessingComponent> value);
    public List`1<ContainerComponent> get_Container();
    public void set_Container(List`1<ContainerComponent> value);
    public List`1<CodeableConcept> get_Condition();
    public void set_Condition(List`1<CodeableConcept> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Specimen/<get_Children>d__76")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Specimen/<get_NamedChildren>d__78")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Specimen/<GetElementPairs>d__80")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("SpecimenDefinition", "http://hl7.org/fhir/StructureDefinition/SpecimenDefinition")]
public class Hl7.Fhir.Model.SpecimenDefinition : DomainResource {
    private Identifier _Identifier;
    private CodeableConcept _TypeCollected;
    private List`1<CodeableConcept> _PatientPreparation;
    private FhirString _TimeAspectElement;
    private List`1<CodeableConcept> _Collection;
    private List`1<TypeTestedComponent> _TypeTested;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[DataMemberAttribute]
public Identifier Identifier { get; public set; }
    [FhirElementAttribute("typeCollected")]
[BindingAttribute("CollectedSpecimenType")]
[DataMemberAttribute]
public CodeableConcept TypeCollected { get; public set; }
    [FhirElementAttribute("patientPreparation")]
[BindingAttribute("PreparePatient")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> PatientPreparation { get; public set; }
    [FhirElementAttribute("timeAspect")]
[DataMemberAttribute]
public FhirString TimeAspectElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string TimeAspect { get; public set; }
    [FhirElementAttribute("collection")]
[BindingAttribute("SpecimenCollection")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Collection { get; public set; }
    [FhirElementAttribute("typeTested")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<TypeTestedComponent> TypeTested { get; public set; }
    private Identifier Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Identifier get_Identifier();
    public void set_Identifier(Identifier value);
    public CodeableConcept get_TypeCollected();
    public void set_TypeCollected(CodeableConcept value);
    public List`1<CodeableConcept> get_PatientPreparation();
    public void set_PatientPreparation(List`1<CodeableConcept> value);
    public FhirString get_TimeAspectElement();
    public void set_TimeAspectElement(FhirString value);
    public string get_TimeAspect();
    public void set_TimeAspect(string value);
    public List`1<CodeableConcept> get_Collection();
    public void set_Collection(List`1<CodeableConcept> value);
    public List`1<TypeTestedComponent> get_TypeTested();
    public void set_TypeTested(List`1<TypeTestedComponent> value);
    private sealed virtual override Identifier Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.set_Identifier(Identifier value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SpecimenDefinition/<get_Children>d__42")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SpecimenDefinition/<get_NamedChildren>d__44")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SpecimenDefinition/<GetElementPairs>d__46")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("StructureMap", "http://hl7.org/fhir/StructureDefinition/StructureMap")]
public class Hl7.Fhir.Model.StructureMap : DomainResource {
    private FhirUri _UrlElement;
    private List`1<Identifier> _Identifier;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private FhirString _TitleElement;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirBoolean _ExperimentalElement;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _PurposeElement;
    private Markdown _CopyrightElement;
    private List`1<StructureComponent> _Structure;
    private List`1<Canonical> _ImportElement;
    private List`1<GroupComponent> _Group;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("experimental")]
[DataMemberAttribute]
public FhirBoolean ExperimentalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Experimental { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("purpose")]
[DataMemberAttribute]
public Markdown PurposeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Purpose { get; public set; }
    [FhirElementAttribute("copyright")]
[DataMemberAttribute]
public Markdown CopyrightElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Copyright { get; public set; }
    [FhirElementAttribute("structure")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<StructureComponent> Structure { get; public set; }
    [FhirElementAttribute("import")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Canonical> ImportElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Import { get; public set; }
    [FhirElementAttribute("group")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<GroupComponent> Group { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public sealed virtual FhirUri get_UrlElement();
    public sealed virtual void set_UrlElement(FhirUri value);
    public sealed virtual string get_Url();
    public sealed virtual void set_Url(string value);
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public sealed virtual FhirString get_VersionElement();
    public sealed virtual void set_VersionElement(FhirString value);
    public sealed virtual string get_Version();
    public sealed virtual void set_Version(string value);
    public sealed virtual FhirString get_NameElement();
    public sealed virtual void set_NameElement(FhirString value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public sealed virtual Code`1<PublicationStatus> get_StatusElement();
    public sealed virtual void set_StatusElement(Code`1<PublicationStatus> value);
    public sealed virtual Nullable`1<PublicationStatus> get_Status();
    public sealed virtual void set_Status(Nullable`1<PublicationStatus> value);
    public sealed virtual FhirBoolean get_ExperimentalElement();
    public sealed virtual void set_ExperimentalElement(FhirBoolean value);
    public sealed virtual Nullable`1<bool> get_Experimental();
    public sealed virtual void set_Experimental(Nullable`1<bool> value);
    public sealed virtual FhirDateTime get_DateElement();
    public sealed virtual void set_DateElement(FhirDateTime value);
    public sealed virtual string get_Date();
    public sealed virtual void set_Date(string value);
    public sealed virtual FhirString get_PublisherElement();
    public sealed virtual void set_PublisherElement(FhirString value);
    public sealed virtual string get_Publisher();
    public sealed virtual void set_Publisher(string value);
    public sealed virtual List`1<ContactDetail> get_Contact();
    public sealed virtual void set_Contact(List`1<ContactDetail> value);
    public sealed virtual Markdown get_DescriptionElement();
    public sealed virtual void set_DescriptionElement(Markdown value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual List`1<UsageContext> get_UseContext();
    public sealed virtual void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public sealed virtual Markdown get_PurposeElement();
    public sealed virtual void set_PurposeElement(Markdown value);
    public sealed virtual string get_Purpose();
    public sealed virtual void set_Purpose(string value);
    public Markdown get_CopyrightElement();
    public void set_CopyrightElement(Markdown value);
    public string get_Copyright();
    public void set_Copyright(string value);
    public List`1<StructureComponent> get_Structure();
    public void set_Structure(List`1<StructureComponent> value);
    public List`1<Canonical> get_ImportElement();
    public void set_ImportElement(List`1<Canonical> value);
    public IEnumerable`1<string> get_Import();
    public void set_Import(IEnumerable`1<string> value);
    public List`1<GroupComponent> get_Group();
    public void set_Group(List`1<GroupComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.StructureMap/<get_Children>d__133")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.StructureMap/<get_NamedChildren>d__135")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.StructureMap/<GetElementPairs>d__137")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Subscription", "http://hl7.org/fhir/StructureDefinition/Subscription")]
public class Hl7.Fhir.Model.Subscription : DomainResource {
    private Code`1<SubscriptionStatus> _StatusElement;
    private List`1<ContactPoint> _Contact;
    private Instant _EndElement;
    private FhirString _ReasonElement;
    private FhirString _CriteriaElement;
    private FhirString _ErrorElement;
    private ChannelComponent _Channel;
    public string TypeName { get; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("SubscriptionStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<SubscriptionStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<SubscriptionStatus> Status { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactPoint> Contact { get; public set; }
    [FhirElementAttribute("end")]
[DataMemberAttribute]
public Instant EndElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<DateTimeOffset> End { get; public set; }
    [FhirElementAttribute("reason")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirString ReasonElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Reason { get; public set; }
    [FhirElementAttribute("criteria")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirString CriteriaElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Criteria { get; public set; }
    [FhirElementAttribute("error")]
[DataMemberAttribute]
public FhirString ErrorElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Error { get; public set; }
    [FhirElementAttribute("channel")]
[CardinalityAttribute]
[DataMemberAttribute]
public ChannelComponent Channel { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Code`1<SubscriptionStatus> get_StatusElement();
    public void set_StatusElement(Code`1<SubscriptionStatus> value);
    public Nullable`1<SubscriptionStatus> get_Status();
    public void set_Status(Nullable`1<SubscriptionStatus> value);
    public List`1<ContactPoint> get_Contact();
    public void set_Contact(List`1<ContactPoint> value);
    public Instant get_EndElement();
    public void set_EndElement(Instant value);
    public Nullable`1<DateTimeOffset> get_End();
    public void set_End(Nullable`1<DateTimeOffset> value);
    public FhirString get_ReasonElement();
    public void set_ReasonElement(FhirString value);
    public string get_Reason();
    public void set_Reason(string value);
    public FhirString get_CriteriaElement();
    public void set_CriteriaElement(FhirString value);
    public string get_Criteria();
    public void set_Criteria(string value);
    public FhirString get_ErrorElement();
    public void set_ErrorElement(FhirString value);
    public string get_Error();
    public void set_Error(string value);
    public ChannelComponent get_Channel();
    public void set_Channel(ChannelComponent value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Subscription/<get_Children>d__53")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Subscription/<get_NamedChildren>d__55")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Subscription/<GetElementPairs>d__57")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Substance", "http://hl7.org/fhir/StructureDefinition/Substance")]
public class Hl7.Fhir.Model.Substance : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<FHIRSubstanceStatus> _StatusElement;
    private List`1<CodeableConcept> _Category;
    private CodeableConcept _Code;
    private FhirString _DescriptionElement;
    private List`1<InstanceComponent> _Instance;
    private List`1<IngredientComponent> _Ingredient;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("FHIRSubstanceStatus")]
[DataMemberAttribute]
public Code`1<FHIRSubstanceStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<FHIRSubstanceStatus> Status { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("SubstanceCategory")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Category { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("SubstanceCode")]
[CardinalityAttribute]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public FhirString DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("instance")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<InstanceComponent> Instance { get; public set; }
    [FhirElementAttribute("ingredient")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<IngredientComponent> Ingredient { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<FHIRSubstanceStatus> get_StatusElement();
    public void set_StatusElement(Code`1<FHIRSubstanceStatus> value);
    public Nullable`1<FHIRSubstanceStatus> get_Status();
    public void set_Status(Nullable`1<FHIRSubstanceStatus> value);
    public List`1<CodeableConcept> get_Category();
    public void set_Category(List`1<CodeableConcept> value);
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public FhirString get_DescriptionElement();
    public void set_DescriptionElement(FhirString value);
    public string get_Description();
    public void set_Description(string value);
    public List`1<InstanceComponent> get_Instance();
    public void set_Instance(List`1<InstanceComponent> value);
    public List`1<IngredientComponent> get_Ingredient();
    public void set_Ingredient(List`1<IngredientComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Substance/<get_Children>d__51")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Substance/<get_NamedChildren>d__53")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Substance/<GetElementPairs>d__55")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("SubstanceAmount", "http://hl7.org/fhir/StructureDefinition/SubstanceAmount")]
public class Hl7.Fhir.Model.SubstanceAmount : BackboneType {
    private DataType _Amount;
    private CodeableConcept _AmountType;
    private FhirString _AmountTextElement;
    private ReferenceRangeComponent _ReferenceRange;
    public string TypeName { get; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Amount { get; public set; }
    [FhirElementAttribute("amountType")]
[DataMemberAttribute]
public CodeableConcept AmountType { get; public set; }
    [FhirElementAttribute("amountText")]
[DataMemberAttribute]
public FhirString AmountTextElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string AmountText { get; public set; }
    [FhirElementAttribute("referenceRange")]
[DataMemberAttribute]
public ReferenceRangeComponent ReferenceRange { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public DataType get_Amount();
    public void set_Amount(DataType value);
    public CodeableConcept get_AmountType();
    public void set_AmountType(CodeableConcept value);
    public FhirString get_AmountTextElement();
    public void set_AmountTextElement(FhirString value);
    public string get_AmountText();
    public void set_AmountText(string value);
    public ReferenceRangeComponent get_ReferenceRange();
    public void set_ReferenceRange(ReferenceRangeComponent value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SubstanceAmount/<get_Children>d__27")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SubstanceAmount/<get_NamedChildren>d__29")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SubstanceAmount/<GetElementPairs>d__31")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[ObsoleteAttribute("This resource was removed in R4", "True")]
public class Hl7.Fhir.Model.SubstanceMoiety : object {
}
[DataContractAttribute]
[FhirTypeAttribute("SubstanceNucleicAcid", "http://hl7.org/fhir/StructureDefinition/SubstanceNucleicAcid")]
public class Hl7.Fhir.Model.SubstanceNucleicAcid : DomainResource {
    private CodeableConcept _SequenceType;
    private Integer _NumberOfSubunitsElement;
    private FhirString _AreaOfHybridisationElement;
    private CodeableConcept _OligoNucleotideType;
    private List`1<SubunitComponent> _Subunit;
    public string TypeName { get; }
    [FhirElementAttribute("sequenceType")]
[DataMemberAttribute]
public CodeableConcept SequenceType { get; public set; }
    [FhirElementAttribute("numberOfSubunits")]
[DataMemberAttribute]
public Integer NumberOfSubunitsElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<int> NumberOfSubunits { get; public set; }
    [FhirElementAttribute("areaOfHybridisation")]
[DataMemberAttribute]
public FhirString AreaOfHybridisationElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string AreaOfHybridisation { get; public set; }
    [FhirElementAttribute("oligoNucleotideType")]
[DataMemberAttribute]
public CodeableConcept OligoNucleotideType { get; public set; }
    [FhirElementAttribute("subunit")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<SubunitComponent> Subunit { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public CodeableConcept get_SequenceType();
    public void set_SequenceType(CodeableConcept value);
    public Integer get_NumberOfSubunitsElement();
    public void set_NumberOfSubunitsElement(Integer value);
    public Nullable`1<int> get_NumberOfSubunits();
    public void set_NumberOfSubunits(Nullable`1<int> value);
    public FhirString get_AreaOfHybridisationElement();
    public void set_AreaOfHybridisationElement(FhirString value);
    public string get_AreaOfHybridisation();
    public void set_AreaOfHybridisation(string value);
    public CodeableConcept get_OligoNucleotideType();
    public void set_OligoNucleotideType(CodeableConcept value);
    public List`1<SubunitComponent> get_Subunit();
    public void set_Subunit(List`1<SubunitComponent> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SubstanceNucleicAcid/<get_Children>d__36")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SubstanceNucleicAcid/<get_NamedChildren>d__38")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SubstanceNucleicAcid/<GetElementPairs>d__40")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("SubstancePolymer", "http://hl7.org/fhir/StructureDefinition/SubstancePolymer")]
public class Hl7.Fhir.Model.SubstancePolymer : DomainResource {
    private CodeableConcept _Class;
    private CodeableConcept _Geometry;
    private List`1<CodeableConcept> _CopolymerConnectivity;
    private List`1<FhirString> _ModificationElement;
    private List`1<MonomerSetComponent> _MonomerSet;
    private List`1<RepeatComponent> _Repeat;
    public string TypeName { get; }
    [FhirElementAttribute("class")]
[DataMemberAttribute]
public CodeableConcept Class { get; public set; }
    [FhirElementAttribute("geometry")]
[DataMemberAttribute]
public CodeableConcept Geometry { get; public set; }
    [FhirElementAttribute("copolymerConnectivity")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> CopolymerConnectivity { get; public set; }
    [FhirElementAttribute("modification")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> ModificationElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Modification { get; public set; }
    [FhirElementAttribute("monomerSet")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<MonomerSetComponent> MonomerSet { get; public set; }
    [FhirElementAttribute("repeat")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RepeatComponent> Repeat { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public CodeableConcept get_Class();
    public void set_Class(CodeableConcept value);
    public CodeableConcept get_Geometry();
    public void set_Geometry(CodeableConcept value);
    public List`1<CodeableConcept> get_CopolymerConnectivity();
    public void set_CopolymerConnectivity(List`1<CodeableConcept> value);
    public List`1<FhirString> get_ModificationElement();
    public void set_ModificationElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_Modification();
    public void set_Modification(IEnumerable`1<string> value);
    public List`1<MonomerSetComponent> get_MonomerSet();
    public void set_MonomerSet(List`1<MonomerSetComponent> value);
    public List`1<RepeatComponent> get_Repeat();
    public void set_Repeat(List`1<RepeatComponent> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SubstancePolymer/<get_Children>d__40")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SubstancePolymer/<get_NamedChildren>d__42")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SubstancePolymer/<GetElementPairs>d__44")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("SubstanceProtein", "http://hl7.org/fhir/StructureDefinition/SubstanceProtein")]
public class Hl7.Fhir.Model.SubstanceProtein : DomainResource {
    private CodeableConcept _SequenceType;
    private Integer _NumberOfSubunitsElement;
    private List`1<FhirString> _DisulfideLinkageElement;
    private List`1<SubunitComponent> _Subunit;
    public string TypeName { get; }
    [FhirElementAttribute("sequenceType")]
[DataMemberAttribute]
public CodeableConcept SequenceType { get; public set; }
    [FhirElementAttribute("numberOfSubunits")]
[DataMemberAttribute]
public Integer NumberOfSubunitsElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<int> NumberOfSubunits { get; public set; }
    [FhirElementAttribute("disulfideLinkage")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> DisulfideLinkageElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> DisulfideLinkage { get; public set; }
    [FhirElementAttribute("subunit")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<SubunitComponent> Subunit { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public CodeableConcept get_SequenceType();
    public void set_SequenceType(CodeableConcept value);
    public Integer get_NumberOfSubunitsElement();
    public void set_NumberOfSubunitsElement(Integer value);
    public Nullable`1<int> get_NumberOfSubunits();
    public void set_NumberOfSubunits(Nullable`1<int> value);
    public List`1<FhirString> get_DisulfideLinkageElement();
    public void set_DisulfideLinkageElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_DisulfideLinkage();
    public void set_DisulfideLinkage(IEnumerable`1<string> value);
    public List`1<SubunitComponent> get_Subunit();
    public void set_Subunit(List`1<SubunitComponent> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SubstanceProtein/<get_Children>d__30")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SubstanceProtein/<get_NamedChildren>d__32")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SubstanceProtein/<GetElementPairs>d__34")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("SubstanceReferenceInformation", "http://hl7.org/fhir/StructureDefinition/SubstanceReferenceInformation")]
public class Hl7.Fhir.Model.SubstanceReferenceInformation : DomainResource {
    private FhirString _CommentElement;
    private List`1<GeneComponent> _Gene;
    private List`1<GeneElementComponent> _GeneElement;
    private List`1<ClassificationComponent> _Classification;
    private List`1<TargetComponent> _Target;
    public string TypeName { get; }
    [FhirElementAttribute("comment")]
[DataMemberAttribute]
public FhirString CommentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Comment { get; public set; }
    [FhirElementAttribute("gene")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<GeneComponent> Gene { get; public set; }
    [FhirElementAttribute("geneElement")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<GeneElementComponent> GeneElement { get; public set; }
    [FhirElementAttribute("classification")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ClassificationComponent> Classification { get; public set; }
    [FhirElementAttribute("target")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<TargetComponent> Target { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public FhirString get_CommentElement();
    public void set_CommentElement(FhirString value);
    public string get_Comment();
    public void set_Comment(string value);
    public List`1<GeneComponent> get_Gene();
    public void set_Gene(List`1<GeneComponent> value);
    public List`1<GeneElementComponent> get_GeneElement();
    public void set_GeneElement(List`1<GeneElementComponent> value);
    public List`1<ClassificationComponent> get_Classification();
    public void set_Classification(List`1<ClassificationComponent> value);
    public List`1<TargetComponent> get_Target();
    public void set_Target(List`1<TargetComponent> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SubstanceReferenceInformation/<get_Children>d__34")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SubstanceReferenceInformation/<get_NamedChildren>d__36")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SubstanceReferenceInformation/<GetElementPairs>d__38")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("SubstanceSourceMaterial", "http://hl7.org/fhir/StructureDefinition/SubstanceSourceMaterial")]
public class Hl7.Fhir.Model.SubstanceSourceMaterial : DomainResource {
    private CodeableConcept _SourceMaterialClass;
    private CodeableConcept _SourceMaterialType;
    private CodeableConcept _SourceMaterialState;
    private Identifier _OrganismId;
    private FhirString _OrganismNameElement;
    private List`1<Identifier> _ParentSubstanceId;
    private List`1<FhirString> _ParentSubstanceNameElement;
    private List`1<CodeableConcept> _CountryOfOrigin;
    private List`1<FhirString> _GeographicalLocationElement;
    private CodeableConcept _DevelopmentStage;
    private List`1<FractionDescriptionComponent> _FractionDescription;
    private OrganismComponent _Organism;
    private List`1<PartDescriptionComponent> _PartDescription;
    public string TypeName { get; }
    [FhirElementAttribute("sourceMaterialClass")]
[DataMemberAttribute]
public CodeableConcept SourceMaterialClass { get; public set; }
    [FhirElementAttribute("sourceMaterialType")]
[DataMemberAttribute]
public CodeableConcept SourceMaterialType { get; public set; }
    [FhirElementAttribute("sourceMaterialState")]
[DataMemberAttribute]
public CodeableConcept SourceMaterialState { get; public set; }
    [FhirElementAttribute("organismId")]
[DataMemberAttribute]
public Identifier OrganismId { get; public set; }
    [FhirElementAttribute("organismName")]
[DataMemberAttribute]
public FhirString OrganismNameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string OrganismName { get; public set; }
    [FhirElementAttribute("parentSubstanceId")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> ParentSubstanceId { get; public set; }
    [FhirElementAttribute("parentSubstanceName")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> ParentSubstanceNameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> ParentSubstanceName { get; public set; }
    [FhirElementAttribute("countryOfOrigin")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> CountryOfOrigin { get; public set; }
    [FhirElementAttribute("geographicalLocation")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> GeographicalLocationElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> GeographicalLocation { get; public set; }
    [FhirElementAttribute("developmentStage")]
[DataMemberAttribute]
public CodeableConcept DevelopmentStage { get; public set; }
    [FhirElementAttribute("fractionDescription")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FractionDescriptionComponent> FractionDescription { get; public set; }
    [FhirElementAttribute("organism")]
[DataMemberAttribute]
public OrganismComponent Organism { get; public set; }
    [FhirElementAttribute("partDescription")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<PartDescriptionComponent> PartDescription { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public CodeableConcept get_SourceMaterialClass();
    public void set_SourceMaterialClass(CodeableConcept value);
    public CodeableConcept get_SourceMaterialType();
    public void set_SourceMaterialType(CodeableConcept value);
    public CodeableConcept get_SourceMaterialState();
    public void set_SourceMaterialState(CodeableConcept value);
    public Identifier get_OrganismId();
    public void set_OrganismId(Identifier value);
    public FhirString get_OrganismNameElement();
    public void set_OrganismNameElement(FhirString value);
    public string get_OrganismName();
    public void set_OrganismName(string value);
    public List`1<Identifier> get_ParentSubstanceId();
    public void set_ParentSubstanceId(List`1<Identifier> value);
    public List`1<FhirString> get_ParentSubstanceNameElement();
    public void set_ParentSubstanceNameElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_ParentSubstanceName();
    public void set_ParentSubstanceName(IEnumerable`1<string> value);
    public List`1<CodeableConcept> get_CountryOfOrigin();
    public void set_CountryOfOrigin(List`1<CodeableConcept> value);
    public List`1<FhirString> get_GeographicalLocationElement();
    public void set_GeographicalLocationElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_GeographicalLocation();
    public void set_GeographicalLocation(IEnumerable`1<string> value);
    public CodeableConcept get_DevelopmentStage();
    public void set_DevelopmentStage(CodeableConcept value);
    public List`1<FractionDescriptionComponent> get_FractionDescription();
    public void set_FractionDescription(List`1<FractionDescriptionComponent> value);
    public OrganismComponent get_Organism();
    public void set_Organism(OrganismComponent value);
    public List`1<PartDescriptionComponent> get_PartDescription();
    public void set_PartDescription(List`1<PartDescriptionComponent> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SubstanceSourceMaterial/<get_Children>d__74")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SubstanceSourceMaterial/<get_NamedChildren>d__76")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SubstanceSourceMaterial/<GetElementPairs>d__78")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("SubstanceSpecification", "http://hl7.org/fhir/StructureDefinition/SubstanceSpecification")]
public class Hl7.Fhir.Model.SubstanceSpecification : DomainResource {
    private Identifier _Identifier;
    private CodeableConcept _Type;
    private CodeableConcept _Status;
    private CodeableConcept _Domain;
    private FhirString _DescriptionElement;
    private List`1<ResourceReference> _Source;
    private FhirString _CommentElement;
    private List`1<MoietyComponent> _Moiety;
    private List`1<PropertyComponent> _Property;
    private ResourceReference _ReferenceInformation;
    private StructureComponent _Structure;
    private List`1<CodeComponent> _Code;
    private List`1<NameComponent> _Name;
    private List`1<MolecularWeightComponent> _MolecularWeight;
    private List`1<RelationshipComponent> _Relationship;
    private ResourceReference _NucleicAcid;
    private ResourceReference _Polymer;
    private ResourceReference _Protein;
    private ResourceReference _SourceMaterial;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[DataMemberAttribute]
public Identifier Identifier { get; public set; }
    [FhirElementAttribute("type")]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("status")]
[DataMemberAttribute]
public CodeableConcept Status { get; public set; }
    [FhirElementAttribute("domain")]
[DataMemberAttribute]
public CodeableConcept Domain { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public FhirString DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("source")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Source { get; public set; }
    [FhirElementAttribute("comment")]
[DataMemberAttribute]
public FhirString CommentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Comment { get; public set; }
    [FhirElementAttribute("moiety")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<MoietyComponent> Moiety { get; public set; }
    [FhirElementAttribute("property")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<PropertyComponent> Property { get; public set; }
    [FhirElementAttribute("referenceInformation")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference ReferenceInformation { get; public set; }
    [FhirElementAttribute("structure")]
[DataMemberAttribute]
public StructureComponent Structure { get; public set; }
    [FhirElementAttribute("code")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeComponent> Code { get; public set; }
    [FhirElementAttribute("name")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<NameComponent> Name { get; public set; }
    [FhirElementAttribute("molecularWeight")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<MolecularWeightComponent> MolecularWeight { get; public set; }
    [FhirElementAttribute("relationship")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<RelationshipComponent> Relationship { get; public set; }
    [FhirElementAttribute("nucleicAcid")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference NucleicAcid { get; public set; }
    [FhirElementAttribute("polymer")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Polymer { get; public set; }
    [FhirElementAttribute("protein")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Protein { get; public set; }
    [FhirElementAttribute("sourceMaterial")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference SourceMaterial { get; public set; }
    private Identifier Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Identifier get_Identifier();
    public void set_Identifier(Identifier value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public CodeableConcept get_Status();
    public void set_Status(CodeableConcept value);
    public CodeableConcept get_Domain();
    public void set_Domain(CodeableConcept value);
    public FhirString get_DescriptionElement();
    public void set_DescriptionElement(FhirString value);
    public string get_Description();
    public void set_Description(string value);
    public List`1<ResourceReference> get_Source();
    public void set_Source(List`1<ResourceReference> value);
    public FhirString get_CommentElement();
    public void set_CommentElement(FhirString value);
    public string get_Comment();
    public void set_Comment(string value);
    public List`1<MoietyComponent> get_Moiety();
    public void set_Moiety(List`1<MoietyComponent> value);
    public List`1<PropertyComponent> get_Property();
    public void set_Property(List`1<PropertyComponent> value);
    public ResourceReference get_ReferenceInformation();
    public void set_ReferenceInformation(ResourceReference value);
    public StructureComponent get_Structure();
    public void set_Structure(StructureComponent value);
    public List`1<CodeComponent> get_Code();
    public void set_Code(List`1<CodeComponent> value);
    public List`1<NameComponent> get_Name();
    public void set_Name(List`1<NameComponent> value);
    public List`1<MolecularWeightComponent> get_MolecularWeight();
    public void set_MolecularWeight(List`1<MolecularWeightComponent> value);
    public List`1<RelationshipComponent> get_Relationship();
    public void set_Relationship(List`1<RelationshipComponent> value);
    public ResourceReference get_NucleicAcid();
    public void set_NucleicAcid(ResourceReference value);
    public ResourceReference get_Polymer();
    public void set_Polymer(ResourceReference value);
    public ResourceReference get_Protein();
    public void set_Protein(ResourceReference value);
    public ResourceReference get_SourceMaterial();
    public void set_SourceMaterial(ResourceReference value);
    private sealed virtual override Identifier Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.set_Identifier(Identifier value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SubstanceSpecification/<get_Children>d__102")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SubstanceSpecification/<get_NamedChildren>d__104")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SubstanceSpecification/<GetElementPairs>d__106")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("SupplyDelivery", "http://hl7.org/fhir/StructureDefinition/SupplyDelivery")]
public class Hl7.Fhir.Model.SupplyDelivery : DomainResource {
    private List`1<Identifier> _Identifier;
    private List`1<ResourceReference> _BasedOn;
    private List`1<ResourceReference> _PartOf;
    private Code`1<SupplyDeliveryStatus> _StatusElement;
    private ResourceReference _Patient;
    private CodeableConcept _Type;
    private SuppliedItemComponent _SuppliedItem;
    private DataType _Occurrence;
    private ResourceReference _Supplier;
    private ResourceReference _Destination;
    private List`1<ResourceReference> _Receiver;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("basedOn")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> BasedOn { get; public set; }
    [FhirElementAttribute("partOf")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> PartOf { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("SupplyDeliveryStatus")]
[DataMemberAttribute]
public Code`1<SupplyDeliveryStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<SupplyDeliveryStatus> Status { get; public set; }
    [FhirElementAttribute("patient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Patient { get; public set; }
    [FhirElementAttribute("type")]
[BindingAttribute("SupplyDeliveryType")]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("suppliedItem")]
[DataMemberAttribute]
public SuppliedItemComponent SuppliedItem { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Occurrence { get; public set; }
    [FhirElementAttribute("supplier")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Supplier { get; public set; }
    [FhirElementAttribute("destination")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Destination { get; public set; }
    [FhirElementAttribute("receiver")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Receiver { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public List`1<ResourceReference> get_BasedOn();
    public void set_BasedOn(List`1<ResourceReference> value);
    public List`1<ResourceReference> get_PartOf();
    public void set_PartOf(List`1<ResourceReference> value);
    public Code`1<SupplyDeliveryStatus> get_StatusElement();
    public void set_StatusElement(Code`1<SupplyDeliveryStatus> value);
    public Nullable`1<SupplyDeliveryStatus> get_Status();
    public void set_Status(Nullable`1<SupplyDeliveryStatus> value);
    public ResourceReference get_Patient();
    public void set_Patient(ResourceReference value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public SuppliedItemComponent get_SuppliedItem();
    public void set_SuppliedItem(SuppliedItemComponent value);
    public DataType get_Occurrence();
    public void set_Occurrence(DataType value);
    public ResourceReference get_Supplier();
    public void set_Supplier(ResourceReference value);
    public ResourceReference get_Destination();
    public void set_Destination(ResourceReference value);
    public List`1<ResourceReference> get_Receiver();
    public void set_Receiver(List`1<ResourceReference> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SupplyDelivery/<get_Children>d__64")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SupplyDelivery/<get_NamedChildren>d__66")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SupplyDelivery/<GetElementPairs>d__68")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("SupplyRequest", "http://hl7.org/fhir/StructureDefinition/SupplyRequest")]
public class Hl7.Fhir.Model.SupplyRequest : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<SupplyRequestStatus> _StatusElement;
    private CodeableConcept _Category;
    private Code`1<RequestPriority> _PriorityElement;
    private DataType _Item;
    private Quantity _Quantity;
    private List`1<ParameterComponent> _Parameter;
    private DataType _Occurrence;
    private FhirDateTime _AuthoredOnElement;
    private ResourceReference _Requester;
    private List`1<ResourceReference> _Supplier;
    private List`1<CodeableConcept> _ReasonCode;
    private List`1<ResourceReference> _ReasonReference;
    private ResourceReference _DeliverFrom;
    private ResourceReference _DeliverTo;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("SupplyRequestStatus")]
[DataMemberAttribute]
public Code`1<SupplyRequestStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<SupplyRequestStatus> Status { get; public set; }
    [FhirElementAttribute("category")]
[BindingAttribute("SupplyRequestKind")]
[DataMemberAttribute]
public CodeableConcept Category { get; public set; }
    [FhirElementAttribute("priority")]
[DeclaredTypeAttribute]
[BindingAttribute("RequestPriority")]
[DataMemberAttribute]
public Code`1<RequestPriority> PriorityElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<RequestPriority> Priority { get; public set; }
    [FhirElementAttribute]
[BindingAttribute("SupplyRequestItem")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public DataType Item { get; public set; }
    [FhirElementAttribute("quantity")]
[CardinalityAttribute]
[DataMemberAttribute]
public Quantity Quantity { get; public set; }
    [FhirElementAttribute("parameter")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ParameterComponent> Parameter { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Occurrence { get; public set; }
    [FhirElementAttribute("authoredOn")]
[DataMemberAttribute]
public FhirDateTime AuthoredOnElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string AuthoredOn { get; public set; }
    [FhirElementAttribute("requester")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Requester { get; public set; }
    [FhirElementAttribute("supplier")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Supplier { get; public set; }
    [FhirElementAttribute("reasonCode")]
[BindingAttribute("SupplyRequestReason")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ReasonCode { get; public set; }
    [FhirElementAttribute("reasonReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> ReasonReference { get; public set; }
    [FhirElementAttribute("deliverFrom")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference DeliverFrom { get; public set; }
    [FhirElementAttribute("deliverTo")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference DeliverTo { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<SupplyRequestStatus> get_StatusElement();
    public void set_StatusElement(Code`1<SupplyRequestStatus> value);
    public Nullable`1<SupplyRequestStatus> get_Status();
    public void set_Status(Nullable`1<SupplyRequestStatus> value);
    public CodeableConcept get_Category();
    public void set_Category(CodeableConcept value);
    public Code`1<RequestPriority> get_PriorityElement();
    public void set_PriorityElement(Code`1<RequestPriority> value);
    public Nullable`1<RequestPriority> get_Priority();
    public void set_Priority(Nullable`1<RequestPriority> value);
    public DataType get_Item();
    public void set_Item(DataType value);
    public Quantity get_Quantity();
    public void set_Quantity(Quantity value);
    public List`1<ParameterComponent> get_Parameter();
    public void set_Parameter(List`1<ParameterComponent> value);
    public DataType get_Occurrence();
    public void set_Occurrence(DataType value);
    public FhirDateTime get_AuthoredOnElement();
    public void set_AuthoredOnElement(FhirDateTime value);
    public string get_AuthoredOn();
    public void set_AuthoredOn(string value);
    public ResourceReference get_Requester();
    public void set_Requester(ResourceReference value);
    public List`1<ResourceReference> get_Supplier();
    public void set_Supplier(List`1<ResourceReference> value);
    public List`1<CodeableConcept> get_ReasonCode();
    public void set_ReasonCode(List`1<CodeableConcept> value);
    public List`1<ResourceReference> get_ReasonReference();
    public void set_ReasonReference(List`1<ResourceReference> value);
    public ResourceReference get_DeliverFrom();
    public void set_DeliverFrom(ResourceReference value);
    public ResourceReference get_DeliverTo();
    public void set_DeliverTo(ResourceReference value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SupplyRequest/<get_Children>d__85")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SupplyRequest/<get_NamedChildren>d__87")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.SupplyRequest/<GetElementPairs>d__89")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Task", "http://hl7.org/fhir/StructureDefinition/Task")]
public class Hl7.Fhir.Model.Task : DomainResource {
    private List`1<Identifier> _Identifier;
    private Canonical _InstantiatesCanonicalElement;
    private FhirUri _InstantiatesUriElement;
    private List`1<ResourceReference> _BasedOn;
    private Identifier _GroupIdentifier;
    private List`1<ResourceReference> _PartOf;
    private Code`1<TaskStatus> _StatusElement;
    private CodeableConcept _StatusReason;
    private CodeableConcept _BusinessStatus;
    private Code`1<TaskIntent> _IntentElement;
    private Code`1<RequestPriority> _PriorityElement;
    private CodeableConcept _Code;
    private FhirString _DescriptionElement;
    private ResourceReference _Focus;
    private ResourceReference _For;
    private ResourceReference _Encounter;
    private Period _ExecutionPeriod;
    private FhirDateTime _AuthoredOnElement;
    private FhirDateTime _LastModifiedElement;
    private ResourceReference _Requester;
    private List`1<CodeableConcept> _PerformerType;
    private ResourceReference _Owner;
    private ResourceReference _Location;
    private CodeableConcept _ReasonCode;
    private ResourceReference _ReasonReference;
    private List`1<ResourceReference> _Insurance;
    private List`1<Annotation> _Note;
    private List`1<ResourceReference> _RelevantHistory;
    private RestrictionComponent _Restriction;
    private List`1<ParameterComponent> _Input;
    private List`1<OutputComponent> _Output;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("instantiatesCanonical")]
[DataMemberAttribute]
public Canonical InstantiatesCanonicalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string InstantiatesCanonical { get; public set; }
    [FhirElementAttribute("instantiatesUri")]
[DataMemberAttribute]
public FhirUri InstantiatesUriElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string InstantiatesUri { get; public set; }
    [FhirElementAttribute("basedOn")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> BasedOn { get; public set; }
    [FhirElementAttribute("groupIdentifier")]
[DataMemberAttribute]
public Identifier GroupIdentifier { get; public set; }
    [FhirElementAttribute("partOf")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> PartOf { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("TaskStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<TaskStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<TaskStatus> Status { get; public set; }
    [FhirElementAttribute("statusReason")]
[BindingAttribute("TaskStatusReason")]
[DataMemberAttribute]
public CodeableConcept StatusReason { get; public set; }
    [FhirElementAttribute("businessStatus")]
[BindingAttribute("TaskBusinessStatus")]
[DataMemberAttribute]
public CodeableConcept BusinessStatus { get; public set; }
    [FhirElementAttribute("intent")]
[DeclaredTypeAttribute]
[BindingAttribute("TaskIntent")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<TaskIntent> IntentElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<TaskIntent> Intent { get; public set; }
    [FhirElementAttribute("priority")]
[DeclaredTypeAttribute]
[BindingAttribute("TaskPriority")]
[DataMemberAttribute]
public Code`1<RequestPriority> PriorityElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<RequestPriority> Priority { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("TaskCode")]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public FhirString DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("focus")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Focus { get; public set; }
    [FhirElementAttribute("for")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference For { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute("executionPeriod")]
[DataMemberAttribute]
public Period ExecutionPeriod { get; public set; }
    [FhirElementAttribute("authoredOn")]
[DataMemberAttribute]
public FhirDateTime AuthoredOnElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string AuthoredOn { get; public set; }
    [FhirElementAttribute("lastModified")]
[DataMemberAttribute]
public FhirDateTime LastModifiedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string LastModified { get; public set; }
    [FhirElementAttribute("requester")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Requester { get; public set; }
    [FhirElementAttribute("performerType")]
[BindingAttribute("TaskPerformerType")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> PerformerType { get; public set; }
    [FhirElementAttribute("owner")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Owner { get; public set; }
    [FhirElementAttribute("location")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Location { get; public set; }
    [FhirElementAttribute("reasonCode")]
[BindingAttribute("TaskReason")]
[DataMemberAttribute]
public CodeableConcept ReasonCode { get; public set; }
    [FhirElementAttribute("reasonReference")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference ReasonReference { get; public set; }
    [FhirElementAttribute("insurance")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Insurance { get; public set; }
    [FhirElementAttribute("note")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Annotation> Note { get; public set; }
    [FhirElementAttribute("relevantHistory")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> RelevantHistory { get; public set; }
    [FhirElementAttribute("restriction")]
[DataMemberAttribute]
public RestrictionComponent Restriction { get; public set; }
    [FhirElementAttribute("input")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ParameterComponent> Input { get; public set; }
    [FhirElementAttribute("output")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<OutputComponent> Output { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    private CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.Code { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Canonical get_InstantiatesCanonicalElement();
    public void set_InstantiatesCanonicalElement(Canonical value);
    public string get_InstantiatesCanonical();
    public void set_InstantiatesCanonical(string value);
    public FhirUri get_InstantiatesUriElement();
    public void set_InstantiatesUriElement(FhirUri value);
    public string get_InstantiatesUri();
    public void set_InstantiatesUri(string value);
    public List`1<ResourceReference> get_BasedOn();
    public void set_BasedOn(List`1<ResourceReference> value);
    public Identifier get_GroupIdentifier();
    public void set_GroupIdentifier(Identifier value);
    public List`1<ResourceReference> get_PartOf();
    public void set_PartOf(List`1<ResourceReference> value);
    public Code`1<TaskStatus> get_StatusElement();
    public void set_StatusElement(Code`1<TaskStatus> value);
    public Nullable`1<TaskStatus> get_Status();
    public void set_Status(Nullable`1<TaskStatus> value);
    public CodeableConcept get_StatusReason();
    public void set_StatusReason(CodeableConcept value);
    public CodeableConcept get_BusinessStatus();
    public void set_BusinessStatus(CodeableConcept value);
    public Code`1<TaskIntent> get_IntentElement();
    public void set_IntentElement(Code`1<TaskIntent> value);
    public Nullable`1<TaskIntent> get_Intent();
    public void set_Intent(Nullable`1<TaskIntent> value);
    public Code`1<RequestPriority> get_PriorityElement();
    public void set_PriorityElement(Code`1<RequestPriority> value);
    public Nullable`1<RequestPriority> get_Priority();
    public void set_Priority(Nullable`1<RequestPriority> value);
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public FhirString get_DescriptionElement();
    public void set_DescriptionElement(FhirString value);
    public string get_Description();
    public void set_Description(string value);
    public ResourceReference get_Focus();
    public void set_Focus(ResourceReference value);
    public ResourceReference get_For();
    public void set_For(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public Period get_ExecutionPeriod();
    public void set_ExecutionPeriod(Period value);
    public FhirDateTime get_AuthoredOnElement();
    public void set_AuthoredOnElement(FhirDateTime value);
    public string get_AuthoredOn();
    public void set_AuthoredOn(string value);
    public FhirDateTime get_LastModifiedElement();
    public void set_LastModifiedElement(FhirDateTime value);
    public string get_LastModified();
    public void set_LastModified(string value);
    public ResourceReference get_Requester();
    public void set_Requester(ResourceReference value);
    public List`1<CodeableConcept> get_PerformerType();
    public void set_PerformerType(List`1<CodeableConcept> value);
    public ResourceReference get_Owner();
    public void set_Owner(ResourceReference value);
    public ResourceReference get_Location();
    public void set_Location(ResourceReference value);
    public CodeableConcept get_ReasonCode();
    public void set_ReasonCode(CodeableConcept value);
    public ResourceReference get_ReasonReference();
    public void set_ReasonReference(ResourceReference value);
    public List`1<ResourceReference> get_Insurance();
    public void set_Insurance(List`1<ResourceReference> value);
    public List`1<Annotation> get_Note();
    public void set_Note(List`1<Annotation> value);
    public List`1<ResourceReference> get_RelevantHistory();
    public void set_RelevantHistory(List`1<ResourceReference> value);
    public RestrictionComponent get_Restriction();
    public void set_Restriction(RestrictionComponent value);
    public List`1<ParameterComponent> get_Input();
    public void set_Input(List`1<ParameterComponent> value);
    public List`1<OutputComponent> get_Output();
    public void set_Output(List`1<OutputComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    private sealed virtual override CodeableConcept Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.get_Code();
    private sealed virtual override void Hl7.Fhir.Model.ICoded<Hl7.Fhir.Model.CodeableConcept>.set_Code(CodeableConcept value);
    private sealed virtual override IEnumerable`1<Coding> Hl7.Fhir.Model.ICoded.ToCodings();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Task/<get_Children>d__167")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Task/<get_NamedChildren>d__169")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Task/<GetElementPairs>d__171")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("TerminologyCapabilities", "http://hl7.org/fhir/StructureDefinition/TerminologyCapabilities")]
public class Hl7.Fhir.Model.TerminologyCapabilities : DomainResource {
    private FhirUri _UrlElement;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private FhirString _TitleElement;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirBoolean _ExperimentalElement;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _PurposeElement;
    private Markdown _CopyrightElement;
    private Code`1<CapabilityStatementKind> _KindElement;
    private SoftwareComponent _Software;
    private ImplementationComponent _Implementation;
    private FhirBoolean _LockedDateElement;
    private List`1<CodeSystemComponent> _CodeSystem;
    private ExpansionComponent _Expansion;
    private Code`1<CodeSearchSupport> _CodeSearchElement;
    private ValidateCodeComponent _ValidateCode;
    private TranslationComponent _Translation;
    private ClosureComponent _Closure;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("experimental")]
[DataMemberAttribute]
public FhirBoolean ExperimentalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Experimental { get; public set; }
    [FhirElementAttribute("date")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("purpose")]
[DataMemberAttribute]
public Markdown PurposeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Purpose { get; public set; }
    [FhirElementAttribute("copyright")]
[DataMemberAttribute]
public Markdown CopyrightElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Copyright { get; public set; }
    [FhirElementAttribute("kind")]
[DeclaredTypeAttribute]
[BindingAttribute("CapabilityStatementKind")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<CapabilityStatementKind> KindElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<CapabilityStatementKind> Kind { get; public set; }
    [FhirElementAttribute("software")]
[DataMemberAttribute]
public SoftwareComponent Software { get; public set; }
    [FhirElementAttribute("implementation")]
[DataMemberAttribute]
public ImplementationComponent Implementation { get; public set; }
    [FhirElementAttribute("lockedDate")]
[DataMemberAttribute]
public FhirBoolean LockedDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> LockedDate { get; public set; }
    [FhirElementAttribute("codeSystem")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeSystemComponent> CodeSystem { get; public set; }
    [FhirElementAttribute("expansion")]
[DataMemberAttribute]
public ExpansionComponent Expansion { get; public set; }
    [FhirElementAttribute("codeSearch")]
[DeclaredTypeAttribute]
[BindingAttribute("CodeSearchSupport")]
[DataMemberAttribute]
public Code`1<CodeSearchSupport> CodeSearchElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<CodeSearchSupport> CodeSearch { get; public set; }
    [FhirElementAttribute("validateCode")]
[DataMemberAttribute]
public ValidateCodeComponent ValidateCode { get; public set; }
    [FhirElementAttribute("translation")]
[DataMemberAttribute]
public TranslationComponent Translation { get; public set; }
    [FhirElementAttribute("closure")]
[DataMemberAttribute]
public ClosureComponent Closure { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public sealed virtual FhirUri get_UrlElement();
    public sealed virtual void set_UrlElement(FhirUri value);
    public sealed virtual string get_Url();
    public sealed virtual void set_Url(string value);
    public sealed virtual FhirString get_VersionElement();
    public sealed virtual void set_VersionElement(FhirString value);
    public sealed virtual string get_Version();
    public sealed virtual void set_Version(string value);
    public sealed virtual FhirString get_NameElement();
    public sealed virtual void set_NameElement(FhirString value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public sealed virtual Code`1<PublicationStatus> get_StatusElement();
    public sealed virtual void set_StatusElement(Code`1<PublicationStatus> value);
    public sealed virtual Nullable`1<PublicationStatus> get_Status();
    public sealed virtual void set_Status(Nullable`1<PublicationStatus> value);
    public sealed virtual FhirBoolean get_ExperimentalElement();
    public sealed virtual void set_ExperimentalElement(FhirBoolean value);
    public sealed virtual Nullable`1<bool> get_Experimental();
    public sealed virtual void set_Experimental(Nullable`1<bool> value);
    public sealed virtual FhirDateTime get_DateElement();
    public sealed virtual void set_DateElement(FhirDateTime value);
    public sealed virtual string get_Date();
    public sealed virtual void set_Date(string value);
    public sealed virtual FhirString get_PublisherElement();
    public sealed virtual void set_PublisherElement(FhirString value);
    public sealed virtual string get_Publisher();
    public sealed virtual void set_Publisher(string value);
    public sealed virtual List`1<ContactDetail> get_Contact();
    public sealed virtual void set_Contact(List`1<ContactDetail> value);
    public sealed virtual Markdown get_DescriptionElement();
    public sealed virtual void set_DescriptionElement(Markdown value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual List`1<UsageContext> get_UseContext();
    public sealed virtual void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public sealed virtual Markdown get_PurposeElement();
    public sealed virtual void set_PurposeElement(Markdown value);
    public sealed virtual string get_Purpose();
    public sealed virtual void set_Purpose(string value);
    public Markdown get_CopyrightElement();
    public void set_CopyrightElement(Markdown value);
    public string get_Copyright();
    public void set_Copyright(string value);
    public Code`1<CapabilityStatementKind> get_KindElement();
    public void set_KindElement(Code`1<CapabilityStatementKind> value);
    public Nullable`1<CapabilityStatementKind> get_Kind();
    public void set_Kind(Nullable`1<CapabilityStatementKind> value);
    public SoftwareComponent get_Software();
    public void set_Software(SoftwareComponent value);
    public ImplementationComponent get_Implementation();
    public void set_Implementation(ImplementationComponent value);
    public FhirBoolean get_LockedDateElement();
    public void set_LockedDateElement(FhirBoolean value);
    public Nullable`1<bool> get_LockedDate();
    public void set_LockedDate(Nullable`1<bool> value);
    public List`1<CodeSystemComponent> get_CodeSystem();
    public void set_CodeSystem(List`1<CodeSystemComponent> value);
    public ExpansionComponent get_Expansion();
    public void set_Expansion(ExpansionComponent value);
    public Code`1<CodeSearchSupport> get_CodeSearchElement();
    public void set_CodeSearchElement(Code`1<CodeSearchSupport> value);
    public Nullable`1<CodeSearchSupport> get_CodeSearch();
    public void set_CodeSearch(Nullable`1<CodeSearchSupport> value);
    public ValidateCodeComponent get_ValidateCode();
    public void set_ValidateCode(ValidateCodeComponent value);
    public TranslationComponent get_Translation();
    public void set_Translation(TranslationComponent value);
    public ClosureComponent get_Closure();
    public void set_Closure(ClosureComponent value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.TerminologyCapabilities/<get_Children>d__156")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.TerminologyCapabilities/<get_NamedChildren>d__158")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.TerminologyCapabilities/<GetElementPairs>d__160")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("TestReport", "http://hl7.org/fhir/StructureDefinition/TestReport")]
public class Hl7.Fhir.Model.TestReport : DomainResource {
    private Identifier _Identifier;
    private FhirString _NameElement;
    private Code`1<TestReportStatus> _StatusElement;
    private ResourceReference _TestScript;
    private Code`1<TestReportResult> _ResultElement;
    private FhirDecimal _ScoreElement;
    private FhirString _TesterElement;
    private FhirDateTime _IssuedElement;
    private List`1<ParticipantComponent> _Participant;
    private SetupComponent _Setup;
    private List`1<TestComponent> _Test;
    private TeardownComponent _Teardown;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[DataMemberAttribute]
public Identifier Identifier { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("TestReportStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<TestReportStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<TestReportStatus> Status { get; public set; }
    [FhirElementAttribute("testScript")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference TestScript { get; public set; }
    [FhirElementAttribute("result")]
[DeclaredTypeAttribute]
[BindingAttribute("TestReportResult")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<TestReportResult> ResultElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<TestReportResult> Result { get; public set; }
    [FhirElementAttribute("score")]
[DataMemberAttribute]
public FhirDecimal ScoreElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<decimal> Score { get; public set; }
    [FhirElementAttribute("tester")]
[DataMemberAttribute]
public FhirString TesterElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Tester { get; public set; }
    [FhirElementAttribute("issued")]
[DataMemberAttribute]
public FhirDateTime IssuedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Issued { get; public set; }
    [FhirElementAttribute("participant")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ParticipantComponent> Participant { get; public set; }
    [FhirElementAttribute("setup")]
[DataMemberAttribute]
public SetupComponent Setup { get; public set; }
    [FhirElementAttribute("test")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<TestComponent> Test { get; public set; }
    [FhirElementAttribute("teardown")]
[DataMemberAttribute]
public TeardownComponent Teardown { get; public set; }
    private Identifier Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Identifier get_Identifier();
    public void set_Identifier(Identifier value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public Code`1<TestReportStatus> get_StatusElement();
    public void set_StatusElement(Code`1<TestReportStatus> value);
    public Nullable`1<TestReportStatus> get_Status();
    public void set_Status(Nullable`1<TestReportStatus> value);
    public ResourceReference get_TestScript();
    public void set_TestScript(ResourceReference value);
    public Code`1<TestReportResult> get_ResultElement();
    public void set_ResultElement(Code`1<TestReportResult> value);
    public Nullable`1<TestReportResult> get_Result();
    public void set_Result(Nullable`1<TestReportResult> value);
    public FhirDecimal get_ScoreElement();
    public void set_ScoreElement(FhirDecimal value);
    public Nullable`1<decimal> get_Score();
    public void set_Score(Nullable`1<decimal> value);
    public FhirString get_TesterElement();
    public void set_TesterElement(FhirString value);
    public string get_Tester();
    public void set_Tester(string value);
    public FhirDateTime get_IssuedElement();
    public void set_IssuedElement(FhirDateTime value);
    public string get_Issued();
    public void set_Issued(string value);
    public List`1<ParticipantComponent> get_Participant();
    public void set_Participant(List`1<ParticipantComponent> value);
    public SetupComponent get_Setup();
    public void set_Setup(SetupComponent value);
    public List`1<TestComponent> get_Test();
    public void set_Test(List`1<TestComponent> value);
    public TeardownComponent get_Teardown();
    public void set_Teardown(TeardownComponent value);
    private sealed virtual override Identifier Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.set_Identifier(Identifier value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.TestReport/<get_Children>d__89")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.TestReport/<get_NamedChildren>d__91")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.TestReport/<GetElementPairs>d__93")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("TestScript", "http://hl7.org/fhir/StructureDefinition/TestScript")]
public class Hl7.Fhir.Model.TestScript : DomainResource {
    private FhirUri _UrlElement;
    private Identifier _Identifier;
    private FhirString _VersionElement;
    private FhirString _NameElement;
    private FhirString _TitleElement;
    private Code`1<PublicationStatus> _StatusElement;
    private FhirBoolean _ExperimentalElement;
    private FhirDateTime _DateElement;
    private FhirString _PublisherElement;
    private List`1<ContactDetail> _Contact;
    private Markdown _DescriptionElement;
    private List`1<UsageContext> _UseContext;
    private List`1<CodeableConcept> _Jurisdiction;
    private Markdown _PurposeElement;
    private Markdown _CopyrightElement;
    private List`1<OriginComponent> _Origin;
    private List`1<DestinationComponent> _Destination;
    private MetadataComponent _Metadata;
    private List`1<FixtureComponent> _Fixture;
    private List`1<ResourceReference> _Profile;
    private List`1<VariableComponent> _Variable;
    private SetupComponent _Setup;
    private List`1<TestComponent> _Test;
    private TeardownComponent _Teardown;
    public string TypeName { get; }
    [FhirElementAttribute("url")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirUri UrlElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("identifier")]
[DataMemberAttribute]
public Identifier Identifier { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("name")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("title")]
[DataMemberAttribute]
public FhirString TitleElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Title { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("PublicationStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<PublicationStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<PublicationStatus> Status { get; public set; }
    [FhirElementAttribute("experimental")]
[DataMemberAttribute]
public FhirBoolean ExperimentalElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> Experimental { get; public set; }
    [FhirElementAttribute("date")]
[DataMemberAttribute]
public FhirDateTime DateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Date { get; public set; }
    [FhirElementAttribute("publisher")]
[DataMemberAttribute]
public FhirString PublisherElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Publisher { get; public set; }
    [FhirElementAttribute("contact")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactDetail> Contact { get; public set; }
    [FhirElementAttribute("description")]
[DataMemberAttribute]
public Markdown DescriptionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Description { get; public set; }
    [FhirElementAttribute("useContext")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<UsageContext> UseContext { get; public set; }
    [FhirElementAttribute("jurisdiction")]
[BindingAttribute("Jurisdiction")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> Jurisdiction { get; public set; }
    [FhirElementAttribute("purpose")]
[DataMemberAttribute]
public Markdown PurposeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Purpose { get; public set; }
    [FhirElementAttribute("copyright")]
[DataMemberAttribute]
public Markdown CopyrightElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Copyright { get; public set; }
    [FhirElementAttribute("origin")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<OriginComponent> Origin { get; public set; }
    [FhirElementAttribute("destination")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<DestinationComponent> Destination { get; public set; }
    [FhirElementAttribute("metadata")]
[DataMemberAttribute]
public MetadataComponent Metadata { get; public set; }
    [FhirElementAttribute("fixture")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FixtureComponent> Fixture { get; public set; }
    [FhirElementAttribute("profile")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Profile { get; public set; }
    [FhirElementAttribute("variable")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<VariableComponent> Variable { get; public set; }
    [FhirElementAttribute("setup")]
[DataMemberAttribute]
public SetupComponent Setup { get; public set; }
    [FhirElementAttribute("test")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<TestComponent> Test { get; public set; }
    [FhirElementAttribute("teardown")]
[DataMemberAttribute]
public TeardownComponent Teardown { get; public set; }
    private Identifier Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public sealed virtual FhirUri get_UrlElement();
    public sealed virtual void set_UrlElement(FhirUri value);
    public sealed virtual string get_Url();
    public sealed virtual void set_Url(string value);
    public Identifier get_Identifier();
    public void set_Identifier(Identifier value);
    public sealed virtual FhirString get_VersionElement();
    public sealed virtual void set_VersionElement(FhirString value);
    public sealed virtual string get_Version();
    public sealed virtual void set_Version(string value);
    public sealed virtual FhirString get_NameElement();
    public sealed virtual void set_NameElement(FhirString value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public FhirString get_TitleElement();
    public void set_TitleElement(FhirString value);
    public string get_Title();
    public void set_Title(string value);
    public sealed virtual Code`1<PublicationStatus> get_StatusElement();
    public sealed virtual void set_StatusElement(Code`1<PublicationStatus> value);
    public sealed virtual Nullable`1<PublicationStatus> get_Status();
    public sealed virtual void set_Status(Nullable`1<PublicationStatus> value);
    public sealed virtual FhirBoolean get_ExperimentalElement();
    public sealed virtual void set_ExperimentalElement(FhirBoolean value);
    public sealed virtual Nullable`1<bool> get_Experimental();
    public sealed virtual void set_Experimental(Nullable`1<bool> value);
    public sealed virtual FhirDateTime get_DateElement();
    public sealed virtual void set_DateElement(FhirDateTime value);
    public sealed virtual string get_Date();
    public sealed virtual void set_Date(string value);
    public sealed virtual FhirString get_PublisherElement();
    public sealed virtual void set_PublisherElement(FhirString value);
    public sealed virtual string get_Publisher();
    public sealed virtual void set_Publisher(string value);
    public sealed virtual List`1<ContactDetail> get_Contact();
    public sealed virtual void set_Contact(List`1<ContactDetail> value);
    public sealed virtual Markdown get_DescriptionElement();
    public sealed virtual void set_DescriptionElement(Markdown value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual List`1<UsageContext> get_UseContext();
    public sealed virtual void set_UseContext(List`1<UsageContext> value);
    public List`1<CodeableConcept> get_Jurisdiction();
    public void set_Jurisdiction(List`1<CodeableConcept> value);
    public sealed virtual Markdown get_PurposeElement();
    public sealed virtual void set_PurposeElement(Markdown value);
    public sealed virtual string get_Purpose();
    public sealed virtual void set_Purpose(string value);
    public Markdown get_CopyrightElement();
    public void set_CopyrightElement(Markdown value);
    public string get_Copyright();
    public void set_Copyright(string value);
    public List`1<OriginComponent> get_Origin();
    public void set_Origin(List`1<OriginComponent> value);
    public List`1<DestinationComponent> get_Destination();
    public void set_Destination(List`1<DestinationComponent> value);
    public MetadataComponent get_Metadata();
    public void set_Metadata(MetadataComponent value);
    public List`1<FixtureComponent> get_Fixture();
    public void set_Fixture(List`1<FixtureComponent> value);
    public List`1<ResourceReference> get_Profile();
    public void set_Profile(List`1<ResourceReference> value);
    public List`1<VariableComponent> get_Variable();
    public void set_Variable(List`1<VariableComponent> value);
    public SetupComponent get_Setup();
    public void set_Setup(SetupComponent value);
    public List`1<TestComponent> get_Test();
    public void set_Test(List`1<TestComponent> value);
    public TeardownComponent get_Teardown();
    public void set_Teardown(TeardownComponent value);
    private sealed virtual override Identifier Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<Hl7.Fhir.Model.Identifier>.set_Identifier(Identifier value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.TestScript/<get_Children>d__159")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.TestScript/<get_NamedChildren>d__161")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.TestScript/<GetElementPairs>d__163")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Timing", "http://hl7.org/fhir/StructureDefinition/Timing")]
public class Hl7.Fhir.Model.Timing : BackboneType {
    private List`1<FhirDateTime> _EventElement;
    private RepeatComponent _Repeat;
    private CodeableConcept _Code;
    public string TypeName { get; }
    [FhirElementAttribute("event")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirDateTime> EventElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Event { get; public set; }
    [FhirElementAttribute("repeat")]
[DataMemberAttribute]
public RepeatComponent Repeat { get; public set; }
    [FhirElementAttribute("code")]
[BindingAttribute("TimingAbbreviation")]
[DataMemberAttribute]
public CodeableConcept Code { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<FhirDateTime> get_EventElement();
    public void set_EventElement(List`1<FhirDateTime> value);
    public IEnumerable`1<string> get_Event();
    public void set_Event(IEnumerable`1<string> value);
    public RepeatComponent get_Repeat();
    public void set_Repeat(RepeatComponent value);
    public CodeableConcept get_Code();
    public void set_Code(CodeableConcept value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Timing/<get_Children>d__25")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Timing/<get_NamedChildren>d__27")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Timing/<GetElementPairs>d__29")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("TriggerDefinition", "http://hl7.org/fhir/StructureDefinition/TriggerDefinition")]
public class Hl7.Fhir.Model.TriggerDefinition : DataType {
    private Code`1<TriggerType> _TypeElement;
    private FhirString _NameElement;
    private DataType _Timing;
    private List`1<DataRequirement> _Data;
    private Expression _Condition;
    public string TypeName { get; }
    [FhirElementAttribute("type")]
[DeclaredTypeAttribute]
[BindingAttribute("TriggerType")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<TriggerType> TypeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<TriggerType> Type { get; public set; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public DataType Timing { get; public set; }
    [FhirElementAttribute("data")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<DataRequirement> Data { get; public set; }
    [FhirElementAttribute("condition")]
[DataMemberAttribute]
public Expression Condition { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Code`1<TriggerType> get_TypeElement();
    public void set_TypeElement(Code`1<TriggerType> value);
    public Nullable`1<TriggerType> get_Type();
    public void set_Type(Nullable`1<TriggerType> value);
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public DataType get_Timing();
    public void set_Timing(DataType value);
    public List`1<DataRequirement> get_Data();
    public void set_Data(List`1<DataRequirement> value);
    public Expression get_Condition();
    public void set_Condition(Expression value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.TriggerDefinition/<get_Children>d__34")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.TriggerDefinition/<get_NamedChildren>d__36")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.TriggerDefinition/<GetElementPairs>d__38")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[ObsoleteAttribute("This resource was removed in R4", "True")]
public class Hl7.Fhir.Model.UserSession : object {
}
[FhirEnumerationAttribute("EvidenceVariableType", "http://hl7.org/fhir/ValueSet/variable-type", "http://hl7.org/fhir/variable-type")]
public enum Hl7.Fhir.Model.VariableTypeCode : Enum {
    public int value__;
    [EnumLiteralAttribute("dichotomous", "")]
[DescriptionAttribute("Dichotomous")]
public static VariableTypeCode Dichotomous;
    [EnumLiteralAttribute("continuous", "")]
[DescriptionAttribute("Continuous")]
public static VariableTypeCode Continuous;
    [EnumLiteralAttribute("descriptive", "")]
[DescriptionAttribute("Descriptive")]
public static VariableTypeCode Descriptive;
}
[DataContractAttribute]
[FhirTypeAttribute("VerificationResult", "http://hl7.org/fhir/StructureDefinition/VerificationResult")]
public class Hl7.Fhir.Model.VerificationResult : DomainResource {
    private List`1<ResourceReference> _Target;
    private List`1<FhirString> _TargetLocationElement;
    private CodeableConcept _Need;
    private Code`1<StatusCode> _StatusElement;
    private FhirDateTime _StatusDateElement;
    private CodeableConcept _ValidationType;
    private List`1<CodeableConcept> _ValidationProcess;
    private Timing _Frequency;
    private FhirDateTime _LastPerformedElement;
    private Date _NextScheduledElement;
    private CodeableConcept _FailureAction;
    private List`1<PrimarySourceComponent> _PrimarySource;
    private AttestationComponent _Attestation;
    private List`1<ValidatorComponent> _Validator;
    public string TypeName { get; }
    [FhirElementAttribute("target")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ResourceReference> Target { get; public set; }
    [FhirElementAttribute("targetLocation")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirString> TargetLocationElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> TargetLocation { get; public set; }
    [FhirElementAttribute("need")]
[BindingAttribute("need")]
[DataMemberAttribute]
public CodeableConcept Need { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("status")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<StatusCode> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<StatusCode> Status { get; public set; }
    [FhirElementAttribute("statusDate")]
[DataMemberAttribute]
public FhirDateTime StatusDateElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string StatusDate { get; public set; }
    [FhirElementAttribute("validationType")]
[BindingAttribute("validation-type")]
[DataMemberAttribute]
public CodeableConcept ValidationType { get; public set; }
    [FhirElementAttribute("validationProcess")]
[BindingAttribute("validation-process")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<CodeableConcept> ValidationProcess { get; public set; }
    [FhirElementAttribute("frequency")]
[DataMemberAttribute]
public Timing Frequency { get; public set; }
    [FhirElementAttribute("lastPerformed")]
[DataMemberAttribute]
public FhirDateTime LastPerformedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string LastPerformed { get; public set; }
    [FhirElementAttribute("nextScheduled")]
[DataMemberAttribute]
public Date NextScheduledElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string NextScheduled { get; public set; }
    [FhirElementAttribute("failureAction")]
[BindingAttribute("failure-action")]
[DataMemberAttribute]
public CodeableConcept FailureAction { get; public set; }
    [FhirElementAttribute("primarySource")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<PrimarySourceComponent> PrimarySource { get; public set; }
    [FhirElementAttribute("attestation")]
[DataMemberAttribute]
public AttestationComponent Attestation { get; public set; }
    [FhirElementAttribute("validator")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ValidatorComponent> Validator { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<ResourceReference> get_Target();
    public void set_Target(List`1<ResourceReference> value);
    public List`1<FhirString> get_TargetLocationElement();
    public void set_TargetLocationElement(List`1<FhirString> value);
    public IEnumerable`1<string> get_TargetLocation();
    public void set_TargetLocation(IEnumerable`1<string> value);
    public CodeableConcept get_Need();
    public void set_Need(CodeableConcept value);
    public Code`1<StatusCode> get_StatusElement();
    public void set_StatusElement(Code`1<StatusCode> value);
    public Nullable`1<StatusCode> get_Status();
    public void set_Status(Nullable`1<StatusCode> value);
    public FhirDateTime get_StatusDateElement();
    public void set_StatusDateElement(FhirDateTime value);
    public string get_StatusDate();
    public void set_StatusDate(string value);
    public CodeableConcept get_ValidationType();
    public void set_ValidationType(CodeableConcept value);
    public List`1<CodeableConcept> get_ValidationProcess();
    public void set_ValidationProcess(List`1<CodeableConcept> value);
    public Timing get_Frequency();
    public void set_Frequency(Timing value);
    public FhirDateTime get_LastPerformedElement();
    public void set_LastPerformedElement(FhirDateTime value);
    public string get_LastPerformed();
    public void set_LastPerformed(string value);
    public Date get_NextScheduledElement();
    public void set_NextScheduledElement(Date value);
    public string get_NextScheduled();
    public void set_NextScheduled(string value);
    public CodeableConcept get_FailureAction();
    public void set_FailureAction(CodeableConcept value);
    public List`1<PrimarySourceComponent> get_PrimarySource();
    public void set_PrimarySource(List`1<PrimarySourceComponent> value);
    public AttestationComponent get_Attestation();
    public void set_Attestation(AttestationComponent value);
    public List`1<ValidatorComponent> get_Validator();
    public void set_Validator(List`1<ValidatorComponent> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.VerificationResult/<get_Children>d__82")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.VerificationResult/<get_NamedChildren>d__84")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.VerificationResult/<GetElementPairs>d__86")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("VisionPrescription", "http://hl7.org/fhir/StructureDefinition/VisionPrescription")]
public class Hl7.Fhir.Model.VisionPrescription : DomainResource {
    private List`1<Identifier> _Identifier;
    private Code`1<FinancialResourceStatusCodes> _StatusElement;
    private FhirDateTime _CreatedElement;
    private ResourceReference _Patient;
    private ResourceReference _Encounter;
    private FhirDateTime _DateWrittenElement;
    private ResourceReference _Prescriber;
    private List`1<LensSpecificationComponent> _LensSpecification;
    public string TypeName { get; }
    [FhirElementAttribute("identifier")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Identifier> Identifier { get; public set; }
    [FhirElementAttribute("status")]
[DeclaredTypeAttribute]
[BindingAttribute("VisionStatus")]
[CardinalityAttribute]
[DataMemberAttribute]
public Code`1<FinancialResourceStatusCodes> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<FinancialResourceStatusCodes> Status { get; public set; }
    [FhirElementAttribute("created")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirDateTime CreatedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Created { get; public set; }
    [FhirElementAttribute("patient")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Patient { get; public set; }
    [FhirElementAttribute("encounter")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public ResourceReference Encounter { get; public set; }
    [FhirElementAttribute("dateWritten")]
[CardinalityAttribute]
[DataMemberAttribute]
public FhirDateTime DateWrittenElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string DateWritten { get; public set; }
    [FhirElementAttribute("prescriber")]
[CLSCompliantAttribute("False")]
[ReferencesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public ResourceReference Prescriber { get; public set; }
    [FhirElementAttribute("lensSpecification")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<LensSpecificationComponent> LensSpecification { get; public set; }
    private List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.Identifier { get; private set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public List`1<Identifier> get_Identifier();
    public void set_Identifier(List`1<Identifier> value);
    public Code`1<FinancialResourceStatusCodes> get_StatusElement();
    public void set_StatusElement(Code`1<FinancialResourceStatusCodes> value);
    public Nullable`1<FinancialResourceStatusCodes> get_Status();
    public void set_Status(Nullable`1<FinancialResourceStatusCodes> value);
    public FhirDateTime get_CreatedElement();
    public void set_CreatedElement(FhirDateTime value);
    public string get_Created();
    public void set_Created(string value);
    public ResourceReference get_Patient();
    public void set_Patient(ResourceReference value);
    public ResourceReference get_Encounter();
    public void set_Encounter(ResourceReference value);
    public FhirDateTime get_DateWrittenElement();
    public void set_DateWrittenElement(FhirDateTime value);
    public string get_DateWritten();
    public void set_DateWritten(string value);
    public ResourceReference get_Prescriber();
    public void set_Prescriber(ResourceReference value);
    public List`1<LensSpecificationComponent> get_LensSpecification();
    public void set_LensSpecification(List`1<LensSpecificationComponent> value);
    private sealed virtual override List`1<Identifier> Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.get_Identifier();
    private sealed virtual override void Hl7.Fhir.Model.IIdentifiable<System.Collections.Generic.List<Hl7.Fhir.Model.Identifier>>.set_Identifier(List`1<Identifier> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.VisionPrescription/<get_Children>d__55")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.VisionPrescription/<get_NamedChildren>d__57")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.VisionPrescription/<GetElementPairs>d__59")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
public class Hl7.Fhir.Rest.FhirClient : BaseFhirClient {
    public FhirClient(Uri endpoint, FhirClientSettings settings, HttpMessageHandler messageHandler);
    public FhirClient(Uri endpoint, HttpClient httpClient, FhirClientSettings settings);
    public FhirClient(string endpoint, FhirClientSettings settings, HttpMessageHandler messageHandler);
    public FhirClient(string endpoint, HttpClient httpClient, FhirClientSettings settings);
}
[ExtensionAttribute]
public static class Hl7.Fhir.Rest.FhirClientOperationsExtensions : object {
    [AsyncStateMachineAttribute("Hl7.Fhir.Rest.FhirClientOperationsExtensions/<MetaAsync>d__0")]
[ExtensionAttribute]
public static Task`1<Meta> MetaAsync(BaseFhirClient client, ResourceType type, Nullable`1<CancellationToken> ct);
    [ExtensionAttribute]
[ObsoleteAttribute("Synchronous use of the FhirClient is strongly discouraged, use the asynchronous call instead.")]
public static Meta Meta(BaseFhirClient client, ResourceType type);
    [ExtensionAttribute]
public static Task`1<CapabilityStatement> CapabilityStatementAsync(BaseFhirClient client, Nullable`1<SummaryType> summary, Nullable`1<CancellationToken> ct);
    [ExtensionAttribute]
[ObsoleteAttribute("Synchronous use of the FhirClient is strongly discouraged, use the asynchronous call instead.")]
public static CapabilityStatement CapabilityStatement(BaseFhirClient client, Nullable`1<SummaryType> summary);
}
public class Hl7.Fhir.Serialization.FhirJsonParser : BaseFhirParser {
    public FhirJsonParser(ParserSettings settings);
    public T Parse(string json);
    [AsyncStateMachineAttribute("Hl7.Fhir.Serialization.FhirJsonParser/<ParseAsync>d__2`1")]
public Task`1<T> ParseAsync(string json);
    public T Parse(JsonReader reader);
    [AsyncStateMachineAttribute("Hl7.Fhir.Serialization.FhirJsonParser/<ParseAsync>d__4`1")]
public Task`1<T> ParseAsync(JsonReader reader);
    public Base Parse(string json, Type dataType);
    [AsyncStateMachineAttribute("Hl7.Fhir.Serialization.FhirJsonParser/<ParseAsync>d__6")]
public Task`1<Base> ParseAsync(string json, Type dataType);
    public Base Parse(JsonReader reader, Type dataType);
    [AsyncStateMachineAttribute("Hl7.Fhir.Serialization.FhirJsonParser/<ParseAsync>d__8")]
public Task`1<Base> ParseAsync(JsonReader reader, Type dataType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Hl7.Fhir.Serialization.FhirJsonPocoDeserializer : BaseFhirJsonPocoDeserializer {
    public FhirJsonPocoDeserializer(FhirJsonPocoDeserializerSettings settings);
    [ObsoleteAttribute("Please use FhirJsonPocoDeserializer() if you are using a single version of FHIR or BaseFhirJsonPocoDeserializer if you want to use multiple versions of FHIR")]
public FhirJsonPocoDeserializer(Assembly assembly);
    [ObsoleteAttribute("Please use FhirJsonPocoDeserializer() if you are using a single version of FHIR or BaseFhirJsonPocoDeserializer if you want to use multiple versions of FHIR")]
public FhirJsonPocoDeserializer(ModelInspector inspector);
    [ObsoleteAttribute("Please use FhirJsonPocoDeserializer() if you are using a single version of FHIR or BaseFhirJsonPocoDeserializer if you want to use multiple versions of FHIR")]
public FhirJsonPocoDeserializer(Assembly assembly, FhirJsonPocoDeserializerSettings settings);
    [ObsoleteAttribute("Please use FhirJsonPocoDeserializer() if you are using a single version of FHIR or BaseFhirJsonPocoDeserializer if you want to use multiple versions of FHIR")]
public FhirJsonPocoDeserializer(ModelInspector inspector, FhirJsonPocoDeserializerSettings settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Hl7.Fhir.Serialization.FhirJsonPocoSerializer : BaseFhirJsonPocoSerializer {
    [ObsoleteAttribute("Please use FhirJsonPocoSerializer() if you are using a single version of FHIR or BaseFhirJsonPocoSerializer if you want to use multiple versions of FHIR")]
public FhirJsonPocoSerializer(FhirRelease release);
    [ObsoleteAttribute("Please use FhirJsonPocoSerializer() if you are using a single version of FHIR or BaseFhirJsonPocoSerializer if you want to use multiple versions of FHIR")]
public FhirJsonPocoSerializer(FhirRelease release, FhirJsonPocoSerializerSettings settings);
    public FhirJsonPocoSerializer(FhirJsonPocoSerializerSettings settings);
}
public class Hl7.Fhir.Serialization.FhirJsonSerializer : CommonFhirJsonSerializer {
    [NullableContextAttribute("2")]
public FhirJsonSerializer(SerializerSettings settings);
}
public class Hl7.Fhir.Serialization.FhirXmlParser : BaseFhirParser {
    public FhirXmlParser(ParserSettings settings);
    public T Parse(XmlReader reader);
    [AsyncStateMachineAttribute("Hl7.Fhir.Serialization.FhirXmlParser/<ParseAsync>d__2`1")]
public Task`1<T> ParseAsync(XmlReader reader);
    public T Parse(string xml);
    [AsyncStateMachineAttribute("Hl7.Fhir.Serialization.FhirXmlParser/<ParseAsync>d__4`1")]
public Task`1<T> ParseAsync(string xml);
    public Base Parse(string xml, Type dataType);
    [AsyncStateMachineAttribute("Hl7.Fhir.Serialization.FhirXmlParser/<ParseAsync>d__6")]
public Task`1<Base> ParseAsync(string xml, Type dataType);
    public Base Parse(XmlReader reader, Type dataType);
    [AsyncStateMachineAttribute("Hl7.Fhir.Serialization.FhirXmlParser/<ParseAsync>d__8")]
public Task`1<Base> ParseAsync(XmlReader reader, Type dataType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Hl7.Fhir.Serialization.FhirXmlPocoDeserializer : BaseFhirXmlPocoDeserializer {
    public FhirXmlPocoDeserializer(FhirXmlPocoDeserializerSettings settings);
    [ObsoleteAttribute("Please use FhirXmlPocoDeserializer() if you are using a single version of BaseFhirXmlPocoDeserializer if you want to add custom model information")]
public FhirXmlPocoDeserializer(Assembly assembly);
    [ObsoleteAttribute("Please use FhirXmlPocoDeserializer() if you are using a single version of FHIR or BaseFhirXmlPocoDeserializer if you want to add custom model information")]
public FhirXmlPocoDeserializer(ModelInspector inspector);
    [ObsoleteAttribute("Please use FhirXmlPocoDeserializer() if you are using a single version of BaseFhirXmlPocoDeserializer if you want to add custom model information")]
public FhirXmlPocoDeserializer(Assembly assembly, FhirXmlPocoDeserializerSettings settings);
    [ObsoleteAttribute("Please use FhirXmlPocoDeserializer() if you are using a single version of BaseFhirXmlPocoDeserializer if you want to add custom model information")]
public FhirXmlPocoDeserializer(ModelInspector inspector, FhirXmlPocoDeserializerSettings settings);
}
public class Hl7.Fhir.Serialization.FhirXmlPocoSerializer : BaseFhirXmlPocoSerializer {
    [ObsoleteAttribute("Please use BaseFhirXmlPocoSerializer if you want to use multiple versions of FHIR")]
public FhirXmlPocoSerializer(FhirRelease release);
}
public class Hl7.Fhir.Serialization.FhirXmlSerializer : CommonFhirXmlSerializer {
    [NullableContextAttribute("2")]
public FhirXmlSerializer(SerializerSettings settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Hl7.Fhir.Serialization.JsonSerializerOptionsExtensions : object {
    [ExtensionAttribute]
public static JsonSerializerOptions ForFhir(JsonSerializerOptions options);
    [ExtensionAttribute]
[ObsoleteAttribute("This function is for evaluation purposes only and is subject to change or removal in future updates. Suppress this diagnostic to proceed.")]
public static JsonSerializerOptions ForCdsHooks(JsonSerializerOptions options, FhirJsonPocoSerializerSettings serializerSettings, FhirJsonPocoDeserializerSettings deserializerSettings);
    [ExtensionAttribute]
public static JsonSerializerOptions ForFhir(JsonSerializerOptions options, FhirJsonPocoSerializerSettings serializerSettings);
    [ExtensionAttribute]
public static JsonSerializerOptions ForFhir(JsonSerializerOptions options, FhirJsonPocoDeserializerSettings deserializerSettings);
    [ExtensionAttribute]
public static JsonSerializerOptions ForFhir(JsonSerializerOptions options, FhirJsonPocoSerializerSettings serializerSettings, FhirJsonPocoDeserializerSettings deserializerSettings);
}
[ExtensionAttribute]
public static class Hl7.Fhir.Serialization.PocoSerializationExtensions : object {
    [ExtensionAttribute]
public static string ToJson(Base source, FhirJsonSerializationSettings settings);
    [AsyncStateMachineAttribute("Hl7.Fhir.Serialization.PocoSerializationExtensions/<ToJsonAsync>d__1")]
[ExtensionAttribute]
public static Task`1<string> ToJsonAsync(Base source, FhirJsonSerializationSettings settings);
    [ExtensionAttribute]
public static Byte[] ToJsonBytes(Base source, FhirJsonSerializationSettings settings);
    [AsyncStateMachineAttribute("Hl7.Fhir.Serialization.PocoSerializationExtensions/<ToJsonBytesAsync>d__3")]
[ExtensionAttribute]
public static Task`1<Byte[]> ToJsonBytesAsync(Base source, FhirJsonSerializationSettings settings);
    [ExtensionAttribute]
public static void WriteTo(Base source, JsonWriter destination, FhirJsonSerializationSettings settings);
    [AsyncStateMachineAttribute("Hl7.Fhir.Serialization.PocoSerializationExtensions/<WriteToAsync>d__5")]
[ExtensionAttribute]
public static Task WriteToAsync(Base source, JsonWriter destination, FhirJsonSerializationSettings settings);
    [ExtensionAttribute]
public static JObject ToJObject(Base source, FhirJsonSerializationSettings settings);
    [ExtensionAttribute]
public static string ToXml(Base source, FhirXmlSerializationSettings settings);
    [AsyncStateMachineAttribute("Hl7.Fhir.Serialization.PocoSerializationExtensions/<ToXmlAsync>d__8")]
[ExtensionAttribute]
public static Task`1<string> ToXmlAsync(Base source, FhirXmlSerializationSettings settings);
    [ExtensionAttribute]
public static Byte[] ToXmlBytes(Base source, FhirXmlSerializationSettings settings);
    [AsyncStateMachineAttribute("Hl7.Fhir.Serialization.PocoSerializationExtensions/<ToXmlBytesAsync>d__10")]
[ExtensionAttribute]
public static Task`1<Byte[]> ToXmlBytesAsync(Base source, FhirXmlSerializationSettings settings);
    [ExtensionAttribute]
public static void WriteTo(Base source, XmlWriter destination, FhirXmlSerializationSettings settings);
    [AsyncStateMachineAttribute("Hl7.Fhir.Serialization.PocoSerializationExtensions/<WriteToAsync>d__12")]
[ExtensionAttribute]
public static Task WriteToAsync(Base source, XmlWriter destination, FhirXmlSerializationSettings settings);
    [ExtensionAttribute]
public static XDocument ToXDocument(Base source, FhirXmlSerializationSettings settings);
}
public class Hl7.Fhir.Specification.PocoStructureDefinitionSummaryProvider : object {
    public sealed virtual IStructureDefinitionSummary Provide(string canonical);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Hl7.Fhir.Specification.Source.ArtifactSummaryExtensions : object {
    [ExtensionAttribute]
public static IEnumerable`1<ArtifactSummary> OfResourceType(IEnumerable`1<ArtifactSummary> summaries, ResourceType resourceType);
    [ExtensionAttribute]
public static IEnumerable`1<ArtifactSummary> OfResourceType(IEnumerable`1<ArtifactSummary> summaries, Nullable`1<ResourceType> resourceType);
    [ExtensionAttribute]
public static IEnumerable`1<ArtifactSummary> FindConformanceResources(IEnumerable`1<ArtifactSummary> summaries, string canonicalUrl);
    [ExtensionAttribute]
public static ArtifactSummary ResolveByUri(IEnumerable`1<ArtifactSummary> summaries, string uri);
    [ExtensionAttribute]
public static ArtifactSummary ResolveByCanonicalUri(IEnumerable`1<ArtifactSummary> summaries, string canonicalUrl);
    [ExtensionAttribute]
public static ArtifactSummary ResolveNamingSystem(IEnumerable`1<ArtifactSummary> summaries, string uniqueId);
    [ExtensionAttribute]
public static ArtifactSummary ResolveCodeSystem(IEnumerable`1<ArtifactSummary> summaries, string uri);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ArtifactSummary ResolveConceptMap(IEnumerable`1<ArtifactSummary> summaries, string sourceUri, string targetUri);
}
public class Hl7.Fhir.Specification.Source.DirectorySource : CommonDirectorySource {
    [NullableContextAttribute("1")]
public DirectorySource(string contentDirectory);
    [NullableContextAttribute("1")]
public DirectorySource(DirectorySourceSettings settings);
    [NullableContextAttribute("1")]
public DirectorySource(string contentDirectory, DirectorySourceSettings settings);
    [NullableContextAttribute("2")]
public sealed virtual IEnumerable`1<ConceptMap> FindConceptMaps(string sourceUri, string targetUri);
    [NullableContextAttribute("1")]
public sealed virtual NamingSystem FindNamingSystem(string uniqueId);
    [NullableContextAttribute("1")]
public sealed virtual IEnumerable`1<string> ListResourceUris(Nullable`1<ResourceType> filter);
}
public interface Hl7.Fhir.Specification.Source.IConformanceSource {
    [NullableContextAttribute("1")]
public abstract virtual IEnumerable`1<string> ListResourceUris(Nullable`1<ResourceType> filter);
    [NullableContextAttribute("2")]
public abstract virtual IEnumerable`1<ConceptMap> FindConceptMaps(string sourceUri, string targetUri);
    [NullableContextAttribute("1")]
public abstract virtual NamingSystem FindNamingSystem(string uniqueId);
}
[ExtensionAttribute]
public static class Hl7.Fhir.Specification.Source.ResourceResolverExtensions : object {
    [ExtensionAttribute]
[ObsoleteAttribute("Using synchronous resolvers is not recommended anymore, use FindStructureDefinitionForCoreTypeAsync() instead.")]
public static StructureDefinition FindStructureDefinitionForCoreType(IResourceResolver resolver, FHIRAllTypes type);
    [AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.ResourceResolverExtensions/<FindStructureDefinitionForCoreTypeAsync>d__1")]
[ExtensionAttribute]
public static Task`1<StructureDefinition> FindStructureDefinitionForCoreTypeAsync(IAsyncResourceResolver resolver, FHIRAllTypes type);
    [ExtensionAttribute]
public static IEnumerable`1<T> FindAll(IConformanceSource source);
}
public class Hl7.Fhir.Specification.Source.SourceFactory : object {
    public static IResourceResolver CreateDefault();
    public static IResourceResolver CreateOffline();
    public static IResourceResolver CreateCachedDefault();
    public static IResourceResolver CreateCachedOffline();
}
[ExtensionAttribute]
public static class Hl7.Fhir.Specification.Source.SummarySourceExtensions : object {
    [ExtensionAttribute]
public static IEnumerable`1<ArtifactSummary> ListSummaries(ISummarySource source, ResourceType resourceType);
}
public class Hl7.Fhir.Specification.Source.WebResolver : CommonWebResolver {
    [NullableContextAttribute("1")]
public WebResolver(Func`2<Uri, FhirClient> fhirClientFactory);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Hl7.Fhir.Specification.Source.ZipSource : CommonZipSource {
    private static string CACHEHINT;
    private static string CACHEDIRPATH;
    [ObsoleteAttribute("ZipSource itself implements IConformanceSource, use that implementation instead of this property.")]
public IConformanceSource Source { get; }
    public ZipSource(string zipPath);
    public ZipSource(string zipPath, DirectorySourceSettings settings);
    public ZipSource(string zipPath, string extractionDirectory);
    public ZipSource(string zipPath, string extractionDirectory, DirectorySourceSettings settings);
    private static ZipSource();
    public static ZipSource CreateValidationSource(string path);
    public static ZipSource CreateValidationSource();
    public IConformanceSource get_Source();
    public sealed virtual IEnumerable`1<string> ListResourceUris(Nullable`1<ResourceType> filter);
    [NullableContextAttribute("2")]
public sealed virtual IEnumerable`1<ConceptMap> FindConceptMaps(string sourceUri, string targetUri);
    public sealed virtual NamingSystem FindNamingSystem(string uniqueId);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
