public interface Hl7.Fhir.ElementModel.IFhirValueProvider {
    public Base FhirValue { get; }
    public abstract virtual Base get_FhirValue();
}
internal class Hl7.Fhir.ElementModel.PocoElementNode : object {
    public Base Current;
    private ClassMapping _myClassMapping;
    private ModelInspector _inspector;
    [CompilerGeneratedAttribute]
private ExceptionNotificationHandler <ExceptionHandler>k__BackingField;
    [CompilerGeneratedAttribute]
private IElementDefinitionSummary <Definition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ShortPath>k__BackingField;
    private object _value;
    private object _lastCachedValue;
    [CompilerGeneratedAttribute]
private string <InstanceType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Location>k__BackingField;
    public ExceptionNotificationHandler ExceptionHandler { get; public set; }
    public IElementDefinitionSummary Definition { get; private set; }
    public string ShortPath { get; private set; }
    public Base FhirValue { get; }
    public string Name { get; }
    public object Value { get; }
    public string InstanceType { get; private set; }
    public string Location { get; private set; }
    public string ResourceType { get; }
    internal PocoElementNode(ModelInspector inspector, Base root, string rootName);
    private PocoElementNode(ModelInspector inspector, Base instance, PocoElementNode parent, PropertyMapping definition, string location, string shortPath);
    [CompilerGeneratedAttribute]
public sealed virtual ExceptionNotificationHandler get_ExceptionHandler();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExceptionHandler(ExceptionNotificationHandler value);
    private Type determineInstanceType(PropertyMapping definition);
    [CompilerGeneratedAttribute]
public sealed virtual IElementDefinitionSummary get_Definition();
    [CompilerGeneratedAttribute]
private void set_Definition(IElementDefinitionSummary value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ShortPath();
    [CompilerGeneratedAttribute]
private void set_ShortPath(string value);
    [IteratorStateMachineAttribute("Hl7.Fhir.ElementModel.PocoElementNode/<Children>d__18")]
public sealed virtual IEnumerable`1<ITypedElement> Children(string name);
    public sealed virtual Base get_FhirValue();
    public sealed virtual string get_Name();
    public sealed virtual object get_Value();
    internal object ToITypedElementValue();
    [CompilerGeneratedAttribute]
public sealed virtual string get_InstanceType();
    [CompilerGeneratedAttribute]
private void set_InstanceType(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Location();
    [CompilerGeneratedAttribute]
private void set_Location(string value);
    public sealed virtual string get_ResourceType();
    public sealed virtual IEnumerable`1<object> Annotations(Type type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Hl7.Fhir.ElementModel.ScopedNodeExtensions : object {
    [ExtensionAttribute]
public static ResourceIdentity MakeAbsolute(ScopedNode node, ResourceIdentity identity);
    [ExtensionAttribute]
public static string MakeAbsolute(ScopedNode node, string reference);
    [ExtensionAttribute]
public static T Resolve(T element, string reference, Func`2<string, T> externalResolver);
    [ExtensionAttribute]
public static T Resolve(T element, Func`2<string, T> externalResolver);
    [CompilerGeneratedAttribute]
internal static ScopedNode <Resolve>g__locateContainer|2_0(ScopedNode containee);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static ScopedNode <Resolve>g__locateLocalResource|2_1(ResourceIdentity identity, <>c__DisplayClass2_0`1& );
}
[ExtensionAttribute]
public static class Hl7.Fhir.ElementModel.TypedElementParseExtensions : object {
    [ExtensionAttribute]
public static Element ParseBindable(ITypedElement instance);
    [ExtensionAttribute]
public static Quantity ParseQuantity(ITypedElement instance);
    [ExtensionAttribute]
public static T ParsePrimitive(ITypedElement instance);
    [ExtensionAttribute]
public static Coding ParseCoding(ITypedElement instance);
    [ExtensionAttribute]
public static ResourceReference ParseResourceReference(ITypedElement instance);
    [ExtensionAttribute]
public static CodeableConcept ParseCodeableConcept(ITypedElement instance);
    [ExtensionAttribute]
public static string GetString(IEnumerable`1<ITypedElement> instance);
    [CompilerGeneratedAttribute]
internal static Coding <ParseBindable>g__parseQuantity|0_0(<>c__DisplayClass0_0& );
    [CompilerGeneratedAttribute]
internal static Element <ParseBindable>g__parseExtension|0_1(<>c__DisplayClass0_0& );
}
public static class Hl7.Fhir.ElementModel.TypedSerialization : object {
    public static Base ToPoco(ISourceNode source, ModelInspector inspector, PocoBuilderSettings settings);
    public static Base ToPoco(ISourceNode source, Type pocoType, PocoBuilderSettings settings);
    public static T ToPoco(ISourceNode source, PocoBuilderSettings settings);
    public static Base ToPoco(ITypedElement element, Type pocoType, PocoBuilderSettings settings);
    public static T ToPoco(ITypedElement element, PocoBuilderSettings settings);
    public static ITypedElement ToTypedElement(Base base, string rootName);
    public static ISourceNode ToSourceNode(Base base, string rootName);
}
[ExtensionAttribute]
public static class Hl7.Fhir.FhirPath.ElementNavFhirExtensions : object {
    internal static bool _fhirSymbolTableExtensionsAdded;
    public static void PrepareFhirSymbolTableFunctions();
    [ExtensionAttribute]
public static SymbolTable AddFhirExtensions(SymbolTable t);
    [ExtensionAttribute]
public static bool HasValue(ITypedElement focus);
    [ExtensionAttribute]
public static bool HtmlChecks(ITypedElement focus);
    [ExtensionAttribute]
public static IEnumerable`1<Base> ToFhirValues(IEnumerable`1<ITypedElement> results);
    [CompilerGeneratedAttribute]
internal static ITypedElement <AddFhirExtensions>g__resolver|2_4(ITypedElement f, EvaluationContext ctx);
    [CompilerGeneratedAttribute]
internal static bool <AddFhirExtensions>g__memberOf|2_5(object focus, string valueset);
}
public class Hl7.Fhir.FhirPath.FhirEvaluationContext : EvaluationContext {
    private Func`2<string, ITypedElement> _elementResolver;
    public Func`2<string, ITypedElement> ElementResolver { get; public set; }
    public FhirEvaluationContext(ITypedElement resource);
    public FhirEvaluationContext(ITypedElement resource, ITypedElement rootResource);
    public FhirEvaluationContext(ScopedNode node);
    public static FhirEvaluationContext CreateDefault();
    private static ITypedElement toNearestResource(ScopedNode node);
    public Func`2<string, ITypedElement> get_ElementResolver();
    public void set_ElementResolver(Func`2<string, ITypedElement> value);
}
public enum Hl7.Fhir.Introspection.ChoiceType : Enum {
    public int value__;
    public static ChoiceType None;
    public static ChoiceType ResourceChoice;
    public static ChoiceType DatatypeChoice;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Hl7.Fhir.Introspection.ClassMapping : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ConcurrentDictionary`2<ValueTuple`2<Type, FhirRelease>, ClassMapping> _mappedClasses;
    [CompilerGeneratedAttribute]
private Nullable`1<FhirRelease> <Release>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <NativeType>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Type <DeclaredType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsResource>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsFhirPrimitive>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPrimitive>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCodeOfT>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsNestedType>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Canonical>k__BackingField;
    [CompilerGeneratedAttribute]
private ValidationAttribute[] <ValidationAttributes>k__BackingField;
    [NullableAttribute("2")]
private PropertyMappingCollection _mappings;
    private Func`1<PropertyMappingCollection> _mappingInitializer;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`1<object> _factory;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`1<IList> _listFactory;
    internal static Type[] SupportedDotNetPrimitiveTypes;
    public Nullable`1<FhirRelease> Release { get; }
    public string Name { get; private set; }
    public Type NativeType { get; private set; }
    [NullableAttribute("2")]
[ObsoleteAttribute("This property is never initialized and its value will always be null.")]
public Type DeclaredType { get; private set; }
    public bool IsResource { get; private set; }
    public bool IsFhirPrimitive { get; private set; }
    public bool IsPrimitive { get; private set; }
    public bool IsCodeOfT { get; private set; }
    public bool IsNestedType { get; private set; }
    [NullableAttribute("2")]
public string Canonical { get; private set; }
    private PropertyMappingCollection propertyMappings { get; }
    public ValidationAttribute[] ValidationAttributes { get; private set; }
    public IReadOnlyList`1<PropertyMapping> PropertyMappings { get; }
    [NullableAttribute("2")]
public PropertyMapping PrimitiveValueProperty { get; }
    public bool HasPrimitiveValueMember { get; }
    private string Hl7.Fhir.Specification.IStructureDefinitionSummary.TypeName { get; }
    private bool Hl7.Fhir.Specification.IStructureDefinitionSummary.IsAbstract { get; }
    private bool Hl7.Fhir.Specification.IStructureDefinitionSummary.IsResource { get; }
    public Func`1<object> Factory { get; }
    public Func`1<IList> ListFactory { get; }
    private ClassMapping(string name, Type nativeType, FhirRelease release);
    private static ClassMapping();
    public static void Clear();
    public static bool TryGetMappingForType(Type t, FhirRelease release, ClassMapping& mapping);
    public static bool TryCreate(Type type, ClassMapping& result, FhirRelease release);
    [ObsoleteAttribute("This method was supposed to be used internally - do not use it anymore.")]
public static void AddMappingForType(Type t, FhirRelease release, ClassMapping mapping);
    [CompilerGeneratedAttribute]
public Nullable`1<FhirRelease> get_Release();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public Type get_NativeType();
    [CompilerGeneratedAttribute]
private void set_NativeType(Type value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Type get_DeclaredType();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_DeclaredType(Type value);
    [CompilerGeneratedAttribute]
public bool get_IsResource();
    [CompilerGeneratedAttribute]
private void set_IsResource(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsFhirPrimitive();
    [CompilerGeneratedAttribute]
private void set_IsFhirPrimitive(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsPrimitive();
    [CompilerGeneratedAttribute]
private void set_IsPrimitive(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsCodeOfT();
    [CompilerGeneratedAttribute]
private void set_IsCodeOfT(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsNestedType();
    [CompilerGeneratedAttribute]
private void set_IsNestedType(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Canonical();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_Canonical(string value);
    private PropertyMappingCollection get_propertyMappings();
    [CompilerGeneratedAttribute]
public ValidationAttribute[] get_ValidationAttributes();
    [CompilerGeneratedAttribute]
private void set_ValidationAttributes(ValidationAttribute[] value);
    public IReadOnlyList`1<PropertyMapping> get_PropertyMappings();
    [NullableContextAttribute("2")]
public PropertyMapping get_PrimitiveValueProperty();
    public bool get_HasPrimitiveValueMember();
    public PropertyMapping FindMappedElementByName(string name);
    public PropertyMapping FindMappedElementByChoiceName(string name);
    internal static T GetAttribute(MemberInfo t, FhirRelease version);
    internal static IEnumerable`1<T> GetAttributes(MemberInfo t, FhirRelease version);
    private sealed virtual override string Hl7.Fhir.Specification.IStructureDefinitionSummary.get_TypeName();
    private sealed virtual override bool Hl7.Fhir.Specification.IStructureDefinitionSummary.get_IsAbstract();
    private sealed virtual override bool Hl7.Fhir.Specification.IStructureDefinitionSummary.get_IsResource();
    private sealed virtual override IReadOnlyCollection`1<IElementDefinitionSummary> Hl7.Fhir.Specification.IStructureDefinitionSummary.GetElements();
    public Func`1<object> get_Factory();
    public Func`1<IList> get_ListFactory();
    [ObsoleteAttribute("Create is obsolete, call TryCreate instead.")]
public static ClassMapping Create(Type type);
    private static PropertyMappingCollection inspectProperties(Type nativeType, ClassMapping declaringClass, FhirRelease fhirVersion);
    private static string collectTypeName(FhirTypeAttribute attr, Type type);
    [ObsoleteAttribute("ClassMapping.IsMappable() is slow and obsolete, use ClassMapping.TryCreate() instead.")]
public static bool IsMappableType(Type type);
    private static ClassMapping buildCqlClassMapping(Type t, FhirRelease release);
    private static ClassMapping buildNetPrimitiveClassMapping(Type t, FhirRelease release);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal static ClassMapping <TryGetMappingForType>g__createMapping|2_0(ValueTuple`2<Type, FhirRelease> typeAndRelease);
}
[CLSCompliantAttribute("False")]
[AttributeUsageAttribute("128")]
public class Hl7.Fhir.Introspection.DeclaredTypeAttribute : VersionedAttribute {
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    public Type Type { get; public set; }
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(Type value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("128")]
public class Hl7.Fhir.Introspection.FhirElementAttribute : VersionedValidationAttribute {
    [CompilerGeneratedAttribute]
private ChoiceType <Choice>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPrimitiveValue>k__BackingField;
    [CompilerGeneratedAttribute]
private XmlRepresentation <XmlSerialization>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <InSummary>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsModifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FiveWs>k__BackingField;
    public ChoiceType Choice { get; public set; }
    public string Name { get; private set; }
    public bool IsPrimitiveValue { get; public set; }
    public XmlRepresentation XmlSerialization { get; public set; }
    public int Order { get; public set; }
    public bool InSummary { get; public set; }
    public bool IsModifier { get; public set; }
    public string FiveWs { get; public set; }
    public FhirElementAttribute(string name);
    public FhirElementAttribute(string name, ChoiceType choice, XmlRepresentation representation);
    [CompilerGeneratedAttribute]
public ChoiceType get_Choice();
    [CompilerGeneratedAttribute]
public void set_Choice(ChoiceType value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_IsPrimitiveValue();
    [CompilerGeneratedAttribute]
public void set_IsPrimitiveValue(bool value);
    [CompilerGeneratedAttribute]
public XmlRepresentation get_XmlSerialization();
    [CompilerGeneratedAttribute]
public void set_XmlSerialization(XmlRepresentation value);
    [CompilerGeneratedAttribute]
public int get_Order();
    [CompilerGeneratedAttribute]
public void set_Order(int value);
    [CompilerGeneratedAttribute]
public bool get_InSummary();
    [CompilerGeneratedAttribute]
public void set_InSummary(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsModifier();
    [CompilerGeneratedAttribute]
public void set_IsModifier(bool value);
    [CompilerGeneratedAttribute]
public string get_FiveWs();
    [CompilerGeneratedAttribute]
public void set_FiveWs(string value);
    [NullableContextAttribute("2")]
protected virtual ValidationResult IsValid(object value, ValidationContext validationContext);
    private void validateElement(object value, ValidationContext validationContext, List`1<ValidationResult> result);
}
[AttributeUsageAttribute("1")]
public class Hl7.Fhir.Introspection.FhirModelAssemblyAttribute : VersionedAttribute {
    public FhirModelAssemblyAttribute(FhirRelease since);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
public class Hl7.Fhir.Introspection.FhirTypeAttribute : VersionedAttribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsNestedType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsResource>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Canonical>k__BackingField;
    public string Name { get; private set; }
    public bool IsNestedType { get; public set; }
    public bool IsResource { get; public set; }
    [NullableAttribute("2")]
public string Canonical { get; public set; }
    public FhirTypeAttribute(string name);
    public FhirTypeAttribute(string name, string canonical);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_IsNestedType();
    [CompilerGeneratedAttribute]
public void set_IsNestedType(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsResource();
    [CompilerGeneratedAttribute]
public void set_IsResource(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Canonical();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Canonical(string value);
}
[ExtensionAttribute]
public static class Hl7.Fhir.Introspection.FhirVersionDependentExtensions : object {
    [ExtensionAttribute]
[ObsoleteAttribute("Use Attribute.AppliesToRelease() instead.")]
public static bool AppliesToVersion(IFhirVersionDependent me, FhirRelease fhirVersion);
    [ExtensionAttribute]
public static bool AppliesToRelease(Attribute me, FhirRelease release);
}
public interface Hl7.Fhir.Introspection.IFhirVersionDependent {
    public FhirRelease Since { get; }
    public abstract virtual FhirRelease get_Since();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Hl7.Fhir.Introspection.ModelInspector : object {
    private static ConcurrentDictionary`2<string, ModelInspector> _inspectedAssemblies;
    public FhirRelease FhirRelease;
    private ConcurrentDictionary`2<string, ClassMapping> _classMappingsByName;
    private ConcurrentDictionary`2<Type, ClassMapping> _classMappingsByType;
    private ConcurrentDictionary`2<string, ClassMapping> _classMappingsByCanonical;
    public ICollection`1<ClassMapping> ClassMappings { get; }
    public ModelInspector(FhirRelease fhirRelease);
    private static ModelInspector();
    public static void Clear();
    public static ClassMapping GetClassMappingForType(Type t);
    public static ModelInspector ForAssembly(Assembly a);
    public IReadOnlyList`1<ClassMapping> Import(Assembly assembly);
    public ClassMapping ImportType(Type type);
    internal void RegisterTypeMapping(Type t, ClassMapping mapping);
    public ClassMapping FindOrImportClassMapping(Type nativeType);
    public ClassMapping FindClassMapping(string fhirTypeName);
    public ClassMapping FindClassMapping(Type t);
    public ClassMapping FindClassMappingByCanonical(string canonical);
    public ICollection`1<ClassMapping> get_ClassMappings();
    public sealed virtual IStructureDefinitionSummary Provide(string canonical);
    [CompilerGeneratedAttribute]
internal static ModelInspector <ForAssembly>g__configureInspector|3_1(Assembly a);
    [CompilerGeneratedAttribute]
internal static IEnumerable`1<Type> <ForAssembly>g__getCqlTypes|3_2();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private ClassMapping <Import>b__9_0(Type t);
}
[AttributeUsageAttribute("32767")]
public class Hl7.Fhir.Introspection.NotMappedAttribute : VersionedAttribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("\{Name={Name} ElementType={ElementType.Name}}")]
public class Hl7.Fhir.Introspection.PropertyMapping : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ClassMapping <DeclaringClass>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCollection>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPrimitive>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RepresentsValueElement>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <InSummary>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsModifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FiveWs>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsMandatoryElement>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ImplementingType>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private XmlRepresentation <SerializationHint>k__BackingField;
    [CompilerGeneratedAttribute]
private ChoiceType <Choice>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsResourceChoice>k__BackingField;
    [CompilerGeneratedAttribute]
private Type[] <FhirType>k__BackingField;
    [CompilerGeneratedAttribute]
private ClassMapping <PropertyTypeMapping>k__BackingField;
    [CompilerGeneratedAttribute]
private ValidationAttribute[] <ValidationAttributes>k__BackingField;
    public PropertyInfo NativeProperty;
    public FhirRelease Release;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`2<object, object> _getter;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Action`2<object, object> _setter;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ITypeSerializationInfo[] _types;
    public string Name { get; internal set; }
    public ClassMapping DeclaringClass { get; internal set; }
    public bool IsCollection { get; internal set; }
    public bool IsPrimitive { get; private set; }
    public bool RepresentsValueElement { get; private set; }
    public bool InSummary { get; private set; }
    public bool IsModifier { get; private set; }
    public string FiveWs { get; private set; }
    public bool IsMandatoryElement { get; private set; }
    public Type ImplementingType { get; private set; }
    [ObsoleteAttribute("This element had a different name in R3 and R4. Please use ImplementingType from now on.")]
public Type ElementType { get; public set; }
    public int Order { get; private set; }
    public XmlRepresentation SerializationHint { get; private set; }
    public ChoiceType Choice { get; private set; }
    [ObsoleteAttribute("This property is never initialized and its value will always be false.")]
public bool IsResourceChoice { get; private set; }
    public Type[] FhirType { get; private set; }
    public ClassMapping PropertyTypeMapping { get; private set; }
    public ValidationAttribute[] ValidationAttributes { get; private set; }
    private string Hl7.Fhir.Specification.IElementDefinitionSummary.ElementName { get; }
    private bool Hl7.Fhir.Specification.IElementDefinitionSummary.IsCollection { get; }
    private bool Hl7.Fhir.Specification.IElementDefinitionSummary.IsRequired { get; }
    private bool Hl7.Fhir.Specification.IElementDefinitionSummary.InSummary { get; }
    private bool Hl7.Fhir.Specification.IElementDefinitionSummary.IsModifier { get; }
    private bool Hl7.Fhir.Specification.IElementDefinitionSummary.IsChoiceElement { get; }
    private bool Hl7.Fhir.Specification.IElementDefinitionSummary.IsResource { get; }
    [NullableAttribute("2")]
private string Hl7.Fhir.Specification.IElementDefinitionSummary.DefaultTypeName { get; }
    private ITypeSerializationInfo[] Hl7.Fhir.Specification.IElementDefinitionSummary.Type { get; }
    [NullableAttribute("2")]
private string Hl7.Fhir.Specification.IElementDefinitionSummary.NonDefaultNamespace { get; }
    private XmlRepresentation Hl7.Fhir.Specification.IElementDefinitionSummary.Representation { get; }
    private int Hl7.Fhir.Specification.IElementDefinitionSummary.Order { get; }
    private PropertyMapping(string name, ClassMapping declaringClass, PropertyInfo pi, Type implementingType, ClassMapping propertyTypeMapping, Type[] fhirTypes, FhirRelease version);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
    [CompilerGeneratedAttribute]
public ClassMapping get_DeclaringClass();
    [CompilerGeneratedAttribute]
internal void set_DeclaringClass(ClassMapping value);
    [CompilerGeneratedAttribute]
public bool get_IsCollection();
    [CompilerGeneratedAttribute]
internal void set_IsCollection(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsPrimitive();
    [CompilerGeneratedAttribute]
private void set_IsPrimitive(bool value);
    [CompilerGeneratedAttribute]
public bool get_RepresentsValueElement();
    [CompilerGeneratedAttribute]
private void set_RepresentsValueElement(bool value);
    [CompilerGeneratedAttribute]
public bool get_InSummary();
    [CompilerGeneratedAttribute]
private void set_InSummary(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsModifier();
    [CompilerGeneratedAttribute]
private void set_IsModifier(bool value);
    [CompilerGeneratedAttribute]
public string get_FiveWs();
    [CompilerGeneratedAttribute]
private void set_FiveWs(string value);
    [CompilerGeneratedAttribute]
public bool get_IsMandatoryElement();
    [CompilerGeneratedAttribute]
private void set_IsMandatoryElement(bool value);
    [CompilerGeneratedAttribute]
public Type get_ImplementingType();
    [CompilerGeneratedAttribute]
private void set_ImplementingType(Type value);
    public Type get_ElementType();
    public void set_ElementType(Type value);
    [CompilerGeneratedAttribute]
public int get_Order();
    [CompilerGeneratedAttribute]
private void set_Order(int value);
    [CompilerGeneratedAttribute]
public XmlRepresentation get_SerializationHint();
    [CompilerGeneratedAttribute]
private void set_SerializationHint(XmlRepresentation value);
    [CompilerGeneratedAttribute]
public ChoiceType get_Choice();
    [CompilerGeneratedAttribute]
private void set_Choice(ChoiceType value);
    [CompilerGeneratedAttribute]
public bool get_IsResourceChoice();
    [CompilerGeneratedAttribute]
private void set_IsResourceChoice(bool value);
    [CompilerGeneratedAttribute]
public Type[] get_FhirType();
    [CompilerGeneratedAttribute]
private void set_FhirType(Type[] value);
    [CompilerGeneratedAttribute]
public ClassMapping get_PropertyTypeMapping();
    [CompilerGeneratedAttribute]
private void set_PropertyTypeMapping(ClassMapping value);
    [CompilerGeneratedAttribute]
public ValidationAttribute[] get_ValidationAttributes();
    [CompilerGeneratedAttribute]
private void set_ValidationAttributes(ValidationAttribute[] value);
    [ObsoleteAttribute("Use TryCreate() instead.")]
public static PropertyMapping Create(PropertyInfo prop, ClassMapping declaringClass, FhirRelease version);
    public static bool TryCreate(PropertyInfo prop, PropertyMapping& result, ClassMapping declaringClass, FhirRelease release);
    private static bool isPrimitiveValueElement(FhirElementAttribute valueElementAttr, PropertyInfo prop);
    private static string buildQualifiedPropName(PropertyInfo p);
    private static bool isAllowedNativeTypeForDataTypeValue(Type type);
    public object GetValue(object instance);
    public void SetValue(object instance, object value);
    private sealed virtual override string Hl7.Fhir.Specification.IElementDefinitionSummary.get_ElementName();
    private sealed virtual override bool Hl7.Fhir.Specification.IElementDefinitionSummary.get_IsCollection();
    private sealed virtual override bool Hl7.Fhir.Specification.IElementDefinitionSummary.get_IsRequired();
    private sealed virtual override bool Hl7.Fhir.Specification.IElementDefinitionSummary.get_InSummary();
    private sealed virtual override bool Hl7.Fhir.Specification.IElementDefinitionSummary.get_IsModifier();
    private sealed virtual override bool Hl7.Fhir.Specification.IElementDefinitionSummary.get_IsChoiceElement();
    private sealed virtual override bool Hl7.Fhir.Specification.IElementDefinitionSummary.get_IsResource();
    [NullableContextAttribute("2")]
private sealed virtual override string Hl7.Fhir.Specification.IElementDefinitionSummary.get_DefaultTypeName();
    private sealed virtual override ITypeSerializationInfo[] Hl7.Fhir.Specification.IElementDefinitionSummary.get_Type();
    [NullableContextAttribute("2")]
private sealed virtual override string Hl7.Fhir.Specification.IElementDefinitionSummary.get_NonDefaultNamespace();
    private sealed virtual override XmlRepresentation Hl7.Fhir.Specification.IElementDefinitionSummary.get_Representation();
    private sealed virtual override int Hl7.Fhir.Specification.IElementDefinitionSummary.get_Order();
    private ITypeSerializationInfo[] buildTypes();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private string <buildTypes>b__108_1(Type ft);
    [CompilerGeneratedAttribute]
private string <buildTypes>g__getFhirTypeName|108_0(Type ft);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Hl7.Fhir.Introspection.PropertyMappingCollection : object {
    public List`1<PropertyMapping> ByOrder;
    public List`1<PropertyMapping> ChoiceProperties;
    public Dictionary`2<string, PropertyMapping> ByName;
    public PropertyMappingCollection(Dictionary`2<string, PropertyMapping> byName);
}
[CLSCompliantAttribute("False")]
[AttributeUsageAttribute("128")]
public class Hl7.Fhir.Introspection.ReferencesAttribute : VersionedAttribute {
    [CompilerGeneratedAttribute]
private String[] <Resources>k__BackingField;
    public String[] Resources { get; public set; }
    public ReferencesAttribute(String[] resources);
    [CompilerGeneratedAttribute]
public String[] get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(String[] value);
}
public abstract class Hl7.Fhir.Introspection.VersionedAttribute : Attribute {
    [CompilerGeneratedAttribute]
private FhirRelease <Since>k__BackingField;
    public FhirRelease Since { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual FhirRelease get_Since();
    [CompilerGeneratedAttribute]
public void set_Since(FhirRelease value);
}
public abstract class Hl7.Fhir.Introspection.VersionedValidationAttribute : ValidationAttribute {
    [CompilerGeneratedAttribute]
private FhirRelease <Since>k__BackingField;
    public FhirRelease Since { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual FhirRelease get_Since();
    [CompilerGeneratedAttribute]
public void set_Since(FhirRelease value);
}
[DataContractAttribute]
[FhirTypeAttribute("BackboneElement", "http://hl7.org/fhir/StructureDefinition/BackboneElement")]
public abstract class Hl7.Fhir.Model.BackboneElement : Element {
    private List`1<Extension> _ModifierExtension;
    public string TypeName { get; }
    [FhirElementAttribute("modifierExtension")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Extension> ModifierExtension { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public sealed virtual List`1<Extension> get_ModifierExtension();
    public sealed virtual void set_ModifierExtension(List`1<Extension> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.BackboneElement/<get_Children>d__10")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.BackboneElement/<get_NamedChildren>d__12")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.BackboneElement/<GetElementPairs>d__14")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("BackboneType", "http://hl7.org/fhir/StructureDefinition/BackboneType")]
public abstract class Hl7.Fhir.Model.BackboneType : DataType {
    private List`1<Extension> _ModifierExtension;
    public string TypeName { get; }
    [FhirElementAttribute("modifierExtension")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Extension> ModifierExtension { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public sealed virtual List`1<Extension> get_ModifierExtension();
    public sealed virtual void set_ModifierExtension(List`1<Extension> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.BackboneType/<get_Children>d__10")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.BackboneType/<get_NamedChildren>d__12")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.BackboneType/<GetElementPairs>d__14")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirTypeAttribute("Base", "http://hl7.org/fhir/StructureDefinition/Base")]
[DataContractAttribute]
public abstract class Hl7.Fhir.Model.Base : object {
    private AnnotationList _annotations;
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler PropertyChanged;
    private AnnotationList annotations { get; }
    public string TypeName { get; }
    public IEnumerable`1<Base> Children { get; }
    public IEnumerable`1<ElementValue> NamedChildren { get; }
    private IEnumerable`1<string> System.Collections.Generic.IReadOnlyDictionary<System.String,System.Object>.Keys { get; }
    private IEnumerable`1<object> System.Collections.Generic.IReadOnlyDictionary<System.String,System.Object>.Values { get; }
    private int System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Count { get; }
    private object System.Collections.Generic.IReadOnlyDictionary<System.String,System.Object>.Item { get; }
    public virtual bool IsExactly(IDeepComparable other);
    public virtual bool Matches(IDeepComparable other);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public abstract virtual IDeepCopyable DeepCopy();
    public virtual IEnumerable`1<ValidationResult> Validate(ValidationContext validationContext);
    private AnnotationList get_annotations();
    public sealed virtual IEnumerable`1<object> Annotations(Type type);
    public sealed virtual void AddAnnotation(object annotation);
    public sealed virtual void RemoveAnnotations(Type type);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    protected void OnPropertyChanged(string property);
    public virtual string get_TypeName();
    public virtual IEnumerable`1<Base> get_Children();
    public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    public IReadOnlyDictionary`2<string, object> AsReadOnlyDictionary();
    private sealed virtual override IEnumerable`1<string> System.Collections.Generic.IReadOnlyDictionary<System.String,System.Object>.get_Keys();
    private sealed virtual override IEnumerable`1<object> System.Collections.Generic.IReadOnlyDictionary<System.String,System.Object>.get_Values();
    private sealed virtual override int System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.get_Count();
    private sealed virtual override object System.Collections.Generic.IReadOnlyDictionary<System.String,System.Object>.get_Item(string key);
    private sealed virtual override bool System.Collections.Generic.IReadOnlyDictionary<System.String,System.Object>.ContainsKey(string key);
    private sealed virtual override IEnumerator`1<KeyValuePair`2<string, object>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override bool System.Collections.Generic.IReadOnlyDictionary<System.String,System.Object>.TryGetValue(string key, Object& value);
    protected virtual bool TryGetValue(string key, Object& value);
    protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
}
[DebuggerDisplayAttribute("\{Value={Value}}")]
[DataContractAttribute]
[FhirTypeAttribute("base64Binary", "http://hl7.org/fhir/StructureDefinition/base64Binary")]
public class Hl7.Fhir.Model.Base64Binary : PrimitiveType {
    public static string PATTERN;
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[DataMemberAttribute]
public Byte[] Value { get; public set; }
    public Base64Binary(Byte[] value);
    [NullableContextAttribute("1")]
public static bool IsValidValue(string value);
    public virtual string get_TypeName();
    public sealed virtual Byte[] get_Value();
    public sealed virtual void set_Value(Byte[] value);
}
[DebuggerDisplayAttribute("\{Value={Value}}")]
[DataContractAttribute]
[FhirTypeAttribute("canonical", "http://hl7.org/fhir/StructureDefinition/canonical")]
public class Hl7.Fhir.Model.Canonical : PrimitiveType {
    public static string PATTERN;
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[DataMemberAttribute]
public string Value { get; public set; }
    [NullableContextAttribute("1")]
public Canonical(Uri uri);
    public Canonical(string value);
    [NullableContextAttribute("1")]
public static Canonical op_Implicit(string value);
    [NullableContextAttribute("1")]
public static string op_Implicit(Canonical value);
    [NullableContextAttribute("1")]
public static bool IsValidValue(string value);
    public virtual string get_TypeName();
    public sealed virtual string get_Value();
    public sealed virtual void set_Value(string value);
}
[DebuggerDisplayAttribute("\{Value={Value}}")]
[DataContractAttribute]
[FhirTypeAttribute("code", "http://hl7.org/fhir/StructureDefinition/code")]
public class Hl7.Fhir.Model.Code : PrimitiveType {
    public static string PATTERN;
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[CodePatternAttribute]
[DataMemberAttribute]
public string Value { get; public set; }
    public Code(string value);
    [NullableContextAttribute("1")]
public Code ToSystemCode();
    [NullableContextAttribute("1")]
public static bool IsValidValue(string value);
    public virtual string get_TypeName();
    public sealed virtual string get_Value();
    public sealed virtual void set_Value(string value);
}
[FhirTypeAttribute("codeOfT")]
[DataContractAttribute]
[DebuggerDisplayAttribute("\{Value={Value}}")]
public class Hl7.Fhir.Model.Code`1 : PrimitiveType {
    public string TypeName { get; }
    [FhirElementAttribute]
[DataMemberAttribute]
public Nullable`1<T> Value { get; public set; }
    private string Hl7.Fhir.Model.ISystemAndCode.System { get; }
    private string Hl7.Fhir.Model.ISystemAndCode.Code { get; }
    private static Code`1();
    public Code`1(Nullable`1<T> value);
    public virtual string get_TypeName();
    public sealed virtual Nullable`1<T> get_Value();
    public sealed virtual void set_Value(Nullable`1<T> value);
    internal bool TryParseObjectValue(Nullable`1& value);
    private sealed virtual override string Hl7.Fhir.Model.ISystemAndCode.get_System();
    private sealed virtual override string Hl7.Fhir.Model.ISystemAndCode.get_Code();
    public Code ToSystemCode();
    public virtual IEnumerable`1<ValidationResult> Validate(ValidationContext validationContext);
}
[DataContractAttribute]
[FhirTypeAttribute("CodeableConcept", "http://hl7.org/fhir/StructureDefinition/CodeableConcept")]
[DebuggerDisplayAttribute("\{{DebuggerDisplay(null),nq}}")]
public class Hl7.Fhir.Model.CodeableConcept : DataType {
    private List`1<Coding> _Coding;
    private FhirString _TextElement;
    public string TypeName { get; }
    [FhirElementAttribute("coding")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Coding> Coding { get; public set; }
    [FhirElementAttribute("text")]
[DataMemberAttribute]
public FhirString TextElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Text { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public CodeableConcept(string system, string code, string text);
    public CodeableConcept(string system, string code, string display, string text);
    public Concept ToSystemConcept();
    public virtual string get_TypeName();
    public List`1<Coding> get_Coding();
    public void set_Coding(List`1<Coding> value);
    public FhirString get_TextElement();
    public void set_TextElement(FhirString value);
    public string get_Text();
    public void set_Text(string value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CodeableConcept/<get_Children>d__19")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CodeableConcept/<get_NamedChildren>d__21")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.CodeableConcept/<GetElementPairs>d__23")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    internal string DebuggerDisplay(string prefix);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DebuggerDisplayAttribute("\{{DebuggerDisplay,nq}}")]
[DataContractAttribute]
[FhirTypeAttribute("Coding", "http://hl7.org/fhir/StructureDefinition/Coding")]
public class Hl7.Fhir.Model.Coding : DataType {
    private FhirUri _SystemElement;
    private FhirString _VersionElement;
    private Code _CodeElement;
    private FhirString _DisplayElement;
    private FhirBoolean _UserSelectedElement;
    [DebuggerBrowsableAttribute("0")]
public string DebuggerDisplay { get; }
    public string TypeName { get; }
    [FhirElementAttribute("system")]
[DataMemberAttribute]
public FhirUri SystemElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string System { get; public set; }
    [FhirElementAttribute("version")]
[DataMemberAttribute]
public FhirString VersionElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Version { get; public set; }
    [FhirElementAttribute("code")]
[DataMemberAttribute]
public Code CodeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Code { get; public set; }
    [FhirElementAttribute("display")]
[DataMemberAttribute]
public FhirString DisplayElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Display { get; public set; }
    [FhirElementAttribute("userSelected")]
[DataMemberAttribute]
public FhirBoolean UserSelectedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<bool> UserSelected { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public Coding(string system, string code);
    public Coding(string system, string code, string display);
    public string get_DebuggerDisplay();
    public Code ToSystemCode();
    public virtual string get_TypeName();
    public FhirUri get_SystemElement();
    public void set_SystemElement(FhirUri value);
    public string get_System();
    public void set_System(string value);
    public FhirString get_VersionElement();
    public void set_VersionElement(FhirString value);
    public string get_Version();
    public void set_Version(string value);
    public Code get_CodeElement();
    public void set_CodeElement(Code value);
    public string get_Code();
    public void set_Code(string value);
    public FhirString get_DisplayElement();
    public void set_DisplayElement(FhirString value);
    public string get_Display();
    public void set_Display(string value);
    public FhirBoolean get_UserSelectedElement();
    public void set_UserSelectedElement(FhirBoolean value);
    public Nullable`1<bool> get_UserSelected();
    public void set_UserSelected(Nullable`1<bool> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Coding/<get_Children>d__48")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Coding/<get_NamedChildren>d__50")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Coding/<GetElementPairs>d__52")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("ContactDetail", "http://hl7.org/fhir/StructureDefinition/ContactDetail")]
public class Hl7.Fhir.Model.ContactDetail : DataType {
    private FhirString _NameElement;
    private List`1<ContactPoint> _Telecom;
    public string TypeName { get; }
    [FhirElementAttribute("name")]
[DataMemberAttribute]
public FhirString NameElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Name { get; public set; }
    [FhirElementAttribute("telecom")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ContactPoint> Telecom { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public FhirString get_NameElement();
    public void set_NameElement(FhirString value);
    public string get_Name();
    public void set_Name(string value);
    public List`1<ContactPoint> get_Telecom();
    public void set_Telecom(List`1<ContactPoint> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ContactDetail/<get_Children>d__18")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ContactDetail/<get_NamedChildren>d__20")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ContactDetail/<GetElementPairs>d__22")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DebuggerDisplayAttribute("\{{DebuggerDisplay,nq}}")]
[DataContractAttribute]
[FhirTypeAttribute("ContactPoint", "http://hl7.org/fhir/StructureDefinition/ContactPoint")]
public class Hl7.Fhir.Model.ContactPoint : DataType {
    private Code`1<ContactPointSystem> _SystemElement;
    private FhirString _ValueElement;
    private Code`1<ContactPointUse> _UseElement;
    private PositiveInt _RankElement;
    private Period _Period;
    [DebuggerBrowsableAttribute("0")]
[NotMappedAttribute]
private string DebuggerDisplay { get; }
    public string TypeName { get; }
    [FhirElementAttribute("system")]
[DeclaredTypeAttribute]
[DataMemberAttribute]
public Code`1<ContactPointSystem> SystemElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ContactPointSystem> System { get; public set; }
    [FhirElementAttribute("value")]
[DataMemberAttribute]
public FhirString ValueElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Value { get; public set; }
    [FhirElementAttribute("use")]
[DeclaredTypeAttribute]
[DataMemberAttribute]
public Code`1<ContactPointUse> UseElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<ContactPointUse> Use { get; public set; }
    [FhirElementAttribute("rank")]
[DataMemberAttribute]
public PositiveInt RankElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<int> Rank { get; public set; }
    [FhirElementAttribute("period")]
[DataMemberAttribute]
public Period Period { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public ContactPoint(Nullable`1<ContactPointSystem> system, Nullable`1<ContactPointUse> use, string value);
    private string get_DebuggerDisplay();
    public virtual string get_TypeName();
    public Code`1<ContactPointSystem> get_SystemElement();
    public void set_SystemElement(Code`1<ContactPointSystem> value);
    public Nullable`1<ContactPointSystem> get_System();
    public void set_System(Nullable`1<ContactPointSystem> value);
    public FhirString get_ValueElement();
    public void set_ValueElement(FhirString value);
    public string get_Value();
    public void set_Value(string value);
    public Code`1<ContactPointUse> get_UseElement();
    public void set_UseElement(Code`1<ContactPointUse> value);
    public Nullable`1<ContactPointUse> get_Use();
    public void set_Use(Nullable`1<ContactPointUse> value);
    public PositiveInt get_RankElement();
    public void set_RankElement(PositiveInt value);
    public Nullable`1<int> get_Rank();
    public void set_Rank(Nullable`1<int> value);
    public Period get_Period();
    public void set_Period(Period value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ContactPoint/<get_Children>d__43")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ContactPoint/<get_NamedChildren>d__45")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ContactPoint/<GetElementPairs>d__47")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("DataType", "http://hl7.org/fhir/StructureDefinition/DataType")]
public abstract class Hl7.Fhir.Model.DataType : Element {
    public string TypeName { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DataType/<get_Children>d__6")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DataType/<get_NamedChildren>d__8")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
}
[DebuggerDisplayAttribute("\{Value={Value}}")]
[DataContractAttribute]
[FhirTypeAttribute("date", "http://hl7.org/fhir/StructureDefinition/date")]
public class Hl7.Fhir.Model.Date : PrimitiveType {
    public static string PATTERN;
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[DatePatternAttribute]
[DataMemberAttribute]
public string Value { get; public set; }
    public Date(int year, int month, int day);
    public Date(int year, int month);
    public Date(int year);
    public Date(string value);
    public static bool op_GreaterThan(Date a, Date b);
    public static bool op_GreaterThanOrEqual(Date a, Date b);
    public static bool op_LessThan(Date a, Date b);
    public static bool op_LessThanOrEqual(Date a, Date b);
    public static bool op_Equality(Date a, Date b);
    public static bool op_Inequality(Date a, Date b);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public static Date Today();
    [NullableContextAttribute("1")]
public static Date UtcToday();
    [ObsoleteAttribute("Use ToDateTimeOffset instead")]
public Nullable`1<DateTime> ToDateTime();
    public Nullable`1<DateTimeOffset> ToDateTimeOffset();
    [NullableContextAttribute("1")]
public static bool IsValidValue(string value);
    public virtual string get_TypeName();
    public sealed virtual string get_Value();
    public sealed virtual void set_Value(string value);
}
[ExtensionAttribute]
public static class Hl7.Fhir.Model.DeepComparable : object {
    public static bool IsExactly(IDeepComparable a, IDeepComparable b);
    public static bool Matches(IDeepComparable a, IDeepComparable pattern);
    [ExtensionAttribute]
public static bool IsExactly(IEnumerable`1<T> source, IEnumerable`1<T> other);
    [ExtensionAttribute]
public static bool Matches(IEnumerable`1<T> source, IEnumerable`1<T> pattern);
}
[DebuggerDisplayAttribute("\{"{TypeName,nq}/{Id,nq}" Identity={DebuggerDisplay}}")]
[DataContractAttribute]
[FhirTypeAttribute("DomainResource", "http://hl7.org/fhir/StructureDefinition/DomainResource")]
public abstract class Hl7.Fhir.Model.DomainResource : Resource {
    private Narrative _Text;
    private List`1<Resource> _Contained;
    private List`1<Extension> _Extension;
    private List`1<Extension> _ModifierExtension;
    [DebuggerBrowsableAttribute("0")]
private ResourceIdentity DebuggerDisplay { get; }
    public string TypeName { get; }
    [FhirElementAttribute("text")]
[DataMemberAttribute]
public Narrative Text { get; public set; }
    [FhirElementAttribute("contained")]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Resource> Contained { get; public set; }
    [FhirElementAttribute("extension")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Extension> Extension { get; public set; }
    [FhirElementAttribute("modifierExtension")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Extension> ModifierExtension { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    private ResourceIdentity get_DebuggerDisplay();
    public virtual IEnumerable`1<ValidationResult> Validate(ValidationContext validationContext);
    public Resource FindContainedResource(ResourceReference reference);
    public Resource FindContainedResource(string reference);
    public virtual string get_TypeName();
    public Narrative get_Text();
    public void set_Text(Narrative value);
    public List`1<Resource> get_Contained();
    public void set_Contained(List`1<Resource> value);
    public sealed virtual List`1<Extension> get_Extension();
    public sealed virtual void set_Extension(List`1<Extension> value);
    public sealed virtual List`1<Extension> get_ModifierExtension();
    public sealed virtual void set_ModifierExtension(List`1<Extension> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DomainResource/<get_Children>d__27")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DomainResource/<get_NamedChildren>d__29")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.DomainResource/<GetElementPairs>d__31")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Element", "http://hl7.org/fhir/StructureDefinition/Element")]
public abstract class Hl7.Fhir.Model.Element : Base {
    private string _ElementId;
    private List`1<Extension> _Extension;
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[DataMemberAttribute]
public string ElementId { get; public set; }
    [FhirElementAttribute("extension")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Extension> Extension { get; public set; }
    public IEnumerable`1<Base> Children { get; }
    public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public string get_ElementId();
    public void set_ElementId(string value);
    public sealed virtual List`1<Extension> get_Extension();
    public sealed virtual void set_Extension(List`1<Extension> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Element/<get_Children>d__14")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Element/<get_NamedChildren>d__16")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Element/<GetElementPairs>d__18")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
public class Hl7.Fhir.Model.ElementValue : ValueType {
    public string ElementName;
    public Base Value;
    public ElementValue(string name, Base value);
}
[DebuggerDisplayAttribute("\{Value={Value} Url={_Url}}")]
[FhirTypeAttribute("Extension", "http://hl7.org/fhir/StructureDefinition/Extension")]
[DataContractAttribute]
public class Hl7.Fhir.Model.Extension : DataType {
    private string _Url;
    private DataType _Value;
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[CardinalityAttribute]
[UriPatternAttribute]
[DataMemberAttribute]
public string Url { get; public set; }
    [FhirElementAttribute("value")]
[DataMemberAttribute]
public DataType Value { get; public set; }
    public IEnumerable`1<Base> Children { get; }
    public IEnumerable`1<ElementValue> NamedChildren { get; }
    public Extension(string url, DataType value);
    public virtual string get_TypeName();
    public string get_Url();
    public void set_Url(string value);
    public DataType get_Value();
    public void set_Value(DataType value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Extension/<get_Children>d__17")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Extension/<get_NamedChildren>d__19")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Extension/<GetElementPairs>d__21")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[ExtensionAttribute]
public static class Hl7.Fhir.Model.ExtensionExtensions : object {
    [ExtensionAttribute]
public static string GetStringExtension(IExtendable extendable, string uri);
    [ExtensionAttribute]
public static void SetStringExtension(IExtendable extendable, string uri, string value);
    [ExtensionAttribute]
public static Nullable`1<bool> GetBoolExtension(IExtendable extendable, string uri);
    [ExtensionAttribute]
public static void SetBoolExtension(IExtendable extendable, string uri, bool value);
    [ExtensionAttribute]
public static Nullable`1<int> GetIntegerExtension(IExtendable extendable, string uri);
    [ExtensionAttribute]
public static void SetIntegerExtension(IExtendable extendable, string uri, int value);
    [ExtensionAttribute]
public static IEnumerable`1<Extension> AllExtensions(IExtendable extendable);
    [ExtensionAttribute]
public static Extension GetExtension(IExtendable extendable, string uri);
    [ExtensionAttribute]
public static IEnumerable`1<Extension> GetExtensions(IExtendable extendable, string uri);
    [ExtensionAttribute]
public static IEnumerable`1<Extension> GetExtensions(IModifierExtendable extendable, string uri);
    [ExtensionAttribute]
public static T GetExtensionValue(IExtendable extendable, string uri);
    [ExtensionAttribute]
public static bool HasExtensions(IExtendable extendable);
    [ExtensionAttribute]
public static bool HasExtensions(IModifierExtendable extendable);
    [ExtensionAttribute]
public static Extension AddExtension(IExtendable extendable, string uri, DataType value, bool isModifier);
    [ExtensionAttribute]
public static void RemoveExtension(IExtendable extendable, string uri);
    [ExtensionAttribute]
public static Extension SetExtension(IExtendable extendable, string uri, DataType value, bool isModifier);
}
[DebuggerDisplayAttribute("\{Value={Value}}")]
[DataContractAttribute]
[FhirTypeAttribute("boolean", "http://hl7.org/fhir/StructureDefinition/boolean")]
public class Hl7.Fhir.Model.FhirBoolean : PrimitiveType {
    public static string PATTERN;
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[DataMemberAttribute]
public Nullable`1<bool> Value { get; public set; }
    public FhirBoolean(Nullable`1<bool> value);
    [NullableContextAttribute("1")]
public static bool IsValidValue(string value);
    public virtual string get_TypeName();
    public sealed virtual Nullable`1<bool> get_Value();
    public sealed virtual void set_Value(Nullable`1<bool> value);
}
[DebuggerDisplayAttribute("\{Value={Value}}")]
[DataContractAttribute]
[FhirTypeAttribute("dateTime", "http://hl7.org/fhir/StructureDefinition/dateTime")]
public class Hl7.Fhir.Model.FhirDateTime : PrimitiveType {
    [NullableAttribute("1")]
public static string FMT_FULL;
    [NullableAttribute("1")]
public static string FMT_YEAR;
    [NullableAttribute("1")]
public static string FMT_YEARMONTH;
    [NullableAttribute("1")]
public static string FMT_YEARMONTHDAY;
    [NullableAttribute("1")]
private static string DATEFORMAT;
    [NullableAttribute("1")]
private static string TIMEFORMAT;
    [NullableAttribute("1")]
private static Regex DATETIMEREGEX;
    public static string PATTERN;
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[DateTimePatternAttribute]
[DataMemberAttribute]
public string Value { get; public set; }
    public FhirDateTime(DateTimeOffset dt);
    [ObsoleteAttribute("Use FhirDateTime(DateTimeOffset dt) instead")]
public FhirDateTime(DateTime dt);
    [ObsoleteAttribute("Use FhirDateTime(int year, int month, int day, int hr, int min, int sec, TimeSpan offset) instead")]
public FhirDateTime(int year, int month, int day, int hr, int min, int sec);
    public FhirDateTime(int year, int month, int day, int hr, int min, int sec, TimeSpan offset);
    public FhirDateTime(int year, int month, int day);
    public FhirDateTime(int year, int month);
    public FhirDateTime(int year);
    public FhirDateTime(string value);
    private static FhirDateTime();
    public static bool op_GreaterThan(FhirDateTime a, FhirDateTime b);
    public static bool op_GreaterThanOrEqual(FhirDateTime a, FhirDateTime b);
    public static bool op_LessThan(FhirDateTime a, FhirDateTime b);
    public static bool op_LessThanOrEqual(FhirDateTime a, FhirDateTime b);
    public static bool op_Equality(FhirDateTime a, FhirDateTime b);
    public static bool op_Inequality(FhirDateTime a, FhirDateTime b);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public static FhirDateTime Now();
    [ObsoleteAttribute("Use ToDateTimeOffset(TimeSpan zone) instead. Obsolete since 2018-11-22")]
public DateTimeOffset ToDateTimeOffset(Nullable`1<TimeSpan> zone);
    public DateTimeOffset ToDateTimeOffset(TimeSpan zone);
    public bool TryToDateTimeOffset(DateTimeOffset& dto);
    private bool tryGetTimeSpan(TimeSpan& ts);
    [NullableContextAttribute("2")]
private bool tryGetTimeZone(String& timezone);
    [ObsoleteAttribute("Use ToDateTimeOffset(TimeSpan zone) instead")]
public Nullable`1<DateTime> ToDateTime();
    [NullableContextAttribute("1")]
public static bool IsValidValue(string value);
    public virtual string get_TypeName();
    public sealed virtual string get_Value();
    public sealed virtual void set_Value(string value);
}
[DebuggerDisplayAttribute("\{Value={Value}}")]
[DataContractAttribute]
[FhirTypeAttribute("decimal", "http://hl7.org/fhir/StructureDefinition/decimal")]
public class Hl7.Fhir.Model.FhirDecimal : PrimitiveType {
    public static string PATTERN;
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[DataMemberAttribute]
public Nullable`1<decimal> Value { get; public set; }
    public FhirDecimal(Nullable`1<decimal> value);
    [NullableContextAttribute("1")]
public static bool IsValidValue(string value);
    public virtual string get_TypeName();
    public sealed virtual Nullable`1<decimal> get_Value();
    public sealed virtual void set_Value(Nullable`1<decimal> value);
}
[DebuggerDisplayAttribute("\{Value={Value}}")]
[DataContractAttribute]
[FhirTypeAttribute("string", "http://hl7.org/fhir/StructureDefinition/string")]
public class Hl7.Fhir.Model.FhirString : PrimitiveType {
    public static string PATTERN;
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[DataMemberAttribute]
public string Value { get; public set; }
    public FhirString(string value);
    [NullableContextAttribute("1")]
public static bool IsValidValue(string value);
    public virtual string get_TypeName();
    public sealed virtual string get_Value();
    public sealed virtual void set_Value(string value);
}
[DebuggerDisplayAttribute("\{Value={Value}}")]
[DataContractAttribute]
[FhirTypeAttribute("uri", "http://hl7.org/fhir/StructureDefinition/uri")]
public class Hl7.Fhir.Model.FhirUri : PrimitiveType {
    public static string PATTERN;
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[UriPatternAttribute]
[DataMemberAttribute]
public string Value { get; public set; }
    [NullableContextAttribute("1")]
public FhirUri(Uri uri);
    public FhirUri(string value);
    [NullableContextAttribute("1")]
public static bool IsValidValue(string value);
    public virtual string get_TypeName();
    public sealed virtual string get_Value();
    public sealed virtual void set_Value(string value);
}
[DebuggerDisplayAttribute("\{Value={Value}}")]
[DataContractAttribute]
[FhirTypeAttribute("url", "http://hl7.org/fhir/StructureDefinition/url")]
public class Hl7.Fhir.Model.FhirUrl : PrimitiveType {
    public static string PATTERN;
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[DataMemberAttribute]
public string Value { get; public set; }
    [NullableContextAttribute("1")]
public FhirUrl(Uri uri);
    public FhirUrl(string value);
    [NullableContextAttribute("1")]
public static bool IsValidValue(string value);
    public virtual string get_TypeName();
    public sealed virtual string get_Value();
    public sealed virtual void set_Value(string value);
}
[FhirEnumerationAttribute("FilterOperator")]
public enum Hl7.Fhir.Model.FilterOperator : Enum {
    public int value__;
    [EnumLiteralAttribute("=", "http://hl7.org/fhir/filter-operator")]
[DescriptionAttribute("Equals")]
public static FilterOperator Equal;
    [EnumLiteralAttribute("is-a", "http://hl7.org/fhir/filter-operator")]
[DescriptionAttribute("Is A (by subsumption)")]
public static FilterOperator IsA;
    [EnumLiteralAttribute("descendent-of", "http://hl7.org/fhir/filter-operator")]
[DescriptionAttribute("Descendent Of (by subsumption)")]
public static FilterOperator DescendentOf;
    [EnumLiteralAttribute("is-not-a", "http://hl7.org/fhir/filter-operator")]
[DescriptionAttribute("Not (Is A) (by subsumption)")]
public static FilterOperator IsNotA;
    [EnumLiteralAttribute("regex", "http://hl7.org/fhir/filter-operator")]
[DescriptionAttribute("Regular Expression")]
public static FilterOperator Regex;
    [EnumLiteralAttribute("in", "http://hl7.org/fhir/filter-operator")]
[DescriptionAttribute("In Set")]
public static FilterOperator In;
    [EnumLiteralAttribute("not-in", "http://hl7.org/fhir/filter-operator")]
[DescriptionAttribute("Not in Set")]
public static FilterOperator NotIn;
    [EnumLiteralAttribute("generalizes", "http://hl7.org/fhir/filter-operator")]
[DescriptionAttribute("Generalizes (by Subsumption)")]
public static FilterOperator Generalizes;
    [EnumLiteralAttribute("child-of", "http://hl7.org/fhir/filter-operator")]
[DescriptionAttribute("Child Of")]
public static FilterOperator ChildOf;
    [EnumLiteralAttribute("descendent-leaf", "http://hl7.org/fhir/filter-operator")]
[DescriptionAttribute("Descendent Leaf")]
public static FilterOperator DescendentLeaf;
    [EnumLiteralAttribute("exists", "http://hl7.org/fhir/filter-operator")]
[DescriptionAttribute("Exists")]
public static FilterOperator Exists;
}
public interface Hl7.Fhir.Model.IConformanceResource {
    public string Url { get; public set; }
    public FhirUri UrlElement { get; public set; }
    public string Name { get; public set; }
    public FhirString NameElement { get; public set; }
    public Nullable`1<PublicationStatus> Status { get; public set; }
    public string Publisher { get; public set; }
    public FhirString PublisherElement { get; public set; }
    public List`1<ContactDetail> Contact { get; public set; }
    public Markdown Description { get; public set; }
    public List`1<UsageContext> UseContext { get; public set; }
    public Markdown Purpose { get; public set; }
    public Code`1<PublicationStatus> StatusElement { get; public set; }
    public Nullable`1<bool> Experimental { get; public set; }
    public FhirBoolean ExperimentalElement { get; public set; }
    public string Date { get; public set; }
    public FhirDateTime DateElement { get; public set; }
    public abstract virtual string get_Url();
    public abstract virtual void set_Url(string value);
    public abstract virtual FhirUri get_UrlElement();
    public abstract virtual void set_UrlElement(FhirUri value);
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual FhirString get_NameElement();
    public abstract virtual void set_NameElement(FhirString value);
    public abstract virtual Nullable`1<PublicationStatus> get_Status();
    public abstract virtual void set_Status(Nullable`1<PublicationStatus> value);
    public abstract virtual string get_Publisher();
    public abstract virtual void set_Publisher(string value);
    public abstract virtual FhirString get_PublisherElement();
    public abstract virtual void set_PublisherElement(FhirString value);
    public abstract virtual List`1<ContactDetail> get_Contact();
    public abstract virtual void set_Contact(List`1<ContactDetail> value);
    public abstract virtual Markdown get_Description();
    public abstract virtual void set_Description(Markdown value);
    public abstract virtual List`1<UsageContext> get_UseContext();
    public abstract virtual void set_UseContext(List`1<UsageContext> value);
    public abstract virtual Markdown get_Purpose();
    public abstract virtual void set_Purpose(Markdown value);
    public abstract virtual Code`1<PublicationStatus> get_StatusElement();
    public abstract virtual void set_StatusElement(Code`1<PublicationStatus> value);
    public abstract virtual Nullable`1<bool> get_Experimental();
    public abstract virtual void set_Experimental(Nullable`1<bool> value);
    public abstract virtual FhirBoolean get_ExperimentalElement();
    public abstract virtual void set_ExperimentalElement(FhirBoolean value);
    public abstract virtual string get_Date();
    public abstract virtual void set_Date(string value);
    public abstract virtual FhirDateTime get_DateElement();
    public abstract virtual void set_DateElement(FhirDateTime value);
}
[DebuggerDisplayAttribute("\{Value={Value}}")]
[DataContractAttribute]
[FhirTypeAttribute("id", "http://hl7.org/fhir/StructureDefinition/id")]
public class Hl7.Fhir.Model.Id : PrimitiveType {
    public static string PATTERN;
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[IdPatternAttribute]
[DataMemberAttribute]
public string Value { get; public set; }
    public Id(string value);
    public virtual string get_TypeName();
    public sealed virtual string get_Value();
    public sealed virtual void set_Value(string value);
    [NullableContextAttribute("1")]
public static bool IsValidValue(string value);
}
public interface Hl7.Fhir.Model.IDeepComparable {
    public abstract virtual bool IsExactly(IDeepComparable other);
    public abstract virtual bool Matches(IDeepComparable pattern);
}
public interface Hl7.Fhir.Model.IDeepCopyable {
    public abstract virtual IDeepCopyable DeepCopy();
    public abstract virtual IDeepCopyable CopyTo(IDeepCopyable other);
}
[DataContractAttribute]
[FhirTypeAttribute("Identifier", "http://hl7.org/fhir/StructureDefinition/Identifier")]
[DebuggerDisplayAttribute("\{ Value={ValueElement.Value} System={System}}")]
public class Hl7.Fhir.Model.Identifier : DataType {
    private Code`1<IdentifierUse> _UseElement;
    private CodeableConcept _Type;
    private FhirUri _SystemElement;
    private FhirString _ValueElement;
    private Period _Period;
    private ResourceReference _Assigner;
    public static string SYSTMEM_URI;
    public string TypeName { get; }
    [FhirElementAttribute("use")]
[DeclaredTypeAttribute]
[DataMemberAttribute]
public Code`1<IdentifierUse> UseElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<IdentifierUse> Use { get; public set; }
    [FhirElementAttribute("type")]
[DataMemberAttribute]
public CodeableConcept Type { get; public set; }
    [FhirElementAttribute("system")]
[DataMemberAttribute]
public FhirUri SystemElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string System { get; public set; }
    [FhirElementAttribute("value")]
[DataMemberAttribute]
public FhirString ValueElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Value { get; public set; }
    [FhirElementAttribute("period")]
[DataMemberAttribute]
public Period Period { get; public set; }
    [FhirElementAttribute("assigner")]
[DataMemberAttribute]
public ResourceReference Assigner { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public Identifier(string system, string value);
    public virtual string get_TypeName();
    public Code`1<IdentifierUse> get_UseElement();
    public void set_UseElement(Code`1<IdentifierUse> value);
    public Nullable`1<IdentifierUse> get_Use();
    public void set_Use(Nullable`1<IdentifierUse> value);
    public CodeableConcept get_Type();
    public void set_Type(CodeableConcept value);
    public FhirUri get_SystemElement();
    public void set_SystemElement(FhirUri value);
    public string get_System();
    public void set_System(string value);
    public FhirString get_ValueElement();
    public void set_ValueElement(FhirString value);
    public string get_Value();
    public void set_Value(string value);
    public Period get_Period();
    public void set_Period(Period value);
    public ResourceReference get_Assigner();
    public void set_Assigner(ResourceReference value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Identifier/<get_Children>d__41")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Identifier/<get_NamedChildren>d__43")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Identifier/<GetElementPairs>d__45")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
public interface Hl7.Fhir.Model.IExtendable {
    public List`1<Extension> Extension { get; public set; }
    public abstract virtual List`1<Extension> get_Extension();
    public abstract virtual void set_Extension(List`1<Extension> value);
}
public interface Hl7.Fhir.Model.IModifierExtendable {
    public List`1<Extension> ModifierExtension { get; public set; }
    public abstract virtual List`1<Extension> get_ModifierExtension();
    public abstract virtual void set_ModifierExtension(List`1<Extension> value);
}
[DebuggerDisplayAttribute("\{Value={Value}}")]
[DataContractAttribute]
[FhirTypeAttribute("instant", "http://hl7.org/fhir/StructureDefinition/instant")]
public class Hl7.Fhir.Model.Instant : PrimitiveType {
    public static string PATTERN;
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[DataMemberAttribute]
public Nullable`1<DateTimeOffset> Value { get; public set; }
    public Instant(Nullable`1<DateTimeOffset> value);
    public virtual string get_TypeName();
    public sealed virtual Nullable`1<DateTimeOffset> get_Value();
    public sealed virtual void set_Value(Nullable`1<DateTimeOffset> value);
    public static bool op_GreaterThan(Instant a, Instant b);
    public static bool op_GreaterThanOrEqual(Instant a, Instant b);
    public static bool op_LessThan(Instant a, Instant b);
    public static bool op_LessThanOrEqual(Instant a, Instant b);
    public static bool op_Equality(Instant a, Instant b);
    public static bool op_Inequality(Instant a, Instant b);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public static Instant FromLocalDateTime(int year, int month, int day, int hour, int min, int sec, int millis);
    [NullableContextAttribute("1")]
public static Instant FromDateTimeUtc(int year, int month, int day, int hour, int min, int sec, int millis);
    [NullableContextAttribute("1")]
public static Instant Now();
    [NullableContextAttribute("1")]
public static bool IsValidValue(string value);
}
[DebuggerDisplayAttribute("\{Value={Value}}")]
[DataContractAttribute]
[FhirTypeAttribute("integer", "http://hl7.org/fhir/StructureDefinition/integer")]
public class Hl7.Fhir.Model.Integer : PrimitiveType {
    public static string PATTERN;
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[DataMemberAttribute]
public Nullable`1<int> Value { get; public set; }
    public Integer(Nullable`1<int> value);
    public virtual string get_TypeName();
    public sealed virtual Nullable`1<int> get_Value();
    public sealed virtual void set_Value(Nullable`1<int> value);
    [NullableContextAttribute("1")]
public static bool IsValidValue(string value);
}
[DebuggerDisplayAttribute("\{Value={Value}}")]
[DataContractAttribute]
[FhirTypeAttribute("integer64", "http://hl7.org/fhir/StructureDefinition/integer64")]
public class Hl7.Fhir.Model.Integer64 : PrimitiveType {
    public static string PATTERN;
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[DataMemberAttribute]
public Nullable`1<long> Value { get; public set; }
    public Integer64(Nullable`1<long> value);
    public virtual string get_TypeName();
    public sealed virtual Nullable`1<long> get_Value();
    public sealed virtual void set_Value(Nullable`1<long> value);
    [NullableContextAttribute("1")]
public static bool IsValidValue(string value);
}
public interface Hl7.Fhir.Model.INullableValue`1 {
}
public interface Hl7.Fhir.Model.ISystemAndCode {
    public string System { get; }
    public string Code { get; }
    public abstract virtual string get_System();
    public abstract virtual string get_Code();
}
public interface Hl7.Fhir.Model.IValue`1 {
    public T Value { get; public set; }
    public abstract virtual T get_Value();
    public abstract virtual void set_Value(T value);
}
public interface Hl7.Fhir.Model.IVersionableConformanceResource {
    public string Version { get; public set; }
    public FhirString VersionElement { get; public set; }
    public abstract virtual string get_Version();
    public abstract virtual void set_Version(string value);
    public abstract virtual FhirString get_VersionElement();
    public abstract virtual void set_VersionElement(FhirString value);
}
[ExtensionAttribute]
public static class Hl7.Fhir.Model.ListCopyExtensions : object {
    [ExtensionAttribute]
public static IEnumerable`1<T> DeepCopy(IEnumerable`1<T> source);
}
[DebuggerDisplayAttribute("\{Value={Value}}")]
[DataContractAttribute]
[FhirTypeAttribute("markdown", "http://hl7.org/fhir/StructureDefinition/markdown")]
public class Hl7.Fhir.Model.Markdown : PrimitiveType {
    public static string PATTERN;
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[DataMemberAttribute]
public string Value { get; public set; }
    public Markdown(string value);
    public virtual string get_TypeName();
    public sealed virtual string get_Value();
    public sealed virtual void set_Value(string value);
    [NullableContextAttribute("1")]
public static bool IsValidValue(string value);
}
[DataContractAttribute]
[FhirTypeAttribute("Meta", "http://hl7.org/fhir/StructureDefinition/Meta")]
public class Hl7.Fhir.Model.Meta : DataType {
    private Id _VersionIdElement;
    private Instant _LastUpdatedElement;
    private FhirUri _SourceElement;
    private List`1<FhirUri> _ProfileElement;
    private List`1<Coding> _Security;
    private List`1<Coding> _Tag;
    public string TypeName { get; }
    [FhirElementAttribute("versionId")]
[DataMemberAttribute]
public Id VersionIdElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string VersionId { get; public set; }
    [FhirElementAttribute("lastUpdated")]
[DataMemberAttribute]
public Instant LastUpdatedElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<DateTimeOffset> LastUpdated { get; public set; }
    [FhirElementAttribute]
[DataMemberAttribute]
public FhirUri SourceElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Source { get; public set; }
    [FhirElementAttribute("profile")]
[DeclaredTypeAttribute]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<FhirUri> ProfileElement { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<string> Profile { get; public set; }
    [FhirElementAttribute("security")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Coding> Security { get; public set; }
    [FhirElementAttribute("tag")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<Coding> Tag { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Id get_VersionIdElement();
    public void set_VersionIdElement(Id value);
    public string get_VersionId();
    public void set_VersionId(string value);
    public Instant get_LastUpdatedElement();
    public void set_LastUpdatedElement(Instant value);
    public Nullable`1<DateTimeOffset> get_LastUpdated();
    public void set_LastUpdated(Nullable`1<DateTimeOffset> value);
    public FhirUri get_SourceElement();
    public void set_SourceElement(FhirUri value);
    public string get_Source();
    public void set_Source(string value);
    public List`1<FhirUri> get_ProfileElement();
    public void set_ProfileElement(List`1<FhirUri> value);
    public IEnumerable`1<string> get_Profile();
    public void set_Profile(IEnumerable`1<string> value);
    public List`1<Coding> get_Security();
    public void set_Security(List`1<Coding> value);
    public List`1<Coding> get_Tag();
    public void set_Tag(List`1<Coding> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Meta/<get_Children>d__43")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Meta/<get_NamedChildren>d__45")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Meta/<GetElementPairs>d__47")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[FhirTypeAttribute("Narrative", "http://hl7.org/fhir/StructureDefinition/Narrative")]
[DataContractAttribute]
public class Hl7.Fhir.Model.Narrative : DataType {
    private Code`1<NarrativeStatus> _StatusElement;
    private string _Div;
    public string TypeName { get; }
    [FhirElementAttribute("status")]
[CardinalityAttribute]
[DeclaredTypeAttribute]
[DataMemberAttribute]
public Code`1<NarrativeStatus> StatusElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<NarrativeStatus> Status { get; public set; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[CardinalityAttribute]
[NarrativeXhtmlPatternAttribute]
[DataMemberAttribute]
public string Div { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public Narrative(string html);
    public virtual string get_TypeName();
    public Code`1<NarrativeStatus> get_StatusElement();
    public void set_StatusElement(Code`1<NarrativeStatus> value);
    public Nullable`1<NarrativeStatus> get_Status();
    public void set_Status(Nullable`1<NarrativeStatus> value);
    public string get_Div();
    public void set_Div(string value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Narrative/<get_Children>d__21")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Narrative/<get_NamedChildren>d__23")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Narrative/<GetElementPairs>d__25")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DebuggerDisplayAttribute("\{Value={Value}}")]
[DataContractAttribute]
[FhirTypeAttribute("oid", "http://hl7.org/fhir/StructureDefinition/oid")]
public class Hl7.Fhir.Model.Oid : PrimitiveType {
    public static string PATTERN;
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[OidPatternAttribute]
[DataMemberAttribute]
public string Value { get; public set; }
    public Oid(string value);
    public virtual string get_TypeName();
    public sealed virtual string get_Value();
    public sealed virtual void set_Value(string value);
    [NullableContextAttribute("1")]
public FhirUri AsUri();
    [NullableContextAttribute("1")]
public static bool IsValidValue(string value);
}
[DataContractAttribute]
[FhirTypeAttribute("OperationOutcome", "http://hl7.org/fhir/StructureDefinition/OperationOutcome")]
[DebuggerDisplayAttribute("\{{ToString()}}")]
public class Hl7.Fhir.Model.OperationOutcome : DomainResource {
    private List`1<IssueComponent> _Issue;
    public string TypeName { get; }
    [FhirElementAttribute("issue")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<IssueComponent> Issue { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    [NotMappedAttribute]
public bool Success { get; }
    [NotMappedAttribute]
public int Fatals { get; }
    [NotMappedAttribute]
public int Errors { get; }
    [NotMappedAttribute]
public int Warnings { get; }
    public virtual string get_TypeName();
    public List`1<IssueComponent> get_Issue();
    public void set_Issue(List`1<IssueComponent> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.OperationOutcome/<get_Children>d__14")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.OperationOutcome/<get_NamedChildren>d__16")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.OperationOutcome/<GetElementPairs>d__18")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    public static OperationOutcome ForMessage(string message, IssueType code, IssueSeverity severity);
    public static OperationOutcome ForException(Exception e, IssueType type, IssueSeverity severity);
    public virtual string ToString();
    public bool get_Success();
    public int get_Fatals();
    public int get_Errors();
    public int get_Warnings();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DefaultMemberAttribute("Item")]
[DataContractAttribute]
[FhirTypeAttribute("Parameters", "http://hl7.org/fhir/StructureDefinition/Parameters")]
[DebuggerDisplayAttribute("\{Count={_Parameter != null ? _Parameter.Count : 0}}")]
public class Hl7.Fhir.Model.Parameters : Resource {
    private List`1<ParameterComponent> _Parameter;
    public string TypeName { get; }
    [FhirElementAttribute("parameter")]
[CardinalityAttribute]
[DataMemberAttribute]
public List`1<ParameterComponent> Parameter { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public ParameterComponent Item { get; }
    public virtual string get_TypeName();
    public List`1<ParameterComponent> get_Parameter();
    public void set_Parameter(List`1<ParameterComponent> value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Parameters/<get_Children>d__12")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Parameters/<get_NamedChildren>d__14")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Parameters/<GetElementPairs>d__16")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    public Parameters Add(string name, Base value);
    public Parameters Add(string name, IEnumerable`1<Tuple`2<string, Base>> tuples);
    public void Remove(string name, bool matchPrefix);
    public IEnumerable`1<ParameterComponent> Get(string name, bool matchPrefix);
    public ParameterComponent GetSingle(string name, bool matchPrefix);
    public ParameterComponent get_Item(string name);
    public T GetSingleValue(string name, bool matchPrefix);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[ExtensionAttribute]
public static class Hl7.Fhir.Model.ParametersExtensions : object {
    [ExtensionAttribute]
public static bool TryGetDuplicates(Parameters parameters, IEnumerable`1& duplicates);
}
[DataContractAttribute]
[FhirTypeAttribute("Period", "http://hl7.org/fhir/StructureDefinition/Period")]
[DebuggerDisplayAttribute("\{{DebuggerDisplay,nq}}")]
public class Hl7.Fhir.Model.Period : DataType {
    private FhirDateTime _StartElement;
    private FhirDateTime _EndElement;
    public string TypeName { get; }
    [FhirElementAttribute("start")]
[DataMemberAttribute]
public FhirDateTime StartElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Start { get; public set; }
    [FhirElementAttribute("end")]
[DataMemberAttribute]
public FhirDateTime EndElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string End { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    [DebuggerBrowsableAttribute("0")]
[NotMappedAttribute]
internal string DebuggerDisplay { get; }
    public Period(FhirDateTime start, FhirDateTime end);
    public virtual string get_TypeName();
    public FhirDateTime get_StartElement();
    public void set_StartElement(FhirDateTime value);
    public string get_Start();
    public void set_Start(string value);
    public FhirDateTime get_EndElement();
    public void set_EndElement(FhirDateTime value);
    public string get_End();
    public void set_End(string value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Period/<get_Children>d__21")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Period/<get_NamedChildren>d__23")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Period/<GetElementPairs>d__25")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    internal string get_DebuggerDisplay();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DebuggerDisplayAttribute("\{Value={Value}}")]
[DataContractAttribute]
[FhirTypeAttribute("positiveInt", "http://hl7.org/fhir/StructureDefinition/positiveInt")]
public class Hl7.Fhir.Model.PositiveInt : PrimitiveType {
    public static string PATTERN;
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[DataMemberAttribute]
public Nullable`1<int> Value { get; public set; }
    public PositiveInt(Nullable`1<int> value);
    public virtual string get_TypeName();
    public sealed virtual Nullable`1<int> get_Value();
    public sealed virtual void set_Value(Nullable`1<int> value);
    [NullableContextAttribute("1")]
public static bool IsValidValue(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[FhirTypeAttribute("PrimitiveType", "http://hl7.org/fhir/StructureDefinition/PrimitiveType")]
[DataContractAttribute]
public abstract class Hl7.Fhir.Model.PrimitiveType : DataType {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private object <ObjectValue>k__BackingField;
    public string TypeName { get; }
    [NullableAttribute("2")]
public object ObjectValue { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public bool HasElements { get; }
    public virtual string get_TypeName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_ObjectValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_ObjectValue(object value);
    [NullableContextAttribute("2")]
public virtual string ToString();
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    public virtual IEnumerable`1<Base> get_Children();
    public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.PrimitiveType/<GetElementPairs>d__16")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    public bool get_HasElements();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__0();
}
[FhirEnumerationAttribute("PublicationStatus")]
public enum Hl7.Fhir.Model.PublicationStatus : Enum {
    public int value__;
    [EnumLiteralAttribute("draft", "http://hl7.org/fhir/publication-status")]
[DescriptionAttribute("Draft")]
public static PublicationStatus Draft;
    [EnumLiteralAttribute("active", "http://hl7.org/fhir/publication-status")]
[DescriptionAttribute("Active")]
public static PublicationStatus Active;
    [EnumLiteralAttribute("retired", "http://hl7.org/fhir/publication-status")]
[DescriptionAttribute("Retired")]
public static PublicationStatus Retired;
    [EnumLiteralAttribute("unknown", "http://hl7.org/fhir/publication-status")]
[DescriptionAttribute("Unknown")]
public static PublicationStatus Unknown;
}
[DataContractAttribute]
[FhirTypeAttribute("Quantity", "http://hl7.org/fhir/StructureDefinition/Quantity")]
public class Hl7.Fhir.Model.Quantity : DataType {
    private FhirDecimal _ValueElement;
    private Code`1<QuantityComparator> _ComparatorElement;
    private FhirString _UnitElement;
    private FhirUri _SystemElement;
    private Code _CodeElement;
    public string TypeName { get; }
    [FhirElementAttribute("value")]
[DataMemberAttribute]
public FhirDecimal ValueElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<decimal> Value { get; public set; }
    [FhirElementAttribute("comparator")]
[DeclaredTypeAttribute]
[DataMemberAttribute]
public Code`1<QuantityComparator> ComparatorElement { get; public set; }
    [IgnoreDataMemberAttribute]
public Nullable`1<QuantityComparator> Comparator { get; public set; }
    [FhirElementAttribute("unit")]
[DataMemberAttribute]
public FhirString UnitElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Unit { get; public set; }
    [FhirElementAttribute("system")]
[DataMemberAttribute]
public FhirUri SystemElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string System { get; public set; }
    [FhirElementAttribute("code")]
[DataMemberAttribute]
public Code CodeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Code { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public Quantity(decimal value, string unit, string system);
    public virtual string get_TypeName();
    public FhirDecimal get_ValueElement();
    public void set_ValueElement(FhirDecimal value);
    public Nullable`1<decimal> get_Value();
    public void set_Value(Nullable`1<decimal> value);
    public Code`1<QuantityComparator> get_ComparatorElement();
    public void set_ComparatorElement(Code`1<QuantityComparator> value);
    public Nullable`1<QuantityComparator> get_Comparator();
    public void set_Comparator(Nullable`1<QuantityComparator> value);
    public FhirString get_UnitElement();
    public void set_UnitElement(FhirString value);
    public string get_Unit();
    public void set_Unit(string value);
    public FhirUri get_SystemElement();
    public void set_SystemElement(FhirUri value);
    public string get_System();
    public void set_System(string value);
    public Code get_CodeElement();
    public void set_CodeElement(Code value);
    public string get_Code();
    public void set_Code(string value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Quantity/<get_Children>d__43")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Quantity/<get_NamedChildren>d__45")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Quantity/<GetElementPairs>d__47")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    public Quantity ToQuantity();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Range", "http://hl7.org/fhir/StructureDefinition/Range")]
public class Hl7.Fhir.Model.Range : DataType {
    private Quantity _Low;
    private Quantity _High;
    public string TypeName { get; }
    [FhirElementAttribute("low")]
[DataMemberAttribute]
public Quantity Low { get; public set; }
    [FhirElementAttribute("high")]
[DataMemberAttribute]
public Quantity High { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Quantity get_Low();
    public void set_Low(Quantity value);
    public Quantity get_High();
    public void set_High(Quantity value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Range/<get_Children>d__15")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Range/<get_NamedChildren>d__17")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Range/<GetElementPairs>d__19")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DataContractAttribute]
[FhirTypeAttribute("Resource", "http://hl7.org/fhir/StructureDefinition/Resource")]
[DebuggerDisplayAttribute("\{"{TypeName,nq}/{Id,nq}"}")]
public abstract class Hl7.Fhir.Model.Resource : Base {
    private Id _IdElement;
    private Meta _Meta;
    private FhirUri _ImplicitRulesElement;
    private Code _LanguageElement;
    public object SyncLock;
    public string TypeName { get; }
    [FhirElementAttribute("id")]
[DataMemberAttribute]
public Id IdElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Id { get; public set; }
    [FhirElementAttribute("meta")]
[DataMemberAttribute]
public Meta Meta { get; public set; }
    [FhirElementAttribute("implicitRules")]
[DataMemberAttribute]
public FhirUri ImplicitRulesElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string ImplicitRules { get; public set; }
    [FhirElementAttribute("language")]
[DataMemberAttribute]
public Code LanguageElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Language { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public Uri ResourceBase { get; public set; }
    public string VersionId { get; public set; }
    public bool HasVersionId { get; }
    public virtual string get_TypeName();
    public Id get_IdElement();
    public void set_IdElement(Id value);
    public string get_Id();
    public void set_Id(string value);
    public Meta get_Meta();
    public void set_Meta(Meta value);
    public FhirUri get_ImplicitRulesElement();
    public void set_ImplicitRulesElement(FhirUri value);
    public string get_ImplicitRules();
    public void set_ImplicitRules(string value);
    public Code get_LanguageElement();
    public void set_LanguageElement(Code value);
    public string get_Language();
    public void set_Language(string value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Resource/<get_Children>d__31")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Resource/<get_NamedChildren>d__33")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.Resource/<GetElementPairs>d__35")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    public Uri get_ResourceBase();
    public void set_ResourceBase(Uri value);
    public string get_VersionId();
    public void set_VersionId(string value);
    public bool get_HasVersionId();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[ExtensionAttribute]
public static class Hl7.Fhir.Model.ResourceIdentityExtensions : object {
    [ExtensionAttribute]
public static ResourceIdentity ResourceIdentity(Resource r, string baseUrl);
    [ExtensionAttribute]
public static ResourceIdentity ResourceIdentity(Resource r, Uri baseUrl);
}
[DataContractAttribute]
[FhirTypeAttribute("Reference", "http://hl7.org/fhir/StructureDefinition/Reference")]
[DebuggerDisplayAttribute("\{{DebuggerDisplay,nq}}")]
public class Hl7.Fhir.Model.ResourceReference : DataType {
    private FhirString _ReferenceElement;
    private FhirUri _TypeElement;
    private Identifier _Identifier;
    private FhirString _DisplayElement;
    public string TypeName { get; }
    [FhirElementAttribute("reference")]
[DataMemberAttribute]
public FhirString ReferenceElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Reference { get; public set; }
    [FhirElementAttribute]
[DataMemberAttribute]
public FhirUri TypeElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Type { get; public set; }
    [FhirElementAttribute("identifier")]
[DataMemberAttribute]
public Identifier Identifier { get; public set; }
    [FhirElementAttribute("display")]
[DataMemberAttribute]
public FhirString DisplayElement { get; public set; }
    [IgnoreDataMemberAttribute]
public string Display { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    [DebuggerBrowsableAttribute("0")]
[NotMappedAttribute]
private string DebuggerDisplay { get; }
    [NotMappedAttribute]
public Uri Url { get; public set; }
    [NotMappedAttribute]
public bool IsContainedReference { get; }
    public ResourceReference(string reference);
    public ResourceReference(string reference, string display);
    public virtual string get_TypeName();
    public FhirString get_ReferenceElement();
    public void set_ReferenceElement(FhirString value);
    public string get_Reference();
    public void set_Reference(string value);
    public FhirUri get_TypeElement();
    public void set_TypeElement(FhirUri value);
    public string get_Type();
    public void set_Type(string value);
    public Identifier get_Identifier();
    public void set_Identifier(Identifier value);
    public FhirString get_DisplayElement();
    public void set_DisplayElement(FhirString value);
    public string get_Display();
    public void set_Display(string value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ResourceReference/<get_Children>d__32")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ResourceReference/<get_NamedChildren>d__34")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.ResourceReference/<GetElementPairs>d__36")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    private string get_DebuggerDisplay();
    public Uri get_Url();
    public void set_Url(Uri value);
    public bool get_IsContainedReference();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DebuggerDisplayAttribute("\{Value={Value}}")]
[DataContractAttribute]
[FhirTypeAttribute("time", "http://hl7.org/fhir/StructureDefinition/time")]
[DebuggerDisplayAttribute("\{{Value}}")]
public class Hl7.Fhir.Model.Time : PrimitiveType {
    public static string PATTERN;
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[TimePatternAttribute]
[DataMemberAttribute]
public string Value { get; public set; }
    public Time(string value);
    public virtual string get_TypeName();
    public sealed virtual string get_Value();
    public sealed virtual void set_Value(string value);
    public static bool op_GreaterThan(Time a, Time b);
    public static bool op_GreaterThanOrEqual(Time a, Time b);
    public static bool op_LessThan(Time a, Time b);
    public static bool op_LessThanOrEqual(Time a, Time b);
    public static bool op_Equality(Time a, Time b);
    public static bool op_Inequality(Time a, Time b);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public static bool IsValidValue(string value);
}
[DebuggerDisplayAttribute("\{Value={Value}}")]
[DataContractAttribute]
[FhirTypeAttribute("unsignedInt", "http://hl7.org/fhir/StructureDefinition/unsignedInt")]
public class Hl7.Fhir.Model.UnsignedInt : PrimitiveType {
    public static string PATTERN;
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[DataMemberAttribute]
public Nullable`1<int> Value { get; public set; }
    public UnsignedInt(Nullable`1<int> value);
    public virtual string get_TypeName();
    public sealed virtual Nullable`1<int> get_Value();
    public sealed virtual void set_Value(Nullable`1<int> value);
    [NullableContextAttribute("1")]
public static bool IsValidValue(string value);
}
[DataContractAttribute]
[FhirTypeAttribute("UsageContext", "http://hl7.org/fhir/StructureDefinition/UsageContext")]
public class Hl7.Fhir.Model.UsageContext : DataType {
    private Coding _Code;
    private DataType _Value;
    public string TypeName { get; }
    [FhirElementAttribute("code")]
[CardinalityAttribute]
[DataMemberAttribute]
public Coding Code { get; public set; }
    [FhirElementAttribute("value")]
[CLSCompliantAttribute("False")]
[AllowedTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CardinalityAttribute]
[DataMemberAttribute]
public DataType Value { get; public set; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<Base> Children { get; }
    [IgnoreDataMemberAttribute]
public IEnumerable`1<ElementValue> NamedChildren { get; }
    public virtual string get_TypeName();
    public Coding get_Code();
    public void set_Code(Coding value);
    public DataType get_Value();
    public void set_Value(DataType value);
    public virtual IDeepCopyable CopyTo(IDeepCopyable other);
    public virtual IDeepCopyable DeepCopy();
    public virtual bool Matches(IDeepComparable other);
    public virtual bool IsExactly(IDeepComparable other);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.UsageContext/<get_Children>d__15")]
public virtual IEnumerable`1<Base> get_Children();
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.UsageContext/<get_NamedChildren>d__17")]
public virtual IEnumerable`1<ElementValue> get_NamedChildren();
    protected virtual bool TryGetValue(string key, Object& value);
    [IteratorStateMachineAttribute("Hl7.Fhir.Model.UsageContext/<GetElementPairs>d__19")]
protected virtual IEnumerable`1<KeyValuePair`2<string, object>> GetElementPairs();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Base> <>n__0();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<ElementValue> <>n__1();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, object>> <>n__2();
}
[DebuggerDisplayAttribute("\{Value={Value}}")]
[DataContractAttribute]
[FhirTypeAttribute("uuid", "http://hl7.org/fhir/StructureDefinition/uuid")]
public class Hl7.Fhir.Model.Uuid : PrimitiveType {
    public static string PATTERN;
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[UuidPatternAttribute]
[DataMemberAttribute]
public string Value { get; public set; }
    public Uuid(string value);
    public virtual string get_TypeName();
    public sealed virtual string get_Value();
    public sealed virtual void set_Value(string value);
    [NullableContextAttribute("1")]
public static Uuid Generate();
    [NullableContextAttribute("1")]
public FhirUri AsUri();
    [NullableContextAttribute("1")]
public static bool IsValidValue(string value);
}
[DebuggerDisplayAttribute("\{Value={Value}}")]
[DataContractAttribute]
[FhirTypeAttribute("xhtml", "http://hl7.org/fhir/StructureDefinition/xhtml")]
public class Hl7.Fhir.Model.XHtml : PrimitiveType {
    public string TypeName { get; }
    [FhirElementAttribute]
[DeclaredTypeAttribute]
[DataMemberAttribute]
public string Value { get; public set; }
    public XHtml(string value);
    public virtual string get_TypeName();
    public sealed virtual string get_Value();
    public sealed virtual void set_Value(string value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Use the more explicit IsValidNarrativeXhtml function instead (or IsValidXml if that is more appropriate).")]
public static bool IsValidValue(string value);
    [NullableContextAttribute("1")]
public static bool IsValidNarrativeXhtml(string value, String[]& errors);
    [NullableContextAttribute("1")]
public static bool IsValidNarrativeXhtml(string value);
    [NullableContextAttribute("1")]
public static bool IsValidXml(string value, String& error);
}
public enum Hl7.Fhir.Rest.ContainedResult : Enum {
    public int value__;
    public static ContainedResult Container;
    public static ContainedResult Contained;
}
public enum Hl7.Fhir.Rest.ContainedSearch : Enum {
    public int value__;
    public static ContainedSearch True;
    public static ContainedSearch False;
    public static ContainedSearch Both;
}
public static class Hl7.Fhir.Rest.ContentType : object {
    public static string JSON_CONTENT_HEADER;
    public static String[] JSON_CONTENT_HEADERS;
    public static string XML_CONTENT_HEADER;
    public static String[] XML_CONTENT_HEADERS;
    public static string FORMAT_PARAM_XML;
    public static string FORMAT_PARAM_JSON;
    public static string VERSION_CONTENT_HEADER;
    private static ContentType();
    public static ResourceFormat GetResourceFormatFromFormatParam(string format);
    public static ResourceFormat GetResourceFormatFromContentType(string contentType);
    internal static string BuildContentType(FhirClientSettings settings, string fhirVersion);
    public static string BuildContentType(ResourceFormat format, string fhirVersion);
    public static string BuildFormatParam(ResourceFormat format);
    public static bool IsValidResourceContentType(string contentType);
    public static bool IsValidFormatParam(string paramValue);
    public static string GetMediaTypeFromHeaderValue(string mediaHeaderValue);
    public static string GetCharSetFromHeaderValue(string mediaHeaderValue);
}
public class Hl7.Fhir.Rest.EntryRequest : object {
    [CompilerGeneratedAttribute]
private Nullable`1<HTTPVerb> <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <RequestBodyContent>k__BackingField;
    [CompilerGeneratedAttribute]
private EntryRequestHeaders <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private InteractionType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Agent>k__BackingField;
    public Nullable`1<HTTPVerb> Method { get; public set; }
    public string Url { get; public set; }
    public string ContentType { get; public set; }
    public Byte[] RequestBodyContent { get; public set; }
    public EntryRequestHeaders Headers { get; public set; }
    public InteractionType Type { get; public set; }
    public string Agent { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<HTTPVerb> get_Method();
    [CompilerGeneratedAttribute]
public void set_Method(Nullable`1<HTTPVerb> value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public Byte[] get_RequestBodyContent();
    [CompilerGeneratedAttribute]
public void set_RequestBodyContent(Byte[] value);
    [CompilerGeneratedAttribute]
public EntryRequestHeaders get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(EntryRequestHeaders value);
    [CompilerGeneratedAttribute]
public InteractionType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(InteractionType value);
    [CompilerGeneratedAttribute]
public string get_Agent();
    [CompilerGeneratedAttribute]
public void set_Agent(string value);
}
public class Hl7.Fhir.Rest.EntryRequestHeaders : object {
    [CompilerGeneratedAttribute]
private string <IfMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IfNoneMatch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IfNoneExist>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <IfModifiedSince>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Accept>k__BackingField;
    public string IfMatch { get; public set; }
    public string IfNoneMatch { get; public set; }
    public string IfNoneExist { get; public set; }
    public Nullable`1<DateTimeOffset> IfModifiedSince { get; public set; }
    public string Accept { get; public set; }
    [CompilerGeneratedAttribute]
public string get_IfMatch();
    [CompilerGeneratedAttribute]
public void set_IfMatch(string value);
    [CompilerGeneratedAttribute]
public string get_IfNoneMatch();
    [CompilerGeneratedAttribute]
public void set_IfNoneMatch(string value);
    [CompilerGeneratedAttribute]
public string get_IfNoneExist();
    [CompilerGeneratedAttribute]
public void set_IfNoneExist(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_IfModifiedSince();
    [CompilerGeneratedAttribute]
public void set_IfModifiedSince(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public string get_Accept();
    [CompilerGeneratedAttribute]
public void set_Accept(string value);
}
public class Hl7.Fhir.Rest.EntryResponse : object {
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LastModified>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Etag>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Body>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ResponseUri>k__BackingField;
    public string Status { get; public set; }
    public Dictionary`2<string, string> Headers { get; public set; }
    public Nullable`1<DateTimeOffset> LastModified { get; public set; }
    public string ContentType { get; public set; }
    public string Etag { get; public set; }
    public Byte[] Body { get; public set; }
    public string Location { get; public set; }
    public Uri ResponseUri { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_LastModified();
    [CompilerGeneratedAttribute]
public void set_LastModified(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public string get_Etag();
    [CompilerGeneratedAttribute]
public void set_Etag(string value);
    [CompilerGeneratedAttribute]
public Byte[] get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(Byte[] value);
    [CompilerGeneratedAttribute]
public string get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(string value);
    [CompilerGeneratedAttribute]
public Uri get_ResponseUri();
    [CompilerGeneratedAttribute]
public void set_ResponseUri(Uri value);
}
[ExtensionAttribute]
internal static class Hl7.Fhir.Rest.EntryToHttpExtensions : object {
    public static bool SetUserAgentUsingReflection;
    public static bool SetUserAgentUsingDirectHeaderManipulation;
    private static EntryToHttpExtensions();
    [ExtensionAttribute]
public static HttpRequestMessage ToHttpRequestMessage(EntryRequest entry, Uri baseUrl, FhirClientSettings settings);
    private static HttpMethod getMethod(Nullable`1<HTTPVerb> verb);
    private static void setContentAndContentType(HttpRequestMessage request, Byte[] data, string contentType);
    [ExtensionAttribute]
[ObsoleteAttribute("Use the class FhirClient instead. Will be removed in the next major release.")]
public static HttpWebRequest ToHttpWebRequest(EntryRequest entry, Uri baseUrl, FhirClientSettings settings);
    private static void setAgent(HttpWebRequest request, string agent);
    [CompilerGeneratedAttribute]
internal static bool <ToHttpRequestMessage>g__canHaveReturnPreference|0_0(<>c__DisplayClass0_0& );
    [CompilerGeneratedAttribute]
internal static bool <ToHttpWebRequest>g__canHaveReturnPreference|3_0(<>c__DisplayClass3_0& );
}
[ExtensionAttribute]
public static class Hl7.Fhir.Rest.EntryToTypedEntryExtensions : object {
    [ExtensionAttribute]
public static TypedEntryResponse ToTypedEntryResponse(EntryResponse response, IStructureDefinitionSummaryProvider provider);
    [AsyncStateMachineAttribute("Hl7.Fhir.Rest.EntryToTypedEntryExtensions/<ToTypedEntryResponseAsync>d__1")]
[ExtensionAttribute]
public static Task`1<TypedEntryResponse> ToTypedEntryResponseAsync(EntryResponse response, IStructureDefinitionSummaryProvider provider);
    private static ITypedElement parseResource(string bodyText, string contentType, IStructureDefinitionSummaryProvider provider, bool throwOnFormatException);
    [AsyncStateMachineAttribute("Hl7.Fhir.Rest.EntryToTypedEntryExtensions/<parseResourceAsync>d__3")]
private static Task`1<ITypedElement> parseResourceAsync(string bodyText, string contentType, IStructureDefinitionSummaryProvider provider, bool throwOnFormatException);
}
public class Hl7.Fhir.Rest.FhirClientSettings : object {
    public bool VerifyFhirVersion;
    public ResourceFormat PreferredFormat;
    public bool UseFormatParameter;
    public bool UseFhirVersionInAcceptHeader;
    public int Timeout;
    public Nullable`1<Prefer> PreferredReturn;
    public Nullable`1<SearchParameterHandling> PreferredParameterHandling;
    public bool PreferCompressedResponses;
    public bool CompressRequestBody;
    public ParserSettings ParserSettings;
    public FhirClientSettings(FhirClientSettings other);
    public void CopyTo(FhirClientSettings other);
    public FhirClientSettings Clone();
    public static FhirClientSettings CreateDefault();
}
public class Hl7.Fhir.Rest.FhirOperationException : Exception {
    [CompilerGeneratedAttribute]
private OperationOutcome <Outcome>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpStatusCode <Status>k__BackingField;
    public OperationOutcome Outcome { get; private set; }
    public HttpStatusCode Status { get; private set; }
    public FhirOperationException(string message, HttpStatusCode status);
    public FhirOperationException(string message, HttpStatusCode status, Exception inner);
    public FhirOperationException(string message, HttpStatusCode status, OperationOutcome outcome);
    public FhirOperationException(string message, HttpStatusCode status, OperationOutcome outcome, Exception inner);
    [CompilerGeneratedAttribute]
public OperationOutcome get_Outcome();
    [CompilerGeneratedAttribute]
private void set_Outcome(OperationOutcome value);
    [CompilerGeneratedAttribute]
public HttpStatusCode get_Status();
    [CompilerGeneratedAttribute]
private void set_Status(HttpStatusCode value);
    internal static Exception BuildFhirOperationException(HttpStatusCode status, Resource body, string bodyRaw);
}
public class Hl7.Fhir.Rest.HttpClientRequester : object {
    [CompilerGeneratedAttribute]
private FhirClientSettings <Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <BaseUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpClient <Client>k__BackingField;
    private bool _disposeHttpClient;
    [CompilerGeneratedAttribute]
private EntryResponse <LastResult>k__BackingField;
    private bool disposedValue;
    public FhirClientSettings Settings { get; public set; }
    public Uri BaseUrl { get; private set; }
    public HttpClient Client { get; private set; }
    public EntryResponse LastResult { get; private set; }
    public HttpClientRequester(Uri baseUrl, FhirClientSettings settings, HttpMessageHandler messageHandler, bool disposeHandler);
    public HttpClientRequester(Uri baseUrl, FhirClientSettings settings, HttpClient client);
    [CompilerGeneratedAttribute]
public FhirClientSettings get_Settings();
    [CompilerGeneratedAttribute]
public void set_Settings(FhirClientSettings value);
    [CompilerGeneratedAttribute]
public Uri get_BaseUrl();
    [CompilerGeneratedAttribute]
private void set_BaseUrl(Uri value);
    [CompilerGeneratedAttribute]
public HttpClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(HttpClient value);
    [CompilerGeneratedAttribute]
public EntryResponse get_LastResult();
    [CompilerGeneratedAttribute]
private void set_LastResult(EntryResponse value);
    public EntryResponse Execute(EntryRequest interaction);
    [AsyncStateMachineAttribute("Hl7.Fhir.Rest.HttpClientRequester/<ExecuteAsync>d__20")]
public sealed virtual Task`1<EntryResponse> ExecuteAsync(EntryRequest interaction);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
}
[ExtensionAttribute]
public static class Hl7.Fhir.Rest.HttpToEntryExtensions : object {
    private static string USERDATA_BODY;
    private static string EXTENSION_RESPONSE_HEADER;
    [ExtensionAttribute]
internal static EntryResponse ToEntryResponse(HttpResponseMessage response, Byte[] body);
    [ExtensionAttribute]
internal static void SetHeaders(EntryResponse interaction, HttpResponseHeaders headers);
    [ExtensionAttribute]
public static bool IsSuccessful(EntryResponse response);
    [ExtensionAttribute]
public static string GetBodyAsText(EntryResponse interaction);
    [ExtensionAttribute]
internal static EntryResponse ToEntryResponse(HttpWebResponse response, Byte[] body);
    private static string getETag(HttpWebResponse response);
    private static string getContentType(HttpWebResponse response);
}
[ExtensionAttribute]
public static class Hl7.Fhir.Rest.HttpUtil : object {
    public static string CONTENTLOCATION;
    public static string LOCATION;
    public static string LASTMODIFIED;
    public static string ETAG;
    public static string RESTPARAM_FORMAT;
    public static string HISTORY_PARAM_SINCE;
    public static string HISTORY_PARAM_COUNT;
    private static string RESTURI_PATTERN;
    private static HttpUtil();
    public static Byte[] ReadAllFromStream(Stream s);
    public static Uri MakeAbsoluteToBase(Uri location, Uri baseUrl);
    public static Uri MakeRelativeFromBase(Uri location, Uri baseUrl);
    [ExtensionAttribute]
public static bool IsWithin(Uri me, Uri other);
    public static string DecodeBody(Byte[] body, Encoding enc);
    [ExtensionAttribute]
public static bool IsRestResourceIdentity(Uri uri);
    public static bool IsRestResourceIdentity(string uri);
    [ExtensionAttribute]
public static bool IsInformational(HttpStatusCode code);
    [ExtensionAttribute]
public static bool IsSuccessful(HttpStatusCode code);
    [ExtensionAttribute]
public static bool IsRedirection(HttpStatusCode code);
    [ExtensionAttribute]
public static bool IsClientError(HttpStatusCode code);
    [ExtensionAttribute]
public static bool IsServerError(HttpStatusCode code);
}
public enum Hl7.Fhir.Rest.HTTPVerb : Enum {
    public int value__;
    [EnumLiteralAttribute("GET", "http://hl7.org/fhir/http-verb")]
[DescriptionAttribute("GET")]
public static HTTPVerb GET;
    [EnumLiteralAttribute("HEAD", "http://hl7.org/fhir/http-verb")]
[DescriptionAttribute("HEAD")]
public static HTTPVerb HEAD;
    [EnumLiteralAttribute("POST", "http://hl7.org/fhir/http-verb")]
[DescriptionAttribute("POST")]
public static HTTPVerb POST;
    [EnumLiteralAttribute("PUT", "http://hl7.org/fhir/http-verb")]
[DescriptionAttribute("PUT")]
public static HTTPVerb PUT;
    [EnumLiteralAttribute("DELETE", "http://hl7.org/fhir/http-verb")]
[DescriptionAttribute("DELETE")]
public static HTTPVerb DELETE;
    [EnumLiteralAttribute("PATCH", "http://hl7.org/fhir/http-verb")]
[DescriptionAttribute("PATCH")]
public static HTTPVerb PATCH;
}
public interface Hl7.Fhir.Rest.IClientRequester {
    public abstract virtual Task`1<EntryResponse> ExecuteAsync(EntryRequest interaction);
}
public enum Hl7.Fhir.Rest.IncludeModifier : Enum {
    public int value__;
    public static IncludeModifier None;
    [EnumLiteralAttribute("iterate", "")]
public static IncludeModifier Iterate;
    [EnumLiteralAttribute("recurse", "")]
public static IncludeModifier Recurse;
}
public enum Hl7.Fhir.Rest.InteractionType : Enum {
    public int value__;
    public static InteractionType Search;
    public static InteractionType Unspecified;
    public static InteractionType Read;
    public static InteractionType VRead;
    public static InteractionType Update;
    public static InteractionType Delete;
    public static InteractionType Create;
    public static InteractionType Capabilities;
    public static InteractionType History;
    public static InteractionType Operation;
    public static InteractionType Transaction;
    public static InteractionType Patch;
}
[ExtensionAttribute]
public static class Hl7.Fhir.Rest.PatchParameterExtensions : object {
    private static string OPERATION;
    [ExtensionAttribute]
public static Parameters AddAddPatchParameter(Parameters parameters, string path, string name, DataType value);
    [ExtensionAttribute]
public static Parameters AddInsertPatchParameter(Parameters parameters, string path, DataType value, int index);
    [ExtensionAttribute]
public static Parameters AddDeletePatchParameter(Parameters parameters, string path);
    [ExtensionAttribute]
public static Parameters AddReplacePatchParameter(Parameters parameters, string path, DataType value);
    [ExtensionAttribute]
public static Parameters AddMovePatchParameter(Parameters parameters, string path, int source, int destination);
    [ExtensionAttribute]
private static Parameters addPatchOperation(Parameters parameters, List`1<ParameterComponent> parts);
    [ExtensionAttribute]
private static List`1<ParameterComponent> addPatchPart(List`1<ParameterComponent> parts, string name, DataType value);
    [ExtensionAttribute]
private static List`1<ParameterComponent> addTypePart(List`1<ParameterComponent> parameters, PatchType type);
    [ExtensionAttribute]
private static List`1<ParameterComponent> addPathPart(List`1<ParameterComponent> parameters, string path);
    [ExtensionAttribute]
private static List`1<ParameterComponent> addNamePart(List`1<ParameterComponent> parameters, string name);
    [ExtensionAttribute]
private static List`1<ParameterComponent> addValuePart(List`1<ParameterComponent> parameters, DataType value);
    [ExtensionAttribute]
private static List`1<ParameterComponent> addIndexPart(List`1<ParameterComponent> parameters, int index);
    [ExtensionAttribute]
private static List`1<ParameterComponent> addSourcePart(List`1<ParameterComponent> parameters, int source);
    [ExtensionAttribute]
private static List`1<ParameterComponent> addDestinationPart(List`1<ParameterComponent> parameters, int destination);
}
public enum Hl7.Fhir.Rest.Prefer : Enum {
    public int value__;
    [EnumLiteralAttribute("representation", "")]
public static Prefer ReturnRepresentation;
    [EnumLiteralAttribute("minimal", "")]
public static Prefer ReturnMinimal;
    [EnumLiteralAttribute("OperationOutcome", "")]
public static Prefer OperationOutcome;
    [EnumLiteralAttribute("respond-async", "")]
public static Prefer RespondAsync;
}
public enum Hl7.Fhir.Rest.ResourceFormat : Enum {
    public int value__;
    public static ResourceFormat Xml;
    public static ResourceFormat Json;
    public static ResourceFormat Unknown;
}
[DebuggerDisplayAttribute("\{ResourceType={ResourceType} Id={Id} VersionId={VersionId} Base={BaseUri} ToString={ToString()}")]
public class Hl7.Fhir.Rest.ResourceIdentity : Uri {
    public static string HISTORY;
    public static string CORE_BASE_URL;
    [CompilerGeneratedAttribute]
private ResourceIdentityForm <Form>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <BaseUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VersionId>k__BackingField;
    public ResourceIdentityForm Form { get; private set; }
    public bool IsAbsoluteRestUrl { get; }
    public bool IsRelativeRestUrl { get; }
    public bool IsUrn { get; }
    public bool IsLocal { get; }
    [ObsoleteAttribute("Recommend using the ResourceBase property")]
public Uri Endpoint { get; }
    public Uri BaseUri { get; private set; }
    public string ResourceType { get; private set; }
    public string Id { get; private set; }
    public string VersionId { get; private set; }
    public bool HasVersion { get; }
    public bool HasBaseUri { get; }
    public ResourceIdentity(string uri);
    public ResourceIdentity(Uri uri);
    private ResourceIdentity(string uri, UriKind kind);
    private ResourceIdentity(Uri baseUri, string resourceType, string id, string versionId, ResourceIdentityForm form);
    private static string constructUri(Uri baseUri, string resourceType, string id, string versionId, ResourceIdentityForm form);
    public static ResourceIdentity Build(Uri baseUrl, string resourceType, string id, string vid);
    public static ResourceIdentity Build(string resourceType, string id, string vid);
    public static ResourceIdentity Build(UrnType urnType, string id);
    public static ResourceIdentity Build(Uri baseUrn, string id);
    public static ResourceIdentity Build(string id);
    public static ResourceIdentity Core(string type);
    private static bool isAbsoluteUrl(string url);
    private static bool isAbsoluteRestUrl(string url);
    private static bool isRelativeRestUrl(string url);
    private static bool isUrn(string uri);
    private static bool isLocal(string url);
    private static string construct(Uri endpoint, IEnumerable`1<string> components);
    private static string construct(Uri endpoint, String[] components);
    [CompilerGeneratedAttribute]
public ResourceIdentityForm get_Form();
    [CompilerGeneratedAttribute]
private void set_Form(ResourceIdentityForm value);
    public bool get_IsAbsoluteRestUrl();
    public bool get_IsRelativeRestUrl();
    public bool get_IsUrn();
    public bool get_IsLocal();
    public Uri get_Endpoint();
    private void parseComponents(string url);
    [CompilerGeneratedAttribute]
public Uri get_BaseUri();
    [CompilerGeneratedAttribute]
private void set_BaseUri(Uri value);
    [CompilerGeneratedAttribute]
public string get_ResourceType();
    [CompilerGeneratedAttribute]
private void set_ResourceType(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_VersionId();
    [CompilerGeneratedAttribute]
private void set_VersionId(string value);
    public bool get_HasVersion();
    public bool get_HasBaseUri();
    public ResourceIdentity WithVersion(string version);
    public ResourceIdentity MakeRelative();
    public ResourceIdentity WithoutVersion();
    public ResourceIdentity WithBase(string baseUri);
    public ResourceIdentity WithBase(Uri baseUri);
    public bool IsTargetOf(ResourceIdentity reference);
    public bool IsTargetOf(string reference);
    public bool IsTargetOf(FhirUri reference);
    public bool IsTargetOf(Uri reference);
    public static bool IsRestResourceIdentity(string url);
    public static bool IsRestResourceIdentity(Uri uri);
}
public enum Hl7.Fhir.Rest.ResourceIdentityForm : Enum {
    public int value__;
    public static ResourceIdentityForm AbsoluteRestUrl;
    public static ResourceIdentityForm RelativeRestUrl;
    public static ResourceIdentityForm Urn;
    public static ResourceIdentityForm Local;
    public static ResourceIdentityForm Undetermined;
}
[ExtensionAttribute]
public static class Hl7.Fhir.Rest.ResourceReferenceExtensions : object {
    [ExtensionAttribute]
public static Uri GetAbsoluteUriForReference(ResourceReference reference, Uri parentResourceUri);
    [ExtensionAttribute]
public static Uri GetAbsoluteUriForReference(ResourceReference reference, string parentResourceUri);
}
public class Hl7.Fhir.Rest.RestUrl : object {
    private UriBuilder _builder;
    private UriParamList _parameters;
    public Uri Uri { get; }
    public string AsString { get; }
    public RestUrl(RestUrl url);
    public RestUrl(Uri url);
    public RestUrl(string endpoint);
    public Uri get_Uri();
    public string get_AsString();
    private static string delimit(string path);
    public RestUrl AddPath(String[] components);
    public RestUrl ClearParams();
    public RestUrl SetParam(string name, string value);
    public RestUrl ClearParam(string name);
    public RestUrl AddParam(string name, string value);
    public RestUrl AddParam(Tuple`2<string, string> keyValue);
    public RestUrl AddParams(IEnumerable`1<Tuple`2<string, string>> keyValues);
    public bool IsEndpointFor(Uri other);
    public bool IsEndpointFor(string other);
    public bool IsSameUrl(RestUrl other);
    public RestUrl NavigateTo(string path);
    public RestUrl NavigateTo(Uri path);
    public virtual string ToString();
}
public enum Hl7.Fhir.Rest.SearchParameterHandling : Enum {
    public int value__;
    [EnumLiteralAttribute("strict", "")]
public static SearchParameterHandling Strict;
    [EnumLiteralAttribute("lenient", "")]
public static SearchParameterHandling Lenient;
}
public class Hl7.Fhir.Rest.SearchParams : object {
    public static String[] RESERVED_PARAMETERS;
    public static string SEARCH_MODIF_ASCENDING;
    public static string SEARCH_MODIF_DESCENDING;
    public static char SEARCH_CHAINSEPARATOR;
    public static char SEARCH_MODIFIERSEPARATOR;
    public static string SEARCH_CONTAINED_TRUE;
    public static string SEARCH_CONTAINED_FALSE;
    public static string SEARCH_CONTAINED_BOTH;
    public static string SEARCH_CONTAINED_TYPE_CONTAINER;
    public static string SEARCH_CONTAINED_TYPE_CONTAINED;
    [CompilerGeneratedAttribute]
private IList`1<Tuple`2<string, string>> <Parameters>k__BackingField;
    public static string SEARCH_PARAM_QUERY;
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    public static string SEARCH_PARAM_TEXT;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    public static string SEARCH_PARAM_CONTENT;
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    public static string SEARCH_PARAM_COUNT;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Count>k__BackingField;
    public static string SEARCH_PARAM_SUMMARY;
    [CompilerGeneratedAttribute]
private Nullable`1<SummaryType> <Summary>k__BackingField;
    public static string SEARCH_PARAM_FILTER;
    [CompilerGeneratedAttribute]
private string <Filter>k__BackingField;
    public static string SEARCH_PARAM_SORT;
    [CompilerGeneratedAttribute]
private IList`1<ValueTuple`2<string, SortOrder>> <Sort>k__BackingField;
    public static string SEARCH_PARAM_INCLUDE;
    [CompilerGeneratedAttribute]
private IList`1<ValueTuple`2<string, IncludeModifier>> <Include>k__BackingField;
    public static string SEARCH_PARAM_REVINCLUDE;
    [CompilerGeneratedAttribute]
private IList`1<ValueTuple`2<string, IncludeModifier>> <RevInclude>k__BackingField;
    public static string SEARCH_PARAM_CONTAINED;
    [CompilerGeneratedAttribute]
private Nullable`1<ContainedSearch> <Contained>k__BackingField;
    public static string SEARCH_PARAM_CONTAINEDTYPE;
    [CompilerGeneratedAttribute]
private Nullable`1<ContainedResult> <ContainedType>k__BackingField;
    public static string SEARCH_PARAM_ELEMENTS;
    [CompilerGeneratedAttribute]
private List`1<string> <Elements>k__BackingField;
    public IList`1<Tuple`2<string, string>> Parameters { get; private set; }
    [NotMappedAttribute]
[IgnoreDataMemberAttribute]
public string Query { get; public set; }
    [NotMappedAttribute]
[IgnoreDataMemberAttribute]
public string Text { get; public set; }
    [NotMappedAttribute]
[IgnoreDataMemberAttribute]
public string Content { get; public set; }
    [NotMappedAttribute]
[IgnoreDataMemberAttribute]
public Nullable`1<int> Count { get; public set; }
    [NotMappedAttribute]
[IgnoreDataMemberAttribute]
public Nullable`1<SummaryType> Summary { get; public set; }
    [NotMappedAttribute]
[IgnoreDataMemberAttribute]
public string Filter { get; public set; }
    [NotMappedAttribute]
[IgnoreDataMemberAttribute]
public IList`1<ValueTuple`2<string, SortOrder>> Sort { get; private set; }
    [NotMappedAttribute]
[IgnoreDataMemberAttribute]
public IList`1<ValueTuple`2<string, IncludeModifier>> Include { get; private set; }
    [NotMappedAttribute]
[IgnoreDataMemberAttribute]
public IList`1<ValueTuple`2<string, IncludeModifier>> RevInclude { get; private set; }
    [NotMappedAttribute]
[IgnoreDataMemberAttribute]
public Nullable`1<ContainedSearch> Contained { get; private set; }
    [NotMappedAttribute]
[IgnoreDataMemberAttribute]
public Nullable`1<ContainedResult> ContainedType { get; private set; }
    public List`1<string> Elements { get; private set; }
    public SearchParams(string name, string value);
    private static SearchParams();
    public SearchParams Select(String[] elements);
    public SearchParams Add(string name, string value);
    private static string nonEmptySingleValue(string paramName, string currentValue, string newValue);
    private static void addNonEmpty(string paramName, IList`1<ValueTuple`2<string, IncludeModifier>> values, ValueTuple`2<string, IncludeModifier> value);
    private void addNonEmptySort(String[] elements);
    [CompilerGeneratedAttribute]
public IList`1<Tuple`2<string, string>> get_Parameters();
    [CompilerGeneratedAttribute]
private void set_Parameters(IList`1<Tuple`2<string, string>> value);
    [CompilerGeneratedAttribute]
public string get_Query();
    [CompilerGeneratedAttribute]
public void set_Query(string value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public string get_Content();
    [CompilerGeneratedAttribute]
public void set_Content(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<SummaryType> get_Summary();
    [CompilerGeneratedAttribute]
public void set_Summary(Nullable`1<SummaryType> value);
    [CompilerGeneratedAttribute]
public string get_Filter();
    [CompilerGeneratedAttribute]
public void set_Filter(string value);
    [CompilerGeneratedAttribute]
public IList`1<ValueTuple`2<string, SortOrder>> get_Sort();
    [CompilerGeneratedAttribute]
private void set_Sort(IList`1<ValueTuple`2<string, SortOrder>> value);
    [CompilerGeneratedAttribute]
public IList`1<ValueTuple`2<string, IncludeModifier>> get_Include();
    [CompilerGeneratedAttribute]
private void set_Include(IList`1<ValueTuple`2<string, IncludeModifier>> value);
    [CompilerGeneratedAttribute]
public IList`1<ValueTuple`2<string, IncludeModifier>> get_RevInclude();
    [CompilerGeneratedAttribute]
private void set_RevInclude(IList`1<ValueTuple`2<string, IncludeModifier>> value);
    [CompilerGeneratedAttribute]
public Nullable`1<ContainedSearch> get_Contained();
    [CompilerGeneratedAttribute]
private void set_Contained(Nullable`1<ContainedSearch> value);
    [CompilerGeneratedAttribute]
public Nullable`1<ContainedResult> get_ContainedType();
    [CompilerGeneratedAttribute]
private void set_ContainedType(Nullable`1<ContainedResult> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Elements();
    [CompilerGeneratedAttribute]
private void set_Elements(List`1<string> value);
    public static SearchParams FromUriParamList(IEnumerable`1<Tuple`2<string, string>> parameters);
    public UriParamList ToUriParamList();
    [ObsoleteAttribute("Use the Parameters.ToSearchParameters() method instead.", "True")]
public static SearchParams FromParameters(object parameters);
    [CompilerGeneratedAttribute]
internal static Tuple`2<string, string> <ToUriParamList>g__createSortParam|82_0(IList`1<ValueTuple`2<string, SortOrder>> sorts);
    [CompilerGeneratedAttribute]
internal static IEnumerable`1<Tuple`2<string, string>> <ToUriParamList>g__createIncludeParams|82_1(string paramtype, IList`1<ValueTuple`2<string, IncludeModifier>> includes);
}
[ExtensionAttribute]
public static class Hl7.Fhir.Rest.SearchParamsExtensions : object {
    [ExtensionAttribute]
public static SearchParams Include(SearchParams qry, string path, IncludeModifier modifier);
    [ExtensionAttribute]
public static SearchParams ReverseInclude(SearchParams qry, string path, IncludeModifier modifier);
    [ExtensionAttribute]
public static SearchParams Where(SearchParams qry, string criterium);
    [ExtensionAttribute]
public static SearchParams Custom(SearchParams qry, string customQueryName);
    [ExtensionAttribute]
public static SearchParams OrderBy(SearchParams qry, string paramName, SortOrder order);
    [ExtensionAttribute]
public static SearchParams LimitTo(SearchParams qry, int count);
    [ExtensionAttribute]
public static SearchParams CountOnly(SearchParams qry);
    [ExtensionAttribute]
public static SearchParams SummaryOnly(SearchParams qry, SummaryType summaryOnly);
    [ExtensionAttribute]
public static SearchParams TextOnly(SearchParams qry);
    [ExtensionAttribute]
public static SearchParams DataOnly(SearchParams qry);
    [ExtensionAttribute]
public static SearchParams ToSearchParameters(Parameters parameters);
    [ExtensionAttribute]
public static Parameters ToParameters(SearchParams entry);
}
public enum Hl7.Fhir.Rest.SortOrder : Enum {
    public int value__;
    public static SortOrder Ascending;
    public static SortOrder Descending;
}
public enum Hl7.Fhir.Rest.SummaryType : Enum {
    public int value__;
    [EnumLiteralAttribute("true", "")]
public static SummaryType True;
    [EnumLiteralAttribute("text", "")]
public static SummaryType Text;
    [EnumLiteralAttribute("data", "")]
public static SummaryType Data;
    [EnumLiteralAttribute("count", "")]
public static SummaryType Count;
    [EnumLiteralAttribute("false", "")]
public static SummaryType False;
}
[ExtensionAttribute]
public static class Hl7.Fhir.Rest.TaskExtensions : object {
    [ExtensionAttribute]
public static T WaitResult(Task`1<T> task);
    [ExtensionAttribute]
public static void WaitNoResult(Task task);
    public static Task`1<TResult> FromResult(TResult resultValue);
}
[ExtensionAttribute]
internal static class Hl7.Fhir.Rest.TokenExtensions : object {
    [ExtensionAttribute]
internal static string ToToken(Coding coding);
    [ExtensionAttribute]
internal static string ToToken(CodeableConcept codeableConcept);
    [ExtensionAttribute]
internal static string ToToken(Identifier identifier);
    [ExtensionAttribute]
internal static string ToToken(ContactPoint contactPoint);
}
public class Hl7.Fhir.Rest.TypedEntryResponse : EntryResponse {
    [CompilerGeneratedAttribute]
private ITypedElement <TypedElement>k__BackingField;
    public ITypedElement TypedElement { get; public set; }
    [CompilerGeneratedAttribute]
public ITypedElement get_TypedElement();
    [CompilerGeneratedAttribute]
public void set_TypedElement(ITypedElement value);
}
public class Hl7.Fhir.Rest.UnsupportedBodyTypeException : Exception {
    [CompilerGeneratedAttribute]
private string <BodyType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Body>k__BackingField;
    public string BodyType { get; public set; }
    public string Body { get; public set; }
    public UnsupportedBodyTypeException(string message, string mimeType, string body);
    [CompilerGeneratedAttribute]
public string get_BodyType();
    [CompilerGeneratedAttribute]
public void set_BodyType(string value);
    [CompilerGeneratedAttribute]
public string get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(string value);
}
public class Hl7.Fhir.Rest.UriParamList : List`1<Tuple`2<string, string>> {
    public UriParamList(IEnumerable`1<Tuple`2<string, string>> contents);
    public static UriParamList FromUri(string uri);
    public void Add(string key, string value);
    public UriParamList WithKey(string key);
    public Tuple`2<string, string> Single(string key);
    public string SingleValue(string key);
    public IEnumerable`1<string> Values(string key);
    public void Remove(string key);
    internal static Predicate`1<Tuple`2<string, string>> MatchParam(string key);
    internal static Tuple`2<string, string> SplitParam(string param);
    public static UriParamList FromQueryString(string query);
    internal static string MakeParam(string key, string value);
    internal static string JoinParam(Tuple`2<string, string> kv);
    public string ToQueryString();
}
public enum Hl7.Fhir.Rest.UrnType : Enum {
    public int value__;
    public static UrnType UUID;
    public static UrnType OID;
}
[ObsoleteAttribute("Use the class HttpClientRequester instead. Will be removed in the next major release.")]
public class Hl7.Fhir.Rest.WebClientRequester : object {
    [CompilerGeneratedAttribute]
private Uri <BaseUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private FhirClientSettings <Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<HttpWebRequest, Byte[]> <BeforeRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<HttpWebResponse, Byte[]> <AfterResponse>k__BackingField;
    public Uri BaseUrl { get; private set; }
    public FhirClientSettings Settings { get; public set; }
    public Action`2<HttpWebRequest, Byte[]> BeforeRequest { get; public set; }
    public Action`2<HttpWebResponse, Byte[]> AfterResponse { get; public set; }
    public WebClientRequester(Uri baseUrl, FhirClientSettings settings);
    [CompilerGeneratedAttribute]
public Uri get_BaseUrl();
    [CompilerGeneratedAttribute]
private void set_BaseUrl(Uri value);
    [CompilerGeneratedAttribute]
public FhirClientSettings get_Settings();
    [CompilerGeneratedAttribute]
public void set_Settings(FhirClientSettings value);
    [CompilerGeneratedAttribute]
public Action`2<HttpWebRequest, Byte[]> get_BeforeRequest();
    [CompilerGeneratedAttribute]
public void set_BeforeRequest(Action`2<HttpWebRequest, Byte[]> value);
    [CompilerGeneratedAttribute]
public Action`2<HttpWebResponse, Byte[]> get_AfterResponse();
    [CompilerGeneratedAttribute]
public void set_AfterResponse(Action`2<HttpWebResponse, Byte[]> value);
    public EntryResponse Execute(EntryRequest interaction);
    [AsyncStateMachineAttribute("Hl7.Fhir.Rest.WebClientRequester/<ExecuteAsync>d__18")]
public sealed virtual Task`1<EntryResponse> ExecuteAsync(EntryRequest interaction);
    private static Byte[] readBody(HttpWebResponse response);
}
[ExtensionAttribute]
public static class Hl7.Fhir.Rest.WebRequestExtensions : object {
    [ExtensionAttribute]
internal static void WriteBody(HttpWebRequest request, bool CompressRequestBody, Byte[] data);
    [ExtensionAttribute]
internal static Task`1<WebResponse> GetResponseAsync(WebRequest request, TimeSpan timeout);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Hl7.Fhir.Serialization.BundleFilter : SerializationFilter {
    [CompilerGeneratedAttribute]
private SerializationFilter <ChildFilter>k__BackingField;
    [NullableAttribute("2")]
private string _rootResourceType;
    private int _nestingDepth;
    public SerializationFilter ChildFilter { get; }
    private bool inRootBundle { get; }
    public BundleFilter(SerializationFilter childFilter);
    [CompilerGeneratedAttribute]
public SerializationFilter get_ChildFilter();
    private bool get_inRootBundle();
    public virtual void EnterObject(object value, ClassMapping mapping);
    public virtual bool TryEnterMember(string name, object value, PropertyMapping mapping);
    public virtual void LeaveMember(string name, object value, PropertyMapping mapping);
    public virtual void LeaveObject(object value, ClassMapping mapping);
}
internal class Hl7.Fhir.Serialization.ComplexTypeReader : object {
    private ITypedElement _current;
    private ModelInspector _inspector;
    [CompilerGeneratedAttribute]
private ParserSettings <Settings>k__BackingField;
    public ParserSettings Settings { get; private set; }
    public ComplexTypeReader(ModelInspector inspector, ITypedElement reader, ParserSettings settings);
    [CompilerGeneratedAttribute]
public ParserSettings get_Settings();
    [CompilerGeneratedAttribute]
private void set_Settings(ParserSettings value);
    internal static void RaiseFormatError(string message, string location);
    internal Base Deserialize(ClassMapping mapping, Base existing);
    private void read(ClassMapping mapping, IEnumerable`1<ITypedElement> members, Base existing);
}
public class Hl7.Fhir.Serialization.DataAnnotationDeserialzationValidator : object {
    [NullableAttribute("1")]
public static DataAnnotationDeserialzationValidator Default;
    [CompilerGeneratedAttribute]
private NarrativeValidationKind <NarrativeValidation>k__BackingField;
    public NarrativeValidationKind NarrativeValidation { get; }
    public DataAnnotationDeserialzationValidator(NarrativeValidationKind narrativeValidation);
    private static DataAnnotationDeserialzationValidator();
    [CompilerGeneratedAttribute]
public NarrativeValidationKind get_NarrativeValidation();
    [NullableContextAttribute("2")]
public void ValidateProperty(Object& instance, PropertyDeserializationContext& context, CodedValidationException[]& reportedErrors);
    [NullableContextAttribute("2")]
public void ValidateInstance(object instance, InstanceDeserializationContext& context, CodedValidationException[]& reportedErrors);
    [NullableContextAttribute("1")]
private CodedValidationException[] runAttributeValidation(object candidateValue, ValidationAttribute[] attributes, ValidationContext validationContext);
    private sealed virtual override void Hl7.Fhir.Serialization.IDeserializationValidator.ValidateProperty(Object& instance, PropertyDeserializationContext& modreq(System.Runtime.InteropServices.InAttribute) context, CodedValidationException[]& reportedErrors);
    private sealed virtual override void Hl7.Fhir.Serialization.IDeserializationValidator.ValidateInstance(object instance, InstanceDeserializationContext& modreq(System.Runtime.InteropServices.InAttribute) context, CodedValidationException[]& reportedErrors);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static void <runAttributeValidation>g__addError|7_0(CodedValidationException e, <>c__DisplayClass7_0& );
}
public class Hl7.Fhir.Serialization.DefaultModelFactory : object {
    public bool CanCreate(Type type);
    public object Create(Type type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Hl7.Fhir.Serialization.DeserializationFailedException : Exception {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Base <PartialResult>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<CodedException> <Exceptions>k__BackingField;
    [NullableAttribute("2")]
public Base PartialResult { get; private set; }
    public IReadOnlyCollection`1<CodedException> Exceptions { get; }
    public DeserializationFailedException(Base partialResult, IEnumerable`1<CodedException> innerExceptions);
    private static string generateMessage(IEnumerable`1<CodedException> exceptions);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Base get_PartialResult();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_PartialResult(Base value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<CodedException> get_Exceptions();
}
internal class Hl7.Fhir.Serialization.DispatchingReader : object {
    private ITypedElement _current;
    private ModelInspector _inspector;
    private bool _arrayMode;
    [CompilerGeneratedAttribute]
private ParserSettings <Settings>k__BackingField;
    public ParserSettings Settings { get; private set; }
    internal DispatchingReader(ModelInspector inspector, ITypedElement data, ParserSettings settings, bool arrayMode);
    [CompilerGeneratedAttribute]
public ParserSettings get_Settings();
    [CompilerGeneratedAttribute]
private void set_Settings(ParserSettings value);
    public object Deserialize(PropertyMapping prop, string memberName, object existing);
    private ClassMapping getMappingForType(string memberName, string typeName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Hl7.Fhir.Serialization.ElementMetadataFilter : SerializationFilter {
    [CompilerGeneratedAttribute]
private bool <Invert>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <IncludeNames>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeMandatory>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeInSummary>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeIsModifier>k__BackingField;
    public bool Invert { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyCollection`1<string> IncludeNames { get; public set; }
    public bool IncludeMandatory { get; public set; }
    public bool IncludeInSummary { get; public set; }
    public bool IncludeIsModifier { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Invert();
    [CompilerGeneratedAttribute]
public void set_Invert(bool value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<string> get_IncludeNames();
    [CompilerGeneratedAttribute]
public void set_IncludeNames(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_IncludeMandatory();
    [CompilerGeneratedAttribute]
public void set_IncludeMandatory(bool value);
    [CompilerGeneratedAttribute]
public bool get_IncludeInSummary();
    [CompilerGeneratedAttribute]
public void set_IncludeInSummary(bool value);
    [CompilerGeneratedAttribute]
public bool get_IncludeIsModifier();
    [CompilerGeneratedAttribute]
public void set_IncludeIsModifier(bool value);
    public virtual void EnterObject(object value, ClassMapping mapping);
    public virtual void LeaveMember(string name, object value, PropertyMapping mapping);
    public virtual void LeaveObject(object value, ClassMapping mapping);
    public virtual bool TryEnterMember(string name, object value, PropertyMapping mapping);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Hl7.Fhir.Serialization.ExceptionAggregator : object {
    public List`1<CodedException> _aggregated;
    public bool HasExceptions { get; }
    public int Count { get; }
    [NullableContextAttribute("2")]
public void Add(CodedException e);
    public void Add(IEnumerable`1<CodedException> es);
    public bool get_HasExceptions();
    public int get_Count();
    public sealed virtual IEnumerator`1<CodedException> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Hl7.Fhir.Serialization.FhirXmlException : CodedException {
    public static string EMPTY_ELEMENT_NAMESPACE_CODE;
    public static string UNKNOWN_RESOURCE_TYPE_CODE;
    public static string RESOURCE_TYPE_NOT_A_RESOURCE_CODE;
    public static string UNKNOWN_ELEMENT_CODE;
    public static string CHOICE_ELEMENT_HAS_NO_TYPE_CODE;
    public static string CHOICE_ELEMENT_HAS_UNKNOWN_TYPE_CODE;
    public static string INCORRECT_XHTML_NAMESPACE_CODE;
    public static string UNKNOWN_ATTRIBUTE_CODE;
    public static string ELEMENT_OUT_OF_ORDER_CODE;
    public static string UNALLOWED_ELEMENT_IN_RESOURCE_CONTAINER_CODE;
    public static string NO_ATTRIBUTES_ALLOWED_ON_RESOURCE_CONTAINER_CODE;
    public static string INCORRECT_ELEMENT_NAMESPACE_CODE;
    public static string UNALLOWED_NODE_TYPE_CODE;
    public static string INCORRECT_ATTRIBUTE_NAMESPACE_CODE;
    public static string ATTRIBUTE_HAS_EMPTY_VALUE_CODE;
    public static string ELEMENT_NOT_IN_SEQUENCE_CODE;
    public static string SCHEMALOCATION_DISALLOWED_CODE;
    public static string EXPECTED_OPENING_ELEMENT_CODE;
    public static string ENCOUNTERED_DTP_REFERENCES_CODE;
    public static string ELEMENT_HAS_NO_VALUE_OR_CHILDREN_CODE;
    public static string INCORRECT_BASE64_DATA_CODE;
    public static string VALUE_IS_NOT_OF_EXPECTED_TYPE_CODE;
    internal static FhirXmlException EMPTY_ELEMENT_NAMESPACE;
    internal static FhirXmlException INCORRECT_ELEMENT_NAMESPACE;
    internal static FhirXmlException UNKNOWN_RESOURCE_TYPE;
    internal static FhirXmlException RESOURCE_TYPE_NOT_A_RESOURCE;
    internal static FhirXmlException UNKNOWN_ELEMENT;
    internal static FhirXmlException CHOICE_ELEMENT_HAS_NO_TYPE;
    internal static FhirXmlException CHOICE_ELEMENT_HAS_UNKOWN_TYPE;
    internal static FhirXmlException INCORRECT_BASE64_DATA;
    internal static FhirXmlException VALUE_IS_NOT_OF_EXPECTED_TYPE;
    internal static FhirXmlException INCORRECT_XHTML_NAMESPACE;
    internal static FhirXmlException UNKNOWN_ATTRIBUTE;
    internal static FhirXmlException ELEMENT_OUT_OF_ORDER;
    internal static FhirXmlException ELEMENT_NOT_IN_SEQUENCE;
    internal static FhirXmlException UNALLOWED_ELEMENT_IN_RESOURCE_CONTAINER;
    internal static FhirXmlException NO_ATTRIBUTES_ALLOWED_ON_RESOURCE_CONTAINER;
    internal static FhirXmlException UNALLOWED_NODE_TYPE;
    internal static FhirXmlException INCORRECT_ATTRIBUTE_NAMESPACE;
    internal static FhirXmlException ATTRIBUTE_HAS_EMPTY_VALUE;
    internal static FhirXmlException SCHEMALOCATION_DISALLOWED;
    internal static FhirXmlException EXPECTED_OPENING_ELEMENT;
    internal static FhirXmlException ENCOUNTERED_DTD_REFERENCES;
    internal static FhirXmlException ELEMENT_HAS_NO_VALUE_OR_CHILDREN;
    public FhirXmlException(string errorCode, string message);
    public FhirXmlException(string code, string message, Exception innerException);
    private static FhirXmlException();
    internal FhirXmlException With(XmlReader reader, Object[] parameters);
    internal FhirXmlException With(XmlReader reader, FhirXmlException inner, Object[] parameters);
    internal FhirXmlException With(string locationMessage, FhirXmlException inner, Object[] parameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Hl7.Fhir.Serialization.FhirXmlPocoDeserializer : object {
    [CompilerGeneratedAttribute]
private Assembly <Assembly>k__BackingField;
    [CompilerGeneratedAttribute]
private FhirXmlPocoDeserializerSettings <Settings>k__BackingField;
    private ModelInspector _inspector;
    public Assembly Assembly { get; }
    public FhirXmlPocoDeserializerSettings Settings { get; }
    public FhirXmlPocoDeserializer(Assembly assembly);
    public FhirXmlPocoDeserializer(Assembly assembly, FhirXmlPocoDeserializerSettings settings);
    [CompilerGeneratedAttribute]
public Assembly get_Assembly();
    [CompilerGeneratedAttribute]
public FhirXmlPocoDeserializerSettings get_Settings();
    public Resource DeserializeResource(XmlReader reader);
    public Base DeserializeElement(Type targetType, XmlReader reader);
    internal Resource DeserializeResourceInternal(XmlReader reader, FhirXmlPocoDeserializerState state);
    private static void VerifyOpeningElement(XmlReader reader, FhirXmlPocoDeserializerState state);
    private static void validateNameSpace(XmlReader reader, FhirXmlPocoDeserializerState state, PropertyMapping propMapping);
    internal Base DeserializeElementInternal(Type targetType, XmlReader reader, FhirXmlPocoDeserializerState state);
    private void deserializeElementInto(Base target, ClassMapping mapping, XmlReader reader, FhirXmlPocoDeserializerState state);
    private static ValueTuple`2<int, bool> checkOrder(XmlReader reader, FhirXmlPocoDeserializerState state, int highestOrder, PropertyMapping propMapping);
    private void deserializePropertyValue(Base target, XmlReader reader, FhirXmlPocoDeserializerState state, int oldErrors, bool incorrectOrder, PropertyMapping propMapping, ClassMapping propValueMapping);
    private static string readXhtml(XmlReader reader);
    private IList createOrExpandList(Base target, bool expandCandidate, ClassMapping propValueMapping, PropertyMapping propMapping, XmlReader reader, FhirXmlPocoDeserializerState state);
    private IList expandCurrentList(IList currentEntries, ClassMapping propValueMapping, PropertyMapping propMapping, XmlReader reader, FhirXmlPocoDeserializerState state);
    private IList readList(ClassMapping propValueMapping, PropertyMapping propMapping, XmlReader reader, FhirXmlPocoDeserializerState state);
    private object readSingleValue(ClassMapping propValueMapping, PropertyMapping propMapping, XmlReader reader, FhirXmlPocoDeserializerState state);
    private object deserializeResourceContainer(XmlReader reader, FhirXmlPocoDeserializerState state);
    private void readAttributes(Base target, ClassMapping propValueMapping, XmlReader reader, FhirXmlPocoDeserializerState state);
    private void readAttribute(Base target, PropertyMapping propMapping, string elementName, XmlReader reader, FhirXmlPocoDeserializerState state);
    internal ValueTuple`2<object, FhirXmlException> ParsePrimitiveValue(XmlReader reader, Type implementingType);
    internal static ValueTuple`2<ClassMapping, FhirXmlException> DetermineClassMappingFromInstance(XmlReader reader, ModelInspector inspector);
    private static ValueTuple`3<PropertyMapping, ClassMapping, FhirXmlException> tryGetMappedElementMetadata(ModelInspector inspector, ClassMapping parentMapping, XmlReader reader, string propertyName);
    [CompilerGeneratedAttribute]
internal static ValueTuple`2<object, FhirXmlException> <ParsePrimitiveValue>g__getByteArrayValue|26_0(XmlReader reader, string trimmedValue);
    [CompilerGeneratedAttribute]
internal static ValueTuple`2<ClassMapping, FhirXmlException> <tryGetMappedElementMetadata>g__getChoiceClassMapping|28_0(XmlReader r, <>c__DisplayClass28_0& );
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Hl7.Fhir.Serialization.FhirXmlPocoDeserializerSettings : object {
    [CompilerGeneratedAttribute]
private bool <DisableBase64Decoding>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeserializationValidator <Validator>k__BackingField;
    public bool DisableBase64Decoding { get; public set; }
    public IDeserializationValidator Validator { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_DisableBase64Decoding();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DisableBase64Decoding(bool value);
    [CompilerGeneratedAttribute]
public IDeserializationValidator get_Validator();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Validator(IDeserializationValidator value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Hl7.Fhir.Serialization.FhirXmlPocoDeserializerState : object {
    public ExceptionAggregator Errors;
    public PathStack Path;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Hl7.Fhir.Serialization.FhirXmlPocoSerializer : object {
    [CompilerGeneratedAttribute]
private FhirRelease <Release>k__BackingField;
    public FhirRelease Release { get; }
    public FhirXmlPocoSerializer(FhirRelease release);
    [CompilerGeneratedAttribute]
public FhirRelease get_Release();
    public void Serialize(IReadOnlyDictionary`2<string, object> members, XmlWriter writer, SerializationFilter summary);
    private void serializeInternal(IReadOnlyDictionary`2<string, object> members, XmlWriter writer, SerializationFilter filter);
    private void serializeElement(IReadOnlyDictionary`2<string, object> members, XmlWriter writer, SerializationFilter filter, ClassMapping mapping);
    private static string addSuffixToElementName(string elementName, object elementValue);
    private void serializeMemberValue(string elementName, object value, XmlWriter writer, SerializationFilter filter);
    protected virtual void SerializePrimitiveValue(string elementName, object value, XmlWriter writer);
}
[NullableContextAttribute("2")]
public interface Hl7.Fhir.Serialization.IDeserializationValidator {
    public abstract virtual void ValidateProperty(Object& instance, PropertyDeserializationContext& modreq(System.Runtime.InteropServices.InAttribute) context, CodedValidationException[]& reportedErrors);
    public abstract virtual void ValidateInstance(object instance, InstanceDeserializationContext& modreq(System.Runtime.InteropServices.InAttribute) context, CodedValidationException[]& reportedErrors);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Hl7.Fhir.Serialization.InstanceDeserializationContext : ValueType {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private long <LineNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private long <LinePosition>k__BackingField;
    [CompilerGeneratedAttribute]
private ClassMapping <InstanceMapping>k__BackingField;
    public string Path { get; }
    public long LineNumber { get; }
    public long LinePosition { get; }
    public ClassMapping InstanceMapping { get; }
    internal InstanceDeserializationContext(string path, long lineNumber, long linePosition, ClassMapping instanceMapping);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public long get_LineNumber();
    [CompilerGeneratedAttribute]
public long get_LinePosition();
    [CompilerGeneratedAttribute]
public ClassMapping get_InstanceMapping();
}
public class Hl7.Fhir.Serialization.ParserSettings : object {
    [ObsoleteAttribute("Due to a bug, the Default has always been ignored, so it is now officially deprecated")]
public static ParserSettings Default;
    [CompilerGeneratedAttribute]
private bool <DisallowXsiAttributesOnRoot>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowUnrecognizedEnums>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AcceptUnknownMembers>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PermissiveParsing>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TruncateDateTimeToDate>k__BackingField;
    [CompilerGeneratedAttribute]
private ExceptionNotificationHandler <ExceptionHandler>k__BackingField;
    public bool DisallowXsiAttributesOnRoot { get; public set; }
    public bool AllowUnrecognizedEnums { get; public set; }
    public bool AcceptUnknownMembers { get; public set; }
    public bool PermissiveParsing { get; public set; }
    [ObsoleteAttribute("Needed for backward compatibility with old parser for resources which were saved and considered valid in the past. Should not be used in new code.")]
public bool TruncateDateTimeToDate { get; public set; }
    public ExceptionNotificationHandler ExceptionHandler { get; public set; }
    public ParserSettings(ParserSettings other);
    private static ParserSettings();
    [CompilerGeneratedAttribute]
public bool get_DisallowXsiAttributesOnRoot();
    [CompilerGeneratedAttribute]
public void set_DisallowXsiAttributesOnRoot(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowUnrecognizedEnums();
    [CompilerGeneratedAttribute]
public void set_AllowUnrecognizedEnums(bool value);
    [CompilerGeneratedAttribute]
public bool get_AcceptUnknownMembers();
    [CompilerGeneratedAttribute]
public void set_AcceptUnknownMembers(bool value);
    [CompilerGeneratedAttribute]
public bool get_PermissiveParsing();
    [CompilerGeneratedAttribute]
public void set_PermissiveParsing(bool value);
    [CompilerGeneratedAttribute]
public bool get_TruncateDateTimeToDate();
    [CompilerGeneratedAttribute]
public void set_TruncateDateTimeToDate(bool value);
    [CompilerGeneratedAttribute]
public ExceptionNotificationHandler get_ExceptionHandler();
    [CompilerGeneratedAttribute]
public void set_ExceptionHandler(ExceptionNotificationHandler value);
    public void CopyTo(ParserSettings other);
    public void CopyTo(PocoBuilderSettings settings);
    public ParserSettings Clone();
    public static ParserSettings CreateDefault();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Hl7.Fhir.Serialization.PathStack : object {
    private static char RESOURCEPREFIX;
    private string _path;
    private Stack`1<int> _tops;
    public void EnterResource(string name);
    public void ExitResource();
    public void EnterElement(string name);
    public void ExitElement();
    public string GetPath();
}
internal class Hl7.Fhir.Serialization.PocoBuilder : object {
    private PocoBuilderSettings _settings;
    private ModelInspector _inspector;
    [CompilerGeneratedAttribute]
private ExceptionNotificationHandler <ExceptionHandler>k__BackingField;
    public ExceptionNotificationHandler ExceptionHandler { get; public set; }
    public PocoBuilder(ModelInspector inspector, PocoBuilderSettings settings);
    [CompilerGeneratedAttribute]
public sealed virtual ExceptionNotificationHandler get_ExceptionHandler();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExceptionHandler(ExceptionNotificationHandler value);
    public Base BuildFrom(ISourceNode source, Type dataType);
    public Base BuildFrom(ISourceNode source, ClassMapping mapping);
    public Base BuildFrom(ITypedElement source);
    [CompilerGeneratedAttribute]
private ClassMapping <BuildFrom>g__findMappingOrReport|7_0(Type t, <>c__DisplayClass7_0& );
}
public class Hl7.Fhir.Serialization.PocoBuilderSettings : object {
    [CompilerGeneratedAttribute]
private bool <AllowUnrecognizedEnums>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreUnknownMembers>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TruncateDateTimeToDate>k__BackingField;
    [CompilerGeneratedAttribute]
private ExceptionNotificationHandler <ExceptionHandler>k__BackingField;
    public bool AllowUnrecognizedEnums { get; public set; }
    public bool IgnoreUnknownMembers { get; public set; }
    [ObsoleteAttribute("Needed for backward compatibility with old parser for resources which were saved and considered valid in the past. Should not be used in new code.")]
public bool TruncateDateTimeToDate { get; public set; }
    public ExceptionNotificationHandler ExceptionHandler { get; public set; }
    public PocoBuilderSettings(PocoBuilderSettings other);
    [CompilerGeneratedAttribute]
public bool get_AllowUnrecognizedEnums();
    [CompilerGeneratedAttribute]
public void set_AllowUnrecognizedEnums(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreUnknownMembers();
    [CompilerGeneratedAttribute]
public void set_IgnoreUnknownMembers(bool value);
    [CompilerGeneratedAttribute]
public bool get_TruncateDateTimeToDate();
    [CompilerGeneratedAttribute]
public void set_TruncateDateTimeToDate(bool value);
    [CompilerGeneratedAttribute]
public ExceptionNotificationHandler get_ExceptionHandler();
    [CompilerGeneratedAttribute]
public void set_ExceptionHandler(ExceptionNotificationHandler value);
    public void CopyTo(PocoBuilderSettings other);
    public PocoBuilderSettings Clone();
    public static PocoBuilderSettings CreateDefault();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Hl7.Fhir.Serialization.PocoDeserializationHelper : object {
    internal static void RunPropertyValidation(Object& instance, IDeserializationValidator validator, PropertyDeserializationContext context, ExceptionAggregator aggregator);
    internal static void RunInstanceValidation(object instance, IDeserializationValidator validator, InstanceDeserializationContext context, ExceptionAggregator aggregator);
}
internal class Hl7.Fhir.Serialization.PrimitiveValueReader : object {
    private ITypedElement _current;
    public PrimitiveValueReader(ITypedElement data);
    internal object Deserialize(Type nativeType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Hl7.Fhir.Serialization.PropertyDeserializationContext : ValueType {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private long <LineNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private long <LinePosition>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertyMapping <ElementMapping>k__BackingField;
    public string Path { get; }
    public string PropertyName { get; }
    public long LineNumber { get; }
    public long LinePosition { get; }
    public PropertyMapping ElementMapping { get; }
    internal PropertyDeserializationContext(string path, string propertyName, long lineNumber, long linePosition, PropertyMapping propMapping);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public long get_LineNumber();
    [CompilerGeneratedAttribute]
public long get_LinePosition();
    [CompilerGeneratedAttribute]
public PropertyMapping get_ElementMapping();
}
internal class Hl7.Fhir.Serialization.RepeatingElementReader : object {
    private ITypedElement _current;
    private ModelInspector _inspector;
    [CompilerGeneratedAttribute]
private ParserSettings <Settings>k__BackingField;
    public ParserSettings Settings { get; private set; }
    internal RepeatingElementReader(ModelInspector inspector, ITypedElement reader, ParserSettings settings);
    [CompilerGeneratedAttribute]
public ParserSettings get_Settings();
    [CompilerGeneratedAttribute]
private void set_Settings(ParserSettings value);
    public IList Deserialize(PropertyMapping prop, string memberName, IList existing);
}
[ExtensionAttribute]
internal static class Hl7.Fhir.Serialization.RootRenamerExtensions : object {
    [ExtensionAttribute]
public static ITypedElement Rename(ITypedElement wrapped, string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Hl7.Fhir.Serialization.SerializationFilter : object {
    public abstract virtual void EnterObject(object value, ClassMapping mapping);
    public abstract virtual bool TryEnterMember(string name, object value, PropertyMapping mapping);
    public abstract virtual void LeaveMember(string name, object value, PropertyMapping mapping);
    public abstract virtual void LeaveObject(object value, ClassMapping mapping);
    public static SerializationFilter ForSummary();
    public static SerializationFilter ForText();
    public static SerializationFilter ForData();
    public static SerializationFilter ForElements(String[] elements);
}
public class Hl7.Fhir.Serialization.SerializerSettings : object {
    [CompilerGeneratedAttribute]
private bool <Pretty>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AppendNewLine>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TrimWhiteSpacesInXml>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeMandatoryInElementsSummary>k__BackingField;
    public bool Pretty { get; public set; }
    public bool AppendNewLine { get; public set; }
    public bool TrimWhiteSpacesInXml { get; public set; }
    public bool IncludeMandatoryInElementsSummary { get; public set; }
    public SerializerSettings(SerializerSettings other);
    [CompilerGeneratedAttribute]
public bool get_Pretty();
    [CompilerGeneratedAttribute]
public void set_Pretty(bool value);
    [CompilerGeneratedAttribute]
public bool get_AppendNewLine();
    [CompilerGeneratedAttribute]
public void set_AppendNewLine(bool value);
    [CompilerGeneratedAttribute]
public bool get_TrimWhiteSpacesInXml();
    [CompilerGeneratedAttribute]
public void set_TrimWhiteSpacesInXml(bool value);
    [CompilerGeneratedAttribute]
public bool get_IncludeMandatoryInElementsSummary();
    [CompilerGeneratedAttribute]
public void set_IncludeMandatoryInElementsSummary(bool value);
    public void CopyTo(SerializerSettings other);
    public SerializerSettings Clone();
    public static SerializerSettings CreateDefault();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Hl7.Fhir.Serialization.TopLevelFilter : SerializationFilter {
    private Nullable`1<int> _childrenFromDepth;
    private int _currentDepth;
    [CompilerGeneratedAttribute]
private SerializationFilter <ToplevelFilter>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private SerializationFilter <ChildrenFilter>k__BackingField;
    public SerializationFilter ToplevelFilter { get; }
    [NullableAttribute("2")]
public SerializationFilter ChildrenFilter { get; }
    private bool inFilteredSubtree { get; }
    public TopLevelFilter(SerializationFilter toplevelFilter, SerializationFilter childrenFilter);
    [CompilerGeneratedAttribute]
public SerializationFilter get_ToplevelFilter();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public SerializationFilter get_ChildrenFilter();
    private bool get_inFilteredSubtree();
    public virtual void EnterObject(object value, ClassMapping mapping);
    public virtual void LeaveObject(object value, ClassMapping mapping);
    public virtual void LeaveMember(string name, object value, PropertyMapping mapping);
    public virtual bool TryEnterMember(string name, object value, PropertyMapping mapping);
}
internal class Hl7.Fhir.Serialization.ValuePropertyTypedElement : object {
    private ITypedElement _wrapped;
    public string Name { get; }
    public string InstanceType { get; }
    public object Value { get; }
    public string Location { get; }
    public IElementDefinitionSummary Definition { get; }
    public ValuePropertyTypedElement(ITypedElement primitiveElement);
    public sealed virtual string get_Name();
    public sealed virtual string get_InstanceType();
    public sealed virtual object get_Value();
    public sealed virtual string get_Location();
    public sealed virtual IElementDefinitionSummary get_Definition();
    public sealed virtual IEnumerable`1<ITypedElement> Children(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Hl7.Fhir.Serialization.XmlReaderExtensions : object {
    [ExtensionAttribute]
internal static string GenerateLocationMessage(XmlReader reader);
    [ExtensionAttribute]
internal static string GenerateLocationMessage(XmlReader reader, Int64& lineNumber, Int64& position);
    internal static string GenerateLocationMessage(long lineNumber, long position);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
internal static ValueTuple`2<int, int> GenerateLineInfo(XmlReader reader);
    [ExtensionAttribute]
internal static bool ReadToContent(XmlReader reader, FhirXmlPocoDeserializerState state);
    [ExtensionAttribute]
internal static bool ShouldSkipNodeType(XmlReader reader, FhirXmlPocoDeserializerState state);
    [ExtensionAttribute]
internal static bool HasValueAttributeOrChildren(XmlReader reader);
    [ExtensionAttribute]
internal static bool HasChildren(XmlReader reader);
}
public class Hl7.Fhir.Specification.Source.CachedResolver : object {
    public static int DEFAULT_CACHE_DURATION;
    private Cache`1<Resource> _resourcesByUri;
    private Cache`1<Resource> _resourcesByCanonical;
    [CompilerGeneratedAttribute]
private IResourceResolver <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private IAsyncResourceResolver <AsyncResolver>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CacheDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private LoadResourceEventHandler Load;
    [ObsoleteAttribute("CachedResolver now works best with asynchronous resolvers. Use the AsyncSource property instead.")]
public IResourceResolver Source { get; private set; }
    public IAsyncResourceResolver AsyncResolver { get; }
    public int CacheDuration { get; }
    [DebuggerBrowsableAttribute("0")]
protected internal string DebuggerDisplay { get; }
    public CachedResolver(ISyncOrAsyncResourceResolver source, int cacheDuration);
    [CompilerGeneratedAttribute]
public IResourceResolver get_Source();
    [CompilerGeneratedAttribute]
private void set_Source(IResourceResolver value);
    [CompilerGeneratedAttribute]
public IAsyncResourceResolver get_AsyncResolver();
    [CompilerGeneratedAttribute]
public int get_CacheDuration();
    [ObsoleteAttribute("CachedResolver now works best with asynchronous resolvers. Use ResolveByUriAsync() instead.")]
public sealed virtual Resource ResolveByUri(string url);
    [AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.CachedResolver/<ResolveByUriAsync>d__15")]
public sealed virtual Task`1<Resource> ResolveByUriAsync(string url);
    [ObsoleteAttribute("CachedResolver now works best with asynchronous resolvers. Use ResolveByUriAsync() instead.")]
public Resource ResolveByUri(string url, CachedResolverLoadingStrategy strategy);
    [AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.CachedResolver/<ResolveByUriAsync>d__17")]
public Task`1<Resource> ResolveByUriAsync(string url, CachedResolverLoadingStrategy strategy);
    [ObsoleteAttribute("CachedResolver now works best with asynchronous resolvers. Use ResolveByCanonicalUriAsync() instead.")]
public sealed virtual Resource ResolveByCanonicalUri(string url);
    [AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.CachedResolver/<ResolveByCanonicalUriAsync>d__19")]
public sealed virtual Task`1<Resource> ResolveByCanonicalUriAsync(string url);
    [ObsoleteAttribute("CachedResolver now works best with asynchronous resolvers. Use ResolveByCanonicalUriAsync() instead.")]
public Resource ResolveByCanonicalUri(string url, CachedResolverLoadingStrategy strategy);
    [AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.CachedResolver/<ResolveByCanonicalUriAsync>d__21")]
public Task`1<Resource> ResolveByCanonicalUriAsync(string url, CachedResolverLoadingStrategy strategy);
    public bool InvalidateByUri(string url);
    public bool InvalidateByCanonicalUri(string url);
    public void Clear();
    public bool IsCachedUri(string url);
    public bool IsCachedCanonicalUri(string url);
    [CompilerGeneratedAttribute]
public void add_Load(LoadResourceEventHandler value);
    [CompilerGeneratedAttribute]
public void remove_Load(LoadResourceEventHandler value);
    protected virtual void OnLoad(string url, Resource resource);
    [AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.CachedResolver/<InternalResolveByUri>d__33")]
internal Task`1<Resource> InternalResolveByUri(string url);
    [AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.CachedResolver/<InternalResolveByCanonicalUri>d__34")]
internal Task`1<Resource> InternalResolveByCanonicalUri(string url);
    protected internal virtual string get_DebuggerDisplay();
    [CompilerGeneratedAttribute]
private Task`1<Resource> <.ctor>b__3_0(string id);
    [CompilerGeneratedAttribute]
private Task`1<Resource> <.ctor>b__3_1(string id);
}
public enum Hl7.Fhir.Specification.Source.CachedResolverLoadingStrategy : Enum {
    public int value__;
    public static CachedResolverLoadingStrategy LoadOnDemand;
    public static CachedResolverLoadingStrategy LoadFromCache;
    public static CachedResolverLoadingStrategy LoadFromSource;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Hl7.Fhir.Specification.Source.CommonFhirPackageSource : object {
    private Lazy`1<PackageContext> _context;
    private ModelInspector _provider;
    public CommonFhirPackageSource(ModelInspector provider, String[] filePaths);
    public CommonFhirPackageSource(ModelInspector provider, string packageServer, String[] packageNames);
    [AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.CommonFhirPackageSource/<createPackageContextFromExternalSource>d__4")]
private static Task`1<PackageContext> createPackageContextFromExternalSource(string packageServer, String[] packageNames);
    [AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.CommonFhirPackageSource/<initialize>d__5")]
private static Task`1<PackageManifest> initialize(string path, string name, string version, string author, string description, String[] dependencies);
    [AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.CommonFhirPackageSource/<createPackageContextFromFilesAsync>d__6")]
private static Task`1<PackageContext> createPackageContextFromFilesAsync(String[] paths);
    private static string getScopePath();
    [AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.CommonFhirPackageSource/<createContext>d__8")]
private static Task`1<PackageContext> createContext(string scopePath, PackageClient client, String[] filePaths, bool localCache);
    [AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.CommonFhirPackageSource/<installPackageFromPath>d__9")]
private static Task installPackageFromPath(PackageContext scope, string path);
    private Resource toResource(string content);
    [AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.CommonFhirPackageSource/<ResolveByCanonicalUriAsync>d__11")]
public sealed virtual Task`1<Resource> ResolveByCanonicalUriAsync(string uri);
    [AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.CommonFhirPackageSource/<ResolveByCanonicalUriAsyncAsString>d__12")]
internal Task`1<string> ResolveByCanonicalUriAsyncAsString(string uri);
    private static ValueTuple`2<string, string> splitCanonical(string canonical);
    [AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.CommonFhirPackageSource/<ResolveByUriAsync>d__14")]
public sealed virtual Task`1<Resource> ResolveByUriAsync(string uri);
    [AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.CommonFhirPackageSource/<ResolveByUriAsyncAsString>d__15")]
internal Task`1<string> ResolveByUriAsyncAsString(string uri);
    public sealed virtual IEnumerable`1<string> ListArtifactNames();
    public sealed virtual Stream LoadArtifactByName(string artifactName);
    public Stream LoadArtifactByPath(string artifactPath);
    public IEnumerable`1<string> ListResourceUris(string filter);
    [AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.CommonFhirPackageSource/<FindCodeSystemByValueSet>d__20")]
public Task`1<Resource> FindCodeSystemByValueSet(string valueSetUri);
    [AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.CommonFhirPackageSource/<FindCodeSystemByValueSetAsString>d__21")]
internal Task`1<string> FindCodeSystemByValueSetAsString(string valueSetUri);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.CommonFhirPackageSource/<FindConceptMaps>d__22")]
public Task`1<IEnumerable`1<Resource>> FindConceptMaps(string sourceUri, string targetUri);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.CommonFhirPackageSource/<FindConceptMapsAsStrings>d__23")]
internal Task`1<IEnumerable`1<string>> FindConceptMapsAsStrings(string sourceUri, string targetUri);
    [AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.CommonFhirPackageSource/<FindNamingSystemByUniqueId>d__24")]
public Task`1<Resource> FindNamingSystemByUniqueId(string uniqueId);
    [AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.CommonFhirPackageSource/<FindNamingSystemByUniqueIdAsString>d__25")]
internal Task`1<string> FindNamingSystemByUniqueIdAsString(string uniqueId);
    [IteratorStateMachineAttribute("Hl7.Fhir.Specification.Source.CommonFhirPackageSource/<<initialize>g__createDependencies|5_0>d")]
[CompilerGeneratedAttribute]
internal static IEnumerable`1<PackageDependency> <initialize>g__createDependencies|5_0(String[] dependencies);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private <>f__AnonymousType2`2<string, Resource> <FindConceptMaps>b__22_0(string item);
}
public interface Hl7.Fhir.Specification.Source.IArtifactSource {
    public abstract virtual IEnumerable`1<string> ListArtifactNames();
    public abstract virtual Stream LoadArtifactByName(string artifactName);
}
public interface Hl7.Fhir.Specification.Source.IAsyncResourceResolver {
    public abstract virtual Task`1<Resource> ResolveByUriAsync(string uri);
    public abstract virtual Task`1<Resource> ResolveByCanonicalUriAsync(string uri);
}
public interface Hl7.Fhir.Specification.Source.IResourceResolver {
    public abstract virtual Resource ResolveByUri(string uri);
    public abstract virtual Resource ResolveByCanonicalUri(string uri);
}
[ObsoleteAttribute("This marker interface is used for backwards-compatibility only and should not be used in your code. Explicitly use IResourceResolver (also obsolete) or preferably IAsyncResourceResolver instead.")]
public interface Hl7.Fhir.Specification.Source.ISyncOrAsyncResourceResolver {
}
[DebuggerDisplayAttribute("\{{DebuggerDisplay,nq}}")]
public class Hl7.Fhir.Specification.Source.MultiResolver : object {
    private List`1<ISyncOrAsyncResourceResolver> _sources;
    public IList`1<IResourceResolver> Sources { get; }
    public IList`1<IAsyncResourceResolver> AsyncSources { get; }
    [DebuggerBrowsableAttribute("0")]
protected internal string DebuggerDisplay { get; }
    public MultiResolver(IEnumerable`1<ISyncOrAsyncResourceResolver> sources);
    public MultiResolver(ISyncOrAsyncResourceResolver[] sources);
    public void AddSource(ISyncOrAsyncResourceResolver source);
    public void RemoveSource(ISyncOrAsyncResourceResolver source);
    public void Push(ISyncOrAsyncResourceResolver source);
    public void Pop();
    public IList`1<IResourceResolver> get_Sources();
    public IList`1<IAsyncResourceResolver> get_AsyncSources();
    private IEnumerable`1<IAsyncResourceResolver> allSourcesAsAsync();
    [ObsoleteAttribute("MultiResolver now works best with asynchronous resolvers. Use ResolveByUriAsync() instead.")]
public sealed virtual Resource ResolveByUri(string uri);
    [AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.MultiResolver/<ResolveByUriAsync>d__13")]
public sealed virtual Task`1<Resource> ResolveByUriAsync(string uri);
    [ObsoleteAttribute("MultiResolver now works best with asynchronous resolvers. Use ResolveByCanonicalUriAsync() instead.")]
public sealed virtual Resource ResolveByCanonicalUri(string uri);
    [AsyncStateMachineAttribute("Hl7.Fhir.Specification.Source.MultiResolver/<ResolveByCanonicalUriAsync>d__15")]
public sealed virtual Task`1<Resource> ResolveByCanonicalUriAsync(string uri);
    protected internal virtual string get_DebuggerDisplay();
}
public class Hl7.Fhir.Specification.Source.SyncToAsyncResolver : object {
    [CompilerGeneratedAttribute]
private IResourceResolver <SyncResolver>k__BackingField;
    public IResourceResolver SyncResolver { get; private set; }
    public SyncToAsyncResolver(IResourceResolver sync);
    [CompilerGeneratedAttribute]
public IResourceResolver get_SyncResolver();
    [CompilerGeneratedAttribute]
private void set_SyncResolver(IResourceResolver value);
    public sealed virtual Task`1<Resource> ResolveByUriAsync(string uri);
    public sealed virtual Task`1<Resource> ResolveByCanonicalUriAsync(string uri);
}
[ExtensionAttribute]
public static class Hl7.Fhir.Specification.Source.SyncToAsyncResolverExtensions : object {
    [ExtensionAttribute]
public static IAsyncResourceResolver AsAsync(ISyncOrAsyncResourceResolver source);
}
public class Hl7.Fhir.Specification.Terminology.ClosureParameters : object {
    [CompilerGeneratedAttribute]
private FhirString <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Coding> <Concept>k__BackingField;
    [CompilerGeneratedAttribute]
private FhirString <Version>k__BackingField;
    public FhirString Name { get; private set; }
    public IEnumerable`1<Coding> Concept { get; private set; }
    public FhirString Version { get; private set; }
    public ClosureParameters(string name);
    [CompilerGeneratedAttribute]
public FhirString get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(FhirString value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<Coding> get_Concept();
    [CompilerGeneratedAttribute]
private void set_Concept(IEnumerable`1<Coding> value);
    [CompilerGeneratedAttribute]
public FhirString get_Version();
    [CompilerGeneratedAttribute]
private void set_Version(FhirString value);
    public ClosureParameters WithConcepts(IEnumerable`1<Coding> codings);
    public ClosureParameters WithVersion(string version);
    public Parameters Build();
}
public enum Hl7.Fhir.Specification.Terminology.ContextDirection : Enum {
    public int value__;
    [EnumLiteralAttribute("incoming", "")]
public static ContextDirection Incoming;
    [EnumLiteralAttribute("outgoing", "")]
public static ContextDirection Outgoing;
}
public interface Hl7.Fhir.Specification.Terminology.ITerminologyService {
    public abstract virtual Task`1<Parameters> ValueSetValidateCode(Parameters parameters, string id, bool useGet);
    public abstract virtual Task`1<Parameters> CodeSystemValidateCode(Parameters parameters, string id, bool useGet);
    public abstract virtual Task`1<Resource> Expand(Parameters parameters, string id, bool useGet);
    public abstract virtual Task`1<Parameters> Lookup(Parameters parameters, bool useGet);
    public abstract virtual Task`1<Parameters> Translate(Parameters parameters, string id, bool useGet);
    public abstract virtual Task`1<Parameters> Subsumes(Parameters parameters, string id, bool useGet);
    public abstract virtual Task`1<Resource> Closure(Parameters parameters, bool useGet);
}
public class Hl7.Fhir.Specification.Terminology.LookupParameters : object {
    [CompilerGeneratedAttribute]
private Code <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private FhirUri <System>k__BackingField;
    [CompilerGeneratedAttribute]
private FhirString <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private Coding <Coding>k__BackingField;
    [CompilerGeneratedAttribute]
private FhirDateTime <Date>k__BackingField;
    [CompilerGeneratedAttribute]
private Code <DisplayLanguage>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Code> <Property>k__BackingField;
    public Code Code { get; private set; }
    public FhirUri System { get; private set; }
    public FhirString Version { get; private set; }
    public Coding Coding { get; private set; }
    public FhirDateTime Date { get; private set; }
    public Code DisplayLanguage { get; private set; }
    public IEnumerable`1<Code> Property { get; private set; }
    [CompilerGeneratedAttribute]
public Code get_Code();
    [CompilerGeneratedAttribute]
private void set_Code(Code value);
    [CompilerGeneratedAttribute]
public FhirUri get_System();
    [CompilerGeneratedAttribute]
private void set_System(FhirUri value);
    [CompilerGeneratedAttribute]
public FhirString get_Version();
    [CompilerGeneratedAttribute]
private void set_Version(FhirString value);
    [CompilerGeneratedAttribute]
public Coding get_Coding();
    [CompilerGeneratedAttribute]
private void set_Coding(Coding value);
    [CompilerGeneratedAttribute]
public FhirDateTime get_Date();
    [CompilerGeneratedAttribute]
private void set_Date(FhirDateTime value);
    [CompilerGeneratedAttribute]
public Code get_DisplayLanguage();
    [CompilerGeneratedAttribute]
private void set_DisplayLanguage(Code value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<Code> get_Property();
    [CompilerGeneratedAttribute]
private void set_Property(IEnumerable`1<Code> value);
    public LookupParameters WithCode(string code, string system, string version, string displayLanguage);
    public LookupParameters WithDate(FhirDateTime date);
    public LookupParameters WithProperties(String[] properties);
    public Parameters Build();
}
[ExtensionAttribute]
public static class Hl7.Fhir.Specification.Terminology.OperationValidCodeExtensions : object {
    [ExtensionAttribute]
public static OperationOutcome ToOperationOutcome(Parameters parameters);
}
public class Hl7.Fhir.Specification.Terminology.SubsumesParameters : object {
    [CompilerGeneratedAttribute]
private Code <CodeA>k__BackingField;
    [CompilerGeneratedAttribute]
private Code <CodeB>k__BackingField;
    [CompilerGeneratedAttribute]
private FhirUri <System>k__BackingField;
    [CompilerGeneratedAttribute]
private FhirString <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private Coding <CodingA>k__BackingField;
    [CompilerGeneratedAttribute]
private Coding <CodingB>k__BackingField;
    public Code CodeA { get; private set; }
    public Code CodeB { get; private set; }
    public FhirUri System { get; private set; }
    public FhirString Version { get; private set; }
    public Coding CodingA { get; private set; }
    public Coding CodingB { get; private set; }
    [CompilerGeneratedAttribute]
public Code get_CodeA();
    [CompilerGeneratedAttribute]
private void set_CodeA(Code value);
    [CompilerGeneratedAttribute]
public Code get_CodeB();
    [CompilerGeneratedAttribute]
private void set_CodeB(Code value);
    [CompilerGeneratedAttribute]
public FhirUri get_System();
    [CompilerGeneratedAttribute]
private void set_System(FhirUri value);
    [CompilerGeneratedAttribute]
public FhirString get_Version();
    [CompilerGeneratedAttribute]
private void set_Version(FhirString value);
    [CompilerGeneratedAttribute]
public Coding get_CodingA();
    [CompilerGeneratedAttribute]
private void set_CodingA(Coding value);
    [CompilerGeneratedAttribute]
public Coding get_CodingB();
    [CompilerGeneratedAttribute]
private void set_CodingB(Coding value);
    public SubsumesParameters WithCode(string codeA, string codeB, string system, string version);
    public SubsumesParameters WithCoding(Coding codingA, Coding codingB, string system, string version);
    public Parameters Build();
}
public class Hl7.Fhir.Specification.Terminology.ValueSetExpanderSettings : object {
    public static int DefaultMaxExpansionSize;
    [ObsoleteAttribute("Use the CreateDefault() method, as using this static member may cause threading issues.")]
public static ValueSetExpanderSettings Default;
    [CompilerGeneratedAttribute]
private ISyncOrAsyncResourceResolver <ValueSetSource>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxExpansionSize>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeDesignations>k__BackingField;
    public ISyncOrAsyncResourceResolver ValueSetSource { get; public set; }
    public int MaxExpansionSize { get; public set; }
    public bool IncludeDesignations { get; public set; }
    public ValueSetExpanderSettings(ValueSetExpanderSettings other);
    private static ValueSetExpanderSettings();
    [CompilerGeneratedAttribute]
public ISyncOrAsyncResourceResolver get_ValueSetSource();
    [CompilerGeneratedAttribute]
public void set_ValueSetSource(ISyncOrAsyncResourceResolver value);
    [CompilerGeneratedAttribute]
public int get_MaxExpansionSize();
    [CompilerGeneratedAttribute]
public void set_MaxExpansionSize(int value);
    [CompilerGeneratedAttribute]
public bool get_IncludeDesignations();
    [CompilerGeneratedAttribute]
public void set_IncludeDesignations(bool value);
    public void CopyTo(ValueSetExpanderSettings other);
    public ValueSetExpanderSettings Clone();
    public static ValueSetExpanderSettings CreateDefault();
}
public class Hl7.Fhir.Support.Issue : object {
    public static string API_OPERATION_OUTCOME_SYSTEM;
    public int Code;
    public IssueSeverity Severity;
    public IssueType Type;
    public static Issue CONTENT_ELEMENT_MUST_HAVE_VALUE_OR_CHILDREN;
    public static Issue CONTENT_ELEMENT_HAS_UNKNOWN_CHILDREN;
    public static Issue CONTENT_ELEMENT_HAS_INCORRECT_TYPE;
    public static Issue CONTENT_ELEMENT_MUST_MATCH_TYPE;
    public static Issue CONTENT_ELEMENT_VALUE_TOO_LONG;
    public static Issue CONTENT_ELEMENT_INVALID_PRIMITIVE_VALUE;
    public static Issue CONTENT_DOES_NOT_MATCH_FIXED_VALUE;
    public static Issue CONTENT_DOES_NOT_MATCH_PATTERN_VALUE;
    public static Issue CONTENT_ELEMENT_CANNOT_DETERMINE_TYPE;
    public static Issue CONTENT_ELEMENT_CHOICE_INVALID_INSTANCE_TYPE;
    public static Issue CONTENT_ELEMENT_FAILS_ERROR_CONSTRAINT;
    public static Issue CONTENT_ELEMENT_FAILS_WARNING_CONSTRAINT;
    public static Issue CONTENT_REFERENCE_OF_INVALID_KIND;
    public static Issue CONTENT_CONTAINED_REFERENCE_NOT_RESOLVABLE;
    public static Issue CONTENT_UNPARSEABLE_REFERENCE;
    public static Issue CONTENT_REFERENCE_NOT_RESOLVABLE;
    public static Issue CONTENT_ELEMENT_PRIMITIVE_VALUE_TOO_SMALL;
    public static Issue CONTENT_ELEMENT_PRIMITIVE_VALUE_TOO_LARGE;
    public static Issue CONTENT_ELEMENT_PRIMITIVE_VALUE_NOT_COMPARABLE;
    public static Issue CONTENT_MISMATCHING_PROFILES;
    public static Issue CONTENT_INVALID_FOR_REQUIRED_BINDING;
    public static Issue CONTENT_INVALID_FOR_NON_REQUIRED_BINDING;
    public static Issue CONTENT_TYPE_NOT_BINDEABLE;
    public static Issue CONTENT_ELEMENT_FAILS_SLICING_RULE;
    public static Issue CONTENT_ELEMENT_SLICING_OUT_OF_ORDER;
    public static Issue CONTENT_INCORRECT_OCCURRENCE;
    public static Issue CONTENT_ELEMENT_NAME_DOESNT_MATCH_DEFINITION;
    public static Issue CONTENT_REFERENCE_CYCLE_DETECTED;
    public static Issue XSD_VALIDATION_ERROR;
    public static Issue XSD_VALIDATION_WARNING;
    public static Issue XSD_CONTENT_POCO_PARSING_FAILED;
    public static Issue PROFILE_ELEMENTDEF_MIN_MAX_USES_UNORDERED_TYPE;
    public static Issue PROFILE_ELEMENTDEF_MAX_USES_UNORDERED_TYPE;
    public static Issue PROFILE_ELEMENTDEF_MAXLENGTH_NEGATIVE;
    public static Issue PROFILE_ELEMENTDEF_CONTAINS_NULL_TYPE;
    public static Issue PROFILE_ELEMENTDEF_CONTAINS_NO_TYPE_OR_NAMEREF;
    public static Issue PROFILE_ELEMENTDEF_INVALID_NAMEREFERENCE;
    public static Issue PROFILE_ELEMENTDEF_CARDINALITY_MISSING;
    public static Issue PROFILE_ELEMENTDEF_IS_EMPTY;
    public static Issue PROFILE_ELEMENTDEF_INVALID_FHIRPATH_EXPRESSION;
    public static Issue PROFILE_NO_PROFILE_TO_VALIDATE_AGAINST;
    public static Issue PROFILE_ELEMENTDEF_INCORRECT;
    [ObsoleteAttribute("This issue will not be raised by the validator anymore. Use 'PROFILE_ELEMENTDEF_INCORRECT' instead.")]
public static Issue PROFILE_INCOMPLETE_BINDING;
    public static Issue PROFILE_INSTANCE_MATCHES_MULTIPLE_SLICES;
    public static Issue UNSUPPORTED_SLICING_NOT_SUPPORTED;
    public static Issue UNSUPPORTED_CONSTRAINT_WITHOUT_FHIRPATH;
    public static Issue UNSUPPORTED_MIN_MAX_QUANTITY;
    public static Issue UNSUPPORTED_BINDING_NOT_SUPPORTED_BY_SERVICE;
    public static Issue UNAVAILABLE_REFERENCED_PROFILE;
    public static Issue UNAVAILABLE_NEED_SNAPSHOT;
    public static Issue UNAVAILABLE_SNAPSHOT_GENERATION_FAILED;
    public static Issue UNAVAILABLE_NEED_DIFFERENTIAL;
    public static Issue UNAVAILABLE_REFERENCED_RESOURCE;
    public static Issue UNAVAILABLE_TERMINOLOGY_SERVER;
    public static Issue UNAVAILABLE_VALIDATE_CODE_FAILED;
    public static Issue UNAVAILABLE_REFERENCED_PROFILE_WARNING;
    public static Issue PROCESSING_PROGRESS;
    public static Issue PROCESSING_START_NESTED_VALIDATION;
    public static Issue PROCESSING_CATASTROPHIC_FAILURE;
    public static Issue PROCESSING_REPEATED_ERROR;
    public static Issue TERMINOLOGY_CODE_NOT_IN_VALUESET;
    public static Issue TERMINOLOGY_ABSTRACT_CODE_NOT_ALLOWED;
    public static Issue TERMINOLOGY_INCORRECT_DISPLAY;
    public static Issue TERMINOLOGY_SERVICE_FAILED;
    public static Issue TERMINOLOGY_NO_CODE_IN_INSTANCE;
    public static Issue TERMINOLOGY_OUTPUT_WARNING;
    public static Issue TERMINOLOGY_OUTPUT_ERROR;
    internal Issue(int code, IssueSeverity severity, IssueType type);
    private static Issue();
    public CodeableConcept ToCodeableConcept(string text);
    public static CodeableConcept ToCodeableConcept(int issueCode, string text);
    public IssueComponent ToIssueComponent(string message, ITypedElement location);
    public IssueComponent ToIssueComponent(string message, string path);
    public static Issue Create(int code, IssueSeverity severity, IssueType type);
}
[ExtensionAttribute]
public static class Hl7.Fhir.Support.OperationOutcomeIssueExtensions : object {
    [ExtensionAttribute]
public static OperationOutcome NewOutcomeWithIssue(Issue infoIssue, string message, ITypedElement location);
    [ExtensionAttribute]
public static OperationOutcome NewOutcomeWithIssue(Issue infoIssue, string message, string location);
    [ExtensionAttribute]
public static IssueComponent AddIssue(OperationOutcome outcome, string message, Issue infoIssue, ITypedElement location);
    [ExtensionAttribute]
public static IssueComponent AddIssue(OperationOutcome outcome, string message, Issue infoIssue, string location);
}
internal class Hl7.Fhir.Support.Poco.FhirTypeConstants : object {
    public static string BOOLEAN;
    public static string INTEGER;
    public static string INTEGER64;
    public static string UNSIGNED_INT;
    public static string POSITIVE_INT;
    public static string TIME;
    public static string DATE;
    public static string INSTANT;
    public static string DATE_TIME;
    public static string DECIMAL;
    public static string STRING;
    public static string CODE;
    public static string ID;
    public static string URI;
    public static string OID;
    public static string UUID;
    public static string CANONICAL;
    public static string URL;
    public static string MARKDOWN;
    public static string BASE64_BINARY;
    public static string CODING;
    public static string CODEABLE_CONCEPT;
    public static string QUANTITY;
    public static string EXTENSION;
    public static string REFERENCE;
    public static string XHTML;
    public static string BUNDLE;
}
public class Hl7.Fhir.Support.ResolvingConflictException : InvalidOperationException {
    private static string ResourceUriConflictErrorMessage;
    private static string CanonicalUrlConflictErrorMessage;
    private static string NamingSystemUniqueIdConflictErrorMessage;
    private static string CodeSystemConflictErrorMessage;
    private static string ConceptMapUrlConflictErrorMessage;
    [CompilerGeneratedAttribute]
private ResolvingConflict[] <Conflicts>k__BackingField;
    public ResolvingConflict[] Conflicts { get; private set; }
    private ResolvingConflictException(string errorMessage, IEnumerable`1<ResolvingConflict> conflicts);
    private static ResolvingConflictException();
    public static ResolvingConflictException ResourceUriConflict(IEnumerable`1<ResolvingConflict> conflicts);
    public static ResolvingConflictException CanonicalUrlConflict(IEnumerable`1<ResolvingConflict> conflicts);
    public static ResolvingConflictException NamingSystemUniqueIdConflict(IEnumerable`1<ResolvingConflict> conflicts);
    public static ResolvingConflictException CodeSystemConflict(IEnumerable`1<ResolvingConflict> conflicts);
    public static ResolvingConflictException ConceptMapUrlConflict(IEnumerable`1<ResolvingConflict> conflicts);
    [CompilerGeneratedAttribute]
public ResolvingConflict[] get_Conflicts();
    [CompilerGeneratedAttribute]
private void set_Conflicts(ResolvingConflict[] value);
    private static string formatMessage(string errorMessage, IEnumerable`1<ResolvingConflict> conflicts);
}
public class Hl7.Fhir.Support.ResourceReferenceNotFoundException : Exception {
    private string _url;
    private static string defaultMessage;
    public string Url { get; }
    public ResourceReferenceNotFoundException(string url);
    public ResourceReferenceNotFoundException(string url, string message);
    public string get_Url();
}
[ExtensionAttribute]
public static class Hl7.Fhir.Support.ValidationOutcomeExtensions : object {
    public static Stopwatch OUTCOME_INCLUDE_TIMER;
    public static string OPERATIONOUTCOME_ISSUE_HIERARCHY;
    private static ValidationOutcomeExtensions();
    [ExtensionAttribute]
public static IssueComponent AddIssue(OperationOutcome outcome, IssueComponent issue);
    [ExtensionAttribute]
public static void AddIssue(OperationOutcome outcome, IssueComponent[] issue);
    [ExtensionAttribute]
public static void AddIssue(OperationOutcome outcome, IEnumerable`1<IssueComponent> issues);
    [ExtensionAttribute]
public static void Add(OperationOutcome outcome, OperationOutcome other);
    [ExtensionAttribute]
public static void Include(OperationOutcome outcome, OperationOutcome other, IssueComponent parent);
    [ExtensionAttribute]
public static void Clear(OperationOutcome outcome);
    [ExtensionAttribute]
public static IEnumerable`1<IssueComponent> ListErrors(OperationOutcome outcome);
    [ExtensionAttribute]
public static IEnumerable`1<IssueComponent> IssuesAt(OperationOutcome outcome, string path);
    [ExtensionAttribute]
public static IEnumerable`1<IssueComponent> ErrorsAt(OperationOutcome outcome, string path);
    [ExtensionAttribute]
public static IEnumerable`1<IssueComponent> Where(OperationOutcome outcome, Nullable`1<IssueSeverity> severity, Nullable`1<IssueType> type, Nullable`1<int> issueCode);
    [ExtensionAttribute]
public static IEnumerable`1<IssueComponent> AtLevel(OperationOutcome outcome, int level);
    [ExtensionAttribute]
public static void SetHierarchyLevel(IssueComponent issue, int level);
    [ExtensionAttribute]
public static int GetHierarchyLevel(IssueComponent issue);
    [ExtensionAttribute]
public static bool IsAt(IssueComponent issue, string path);
}
[ExtensionAttribute]
public static class Hl7.Fhir.Utility.NullExtensions : object {
    [ExtensionAttribute]
public static bool IsNullOrEmpty(IList list);
    [ExtensionAttribute]
public static bool IsNullOrEmpty(Base element);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[CLSCompliantAttribute("False")]
[AttributeUsageAttribute("128")]
public class Hl7.Fhir.Validation.AllowedTypesAttribute : ValidationAttribute {
    [CompilerGeneratedAttribute]
private Type[] <Types>k__BackingField;
    public Type[] Types { get; public set; }
    public AllowedTypesAttribute(Type[] types);
    [CompilerGeneratedAttribute]
public Type[] get_Types();
    [CompilerGeneratedAttribute]
public void set_Types(Type[] value);
    [NullableContextAttribute("2")]
protected virtual ValidationResult IsValid(object value, ValidationContext validationContext);
    [NullableContextAttribute("2")]
private ValidationResult validateValue(object item, ValidationContext context);
    public bool IsAllowedType(Type t);
}
[AttributeUsageAttribute("128")]
public class Hl7.Fhir.Validation.CardinalityAttribute : ValidationAttribute {
    [CompilerGeneratedAttribute]
private int <Min>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Max>k__BackingField;
    public int Min { get; public set; }
    public int Max { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Min();
    [CompilerGeneratedAttribute]
public void set_Min(int value);
    [CompilerGeneratedAttribute]
public int get_Max();
    [CompilerGeneratedAttribute]
public void set_Max(int value);
    [NullableContextAttribute("2")]
protected virtual ValidationResult IsValid(object value, ValidationContext validationContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Hl7.Fhir.Validation.CodedValidationException : CodedException {
    public static string CHOICE_TYPE_NOT_ALLOWED_CODE;
    public static string INCORRECT_CARDINALITY_MIN_CODE;
    public static string INCORRECT_CARDINALITY_MAX_CODE;
    public static string REPEATING_ELEMENT_CANNOT_CONTAIN_NULL_CODE;
    public static string MANDATORY_ELEMENT_CANNOT_BE_NULL_CODE;
    public static string CODE_LITERAL_INVALID_CODE;
    public static string DATE_LITERAL_INVALID_CODE;
    public static string DATETIME_LITERAL_INVALID_CODE;
    public static string ID_LITERAL_INVALID_CODE;
    public static string OID_LITERAL_INVALID_CODE;
    public static string TIME_LITERAL_INVALID_CODE;
    public static string URI_LITERAL_INVALID_CODE;
    public static string UUID_LITERAL_INVALID_CODE;
    public static string NARRATIVE_XML_IS_MALFORMED_CODE;
    public static string NARRATIVE_XML_IS_INVALID_CODE;
    public static string INVALID_CODED_VALUE_CODE;
    public static string CONTAINED_RESOURCE_CANNOT_HAVE_NARRATIVE_CODE;
    public static string CONTAINED_RESOURCES_CANNOT_BE_NESTED_CODE;
    internal static CodedValidationException CHOICE_TYPE_NOT_ALLOWED;
    internal static CodedValidationException INCORRECT_CARDINALITY_MIN;
    internal static CodedValidationException INCORRECT_CARDINALITY_MAX;
    internal static CodedValidationException REPEATING_ELEMENT_CANNOT_CONTAIN_NULL;
    internal static CodedValidationException MANDATORY_ELEMENT_CANNOT_BE_NULL;
    internal static CodedValidationException CODE_LITERAL_INVALID;
    internal static CodedValidationException DATE_LITERAL_INVALID;
    internal static CodedValidationException DATETIME_LITERAL_INVALID;
    internal static CodedValidationException ID_LITERAL_INVALID;
    internal static CodedValidationException NARRATIVE_XML_IS_MALFORMED;
    internal static CodedValidationException NARRATIVE_XML_IS_INVALID;
    internal static CodedValidationException OID_LITERAL_INVALID;
    internal static CodedValidationException TIME_LITERAL_INVALID;
    internal static CodedValidationException URI_LITERAL_INVALID;
    internal static CodedValidationException UUID_LITERAL_INVALID;
    internal static CodedValidationException INVALID_CODED_VALUE;
    internal static CodedValidationException CONTAINED_RESOURCE_CANNOT_HAVE_NARRATIVE;
    internal static CodedValidationException CONTAINED_RESOURCES_CANNOT_BE_NESTED;
    public CodedValidationException(string code, string message);
    private static CodedValidationException();
    internal CodedValidationResult AsResult(ValidationContext context, Object[] parameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Hl7.Fhir.Validation.CodedValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private CodedValidationException <ValidationException>k__BackingField;
    public CodedValidationException ValidationException { get; public set; }
    public CodedValidationResult(CodedValidationException validationException);
    public CodedValidationResult(CodedValidationException validationException, IEnumerable`1<string> memberNames);
    protected CodedValidationResult(CodedValidationResult validationResult);
    [CompilerGeneratedAttribute]
public CodedValidationException get_ValidationException();
    [CompilerGeneratedAttribute]
public void set_ValidationException(CodedValidationException value);
}
[AttributeUsageAttribute("128")]
public class Hl7.Fhir.Validation.CodePatternAttribute : ValidationAttribute {
    [NullableContextAttribute("2")]
protected virtual ValidationResult IsValid(object value, ValidationContext validationContext);
}
internal class Hl7.Fhir.Validation.Condition : MulticastDelegate {
    public Condition(object object, IntPtr method);
    public virtual bool Invoke();
    public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
[AttributeUsageAttribute("128")]
public class Hl7.Fhir.Validation.DatePatternAttribute : ValidationAttribute {
    [NullableContextAttribute("2")]
protected virtual ValidationResult IsValid(object value, ValidationContext validationContext);
}
[AttributeUsageAttribute("128")]
public class Hl7.Fhir.Validation.DateTimePatternAttribute : ValidationAttribute {
    [NullableContextAttribute("2")]
protected virtual ValidationResult IsValid(object value, ValidationContext validationContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Hl7.Fhir.Validation.DotNetAttributeValidation : object {
    [ExtensionAttribute]
public static void Validate(Base value, bool recurse, NarrativeValidationKind narrativeValidation);
    internal static void Validate(object value, bool recurse, NarrativeValidationKind narrativeValidation);
    [ExtensionAttribute]
public static bool TryValidate(Base value, ICollection`1<ValidationResult> validationResults, bool recurse, NarrativeValidationKind narrativeValidation);
    internal static bool TryValidate(object value, ICollection`1<ValidationResult> validationResults, bool recurse, NarrativeValidationKind narrativeValidation);
    internal static bool TryValidate(object value, ValidationContext context, ICollection`1<ValidationResult> validationResults);
    [ExtensionAttribute]
internal static ValidationContext IntoPath(ValidationContext ctx, object instance, string nestedElementName);
    private static ValidationContext buildContext(bool recurse, NarrativeValidationKind kind, object instance);
}
[AttributeUsageAttribute("128")]
public class Hl7.Fhir.Validation.IdPatternAttribute : ValidationAttribute {
    [NullableContextAttribute("2")]
protected virtual ValidationResult IsValid(object value, ValidationContext validationContext);
}
public class Hl7.Fhir.Validation.IssueComparer : object {
    public sealed virtual bool Equals(IssueComponent x, IssueComponent y);
    public sealed virtual int GetHashCode(IssueComponent issue);
}
public enum Hl7.Fhir.Validation.NarrativeValidationKind : Enum {
    public int value__;
    public static NarrativeValidationKind None;
    public static NarrativeValidationKind Xml;
    public static NarrativeValidationKind FhirXhtml;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("128")]
public class Hl7.Fhir.Validation.NarrativeXhtmlPatternAttribute : ValidationAttribute {
    protected virtual ValidationResult IsValid(object value, ValidationContext validationContext);
    public ValidationResult IsValid(object value, NarrativeValidationKind kind, ValidationContext context);
    [NullableContextAttribute("1")]
private static ValidationResult runValidateXhtmlSchema(string text, ValidationContext context);
}
[AttributeUsageAttribute("128")]
public class Hl7.Fhir.Validation.OidPatternAttribute : ValidationAttribute {
    [NullableContextAttribute("2")]
protected virtual ValidationResult IsValid(object value, ValidationContext validationContext);
}
[ExtensionAttribute]
public static class Hl7.Fhir.Validation.OperationOutcomeExtensions : object {
    [ExtensionAttribute]
public static void MakeInformational(OperationOutcome outcome);
    [ExtensionAttribute]
public static void Flatten(OperationOutcome outcome);
    [ExtensionAttribute]
public static OperationOutcome RemoveDuplicateMessages(OperationOutcome outcome);
}
[AttributeUsageAttribute("128")]
public class Hl7.Fhir.Validation.TimePatternAttribute : ValidationAttribute {
    [NullableContextAttribute("2")]
protected virtual ValidationResult IsValid(object value, ValidationContext validationContext);
}
[AttributeUsageAttribute("128")]
public class Hl7.Fhir.Validation.UriPatternAttribute : ValidationAttribute {
    [NullableContextAttribute("2")]
protected virtual ValidationResult IsValid(object value, ValidationContext validationContext);
}
[AttributeUsageAttribute("128")]
public class Hl7.Fhir.Validation.UuidPatternAttribute : ValidationAttribute {
    [NullableContextAttribute("2")]
protected virtual ValidationResult IsValid(object value, ValidationContext validationContext);
}
[AttributeUsageAttribute("128")]
public class Hl7.Fhir.Validation.ValidateEnumCodeAttribute : ValidationAttribute {
    [NullableContextAttribute("2")]
protected virtual ValidationResult IsValid(object value, ValidationContext validationContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Hl7.Fhir.Validation.ValidationContextExtensions : object {
    private static string RECURSE_ITEM_KEY;
    private static string NARRATIVE_VALIDATION_KIND_ITEM_KEY;
    private static string POSITIONINFO_ITEM_KEY;
    private static string LOCATION_ITEM_KEY;
    [ExtensionAttribute]
public static ValidationContext SetValidateRecursively(ValidationContext ctx, bool recursively);
    [ExtensionAttribute]
public static bool ValidateRecursively(ValidationContext ctx);
    [ExtensionAttribute]
public static ValidationContext SetNarrativeValidationKind(ValidationContext ctx, NarrativeValidationKind kind);
    [ExtensionAttribute]
public static NarrativeValidationKind GetNarrativeValidationKind(ValidationContext ctx);
    [ExtensionAttribute]
public static ValidationContext SetPositionInfo(ValidationContext ctx, IPositionInfo position);
    [ExtensionAttribute]
public static IPositionInfo GetPositionInfo(ValidationContext ctx);
    [ExtensionAttribute]
public static ValidationContext SetLocation(ValidationContext ctx, string location);
    [ExtensionAttribute]
public static string GetLocation(ValidationContext ctx);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[EditorBrowsableAttribute("1")]
internal static class System.Runtime.CompilerServices.IsExternalInit : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
