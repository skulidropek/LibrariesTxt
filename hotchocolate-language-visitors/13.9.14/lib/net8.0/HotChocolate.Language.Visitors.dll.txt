[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class HotChocolate.Language.Properties.Resources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string DefaultSyntaxNavigator_Pop_StackEmpty { get; }
    internal static string DefaultSyntaxNavigator_Peek_CountCannotBeNegative { get; }
    internal static string DefaultSyntaxNavigator_CreateCoordinate_InvalidStructure { get; }
    internal static string DefaultSyntaxNavigator_CreateCoordinate_EmptyPath { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_DefaultSyntaxNavigator_Pop_StackEmpty();
    internal static string get_DefaultSyntaxNavigator_Peek_CountCannotBeNegative();
    internal static string get_DefaultSyntaxNavigator_CreateCoordinate_InvalidStructure();
    internal static string get_DefaultSyntaxNavigator_CreateCoordinate_EmptyPath();
}
public class HotChocolate.Language.Visitors.BreakSyntaxVisitorAction : object {
    public SyntaxVisitorActionKind Kind { get; }
    public sealed virtual SyntaxVisitorActionKind get_Kind();
}
public class HotChocolate.Language.Visitors.ContinueSyntaxVisitorAction : object {
    public SyntaxVisitorActionKind Kind { get; }
    public sealed virtual SyntaxVisitorActionKind get_Kind();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class HotChocolate.Language.Visitors.DefaultSyntaxNavigator : object {
    private List`1<ISyntaxNode> _ancestors;
    private ISyntaxNode[] _coordinate;
    public int Count { get; }
    public sealed virtual int get_Count();
    public sealed virtual void Push(ISyntaxNode node);
    public sealed virtual ISyntaxNode Pop();
    public sealed virtual ISyntaxNode Peek();
    public sealed virtual ISyntaxNode Peek(int count);
    [NullableContextAttribute("2")]
public sealed virtual bool TryPop(ISyntaxNode& node);
    [NullableContextAttribute("2")]
public sealed virtual bool TryPeek(ISyntaxNode& node);
    [NullableContextAttribute("2")]
public sealed virtual bool TryPeek(int count, ISyntaxNode& node);
    [NullableContextAttribute("0")]
public sealed virtual TNode GetAncestor();
    public sealed virtual IEnumerable`1<TNode> GetAncestors();
    [IteratorStateMachineAttribute("HotChocolate.Language.Visitors.DefaultSyntaxNavigator/<GetAncestorsInternal>d__13`1")]
private IEnumerable`1<TNode> GetAncestorsInternal();
    public sealed virtual SchemaCoordinateNode CreateCoordinate();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class HotChocolate.Language.Visitors.DelegateSyntaxRewriter`1 : SyntaxRewriter`1<TContext> {
    private RewriteSyntaxNode`1<TContext> _rewrite;
    private Func`3<ISyntaxNode, TContext, TContext> _enter;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Action`2<ISyntaxNode, TContext> _leave;
    public DelegateSyntaxRewriter`1(RewriteSyntaxNode`1<TContext> rewrite, Func`3<ISyntaxNode, TContext, TContext> enter, Action`2<ISyntaxNode, TContext> leave);
    protected virtual TContext OnEnter(ISyntaxNode node, TContext context);
    protected virtual ISyntaxNode OnRewrite(ISyntaxNode node, TContext context);
    protected virtual void OnLeave(ISyntaxNode node, TContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class HotChocolate.Language.Visitors.DelegateSyntaxVisitor`1 : SyntaxVisitor`1<TContext> {
    private VisitSyntaxNode`1<TContext> _enter;
    private VisitSyntaxNode`1<TContext> _leave;
    [NullableContextAttribute("2")]
public DelegateSyntaxVisitor`1(VisitSyntaxNode`1<TContext> enter, VisitSyntaxNode`1<TContext> leave, ISyntaxVisitorAction defaultResult, SyntaxVisitorOptions options);
    protected virtual ISyntaxVisitorAction Enter(ISyntaxNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(ISyntaxNode node, TContext context);
    [CompilerGeneratedAttribute]
private ISyntaxVisitorAction <.ctor>b__2_0(ISyntaxNode _, TContext _);
    [CompilerGeneratedAttribute]
private ISyntaxVisitorAction <.ctor>b__2_1(ISyntaxNode _, TContext _);
}
[NullableContextAttribute("1")]
public interface HotChocolate.Language.Visitors.INavigatorContext {
    public ISyntaxNavigator Navigator { get; }
    public abstract virtual ISyntaxNavigator get_Navigator();
}
[NullableContextAttribute("1")]
public interface HotChocolate.Language.Visitors.ISyntaxNavigator {
    public int Count { get; }
    public abstract virtual int get_Count();
    public abstract virtual void Push(ISyntaxNode node);
    public abstract virtual ISyntaxNode Pop();
    public abstract virtual ISyntaxNode Peek();
    public abstract virtual ISyntaxNode Peek(int count);
    [NullableContextAttribute("2")]
public abstract virtual bool TryPop(ISyntaxNode& node);
    [NullableContextAttribute("2")]
public abstract virtual bool TryPeek(ISyntaxNode& node);
    [NullableContextAttribute("2")]
public abstract virtual bool TryPeek(int count, ISyntaxNode& node);
    [NullableContextAttribute("0")]
public abstract virtual TNode GetAncestor();
    public abstract virtual IEnumerable`1<TNode> GetAncestors();
    public abstract virtual SchemaCoordinateNode CreateCoordinate();
}
[NullableContextAttribute("1")]
public interface HotChocolate.Language.Visitors.ISyntaxRewriter`1 {
    public abstract virtual ISyntaxNode Rewrite(ISyntaxNode node, TContext context);
}
[NullableContextAttribute("1")]
public interface HotChocolate.Language.Visitors.ISyntaxVisitor`1 {
    public abstract virtual ISyntaxVisitorAction Visit(ISyntaxNode node, TContext context);
}
public interface HotChocolate.Language.Visitors.ISyntaxVisitorAction {
    public SyntaxVisitorActionKind Kind { get; }
    public abstract virtual SyntaxVisitorActionKind get_Kind();
}
public interface HotChocolate.Language.Visitors.ISyntaxVisitorContext {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class HotChocolate.Language.Visitors.ListExtensions : object {
    [ExtensionAttribute]
public static T Pop(IList`1<T> list);
    [ExtensionAttribute]
public static T Peek(IList`1<T> list);
    [ExtensionAttribute]
public static bool TryPeek(IList`1<T> list, T& item);
    [ExtensionAttribute]
public static void Push(IList`1<T> list, T item);
}
public class HotChocolate.Language.Visitors.NavigatorContext : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ISyntaxNavigator <Navigator>k__BackingField;
    [NullableAttribute("1")]
public ISyntaxNavigator Navigator { get; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual ISyntaxNavigator get_Navigator();
}
public class HotChocolate.Language.Visitors.RewriteSyntaxNode`1 : MulticastDelegate {
    public RewriteSyntaxNode`1(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual ISyntaxNode Invoke(ISyntaxNode node, TContext context);
    public virtual IAsyncResult BeginInvoke(ISyntaxNode node, TContext context, AsyncCallback callback, object object);
    public virtual ISyntaxNode EndInvoke(IAsyncResult result);
}
public class HotChocolate.Language.Visitors.SkipAndLeaveSyntaxVisitorAction : object {
    public SyntaxVisitorActionKind Kind { get; }
    public sealed virtual SyntaxVisitorActionKind get_Kind();
}
public class HotChocolate.Language.Visitors.SkipSyntaxVisitorAction : object {
    public SyntaxVisitorActionKind Kind { get; }
    public sealed virtual SyntaxVisitorActionKind get_Kind();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class HotChocolate.Language.Visitors.SyntaxNodeCannotBeNullException : Exception {
    [CompilerGeneratedAttribute]
private SyntaxKind <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private Location <Location>k__BackingField;
    public SyntaxKind Kind { get; }
    public Location Location { get; }
    [NullableContextAttribute("1")]
public SyntaxNodeCannotBeNullException(ISyntaxNode node);
    [CompilerGeneratedAttribute]
public SyntaxKind get_Kind();
    [CompilerGeneratedAttribute]
public Location get_Location();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class HotChocolate.Language.Visitors.SyntaxNodeListPool : DefaultObjectPool`1<List`1<ISyntaxNode>> {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class HotChocolate.Language.Visitors.SyntaxRewriter : object {
    public static ISyntaxRewriter`1<ISyntaxVisitorContext> Create(Func`2<ISyntaxNode, ISyntaxNode> rewrite);
    public static ISyntaxRewriter`1<TContext> Create(RewriteSyntaxNode`1<TContext> rewrite, Func`3<ISyntaxNode, TContext, TContext> enter, Action`2<ISyntaxNode, TContext> leave);
    public static ISyntaxRewriter`1<NavigatorContext> CreateWithNavigator(RewriteSyntaxNode`1<NavigatorContext> rewrite, Func`3<ISyntaxNode, NavigatorContext, NavigatorContext> enter, Action`2<ISyntaxNode, NavigatorContext> leave);
    public static ISyntaxRewriter`1<TContext> CreateWithNavigator(RewriteSyntaxNode`1<TContext> rewrite, Func`3<ISyntaxNode, TContext, TContext> enter, Action`2<ISyntaxNode, TContext> leave);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class HotChocolate.Language.Visitors.SyntaxRewriter`1 : object {
    public virtual ISyntaxNode Rewrite(ISyntaxNode node, TContext context);
    protected virtual TContext OnEnter(ISyntaxNode node, TContext context);
    protected virtual ISyntaxNode OnRewrite(ISyntaxNode node, TContext context);
    protected virtual void OnLeave(ISyntaxNode node, TContext context);
    protected virtual ArgumentNode RewriteArgument(ArgumentNode node, TContext context);
    protected virtual BooleanValueNode RewriteBooleanValue(BooleanValueNode node, TContext context);
    protected virtual DirectiveDefinitionNode RewriteDirectiveDefinition(DirectiveDefinitionNode node, TContext context);
    protected virtual DirectiveNode RewriteDirective(DirectiveNode node, TContext context);
    protected virtual DocumentNode RewriteDocument(DocumentNode node, TContext context);
    protected virtual EnumTypeDefinitionNode RewriteEnumTypeDefinition(EnumTypeDefinitionNode node, TContext context);
    protected virtual EnumTypeExtensionNode RewriteEnumTypeExtension(EnumTypeExtensionNode node, TContext context);
    protected virtual EnumValueDefinitionNode RewriteEnumValueDefinition(EnumValueDefinitionNode node, TContext context);
    protected virtual EnumValueNode RewriteEnumValue(EnumValueNode node, TContext context);
    protected virtual FieldDefinitionNode RewriteFieldDefinition(FieldDefinitionNode node, TContext context);
    protected virtual FieldNode RewriteField(FieldNode node, TContext context);
    protected virtual FloatValueNode RewriteFloatValue(FloatValueNode node, TContext context);
    protected virtual FragmentDefinitionNode RewriteFragmentDefinition(FragmentDefinitionNode node, TContext context);
    protected virtual FragmentSpreadNode RewriteFragmentSpread(FragmentSpreadNode node, TContext context);
    protected virtual InlineFragmentNode RewriteInlineFragment(InlineFragmentNode node, TContext context);
    protected virtual InputObjectTypeDefinitionNode RewriteInputObjectTypeDefinition(InputObjectTypeDefinitionNode node, TContext context);
    protected virtual InputObjectTypeExtensionNode RewriteInputObjectTypeExtension(InputObjectTypeExtensionNode node, TContext context);
    protected virtual InputValueDefinitionNode RewriteInputValueDefinition(InputValueDefinitionNode node, TContext context);
    protected virtual InterfaceTypeDefinitionNode RewriteInterfaceTypeDefinition(InterfaceTypeDefinitionNode node, TContext context);
    protected virtual InterfaceTypeExtensionNode RewriteInterfaceTypeExtension(InterfaceTypeExtensionNode node, TContext context);
    protected virtual IntValueNode RewriteIntValue(IntValueNode node, TContext context);
    protected virtual ListNullabilityNode RewriteListNullability(ListNullabilityNode node, TContext context);
    protected virtual ListTypeNode RewriteListType(ListTypeNode node, TContext context);
    protected virtual ListValueNode RewriteListValue(ListValueNode node, TContext context);
    protected virtual NamedTypeNode RewriteNamedType(NamedTypeNode node, TContext context);
    protected virtual NameNode RewriteName(NameNode node, TContext context);
    protected virtual NonNullTypeNode RewriteNonNullType(NonNullTypeNode node, TContext context);
    protected virtual NullValueNode RewriteNullValue(NullValueNode node, TContext context);
    protected virtual ObjectFieldNode RewriteObjectField(ObjectFieldNode node, TContext context);
    protected virtual ObjectTypeDefinitionNode RewriteObjectTypeDefinition(ObjectTypeDefinitionNode node, TContext context);
    protected virtual ObjectTypeExtensionNode RewriteObjectTypeExtension(ObjectTypeExtensionNode node, TContext context);
    protected virtual ObjectValueNode RewriteObjectValue(ObjectValueNode node, TContext context);
    protected virtual OperationDefinitionNode RewriteOperationDefinition(OperationDefinitionNode node, TContext context);
    protected virtual OperationTypeDefinitionNode RewriteOperationTypeDefinition(OperationTypeDefinitionNode node, TContext context);
    protected virtual OptionalModifierNode RewriteOptionalModifier(OptionalModifierNode node, TContext context);
    protected virtual RequiredModifierNode RewriteRequiredModifier(RequiredModifierNode node, TContext context);
    protected virtual ScalarTypeDefinitionNode RewriteScalarTypeDefinition(ScalarTypeDefinitionNode node, TContext context);
    protected virtual ScalarTypeExtensionNode RewriteScalarTypeExtension(ScalarTypeExtensionNode node, TContext context);
    protected virtual SchemaCoordinateNode RewriteSchemaCoordinate(SchemaCoordinateNode node, TContext context);
    protected virtual SchemaDefinitionNode RewriteSchemaDefinition(SchemaDefinitionNode node, TContext context);
    protected virtual SchemaExtensionNode RewriteSchemaExtension(SchemaExtensionNode node, TContext context);
    protected virtual SelectionSetNode RewriteSelectionSet(SelectionSetNode node, TContext context);
    protected virtual StringValueNode RewriteStringValue(StringValueNode node, TContext context);
    protected virtual IValueNode RewriteCustomValue(IValueNode node, TContext context);
    protected virtual UnionTypeDefinitionNode RewriteUnionTypeDefinition(UnionTypeDefinitionNode node, TContext context);
    protected virtual UnionTypeExtensionNode RewriteUnionTypeExtension(UnionTypeExtensionNode node, TContext context);
    protected virtual VariableDefinitionNode RewriteVariableDefinition(VariableDefinitionNode node, TContext context);
    protected virtual VariableNode RewriteVariable(VariableNode node, TContext context);
    protected T RewriteNode(T node, TContext context);
    protected T RewriteNodeOrDefault(T node, TContext context);
    protected IReadOnlyList`1<T> RewriteList(IReadOnlyList`1<T> nodes, TContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class HotChocolate.Language.Visitors.SyntaxRewriterExtensions : object {
    private static EmptySyntaxVisitorContext _empty;
    private static SyntaxRewriterExtensions();
    [ExtensionAttribute]
public static ISyntaxNode Rewrite(ISyntaxRewriter`1<ISyntaxVisitorContext> rewriter, ISyntaxNode node);
    [ExtensionAttribute]
public static T Rewrite(ISyntaxRewriter`1<ISyntaxVisitorContext> rewriter, T node);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class HotChocolate.Language.Visitors.SyntaxVisitor : SyntaxVisitor`1<ISyntaxVisitorContext> {
    public SyntaxVisitor(SyntaxVisitorOptions options);
    public SyntaxVisitor(ISyntaxVisitorAction defaultResult, SyntaxVisitorOptions options);
    public static ISyntaxVisitor`1<ISyntaxVisitorContext> Create(Func`2<ISyntaxNode, ISyntaxVisitorAction> enter, Func`2<ISyntaxNode, ISyntaxVisitorAction> leave, ISyntaxVisitorAction defaultAction, SyntaxVisitorOptions options);
    public static ISyntaxVisitor`1<TContext> Create(VisitSyntaxNode`1<TContext> enter, VisitSyntaxNode`1<TContext> leave, ISyntaxVisitorAction defaultAction, SyntaxVisitorOptions options);
    public static ISyntaxVisitor`1<TContext> CreateWithNavigator(VisitSyntaxNode`1<TContext> enter, VisitSyntaxNode`1<TContext> leave, ISyntaxVisitorAction defaultAction, SyntaxVisitorOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class HotChocolate.Language.Visitors.SyntaxVisitor`1 : object {
    private SyntaxVisitorOptions _options;
    [CompilerGeneratedAttribute]
private ISyntaxVisitorAction <DefaultAction>k__BackingField;
    [CompilerGeneratedAttribute]
private static ISyntaxVisitorAction <Break>k__BackingField;
    [CompilerGeneratedAttribute]
private static ISyntaxVisitorAction <Skip>k__BackingField;
    [CompilerGeneratedAttribute]
private static ISyntaxVisitorAction <Continue>k__BackingField;
    [CompilerGeneratedAttribute]
private static ISyntaxVisitorAction <SkipAndLeave>k__BackingField;
    protected SyntaxVisitorOptions Options { get; }
    protected ISyntaxVisitorAction DefaultAction { get; }
    public static ISyntaxVisitorAction Break { get; }
    public static ISyntaxVisitorAction Skip { get; }
    public static ISyntaxVisitorAction Continue { get; }
    public static ISyntaxVisitorAction SkipAndLeave { get; }
    protected SyntaxVisitor`1(SyntaxVisitorOptions options);
    protected SyntaxVisitor`1(ISyntaxVisitorAction defaultResult, SyntaxVisitorOptions options);
    private static SyntaxVisitor`1();
    protected SyntaxVisitorOptions get_Options();
    [CompilerGeneratedAttribute]
protected virtual ISyntaxVisitorAction get_DefaultAction();
    [CompilerGeneratedAttribute]
public static ISyntaxVisitorAction get_Break();
    [CompilerGeneratedAttribute]
public static ISyntaxVisitorAction get_Skip();
    [CompilerGeneratedAttribute]
public static ISyntaxVisitorAction get_Continue();
    [CompilerGeneratedAttribute]
public static ISyntaxVisitorAction get_SkipAndLeave();
    public sealed virtual ISyntaxVisitorAction Visit(ISyntaxNode node, TContext context);
    protected ISyntaxVisitorAction Visit(TNode node, TParent parent, TContext context);
    protected virtual ISyntaxVisitorAction Enter(ISyntaxNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(ISyntaxNode node, TContext context);
    protected virtual TContext OnBeforeEnter(ISyntaxNode node, ISyntaxNode parent, TContext context);
    protected virtual TContext OnAfterEnter(ISyntaxNode node, ISyntaxNode parent, TContext context, ISyntaxVisitorAction action);
    protected virtual TContext OnBeforeLeave(ISyntaxNode node, ISyntaxNode parent, TContext context);
    protected virtual TContext OnAfterLeave(ISyntaxNode node, ISyntaxNode parent, TContext context, ISyntaxVisitorAction action);
    protected virtual ISyntaxVisitorAction VisitChildren(ISyntaxNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(DocumentNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(OperationDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(VariableDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(VariableNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(SelectionSetNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(FieldNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(ArgumentNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(FragmentSpreadNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(InlineFragmentNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(FragmentDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(DirectiveNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(NamedTypeNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(ListTypeNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(NonNullTypeNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(ListValueNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(ObjectValueNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(ObjectFieldNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(SchemaDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(OperationTypeDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(ScalarTypeDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(ObjectTypeDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(FieldDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(InputValueDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(InterfaceTypeDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(UnionTypeDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(EnumTypeDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(EnumValueDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(InputObjectTypeDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(DirectiveDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(SchemaExtensionNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(ScalarTypeExtensionNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(ObjectTypeExtensionNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(InterfaceTypeExtensionNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(UnionTypeExtensionNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(EnumTypeExtensionNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(InputObjectTypeExtensionNode node, TContext context);
    protected virtual ISyntaxVisitorAction VisitChildren(SchemaCoordinateNode node, TContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class HotChocolate.Language.Visitors.SyntaxVisitorActionExtension : object {
    [ExtensionAttribute]
public static bool IsBreak(ISyntaxVisitorAction action);
    [ExtensionAttribute]
public static bool IsContinue(ISyntaxVisitorAction action);
    [ExtensionAttribute]
public static bool IsSkip(ISyntaxVisitorAction action);
}
public enum HotChocolate.Language.Visitors.SyntaxVisitorActionKind : Enum {
    public int value__;
    public static SyntaxVisitorActionKind Continue;
    public static SyntaxVisitorActionKind Skip;
    public static SyntaxVisitorActionKind Break;
    public static SyntaxVisitorActionKind SkipAndLeave;
}
[ExtensionAttribute]
public static class HotChocolate.Language.Visitors.SyntaxVisitorExtensions : object {
    [NullableAttribute("1")]
private static EmptySyntaxVisitorContext _empty;
    private static SyntaxVisitorExtensions();
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static ISyntaxVisitorAction Visit(ISyntaxVisitor`1<ISyntaxVisitorContext> visitor, ISyntaxNode node);
}
public class HotChocolate.Language.Visitors.SyntaxVisitorOptions : ValueType {
    [CompilerGeneratedAttribute]
private bool <VisitNames>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <VisitDescriptions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <VisitDirectives>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <VisitArguments>k__BackingField;
    public bool VisitNames { get; public set; }
    public bool VisitDescriptions { get; public set; }
    public bool VisitDirectives { get; public set; }
    public bool VisitArguments { get; public set; }
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public bool get_VisitNames();
    [CompilerGeneratedAttribute]
public void set_VisitNames(bool value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public bool get_VisitDescriptions();
    [CompilerGeneratedAttribute]
public void set_VisitDescriptions(bool value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public bool get_VisitDirectives();
    [CompilerGeneratedAttribute]
public void set_VisitDirectives(bool value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public bool get_VisitArguments();
    [CompilerGeneratedAttribute]
public void set_VisitArguments(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class HotChocolate.Language.Visitors.SyntaxWalker : SyntaxVisitor {
    protected SyntaxWalker(SyntaxVisitorOptions options);
    protected SyntaxWalker(ISyntaxVisitorAction defaultResult, SyntaxVisitorOptions options);
    protected virtual ISyntaxVisitorAction Enter(ISyntaxNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(NameNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(DocumentNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(OperationDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(VariableDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(VariableNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(SelectionSetNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(FieldNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(ArgumentNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(FragmentSpreadNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(InlineFragmentNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(FragmentDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(DirectiveNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(NamedTypeNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(ListTypeNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(NonNullTypeNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(ListValueNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(ObjectValueNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(ObjectFieldNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(IValueNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(SchemaDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(OperationTypeDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(ScalarTypeDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(ObjectTypeDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(FieldDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(InputValueDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(InterfaceTypeDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(UnionTypeDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(EnumTypeDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(EnumValueDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(InputObjectTypeDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(DirectiveDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(SchemaExtensionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(ScalarTypeExtensionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(ObjectTypeExtensionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(InterfaceTypeExtensionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(UnionTypeExtensionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(EnumTypeExtensionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(InputObjectTypeExtensionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Enter(SchemaCoordinateNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(ISyntaxNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(NameNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(DocumentNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(OperationDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(VariableDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(VariableNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(SelectionSetNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(FieldNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(ArgumentNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(FragmentSpreadNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(InlineFragmentNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(FragmentDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(DirectiveNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(NamedTypeNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(ListTypeNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(NonNullTypeNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(ListValueNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(ObjectValueNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(ObjectFieldNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(IValueNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(SchemaDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(OperationTypeDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(ScalarTypeDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(ObjectTypeDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(FieldDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(InputValueDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(InterfaceTypeDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(UnionTypeDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(EnumTypeDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(EnumValueDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(InputObjectTypeDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(DirectiveDefinitionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(SchemaExtensionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(ScalarTypeExtensionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(ObjectTypeExtensionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(InterfaceTypeExtensionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(UnionTypeExtensionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(EnumTypeExtensionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(InputObjectTypeExtensionNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(SchemaCoordinateNode node, ISyntaxVisitorContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class HotChocolate.Language.Visitors.SyntaxWalker`1 : SyntaxVisitor`1<TContext> {
    protected SyntaxWalker`1(SyntaxVisitorOptions options);
    protected SyntaxWalker`1(ISyntaxVisitorAction defaultResult, SyntaxVisitorOptions options);
    protected virtual ISyntaxVisitorAction Enter(ISyntaxNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(NameNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(DocumentNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(OperationDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(VariableDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(VariableNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(SelectionSetNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(FieldNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(ArgumentNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(FragmentSpreadNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(InlineFragmentNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(FragmentDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(DirectiveNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(NamedTypeNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(ListTypeNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(NonNullTypeNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(ListValueNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(ObjectValueNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(ObjectFieldNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(IValueNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(SchemaDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(OperationTypeDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(ScalarTypeDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(ObjectTypeDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(FieldDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(InputValueDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(InterfaceTypeDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(UnionTypeDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(EnumTypeDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(EnumValueDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(InputObjectTypeDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(DirectiveDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(SchemaExtensionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(ScalarTypeExtensionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(ObjectTypeExtensionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(InterfaceTypeExtensionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(UnionTypeExtensionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(EnumTypeExtensionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(InputObjectTypeExtensionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Enter(SchemaCoordinateNode node, ISyntaxVisitorContext context);
    protected virtual ISyntaxVisitorAction Leave(ISyntaxNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(NameNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(DocumentNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(OperationDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(VariableDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(VariableNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(SelectionSetNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(FieldNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(ArgumentNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(FragmentSpreadNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(InlineFragmentNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(FragmentDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(DirectiveNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(NamedTypeNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(ListTypeNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(NonNullTypeNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(ListValueNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(ObjectValueNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(ObjectFieldNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(IValueNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(SchemaDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(OperationTypeDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(ScalarTypeDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(ObjectTypeDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(FieldDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(InputValueDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(InterfaceTypeDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(UnionTypeDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(EnumTypeDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(EnumValueDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(InputObjectTypeDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(DirectiveDefinitionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(SchemaExtensionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(ScalarTypeExtensionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(ObjectTypeExtensionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(InterfaceTypeExtensionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(UnionTypeExtensionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(EnumTypeExtensionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(InputObjectTypeExtensionNode node, TContext context);
    protected virtual ISyntaxVisitorAction Leave(SchemaCoordinateNode node, ISyntaxVisitorContext context);
}
public class HotChocolate.Language.Visitors.VisitSyntaxNode : MulticastDelegate {
    public VisitSyntaxNode(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual ISyntaxVisitorAction Invoke(ISyntaxNode node, ISyntaxVisitorContext context);
    public virtual IAsyncResult BeginInvoke(ISyntaxNode node, ISyntaxVisitorContext context, AsyncCallback callback, object object);
    public virtual ISyntaxVisitorAction EndInvoke(IAsyncResult result);
}
public class HotChocolate.Language.Visitors.VisitSyntaxNode`1 : MulticastDelegate {
    public VisitSyntaxNode`1(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual ISyntaxVisitorAction Invoke(ISyntaxNode node, TContext context);
    public virtual IAsyncResult BeginInvoke(ISyntaxNode node, TContext context, AsyncCallback callback, object object);
    public virtual ISyntaxVisitorAction EndInvoke(IAsyncResult result);
}
