[ExtensionAttribute]
internal static class HotChocolate.Types.ContextDataExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static List`1<MutationContextData> GetMutationFields(IDictionary`2<string, object> contextData);
}
internal class HotChocolate.Types.CreateError : MulticastDelegate {
    public CreateError(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual object Invoke(Exception exception);
    public virtual IAsyncResult BeginInvoke(Exception exception, AsyncCallback callback, object object);
    public virtual object EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class HotChocolate.Types.ErrorAttribute : ObjectFieldDescriptorAttribute {
    [CompilerGeneratedAttribute]
private Type <ErrorType>k__BackingField;
    public Type ErrorType { get; }
    public ErrorAttribute(Type errorType);
    [CompilerGeneratedAttribute]
public Type get_ErrorType();
    protected virtual void OnConfigure(IDescriptorContext context, IObjectFieldDescriptor descriptor, MemberInfo member);
}
public class HotChocolate.Types.ErrorAttribute`1 : ErrorAttribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class HotChocolate.Types.ErrorContextDataExtensions : object {
    [ExtensionAttribute]
public static ExtensionData MarkAsError(ExtensionData extensionData);
    [ExtensionAttribute]
public static bool IsError(ExtensionData extensionData);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class HotChocolate.Types.ErrorContextDataKeys : object {
    public static string ErrorDefinitions;
    public static string Errors;
    public static string IsErrorType;
    public static string ErrorType;
    private static ErrorContextDataKeys();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class HotChocolate.Types.ErrorDefinition : object {
    private static CreateError _empty;
    [CompilerGeneratedAttribute]
private Type <SchemaType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <RuntimeType>k__BackingField;
    [CompilerGeneratedAttribute]
private CreateError <Factory>k__BackingField;
    public Type SchemaType { get; }
    public Type RuntimeType { get; }
    public CreateError Factory { get; }
    public ErrorDefinition(Type runtimeType, Type schemaType, CreateError factory);
    private static ErrorDefinition();
    [CompilerGeneratedAttribute]
public Type get_SchemaType();
    [CompilerGeneratedAttribute]
public Type get_RuntimeType();
    [CompilerGeneratedAttribute]
public CreateError get_Factory();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class HotChocolate.Types.ErrorFactoryCompiler : object {
    public static IReadOnlyList`1<ErrorDefinition> Compile(Type errorType);
    private static bool TryCreateFactoryFromException(Type errorType, ErrorDefinition& definition);
    private static bool TryCreateDefaultErrorFactory(Type errorType, ErrorDefinition[]& definitions);
    private static bool TryCreateFactoryFromConstructor(Type errorType, ErrorDefinition& definition);
}
internal class HotChocolate.Types.ErrorInterfaceType : InterfaceType {
    [NullableContextAttribute("1")]
protected virtual void Configure(IInterfaceTypeDescriptor descriptor);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class HotChocolate.Types.ErrorMiddleware : object {
    private FieldDelegate _next;
    private IReadOnlyList`1<CreateError> _errorHandlers;
    public ErrorMiddleware(FieldDelegate next, IReadOnlyList`1<CreateError> errorHandlers);
    [AsyncStateMachineAttribute("HotChocolate.Types.ErrorMiddleware/<InvokeAsync>d__3")]
public ValueTask InvokeAsync(IMiddlewareContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class HotChocolate.Types.ErrorNullMiddleware : object {
    private FieldDelegate _next;
    public ErrorNullMiddleware(FieldDelegate next);
    [AsyncStateMachineAttribute("HotChocolate.Types.ErrorNullMiddleware/<InvokeAsync>d__2")]
public ValueTask InvokeAsync(IMiddlewareContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class HotChocolate.Types.ErrorObjectType`1 : ObjectType`1<T> {
    protected virtual void Configure(IObjectTypeDescriptor`1<T> descriptor);
    private void RewriteMessageFieldToNonNullableStringType(IDescriptorContext context, ObjectTypeDefinition definition);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class HotChocolate.Types.ErrorSchemaBuilderExtensions : object {
    [ExtensionAttribute]
public static ISchemaBuilder AddErrorInterfaceType(ISchemaBuilder schemaBuilder);
    [ExtensionAttribute]
public static ISchemaBuilder AddErrorInterfaceType(ISchemaBuilder schemaBuilder, Type type);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class HotChocolate.Types.ExceptionObjectType`1 : ObjectType`1<T> {
    protected virtual void Configure(IObjectTypeDescriptor`1<T> descriptor);
    private static string GetNameFromException();
}
[NullableContextAttribute("1")]
public interface HotChocolate.Types.IPayloadErrorFactory`2 {
    public abstract virtual TError CreateErrorFrom(TException exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class HotChocolate.Types.MarkerObjects : object {
    [CompilerGeneratedAttribute]
private static object <ErrorObject>k__BackingField;
    [CompilerGeneratedAttribute]
private static object <Null>k__BackingField;
    public static object ErrorObject { get; }
    public static object Null { get; }
    private static MarkerObjects();
    [CompilerGeneratedAttribute]
public static object get_ErrorObject();
    [CompilerGeneratedAttribute]
public static object get_Null();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class HotChocolate.Types.MutationContextData : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ObjectFieldDefinition <Definition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InputTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InputArgumentName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PayloadFieldName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PayloadTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PayloadPayloadErrorTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PayloadErrorsFieldName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [NullableAttribute("1")]
public string Name { get; }
    [NullableAttribute("1")]
public ObjectFieldDefinition Definition { get; }
    public string InputTypeName { get; }
    public string InputArgumentName { get; }
    public string PayloadFieldName { get; }
    public string PayloadTypeName { get; }
    public string PayloadPayloadErrorTypeName { get; }
    public string PayloadErrorsFieldName { get; }
    public bool Enabled { get; }
    public MutationContextData(ObjectFieldDefinition definition, string inputTypeName, string inputArgumentName, string payloadTypeName, string payloadFieldName, string payloadErrorTypeName, string payloadErrorsFieldName, bool enabled);
    [NullableContextAttribute("1")]
public string get_Name();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ObjectFieldDefinition get_Definition();
    [CompilerGeneratedAttribute]
public string get_InputTypeName();
    [CompilerGeneratedAttribute]
public string get_InputArgumentName();
    [CompilerGeneratedAttribute]
public string get_PayloadFieldName();
    [CompilerGeneratedAttribute]
public string get_PayloadTypeName();
    [CompilerGeneratedAttribute]
public string get_PayloadPayloadErrorTypeName();
    [CompilerGeneratedAttribute]
public string get_PayloadErrorsFieldName();
    [CompilerGeneratedAttribute]
public bool get_Enabled();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class HotChocolate.Types.MutationContextDataKeys : object {
    public static string Options;
    public static string Fields;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class HotChocolate.Types.MutationConventionMiddleware : object {
    private FieldDelegate _next;
    private string _inputArgumentName;
    private IReadOnlyList`1<ResolverArgument> _resolverArguments;
    public MutationConventionMiddleware(FieldDelegate next, string inputArgumentName, IReadOnlyList`1<ResolverArgument> resolverArguments);
    [AsyncStateMachineAttribute("HotChocolate.Types.MutationConventionMiddleware/<InvokeAsync>d__4")]
public ValueTask InvokeAsync(IMiddlewareContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class HotChocolate.Types.MutationConventionOptionDefaults : object {
    public static string MutationName;
    public static string InputTypeNamePattern;
    public static string InputArgumentName;
    public static string PayloadTypeNamePattern;
    public static string ErrorTypeNamePattern;
    public static string PayloadErrorsFieldName;
    public static bool ApplyToAllMutations;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class HotChocolate.Types.MutationConventionOptions : ValueType {
    [CompilerGeneratedAttribute]
private string <InputTypeNamePattern>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InputArgumentName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PayloadTypeNamePattern>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PayloadErrorTypeNamePattern>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PayloadErrorsFieldName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ApplyToAllMutations>k__BackingField;
    public string InputTypeNamePattern { get; public set; }
    public string InputArgumentName { get; public set; }
    public string PayloadTypeNamePattern { get; public set; }
    public string PayloadErrorTypeNamePattern { get; public set; }
    public string PayloadErrorsFieldName { get; public set; }
    public Nullable`1<bool> ApplyToAllMutations { get; public set; }
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_InputTypeNamePattern();
    [CompilerGeneratedAttribute]
public void set_InputTypeNamePattern(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_InputArgumentName();
    [CompilerGeneratedAttribute]
public void set_InputArgumentName(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_PayloadTypeNamePattern();
    [CompilerGeneratedAttribute]
public void set_PayloadTypeNamePattern(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_PayloadErrorTypeNamePattern();
    [CompilerGeneratedAttribute]
public void set_PayloadErrorTypeNamePattern(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_PayloadErrorsFieldName();
    [CompilerGeneratedAttribute]
public void set_PayloadErrorsFieldName(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Nullable`1<bool> get_ApplyToAllMutations();
    [CompilerGeneratedAttribute]
public void set_ApplyToAllMutations(Nullable`1<bool> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class HotChocolate.Types.MutationConventionTypeInterceptor : TypeInterceptor {
    private HashSet`1<Type> _handled;
    private List`1<ErrorDefinition> _tempErrors;
    private TypeInitializer _typeInitializer;
    private TypeRegistry _typeRegistry;
    private TypeLookup _typeLookup;
    private IDescriptorContext _context;
    private List`1<MutationContextData> _mutations;
    private ITypeCompletionContext _completionContext;
    [NullableAttribute("2")]
private ExtendedTypeReference _errorInterfaceTypeRef;
    [NullableAttribute("2")]
private ObjectTypeDefinition _mutationTypeDef;
    [NullableAttribute("2")]
private FieldMiddlewareDefinition _errorNullMiddleware;
    private TypeInterceptor[] _siblings;
    internal virtual void InitializeContext(IDescriptorContext context, TypeInitializer typeInitializer, TypeRegistry typeRegistry, TypeLookup typeLookup, TypeReferenceResolver typeReferenceResolver);
    internal virtual bool IsMutationAggregator(IDescriptorContext context);
    internal virtual void SetSiblings(TypeInterceptor[] all);
    public virtual void OnBeforeRegisterDependencies(ITypeDiscoveryContext discoveryContext, DefinitionBase definition);
    public virtual void OnAfterCompleteTypeNames();
    internal virtual void OnBeforeCompleteMutation(ITypeCompletionContext completionContext, ObjectTypeDefinition definition);
    private static void ApplyResultMiddleware(ObjectFieldDefinition mutation);
    private void TryApplyInputConvention(IResolverCompiler resolverCompiler, ObjectFieldDefinition mutation, Options options);
    private void TryApplyPayloadConvention(ObjectFieldDefinition mutation, string payloadFieldName, Options options);
    private static InputObjectType CreateInputType(string typeName, ObjectFieldDefinition fieldDef);
    private static ObjectType CreatePayloadType(string typeName, FieldDef data, Nullable`1<FieldDef> error);
    private UnionType CreateErrorType(string typeName, IReadOnlyList`1<ErrorDefinition> errorDefinitions);
    private static ExtendedTypeReference CreateErrorTypeRef(ITypeDiscoveryContext context);
    private static ExtendedTypeReference CreateErrorTypeRef(IDescriptorContext context);
    private static void TryAddErrorInterface(ObjectTypeDefinition objectTypeDef, TypeReference errorInterfaceTypeRef);
    private IReadOnlyList`1<ErrorDefinition> GetErrorDefinitions(ObjectFieldDefinition mutation);
    private static Type[] GetErrorResultTypes(ObjectFieldDefinition mutation);
    private static Options CreateOptions(IDictionary`2<string, object> contextData);
    private static Options CreateOptions(MutationContextData contextData, Options parent);
    private static Options CreateErrorOptions(Options parent);
    private RegisteredType TryRegisterType(Type type);
    private void RegisterType(TypeSystemObjectBase type);
    private void RegisterErrorType(TypeSystemObjectBase type, string mutationName);
    private TypeReference EnsureNullable(TypeReference typeRef);
    private TypeReference EnsureNonNull(TypeReference typeRef);
    private static ITypeNode CreateTypeNode(IType type);
    private static TypeReference NormalizeTypeRef(TypeReference typeRef);
    [CompilerGeneratedAttribute]
internal static void <GetErrorDefinitions>g__CreateErrorDefinitions|27_0(Type[] errorTypes, HashSet`1<Type> handled, List`1<ErrorDefinition> tempErrors);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class HotChocolate.Types.MutationDirective : object {
    public string Name { get; }
    public sealed virtual string get_Name();
    public sealed virtual void ApplyConfiguration(IDescriptorContext context, DirectiveNode directiveNode, IDefinition definition, Stack`1<IDefinition> path);
    private static MutationContextData CreateMutationContextData(DirectiveNode directiveNode, ObjectFieldDefinition fieldDef);
    [CompilerGeneratedAttribute]
internal static string <CreateMutationContextData>g__ExpectStringValue|3_0(string argumentName, IValueNode literal);
    [CompilerGeneratedAttribute]
internal static Nullable`1<bool> <CreateMutationContextData>g__ExpectBooleanValue|3_1(string argumentName, IValueNode literal);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class HotChocolate.Types.MutationErrorConfiguration : object {
    public virtual IEnumerable`1<TypeReference> OnResolveDependencies(IDescriptorContext context);
    public abstract virtual void OnConfigure(IDescriptorContext context, ObjectFieldDefinition mutationField);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class HotChocolate.Types.MutationErrorTypeInterceptor`1 : TypeInterceptor {
    [CompilerGeneratedAttribute]
private T <errorRegistrar>P;
    public MutationErrorTypeInterceptor`1(T errorRegistrar);
    internal virtual void OnBeforeCreateSchemaInternal(IDescriptorContext context, ISchemaBuilder schemaBuilder);
    public virtual IEnumerable`1<TypeReference> RegisterMoreTypes(IReadOnlyCollection`1<ITypeDiscoveryContext> discoveryContexts);
    public virtual void OnBeforeCompleteMutationField(ITypeCompletionContext completionContext, ObjectFieldDefinition mutationField);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class HotChocolate.Types.MutationFieldOptions : ValueType {
    [CompilerGeneratedAttribute]
private string <InputTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InputArgumentName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PayloadTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PayloadFieldName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PayloadErrorTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PayloadErrorsFieldName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Disable>k__BackingField;
    public string InputTypeName { get; public set; }
    public string InputArgumentName { get; public set; }
    public string PayloadTypeName { get; public set; }
    public string PayloadFieldName { get; public set; }
    public string PayloadErrorTypeName { get; public set; }
    public string PayloadErrorsFieldName { get; public set; }
    public bool Disable { get; public set; }
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_InputTypeName();
    [CompilerGeneratedAttribute]
public void set_InputTypeName(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_InputArgumentName();
    [CompilerGeneratedAttribute]
public void set_InputArgumentName(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_PayloadTypeName();
    [CompilerGeneratedAttribute]
public void set_PayloadTypeName(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_PayloadFieldName();
    [CompilerGeneratedAttribute]
public void set_PayloadFieldName(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_PayloadErrorTypeName();
    [CompilerGeneratedAttribute]
public void set_PayloadErrorTypeName(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_PayloadErrorsFieldName();
    [CompilerGeneratedAttribute]
public void set_PayloadErrorsFieldName(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public bool get_Disable();
    [CompilerGeneratedAttribute]
public void set_Disable(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class HotChocolate.Types.MutationObjectFieldDescriptorExtensions : object {
    [ExtensionAttribute]
public static IObjectFieldDescriptor UseMutationConvention(IObjectFieldDescriptor descriptor, MutationFieldOptions options);
    [ExtensionAttribute]
public static IObjectFieldDescriptor Error(IObjectFieldDescriptor descriptor);
    [ExtensionAttribute]
public static IObjectFieldDescriptor Error(IObjectFieldDescriptor descriptor, Type errorType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class HotChocolate.Types.MutationResultTypeDiscoveryHandler : TypeDiscoveryHandler {
    [CompilerGeneratedAttribute]
private ITypeInspector <typeInspector>P;
    public MutationResultTypeDiscoveryHandler(ITypeInspector typeInspector);
    public virtual bool TryInferType(TypeReference typeReference, TypeDiscoveryInfo typeInfo, TypeReference[]& schemaTypeRefs);
    private IExtendedType GetNamedType(IExtendedType extendedType);
}
[ExtensionAttribute]
public static class HotChocolate.Types.ObjectFieldDefinitionExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void AddErrorType(ObjectFieldDefinition fieldDefinition, IDescriptorContext descriptorContext, Type errorType);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class HotChocolate.Types.Properties.MutationResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string ThrowHelper_ErrorObjectType_TypeInspectorCouldNotBeLoaded { get; }
    internal static string ThrowHelper_ErrorObjectType_MessageWasNotDefinedOnError { get; }
    internal static string ThrowHelper_InputMiddleware_ArgumentTypeNameMissMatch { get; }
    internal static string InputParameterExpressionBuilder_Build_NoAttribute { get; }
    internal static string ThrowHelper_CannotResolvePayloadType { get; }
    internal static string ThrowHelper_NonMutationFields { get; }
    internal static string ThrowHelper_MutationPayloadMustBeObject { get; }
    internal static string ThrowHelper_MutationConvDirective_In_Wrong_Location { get; }
    internal static string ThrowHelper_DirectiveArgument_Unexpected_Value { get; }
    internal static string ThrowHelper_UnknownDirectiveArgument { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_ThrowHelper_ErrorObjectType_TypeInspectorCouldNotBeLoaded();
    internal static string get_ThrowHelper_ErrorObjectType_MessageWasNotDefinedOnError();
    internal static string get_ThrowHelper_InputMiddleware_ArgumentTypeNameMissMatch();
    internal static string get_InputParameterExpressionBuilder_Build_NoAttribute();
    internal static string get_ThrowHelper_CannotResolvePayloadType();
    internal static string get_ThrowHelper_NonMutationFields();
    internal static string get_ThrowHelper_MutationPayloadMustBeObject();
    internal static string get_ThrowHelper_MutationConvDirective_In_Wrong_Location();
    internal static string get_ThrowHelper_DirectiveArgument_Unexpected_Value();
    internal static string get_ThrowHelper_UnknownDirectiveArgument();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class HotChocolate.Types.ResolverArgument : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private FieldCoordinate <Coordinate>k__BackingField;
    [CompilerGeneratedAttribute]
private IInputType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <RuntimeType>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IValueNode <DefaultValue>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IInputValueFormatter <Formatter>k__BackingField;
    public string Name { get; }
    public FieldCoordinate Coordinate { get; }
    public IInputType Type { get; }
    public Type RuntimeType { get; }
    [NullableAttribute("2")]
public IValueNode DefaultValue { get; }
    [NullableAttribute("2")]
public IInputValueFormatter Formatter { get; }
    public ResolverArgument(string name, FieldCoordinate coordinate, IInputType type, Type runtimeType, IValueNode defaultValue, IInputValueFormatter formatter);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual FieldCoordinate get_Coordinate();
    [CompilerGeneratedAttribute]
public sealed virtual IInputType get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual Type get_RuntimeType();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual IValueNode get_DefaultValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual IInputValueFormatter get_Formatter();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class HotChocolate.Types.ThrowHelper : object {
    public static SchemaException MessageWasNotDefinedOnError(IType type, Type runtimeType);
    public static SchemaException CannotResolvePayloadType();
    public static SchemaException NonMutationFields(IEnumerable`1<MutationContextData> unprocessed);
    public static ISchemaError MutationPayloadMustBeObject(INamedType type);
    public static SchemaException MutationConvDirective_In_Wrong_Location(DirectiveNode directiveNode);
    public static SchemaException DirectiveArgument_Unexpected_Value(string argumentName, string typeName);
    public static SchemaException UnknownDirectiveArgument(string argumentName);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class HotChocolate.Types.UseMutationConventionAttribute : ObjectFieldDescriptorAttribute {
    [CompilerGeneratedAttribute]
private string <InputTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InputArgumentName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PayloadTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PayloadFieldName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PayloadErrorTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PayloadErrorsFieldName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Disable>k__BackingField;
    public string InputTypeName { get; public set; }
    public string InputArgumentName { get; public set; }
    public string PayloadTypeName { get; public set; }
    public string PayloadFieldName { get; public set; }
    public string PayloadErrorTypeName { get; public set; }
    public string PayloadErrorsFieldName { get; public set; }
    public bool Disable { get; public set; }
    [CompilerGeneratedAttribute]
public string get_InputTypeName();
    [CompilerGeneratedAttribute]
public void set_InputTypeName(string value);
    [CompilerGeneratedAttribute]
public string get_InputArgumentName();
    [CompilerGeneratedAttribute]
public void set_InputArgumentName(string value);
    [CompilerGeneratedAttribute]
public string get_PayloadTypeName();
    [CompilerGeneratedAttribute]
public void set_PayloadTypeName(string value);
    [CompilerGeneratedAttribute]
public string get_PayloadFieldName();
    [CompilerGeneratedAttribute]
public void set_PayloadFieldName(string value);
    [CompilerGeneratedAttribute]
public string get_PayloadErrorTypeName();
    [CompilerGeneratedAttribute]
public void set_PayloadErrorTypeName(string value);
    [CompilerGeneratedAttribute]
public string get_PayloadErrorsFieldName();
    [CompilerGeneratedAttribute]
public void set_PayloadErrorsFieldName(string value);
    [CompilerGeneratedAttribute]
public bool get_Disable();
    [CompilerGeneratedAttribute]
public void set_Disable(bool value);
    [NullableContextAttribute("1")]
protected virtual void OnConfigure(IDescriptorContext context, IObjectFieldDescriptor descriptor, MemberInfo member);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private void <OnConfigure>b__28_0(ITypeCompletionContext c, ObjectFieldDefinition d);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.MutationRequestExecutorBuilderExtensions : object {
    [ExtensionAttribute]
public static IRequestExecutorBuilder AddMutationConventions(IRequestExecutorBuilder builder, bool applyToAllMutations);
    [ExtensionAttribute]
public static IRequestExecutorBuilder AddMutationConventions(IRequestExecutorBuilder builder, MutationConventionOptions options);
    [ExtensionAttribute]
public static IRequestExecutorBuilder AddErrorInterfaceType(IRequestExecutorBuilder builder);
    [ExtensionAttribute]
public static IRequestExecutorBuilder AddErrorInterfaceType(IRequestExecutorBuilder builder, Type type);
    [ExtensionAttribute]
public static IRequestExecutorBuilder AddMutationErrorConfiguration(IRequestExecutorBuilder builder);
    [ExtensionAttribute]
public static IRequestExecutorBuilder AddMutationErrorConfiguration(IRequestExecutorBuilder builder, T configuration);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
