[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class HotChocolate.Types.FileValueNode : object {
    [CompilerGeneratedAttribute]
private IFile <Value>k__BackingField;
    public SyntaxKind Kind { get; }
    [NullableAttribute("2")]
public Location Location { get; }
    public IFile Value { get; }
    private object HotChocolate.Language.IValueNode.Value { get; }
    private string HotChocolate.Language.IValueNode<System.String>.Value { get; }
    public FileValueNode(IFile file);
    public sealed virtual SyntaxKind get_Kind();
    [NullableContextAttribute("2")]
public sealed virtual Location get_Location();
    [CompilerGeneratedAttribute]
public sealed virtual IFile get_Value();
    private sealed virtual override object HotChocolate.Language.IValueNode.get_Value();
    private sealed virtual override string HotChocolate.Language.IValueNode<System.String>.get_Value();
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(FileValueNode other);
    [NullableContextAttribute("2")]
public bool Equals(IValueNode other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public sealed virtual IEnumerable`1<ISyntaxNode> GetNodes();
    public virtual int GetHashCode();
    public virtual string ToString();
    public sealed virtual string ToString(bool indented);
}
[NullableContextAttribute("1")]
public interface HotChocolate.Types.IFile {
    public string Name { get; }
    public Nullable`1<long> Length { get; }
    [NullableAttribute("2")]
public string ContentType { get; }
    public abstract virtual string get_Name();
    public abstract virtual Nullable`1<long> get_Length();
    [NullableContextAttribute("2")]
public abstract virtual string get_ContentType();
    public abstract virtual Task CopyToAsync(Stream target, CancellationToken cancellationToken);
    public abstract virtual Stream OpenReadStream();
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class HotChocolate.Types.Properties.UploadResources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string UploadType_TrySerialize_NotSupported { get; }
    internal static string StreamFile_Constructor_NameCannotBeNullOrEmpty { get; }
    internal static string UploadType_Description { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_UploadType_TrySerialize_NotSupported();
    internal static string get_StreamFile_Constructor_NameCannotBeNullOrEmpty();
    internal static string get_UploadType_Description();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class HotChocolate.Types.StreamFile : object {
    private Func`1<Stream> _openReadStream;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Length>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    public string Name { get; }
    public Nullable`1<long> Length { get; }
    [NullableAttribute("2")]
public string ContentType { get; }
    public StreamFile(string name, Func`1<Stream> openReadStream, Nullable`1<long> length, string contentType);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_Length();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_ContentType();
    [AsyncStateMachineAttribute("HotChocolate.Types.StreamFile/<CopyToAsync>d__11")]
public virtual Task CopyToAsync(Stream target, CancellationToken cancellationToken);
    public virtual Stream OpenReadStream();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class HotChocolate.Types.UploadType : ScalarType`2<IFile, FileValueNode> {
    public UploadType(string name, string description, BindingBehavior bind);
    public virtual IValueNode ParseResult(object resultValue);
    protected virtual IFile ParseLiteral(FileValueNode valueSyntax);
    protected virtual FileValueNode ParseValue(IFile runtimeValue);
    [NullableContextAttribute("2")]
public virtual bool TrySerialize(object runtimeValue, Object& resultValue);
    [NullableContextAttribute("2")]
public virtual bool TryDeserialize(object resultValue, Object& runtimeValue);
}
