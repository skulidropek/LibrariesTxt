[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Ganss.Xss.FilterUrlEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private string <OriginalUrl>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <SanitizedUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private IElement <Tag>k__BackingField;
    public string OriginalUrl { get; private set; }
    [NullableAttribute("2")]
public string SanitizedUrl { get; public set; }
    public IElement Tag { get; private set; }
    public FilterUrlEventArgs(IElement tag, string originalUrl, string sanitizedUrl);
    [CompilerGeneratedAttribute]
public string get_OriginalUrl();
    [CompilerGeneratedAttribute]
private void set_OriginalUrl(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_SanitizedUrl();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_SanitizedUrl(string value);
    [CompilerGeneratedAttribute]
public IElement get_Tag();
    [CompilerGeneratedAttribute]
private void set_Tag(IElement value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Ganss.Xss.HtmlFormatter : HtmlMarkupFormatter {
    public static HtmlFormatter Instance;
    private static HtmlFormatter();
    protected virtual string Attribute(IAttr attr);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Ganss.Xss.HtmlSanitizer : object {
    private static string StyleAttributeName;
    private static Regex CssUnicodeEscapes;
    private static Regex CssComments;
    private static Regex CssExpression;
    private static Regex CssUrl;
    private static Regex WhitespaceRegex;
    private static IConfiguration defaultConfiguration;
    private static HtmlParser defaultHtmlParser;
    [CompilerGeneratedAttribute]
private Action`1<IComment> <EncodeComment>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<IElement> <EncodeLiteralTextElementContent>k__BackingField;
    [CompilerGeneratedAttribute]
private static bool <DefaultKeepChildNodes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <KeepChildNodes>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`1<HtmlParser> <DefaultHtmlParserFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<HtmlParser> <HtmlParserFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private static IMarkupFormatter <DefaultOutputFormatter>k__BackingField;
    [CompilerGeneratedAttribute]
private IMarkupFormatter <OutputFormatter>k__BackingField;
    [CompilerGeneratedAttribute]
private static IStyleFormatter <DefaultStyleFormatter>k__BackingField;
    [CompilerGeneratedAttribute]
private IStyleFormatter <StyleFormatter>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<CssRuleType> <AllowedAtRules>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<string> <AllowedSchemes>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<string> <AllowedTags>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<string> <AllowedAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowDataAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<string> <UriAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<string> <AllowedCssProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowCssCustomProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private Regex <DisallowCssPropertyValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<string> <AllowedClasses>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EventHandler`1<PostProcessDomEventArgs> PostProcessDom;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EventHandler`1<PostProcessNodeEventArgs> PostProcessNode;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EventHandler`1<RemovingTagEventArgs> RemovingTag;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EventHandler`1<RemovingAttributeEventArgs> RemovingAttribute;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EventHandler`1<RemovingStyleEventArgs> RemovingStyle;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EventHandler`1<RemovingAtRuleEventArgs> RemovingAtRule;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EventHandler`1<RemovingCommentEventArgs> RemovingComment;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EventHandler`1<RemovingCssClassEventArgs> RemovingCssClass;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EventHandler`1<FilterUrlEventArgs> FilterUrl;
    public static Regex DefaultDisallowedCssPropertyValue;
    private static Regex SchemeRegex;
    public Action`1<IComment> EncodeComment { get; public set; }
    public Action`1<IElement> EncodeLiteralTextElementContent { get; public set; }
    public static bool DefaultKeepChildNodes { get; public set; }
    public bool KeepChildNodes { get; public set; }
    public static Func`1<HtmlParser> DefaultHtmlParserFactory { get; public set; }
    public Func`1<HtmlParser> HtmlParserFactory { get; public set; }
    public static IMarkupFormatter DefaultOutputFormatter { get; public set; }
    public IMarkupFormatter OutputFormatter { get; public set; }
    public static IStyleFormatter DefaultStyleFormatter { get; public set; }
    public IStyleFormatter StyleFormatter { get; public set; }
    public ISet`1<CssRuleType> AllowedAtRules { get; private set; }
    public ISet`1<string> AllowedSchemes { get; private set; }
    public ISet`1<string> AllowedTags { get; private set; }
    public ISet`1<string> AllowedAttributes { get; private set; }
    public bool AllowDataAttributes { get; public set; }
    public ISet`1<string> UriAttributes { get; private set; }
    public ISet`1<string> AllowedCssProperties { get; private set; }
    public bool AllowCssCustomProperties { get; public set; }
    public Regex DisallowCssPropertyValue { get; public set; }
    public ISet`1<string> AllowedClasses { get; private set; }
    public HtmlSanitizer(HtmlSanitizerOptions options);
    private static HtmlSanitizer();
    [CompilerGeneratedAttribute]
public Action`1<IComment> get_EncodeComment();
    [CompilerGeneratedAttribute]
public void set_EncodeComment(Action`1<IComment> value);
    [CompilerGeneratedAttribute]
public Action`1<IElement> get_EncodeLiteralTextElementContent();
    [CompilerGeneratedAttribute]
public void set_EncodeLiteralTextElementContent(Action`1<IElement> value);
    [CompilerGeneratedAttribute]
public static bool get_DefaultKeepChildNodes();
    [CompilerGeneratedAttribute]
public static void set_DefaultKeepChildNodes(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_KeepChildNodes();
    [CompilerGeneratedAttribute]
public sealed virtual void set_KeepChildNodes(bool value);
    [CompilerGeneratedAttribute]
public static Func`1<HtmlParser> get_DefaultHtmlParserFactory();
    [CompilerGeneratedAttribute]
public static void set_DefaultHtmlParserFactory(Func`1<HtmlParser> value);
    [CompilerGeneratedAttribute]
public sealed virtual Func`1<HtmlParser> get_HtmlParserFactory();
    [CompilerGeneratedAttribute]
public sealed virtual void set_HtmlParserFactory(Func`1<HtmlParser> value);
    [CompilerGeneratedAttribute]
public static IMarkupFormatter get_DefaultOutputFormatter();
    [CompilerGeneratedAttribute]
public static void set_DefaultOutputFormatter(IMarkupFormatter value);
    [CompilerGeneratedAttribute]
public sealed virtual IMarkupFormatter get_OutputFormatter();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OutputFormatter(IMarkupFormatter value);
    [CompilerGeneratedAttribute]
public static IStyleFormatter get_DefaultStyleFormatter();
    [CompilerGeneratedAttribute]
public static void set_DefaultStyleFormatter(IStyleFormatter value);
    [CompilerGeneratedAttribute]
public IStyleFormatter get_StyleFormatter();
    [CompilerGeneratedAttribute]
public void set_StyleFormatter(IStyleFormatter value);
    [CompilerGeneratedAttribute]
public sealed virtual ISet`1<CssRuleType> get_AllowedAtRules();
    [CompilerGeneratedAttribute]
private void set_AllowedAtRules(ISet`1<CssRuleType> value);
    [CompilerGeneratedAttribute]
public sealed virtual ISet`1<string> get_AllowedSchemes();
    [CompilerGeneratedAttribute]
private void set_AllowedSchemes(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual ISet`1<string> get_AllowedTags();
    [CompilerGeneratedAttribute]
private void set_AllowedTags(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual ISet`1<string> get_AllowedAttributes();
    [CompilerGeneratedAttribute]
private void set_AllowedAttributes(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_AllowDataAttributes();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AllowDataAttributes(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual ISet`1<string> get_UriAttributes();
    [CompilerGeneratedAttribute]
private void set_UriAttributes(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual ISet`1<string> get_AllowedCssProperties();
    [CompilerGeneratedAttribute]
private void set_AllowedCssProperties(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_AllowCssCustomProperties();
    [CompilerGeneratedAttribute]
public void set_AllowCssCustomProperties(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual Regex get_DisallowCssPropertyValue();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DisallowCssPropertyValue(Regex value);
    [CompilerGeneratedAttribute]
public sealed virtual ISet`1<string> get_AllowedClasses();
    [CompilerGeneratedAttribute]
private void set_AllowedClasses(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PostProcessDom(EventHandler`1<PostProcessDomEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PostProcessDom(EventHandler`1<PostProcessDomEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PostProcessNode(EventHandler`1<PostProcessNodeEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PostProcessNode(EventHandler`1<PostProcessNodeEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_RemovingTag(EventHandler`1<RemovingTagEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_RemovingTag(EventHandler`1<RemovingTagEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_RemovingAttribute(EventHandler`1<RemovingAttributeEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_RemovingAttribute(EventHandler`1<RemovingAttributeEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_RemovingStyle(EventHandler`1<RemovingStyleEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_RemovingStyle(EventHandler`1<RemovingStyleEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_RemovingAtRule(EventHandler`1<RemovingAtRuleEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_RemovingAtRule(EventHandler`1<RemovingAtRuleEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_RemovingComment(EventHandler`1<RemovingCommentEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_RemovingComment(EventHandler`1<RemovingCommentEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_RemovingCssClass(EventHandler`1<RemovingCssClassEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_RemovingCssClass(EventHandler`1<RemovingCssClassEventArgs> value);
    [CompilerGeneratedAttribute]
public void add_FilterUrl(EventHandler`1<FilterUrlEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_FilterUrl(EventHandler`1<FilterUrlEventArgs> value);
    protected virtual void OnPostProcessDom(PostProcessDomEventArgs e);
    protected virtual void OnPostProcessNode(PostProcessNodeEventArgs e);
    protected virtual void OnRemovingTag(RemovingTagEventArgs e);
    protected virtual void OnRemovingAttribute(RemovingAttributeEventArgs e);
    protected virtual void OnRemovingStyle(RemovingStyleEventArgs e);
    protected virtual void OnRemovingAtRule(RemovingAtRuleEventArgs e);
    protected virtual void OnRemovingComment(RemovingCommentEventArgs e);
    protected virtual void OnRemovingCssClass(RemovingCssClassEventArgs e);
    protected virtual void OnFilteringUrl(FilterUrlEventArgs e);
    [IteratorStateMachineAttribute("Ganss.Xss.HtmlSanitizer/<GetAllNodes>d__127")]
private static IEnumerable`1<INode> GetAllNodes(INode dom);
    public sealed virtual string Sanitize(string html, string baseUrl, IMarkupFormatter outputFormatter);
    public sealed virtual IHtmlDocument SanitizeDom(string html, string baseUrl);
    public sealed virtual IHtmlDocument SanitizeDom(IHtmlDocument document, IHtmlElement context, string baseUrl);
    public sealed virtual string SanitizeDocument(string html, string baseUrl, IMarkupFormatter outputFormatter);
    public string SanitizeDocument(Stream html, string baseUrl, IMarkupFormatter outputFormatter);
    private void RemoveComments(INode context);
    private static void DefaultEncodeComment(IComment comment);
    private static void DefaultEncodeLiteralTextElementContent(IElement tag);
    private void DoSanitize(IHtmlDocument dom, IParentNode context, string baseUrl);
    private void SanitizeStyleSheets(IHtmlDocument dom, string baseUrl);
    private bool SanitizeStyleRule(ICssRule rule, IElement styleTag, string baseUrl);
    private void DoPostProcess(IHtmlDocument dom, INode context);
    private bool IsUriAttribute(IAttr attribute);
    private bool IsAllowedTag(IElement tag);
    private bool IsAllowedAttribute(IAttr attribute);
    protected void SanitizeStyle(IElement element, string baseUrl);
    protected virtual bool IsAllowedCssProperty(string propertyName);
    private void SanitizeStyleDeclaration(IElement element, ICssStyleDeclaration styles, string baseUrl);
    protected static string DecodeCss(string css);
    protected Iri GetSafeIri(string url);
    protected virtual string SanitizeUrl(IElement element, string url, string baseUrl);
    private void RemoveTag(IElement tag, RemoveReason reason);
    private void RemoveAttribute(IElement tag, IAttr attribute, RemoveReason reason);
    private void RemoveStyle(IElement tag, ICssStyleDeclaration styles, ICssProperty style, RemoveReason reason);
    private bool RemoveAtRule(IElement tag, ICssRule rule);
    private void RemoveCssClass(IElement tag, string cssClass, RemoveReason reason);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <DoSanitize>b__136_0(IElement t);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <DoSanitize>b__136_2(IAttr a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Ganss.Xss.HtmlSanitizerDefaults : object {
    [CompilerGeneratedAttribute]
private static ISet`1<CssRuleType> <AllowedAtRules>k__BackingField;
    [CompilerGeneratedAttribute]
private static ISet`1<string> <AllowedSchemes>k__BackingField;
    [CompilerGeneratedAttribute]
private static ISet`1<string> <AllowedTags>k__BackingField;
    [CompilerGeneratedAttribute]
private static ISet`1<string> <AllowedAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private static ISet`1<string> <UriAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private static ISet`1<string> <AllowedCssProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private static ISet`1<string> <AllowedClasses>k__BackingField;
    public static ISet`1<CssRuleType> AllowedAtRules { get; }
    public static ISet`1<string> AllowedSchemes { get; }
    public static ISet`1<string> AllowedTags { get; }
    public static ISet`1<string> AllowedAttributes { get; }
    public static ISet`1<string> UriAttributes { get; }
    public static ISet`1<string> AllowedCssProperties { get; }
    public static ISet`1<string> AllowedClasses { get; }
    private static HtmlSanitizerDefaults();
    [CompilerGeneratedAttribute]
public static ISet`1<CssRuleType> get_AllowedAtRules();
    [CompilerGeneratedAttribute]
public static ISet`1<string> get_AllowedSchemes();
    [CompilerGeneratedAttribute]
public static ISet`1<string> get_AllowedTags();
    [CompilerGeneratedAttribute]
public static ISet`1<string> get_AllowedAttributes();
    [CompilerGeneratedAttribute]
public static ISet`1<string> get_UriAttributes();
    [CompilerGeneratedAttribute]
public static ISet`1<string> get_AllowedCssProperties();
    [CompilerGeneratedAttribute]
public static ISet`1<string> get_AllowedClasses();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Ganss.Xss.HtmlSanitizerOptions : object {
    [CompilerGeneratedAttribute]
private ISet`1<string> <AllowedTags>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<string> <AllowedAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<string> <AllowedCssClasses>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<string> <AllowedCssProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<CssRuleType> <AllowedAtRules>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<string> <AllowedSchemes>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<string> <UriAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowCssCustomProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowDataAttributes>k__BackingField;
    public ISet`1<string> AllowedTags { get; public set; }
    public ISet`1<string> AllowedAttributes { get; public set; }
    public ISet`1<string> AllowedCssClasses { get; public set; }
    public ISet`1<string> AllowedCssProperties { get; public set; }
    public ISet`1<CssRuleType> AllowedAtRules { get; public set; }
    public ISet`1<string> AllowedSchemes { get; public set; }
    public ISet`1<string> UriAttributes { get; public set; }
    public bool AllowCssCustomProperties { get; public set; }
    public bool AllowDataAttributes { get; public set; }
    [CompilerGeneratedAttribute]
public ISet`1<string> get_AllowedTags();
    [CompilerGeneratedAttribute]
public void set_AllowedTags(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public ISet`1<string> get_AllowedAttributes();
    [CompilerGeneratedAttribute]
public void set_AllowedAttributes(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public ISet`1<string> get_AllowedCssClasses();
    [CompilerGeneratedAttribute]
public void set_AllowedCssClasses(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public ISet`1<string> get_AllowedCssProperties();
    [CompilerGeneratedAttribute]
public void set_AllowedCssProperties(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public ISet`1<CssRuleType> get_AllowedAtRules();
    [CompilerGeneratedAttribute]
public void set_AllowedAtRules(ISet`1<CssRuleType> value);
    [CompilerGeneratedAttribute]
public ISet`1<string> get_AllowedSchemes();
    [CompilerGeneratedAttribute]
public void set_AllowedSchemes(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public ISet`1<string> get_UriAttributes();
    [CompilerGeneratedAttribute]
public void set_UriAttributes(ISet`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_AllowCssCustomProperties();
    [CompilerGeneratedAttribute]
public void set_AllowCssCustomProperties(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowDataAttributes();
    [CompilerGeneratedAttribute]
public void set_AllowDataAttributes(bool value);
}
[NullableContextAttribute("1")]
public interface Ganss.Xss.IHtmlSanitizer {
    public bool KeepChildNodes { get; public set; }
    public Func`1<HtmlParser> HtmlParserFactory { get; public set; }
    public IMarkupFormatter OutputFormatter { get; public set; }
    public ISet`1<CssRuleType> AllowedAtRules { get; }
    public ISet`1<string> AllowedSchemes { get; }
    public ISet`1<string> AllowedTags { get; }
    public ISet`1<string> AllowedAttributes { get; }
    public bool AllowDataAttributes { get; public set; }
    public ISet`1<string> UriAttributes { get; }
    public ISet`1<string> AllowedCssProperties { get; }
    public Regex DisallowCssPropertyValue { get; public set; }
    public ISet`1<string> AllowedClasses { get; }
    public abstract virtual bool get_KeepChildNodes();
    public abstract virtual void set_KeepChildNodes(bool value);
    public abstract virtual Func`1<HtmlParser> get_HtmlParserFactory();
    public abstract virtual void set_HtmlParserFactory(Func`1<HtmlParser> value);
    public abstract virtual IMarkupFormatter get_OutputFormatter();
    public abstract virtual void set_OutputFormatter(IMarkupFormatter value);
    public abstract virtual ISet`1<CssRuleType> get_AllowedAtRules();
    public abstract virtual ISet`1<string> get_AllowedSchemes();
    public abstract virtual ISet`1<string> get_AllowedTags();
    public abstract virtual ISet`1<string> get_AllowedAttributes();
    public abstract virtual bool get_AllowDataAttributes();
    public abstract virtual void set_AllowDataAttributes(bool value);
    public abstract virtual ISet`1<string> get_UriAttributes();
    public abstract virtual ISet`1<string> get_AllowedCssProperties();
    public abstract virtual Regex get_DisallowCssPropertyValue();
    public abstract virtual void set_DisallowCssPropertyValue(Regex value);
    public abstract virtual ISet`1<string> get_AllowedClasses();
    [CompilerGeneratedAttribute]
public abstract virtual void add_PostProcessDom(EventHandler`1<PostProcessDomEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_PostProcessDom(EventHandler`1<PostProcessDomEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_PostProcessNode(EventHandler`1<PostProcessNodeEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_PostProcessNode(EventHandler`1<PostProcessNodeEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_RemovingTag(EventHandler`1<RemovingTagEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_RemovingTag(EventHandler`1<RemovingTagEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_RemovingAttribute(EventHandler`1<RemovingAttributeEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_RemovingAttribute(EventHandler`1<RemovingAttributeEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_RemovingStyle(EventHandler`1<RemovingStyleEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_RemovingStyle(EventHandler`1<RemovingStyleEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_RemovingAtRule(EventHandler`1<RemovingAtRuleEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_RemovingAtRule(EventHandler`1<RemovingAtRuleEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_RemovingComment(EventHandler`1<RemovingCommentEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_RemovingComment(EventHandler`1<RemovingCommentEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_RemovingCssClass(EventHandler`1<RemovingCssClassEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_RemovingCssClass(EventHandler`1<RemovingCssClassEventArgs> value);
    public abstract virtual string Sanitize(string html, string baseUrl, IMarkupFormatter outputFormatter);
    public abstract virtual IHtmlDocument SanitizeDom(string html, string baseUrl);
    public abstract virtual IHtmlDocument SanitizeDom(IHtmlDocument document, IHtmlElement context, string baseUrl);
    public abstract virtual string SanitizeDocument(string html, string baseUrl, IMarkupFormatter outputFormatter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Ganss.Xss.Iri : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Scheme>k__BackingField;
    public string Value { get; private set; }
    public bool IsAbsolute { get; }
    [NullableAttribute("2")]
public string Scheme { get; private set; }
    public Iri(string value, string scheme);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(string value);
    public bool get_IsAbsolute();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Scheme();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_Scheme(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Ganss.Xss.PostProcessDomEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private IHtmlDocument <Document>k__BackingField;
    public IHtmlDocument Document { get; private set; }
    public PostProcessDomEventArgs(IHtmlDocument document);
    [CompilerGeneratedAttribute]
public IHtmlDocument get_Document();
    [CompilerGeneratedAttribute]
private void set_Document(IHtmlDocument value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Ganss.Xss.PostProcessNodeEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private IHtmlDocument <Document>k__BackingField;
    [CompilerGeneratedAttribute]
private INode <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<INode> <ReplacementNodes>k__BackingField;
    public IHtmlDocument Document { get; private set; }
    public INode Node { get; private set; }
    public ICollection`1<INode> ReplacementNodes { get; private set; }
    public PostProcessNodeEventArgs(IHtmlDocument document, INode node);
    [CompilerGeneratedAttribute]
public IHtmlDocument get_Document();
    [CompilerGeneratedAttribute]
private void set_Document(IHtmlDocument value);
    [CompilerGeneratedAttribute]
public INode get_Node();
    [CompilerGeneratedAttribute]
private void set_Node(INode value);
    [CompilerGeneratedAttribute]
public ICollection`1<INode> get_ReplacementNodes();
    [CompilerGeneratedAttribute]
private void set_ReplacementNodes(ICollection`1<INode> value);
}
public enum Ganss.Xss.RemoveReason : Enum {
    public int value__;
    public static RemoveReason NotAllowedTag;
    public static RemoveReason NotAllowedAttribute;
    public static RemoveReason NotAllowedStyle;
    public static RemoveReason NotAllowedUrlValue;
    public static RemoveReason NotAllowedValue;
    public static RemoveReason NotAllowedCssClass;
    public static RemoveReason ClassAttributeEmpty;
    public static RemoveReason StyleAttributeEmpty;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Ganss.Xss.RemovingAtRuleEventArgs : CancelEventArgs {
    [CompilerGeneratedAttribute]
private IElement <Tag>k__BackingField;
    [CompilerGeneratedAttribute]
private ICssRule <Rule>k__BackingField;
    public IElement Tag { get; private set; }
    public ICssRule Rule { get; private set; }
    public RemovingAtRuleEventArgs(IElement tag, ICssRule rule);
    [CompilerGeneratedAttribute]
public IElement get_Tag();
    [CompilerGeneratedAttribute]
private void set_Tag(IElement value);
    [CompilerGeneratedAttribute]
public ICssRule get_Rule();
    [CompilerGeneratedAttribute]
private void set_Rule(ICssRule value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Ganss.Xss.RemovingAttributeEventArgs : CancelEventArgs {
    [CompilerGeneratedAttribute]
private IElement <Tag>k__BackingField;
    [CompilerGeneratedAttribute]
private IAttr <Attribute>k__BackingField;
    [CompilerGeneratedAttribute]
private RemoveReason <Reason>k__BackingField;
    public IElement Tag { get; private set; }
    public IAttr Attribute { get; private set; }
    public RemoveReason Reason { get; private set; }
    public RemovingAttributeEventArgs(IElement tag, IAttr attribute, RemoveReason reason);
    [CompilerGeneratedAttribute]
public IElement get_Tag();
    [CompilerGeneratedAttribute]
private void set_Tag(IElement value);
    [CompilerGeneratedAttribute]
public IAttr get_Attribute();
    [CompilerGeneratedAttribute]
private void set_Attribute(IAttr value);
    [CompilerGeneratedAttribute]
public RemoveReason get_Reason();
    [CompilerGeneratedAttribute]
private void set_Reason(RemoveReason value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Ganss.Xss.RemovingCommentEventArgs : CancelEventArgs {
    [CompilerGeneratedAttribute]
private IComment <Comment>k__BackingField;
    public IComment Comment { get; private set; }
    public RemovingCommentEventArgs(IComment comment);
    [CompilerGeneratedAttribute]
public IComment get_Comment();
    [CompilerGeneratedAttribute]
private void set_Comment(IComment value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Ganss.Xss.RemovingCssClassEventArgs : CancelEventArgs {
    [CompilerGeneratedAttribute]
private IElement <Tag>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CssClass>k__BackingField;
    [CompilerGeneratedAttribute]
private RemoveReason <Reason>k__BackingField;
    public IElement Tag { get; private set; }
    public string CssClass { get; private set; }
    public RemoveReason Reason { get; private set; }
    public RemovingCssClassEventArgs(IElement tag, string cssClass, RemoveReason reason);
    [CompilerGeneratedAttribute]
public IElement get_Tag();
    [CompilerGeneratedAttribute]
private void set_Tag(IElement value);
    [CompilerGeneratedAttribute]
public string get_CssClass();
    [CompilerGeneratedAttribute]
private void set_CssClass(string value);
    [CompilerGeneratedAttribute]
public RemoveReason get_Reason();
    [CompilerGeneratedAttribute]
private void set_Reason(RemoveReason value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Ganss.Xss.RemovingStyleEventArgs : CancelEventArgs {
    [CompilerGeneratedAttribute]
private IElement <Tag>k__BackingField;
    [CompilerGeneratedAttribute]
private ICssProperty <Style>k__BackingField;
    [CompilerGeneratedAttribute]
private RemoveReason <Reason>k__BackingField;
    public IElement Tag { get; private set; }
    public ICssProperty Style { get; private set; }
    public RemoveReason Reason { get; private set; }
    public RemovingStyleEventArgs(IElement tag, ICssProperty style, RemoveReason reason);
    [CompilerGeneratedAttribute]
public IElement get_Tag();
    [CompilerGeneratedAttribute]
private void set_Tag(IElement value);
    [CompilerGeneratedAttribute]
public ICssProperty get_Style();
    [CompilerGeneratedAttribute]
private void set_Style(ICssProperty value);
    [CompilerGeneratedAttribute]
public RemoveReason get_Reason();
    [CompilerGeneratedAttribute]
private void set_Reason(RemoveReason value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Ganss.Xss.RemovingTagEventArgs : CancelEventArgs {
    [CompilerGeneratedAttribute]
private IElement <Tag>k__BackingField;
    [CompilerGeneratedAttribute]
private RemoveReason <Reason>k__BackingField;
    public IElement Tag { get; private set; }
    public RemoveReason Reason { get; private set; }
    public RemovingTagEventArgs(IElement tag, RemoveReason reason);
    [CompilerGeneratedAttribute]
public IElement get_Tag();
    [CompilerGeneratedAttribute]
private void set_Tag(IElement value);
    [CompilerGeneratedAttribute]
public RemoveReason get_Reason();
    [CompilerGeneratedAttribute]
private void set_Reason(RemoveReason value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
