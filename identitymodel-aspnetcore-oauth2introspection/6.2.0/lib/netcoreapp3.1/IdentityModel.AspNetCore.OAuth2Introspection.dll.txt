public class IdentityModel.AspNetCore.OAuth2Introspection.AuthenticationFailedContext : ResultContext`1<OAuth2IntrospectionOptions> {
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    public string Error { get; public set; }
    public AuthenticationFailedContext(HttpContext context, AuthenticationScheme scheme, OAuth2IntrospectionOptions options);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
}
[ExtensionAttribute]
internal static class IdentityModel.AspNetCore.OAuth2Introspection.CacheExtensions : object {
    private static JsonSerializerOptions Options;
    private static CacheExtensions();
    [AsyncStateMachineAttribute("IdentityModel.AspNetCore.OAuth2Introspection.CacheExtensions/<GetClaimsAsync>d__2")]
[ExtensionAttribute]
public static Task`1<IEnumerable`1<Claim>> GetClaimsAsync(IDistributedCache cache, OAuth2IntrospectionOptions options, string token);
    [AsyncStateMachineAttribute("IdentityModel.AspNetCore.OAuth2Introspection.CacheExtensions/<SetClaimsAsync>d__3")]
[ExtensionAttribute]
public static Task SetClaimsAsync(IDistributedCache cache, OAuth2IntrospectionOptions options, string token, IEnumerable`1<Claim> claims, TimeSpan duration, ILogger logger);
}
public class IdentityModel.AspNetCore.OAuth2Introspection.ClaimConverter : JsonConverter`1<Claim> {
    public virtual Claim Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, Claim value, JsonSerializerOptions options);
}
public class IdentityModel.AspNetCore.OAuth2Introspection.ClaimLite : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Type { get; public set; }
    public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
internal class IdentityModel.AspNetCore.OAuth2Introspection.Infrastructure.AsyncLazy`1 : object {
    private Lazy`1<Task`1<T>> _lazyTaskFactory;
    private Func`1<Task`1<T>> _taskFactory;
    private object _lazyInitializationGuard;
    public Task`1<T> Value { get; }
    public AsyncLazy`1(Func`1<Task`1<T>> taskFactory);
    public Task`1<T> get_Value();
    private static Lazy`1<Task`1<T>> InitLazy(Func`1<Task`1<T>> taskFactory);
}
public static class IdentityModel.AspNetCore.OAuth2Introspection.Infrastructure.CacheUtils : object {
    public static Func`3<OAuth2IntrospectionOptions, string, string> CacheKeyFromToken();
}
public class IdentityModel.AspNetCore.OAuth2Introspection.OAuth2IntrospectionDefaults : object {
    public static string AuthenticationScheme;
    public static string BackChannelHttpClientName;
}
public class IdentityModel.AspNetCore.OAuth2Introspection.OAuth2IntrospectionEvents : object {
    [CompilerGeneratedAttribute]
private Func`2<AuthenticationFailedContext, Task> <OnAuthenticationFailed>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<TokenValidatedContext, Task> <OnTokenValidated>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<UpdateClientAssertionContext, Task> <OnUpdateClientAssertion>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<SendingRequestContext, Task> <OnSendingRequest>k__BackingField;
    public Func`2<AuthenticationFailedContext, Task> OnAuthenticationFailed { get; public set; }
    public Func`2<TokenValidatedContext, Task> OnTokenValidated { get; public set; }
    public Func`2<UpdateClientAssertionContext, Task> OnUpdateClientAssertion { get; public set; }
    public Func`2<SendingRequestContext, Task> OnSendingRequest { get; public set; }
    [CompilerGeneratedAttribute]
public Func`2<AuthenticationFailedContext, Task> get_OnAuthenticationFailed();
    [CompilerGeneratedAttribute]
public void set_OnAuthenticationFailed(Func`2<AuthenticationFailedContext, Task> value);
    [CompilerGeneratedAttribute]
public Func`2<TokenValidatedContext, Task> get_OnTokenValidated();
    [CompilerGeneratedAttribute]
public void set_OnTokenValidated(Func`2<TokenValidatedContext, Task> value);
    [CompilerGeneratedAttribute]
public Func`2<UpdateClientAssertionContext, Task> get_OnUpdateClientAssertion();
    [CompilerGeneratedAttribute]
public void set_OnUpdateClientAssertion(Func`2<UpdateClientAssertionContext, Task> value);
    [CompilerGeneratedAttribute]
public Func`2<SendingRequestContext, Task> get_OnSendingRequest();
    [CompilerGeneratedAttribute]
public void set_OnSendingRequest(Func`2<SendingRequestContext, Task> value);
    public virtual Task AuthenticationFailed(AuthenticationFailedContext context);
    public virtual Task TokenValidated(TokenValidatedContext context);
    public virtual Task UpdateClientAssertion(UpdateClientAssertionContext context);
    public virtual Task SendingRequest(SendingRequestContext context);
}
public class IdentityModel.AspNetCore.OAuth2Introspection.OAuth2IntrospectionHandler : AuthenticationHandler`1<OAuth2IntrospectionOptions> {
    private IDistributedCache _cache;
    private ILogger`1<OAuth2IntrospectionHandler> _logger;
    private static ConcurrentDictionary`2<string, Lazy`1<Task`1<TokenIntrospectionResponse>>> IntrospectionDictionary;
    protected OAuth2IntrospectionEvents Events { get; protected set; }
    public OAuth2IntrospectionHandler(IOptionsMonitor`1<OAuth2IntrospectionOptions> options, UrlEncoder urlEncoder, ISystemClock clock, ILoggerFactory loggerFactory, IDistributedCache cache);
    private static OAuth2IntrospectionHandler();
    protected OAuth2IntrospectionEvents get_Events();
    protected void set_Events(OAuth2IntrospectionEvents value);
    protected virtual Task`1<object> CreateEventsAsync();
    [AsyncStateMachineAttribute("IdentityModel.AspNetCore.OAuth2Introspection.OAuth2IntrospectionHandler/<HandleAuthenticateAsync>d__8")]
protected virtual Task`1<AuthenticateResult> HandleAuthenticateAsync();
    [AsyncStateMachineAttribute("IdentityModel.AspNetCore.OAuth2Introspection.OAuth2IntrospectionHandler/<ReportNonSuccessAndReturn>d__9")]
private static Task`1<AuthenticateResult> ReportNonSuccessAndReturn(string error, HttpContext httpContext, AuthenticationScheme scheme, OAuth2IntrospectionEvents events, OAuth2IntrospectionOptions options);
    [AsyncStateMachineAttribute("IdentityModel.AspNetCore.OAuth2Introspection.OAuth2IntrospectionHandler/<LoadClaimsForToken>d__10")]
private static Task`1<TokenIntrospectionResponse> LoadClaimsForToken(string token, HttpContext context, AuthenticationScheme scheme, OAuth2IntrospectionEvents events, OAuth2IntrospectionOptions options);
    private static TokenIntrospectionRequest CreateTokenIntrospectionRequest(string token, HttpContext context, AuthenticationScheme scheme, OAuth2IntrospectionEvents events, OAuth2IntrospectionOptions options);
    [AsyncStateMachineAttribute("IdentityModel.AspNetCore.OAuth2Introspection.OAuth2IntrospectionHandler/<CreateTicket>d__12")]
private static Task`1<AuthenticateResult> CreateTicket(IEnumerable`1<Claim> claims, string token, HttpContext httpContext, AuthenticationScheme scheme, OAuth2IntrospectionEvents events, OAuth2IntrospectionOptions options);
}
public class IdentityModel.AspNetCore.OAuth2Introspection.OAuth2IntrospectionOptions : AuthenticationSchemeOptions {
    [CompilerGeneratedAttribute]
private string <Authority>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntrospectionEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientSecret>k__BackingField;
    internal object AssertionUpdateLockObj;
    [CompilerGeneratedAttribute]
private ClientAssertion <ClientAssertion>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ClientAssertionExpirationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private ClientCredentialStyle <ClientCredentialStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private BasicAuthenticationHeaderStyle <AuthorizationHeaderStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenTypeHint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NameClaimType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RoleClaimType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthenticationType>k__BackingField;
    [CompilerGeneratedAttribute]
private DiscoveryPolicy <DiscoveryPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SkipTokensWithDots>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SaveToken>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableCaching>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <CacheDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CacheKeyPrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`3<OAuth2IntrospectionOptions, string, string> <CacheKeyGenerator>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<HttpRequest, string> <TokenRetriever>k__BackingField;
    [CompilerGeneratedAttribute]
private AsyncLazy`1<HttpClient> <IntrospectionClient>k__BackingField;
    public string Authority { get; public set; }
    public string IntrospectionEndpoint { get; public set; }
    public string ClientId { get; public set; }
    public string ClientSecret { get; public set; }
    internal ClientAssertion ClientAssertion { get; internal set; }
    internal DateTime ClientAssertionExpirationTime { get; internal set; }
    public ClientCredentialStyle ClientCredentialStyle { get; public set; }
    public BasicAuthenticationHeaderStyle AuthorizationHeaderStyle { get; public set; }
    public string TokenTypeHint { get; public set; }
    public string NameClaimType { get; public set; }
    public string RoleClaimType { get; public set; }
    public string AuthenticationType { get; public set; }
    public DiscoveryPolicy DiscoveryPolicy { get; public set; }
    public bool SkipTokensWithDots { get; public set; }
    public bool SaveToken { get; public set; }
    public bool EnableCaching { get; public set; }
    public TimeSpan CacheDuration { get; public set; }
    public string CacheKeyPrefix { get; public set; }
    public Func`3<OAuth2IntrospectionOptions, string, string> CacheKeyGenerator { get; public set; }
    public Func`2<HttpRequest, string> TokenRetriever { get; public set; }
    public OAuth2IntrospectionEvents Events { get; public set; }
    internal AsyncLazy`1<HttpClient> IntrospectionClient { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Authority();
    [CompilerGeneratedAttribute]
public void set_Authority(string value);
    [CompilerGeneratedAttribute]
public string get_IntrospectionEndpoint();
    [CompilerGeneratedAttribute]
public void set_IntrospectionEndpoint(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientSecret();
    [CompilerGeneratedAttribute]
public void set_ClientSecret(string value);
    [CompilerGeneratedAttribute]
internal ClientAssertion get_ClientAssertion();
    [CompilerGeneratedAttribute]
internal void set_ClientAssertion(ClientAssertion value);
    [CompilerGeneratedAttribute]
internal DateTime get_ClientAssertionExpirationTime();
    [CompilerGeneratedAttribute]
internal void set_ClientAssertionExpirationTime(DateTime value);
    [CompilerGeneratedAttribute]
public ClientCredentialStyle get_ClientCredentialStyle();
    [CompilerGeneratedAttribute]
public void set_ClientCredentialStyle(ClientCredentialStyle value);
    [CompilerGeneratedAttribute]
public BasicAuthenticationHeaderStyle get_AuthorizationHeaderStyle();
    [CompilerGeneratedAttribute]
public void set_AuthorizationHeaderStyle(BasicAuthenticationHeaderStyle value);
    [CompilerGeneratedAttribute]
public string get_TokenTypeHint();
    [CompilerGeneratedAttribute]
public void set_TokenTypeHint(string value);
    [CompilerGeneratedAttribute]
public string get_NameClaimType();
    [CompilerGeneratedAttribute]
public void set_NameClaimType(string value);
    [CompilerGeneratedAttribute]
public string get_RoleClaimType();
    [CompilerGeneratedAttribute]
public void set_RoleClaimType(string value);
    [CompilerGeneratedAttribute]
public string get_AuthenticationType();
    [CompilerGeneratedAttribute]
public void set_AuthenticationType(string value);
    [CompilerGeneratedAttribute]
public DiscoveryPolicy get_DiscoveryPolicy();
    [CompilerGeneratedAttribute]
public void set_DiscoveryPolicy(DiscoveryPolicy value);
    [CompilerGeneratedAttribute]
public bool get_SkipTokensWithDots();
    [CompilerGeneratedAttribute]
public void set_SkipTokensWithDots(bool value);
    [CompilerGeneratedAttribute]
public bool get_SaveToken();
    [CompilerGeneratedAttribute]
public void set_SaveToken(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableCaching();
    [CompilerGeneratedAttribute]
public void set_EnableCaching(bool value);
    [CompilerGeneratedAttribute]
public TimeSpan get_CacheDuration();
    [CompilerGeneratedAttribute]
public void set_CacheDuration(TimeSpan value);
    [CompilerGeneratedAttribute]
public string get_CacheKeyPrefix();
    [CompilerGeneratedAttribute]
public void set_CacheKeyPrefix(string value);
    [CompilerGeneratedAttribute]
public Func`3<OAuth2IntrospectionOptions, string, string> get_CacheKeyGenerator();
    [CompilerGeneratedAttribute]
public void set_CacheKeyGenerator(Func`3<OAuth2IntrospectionOptions, string, string> value);
    [CompilerGeneratedAttribute]
public Func`2<HttpRequest, string> get_TokenRetriever();
    [CompilerGeneratedAttribute]
public void set_TokenRetriever(Func`2<HttpRequest, string> value);
    public OAuth2IntrospectionEvents get_Events();
    public void set_Events(OAuth2IntrospectionEvents value);
    [CompilerGeneratedAttribute]
internal AsyncLazy`1<HttpClient> get_IntrospectionClient();
    [CompilerGeneratedAttribute]
internal void set_IntrospectionClient(AsyncLazy`1<HttpClient> value);
    public virtual void Validate();
}
internal class IdentityModel.AspNetCore.OAuth2Introspection.PostConfigureOAuth2IntrospectionOptions : object {
    private IDistributedCache _cache;
    private IHttpClientFactory _httpClientFactory;
    public PostConfigureOAuth2IntrospectionOptions(IHttpClientFactory httpClientFactory, IDistributedCache cache);
    public sealed virtual void PostConfigure(string name, OAuth2IntrospectionOptions options);
    [AsyncStateMachineAttribute("IdentityModel.AspNetCore.OAuth2Introspection.PostConfigureOAuth2IntrospectionOptions/<InitializeIntrospectionClient>d__4")]
private Task`1<HttpClient> InitializeIntrospectionClient(OAuth2IntrospectionOptions options);
    [AsyncStateMachineAttribute("IdentityModel.AspNetCore.OAuth2Introspection.PostConfigureOAuth2IntrospectionOptions/<GetIntrospectionEndpointFromDiscoveryDocument>d__5")]
private Task`1<string> GetIntrospectionEndpointFromDiscoveryDocument(OAuth2IntrospectionOptions options);
}
public class IdentityModel.AspNetCore.OAuth2Introspection.SendingRequestContext : BaseContext`1<OAuth2IntrospectionOptions> {
    [CompilerGeneratedAttribute]
private TokenIntrospectionRequest <TokenIntrospectionRequest>k__BackingField;
    public TokenIntrospectionRequest TokenIntrospectionRequest { get; public set; }
    public SendingRequestContext(HttpContext context, AuthenticationScheme scheme, OAuth2IntrospectionOptions options);
    [CompilerGeneratedAttribute]
public TokenIntrospectionRequest get_TokenIntrospectionRequest();
    [CompilerGeneratedAttribute]
public void set_TokenIntrospectionRequest(TokenIntrospectionRequest value);
}
[ExtensionAttribute]
internal static class IdentityModel.AspNetCore.OAuth2Introspection.StringExtensions : object {
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string EnsureTrailingSlash(string input);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool IsMissing(string value);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool IsPresent(string value);
    [ExtensionAttribute]
internal static string Sha256(string input);
}
public static class IdentityModel.AspNetCore.OAuth2Introspection.TokenRetrieval : object {
    public static Func`2<HttpRequest, string> FromAuthorizationHeader(string scheme);
    public static Func`2<HttpRequest, string> FromQueryString(string name);
}
public class IdentityModel.AspNetCore.OAuth2Introspection.TokenValidatedContext : ResultContext`1<OAuth2IntrospectionOptions> {
    [CompilerGeneratedAttribute]
private string <SecurityToken>k__BackingField;
    public string SecurityToken { get; public set; }
    public TokenValidatedContext(HttpContext context, AuthenticationScheme scheme, OAuth2IntrospectionOptions options);
    [CompilerGeneratedAttribute]
public string get_SecurityToken();
    [CompilerGeneratedAttribute]
public void set_SecurityToken(string value);
}
public class IdentityModel.AspNetCore.OAuth2Introspection.UpdateClientAssertionContext : ResultContext`1<OAuth2IntrospectionOptions> {
    [CompilerGeneratedAttribute]
private ClientAssertion <ClientAssertion>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ClientAssertionExpirationTime>k__BackingField;
    public ClientAssertion ClientAssertion { get; public set; }
    public DateTime ClientAssertionExpirationTime { get; public set; }
    public UpdateClientAssertionContext(HttpContext context, AuthenticationScheme scheme, OAuth2IntrospectionOptions options);
    [CompilerGeneratedAttribute]
public ClientAssertion get_ClientAssertion();
    [CompilerGeneratedAttribute]
public void set_ClientAssertion(ClientAssertion value);
    [CompilerGeneratedAttribute]
public DateTime get_ClientAssertionExpirationTime();
    [CompilerGeneratedAttribute]
public void set_ClientAssertionExpirationTime(DateTime value);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.OAuth2IntrospectionExtensions : object {
    [ExtensionAttribute]
public static AuthenticationBuilder AddOAuth2Introspection(AuthenticationBuilder builder);
    [ExtensionAttribute]
public static AuthenticationBuilder AddOAuth2Introspection(AuthenticationBuilder builder, string authenticationScheme);
    [ExtensionAttribute]
public static AuthenticationBuilder AddOAuth2Introspection(AuthenticationBuilder services, Action`1<OAuth2IntrospectionOptions> configureOptions);
    [ExtensionAttribute]
public static AuthenticationBuilder AddOAuth2Introspection(AuthenticationBuilder builder, string authenticationScheme, Action`1<OAuth2IntrospectionOptions> configureOptions);
}
