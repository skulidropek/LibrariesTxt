internal class IdentityServer4.AccessTokenValidation.ConfigureInternalOptions : object {
    private IdentityServerAuthenticationOptions _identityServerOptions;
    private string _scheme;
    public ConfigureInternalOptions(IdentityServerAuthenticationOptions identityServerOptions, string scheme);
    public sealed virtual void Configure(string name, JwtBearerOptions options);
    public sealed virtual void Configure(string name, OAuth2IntrospectionOptions options);
    public sealed virtual void Configure(JwtBearerOptions options);
    public sealed virtual void Configure(OAuth2IntrospectionOptions options);
}
public class IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationDefaults : object {
    public static string AuthenticationScheme;
    internal static string IntrospectionAuthenticationScheme;
    internal static string JwtAuthenticationScheme;
    internal static string TokenItemsKey;
    internal static string EffectiveSchemeKey;
}
public class IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler : AuthenticationHandler`1<IdentityServerAuthenticationOptions> {
    private ILogger _logger;
    public IdentityServerAuthenticationHandler(IOptionsMonitor`1<IdentityServerAuthenticationOptions> options, ILoggerFactory logger, UrlEncoder encoder, ISystemClock clock);
    [AsyncStateMachineAttribute("IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler/<HandleAuthenticateAsync>d__2")]
protected virtual Task`1<AuthenticateResult> HandleAuthenticateAsync();
    [AsyncStateMachineAttribute("IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationHandler/<HandleChallengeAsync>d__3")]
protected virtual Task HandleChallengeAsync(AuthenticationProperties properties);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__0(AuthenticationProperties properties);
}
public class IdentityServer4.AccessTokenValidation.IdentityServerAuthenticationOptions : AuthenticationSchemeOptions {
    private static Func`2<HttpRequest, string> InternalTokenRetriever;
    [CompilerGeneratedAttribute]
private string <Authority>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RequireHttpsMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private SupportedTokens <SupportedTokens>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<HttpRequest, string> <TokenRetriever>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LegacyAudienceValidation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NameClaimType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RoleClaimType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableCaching>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <CacheDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CacheKeyPrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private DiscoveryPolicy <IntrospectionDiscoveryPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SaveToken>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <JwtValidationClockSkew>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpMessageHandler <JwtBackChannelHandler>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <BackChannelTimeouts>k__BackingField;
    [CompilerGeneratedAttribute]
private JwtBearerEvents <JwtBearerEvents>k__BackingField;
    [CompilerGeneratedAttribute]
private OAuth2IntrospectionEvents <OAuth2IntrospectionEvents>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <DiscoveryDocumentRefreshInterval>k__BackingField;
    public string Authority { get; public set; }
    public bool RequireHttpsMetadata { get; public set; }
    public SupportedTokens SupportedTokens { get; public set; }
    public Func`2<HttpRequest, string> TokenRetriever { get; public set; }
    public string ApiName { get; public set; }
    public string ApiSecret { get; public set; }
    public bool LegacyAudienceValidation { get; public set; }
    public string NameClaimType { get; public set; }
    public string RoleClaimType { get; public set; }
    public bool EnableCaching { get; public set; }
    public TimeSpan CacheDuration { get; public set; }
    public string CacheKeyPrefix { get; public set; }
    public DiscoveryPolicy IntrospectionDiscoveryPolicy { get; public set; }
    public bool SaveToken { get; public set; }
    public Nullable`1<TimeSpan> JwtValidationClockSkew { get; public set; }
    public HttpMessageHandler JwtBackChannelHandler { get; public set; }
    public TimeSpan BackChannelTimeouts { get; public set; }
    public JwtBearerEvents JwtBearerEvents { get; public set; }
    public OAuth2IntrospectionEvents OAuth2IntrospectionEvents { get; public set; }
    public Nullable`1<TimeSpan> DiscoveryDocumentRefreshInterval { get; public set; }
    public bool SupportsJwt { get; }
    public bool SupportsIntrospection { get; }
    private static IdentityServerAuthenticationOptions();
    [CompilerGeneratedAttribute]
public string get_Authority();
    [CompilerGeneratedAttribute]
public void set_Authority(string value);
    [CompilerGeneratedAttribute]
public bool get_RequireHttpsMetadata();
    [CompilerGeneratedAttribute]
public void set_RequireHttpsMetadata(bool value);
    [CompilerGeneratedAttribute]
public SupportedTokens get_SupportedTokens();
    [CompilerGeneratedAttribute]
public void set_SupportedTokens(SupportedTokens value);
    [CompilerGeneratedAttribute]
public Func`2<HttpRequest, string> get_TokenRetriever();
    [CompilerGeneratedAttribute]
public void set_TokenRetriever(Func`2<HttpRequest, string> value);
    [CompilerGeneratedAttribute]
public string get_ApiName();
    [CompilerGeneratedAttribute]
public void set_ApiName(string value);
    [CompilerGeneratedAttribute]
public string get_ApiSecret();
    [CompilerGeneratedAttribute]
public void set_ApiSecret(string value);
    [CompilerGeneratedAttribute]
public bool get_LegacyAudienceValidation();
    [CompilerGeneratedAttribute]
public void set_LegacyAudienceValidation(bool value);
    [CompilerGeneratedAttribute]
public string get_NameClaimType();
    [CompilerGeneratedAttribute]
public void set_NameClaimType(string value);
    [CompilerGeneratedAttribute]
public string get_RoleClaimType();
    [CompilerGeneratedAttribute]
public void set_RoleClaimType(string value);
    [CompilerGeneratedAttribute]
public bool get_EnableCaching();
    [CompilerGeneratedAttribute]
public void set_EnableCaching(bool value);
    [CompilerGeneratedAttribute]
public TimeSpan get_CacheDuration();
    [CompilerGeneratedAttribute]
public void set_CacheDuration(TimeSpan value);
    [CompilerGeneratedAttribute]
public string get_CacheKeyPrefix();
    [CompilerGeneratedAttribute]
public void set_CacheKeyPrefix(string value);
    [CompilerGeneratedAttribute]
public DiscoveryPolicy get_IntrospectionDiscoveryPolicy();
    [CompilerGeneratedAttribute]
public void set_IntrospectionDiscoveryPolicy(DiscoveryPolicy value);
    [CompilerGeneratedAttribute]
public bool get_SaveToken();
    [CompilerGeneratedAttribute]
public void set_SaveToken(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_JwtValidationClockSkew();
    [CompilerGeneratedAttribute]
public void set_JwtValidationClockSkew(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public HttpMessageHandler get_JwtBackChannelHandler();
    [CompilerGeneratedAttribute]
public void set_JwtBackChannelHandler(HttpMessageHandler value);
    [CompilerGeneratedAttribute]
public TimeSpan get_BackChannelTimeouts();
    [CompilerGeneratedAttribute]
public void set_BackChannelTimeouts(TimeSpan value);
    [CompilerGeneratedAttribute]
public JwtBearerEvents get_JwtBearerEvents();
    [CompilerGeneratedAttribute]
public void set_JwtBearerEvents(JwtBearerEvents value);
    [CompilerGeneratedAttribute]
public OAuth2IntrospectionEvents get_OAuth2IntrospectionEvents();
    [CompilerGeneratedAttribute]
public void set_OAuth2IntrospectionEvents(OAuth2IntrospectionEvents value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_DiscoveryDocumentRefreshInterval();
    [CompilerGeneratedAttribute]
public void set_DiscoveryDocumentRefreshInterval(Nullable`1<TimeSpan> value);
    public bool get_SupportsJwt();
    public bool get_SupportsIntrospection();
    internal void ConfigureJwtBearer(JwtBearerOptions jwtOptions);
    internal void ConfigureIntrospection(OAuth2IntrospectionOptions introspectionOptions);
    [CompilerGeneratedAttribute]
private Task <ConfigureJwtBearer>b__85_0(MessageReceivedContext e);
    [CompilerGeneratedAttribute]
private Task <ConfigureJwtBearer>b__85_1(TokenValidatedContext e);
    [CompilerGeneratedAttribute]
private Task <ConfigureJwtBearer>b__85_2(AuthenticationFailedContext e);
    [CompilerGeneratedAttribute]
private Task <ConfigureJwtBearer>b__85_3(JwtBearerChallengeContext e);
    [CompilerGeneratedAttribute]
private Task <ConfigureIntrospection>b__86_0(AuthenticationFailedContext e);
    [CompilerGeneratedAttribute]
private Task <ConfigureIntrospection>b__86_1(TokenValidatedContext e);
}
public enum IdentityServer4.AccessTokenValidation.SupportedTokens : Enum {
    public int value__;
    public static SupportedTokens Both;
    public static SupportedTokens Jwt;
    public static SupportedTokens Reference;
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilderExtensions : object {
    [ExtensionAttribute]
public static AuthorizationPolicyBuilder RequireScope(AuthorizationPolicyBuilder builder, String[] scope);
}
public static class Microsoft.AspNetCore.Authorization.ScopePolicy : object {
    public static AuthorizationPolicy Create(String[] scopes);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.IdentityServerAuthenticationExtensions : object {
    [ExtensionAttribute]
public static AuthenticationBuilder AddIdentityServerAuthentication(AuthenticationBuilder builder);
    [ExtensionAttribute]
public static AuthenticationBuilder AddIdentityServerAuthentication(AuthenticationBuilder builder, string authenticationScheme);
    [ExtensionAttribute]
public static AuthenticationBuilder AddIdentityServerAuthentication(AuthenticationBuilder builder, Action`1<IdentityServerAuthenticationOptions> configureOptions);
    [ExtensionAttribute]
public static AuthenticationBuilder AddIdentityServerAuthentication(AuthenticationBuilder builder, string authenticationScheme, Action`1<IdentityServerAuthenticationOptions> configureOptions);
    [ExtensionAttribute]
public static AuthenticationBuilder AddIdentityServerAuthentication(AuthenticationBuilder builder, string authenticationScheme, Action`1<JwtBearerOptions> jwtBearerOptions, Action`1<OAuth2IntrospectionOptions> introspectionOptions);
}
