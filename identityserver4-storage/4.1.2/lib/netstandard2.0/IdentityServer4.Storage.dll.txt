internal static class IdentityServer4.Constants : object {
    public static string IdentityServerName;
    public static string IdentityServerAuthenticationType;
}
[ExtensionAttribute]
internal static class IdentityServer4.Extensions.IEnumerableExtensions : object {
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool IsNullOrEmpty(IEnumerable`1<T> list);
}
[ExtensionAttribute]
public static class IdentityServer4.Extensions.PersistedGrantFilterExtensions : object {
    [ExtensionAttribute]
public static void Validate(PersistedGrantFilter filter);
}
[ExtensionAttribute]
internal static class IdentityServer4.Extensions.StringExtensions : object {
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool IsMissing(string value);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool IsPresent(string value);
}
internal static class IdentityServer4.IdentityServerConstants : object {
}
internal class IdentityServer4.IdentityServerUser : object {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdentityProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <AuthenticationMethods>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <AuthenticationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<Claim> <AdditionalClaims>k__BackingField;
    public string SubjectId { get; }
    public string DisplayName { get; public set; }
    public string IdentityProvider { get; public set; }
    public ICollection`1<string> AuthenticationMethods { get; public set; }
    public Nullable`1<DateTime> AuthenticationTime { get; public set; }
    public ICollection`1<Claim> AdditionalClaims { get; public set; }
    public IdentityServerUser(string subjectId);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_IdentityProvider();
    [CompilerGeneratedAttribute]
public void set_IdentityProvider(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_AuthenticationMethods();
    [CompilerGeneratedAttribute]
public void set_AuthenticationMethods(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_AuthenticationTime();
    [CompilerGeneratedAttribute]
public void set_AuthenticationTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public ICollection`1<Claim> get_AdditionalClaims();
    [CompilerGeneratedAttribute]
public void set_AdditionalClaims(ICollection`1<Claim> value);
    public ClaimsPrincipal CreatePrincipal();
}
public enum IdentityServer4.Models.AccessTokenType : Enum {
    public int value__;
    public static AccessTokenType Jwt;
    public static AccessTokenType Reference;
}
[DebuggerDisplayAttribute("{DebuggerDisplay,nq}")]
public class IdentityServer4.Models.ApiResource : Resource {
    [CompilerGeneratedAttribute]
private ICollection`1<Secret> <ApiSecrets>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <AllowedAccessTokenSigningAlgorithms>k__BackingField;
    private string DebuggerDisplay { get; }
    public ICollection`1<Secret> ApiSecrets { get; public set; }
    public ICollection`1<string> Scopes { get; public set; }
    public ICollection`1<string> AllowedAccessTokenSigningAlgorithms { get; public set; }
    public ApiResource(string name);
    public ApiResource(string name, string displayName);
    public ApiResource(string name, IEnumerable`1<string> userClaims);
    public ApiResource(string name, string displayName, IEnumerable`1<string> userClaims);
    private string get_DebuggerDisplay();
    [CompilerGeneratedAttribute]
public ICollection`1<Secret> get_ApiSecrets();
    [CompilerGeneratedAttribute]
public void set_ApiSecrets(ICollection`1<Secret> value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_AllowedAccessTokenSigningAlgorithms();
    [CompilerGeneratedAttribute]
public void set_AllowedAccessTokenSigningAlgorithms(ICollection`1<string> value);
}
[DebuggerDisplayAttribute("{DebuggerDisplay,nq}")]
public class IdentityServer4.Models.ApiScope : Resource {
    [CompilerGeneratedAttribute]
private bool <Required>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Emphasize>k__BackingField;
    private string DebuggerDisplay { get; }
    public bool Required { get; public set; }
    public bool Emphasize { get; public set; }
    public ApiScope(string name);
    public ApiScope(string name, string displayName);
    public ApiScope(string name, IEnumerable`1<string> userClaims);
    public ApiScope(string name, string displayName, IEnumerable`1<string> userClaims);
    private string get_DebuggerDisplay();
    [CompilerGeneratedAttribute]
public bool get_Required();
    [CompilerGeneratedAttribute]
public void set_Required(bool value);
    [CompilerGeneratedAttribute]
public bool get_Emphasize();
    [CompilerGeneratedAttribute]
public void set_Emphasize(bool value);
}
public class IdentityServer4.Models.AuthorizationCode : object {
    [CompilerGeneratedAttribute]
private DateTime <CreationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Lifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOpenId>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <RequestedScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RedirectUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Nonce>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StateHash>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WasConsentShown>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CodeChallenge>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CodeChallengeMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Properties>k__BackingField;
    public DateTime CreationTime { get; public set; }
    public int Lifetime { get; public set; }
    public string ClientId { get; public set; }
    public ClaimsPrincipal Subject { get; public set; }
    public bool IsOpenId { get; public set; }
    public IEnumerable`1<string> RequestedScopes { get; public set; }
    public string RedirectUri { get; public set; }
    public string Nonce { get; public set; }
    public string StateHash { get; public set; }
    public bool WasConsentShown { get; public set; }
    public string SessionId { get; public set; }
    public string CodeChallenge { get; public set; }
    public string CodeChallengeMethod { get; public set; }
    public string Description { get; public set; }
    public IDictionary`2<string, string> Properties { get; public set; }
    [CompilerGeneratedAttribute]
public DateTime get_CreationTime();
    [CompilerGeneratedAttribute]
public void set_CreationTime(DateTime value);
    [CompilerGeneratedAttribute]
public int get_Lifetime();
    [CompilerGeneratedAttribute]
public void set_Lifetime(int value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(ClaimsPrincipal value);
    [CompilerGeneratedAttribute]
public bool get_IsOpenId();
    [CompilerGeneratedAttribute]
public void set_IsOpenId(bool value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_RequestedScopes();
    [CompilerGeneratedAttribute]
public void set_RequestedScopes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_RedirectUri();
    [CompilerGeneratedAttribute]
public void set_RedirectUri(string value);
    [CompilerGeneratedAttribute]
public string get_Nonce();
    [CompilerGeneratedAttribute]
public void set_Nonce(string value);
    [CompilerGeneratedAttribute]
public string get_StateHash();
    [CompilerGeneratedAttribute]
public void set_StateHash(string value);
    [CompilerGeneratedAttribute]
public bool get_WasConsentShown();
    [CompilerGeneratedAttribute]
public void set_WasConsentShown(bool value);
    [CompilerGeneratedAttribute]
public string get_SessionId();
    [CompilerGeneratedAttribute]
public void set_SessionId(string value);
    [CompilerGeneratedAttribute]
public string get_CodeChallenge();
    [CompilerGeneratedAttribute]
public void set_CodeChallenge(string value);
    [CompilerGeneratedAttribute]
public string get_CodeChallengeMethod();
    [CompilerGeneratedAttribute]
public void set_CodeChallengeMethod(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(IDictionary`2<string, string> value);
}
[DebuggerDisplayAttribute("{DebuggerDisplay,nq}")]
public class IdentityServer4.Models.Client : object {
    private ICollection`1<string> _allowedGrantTypes;
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProtocolType>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<Secret> <ClientSecrets>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RequireClientSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LogoUri>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RequireConsent>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowRememberConsent>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RequirePkce>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowPlainTextPkce>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RequireRequestObject>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowAccessTokensViaBrowser>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <RedirectUris>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <PostLogoutRedirectUris>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FrontChannelLogoutUri>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FrontChannelLogoutSessionRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BackChannelLogoutUri>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <BackChannelLogoutSessionRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowOfflineAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <AllowedScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AlwaysIncludeUserClaimsInIdToken>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IdentityTokenLifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <AllowedIdentityTokenSigningAlgorithms>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AccessTokenLifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AuthorizationCodeLifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AbsoluteRefreshTokenLifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SlidingRefreshTokenLifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ConsentLifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private TokenUsage <RefreshTokenUsage>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UpdateAccessTokenClaimsOnRefresh>k__BackingField;
    [CompilerGeneratedAttribute]
private TokenExpiration <RefreshTokenExpiration>k__BackingField;
    [CompilerGeneratedAttribute]
private AccessTokenType <AccessTokenType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableLocalLogin>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <IdentityProviderRestrictions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeJwtId>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ClientClaim> <Claims>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AlwaysSendClientClaims>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientClaimsPrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PairWiseSubjectSalt>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <UserSsoLifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserCodeType>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DeviceCodeLifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <AllowedCorsOrigins>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Properties>k__BackingField;
    private string DebuggerDisplay { get; }
    public bool Enabled { get; public set; }
    public string ClientId { get; public set; }
    public string ProtocolType { get; public set; }
    public ICollection`1<Secret> ClientSecrets { get; public set; }
    public bool RequireClientSecret { get; public set; }
    public string ClientName { get; public set; }
    public string Description { get; public set; }
    public string ClientUri { get; public set; }
    public string LogoUri { get; public set; }
    public bool RequireConsent { get; public set; }
    public bool AllowRememberConsent { get; public set; }
    public ICollection`1<string> AllowedGrantTypes { get; public set; }
    public bool RequirePkce { get; public set; }
    public bool AllowPlainTextPkce { get; public set; }
    public bool RequireRequestObject { get; public set; }
    public bool AllowAccessTokensViaBrowser { get; public set; }
    public ICollection`1<string> RedirectUris { get; public set; }
    public ICollection`1<string> PostLogoutRedirectUris { get; public set; }
    public string FrontChannelLogoutUri { get; public set; }
    public bool FrontChannelLogoutSessionRequired { get; public set; }
    public string BackChannelLogoutUri { get; public set; }
    public bool BackChannelLogoutSessionRequired { get; public set; }
    public bool AllowOfflineAccess { get; public set; }
    public ICollection`1<string> AllowedScopes { get; public set; }
    public bool AlwaysIncludeUserClaimsInIdToken { get; public set; }
    public int IdentityTokenLifetime { get; public set; }
    public ICollection`1<string> AllowedIdentityTokenSigningAlgorithms { get; public set; }
    public int AccessTokenLifetime { get; public set; }
    public int AuthorizationCodeLifetime { get; public set; }
    public int AbsoluteRefreshTokenLifetime { get; public set; }
    public int SlidingRefreshTokenLifetime { get; public set; }
    public Nullable`1<int> ConsentLifetime { get; public set; }
    public TokenUsage RefreshTokenUsage { get; public set; }
    public bool UpdateAccessTokenClaimsOnRefresh { get; public set; }
    public TokenExpiration RefreshTokenExpiration { get; public set; }
    public AccessTokenType AccessTokenType { get; public set; }
    public bool EnableLocalLogin { get; public set; }
    public ICollection`1<string> IdentityProviderRestrictions { get; public set; }
    public bool IncludeJwtId { get; public set; }
    public ICollection`1<ClientClaim> Claims { get; public set; }
    public bool AlwaysSendClientClaims { get; public set; }
    public string ClientClaimsPrefix { get; public set; }
    public string PairWiseSubjectSalt { get; public set; }
    public Nullable`1<int> UserSsoLifetime { get; public set; }
    public string UserCodeType { get; public set; }
    public int DeviceCodeLifetime { get; public set; }
    public ICollection`1<string> AllowedCorsOrigins { get; public set; }
    public IDictionary`2<string, string> Properties { get; public set; }
    private string get_DebuggerDisplay();
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ProtocolType();
    [CompilerGeneratedAttribute]
public void set_ProtocolType(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<Secret> get_ClientSecrets();
    [CompilerGeneratedAttribute]
public void set_ClientSecrets(ICollection`1<Secret> value);
    [CompilerGeneratedAttribute]
public bool get_RequireClientSecret();
    [CompilerGeneratedAttribute]
public void set_RequireClientSecret(bool value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_ClientUri();
    [CompilerGeneratedAttribute]
public void set_ClientUri(string value);
    [CompilerGeneratedAttribute]
public string get_LogoUri();
    [CompilerGeneratedAttribute]
public void set_LogoUri(string value);
    [CompilerGeneratedAttribute]
public bool get_RequireConsent();
    [CompilerGeneratedAttribute]
public void set_RequireConsent(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowRememberConsent();
    [CompilerGeneratedAttribute]
public void set_AllowRememberConsent(bool value);
    public ICollection`1<string> get_AllowedGrantTypes();
    public void set_AllowedGrantTypes(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_RequirePkce();
    [CompilerGeneratedAttribute]
public void set_RequirePkce(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowPlainTextPkce();
    [CompilerGeneratedAttribute]
public void set_AllowPlainTextPkce(bool value);
    [CompilerGeneratedAttribute]
public bool get_RequireRequestObject();
    [CompilerGeneratedAttribute]
public void set_RequireRequestObject(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowAccessTokensViaBrowser();
    [CompilerGeneratedAttribute]
public void set_AllowAccessTokensViaBrowser(bool value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_RedirectUris();
    [CompilerGeneratedAttribute]
public void set_RedirectUris(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_PostLogoutRedirectUris();
    [CompilerGeneratedAttribute]
public void set_PostLogoutRedirectUris(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public string get_FrontChannelLogoutUri();
    [CompilerGeneratedAttribute]
public void set_FrontChannelLogoutUri(string value);
    [CompilerGeneratedAttribute]
public bool get_FrontChannelLogoutSessionRequired();
    [CompilerGeneratedAttribute]
public void set_FrontChannelLogoutSessionRequired(bool value);
    [CompilerGeneratedAttribute]
public string get_BackChannelLogoutUri();
    [CompilerGeneratedAttribute]
public void set_BackChannelLogoutUri(string value);
    [CompilerGeneratedAttribute]
public bool get_BackChannelLogoutSessionRequired();
    [CompilerGeneratedAttribute]
public void set_BackChannelLogoutSessionRequired(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowOfflineAccess();
    [CompilerGeneratedAttribute]
public void set_AllowOfflineAccess(bool value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_AllowedScopes();
    [CompilerGeneratedAttribute]
public void set_AllowedScopes(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_AlwaysIncludeUserClaimsInIdToken();
    [CompilerGeneratedAttribute]
public void set_AlwaysIncludeUserClaimsInIdToken(bool value);
    [CompilerGeneratedAttribute]
public int get_IdentityTokenLifetime();
    [CompilerGeneratedAttribute]
public void set_IdentityTokenLifetime(int value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_AllowedIdentityTokenSigningAlgorithms();
    [CompilerGeneratedAttribute]
public void set_AllowedIdentityTokenSigningAlgorithms(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public int get_AccessTokenLifetime();
    [CompilerGeneratedAttribute]
public void set_AccessTokenLifetime(int value);
    [CompilerGeneratedAttribute]
public int get_AuthorizationCodeLifetime();
    [CompilerGeneratedAttribute]
public void set_AuthorizationCodeLifetime(int value);
    [CompilerGeneratedAttribute]
public int get_AbsoluteRefreshTokenLifetime();
    [CompilerGeneratedAttribute]
public void set_AbsoluteRefreshTokenLifetime(int value);
    [CompilerGeneratedAttribute]
public int get_SlidingRefreshTokenLifetime();
    [CompilerGeneratedAttribute]
public void set_SlidingRefreshTokenLifetime(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ConsentLifetime();
    [CompilerGeneratedAttribute]
public void set_ConsentLifetime(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public TokenUsage get_RefreshTokenUsage();
    [CompilerGeneratedAttribute]
public void set_RefreshTokenUsage(TokenUsage value);
    [CompilerGeneratedAttribute]
public bool get_UpdateAccessTokenClaimsOnRefresh();
    [CompilerGeneratedAttribute]
public void set_UpdateAccessTokenClaimsOnRefresh(bool value);
    [CompilerGeneratedAttribute]
public TokenExpiration get_RefreshTokenExpiration();
    [CompilerGeneratedAttribute]
public void set_RefreshTokenExpiration(TokenExpiration value);
    [CompilerGeneratedAttribute]
public AccessTokenType get_AccessTokenType();
    [CompilerGeneratedAttribute]
public void set_AccessTokenType(AccessTokenType value);
    [CompilerGeneratedAttribute]
public bool get_EnableLocalLogin();
    [CompilerGeneratedAttribute]
public void set_EnableLocalLogin(bool value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_IdentityProviderRestrictions();
    [CompilerGeneratedAttribute]
public void set_IdentityProviderRestrictions(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_IncludeJwtId();
    [CompilerGeneratedAttribute]
public void set_IncludeJwtId(bool value);
    [CompilerGeneratedAttribute]
public ICollection`1<ClientClaim> get_Claims();
    [CompilerGeneratedAttribute]
public void set_Claims(ICollection`1<ClientClaim> value);
    [CompilerGeneratedAttribute]
public bool get_AlwaysSendClientClaims();
    [CompilerGeneratedAttribute]
public void set_AlwaysSendClientClaims(bool value);
    [CompilerGeneratedAttribute]
public string get_ClientClaimsPrefix();
    [CompilerGeneratedAttribute]
public void set_ClientClaimsPrefix(string value);
    [CompilerGeneratedAttribute]
public string get_PairWiseSubjectSalt();
    [CompilerGeneratedAttribute]
public void set_PairWiseSubjectSalt(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_UserSsoLifetime();
    [CompilerGeneratedAttribute]
public void set_UserSsoLifetime(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_UserCodeType();
    [CompilerGeneratedAttribute]
public void set_UserCodeType(string value);
    [CompilerGeneratedAttribute]
public int get_DeviceCodeLifetime();
    [CompilerGeneratedAttribute]
public void set_DeviceCodeLifetime(int value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_AllowedCorsOrigins();
    [CompilerGeneratedAttribute]
public void set_AllowedCorsOrigins(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(IDictionary`2<string, string> value);
    public static void ValidateGrantTypes(IEnumerable`1<string> grantTypes);
    private static void DisallowGrantTypeCombination(string value1, string value2, IEnumerable`1<string> grantTypes);
}
public class IdentityServer4.Models.ClientClaim : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValueType>k__BackingField;
    public string Type { get; public set; }
    public string Value { get; public set; }
    public string ValueType { get; public set; }
    public ClientClaim(string type, string value);
    public ClientClaim(string type, string value, string valueType);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public string get_ValueType();
    [CompilerGeneratedAttribute]
public void set_ValueType(string value);
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
}
public class IdentityServer4.Models.Consent : object {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <Expiration>k__BackingField;
    public string SubjectId { get; public set; }
    public string ClientId { get; public set; }
    public IEnumerable`1<string> Scopes { get; public set; }
    public DateTime CreationTime { get; public set; }
    public Nullable`1<DateTime> Expiration { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public DateTime get_CreationTime();
    [CompilerGeneratedAttribute]
public void set_CreationTime(DateTime value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_Expiration();
    [CompilerGeneratedAttribute]
public void set_Expiration(Nullable`1<DateTime> value);
}
public enum IdentityServer4.Models.CspLevel : Enum {
    public int value__;
    public static CspLevel One;
    public static CspLevel Two;
}
public class IdentityServer4.Models.DeviceCode : object {
    [CompilerGeneratedAttribute]
private DateTime <CreationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Lifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOpenId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAuthorized>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <RequestedScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <AuthorizedScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionId>k__BackingField;
    public DateTime CreationTime { get; public set; }
    public int Lifetime { get; public set; }
    public string ClientId { get; public set; }
    public string Description { get; public set; }
    public bool IsOpenId { get; public set; }
    public bool IsAuthorized { get; public set; }
    public IEnumerable`1<string> RequestedScopes { get; public set; }
    public IEnumerable`1<string> AuthorizedScopes { get; public set; }
    public ClaimsPrincipal Subject { get; public set; }
    public string SessionId { get; public set; }
    [CompilerGeneratedAttribute]
public DateTime get_CreationTime();
    [CompilerGeneratedAttribute]
public void set_CreationTime(DateTime value);
    [CompilerGeneratedAttribute]
public int get_Lifetime();
    [CompilerGeneratedAttribute]
public void set_Lifetime(int value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_IsOpenId();
    [CompilerGeneratedAttribute]
public void set_IsOpenId(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsAuthorized();
    [CompilerGeneratedAttribute]
public void set_IsAuthorized(bool value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_RequestedScopes();
    [CompilerGeneratedAttribute]
public void set_RequestedScopes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_AuthorizedScopes();
    [CompilerGeneratedAttribute]
public void set_AuthorizedScopes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(ClaimsPrincipal value);
    [CompilerGeneratedAttribute]
public string get_SessionId();
    [CompilerGeneratedAttribute]
public void set_SessionId(string value);
}
public static class IdentityServer4.Models.GrantType : object {
    public static string Implicit;
    public static string Hybrid;
    public static string AuthorizationCode;
    public static string ClientCredentials;
    public static string ResourceOwnerPassword;
    public static string DeviceFlow;
}
[DebuggerDisplayAttribute("{DebuggerDisplay,nq}")]
public class IdentityServer4.Models.IdentityResource : Resource {
    [CompilerGeneratedAttribute]
private bool <Required>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Emphasize>k__BackingField;
    private string DebuggerDisplay { get; }
    public bool Required { get; public set; }
    public bool Emphasize { get; public set; }
    public IdentityResource(string name, IEnumerable`1<string> userClaims);
    public IdentityResource(string name, string displayName, IEnumerable`1<string> userClaims);
    private string get_DebuggerDisplay();
    [CompilerGeneratedAttribute]
public bool get_Required();
    [CompilerGeneratedAttribute]
public void set_Required(bool value);
    [CompilerGeneratedAttribute]
public bool get_Emphasize();
    [CompilerGeneratedAttribute]
public void set_Emphasize(bool value);
}
public class IdentityServer4.Models.PersistedGrant : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <Expiration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <ConsumedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Data>k__BackingField;
    public string Key { get; public set; }
    public string Type { get; public set; }
    public string SubjectId { get; public set; }
    public string SessionId { get; public set; }
    public string ClientId { get; public set; }
    public string Description { get; public set; }
    public DateTime CreationTime { get; public set; }
    public Nullable`1<DateTime> Expiration { get; public set; }
    public Nullable`1<DateTime> ConsumedTime { get; public set; }
    public string Data { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_SessionId();
    [CompilerGeneratedAttribute]
public void set_SessionId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public DateTime get_CreationTime();
    [CompilerGeneratedAttribute]
public void set_CreationTime(DateTime value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_Expiration();
    [CompilerGeneratedAttribute]
public void set_Expiration(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_ConsumedTime();
    [CompilerGeneratedAttribute]
public void set_ConsumedTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(string value);
}
public class IdentityServer4.Models.RefreshToken : object {
    [CompilerGeneratedAttribute]
private DateTime <CreationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Lifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <ConsumedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Token <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    public DateTime CreationTime { get; public set; }
    public int Lifetime { get; public set; }
    public Nullable`1<DateTime> ConsumedTime { get; public set; }
    public Token AccessToken { get; public set; }
    public ClaimsPrincipal Subject { get; }
    public int Version { get; public set; }
    public string ClientId { get; }
    public string SubjectId { get; }
    public string SessionId { get; }
    public string Description { get; }
    public IEnumerable`1<string> Scopes { get; }
    [CompilerGeneratedAttribute]
public DateTime get_CreationTime();
    [CompilerGeneratedAttribute]
public void set_CreationTime(DateTime value);
    [CompilerGeneratedAttribute]
public int get_Lifetime();
    [CompilerGeneratedAttribute]
public void set_Lifetime(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_ConsumedTime();
    [CompilerGeneratedAttribute]
public void set_ConsumedTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Token get_AccessToken();
    [CompilerGeneratedAttribute]
public void set_AccessToken(Token value);
    public ClaimsPrincipal get_Subject();
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(int value);
    public string get_ClientId();
    public string get_SubjectId();
    public string get_SessionId();
    public string get_Description();
    public IEnumerable`1<string> get_Scopes();
}
[DebuggerDisplayAttribute("{DebuggerDisplay,nq}")]
public abstract class IdentityServer4.Models.Resource : object {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowInDiscoveryDocument>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <UserClaims>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Properties>k__BackingField;
    private string DebuggerDisplay { get; }
    public bool Enabled { get; public set; }
    public string Name { get; public set; }
    public string DisplayName { get; public set; }
    public string Description { get; public set; }
    public bool ShowInDiscoveryDocument { get; public set; }
    public ICollection`1<string> UserClaims { get; public set; }
    public IDictionary`2<string, string> Properties { get; public set; }
    private string get_DebuggerDisplay();
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_ShowInDiscoveryDocument();
    [CompilerGeneratedAttribute]
public void set_ShowInDiscoveryDocument(bool value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_UserClaims();
    [CompilerGeneratedAttribute]
public void set_UserClaims(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(IDictionary`2<string, string> value);
}
public class IdentityServer4.Models.Resources : object {
    [CompilerGeneratedAttribute]
private bool <OfflineAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<IdentityResource> <IdentityResources>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ApiResource> <ApiResources>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ApiScope> <ApiScopes>k__BackingField;
    public bool OfflineAccess { get; public set; }
    public ICollection`1<IdentityResource> IdentityResources { get; public set; }
    public ICollection`1<ApiResource> ApiResources { get; public set; }
    public ICollection`1<ApiScope> ApiScopes { get; public set; }
    public Resources(Resources other);
    public Resources(IEnumerable`1<IdentityResource> identityResources, IEnumerable`1<ApiResource> apiResources, IEnumerable`1<ApiScope> apiScopes);
    [CompilerGeneratedAttribute]
public bool get_OfflineAccess();
    [CompilerGeneratedAttribute]
public void set_OfflineAccess(bool value);
    [CompilerGeneratedAttribute]
public ICollection`1<IdentityResource> get_IdentityResources();
    [CompilerGeneratedAttribute]
public void set_IdentityResources(ICollection`1<IdentityResource> value);
    [CompilerGeneratedAttribute]
public ICollection`1<ApiResource> get_ApiResources();
    [CompilerGeneratedAttribute]
public void set_ApiResources(ICollection`1<ApiResource> value);
    [CompilerGeneratedAttribute]
public ICollection`1<ApiScope> get_ApiScopes();
    [CompilerGeneratedAttribute]
public void set_ApiScopes(ICollection`1<ApiScope> value);
}
public class IdentityServer4.Models.Secret : object {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <Expiration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public string Description { get; public set; }
    public string Value { get; public set; }
    public Nullable`1<DateTime> Expiration { get; public set; }
    public string Type { get; public set; }
    public Secret(string value, Nullable`1<DateTime> expiration);
    public Secret(string value, string description, Nullable`1<DateTime> expiration);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_Expiration();
    [CompilerGeneratedAttribute]
public void set_Expiration(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
}
public enum IdentityServer4.Models.SubjectTypes : Enum {
    public int value__;
    public static SubjectTypes Global;
    public static SubjectTypes Ppid;
}
public class IdentityServer4.Models.Token : object {
    [CompilerGeneratedAttribute]
private ICollection`1<string> <AllowedSigningAlgorithms>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Confirmation>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <Audiences>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Issuer>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Lifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private AccessTokenType <AccessTokenType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<Claim> <Claims>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    public ICollection`1<string> AllowedSigningAlgorithms { get; public set; }
    public string Confirmation { get; public set; }
    public ICollection`1<string> Audiences { get; public set; }
    public string Issuer { get; public set; }
    public DateTime CreationTime { get; public set; }
    public int Lifetime { get; public set; }
    public string Type { get; public set; }
    public string ClientId { get; public set; }
    public AccessTokenType AccessTokenType { get; public set; }
    public string Description { get; public set; }
    public ICollection`1<Claim> Claims { get; public set; }
    public int Version { get; public set; }
    public string SubjectId { get; }
    public string SessionId { get; }
    public IEnumerable`1<string> Scopes { get; }
    public Token(string tokenType);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_AllowedSigningAlgorithms();
    [CompilerGeneratedAttribute]
public void set_AllowedSigningAlgorithms(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Confirmation();
    [CompilerGeneratedAttribute]
public void set_Confirmation(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_Audiences();
    [CompilerGeneratedAttribute]
public void set_Audiences(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Issuer();
    [CompilerGeneratedAttribute]
public void set_Issuer(string value);
    [CompilerGeneratedAttribute]
public DateTime get_CreationTime();
    [CompilerGeneratedAttribute]
public void set_CreationTime(DateTime value);
    [CompilerGeneratedAttribute]
public int get_Lifetime();
    [CompilerGeneratedAttribute]
public void set_Lifetime(int value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public AccessTokenType get_AccessTokenType();
    [CompilerGeneratedAttribute]
public void set_AccessTokenType(AccessTokenType value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<Claim> get_Claims();
    [CompilerGeneratedAttribute]
public void set_Claims(ICollection`1<Claim> value);
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(int value);
    public string get_SubjectId();
    public string get_SessionId();
    public IEnumerable`1<string> get_Scopes();
}
public enum IdentityServer4.Models.TokenExpiration : Enum {
    public int value__;
    public static TokenExpiration Sliding;
    public static TokenExpiration Absolute;
}
public enum IdentityServer4.Models.TokenUsage : Enum {
    public int value__;
    public static TokenUsage ReUse;
    public static TokenUsage OneTimeOnly;
}
public interface IdentityServer4.Services.ICorsPolicyService {
    public abstract virtual Task`1<bool> IsOriginAllowedAsync(string origin);
}
public interface IdentityServer4.Stores.IAuthorizationCodeStore {
    public abstract virtual Task`1<string> StoreAuthorizationCodeAsync(AuthorizationCode code);
    public abstract virtual Task`1<AuthorizationCode> GetAuthorizationCodeAsync(string code);
    public abstract virtual Task RemoveAuthorizationCodeAsync(string code);
}
public interface IdentityServer4.Stores.IClientStore {
    public abstract virtual Task`1<Client> FindClientByIdAsync(string clientId);
}
public interface IdentityServer4.Stores.IDeviceFlowStore {
    public abstract virtual Task StoreDeviceAuthorizationAsync(string deviceCode, string userCode, DeviceCode data);
    public abstract virtual Task`1<DeviceCode> FindByUserCodeAsync(string userCode);
    public abstract virtual Task`1<DeviceCode> FindByDeviceCodeAsync(string deviceCode);
    public abstract virtual Task UpdateByUserCodeAsync(string userCode, DeviceCode data);
    public abstract virtual Task RemoveByDeviceCodeAsync(string deviceCode);
}
public interface IdentityServer4.Stores.IPersistedGrantStore {
    public abstract virtual Task StoreAsync(PersistedGrant grant);
    public abstract virtual Task`1<PersistedGrant> GetAsync(string key);
    public abstract virtual Task`1<IEnumerable`1<PersistedGrant>> GetAllAsync(PersistedGrantFilter filter);
    public abstract virtual Task RemoveAsync(string key);
    public abstract virtual Task RemoveAllAsync(PersistedGrantFilter filter);
}
public interface IdentityServer4.Stores.IReferenceTokenStore {
    public abstract virtual Task`1<string> StoreReferenceTokenAsync(Token token);
    public abstract virtual Task`1<Token> GetReferenceTokenAsync(string handle);
    public abstract virtual Task RemoveReferenceTokenAsync(string handle);
    public abstract virtual Task RemoveReferenceTokensAsync(string subjectId, string clientId);
}
public interface IdentityServer4.Stores.IRefreshTokenStore {
    public abstract virtual Task`1<string> StoreRefreshTokenAsync(RefreshToken refreshToken);
    public abstract virtual Task UpdateRefreshTokenAsync(string handle, RefreshToken refreshToken);
    public abstract virtual Task`1<RefreshToken> GetRefreshTokenAsync(string refreshTokenHandle);
    public abstract virtual Task RemoveRefreshTokenAsync(string refreshTokenHandle);
    public abstract virtual Task RemoveRefreshTokensAsync(string subjectId, string clientId);
}
public interface IdentityServer4.Stores.IResourceStore {
    public abstract virtual Task`1<IEnumerable`1<IdentityResource>> FindIdentityResourcesByScopeNameAsync(IEnumerable`1<string> scopeNames);
    public abstract virtual Task`1<IEnumerable`1<ApiScope>> FindApiScopesByNameAsync(IEnumerable`1<string> scopeNames);
    public abstract virtual Task`1<IEnumerable`1<ApiResource>> FindApiResourcesByScopeNameAsync(IEnumerable`1<string> scopeNames);
    public abstract virtual Task`1<IEnumerable`1<ApiResource>> FindApiResourcesByNameAsync(IEnumerable`1<string> apiResourceNames);
    public abstract virtual Task`1<Resources> GetAllResourcesAsync();
}
public interface IdentityServer4.Stores.IUserConsentStore {
    public abstract virtual Task StoreUserConsentAsync(Consent consent);
    public abstract virtual Task`1<Consent> GetUserConsentAsync(string subjectId, string clientId);
    public abstract virtual Task RemoveUserConsentAsync(string subjectId, string clientId);
}
public class IdentityServer4.Stores.PersistedGrantFilter : object {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public string SubjectId { get; public set; }
    public string SessionId { get; public set; }
    public string ClientId { get; public set; }
    public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_SessionId();
    [CompilerGeneratedAttribute]
public void set_SessionId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
public class IdentityServer4.Stores.Serialization.ClaimConverter : JsonConverter {
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
public class IdentityServer4.Stores.Serialization.ClaimLite : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValueType>k__BackingField;
    public string Type { get; public set; }
    public string Value { get; public set; }
    public string ValueType { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public string get_ValueType();
    [CompilerGeneratedAttribute]
public void set_ValueType(string value);
}
public class IdentityServer4.Stores.Serialization.ClaimsPrincipalConverter : JsonConverter {
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
public class IdentityServer4.Stores.Serialization.ClaimsPrincipalLite : object {
    [CompilerGeneratedAttribute]
private string <AuthenticationType>k__BackingField;
    [CompilerGeneratedAttribute]
private ClaimLite[] <Claims>k__BackingField;
    public string AuthenticationType { get; public set; }
    public ClaimLite[] Claims { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AuthenticationType();
    [CompilerGeneratedAttribute]
public void set_AuthenticationType(string value);
    [CompilerGeneratedAttribute]
public ClaimLite[] get_Claims();
    [CompilerGeneratedAttribute]
public void set_Claims(ClaimLite[] value);
}
public class IdentityServer4.Stores.Serialization.CustomContractResolver : DefaultContractResolver {
    protected virtual IList`1<JsonProperty> CreateProperties(Type type, MemberSerialization memberSerialization);
}
public interface IdentityServer4.Stores.Serialization.IPersistentGrantSerializer {
    public abstract virtual string Serialize(T value);
    public abstract virtual T Deserialize(string json);
}
public class IdentityServer4.Stores.Serialization.PersistentGrantSerializer : object {
    private static JsonSerializerSettings _settings;
    private static PersistentGrantSerializer();
    public sealed virtual string Serialize(T value);
    public sealed virtual T Deserialize(string json);
}
