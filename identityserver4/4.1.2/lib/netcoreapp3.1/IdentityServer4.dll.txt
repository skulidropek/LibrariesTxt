public class IdentityServer4.Configuration.AuthenticationOptions : object {
    [CompilerGeneratedAttribute]
private string <CookieAuthenticationScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <CookieLifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CookieSlidingExpiration>k__BackingField;
    [CompilerGeneratedAttribute]
private SameSiteMode <CookieSameSiteMode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RequireAuthenticatedUserForSignOutMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CheckSessionCookieName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CheckSessionCookieDomain>k__BackingField;
    [CompilerGeneratedAttribute]
private SameSiteMode <CheckSessionCookieSameSiteMode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RequireCspFrameSrcForSignout>k__BackingField;
    public string CookieAuthenticationScheme { get; public set; }
    public TimeSpan CookieLifetime { get; public set; }
    public bool CookieSlidingExpiration { get; public set; }
    public SameSiteMode CookieSameSiteMode { get; public set; }
    public bool RequireAuthenticatedUserForSignOutMessage { get; public set; }
    public string CheckSessionCookieName { get; public set; }
    public string CheckSessionCookieDomain { get; public set; }
    public SameSiteMode CheckSessionCookieSameSiteMode { get; public set; }
    public bool RequireCspFrameSrcForSignout { get; public set; }
    [CompilerGeneratedAttribute]
public string get_CookieAuthenticationScheme();
    [CompilerGeneratedAttribute]
public void set_CookieAuthenticationScheme(string value);
    [CompilerGeneratedAttribute]
public TimeSpan get_CookieLifetime();
    [CompilerGeneratedAttribute]
public void set_CookieLifetime(TimeSpan value);
    [CompilerGeneratedAttribute]
public bool get_CookieSlidingExpiration();
    [CompilerGeneratedAttribute]
public void set_CookieSlidingExpiration(bool value);
    [CompilerGeneratedAttribute]
public SameSiteMode get_CookieSameSiteMode();
    [CompilerGeneratedAttribute]
public void set_CookieSameSiteMode(SameSiteMode value);
    [CompilerGeneratedAttribute]
public bool get_RequireAuthenticatedUserForSignOutMessage();
    [CompilerGeneratedAttribute]
public void set_RequireAuthenticatedUserForSignOutMessage(bool value);
    [CompilerGeneratedAttribute]
public string get_CheckSessionCookieName();
    [CompilerGeneratedAttribute]
public void set_CheckSessionCookieName(string value);
    [CompilerGeneratedAttribute]
public string get_CheckSessionCookieDomain();
    [CompilerGeneratedAttribute]
public void set_CheckSessionCookieDomain(string value);
    [CompilerGeneratedAttribute]
public SameSiteMode get_CheckSessionCookieSameSiteMode();
    [CompilerGeneratedAttribute]
public void set_CheckSessionCookieSameSiteMode(SameSiteMode value);
    [CompilerGeneratedAttribute]
public bool get_RequireCspFrameSrcForSignout();
    [CompilerGeneratedAttribute]
public void set_RequireCspFrameSrcForSignout(bool value);
}
public class IdentityServer4.Configuration.CachingOptions : object {
    private static TimeSpan Default;
    [CompilerGeneratedAttribute]
private TimeSpan <ClientStoreExpiration>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ResourceStoreExpiration>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <CorsExpiration>k__BackingField;
    public TimeSpan ClientStoreExpiration { get; public set; }
    public TimeSpan ResourceStoreExpiration { get; public set; }
    public TimeSpan CorsExpiration { get; public set; }
    private static CachingOptions();
    [CompilerGeneratedAttribute]
public TimeSpan get_ClientStoreExpiration();
    [CompilerGeneratedAttribute]
public void set_ClientStoreExpiration(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ResourceStoreExpiration();
    [CompilerGeneratedAttribute]
public void set_ResourceStoreExpiration(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_CorsExpiration();
    [CompilerGeneratedAttribute]
public void set_CorsExpiration(TimeSpan value);
}
internal class IdentityServer4.Configuration.ConfigureInternalCookieOptions : object {
    private IdentityServerOptions _idsrv;
    public ConfigureInternalCookieOptions(IdentityServerOptions idsrv);
    public sealed virtual void Configure(CookieAuthenticationOptions options);
    public sealed virtual void Configure(string name, CookieAuthenticationOptions options);
    private static string ExtractLocalUrl(string url);
}
internal class IdentityServer4.Configuration.ConfigureOpenIdConnectOptions : object {
    private String[] _schemes;
    private IHttpContextAccessor _httpContextAccessor;
    public ConfigureOpenIdConnectOptions(String[] schemes, IHttpContextAccessor httpContextAccessor);
    public sealed virtual void PostConfigure(string name, OpenIdConnectOptions options);
}
public class IdentityServer4.Configuration.CorsOptions : object {
    [CompilerGeneratedAttribute]
private string <CorsPolicyName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <PreflightCacheDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<PathString> <CorsPaths>k__BackingField;
    public string CorsPolicyName { get; public set; }
    public Nullable`1<TimeSpan> PreflightCacheDuration { get; public set; }
    public ICollection`1<PathString> CorsPaths { get; public set; }
    [CompilerGeneratedAttribute]
public string get_CorsPolicyName();
    [CompilerGeneratedAttribute]
public void set_CorsPolicyName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_PreflightCacheDuration();
    [CompilerGeneratedAttribute]
public void set_PreflightCacheDuration(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public ICollection`1<PathString> get_CorsPaths();
    [CompilerGeneratedAttribute]
public void set_CorsPaths(ICollection`1<PathString> value);
}
public static class IdentityServer4.Configuration.CryptoHelper : object {
    public static RsaSecurityKey CreateRsaSecurityKey(int keySize);
    public static ECDsaSecurityKey CreateECDsaSecurityKey(string curve);
    public static RsaSecurityKey CreateRsaSecurityKey(RSAParameters parameters, string id);
    public static string CreateHashClaimValue(string value, string tokenSigningAlgorithm);
    public static HashAlgorithm GetHashAlgorithmForSigningAlgorithm(string signingAlgorithm);
    internal static ECCurve GetCurveFromCrvValue(string crv);
    internal static string GetCrvValueFromCurve(ECCurve curve);
    internal static bool IsValidCurveForAlgorithm(ECDsaSecurityKey key, string algorithm);
    internal static bool IsValidCrvValueForAlgorithm(string crv);
    internal static string GetRsaSigningAlgorithmValue(RsaSigningAlgorithm value);
    internal static string GetECDsaSigningAlgorithmValue(ECDsaSigningAlgorithm value);
    internal static X509Certificate2 FindCertificate(string name, StoreLocation location, NameType nameType);
}
public class IdentityServer4.Configuration.CspOptions : object {
    [CompilerGeneratedAttribute]
private CspLevel <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AddDeprecatedHeader>k__BackingField;
    public CspLevel Level { get; public set; }
    public bool AddDeprecatedHeader { get; public set; }
    [CompilerGeneratedAttribute]
public CspLevel get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(CspLevel value);
    [CompilerGeneratedAttribute]
public bool get_AddDeprecatedHeader();
    [CompilerGeneratedAttribute]
public void set_AddDeprecatedHeader(bool value);
}
internal class IdentityServer4.Configuration.DependencyInjection.Decorator`1 : object {
    [CompilerGeneratedAttribute]
private TService <Instance>k__BackingField;
    public TService Instance { get; public set; }
    public Decorator`1(TService instance);
    [CompilerGeneratedAttribute]
public TService get_Instance();
    [CompilerGeneratedAttribute]
public void set_Instance(TService value);
}
internal class IdentityServer4.Configuration.DependencyInjection.Decorator`2 : Decorator`1<TService> {
    public Decorator`2(TImpl instance);
}
internal class IdentityServer4.Configuration.DependencyInjection.DisposableDecorator`1 : Decorator`1<TService> {
    public DisposableDecorator`1(TService instance);
    public sealed virtual void Dispose();
}
public class IdentityServer4.Configuration.DeviceFlowOptions : object {
    [CompilerGeneratedAttribute]
private string <DefaultUserCodeType>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Interval>k__BackingField;
    public string DefaultUserCodeType { get; public set; }
    public int Interval { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DefaultUserCodeType();
    [CompilerGeneratedAttribute]
public void set_DefaultUserCodeType(string value);
    [CompilerGeneratedAttribute]
public int get_Interval();
    [CompilerGeneratedAttribute]
public void set_Interval(int value);
}
public class IdentityServer4.Configuration.DiscoveryOptions : object {
    [CompilerGeneratedAttribute]
private bool <ShowEndpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowKeySet>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowIdentityScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowApiScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowClaims>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowResponseTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowResponseModes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowGrantTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowExtensionGrantTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowTokenEndpointAuthenticationMethods>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExpandRelativePathsInCustomEntries>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ResponseCacheInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <CustomEntries>k__BackingField;
    public bool ShowEndpoints { get; public set; }
    public bool ShowKeySet { get; public set; }
    public bool ShowIdentityScopes { get; public set; }
    public bool ShowApiScopes { get; public set; }
    public bool ShowClaims { get; public set; }
    public bool ShowResponseTypes { get; public set; }
    public bool ShowResponseModes { get; public set; }
    public bool ShowGrantTypes { get; public set; }
    public bool ShowExtensionGrantTypes { get; public set; }
    public bool ShowTokenEndpointAuthenticationMethods { get; public set; }
    public bool ExpandRelativePathsInCustomEntries { get; public set; }
    public Nullable`1<int> ResponseCacheInterval { get; public set; }
    public Dictionary`2<string, object> CustomEntries { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_ShowEndpoints();
    [CompilerGeneratedAttribute]
public void set_ShowEndpoints(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowKeySet();
    [CompilerGeneratedAttribute]
public void set_ShowKeySet(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowIdentityScopes();
    [CompilerGeneratedAttribute]
public void set_ShowIdentityScopes(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowApiScopes();
    [CompilerGeneratedAttribute]
public void set_ShowApiScopes(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowClaims();
    [CompilerGeneratedAttribute]
public void set_ShowClaims(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowResponseTypes();
    [CompilerGeneratedAttribute]
public void set_ShowResponseTypes(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowResponseModes();
    [CompilerGeneratedAttribute]
public void set_ShowResponseModes(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowGrantTypes();
    [CompilerGeneratedAttribute]
public void set_ShowGrantTypes(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowExtensionGrantTypes();
    [CompilerGeneratedAttribute]
public void set_ShowExtensionGrantTypes(bool value);
    [CompilerGeneratedAttribute]
public bool get_ShowTokenEndpointAuthenticationMethods();
    [CompilerGeneratedAttribute]
public void set_ShowTokenEndpointAuthenticationMethods(bool value);
    [CompilerGeneratedAttribute]
public bool get_ExpandRelativePathsInCustomEntries();
    [CompilerGeneratedAttribute]
public void set_ExpandRelativePathsInCustomEntries(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ResponseCacheInterval();
    [CompilerGeneratedAttribute]
public void set_ResponseCacheInterval(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_CustomEntries();
    [CompilerGeneratedAttribute]
public void set_CustomEntries(Dictionary`2<string, object> value);
}
public class IdentityServer4.Configuration.EndpointsOptions : object {
    [CompilerGeneratedAttribute]
private bool <EnableAuthorizeEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableJwtRequestUri>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableTokenEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableUserInfoEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableDiscoveryEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableEndSessionEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableCheckSessionEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableTokenRevocationEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableIntrospectionEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableDeviceAuthorizationEndpoint>k__BackingField;
    public bool EnableAuthorizeEndpoint { get; public set; }
    public bool EnableJwtRequestUri { get; public set; }
    public bool EnableTokenEndpoint { get; public set; }
    public bool EnableUserInfoEndpoint { get; public set; }
    public bool EnableDiscoveryEndpoint { get; public set; }
    public bool EnableEndSessionEndpoint { get; public set; }
    public bool EnableCheckSessionEndpoint { get; public set; }
    public bool EnableTokenRevocationEndpoint { get; public set; }
    public bool EnableIntrospectionEndpoint { get; public set; }
    public bool EnableDeviceAuthorizationEndpoint { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_EnableAuthorizeEndpoint();
    [CompilerGeneratedAttribute]
public void set_EnableAuthorizeEndpoint(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableJwtRequestUri();
    [CompilerGeneratedAttribute]
public void set_EnableJwtRequestUri(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableTokenEndpoint();
    [CompilerGeneratedAttribute]
public void set_EnableTokenEndpoint(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableUserInfoEndpoint();
    [CompilerGeneratedAttribute]
public void set_EnableUserInfoEndpoint(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableDiscoveryEndpoint();
    [CompilerGeneratedAttribute]
public void set_EnableDiscoveryEndpoint(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableEndSessionEndpoint();
    [CompilerGeneratedAttribute]
public void set_EnableEndSessionEndpoint(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableCheckSessionEndpoint();
    [CompilerGeneratedAttribute]
public void set_EnableCheckSessionEndpoint(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableTokenRevocationEndpoint();
    [CompilerGeneratedAttribute]
public void set_EnableTokenRevocationEndpoint(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableIntrospectionEndpoint();
    [CompilerGeneratedAttribute]
public void set_EnableIntrospectionEndpoint(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableDeviceAuthorizationEndpoint();
    [CompilerGeneratedAttribute]
public void set_EnableDeviceAuthorizationEndpoint(bool value);
}
public class IdentityServer4.Configuration.EventsOptions : object {
    [CompilerGeneratedAttribute]
private bool <RaiseSuccessEvents>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RaiseFailureEvents>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RaiseInformationEvents>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RaiseErrorEvents>k__BackingField;
    public bool RaiseSuccessEvents { get; public set; }
    public bool RaiseFailureEvents { get; public set; }
    public bool RaiseInformationEvents { get; public set; }
    public bool RaiseErrorEvents { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_RaiseSuccessEvents();
    [CompilerGeneratedAttribute]
public void set_RaiseSuccessEvents(bool value);
    [CompilerGeneratedAttribute]
public bool get_RaiseFailureEvents();
    [CompilerGeneratedAttribute]
public void set_RaiseFailureEvents(bool value);
    [CompilerGeneratedAttribute]
public bool get_RaiseInformationEvents();
    [CompilerGeneratedAttribute]
public void set_RaiseInformationEvents(bool value);
    [CompilerGeneratedAttribute]
public bool get_RaiseErrorEvents();
    [CompilerGeneratedAttribute]
public void set_RaiseErrorEvents(bool value);
}
public class IdentityServer4.Configuration.IdentityServerBuilder : object {
    [CompilerGeneratedAttribute]
private IServiceCollection <Services>k__BackingField;
    public IServiceCollection Services { get; }
    public IdentityServerBuilder(IServiceCollection services);
    [CompilerGeneratedAttribute]
public sealed virtual IServiceCollection get_Services();
}
public class IdentityServer4.Configuration.IdentityServerOptions : object {
    [CompilerGeneratedAttribute]
private string <IssuerUri>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LowerCaseIssuerUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessTokenJwtType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EmitStaticAudienceClaim>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EmitScopesAsSpaceDelimitedStringInJwt>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <StrictJarValidation>k__BackingField;
    [CompilerGeneratedAttribute]
private EndpointsOptions <Endpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private DiscoveryOptions <Discovery>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthenticationOptions <Authentication>k__BackingField;
    [CompilerGeneratedAttribute]
private EventsOptions <Events>k__BackingField;
    [CompilerGeneratedAttribute]
private InputLengthRestrictions <InputLengthRestrictions>k__BackingField;
    [CompilerGeneratedAttribute]
private UserInteractionOptions <UserInteraction>k__BackingField;
    [CompilerGeneratedAttribute]
private CachingOptions <Caching>k__BackingField;
    [CompilerGeneratedAttribute]
private CorsOptions <Cors>k__BackingField;
    [CompilerGeneratedAttribute]
private CspOptions <Csp>k__BackingField;
    [CompilerGeneratedAttribute]
private ValidationOptions <Validation>k__BackingField;
    [CompilerGeneratedAttribute]
private DeviceFlowOptions <DeviceFlow>k__BackingField;
    [CompilerGeneratedAttribute]
private LoggingOptions <Logging>k__BackingField;
    [CompilerGeneratedAttribute]
private MutualTlsOptions <MutualTls>k__BackingField;
    public string IssuerUri { get; public set; }
    public bool LowerCaseIssuerUri { get; public set; }
    public string AccessTokenJwtType { get; public set; }
    public bool EmitStaticAudienceClaim { get; public set; }
    public bool EmitScopesAsSpaceDelimitedStringInJwt { get; public set; }
    public bool StrictJarValidation { get; public set; }
    public EndpointsOptions Endpoints { get; public set; }
    public DiscoveryOptions Discovery { get; public set; }
    public AuthenticationOptions Authentication { get; public set; }
    public EventsOptions Events { get; public set; }
    public InputLengthRestrictions InputLengthRestrictions { get; public set; }
    public UserInteractionOptions UserInteraction { get; public set; }
    public CachingOptions Caching { get; public set; }
    public CorsOptions Cors { get; public set; }
    public CspOptions Csp { get; public set; }
    public ValidationOptions Validation { get; public set; }
    public DeviceFlowOptions DeviceFlow { get; public set; }
    public LoggingOptions Logging { get; public set; }
    public MutualTlsOptions MutualTls { get; public set; }
    [CompilerGeneratedAttribute]
public string get_IssuerUri();
    [CompilerGeneratedAttribute]
public void set_IssuerUri(string value);
    [CompilerGeneratedAttribute]
public bool get_LowerCaseIssuerUri();
    [CompilerGeneratedAttribute]
public void set_LowerCaseIssuerUri(bool value);
    [CompilerGeneratedAttribute]
public string get_AccessTokenJwtType();
    [CompilerGeneratedAttribute]
public void set_AccessTokenJwtType(string value);
    [CompilerGeneratedAttribute]
public bool get_EmitStaticAudienceClaim();
    [CompilerGeneratedAttribute]
public void set_EmitStaticAudienceClaim(bool value);
    [CompilerGeneratedAttribute]
public bool get_EmitScopesAsSpaceDelimitedStringInJwt();
    [CompilerGeneratedAttribute]
public void set_EmitScopesAsSpaceDelimitedStringInJwt(bool value);
    [CompilerGeneratedAttribute]
public bool get_StrictJarValidation();
    [CompilerGeneratedAttribute]
public void set_StrictJarValidation(bool value);
    [CompilerGeneratedAttribute]
public EndpointsOptions get_Endpoints();
    [CompilerGeneratedAttribute]
public void set_Endpoints(EndpointsOptions value);
    [CompilerGeneratedAttribute]
public DiscoveryOptions get_Discovery();
    [CompilerGeneratedAttribute]
public void set_Discovery(DiscoveryOptions value);
    [CompilerGeneratedAttribute]
public AuthenticationOptions get_Authentication();
    [CompilerGeneratedAttribute]
public void set_Authentication(AuthenticationOptions value);
    [CompilerGeneratedAttribute]
public EventsOptions get_Events();
    [CompilerGeneratedAttribute]
public void set_Events(EventsOptions value);
    [CompilerGeneratedAttribute]
public InputLengthRestrictions get_InputLengthRestrictions();
    [CompilerGeneratedAttribute]
public void set_InputLengthRestrictions(InputLengthRestrictions value);
    [CompilerGeneratedAttribute]
public UserInteractionOptions get_UserInteraction();
    [CompilerGeneratedAttribute]
public void set_UserInteraction(UserInteractionOptions value);
    [CompilerGeneratedAttribute]
public CachingOptions get_Caching();
    [CompilerGeneratedAttribute]
public void set_Caching(CachingOptions value);
    [CompilerGeneratedAttribute]
public CorsOptions get_Cors();
    [CompilerGeneratedAttribute]
public void set_Cors(CorsOptions value);
    [CompilerGeneratedAttribute]
public CspOptions get_Csp();
    [CompilerGeneratedAttribute]
public void set_Csp(CspOptions value);
    [CompilerGeneratedAttribute]
public ValidationOptions get_Validation();
    [CompilerGeneratedAttribute]
public void set_Validation(ValidationOptions value);
    [CompilerGeneratedAttribute]
public DeviceFlowOptions get_DeviceFlow();
    [CompilerGeneratedAttribute]
public void set_DeviceFlow(DeviceFlowOptions value);
    [CompilerGeneratedAttribute]
public LoggingOptions get_Logging();
    [CompilerGeneratedAttribute]
public void set_Logging(LoggingOptions value);
    [CompilerGeneratedAttribute]
public MutualTlsOptions get_MutualTls();
    [CompilerGeneratedAttribute]
public void set_MutualTls(MutualTlsOptions value);
}
public class IdentityServer4.Configuration.InputLengthRestrictions : object {
    private static int Default;
    [CompilerGeneratedAttribute]
private int <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ClientSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RedirectUri>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Nonce>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UiLocale>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LoginHint>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AcrValues>k__BackingField;
    [CompilerGeneratedAttribute]
private int <GrantType>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UserName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CspReport>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IdentityProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ExternalError>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AuthorizationCode>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DeviceCode>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RefreshToken>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TokenHandle>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Jwt>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CodeChallengeMinLength>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CodeChallengeMaxLength>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CodeVerifierMinLength>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CodeVerifierMaxLength>k__BackingField;
    public int ClientId { get; public set; }
    public int ClientSecret { get; public set; }
    public int Scope { get; public set; }
    public int RedirectUri { get; public set; }
    public int Nonce { get; public set; }
    public int UiLocale { get; public set; }
    public int LoginHint { get; public set; }
    public int AcrValues { get; public set; }
    public int GrantType { get; public set; }
    public int UserName { get; public set; }
    public int Password { get; public set; }
    public int CspReport { get; public set; }
    public int IdentityProvider { get; public set; }
    public int ExternalError { get; public set; }
    public int AuthorizationCode { get; public set; }
    public int DeviceCode { get; public set; }
    public int RefreshToken { get; public set; }
    public int TokenHandle { get; public set; }
    public int Jwt { get; public set; }
    public int CodeChallengeMinLength { get; }
    public int CodeChallengeMaxLength { get; }
    public int CodeVerifierMinLength { get; }
    public int CodeVerifierMaxLength { get; }
    [CompilerGeneratedAttribute]
public int get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(int value);
    [CompilerGeneratedAttribute]
public int get_ClientSecret();
    [CompilerGeneratedAttribute]
public void set_ClientSecret(int value);
    [CompilerGeneratedAttribute]
public int get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(int value);
    [CompilerGeneratedAttribute]
public int get_RedirectUri();
    [CompilerGeneratedAttribute]
public void set_RedirectUri(int value);
    [CompilerGeneratedAttribute]
public int get_Nonce();
    [CompilerGeneratedAttribute]
public void set_Nonce(int value);
    [CompilerGeneratedAttribute]
public int get_UiLocale();
    [CompilerGeneratedAttribute]
public void set_UiLocale(int value);
    [CompilerGeneratedAttribute]
public int get_LoginHint();
    [CompilerGeneratedAttribute]
public void set_LoginHint(int value);
    [CompilerGeneratedAttribute]
public int get_AcrValues();
    [CompilerGeneratedAttribute]
public void set_AcrValues(int value);
    [CompilerGeneratedAttribute]
public int get_GrantType();
    [CompilerGeneratedAttribute]
public void set_GrantType(int value);
    [CompilerGeneratedAttribute]
public int get_UserName();
    [CompilerGeneratedAttribute]
public void set_UserName(int value);
    [CompilerGeneratedAttribute]
public int get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(int value);
    [CompilerGeneratedAttribute]
public int get_CspReport();
    [CompilerGeneratedAttribute]
public void set_CspReport(int value);
    [CompilerGeneratedAttribute]
public int get_IdentityProvider();
    [CompilerGeneratedAttribute]
public void set_IdentityProvider(int value);
    [CompilerGeneratedAttribute]
public int get_ExternalError();
    [CompilerGeneratedAttribute]
public void set_ExternalError(int value);
    [CompilerGeneratedAttribute]
public int get_AuthorizationCode();
    [CompilerGeneratedAttribute]
public void set_AuthorizationCode(int value);
    [CompilerGeneratedAttribute]
public int get_DeviceCode();
    [CompilerGeneratedAttribute]
public void set_DeviceCode(int value);
    [CompilerGeneratedAttribute]
public int get_RefreshToken();
    [CompilerGeneratedAttribute]
public void set_RefreshToken(int value);
    [CompilerGeneratedAttribute]
public int get_TokenHandle();
    [CompilerGeneratedAttribute]
public void set_TokenHandle(int value);
    [CompilerGeneratedAttribute]
public int get_Jwt();
    [CompilerGeneratedAttribute]
public void set_Jwt(int value);
    [CompilerGeneratedAttribute]
public int get_CodeChallengeMinLength();
    [CompilerGeneratedAttribute]
public int get_CodeChallengeMaxLength();
    [CompilerGeneratedAttribute]
public int get_CodeVerifierMinLength();
    [CompilerGeneratedAttribute]
public int get_CodeVerifierMaxLength();
}
public class IdentityServer4.Configuration.LoggingOptions : object {
    [CompilerGeneratedAttribute]
private ICollection`1<string> <TokenRequestSensitiveValuesFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <AuthorizeRequestSensitiveValuesFilter>k__BackingField;
    public ICollection`1<string> TokenRequestSensitiveValuesFilter { get; public set; }
    public ICollection`1<string> AuthorizeRequestSensitiveValuesFilter { get; public set; }
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_TokenRequestSensitiveValuesFilter();
    [CompilerGeneratedAttribute]
public void set_TokenRequestSensitiveValuesFilter(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_AuthorizeRequestSensitiveValuesFilter();
    [CompilerGeneratedAttribute]
public void set_AuthorizeRequestSensitiveValuesFilter(ICollection`1<string> value);
}
public class IdentityServer4.Configuration.MutualTlsOptions : object {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientCertificateAuthenticationScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DomainName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AlwaysEmitConfirmationClaim>k__BackingField;
    public bool Enabled { get; public set; }
    public string ClientCertificateAuthenticationScheme { get; public set; }
    public string DomainName { get; public set; }
    public bool AlwaysEmitConfirmationClaim { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public string get_ClientCertificateAuthenticationScheme();
    [CompilerGeneratedAttribute]
public void set_ClientCertificateAuthenticationScheme(string value);
    [CompilerGeneratedAttribute]
public string get_DomainName();
    [CompilerGeneratedAttribute]
public void set_DomainName(string value);
    [CompilerGeneratedAttribute]
public bool get_AlwaysEmitConfirmationClaim();
    [CompilerGeneratedAttribute]
public void set_AlwaysEmitConfirmationClaim(bool value);
}
public enum IdentityServer4.Configuration.NameType : Enum {
    public int value__;
    public static NameType SubjectDistinguishedName;
    public static NameType Thumbprint;
}
internal class IdentityServer4.Configuration.PostConfigureInternalCookieOptions : object {
    private IdentityServerOptions _idsrv;
    private IOptions`1<AuthenticationOptions> _authOptions;
    private ILogger _logger;
    public PostConfigureInternalCookieOptions(IdentityServerOptions idsrv, IOptions`1<AuthenticationOptions> authOptions, ILoggerFactory loggerFactory);
    public sealed virtual void PostConfigure(string name, CookieAuthenticationOptions options);
}
public class IdentityServer4.Configuration.UserInteractionOptions : object {
    [CompilerGeneratedAttribute]
private string <LoginUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LoginReturnUrlParameter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LogoutUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LogoutIdParameter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConsentUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConsentReturnUrlParameter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorIdParameter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomRedirectReturnUrlParameter>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CookieMessageThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeviceVerificationUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeviceVerificationUserCodeParameter>k__BackingField;
    public string LoginUrl { get; public set; }
    public string LoginReturnUrlParameter { get; public set; }
    public string LogoutUrl { get; public set; }
    public string LogoutIdParameter { get; public set; }
    public string ConsentUrl { get; public set; }
    public string ConsentReturnUrlParameter { get; public set; }
    public string ErrorUrl { get; public set; }
    public string ErrorIdParameter { get; public set; }
    public string CustomRedirectReturnUrlParameter { get; public set; }
    public int CookieMessageThreshold { get; public set; }
    public string DeviceVerificationUrl { get; public set; }
    public string DeviceVerificationUserCodeParameter { get; public set; }
    [CompilerGeneratedAttribute]
public string get_LoginUrl();
    [CompilerGeneratedAttribute]
public void set_LoginUrl(string value);
    [CompilerGeneratedAttribute]
public string get_LoginReturnUrlParameter();
    [CompilerGeneratedAttribute]
public void set_LoginReturnUrlParameter(string value);
    [CompilerGeneratedAttribute]
public string get_LogoutUrl();
    [CompilerGeneratedAttribute]
public void set_LogoutUrl(string value);
    [CompilerGeneratedAttribute]
public string get_LogoutIdParameter();
    [CompilerGeneratedAttribute]
public void set_LogoutIdParameter(string value);
    [CompilerGeneratedAttribute]
public string get_ConsentUrl();
    [CompilerGeneratedAttribute]
public void set_ConsentUrl(string value);
    [CompilerGeneratedAttribute]
public string get_ConsentReturnUrlParameter();
    [CompilerGeneratedAttribute]
public void set_ConsentReturnUrlParameter(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorUrl();
    [CompilerGeneratedAttribute]
public void set_ErrorUrl(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorIdParameter();
    [CompilerGeneratedAttribute]
public void set_ErrorIdParameter(string value);
    [CompilerGeneratedAttribute]
public string get_CustomRedirectReturnUrlParameter();
    [CompilerGeneratedAttribute]
public void set_CustomRedirectReturnUrlParameter(string value);
    [CompilerGeneratedAttribute]
public int get_CookieMessageThreshold();
    [CompilerGeneratedAttribute]
public void set_CookieMessageThreshold(int value);
    [CompilerGeneratedAttribute]
public string get_DeviceVerificationUrl();
    [CompilerGeneratedAttribute]
public void set_DeviceVerificationUrl(string value);
    [CompilerGeneratedAttribute]
public string get_DeviceVerificationUserCodeParameter();
    [CompilerGeneratedAttribute]
public void set_DeviceVerificationUserCodeParameter(string value);
}
public class IdentityServer4.Configuration.ValidationOptions : object {
    [CompilerGeneratedAttribute]
private ICollection`1<string> <InvalidRedirectUriPrefixes>k__BackingField;
    public ICollection`1<string> InvalidRedirectUriPrefixes { get; }
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_InvalidRedirectUriPrefixes();
}
internal static class IdentityServer4.Constants : object {
    public static string IdentityServerName;
    public static string IdentityServerAuthenticationType;
    public static string ExternalAuthenticationMethod;
    public static string DefaultHashAlgorithm;
    public static TimeSpan DefaultCookieTimeSpan;
    public static TimeSpan DefaultCacheDuration;
    public static List`1<string> SupportedResponseTypes;
    public static Dictionary`2<string, string> ResponseTypeToGrantTypeMapping;
    public static List`1<string> AllowedGrantTypesForAuthorizeEndpoint;
    public static List`1<string> SupportedCodeChallengeMethods;
    public static Dictionary`2<string, ScopeRequirement> ResponseTypeToScopeRequirement;
    public static Dictionary`2<string, IEnumerable`1<string>> AllowedResponseModesForGrantType;
    public static List`1<string> SupportedResponseModes;
    public static String[] SupportedSubjectTypes;
    public static List`1<string> SupportedDisplayModes;
    public static List`1<string> SupportedPromptModes;
    public static Dictionary`2<string, int> ProtectedResourceErrorStatusCodes;
    public static Dictionary`2<string, IEnumerable`1<string>> ScopeToClaimsMapping;
    public static List`1<string> SupportedTokenTypeHints;
    private static Constants();
}
internal class IdentityServer4.Endpoints.AuthorizeCallbackEndpoint : AuthorizeEndpointBase {
    private IConsentMessageStore _consentResponseStore;
    private IAuthorizationParametersMessageStore _authorizationParametersMessageStore;
    public AuthorizeCallbackEndpoint(IEventService events, ILogger`1<AuthorizeCallbackEndpoint> logger, IdentityServerOptions options, IAuthorizeRequestValidator validator, IAuthorizeInteractionResponseGenerator interactionGenerator, IAuthorizeResponseGenerator authorizeResponseGenerator, IUserSession userSession, IConsentMessageStore consentResponseStore, IAuthorizationParametersMessageStore authorizationParametersMessageStore);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.AuthorizeCallbackEndpoint/<ProcessAsync>d__3")]
public virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
}
internal class IdentityServer4.Endpoints.AuthorizeEndpoint : AuthorizeEndpointBase {
    public AuthorizeEndpoint(IEventService events, ILogger`1<AuthorizeEndpoint> logger, IdentityServerOptions options, IAuthorizeRequestValidator validator, IAuthorizeInteractionResponseGenerator interactionGenerator, IAuthorizeResponseGenerator authorizeResponseGenerator, IUserSession userSession);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.AuthorizeEndpoint/<ProcessAsync>d__1")]
public virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
}
internal abstract class IdentityServer4.Endpoints.AuthorizeEndpointBase : object {
    private IAuthorizeResponseGenerator _authorizeResponseGenerator;
    private IEventService _events;
    private IdentityServerOptions _options;
    private IAuthorizeInteractionResponseGenerator _interactionGenerator;
    private IAuthorizeRequestValidator _validator;
    [CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserSession <UserSession>k__BackingField;
    protected ILogger Logger { get; private set; }
    protected IUserSession UserSession { get; private set; }
    protected AuthorizeEndpointBase(IEventService events, ILogger`1<AuthorizeEndpointBase> logger, IdentityServerOptions options, IAuthorizeRequestValidator validator, IAuthorizeInteractionResponseGenerator interactionGenerator, IAuthorizeResponseGenerator authorizeResponseGenerator, IUserSession userSession);
    [CompilerGeneratedAttribute]
protected ILogger get_Logger();
    [CompilerGeneratedAttribute]
private void set_Logger(ILogger value);
    [CompilerGeneratedAttribute]
protected IUserSession get_UserSession();
    [CompilerGeneratedAttribute]
private void set_UserSession(IUserSession value);
    public abstract virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.AuthorizeEndpointBase/<ProcessAuthorizeRequestAsync>d__15")]
internal Task`1<IEndpointResult> ProcessAuthorizeRequestAsync(NameValueCollection parameters, ClaimsPrincipal user, ConsentResponse consent);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.AuthorizeEndpointBase/<CreateErrorResultAsync>d__16")]
protected Task`1<IEndpointResult> CreateErrorResultAsync(string logMessage, ValidatedAuthorizeRequest request, string error, string errorDescription, bool logError);
    private void LogRequest(ValidatedAuthorizeRequest request);
    private void LogResponse(AuthorizeResponse response);
    private void LogTokens(AuthorizeResponse response);
    private Task RaiseFailureEventAsync(ValidatedAuthorizeRequest request, string error, string errorDescription);
    private Task RaiseResponseEventAsync(AuthorizeResponse response);
}
internal class IdentityServer4.Endpoints.CheckSessionEndpoint : object {
    private ILogger _logger;
    public CheckSessionEndpoint(ILogger`1<CheckSessionEndpoint> logger);
    public sealed virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
}
internal class IdentityServer4.Endpoints.DeviceAuthorizationEndpoint : object {
    private IClientSecretValidator _clientValidator;
    private IDeviceAuthorizationRequestValidator _requestValidator;
    private IDeviceAuthorizationResponseGenerator _responseGenerator;
    private IEventService _events;
    private ILogger`1<DeviceAuthorizationEndpoint> _logger;
    public DeviceAuthorizationEndpoint(IClientSecretValidator clientValidator, IDeviceAuthorizationRequestValidator requestValidator, IDeviceAuthorizationResponseGenerator responseGenerator, IEventService events, ILogger`1<DeviceAuthorizationEndpoint> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.DeviceAuthorizationEndpoint/<ProcessAsync>d__6")]
public sealed virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.DeviceAuthorizationEndpoint/<ProcessDeviceAuthorizationRequestAsync>d__7")]
private Task`1<IEndpointResult> ProcessDeviceAuthorizationRequestAsync(HttpContext context);
    private TokenErrorResult Error(string error, string errorDescription, Dictionary`2<string, object> custom);
    private void LogResponse(DeviceAuthorizationResponse response, DeviceAuthorizationRequestValidationResult requestResult);
}
internal class IdentityServer4.Endpoints.DiscoveryEndpoint : object {
    private ILogger _logger;
    private IdentityServerOptions _options;
    private IDiscoveryResponseGenerator _responseGenerator;
    public DiscoveryEndpoint(IdentityServerOptions options, IDiscoveryResponseGenerator responseGenerator, ILogger`1<DiscoveryEndpoint> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.DiscoveryEndpoint/<ProcessAsync>d__4")]
public sealed virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
}
internal class IdentityServer4.Endpoints.DiscoveryKeyEndpoint : object {
    private ILogger _logger;
    private IdentityServerOptions _options;
    private IDiscoveryResponseGenerator _responseGenerator;
    public DiscoveryKeyEndpoint(IdentityServerOptions options, IDiscoveryResponseGenerator responseGenerator, ILogger`1<DiscoveryKeyEndpoint> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.DiscoveryKeyEndpoint/<ProcessAsync>d__4")]
public sealed virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
}
internal class IdentityServer4.Endpoints.EndSessionCallbackEndpoint : object {
    private IEndSessionRequestValidator _endSessionRequestValidator;
    private ILogger _logger;
    public EndSessionCallbackEndpoint(IEndSessionRequestValidator endSessionRequestValidator, ILogger`1<EndSessionCallbackEndpoint> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.EndSessionCallbackEndpoint/<ProcessAsync>d__3")]
public sealed virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
}
internal class IdentityServer4.Endpoints.EndSessionEndpoint : object {
    private IEndSessionRequestValidator _endSessionRequestValidator;
    private ILogger _logger;
    private IUserSession _userSession;
    public EndSessionEndpoint(IEndSessionRequestValidator endSessionRequestValidator, IUserSession userSession, ILogger`1<EndSessionEndpoint> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.EndSessionEndpoint/<ProcessAsync>d__4")]
public sealed virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
}
internal class IdentityServer4.Endpoints.IntrospectionEndpoint : object {
    private IIntrospectionResponseGenerator _responseGenerator;
    private IEventService _events;
    private ILogger _logger;
    private IIntrospectionRequestValidator _requestValidator;
    private IApiSecretValidator _apiSecretValidator;
    public IntrospectionEndpoint(IApiSecretValidator apiSecretValidator, IIntrospectionRequestValidator requestValidator, IIntrospectionResponseGenerator responseGenerator, IEventService events, ILogger`1<IntrospectionEndpoint> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.IntrospectionEndpoint/<ProcessAsync>d__6")]
public sealed virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.IntrospectionEndpoint/<ProcessIntrospectionRequestAsync>d__7")]
private Task`1<IEndpointResult> ProcessIntrospectionRequestAsync(HttpContext context);
    private void LogSuccess(bool tokenActive, string apiName);
    private void LogFailure(string error, string apiName);
}
internal class IdentityServer4.Endpoints.Results.AuthorizeResult : object {
    [CompilerGeneratedAttribute]
private AuthorizeResponse <Response>k__BackingField;
    private IdentityServerOptions _options;
    private IUserSession _userSession;
    private IMessageStore`1<ErrorMessage> _errorMessageStore;
    private ISystemClock _clock;
    private static string FormPostHtml;
    public AuthorizeResponse Response { get; }
    public AuthorizeResult(AuthorizeResponse response);
    internal AuthorizeResult(AuthorizeResponse response, IdentityServerOptions options, IUserSession userSession, IMessageStore`1<ErrorMessage> errorMessageStore, ISystemClock clock);
    [CompilerGeneratedAttribute]
public AuthorizeResponse get_Response();
    private void Init(HttpContext context);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.Results.AuthorizeResult/<ExecuteAsync>d__10")]
public sealed virtual Task ExecuteAsync(HttpContext context);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.Results.AuthorizeResult/<ProcessErrorAsync>d__11")]
private Task ProcessErrorAsync(HttpContext context);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.Results.AuthorizeResult/<ProcessResponseAsync>d__12")]
protected Task ProcessResponseAsync(HttpContext context);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.Results.AuthorizeResult/<RenderAuthorizeResponseAsync>d__13")]
private Task RenderAuthorizeResponseAsync(HttpContext context);
    private void AddSecurityHeaders(HttpContext context);
    private string BuildRedirectUri();
    private string GetFormPostHtml();
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.Results.AuthorizeResult/<RedirectToErrorPageAsync>d__18")]
private Task RedirectToErrorPageAsync(HttpContext context);
}
internal class IdentityServer4.Endpoints.Results.BadRequestResult : object {
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    public string Error { get; public set; }
    public string ErrorDescription { get; public set; }
    public BadRequestResult(string error, string errorDescription);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.Results.BadRequestResult/<ExecuteAsync>d__9")]
public sealed virtual Task ExecuteAsync(HttpContext context);
}
internal class IdentityServer4.Endpoints.Results.CheckSessionResult : object {
    private IdentityServerOptions _options;
    private static String modreq(System.Runtime.CompilerServices.IsVolatile) FormattedHtml;
    private static object Lock;
    private static String modreq(System.Runtime.CompilerServices.IsVolatile) LastCheckSessionCookieName;
    private static string Html;
    internal CheckSessionResult(IdentityServerOptions options);
    private static CheckSessionResult();
    private void Init(HttpContext context);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.Results.CheckSessionResult/<ExecuteAsync>d__7")]
public sealed virtual Task ExecuteAsync(HttpContext context);
    private void AddCspHeaders(HttpContext context);
    private string GetHtml(string cookieName);
}
public class IdentityServer4.Endpoints.Results.ConsentPageResult : object {
    private ValidatedAuthorizeRequest _request;
    private IdentityServerOptions _options;
    private IAuthorizationParametersMessageStore _authorizationParametersMessageStore;
    public ConsentPageResult(ValidatedAuthorizeRequest request);
    internal ConsentPageResult(ValidatedAuthorizeRequest request, IdentityServerOptions options, IAuthorizationParametersMessageStore authorizationParametersMessageStore);
    private void Init(HttpContext context);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.Results.ConsentPageResult/<ExecuteAsync>d__6")]
public sealed virtual Task ExecuteAsync(HttpContext context);
}
public class IdentityServer4.Endpoints.Results.CustomRedirectResult : object {
    private ValidatedAuthorizeRequest _request;
    private string _url;
    private IdentityServerOptions _options;
    public CustomRedirectResult(ValidatedAuthorizeRequest request, string url);
    internal CustomRedirectResult(ValidatedAuthorizeRequest request, string url, IdentityServerOptions options);
    private void Init(HttpContext context);
    public sealed virtual Task ExecuteAsync(HttpContext context);
}
internal class IdentityServer4.Endpoints.Results.DeviceAuthorizationResult : object {
    [CompilerGeneratedAttribute]
private DeviceAuthorizationResponse <Response>k__BackingField;
    public DeviceAuthorizationResponse Response { get; }
    public DeviceAuthorizationResult(DeviceAuthorizationResponse response);
    [CompilerGeneratedAttribute]
public DeviceAuthorizationResponse get_Response();
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.Results.DeviceAuthorizationResult/<ExecuteAsync>d__4")]
public sealed virtual Task ExecuteAsync(HttpContext context);
}
public class IdentityServer4.Endpoints.Results.DiscoveryDocumentResult : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Entries>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxAge>k__BackingField;
    public Dictionary`2<string, object> Entries { get; }
    public Nullable`1<int> MaxAge { get; }
    public DiscoveryDocumentResult(Dictionary`2<string, object> entries, Nullable`1<int> maxAge);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Entries();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxAge();
    public sealed virtual Task ExecuteAsync(HttpContext context);
}
internal class IdentityServer4.Endpoints.Results.EndSessionCallbackResult : object {
    private EndSessionCallbackValidationResult _result;
    private IdentityServerOptions _options;
    public EndSessionCallbackResult(EndSessionCallbackValidationResult result);
    internal EndSessionCallbackResult(EndSessionCallbackValidationResult result, IdentityServerOptions options);
    private void Init(HttpContext context);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.Results.EndSessionCallbackResult/<ExecuteAsync>d__5")]
public sealed virtual Task ExecuteAsync(HttpContext context);
    private void AddCspHeaders(HttpContext context);
    private string GetHtml();
}
public class IdentityServer4.Endpoints.Results.EndSessionResult : object {
    private EndSessionValidationResult _result;
    private IdentityServerOptions _options;
    private ISystemClock _clock;
    private IMessageStore`1<LogoutMessage> _logoutMessageStore;
    public EndSessionResult(EndSessionValidationResult result);
    internal EndSessionResult(EndSessionValidationResult result, IdentityServerOptions options, ISystemClock clock, IMessageStore`1<LogoutMessage> logoutMessageStore);
    private void Init(HttpContext context);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.Results.EndSessionResult/<ExecuteAsync>d__7")]
public sealed virtual Task ExecuteAsync(HttpContext context);
}
public class IdentityServer4.Endpoints.Results.IntrospectionResult : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Entries>k__BackingField;
    public Dictionary`2<string, object> Entries { get; }
    public IntrospectionResult(Dictionary`2<string, object> entries);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Entries();
    public sealed virtual Task ExecuteAsync(HttpContext context);
}
public class IdentityServer4.Endpoints.Results.JsonWebKeysResult : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<JsonWebKey> <WebKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxAge>k__BackingField;
    public IEnumerable`1<JsonWebKey> WebKeys { get; }
    public Nullable`1<int> MaxAge { get; }
    public JsonWebKeysResult(IEnumerable`1<JsonWebKey> webKeys, Nullable`1<int> maxAge);
    [CompilerGeneratedAttribute]
public IEnumerable`1<JsonWebKey> get_WebKeys();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxAge();
    public sealed virtual Task ExecuteAsync(HttpContext context);
}
public class IdentityServer4.Endpoints.Results.LoginPageResult : object {
    private ValidatedAuthorizeRequest _request;
    private IdentityServerOptions _options;
    private IAuthorizationParametersMessageStore _authorizationParametersMessageStore;
    public LoginPageResult(ValidatedAuthorizeRequest request);
    internal LoginPageResult(ValidatedAuthorizeRequest request, IdentityServerOptions options, IAuthorizationParametersMessageStore authorizationParametersMessageStore);
    private void Init(HttpContext context);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.Results.LoginPageResult/<ExecuteAsync>d__6")]
public sealed virtual Task ExecuteAsync(HttpContext context);
}
internal class IdentityServer4.Endpoints.Results.ProtectedResourceErrorResult : object {
    public string Error;
    public string ErrorDescription;
    public ProtectedResourceErrorResult(string error, string errorDescription);
    public sealed virtual Task ExecuteAsync(HttpContext context);
}
public class IdentityServer4.Endpoints.Results.StatusCodeResult : object {
    [CompilerGeneratedAttribute]
private int <StatusCode>k__BackingField;
    public int StatusCode { get; }
    public StatusCodeResult(HttpStatusCode statusCode);
    public StatusCodeResult(int statusCode);
    [CompilerGeneratedAttribute]
public int get_StatusCode();
    public sealed virtual Task ExecuteAsync(HttpContext context);
}
internal class IdentityServer4.Endpoints.Results.TokenErrorResult : object {
    [CompilerGeneratedAttribute]
private TokenErrorResponse <Response>k__BackingField;
    public TokenErrorResponse Response { get; }
    public TokenErrorResult(TokenErrorResponse error);
    [CompilerGeneratedAttribute]
public TokenErrorResponse get_Response();
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.Results.TokenErrorResult/<ExecuteAsync>d__4")]
public sealed virtual Task ExecuteAsync(HttpContext context);
}
internal class IdentityServer4.Endpoints.Results.TokenResult : object {
    [CompilerGeneratedAttribute]
private TokenResponse <Response>k__BackingField;
    public TokenResponse Response { get; public set; }
    public TokenResult(TokenResponse response);
    [CompilerGeneratedAttribute]
public TokenResponse get_Response();
    [CompilerGeneratedAttribute]
public void set_Response(TokenResponse value);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.Results.TokenResult/<ExecuteAsync>d__5")]
public sealed virtual Task ExecuteAsync(HttpContext context);
}
public class IdentityServer4.Endpoints.Results.TokenRevocationErrorResult : object {
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    public string Error { get; public set; }
    public TokenRevocationErrorResult(string error);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    public sealed virtual Task ExecuteAsync(HttpContext context);
}
internal class IdentityServer4.Endpoints.Results.UserInfoResult : object {
    public Dictionary`2<string, object> Claims;
    public UserInfoResult(Dictionary`2<string, object> claims);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.Results.UserInfoResult/<ExecuteAsync>d__2")]
public sealed virtual Task ExecuteAsync(HttpContext context);
}
internal class IdentityServer4.Endpoints.TokenEndpoint : object {
    private IClientSecretValidator _clientValidator;
    private ITokenRequestValidator _requestValidator;
    private ITokenResponseGenerator _responseGenerator;
    private IEventService _events;
    private ILogger _logger;
    public TokenEndpoint(IClientSecretValidator clientValidator, ITokenRequestValidator requestValidator, ITokenResponseGenerator responseGenerator, IEventService events, ILogger`1<TokenEndpoint> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.TokenEndpoint/<ProcessAsync>d__6")]
public sealed virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.TokenEndpoint/<ProcessTokenRequestAsync>d__7")]
private Task`1<IEndpointResult> ProcessTokenRequestAsync(HttpContext context);
    private TokenErrorResult Error(string error, string errorDescription, Dictionary`2<string, object> custom);
    private void LogTokens(TokenResponse response, TokenRequestValidationResult requestResult);
}
internal class IdentityServer4.Endpoints.TokenRevocationEndpoint : object {
    private ILogger _logger;
    private IClientSecretValidator _clientValidator;
    private ITokenRevocationRequestValidator _requestValidator;
    private ITokenRevocationResponseGenerator _responseGenerator;
    private IEventService _events;
    public TokenRevocationEndpoint(ILogger`1<TokenRevocationEndpoint> logger, IClientSecretValidator clientValidator, ITokenRevocationRequestValidator requestValidator, ITokenRevocationResponseGenerator responseGenerator, IEventService events);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.TokenRevocationEndpoint/<ProcessAsync>d__6")]
public sealed virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.TokenRevocationEndpoint/<ProcessRevocationRequestAsync>d__7")]
private Task`1<IEndpointResult> ProcessRevocationRequestAsync(HttpContext context);
}
internal class IdentityServer4.Endpoints.UserInfoEndpoint : object {
    private BearerTokenUsageValidator _tokenUsageValidator;
    private IUserInfoRequestValidator _requestValidator;
    private IUserInfoResponseGenerator _responseGenerator;
    private ILogger _logger;
    public UserInfoEndpoint(BearerTokenUsageValidator tokenUsageValidator, IUserInfoRequestValidator requestValidator, IUserInfoResponseGenerator responseGenerator, ILogger`1<UserInfoEndpoint> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.UserInfoEndpoint/<ProcessAsync>d__5")]
public sealed virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
    [AsyncStateMachineAttribute("IdentityServer4.Endpoints.UserInfoEndpoint/<ProcessUserInfoRequestAsync>d__6")]
private Task`1<IEndpointResult> ProcessUserInfoRequestAsync(HttpContext context);
    private IEndpointResult Error(string error, string description);
}
public class IdentityServer4.Events.ApiAuthenticationFailureEvent : Event {
    [CompilerGeneratedAttribute]
private string <ApiName>k__BackingField;
    public string ApiName { get; public set; }
    public ApiAuthenticationFailureEvent(string apiName, string message);
    [CompilerGeneratedAttribute]
public string get_ApiName();
    [CompilerGeneratedAttribute]
public void set_ApiName(string value);
}
public class IdentityServer4.Events.ApiAuthenticationSuccessEvent : Event {
    [CompilerGeneratedAttribute]
private string <ApiName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthenticationMethod>k__BackingField;
    public string ApiName { get; public set; }
    public string AuthenticationMethod { get; public set; }
    public ApiAuthenticationSuccessEvent(string apiName, string authenticationMethod);
    [CompilerGeneratedAttribute]
public string get_ApiName();
    [CompilerGeneratedAttribute]
public void set_ApiName(string value);
    [CompilerGeneratedAttribute]
public string get_AuthenticationMethod();
    [CompilerGeneratedAttribute]
public void set_AuthenticationMethod(string value);
}
public class IdentityServer4.Events.ClientAuthenticationFailureEvent : Event {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    public string ClientId { get; public set; }
    public ClientAuthenticationFailureEvent(string clientId, string message);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
}
public class IdentityServer4.Events.ClientAuthenticationSuccessEvent : Event {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthenticationMethod>k__BackingField;
    public string ClientId { get; public set; }
    public string AuthenticationMethod { get; public set; }
    public ClientAuthenticationSuccessEvent(string clientId, string authenticationMethod);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_AuthenticationMethod();
    [CompilerGeneratedAttribute]
public void set_AuthenticationMethod(string value);
}
public class IdentityServer4.Events.ConsentDeniedEvent : Event {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <RequestedScopes>k__BackingField;
    public string SubjectId { get; public set; }
    public string ClientId { get; public set; }
    public IEnumerable`1<string> RequestedScopes { get; public set; }
    public ConsentDeniedEvent(string subjectId, string clientId, IEnumerable`1<string> requestedScopes);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_RequestedScopes();
    [CompilerGeneratedAttribute]
public void set_RequestedScopes(IEnumerable`1<string> value);
}
public class IdentityServer4.Events.ConsentGrantedEvent : Event {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <RequestedScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <GrantedScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ConsentRemembered>k__BackingField;
    public string SubjectId { get; public set; }
    public string ClientId { get; public set; }
    public IEnumerable`1<string> RequestedScopes { get; public set; }
    public IEnumerable`1<string> GrantedScopes { get; public set; }
    public bool ConsentRemembered { get; public set; }
    public ConsentGrantedEvent(string subjectId, string clientId, IEnumerable`1<string> requestedScopes, IEnumerable`1<string> grantedScopes, bool consentRemembered);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_RequestedScopes();
    [CompilerGeneratedAttribute]
public void set_RequestedScopes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_GrantedScopes();
    [CompilerGeneratedAttribute]
public void set_GrantedScopes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_ConsentRemembered();
    [CompilerGeneratedAttribute]
public void set_ConsentRemembered(bool value);
}
public class IdentityServer4.Events.DefaultEventService : object {
    protected IdentityServerOptions Options;
    protected IHttpContextAccessor Context;
    protected IEventSink Sink;
    protected ISystemClock Clock;
    public DefaultEventService(IdentityServerOptions options, IHttpContextAccessor context, IEventSink sink, ISystemClock clock);
    [AsyncStateMachineAttribute("IdentityServer4.Events.DefaultEventService/<RaiseAsync>d__5")]
public sealed virtual Task RaiseAsync(Event evt);
    public sealed virtual bool CanRaiseEventType(EventTypes evtType);
    protected virtual bool CanRaiseEvent(Event evt);
    [AsyncStateMachineAttribute("IdentityServer4.Events.DefaultEventService/<PrepareEventAsync>d__8")]
protected virtual Task PrepareEventAsync(Event evt);
}
public class IdentityServer4.Events.DeviceAuthorizationFailureEvent : Event {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string Endpoint { get; public set; }
    public string Scopes { get; public set; }
    public string Error { get; public set; }
    public string ErrorDescription { get; public set; }
    public DeviceAuthorizationFailureEvent(DeviceAuthorizationRequestValidationResult result);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
}
public class IdentityServer4.Events.DeviceAuthorizationSuccessEvent : Event {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string Endpoint { get; public set; }
    public string Scopes { get; public set; }
    public DeviceAuthorizationSuccessEvent(DeviceAuthorizationResponse response, DeviceAuthorizationRequestValidationResult request);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
}
public abstract class IdentityServer4.Events.Event : object {
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private EventTypes <EventType>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActivityId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <TimeStamp>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LocalIpAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RemoteIpAddress>k__BackingField;
    public string Category { get; public set; }
    public string Name { get; public set; }
    public EventTypes EventType { get; public set; }
    public int Id { get; public set; }
    public string Message { get; public set; }
    public string ActivityId { get; public set; }
    public DateTime TimeStamp { get; public set; }
    public int ProcessId { get; public set; }
    public string LocalIpAddress { get; public set; }
    public string RemoteIpAddress { get; public set; }
    protected Event(string category, string name, EventTypes type, int id, string message);
    protected internal virtual Task PrepareAsync();
    [CompilerGeneratedAttribute]
public string get_Category();
    [CompilerGeneratedAttribute]
public void set_Category(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public EventTypes get_EventType();
    [CompilerGeneratedAttribute]
public void set_EventType(EventTypes value);
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_ActivityId();
    [CompilerGeneratedAttribute]
public void set_ActivityId(string value);
    [CompilerGeneratedAttribute]
public DateTime get_TimeStamp();
    [CompilerGeneratedAttribute]
public void set_TimeStamp(DateTime value);
    [CompilerGeneratedAttribute]
public int get_ProcessId();
    [CompilerGeneratedAttribute]
public void set_ProcessId(int value);
    [CompilerGeneratedAttribute]
public string get_LocalIpAddress();
    [CompilerGeneratedAttribute]
public void set_LocalIpAddress(string value);
    [CompilerGeneratedAttribute]
public string get_RemoteIpAddress();
    [CompilerGeneratedAttribute]
public void set_RemoteIpAddress(string value);
    protected static string Obfuscate(string value);
    public virtual string ToString();
}
public static class IdentityServer4.Events.EventCategories : object {
    public static string Authentication;
    public static string Token;
    public static string Grants;
    public static string Error;
    public static string DeviceFlow;
}
public static class IdentityServer4.Events.EventIds : object {
    private static int AuthenticationEventsStart;
    public static int UserLoginSuccess;
    public static int UserLoginFailure;
    public static int UserLogoutSuccess;
    public static int ClientAuthenticationSuccess;
    public static int ClientAuthenticationFailure;
    public static int ApiAuthenticationSuccess;
    public static int ApiAuthenticationFailure;
    private static int TokenEventsStart;
    public static int TokenIssuedSuccess;
    public static int TokenIssuedFailure;
    public static int TokenRevokedSuccess;
    public static int TokenIntrospectionSuccess;
    public static int TokenIntrospectionFailure;
    private static int ErrorEventsStart;
    public static int UnhandledException;
    public static int InvalidClientConfiguration;
    private static int GrantsEventsStart;
    public static int ConsentGranted;
    public static int ConsentDenied;
    public static int GrantsRevoked;
    private static int DeviceFlowEventsStart;
    public static int DeviceAuthorizationSuccess;
    public static int DeviceAuthorizationFailure;
}
public enum IdentityServer4.Events.EventTypes : Enum {
    public int value__;
    public static EventTypes Success;
    public static EventTypes Failure;
    public static EventTypes Information;
    public static EventTypes Error;
}
public class IdentityServer4.Events.GrantsRevokedEvent : Event {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    public string SubjectId { get; public set; }
    public string ClientId { get; public set; }
    public GrantsRevokedEvent(string subjectId, string clientId);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
}
public class IdentityServer4.Events.InvalidClientConfigurationEvent : Event {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public InvalidClientConfigurationEvent(Client client, string errorMessage);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
}
public class IdentityServer4.Events.TokenIntrospectionFailureEvent : Event {
    [CompilerGeneratedAttribute]
private string <ApiName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ApiScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <TokenScopes>k__BackingField;
    public string ApiName { get; public set; }
    public string Token { get; public set; }
    public IEnumerable`1<string> ApiScopes { get; public set; }
    public IEnumerable`1<string> TokenScopes { get; public set; }
    public TokenIntrospectionFailureEvent(string apiName, string errorMessage, string token, IEnumerable`1<string> apiScopes, IEnumerable`1<string> tokenScopes);
    [CompilerGeneratedAttribute]
public string get_ApiName();
    [CompilerGeneratedAttribute]
public void set_ApiName(string value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ApiScopes();
    [CompilerGeneratedAttribute]
public void set_ApiScopes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_TokenScopes();
    [CompilerGeneratedAttribute]
public void set_TokenScopes(IEnumerable`1<string> value);
}
public class IdentityServer4.Events.TokenIntrospectionSuccessEvent : Event {
    [CompilerGeneratedAttribute]
private string <ApiName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsActive>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ClaimTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <TokenScopes>k__BackingField;
    public string ApiName { get; public set; }
    public bool IsActive { get; public set; }
    public string Token { get; public set; }
    public IEnumerable`1<string> ClaimTypes { get; public set; }
    public IEnumerable`1<string> TokenScopes { get; public set; }
    public TokenIntrospectionSuccessEvent(IntrospectionRequestValidationResult result);
    [CompilerGeneratedAttribute]
public string get_ApiName();
    [CompilerGeneratedAttribute]
public void set_ApiName(string value);
    [CompilerGeneratedAttribute]
public bool get_IsActive();
    [CompilerGeneratedAttribute]
public void set_IsActive(bool value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ClaimTypes();
    [CompilerGeneratedAttribute]
public void set_ClaimTypes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_TokenScopes();
    [CompilerGeneratedAttribute]
public void set_TokenScopes(IEnumerable`1<string> value);
}
public class IdentityServer4.Events.TokenIssuedFailureEvent : Event {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RedirectUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GrantType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string RedirectUri { get; public set; }
    public string Endpoint { get; public set; }
    public string SubjectId { get; public set; }
    public string Scopes { get; public set; }
    public string GrantType { get; public set; }
    public string Error { get; public set; }
    public string ErrorDescription { get; public set; }
    public TokenIssuedFailureEvent(ValidatedAuthorizeRequest request, string error, string description);
    public TokenIssuedFailureEvent(TokenRequestValidationResult result);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_RedirectUri();
    [CompilerGeneratedAttribute]
public void set_RedirectUri(string value);
    [CompilerGeneratedAttribute]
public string get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
    [CompilerGeneratedAttribute]
public string get_GrantType();
    [CompilerGeneratedAttribute]
public void set_GrantType(string value);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
}
public class IdentityServer4.Events.TokenIssuedSuccessEvent : Event {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RedirectUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GrantType>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Token> <Tokens>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string RedirectUri { get; public set; }
    public string Endpoint { get; public set; }
    public string SubjectId { get; public set; }
    public string Scopes { get; public set; }
    public string GrantType { get; public set; }
    public IEnumerable`1<Token> Tokens { get; public set; }
    public TokenIssuedSuccessEvent(AuthorizeResponse response);
    public TokenIssuedSuccessEvent(TokenResponse response, TokenRequestValidationResult request);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_RedirectUri();
    [CompilerGeneratedAttribute]
public void set_RedirectUri(string value);
    [CompilerGeneratedAttribute]
public string get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
    [CompilerGeneratedAttribute]
public string get_GrantType();
    [CompilerGeneratedAttribute]
public void set_GrantType(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<Token> get_Tokens();
    [CompilerGeneratedAttribute]
public void set_Tokens(IEnumerable`1<Token> value);
}
public class IdentityServer4.Events.TokenRevokedSuccessEvent : Event {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string TokenType { get; public set; }
    public string Token { get; public set; }
    public TokenRevokedSuccessEvent(TokenRevocationRequestValidationResult requestResult, Client client);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_TokenType();
    [CompilerGeneratedAttribute]
public void set_TokenType(string value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
}
public class IdentityServer4.Events.UnhandledExceptionEvent : Event {
    [CompilerGeneratedAttribute]
private string <Details>k__BackingField;
    public string Details { get; public set; }
    public UnhandledExceptionEvent(Exception ex);
    [CompilerGeneratedAttribute]
public string get_Details();
    [CompilerGeneratedAttribute]
public void set_Details(string value);
}
public class IdentityServer4.Events.UserLoginFailureEvent : Event {
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    public string Username { get; public set; }
    public string Endpoint { get; public set; }
    public string ClientId { get; public set; }
    public UserLoginFailureEvent(string username, string error, bool interactive, string clientId);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public string get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
}
public class IdentityServer4.Events.UserLoginSuccessEvent : Event {
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Provider>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProviderUserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    public string Username { get; public set; }
    public string Provider { get; public set; }
    public string ProviderUserId { get; public set; }
    public string SubjectId { get; public set; }
    public string DisplayName { get; public set; }
    public string Endpoint { get; public set; }
    public string ClientId { get; public set; }
    public UserLoginSuccessEvent(string provider, string providerUserId, string subjectId, string name, bool interactive, string clientId);
    public UserLoginSuccessEvent(string username, string subjectId, string name, bool interactive, string clientId);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public string get_Provider();
    [CompilerGeneratedAttribute]
public void set_Provider(string value);
    [CompilerGeneratedAttribute]
public string get_ProviderUserId();
    [CompilerGeneratedAttribute]
public void set_ProviderUserId(string value);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
}
public class IdentityServer4.Events.UserLogoutSuccessEvent : Event {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    public string SubjectId { get; public set; }
    public string DisplayName { get; public set; }
    public UserLogoutSuccessEvent(string subjectId, string name);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
}
[ExtensionAttribute]
public static class IdentityServer4.Extensions.AuthenticationPropertiesExtensions : object {
    internal static string SessionIdKey;
    internal static string ClientListKey;
    [ExtensionAttribute]
public static string GetSessionId(AuthenticationProperties properties);
    [ExtensionAttribute]
public static void SetSessionId(AuthenticationProperties properties, string sid);
    [ExtensionAttribute]
public static IEnumerable`1<string> GetClientList(AuthenticationProperties properties);
    [ExtensionAttribute]
public static void RemoveClientList(AuthenticationProperties properties);
    [ExtensionAttribute]
public static void AddClientId(AuthenticationProperties properties, string clientId);
    private static IEnumerable`1<string> DecodeList(string value);
    private static string EncodeList(IEnumerable`1<string> list);
}
[ExtensionAttribute]
internal static class IdentityServer4.Extensions.ClaimsExtensions : object {
    [ExtensionAttribute]
public static Dictionary`2<string, object> ToClaimsDictionary(IEnumerable`1<Claim> claims);
    private static object GetValue(Claim claim);
}
[ExtensionAttribute]
internal static class IdentityServer4.Extensions.DateTimeExtensions : object {
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool HasExceeded(DateTime creationTime, int seconds, DateTime now);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static int GetLifetimeInSeconds(DateTime creationTime, DateTime now);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool HasExpired(Nullable`1<DateTime> expirationTime, DateTime now);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool HasExpired(DateTime expirationTime, DateTime now);
}
[ExtensionAttribute]
internal static class IdentityServer4.Extensions.EndpointOptionsExtensions : object {
    [ExtensionAttribute]
public static bool IsEndpointEnabled(EndpointsOptions options, Endpoint endpoint);
}
[ExtensionAttribute]
public static class IdentityServer4.Extensions.HttpContextExtensions : object {
    [AsyncStateMachineAttribute("IdentityServer4.Extensions.HttpContextExtensions/<GetSchemeSupportsSignOutAsync>d__0")]
[ExtensionAttribute]
public static Task`1<bool> GetSchemeSupportsSignOutAsync(HttpContext context, string scheme);
    [ExtensionAttribute]
public static void SetIdentityServerOrigin(HttpContext context, string value);
    [ExtensionAttribute]
public static void SetIdentityServerBasePath(HttpContext context, string value);
    [ExtensionAttribute]
public static string GetIdentityServerOrigin(HttpContext context);
    [ExtensionAttribute]
internal static void SetSignOutCalled(HttpContext context);
    [ExtensionAttribute]
internal static bool GetSignOutCalled(HttpContext context);
    [ExtensionAttribute]
public static string GetIdentityServerHost(HttpContext context);
    [ExtensionAttribute]
public static string GetIdentityServerBasePath(HttpContext context);
    [ExtensionAttribute]
public static string GetIdentityServerBaseUrl(HttpContext context);
    [ExtensionAttribute]
public static string GetIdentityServerRelativeUrl(HttpContext context, string path);
    [ExtensionAttribute]
public static string GetIdentityServerIssuerUri(HttpContext context);
    [AsyncStateMachineAttribute("IdentityServer4.Extensions.HttpContextExtensions/<GetIdentityServerSignoutFrameCallbackUrlAsync>d__11")]
[ExtensionAttribute]
internal static Task`1<string> GetIdentityServerSignoutFrameCallbackUrlAsync(HttpContext context, LogoutMessage logoutMessage);
}
[ExtensionAttribute]
public static class IdentityServer4.Extensions.HttpRequestExtensions : object {
    [ExtensionAttribute]
public static string GetCorsOrigin(HttpRequest request);
    [ExtensionAttribute]
internal static bool HasApplicationFormContentType(HttpRequest request);
}
[ExtensionAttribute]
public static class IdentityServer4.Extensions.HttpResponseExtensions : object {
    [AsyncStateMachineAttribute("IdentityServer4.Extensions.HttpResponseExtensions/<WriteJsonAsync>d__0")]
[ExtensionAttribute]
public static Task WriteJsonAsync(HttpResponse response, object o, string contentType);
    [AsyncStateMachineAttribute("IdentityServer4.Extensions.HttpResponseExtensions/<WriteJsonAsync>d__1")]
[ExtensionAttribute]
public static Task WriteJsonAsync(HttpResponse response, string json, string contentType);
    [ExtensionAttribute]
public static void SetCache(HttpResponse response, int maxAge, String[] varyBy);
    [ExtensionAttribute]
public static void SetNoCache(HttpResponse response);
    [AsyncStateMachineAttribute("IdentityServer4.Extensions.HttpResponseExtensions/<WriteHtmlAsync>d__4")]
[ExtensionAttribute]
public static Task WriteHtmlAsync(HttpResponse response, string html);
    [ExtensionAttribute]
public static void RedirectToAbsoluteUrl(HttpResponse response, string url);
    [ExtensionAttribute]
public static void AddScriptCspHeaders(HttpResponse response, CspOptions options, string hash);
    [ExtensionAttribute]
public static void AddStyleCspHeaders(HttpResponse response, CspOptions options, string hash, string frameSources);
    public static void AddCspHeaders(IHeaderDictionary headers, CspOptions options, string cspHeader);
}
[ExtensionAttribute]
public static class IdentityServer4.Extensions.ICacheExtensions : object {
    [AsyncStateMachineAttribute("IdentityServer4.Extensions.ICacheExtensions/<GetAsync>d__0`1")]
[ExtensionAttribute]
public static Task`1<T> GetAsync(ICache`1<T> cache, string key, TimeSpan duration, Func`1<Task`1<T>> get, ILogger logger);
}
[ExtensionAttribute]
public static class IdentityServer4.Extensions.IEnumerableExtensions : object {
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool IsNullOrEmpty(IEnumerable`1<T> list);
    [ExtensionAttribute]
public static bool HasDuplicates(IEnumerable`1<T> list, Func`2<T, TProp> selector);
}
[ExtensionAttribute]
public static class IdentityServer4.Extensions.IReadableStringCollectionExtensions : object {
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static NameValueCollection AsNameValueCollection(IEnumerable`1<KeyValuePair`2<string, StringValues>> collection);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static NameValueCollection AsNameValueCollection(IDictionary`2<string, StringValues> collection);
}
[ExtensionAttribute]
internal static class IdentityServer4.Extensions.NameValueCollectionExtensions : object {
    [ExtensionAttribute]
public static IDictionary`2<string, String[]> ToFullDictionary(NameValueCollection source);
    [ExtensionAttribute]
public static NameValueCollection FromFullDictionary(IDictionary`2<string, String[]> source);
    [ExtensionAttribute]
public static string ToQueryString(NameValueCollection collection);
    [ExtensionAttribute]
public static string ToFormPost(NameValueCollection collection);
    [ExtensionAttribute]
public static NameValueCollection ToNameValueCollection(Dictionary`2<string, string> data);
    [ExtensionAttribute]
public static Dictionary`2<string, string> ToDictionary(NameValueCollection collection);
    [ExtensionAttribute]
public static Dictionary`2<string, string> ToScrubbedDictionary(NameValueCollection collection, String[] nameFilter);
    internal static string ConvertFormUrlEncodedSpacesToUrlEncodedSpaces(string str);
    private static bool AppendNameValuePair(StringBuilder builder, bool first, bool urlEncode, string name, string value);
}
[ExtensionAttribute]
public static class IdentityServer4.Extensions.PrincipalExtensions : object {
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static DateTime GetAuthenticationTime(IPrincipal principal);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static long GetAuthenticationTimeEpoch(IPrincipal principal);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static long GetAuthenticationTimeEpoch(IIdentity identity);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string GetSubjectId(IPrincipal principal);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string GetSubjectId(IIdentity identity);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
[ObsoleteAttribute("This method will be removed in a future version. Use GetDisplayName instead.")]
public static string GetName(IPrincipal principal);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string GetDisplayName(ClaimsPrincipal principal);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
[ObsoleteAttribute("This method will be removed in a future version. Use GetDisplayName instead.")]
public static string GetName(IIdentity identity);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string GetAuthenticationMethod(IPrincipal principal);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static IEnumerable`1<Claim> GetAuthenticationMethods(IPrincipal principal);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string GetAuthenticationMethod(IIdentity identity);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static IEnumerable`1<Claim> GetAuthenticationMethods(IIdentity identity);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string GetIdentityProvider(IPrincipal principal);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string GetIdentityProvider(IIdentity identity);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool IsAuthenticated(IPrincipal principal);
}
[ExtensionAttribute]
internal static class IdentityServer4.Extensions.StringExtensions : object {
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string ToSpaceSeparatedString(IEnumerable`1<string> list);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static IEnumerable`1<string> FromSpaceSeparatedString(string input);
    [ExtensionAttribute]
public static List`1<string> ParseScopesString(string scopes);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool IsMissing(string value);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool IsMissingOrTooLong(string value, int maxLength);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool IsPresent(string value);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string EnsureLeadingSlash(string url);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string EnsureTrailingSlash(string url);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string RemoveLeadingSlash(string url);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string RemoveTrailingSlash(string url);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string CleanUrlPath(string url);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static bool IsLocalUrl(string url);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string AddQueryString(string url, string query);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string AddQueryString(string url, string name, string value);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string AddHashFragment(string url, string query);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static NameValueCollection ReadQueryStringAsNameValueCollection(string url);
    [ExtensionAttribute]
public static string GetOrigin(string url);
    [ExtensionAttribute]
public static string Obfuscate(string value);
}
[ExtensionAttribute]
public static class IdentityServer4.Extensions.TokenExtensions : object {
    [ExtensionAttribute]
public static JwtPayload CreateJwtPayload(Token token, ISystemClock clock, IdentityServerOptions options, ILogger logger);
}
[ExtensionAttribute]
public static class IdentityServer4.Extensions.X509CertificateExtensions : object {
    [ExtensionAttribute]
public static string CreateThumbprintCnf(X509Certificate2 certificate);
}
public class IdentityServer4.Hosting.BaseUrlMiddleware : object {
    private RequestDelegate _next;
    private IdentityServerOptions _options;
    public BaseUrlMiddleware(RequestDelegate next, IdentityServerOptions options);
    [AsyncStateMachineAttribute("IdentityServer4.Hosting.BaseUrlMiddleware/<Invoke>d__3")]
public Task Invoke(HttpContext context);
}
[ExtensionAttribute]
public static class IdentityServer4.Hosting.CorsMiddlewareExtensions : object {
    [ExtensionAttribute]
public static void ConfigureCors(IApplicationBuilder app);
}
internal class IdentityServer4.Hosting.CorsPolicyProvider : object {
    private ILogger _logger;
    private ICorsPolicyProvider _inner;
    private IdentityServerOptions _options;
    private IHttpContextAccessor _httpContext;
    public CorsPolicyProvider(ILogger`1<CorsPolicyProvider> logger, Decorator`1<ICorsPolicyProvider> inner, IdentityServerOptions options, IHttpContextAccessor httpContext);
    public sealed virtual Task`1<CorsPolicy> GetPolicyAsync(HttpContext context, string policyName);
    [AsyncStateMachineAttribute("IdentityServer4.Hosting.CorsPolicyProvider/<ProcessAsync>d__6")]
private Task`1<CorsPolicy> ProcessAsync(HttpContext context);
    private CorsPolicy Allow(string origin);
    private bool IsPathAllowed(PathString path);
}
public class IdentityServer4.Hosting.Endpoint : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private PathString <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Handler>k__BackingField;
    public string Name { get; public set; }
    public PathString Path { get; public set; }
    public Type Handler { get; public set; }
    public Endpoint(string name, string path, Type handlerType);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public PathString get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(PathString value);
    [CompilerGeneratedAttribute]
public Type get_Handler();
    [CompilerGeneratedAttribute]
public void set_Handler(Type value);
}
internal class IdentityServer4.Hosting.EndpointRouter : object {
    private IEnumerable`1<Endpoint> _endpoints;
    private IdentityServerOptions _options;
    private ILogger _logger;
    public EndpointRouter(IEnumerable`1<Endpoint> endpoints, IdentityServerOptions options, ILogger`1<EndpointRouter> logger);
    public sealed virtual IEndpointHandler Find(HttpContext context);
    private IEndpointHandler GetEndpointHandler(Endpoint endpoint, HttpContext context);
}
internal class IdentityServer4.Hosting.FederatedSignOut.AuthenticationRequestHandlerWrapper : object {
    private static string IframeHtml;
    private IAuthenticationRequestHandler _inner;
    private HttpContext _context;
    private ILogger _logger;
    public AuthenticationRequestHandlerWrapper(IAuthenticationRequestHandler inner, IHttpContextAccessor httpContextAccessor);
    public sealed virtual Task InitializeAsync(AuthenticationScheme scheme, HttpContext context);
    [AsyncStateMachineAttribute("IdentityServer4.Hosting.FederatedSignOut.AuthenticationRequestHandlerWrapper/<HandleRequestAsync>d__6")]
public sealed virtual Task`1<bool> HandleRequestAsync();
    public sealed virtual Task`1<AuthenticateResult> AuthenticateAsync();
    public sealed virtual Task ChallengeAsync(AuthenticationProperties properties);
    public sealed virtual Task ForbidAsync(AuthenticationProperties properties);
    [AsyncStateMachineAttribute("IdentityServer4.Hosting.FederatedSignOut.AuthenticationRequestHandlerWrapper/<ProcessFederatedSignOutRequestAsync>d__10")]
private Task ProcessFederatedSignOutRequestAsync();
    [AsyncStateMachineAttribute("IdentityServer4.Hosting.FederatedSignOut.AuthenticationRequestHandlerWrapper/<RenderResponseAsync>d__11")]
private Task RenderResponseAsync(string iframeUrl);
}
internal class IdentityServer4.Hosting.FederatedSignOut.AuthenticationRequestSignInHandlerWrapper : AuthenticationRequestSignOutHandlerWrapper {
    private IAuthenticationSignInHandler _inner;
    public AuthenticationRequestSignInHandlerWrapper(IAuthenticationSignInHandler inner, IHttpContextAccessor httpContextAccessor);
    public sealed virtual Task SignInAsync(ClaimsPrincipal user, AuthenticationProperties properties);
}
internal class IdentityServer4.Hosting.FederatedSignOut.AuthenticationRequestSignOutHandlerWrapper : AuthenticationRequestHandlerWrapper {
    private IAuthenticationSignOutHandler _inner;
    public AuthenticationRequestSignOutHandlerWrapper(IAuthenticationSignOutHandler inner, IHttpContextAccessor httpContextAccessor);
    public sealed virtual Task SignOutAsync(AuthenticationProperties properties);
}
internal class IdentityServer4.Hosting.FederatedSignOut.FederatedSignoutAuthenticationHandlerProvider : object {
    private IAuthenticationHandlerProvider _provider;
    private IHttpContextAccessor _httpContextAccessor;
    public FederatedSignoutAuthenticationHandlerProvider(Decorator`1<IAuthenticationHandlerProvider> decorator, IHttpContextAccessor httpContextAccessor);
    [AsyncStateMachineAttribute("IdentityServer4.Hosting.FederatedSignOut.FederatedSignoutAuthenticationHandlerProvider/<GetHandlerAsync>d__3")]
public sealed virtual Task`1<IAuthenticationHandler> GetHandlerAsync(HttpContext context, string authenticationScheme);
}
internal class IdentityServer4.Hosting.IdentityServerAuthenticationService : object {
    private IAuthenticationService _inner;
    private IAuthenticationSchemeProvider _schemes;
    private ISystemClock _clock;
    private IUserSession _session;
    private IBackChannelLogoutService _backChannelLogoutService;
    private IdentityServerOptions _options;
    private ILogger`1<IdentityServerAuthenticationService> _logger;
    public IdentityServerAuthenticationService(Decorator`1<IAuthenticationService> decorator, IAuthenticationSchemeProvider schemes, ISystemClock clock, IUserSession session, IBackChannelLogoutService backChannelLogoutService, IdentityServerOptions options, ILogger`1<IdentityServerAuthenticationService> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Hosting.IdentityServerAuthenticationService/<SignInAsync>d__8")]
public sealed virtual Task SignInAsync(HttpContext context, string scheme, ClaimsPrincipal principal, AuthenticationProperties properties);
    private void AugmentPrincipal(ClaimsPrincipal principal);
    [AsyncStateMachineAttribute("IdentityServer4.Hosting.IdentityServerAuthenticationService/<SignOutAsync>d__10")]
public sealed virtual Task SignOutAsync(HttpContext context, string scheme, AuthenticationProperties properties);
    public sealed virtual Task`1<AuthenticateResult> AuthenticateAsync(HttpContext context, string scheme);
    public sealed virtual Task ChallengeAsync(HttpContext context, string scheme, AuthenticationProperties properties);
    public sealed virtual Task ForbidAsync(HttpContext context, string scheme, AuthenticationProperties properties);
    private void AssertRequiredClaims(ClaimsPrincipal principal);
    private void AugmentMissingClaims(ClaimsPrincipal principal, DateTime authTime);
}
public class IdentityServer4.Hosting.IdentityServerMiddleware : object {
    private RequestDelegate _next;
    private ILogger _logger;
    public IdentityServerMiddleware(RequestDelegate next, ILogger`1<IdentityServerMiddleware> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Hosting.IdentityServerMiddleware/<Invoke>d__3")]
public Task Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events, IBackChannelLogoutService backChannelLogoutService);
}
public interface IdentityServer4.Hosting.IEndpointHandler {
    public abstract virtual Task`1<IEndpointResult> ProcessAsync(HttpContext context);
}
public interface IdentityServer4.Hosting.IEndpointResult {
    public abstract virtual Task ExecuteAsync(HttpContext context);
}
public interface IdentityServer4.Hosting.IEndpointRouter {
    public abstract virtual IEndpointHandler Find(HttpContext context);
}
public class IdentityServer4.Hosting.LocalApiAuthentication.ClaimsTransformationContext : object {
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Principal>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    public ClaimsPrincipal Principal { get; public set; }
    public HttpContext HttpContext { get; internal set; }
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Principal();
    [CompilerGeneratedAttribute]
public void set_Principal(ClaimsPrincipal value);
    [CompilerGeneratedAttribute]
public HttpContext get_HttpContext();
    [CompilerGeneratedAttribute]
internal void set_HttpContext(HttpContext value);
}
public class IdentityServer4.Hosting.LocalApiAuthentication.LocalApiAuthenticationEvents : object {
    [CompilerGeneratedAttribute]
private Func`2<ClaimsTransformationContext, Task> <OnClaimsTransformation>k__BackingField;
    public Func`2<ClaimsTransformationContext, Task> OnClaimsTransformation { get; public set; }
    [CompilerGeneratedAttribute]
public Func`2<ClaimsTransformationContext, Task> get_OnClaimsTransformation();
    [CompilerGeneratedAttribute]
public void set_OnClaimsTransformation(Func`2<ClaimsTransformationContext, Task> value);
    public virtual Task ClaimsTransformation(ClaimsTransformationContext context);
}
public class IdentityServer4.Hosting.LocalApiAuthentication.LocalApiAuthenticationHandler : AuthenticationHandler`1<LocalApiAuthenticationOptions> {
    private ITokenValidator _tokenValidator;
    private ILogger _logger;
    protected LocalApiAuthenticationEvents Events { get; protected set; }
    public LocalApiAuthenticationHandler(IOptionsMonitor`1<LocalApiAuthenticationOptions> options, ILoggerFactory logger, UrlEncoder encoder, ISystemClock clock, ITokenValidator tokenValidator);
    protected LocalApiAuthenticationEvents get_Events();
    protected void set_Events(LocalApiAuthenticationEvents value);
    protected virtual Task`1<object> CreateEventsAsync();
    [AsyncStateMachineAttribute("IdentityServer4.Hosting.LocalApiAuthentication.LocalApiAuthenticationHandler/<HandleAuthenticateAsync>d__7")]
protected virtual Task`1<AuthenticateResult> HandleAuthenticateAsync();
}
public class IdentityServer4.Hosting.LocalApiAuthentication.LocalApiAuthenticationOptions : AuthenticationSchemeOptions {
    [CompilerGeneratedAttribute]
private string <ExpectedScope>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SaveToken>k__BackingField;
    public string ExpectedScope { get; public set; }
    public bool SaveToken { get; public set; }
    public LocalApiAuthenticationEvents Events { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ExpectedScope();
    [CompilerGeneratedAttribute]
public void set_ExpectedScope(string value);
    [CompilerGeneratedAttribute]
public bool get_SaveToken();
    [CompilerGeneratedAttribute]
public void set_SaveToken(bool value);
    public LocalApiAuthenticationEvents get_Events();
    public void set_Events(LocalApiAuthenticationEvents value);
}
public class IdentityServer4.Hosting.MutualTlsEndpointMiddleware : object {
    private ILogger`1<MutualTlsEndpointMiddleware> _logger;
    private RequestDelegate _next;
    private IdentityServerOptions _options;
    public MutualTlsEndpointMiddleware(RequestDelegate next, IdentityServerOptions options, ILogger`1<MutualTlsEndpointMiddleware> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Hosting.MutualTlsEndpointMiddleware/<Invoke>d__4")]
public Task Invoke(HttpContext context, IAuthenticationSchemeProvider schemes);
    [AsyncStateMachineAttribute("IdentityServer4.Hosting.MutualTlsEndpointMiddleware/<TriggerCertificateAuthentication>d__5")]
private Task`1<AuthenticateResult> TriggerCertificateAuthentication(HttpContext context);
}
public static class IdentityServer4.IdentityServerConstants : object {
    public static string LocalIdentityProvider;
    public static string DefaultCookieAuthenticationScheme;
    public static string SignoutScheme;
    public static string ExternalCookieAuthenticationScheme;
    public static string DefaultCheckSessionCookieName;
    public static string AccessTokenAudience;
    public static string JwtRequestClientKey;
    public static IEnumerable`1<string> SupportedSigningAlgorithms;
    private static IdentityServerConstants();
}
public class IdentityServer4.IdentityServerTools : object {
    internal IHttpContextAccessor ContextAccessor;
    private ITokenCreationService _tokenCreation;
    private ISystemClock _clock;
    public IdentityServerTools(IHttpContextAccessor contextAccessor, ITokenCreationService tokenCreation, ISystemClock clock);
    [AsyncStateMachineAttribute("IdentityServer4.IdentityServerTools/<IssueJwtAsync>d__4")]
public virtual Task`1<string> IssueJwtAsync(int lifetime, IEnumerable`1<Claim> claims);
    [AsyncStateMachineAttribute("IdentityServer4.IdentityServerTools/<IssueJwtAsync>d__5")]
public virtual Task`1<string> IssueJwtAsync(int lifetime, string issuer, IEnumerable`1<Claim> claims);
}
[ExtensionAttribute]
public static class IdentityServer4.IdentityServerToolsExtensions : object {
    [AsyncStateMachineAttribute("IdentityServer4.IdentityServerToolsExtensions/<IssueClientJwtAsync>d__0")]
[ExtensionAttribute]
public static Task`1<string> IssueClientJwtAsync(IdentityServerTools tools, string clientId, int lifetime, IEnumerable`1<string> scopes, IEnumerable`1<string> audiences, IEnumerable`1<Claim> additionalClaims);
}
public class IdentityServer4.IdentityServerUser : object {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdentityProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <AuthenticationMethods>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <AuthenticationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<Claim> <AdditionalClaims>k__BackingField;
    public string SubjectId { get; }
    public string DisplayName { get; public set; }
    public string IdentityProvider { get; public set; }
    public ICollection`1<string> AuthenticationMethods { get; public set; }
    public Nullable`1<DateTime> AuthenticationTime { get; public set; }
    public ICollection`1<Claim> AdditionalClaims { get; public set; }
    public IdentityServerUser(string subjectId);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_IdentityProvider();
    [CompilerGeneratedAttribute]
public void set_IdentityProvider(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_AuthenticationMethods();
    [CompilerGeneratedAttribute]
public void set_AuthenticationMethods(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_AuthenticationTime();
    [CompilerGeneratedAttribute]
public void set_AuthenticationTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public ICollection`1<Claim> get_AdditionalClaims();
    [CompilerGeneratedAttribute]
public void set_AdditionalClaims(ICollection`1<Claim> value);
    public ClaimsPrincipal CreatePrincipal();
}
public class IdentityServer4.Infrastructure.DistributedCacheStateDataFormatter : object {
    private IHttpContextAccessor _httpContext;
    private string _name;
    private string CacheKeyPrefix { get; }
    private IDistributedCache Cache { get; }
    private IDataProtector Protector { get; }
    public DistributedCacheStateDataFormatter(IHttpContextAccessor httpContext, string name);
    private string get_CacheKeyPrefix();
    private IDistributedCache get_Cache();
    private IDataProtector get_Protector();
    public sealed virtual string Protect(AuthenticationProperties data);
    public sealed virtual string Protect(AuthenticationProperties data, string purpose);
    public sealed virtual AuthenticationProperties Unprotect(string protectedText);
    public sealed virtual AuthenticationProperties Unprotect(string protectedText, string purpose);
}
internal class IdentityServer4.Logging.DeviceAuthorizationRequestValidationLog : object {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Raw>k__BackingField;
    private static String[] SensitiveValuesFilter;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string Scopes { get; public set; }
    public Dictionary`2<string, string> Raw { get; public set; }
    public DeviceAuthorizationRequestValidationLog(ValidatedDeviceAuthorizationRequest request);
    private static DeviceAuthorizationRequestValidationLog();
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Raw();
    [CompilerGeneratedAttribute]
public void set_Raw(Dictionary`2<string, string> value);
    public virtual string ToString();
}
internal static class IdentityServer4.Logging.LogSerializer : object {
    private static JsonSerializerOptions Options;
    private static LogSerializer();
    public static string Serialize(object logObject);
}
internal class IdentityServer4.Logging.Models.AuthorizeRequestValidationLog : object {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RedirectUri>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <AllowedRedirectUris>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResponseType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResponseMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GrantType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestedScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <State>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UiLocales>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Nonce>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <AuthenticationContextReferenceClasses>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PromptMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxAge>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LoginHint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionId>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Raw>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string RedirectUri { get; public set; }
    public IEnumerable`1<string> AllowedRedirectUris { get; public set; }
    public string SubjectId { get; public set; }
    public string ResponseType { get; public set; }
    public string ResponseMode { get; public set; }
    public string GrantType { get; public set; }
    public string RequestedScopes { get; public set; }
    public string State { get; public set; }
    public string UiLocales { get; public set; }
    public string Nonce { get; public set; }
    public IEnumerable`1<string> AuthenticationContextReferenceClasses { get; public set; }
    public string DisplayMode { get; public set; }
    public string PromptMode { get; public set; }
    public Nullable`1<int> MaxAge { get; public set; }
    public string LoginHint { get; public set; }
    public string SessionId { get; public set; }
    public Dictionary`2<string, string> Raw { get; public set; }
    public AuthorizeRequestValidationLog(ValidatedAuthorizeRequest request, IEnumerable`1<string> sensitiveValuesFilter);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_RedirectUri();
    [CompilerGeneratedAttribute]
public void set_RedirectUri(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_AllowedRedirectUris();
    [CompilerGeneratedAttribute]
public void set_AllowedRedirectUris(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_ResponseType();
    [CompilerGeneratedAttribute]
public void set_ResponseType(string value);
    [CompilerGeneratedAttribute]
public string get_ResponseMode();
    [CompilerGeneratedAttribute]
public void set_ResponseMode(string value);
    [CompilerGeneratedAttribute]
public string get_GrantType();
    [CompilerGeneratedAttribute]
public void set_GrantType(string value);
    [CompilerGeneratedAttribute]
public string get_RequestedScopes();
    [CompilerGeneratedAttribute]
public void set_RequestedScopes(string value);
    [CompilerGeneratedAttribute]
public string get_State();
    [CompilerGeneratedAttribute]
public void set_State(string value);
    [CompilerGeneratedAttribute]
public string get_UiLocales();
    [CompilerGeneratedAttribute]
public void set_UiLocales(string value);
    [CompilerGeneratedAttribute]
public string get_Nonce();
    [CompilerGeneratedAttribute]
public void set_Nonce(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_AuthenticationContextReferenceClasses();
    [CompilerGeneratedAttribute]
public void set_AuthenticationContextReferenceClasses(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_DisplayMode();
    [CompilerGeneratedAttribute]
public void set_DisplayMode(string value);
    [CompilerGeneratedAttribute]
public string get_PromptMode();
    [CompilerGeneratedAttribute]
public void set_PromptMode(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxAge();
    [CompilerGeneratedAttribute]
public void set_MaxAge(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_LoginHint();
    [CompilerGeneratedAttribute]
public void set_LoginHint(string value);
    [CompilerGeneratedAttribute]
public string get_SessionId();
    [CompilerGeneratedAttribute]
public void set_SessionId(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Raw();
    [CompilerGeneratedAttribute]
public void set_Raw(Dictionary`2<string, string> value);
    public virtual string ToString();
}
internal class IdentityServer4.Logging.Models.AuthorizeResponseLog : object {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RedirectUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <State>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    public string SubjectId { get; public set; }
    public string ClientId { get; public set; }
    public string RedirectUri { get; public set; }
    public string State { get; public set; }
    public string Scope { get; public set; }
    public string Error { get; public set; }
    public string ErrorDescription { get; public set; }
    public AuthorizeResponseLog(AuthorizeResponse response);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_RedirectUri();
    [CompilerGeneratedAttribute]
public void set_RedirectUri(string value);
    [CompilerGeneratedAttribute]
public string get_State();
    [CompilerGeneratedAttribute]
public void set_State(string value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
    public virtual string ToString();
}
internal class IdentityServer4.Logging.Models.EndSessionRequestValidationLog : object {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PostLogOutUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <State>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Raw>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string SubjectId { get; public set; }
    public string PostLogOutUri { get; public set; }
    public string State { get; public set; }
    public Dictionary`2<string, string> Raw { get; public set; }
    public EndSessionRequestValidationLog(ValidatedEndSessionRequest request);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_PostLogOutUri();
    [CompilerGeneratedAttribute]
public void set_PostLogOutUri(string value);
    [CompilerGeneratedAttribute]
public string get_State();
    [CompilerGeneratedAttribute]
public void set_State(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Raw();
    [CompilerGeneratedAttribute]
public void set_Raw(Dictionary`2<string, string> value);
    public virtual string ToString();
}
internal class IdentityServer4.Logging.Models.TokenRequestValidationLog : object {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GrantType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthorizationCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RefreshToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserName>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <AuthenticationContextReferenceClasses>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tenant>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdP>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Raw>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string GrantType { get; public set; }
    public string Scopes { get; public set; }
    public string AuthorizationCode { get; public set; }
    public string RefreshToken { get; public set; }
    public string UserName { get; public set; }
    public IEnumerable`1<string> AuthenticationContextReferenceClasses { get; public set; }
    public string Tenant { get; public set; }
    public string IdP { get; public set; }
    public Dictionary`2<string, string> Raw { get; public set; }
    public TokenRequestValidationLog(ValidatedTokenRequest request, IEnumerable`1<string> sensitiveValuesFilter);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_GrantType();
    [CompilerGeneratedAttribute]
public void set_GrantType(string value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
    [CompilerGeneratedAttribute]
public string get_AuthorizationCode();
    [CompilerGeneratedAttribute]
public void set_AuthorizationCode(string value);
    [CompilerGeneratedAttribute]
public string get_RefreshToken();
    [CompilerGeneratedAttribute]
public void set_RefreshToken(string value);
    [CompilerGeneratedAttribute]
public string get_UserName();
    [CompilerGeneratedAttribute]
public void set_UserName(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_AuthenticationContextReferenceClasses();
    [CompilerGeneratedAttribute]
public void set_AuthenticationContextReferenceClasses(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Tenant();
    [CompilerGeneratedAttribute]
public void set_Tenant(string value);
    [CompilerGeneratedAttribute]
public string get_IdP();
    [CompilerGeneratedAttribute]
public void set_IdP(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Raw();
    [CompilerGeneratedAttribute]
public void set_Raw(Dictionary`2<string, string> value);
    public virtual string ToString();
}
internal class IdentityServer4.Logging.Models.TokenValidationLog : object {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ValidateLifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessTokenType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExpectedScope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenHandle>k__BackingField;
    [CompilerGeneratedAttribute]
private string <JwtId>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Claims>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public bool ValidateLifetime { get; public set; }
    public string AccessTokenType { get; public set; }
    public string ExpectedScope { get; public set; }
    public string TokenHandle { get; public set; }
    public string JwtId { get; public set; }
    public Dictionary`2<string, object> Claims { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public bool get_ValidateLifetime();
    [CompilerGeneratedAttribute]
public void set_ValidateLifetime(bool value);
    [CompilerGeneratedAttribute]
public string get_AccessTokenType();
    [CompilerGeneratedAttribute]
public void set_AccessTokenType(string value);
    [CompilerGeneratedAttribute]
public string get_ExpectedScope();
    [CompilerGeneratedAttribute]
public void set_ExpectedScope(string value);
    [CompilerGeneratedAttribute]
public string get_TokenHandle();
    [CompilerGeneratedAttribute]
public void set_TokenHandle(string value);
    [CompilerGeneratedAttribute]
public string get_JwtId();
    [CompilerGeneratedAttribute]
public void set_JwtId(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Claims();
    [CompilerGeneratedAttribute]
public void set_Claims(Dictionary`2<string, object> value);
    public virtual string ToString();
}
internal class IdentityServer4.MessageCookie`1 : object {
    private ILogger _logger;
    private IdentityServerOptions _options;
    private IHttpContextAccessor _context;
    private IDataProtector _protector;
    private string MessageType { get; }
    private string CookiePrefix { get; }
    private string CookiePath { get; }
    private bool Secure { get; }
    public MessageCookie`1(ILogger`1<MessageCookie`1<TModel>> logger, IdentityServerOptions options, IHttpContextAccessor context, IDataProtectionProvider provider);
    private string get_MessageType();
    private string Protect(Message`1<TModel> message);
    private Message`1<TModel> Unprotect(string data);
    private string get_CookiePrefix();
    private string GetCookieFullName(string id);
    private string get_CookiePath();
    [IteratorStateMachineAttribute("IdentityServer4.MessageCookie`1/<GetCookieNames>d__14")]
private IEnumerable`1<string> GetCookieNames();
    private bool get_Secure();
    public void Write(string id, Message`1<TModel> message);
    public Message`1<TModel> Read(string id);
    private Message`1<TModel> ReadByCookieName(string name);
    protected internal void Clear(string id);
    private void ClearByCookieName(string name);
    private long GetCookieRank(string name);
    private void ClearOverflow();
    [CompilerGeneratedAttribute]
private <>f__AnonymousType3`2<string, long> <ClearOverflow>b__23_0(string name);
}
public enum IdentityServer4.Models.AuthorizationError : Enum {
    public int value__;
    public static AuthorizationError AccessDenied;
    public static AuthorizationError InteractionRequired;
    public static AuthorizationError LoginRequired;
    public static AuthorizationError AccountSelectionRequired;
    public static AuthorizationError ConsentRequired;
}
public class IdentityServer4.Models.AuthorizationRequest : object {
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RedirectUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UiLocales>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdP>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tenant>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LoginHint>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <PromptModes>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <AcrValues>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceValidationResult <ValidatedResources>k__BackingField;
    [CompilerGeneratedAttribute]
private NameValueCollection <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <RequestObjectValues>k__BackingField;
    public Client Client { get; public set; }
    public string DisplayMode { get; public set; }
    public string RedirectUri { get; public set; }
    public string UiLocales { get; public set; }
    public string IdP { get; public set; }
    public string Tenant { get; public set; }
    public string LoginHint { get; public set; }
    public IEnumerable`1<string> PromptModes { get; public set; }
    public IEnumerable`1<string> AcrValues { get; public set; }
    public ResourceValidationResult ValidatedResources { get; public set; }
    public NameValueCollection Parameters { get; }
    public Dictionary`2<string, string> RequestObjectValues { get; }
    internal AuthorizationRequest(ValidatedAuthorizeRequest request);
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
    [CompilerGeneratedAttribute]
public string get_DisplayMode();
    [CompilerGeneratedAttribute]
public void set_DisplayMode(string value);
    [CompilerGeneratedAttribute]
public string get_RedirectUri();
    [CompilerGeneratedAttribute]
public void set_RedirectUri(string value);
    [CompilerGeneratedAttribute]
public string get_UiLocales();
    [CompilerGeneratedAttribute]
public void set_UiLocales(string value);
    [CompilerGeneratedAttribute]
public string get_IdP();
    [CompilerGeneratedAttribute]
public void set_IdP(string value);
    [CompilerGeneratedAttribute]
public string get_Tenant();
    [CompilerGeneratedAttribute]
public void set_Tenant(string value);
    [CompilerGeneratedAttribute]
public string get_LoginHint();
    [CompilerGeneratedAttribute]
public void set_LoginHint(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_PromptModes();
    [CompilerGeneratedAttribute]
public void set_PromptModes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_AcrValues();
    [CompilerGeneratedAttribute]
public void set_AcrValues(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public ResourceValidationResult get_ValidatedResources();
    [CompilerGeneratedAttribute]
public void set_ValidatedResources(ResourceValidationResult value);
    [CompilerGeneratedAttribute]
public NameValueCollection get_Parameters();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_RequestObjectValues();
}
[ExtensionAttribute]
internal static class IdentityServer4.Models.AuthorizeResponseExtensions : object {
    [ExtensionAttribute]
public static NameValueCollection ToNameValueCollection(AuthorizeResponse response);
}
[ExtensionAttribute]
public static class IdentityServer4.Models.ClientExtensions : object {
    [ExtensionAttribute]
public static bool IsImplicitOnly(Client client);
    [ExtensionAttribute]
public static Task`1<List`1<SecurityKey>> GetKeysAsync(IEnumerable`1<Secret> secrets);
    private static List`1<X509Certificate2> GetCertificates(IEnumerable`1<Secret> secrets);
}
public class IdentityServer4.Models.ConsentRequest : object {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Nonce>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ScopesRequested>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Subject>k__BackingField;
    public string ClientId { get; public set; }
    public string Nonce { get; public set; }
    public IEnumerable`1<string> ScopesRequested { get; public set; }
    public string Subject { get; public set; }
    public string Id { get; }
    public ConsentRequest(AuthorizationRequest request, string subject);
    public ConsentRequest(NameValueCollection parameters, string subject);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_Nonce();
    [CompilerGeneratedAttribute]
public void set_Nonce(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ScopesRequested();
    [CompilerGeneratedAttribute]
public void set_ScopesRequested(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(string value);
    public string get_Id();
}
public class IdentityServer4.Models.ConsentResponse : object {
    [CompilerGeneratedAttribute]
private Nullable`1<AuthorizationError> <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ScopesValuesConsented>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RememberConsent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    public Nullable`1<AuthorizationError> Error { get; public set; }
    public string ErrorDescription { get; public set; }
    public bool Granted { get; }
    public IEnumerable`1<string> ScopesValuesConsented { get; public set; }
    public bool RememberConsent { get; public set; }
    public string Description { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<AuthorizationError> get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(Nullable`1<AuthorizationError> value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
    public bool get_Granted();
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ScopesValuesConsented();
    [CompilerGeneratedAttribute]
public void set_ScopesValuesConsented(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_RememberConsent();
    [CompilerGeneratedAttribute]
public void set_RememberConsent(bool value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
}
public class IdentityServer4.Models.DeviceFlowAuthorizationRequest : object {
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceValidationResult <ValidatedResources>k__BackingField;
    public Client Client { get; public set; }
    public ResourceValidationResult ValidatedResources { get; public set; }
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
    [CompilerGeneratedAttribute]
public ResourceValidationResult get_ValidatedResources();
    [CompilerGeneratedAttribute]
public void set_ValidatedResources(ResourceValidationResult value);
}
public class IdentityServer4.Models.DeviceFlowInteractionResult : object {
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsError>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAccessDenied>k__BackingField;
    public string ErrorDescription { get; private set; }
    public bool IsError { get; private set; }
    public bool IsAccessDenied { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
private void set_ErrorDescription(string value);
    [CompilerGeneratedAttribute]
public bool get_IsError();
    [CompilerGeneratedAttribute]
private void set_IsError(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsAccessDenied();
    [CompilerGeneratedAttribute]
public void set_IsAccessDenied(bool value);
    public static DeviceFlowInteractionResult Failure(string errorDescription);
}
public class IdentityServer4.Models.DiscoveryDocument : object {
    [CompilerGeneratedAttribute]
private string <issuer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <jwks_uri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <authorization_endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <token_endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <userinfo_endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <end_session_endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <check_session_iframe>k__BackingField;
    [CompilerGeneratedAttribute]
private string <revocation_endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <introspection_endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <frontchannel_logout_supported>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <frontchannel_logout_session_supported>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <scopes_supported>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <claims_supported>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <response_types_supported>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <response_modes_supported>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <grant_types_supported>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <subject_types_supported>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <id_token_signing_alg_values_supported>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <token_endpoint_auth_methods_supported>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <code_challenge_methods_supported>k__BackingField;
    public string issuer { get; public set; }
    public string jwks_uri { get; public set; }
    public string authorization_endpoint { get; public set; }
    public string token_endpoint { get; public set; }
    public string userinfo_endpoint { get; public set; }
    public string end_session_endpoint { get; public set; }
    public string check_session_iframe { get; public set; }
    public string revocation_endpoint { get; public set; }
    public string introspection_endpoint { get; public set; }
    public Nullable`1<bool> frontchannel_logout_supported { get; public set; }
    public Nullable`1<bool> frontchannel_logout_session_supported { get; public set; }
    public String[] scopes_supported { get; public set; }
    public String[] claims_supported { get; public set; }
    public String[] response_types_supported { get; public set; }
    public String[] response_modes_supported { get; public set; }
    public String[] grant_types_supported { get; public set; }
    public String[] subject_types_supported { get; public set; }
    public String[] id_token_signing_alg_values_supported { get; public set; }
    public String[] token_endpoint_auth_methods_supported { get; public set; }
    public String[] code_challenge_methods_supported { get; public set; }
    [CompilerGeneratedAttribute]
public string get_issuer();
    [CompilerGeneratedAttribute]
public void set_issuer(string value);
    [CompilerGeneratedAttribute]
public string get_jwks_uri();
    [CompilerGeneratedAttribute]
public void set_jwks_uri(string value);
    [CompilerGeneratedAttribute]
public string get_authorization_endpoint();
    [CompilerGeneratedAttribute]
public void set_authorization_endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_token_endpoint();
    [CompilerGeneratedAttribute]
public void set_token_endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_userinfo_endpoint();
    [CompilerGeneratedAttribute]
public void set_userinfo_endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_end_session_endpoint();
    [CompilerGeneratedAttribute]
public void set_end_session_endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_check_session_iframe();
    [CompilerGeneratedAttribute]
public void set_check_session_iframe(string value);
    [CompilerGeneratedAttribute]
public string get_revocation_endpoint();
    [CompilerGeneratedAttribute]
public void set_revocation_endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_introspection_endpoint();
    [CompilerGeneratedAttribute]
public void set_introspection_endpoint(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_frontchannel_logout_supported();
    [CompilerGeneratedAttribute]
public void set_frontchannel_logout_supported(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_frontchannel_logout_session_supported();
    [CompilerGeneratedAttribute]
public void set_frontchannel_logout_session_supported(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public String[] get_scopes_supported();
    [CompilerGeneratedAttribute]
public void set_scopes_supported(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_claims_supported();
    [CompilerGeneratedAttribute]
public void set_claims_supported(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_response_types_supported();
    [CompilerGeneratedAttribute]
public void set_response_types_supported(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_response_modes_supported();
    [CompilerGeneratedAttribute]
public void set_response_modes_supported(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_grant_types_supported();
    [CompilerGeneratedAttribute]
public void set_grant_types_supported(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_subject_types_supported();
    [CompilerGeneratedAttribute]
public void set_subject_types_supported(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_id_token_signing_alg_values_supported();
    [CompilerGeneratedAttribute]
public void set_id_token_signing_alg_values_supported(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_token_endpoint_auth_methods_supported();
    [CompilerGeneratedAttribute]
public void set_token_endpoint_auth_methods_supported(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_code_challenge_methods_supported();
    [CompilerGeneratedAttribute]
public void set_code_challenge_methods_supported(String[] value);
}
public class IdentityServer4.Models.ErrorMessage : object {
    [CompilerGeneratedAttribute]
private string <DisplayMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UiLocales>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RedirectUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResponseMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    public string DisplayMode { get; public set; }
    public string UiLocales { get; public set; }
    public string Error { get; public set; }
    public string ErrorDescription { get; public set; }
    public string RequestId { get; public set; }
    public string RedirectUri { get; public set; }
    public string ResponseMode { get; public set; }
    public string ClientId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DisplayMode();
    [CompilerGeneratedAttribute]
public void set_DisplayMode(string value);
    [CompilerGeneratedAttribute]
public string get_UiLocales();
    [CompilerGeneratedAttribute]
public void set_UiLocales(string value);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
    [CompilerGeneratedAttribute]
public string get_RequestId();
    [CompilerGeneratedAttribute]
public void set_RequestId(string value);
    [CompilerGeneratedAttribute]
public string get_RedirectUri();
    [CompilerGeneratedAttribute]
public void set_RedirectUri(string value);
    [CompilerGeneratedAttribute]
public string get_ResponseMode();
    [CompilerGeneratedAttribute]
public void set_ResponseMode(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
}
public class IdentityServer4.Models.Grant : object {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <Expiration>k__BackingField;
    public string SubjectId { get; public set; }
    public string ClientId { get; public set; }
    public string Description { get; public set; }
    public IEnumerable`1<string> Scopes { get; public set; }
    public DateTime CreationTime { get; public set; }
    public Nullable`1<DateTime> Expiration { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public DateTime get_CreationTime();
    [CompilerGeneratedAttribute]
public void set_CreationTime(DateTime value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_Expiration();
    [CompilerGeneratedAttribute]
public void set_Expiration(Nullable`1<DateTime> value);
}
public class IdentityServer4.Models.GrantTypes : object {
    public static ICollection`1<string> Implicit { get; }
    public static ICollection`1<string> ImplicitAndClientCredentials { get; }
    public static ICollection`1<string> Code { get; }
    public static ICollection`1<string> CodeAndClientCredentials { get; }
    public static ICollection`1<string> Hybrid { get; }
    public static ICollection`1<string> HybridAndClientCredentials { get; }
    public static ICollection`1<string> ClientCredentials { get; }
    public static ICollection`1<string> ResourceOwnerPassword { get; }
    public static ICollection`1<string> ResourceOwnerPasswordAndClientCredentials { get; }
    public static ICollection`1<string> DeviceFlow { get; }
    public static ICollection`1<string> get_Implicit();
    public static ICollection`1<string> get_ImplicitAndClientCredentials();
    public static ICollection`1<string> get_Code();
    public static ICollection`1<string> get_CodeAndClientCredentials();
    public static ICollection`1<string> get_Hybrid();
    public static ICollection`1<string> get_HybridAndClientCredentials();
    public static ICollection`1<string> get_ClientCredentials();
    public static ICollection`1<string> get_ResourceOwnerPassword();
    public static ICollection`1<string> get_ResourceOwnerPasswordAndClientCredentials();
    public static ICollection`1<string> get_DeviceFlow();
}
[ExtensionAttribute]
public static class IdentityServer4.Models.HashExtensions : object {
    [ExtensionAttribute]
public static string Sha256(string input);
    [ExtensionAttribute]
public static Byte[] Sha256(Byte[] input);
    [ExtensionAttribute]
public static string Sha512(string input);
}
public static class IdentityServer4.Models.IdentityResources : object {
}
public class IdentityServer4.Models.IsActiveContext : object {
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Caller>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsActive>k__BackingField;
    public ClaimsPrincipal Subject { get; public set; }
    public Client Client { get; public set; }
    public string Caller { get; public set; }
    public bool IsActive { get; public set; }
    public IsActiveContext(ClaimsPrincipal subject, Client client, string caller);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(ClaimsPrincipal value);
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
    [CompilerGeneratedAttribute]
public string get_Caller();
    [CompilerGeneratedAttribute]
public void set_Caller(string value);
    [CompilerGeneratedAttribute]
public bool get_IsActive();
    [CompilerGeneratedAttribute]
public void set_IsActive(bool value);
}
public class IdentityServer4.Models.JsonWebKey : object {
    [CompilerGeneratedAttribute]
private string <kty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <use>k__BackingField;
    [CompilerGeneratedAttribute]
private string <kid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <x5t>k__BackingField;
    [CompilerGeneratedAttribute]
private string <e>k__BackingField;
    [CompilerGeneratedAttribute]
private string <n>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <x5c>k__BackingField;
    [CompilerGeneratedAttribute]
private string <alg>k__BackingField;
    [CompilerGeneratedAttribute]
private string <x>k__BackingField;
    [CompilerGeneratedAttribute]
private string <y>k__BackingField;
    [CompilerGeneratedAttribute]
private string <crv>k__BackingField;
    public string kty { get; public set; }
    public string use { get; public set; }
    public string kid { get; public set; }
    public string x5t { get; public set; }
    public string e { get; public set; }
    public string n { get; public set; }
    public String[] x5c { get; public set; }
    public string alg { get; public set; }
    public string x { get; public set; }
    public string y { get; public set; }
    public string crv { get; public set; }
    [CompilerGeneratedAttribute]
public string get_kty();
    [CompilerGeneratedAttribute]
public void set_kty(string value);
    [CompilerGeneratedAttribute]
public string get_use();
    [CompilerGeneratedAttribute]
public void set_use(string value);
    [CompilerGeneratedAttribute]
public string get_kid();
    [CompilerGeneratedAttribute]
public void set_kid(string value);
    [CompilerGeneratedAttribute]
public string get_x5t();
    [CompilerGeneratedAttribute]
public void set_x5t(string value);
    [CompilerGeneratedAttribute]
public string get_e();
    [CompilerGeneratedAttribute]
public void set_e(string value);
    [CompilerGeneratedAttribute]
public string get_n();
    [CompilerGeneratedAttribute]
public void set_n(string value);
    [CompilerGeneratedAttribute]
public String[] get_x5c();
    [CompilerGeneratedAttribute]
public void set_x5c(String[] value);
    [CompilerGeneratedAttribute]
public string get_alg();
    [CompilerGeneratedAttribute]
public void set_alg(string value);
    [CompilerGeneratedAttribute]
public string get_x();
    [CompilerGeneratedAttribute]
public void set_x(string value);
    [CompilerGeneratedAttribute]
public string get_y();
    [CompilerGeneratedAttribute]
public void set_y(string value);
    [CompilerGeneratedAttribute]
public string get_crv();
    [CompilerGeneratedAttribute]
public void set_crv(string value);
}
public class IdentityServer4.Models.LogoutMessage : object {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PostLogoutRedirectUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionId>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ClientIds>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, String[]> <Parameters>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string PostLogoutRedirectUri { get; public set; }
    public string SubjectId { get; public set; }
    public string SessionId { get; public set; }
    public IEnumerable`1<string> ClientIds { get; public set; }
    public IDictionary`2<string, String[]> Parameters { get; public set; }
    internal bool ContainsPayload { get; }
    public LogoutMessage(ValidatedEndSessionRequest request);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_PostLogoutRedirectUri();
    [CompilerGeneratedAttribute]
public void set_PostLogoutRedirectUri(string value);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_SessionId();
    [CompilerGeneratedAttribute]
public void set_SessionId(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ClientIds();
    [CompilerGeneratedAttribute]
public void set_ClientIds(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, String[]> get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(IDictionary`2<string, String[]> value);
    internal bool get_ContainsPayload();
}
public class IdentityServer4.Models.LogoutNotificationContext : object {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionId>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ClientIds>k__BackingField;
    public string SubjectId { get; public set; }
    public string SessionId { get; public set; }
    public IEnumerable`1<string> ClientIds { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_SessionId();
    [CompilerGeneratedAttribute]
public void set_SessionId(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ClientIds();
    [CompilerGeneratedAttribute]
public void set_ClientIds(IEnumerable`1<string> value);
}
public class IdentityServer4.Models.LogoutRequest : object {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PostLogoutRedirectUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionId>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ClientIds>k__BackingField;
    [CompilerGeneratedAttribute]
private NameValueCollection <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SignOutIFrameUrl>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientName { get; public set; }
    public string PostLogoutRedirectUri { get; public set; }
    public string SubjectId { get; public set; }
    public string SessionId { get; public set; }
    public IEnumerable`1<string> ClientIds { get; public set; }
    public NameValueCollection Parameters { get; }
    public string SignOutIFrameUrl { get; public set; }
    public bool ShowSignoutPrompt { get; }
    public LogoutRequest(string iframeUrl, LogoutMessage message);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientName();
    [CompilerGeneratedAttribute]
public void set_ClientName(string value);
    [CompilerGeneratedAttribute]
public string get_PostLogoutRedirectUri();
    [CompilerGeneratedAttribute]
public void set_PostLogoutRedirectUri(string value);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_SessionId();
    [CompilerGeneratedAttribute]
public void set_SessionId(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ClientIds();
    [CompilerGeneratedAttribute]
public void set_ClientIds(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public NameValueCollection get_Parameters();
    [CompilerGeneratedAttribute]
public string get_SignOutIFrameUrl();
    [CompilerGeneratedAttribute]
public void set_SignOutIFrameUrl(string value);
    public bool get_ShowSignoutPrompt();
}
public class IdentityServer4.Models.Message`1 : object {
    [CompilerGeneratedAttribute]
private long <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private TModel <Data>k__BackingField;
    public long Created { get; public set; }
    public TModel Data { get; public set; }
    internal Message`1(TModel data);
    public Message`1(TModel data, DateTime now);
    [CompilerGeneratedAttribute]
public long get_Created();
    [CompilerGeneratedAttribute]
public void set_Created(long value);
    [CompilerGeneratedAttribute]
public TModel get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(TModel value);
}
public class IdentityServer4.Models.ParsedSecret : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Credential>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Properties>k__BackingField;
    public string Id { get; public set; }
    public object Credential { get; public set; }
    public string Type { get; public set; }
    public Dictionary`2<string, string> Properties { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public object get_Credential();
    [CompilerGeneratedAttribute]
public void set_Credential(object value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(Dictionary`2<string, string> value);
}
public class IdentityServer4.Models.ProfileDataRequestContext : object {
    [CompilerGeneratedAttribute]
private ValidatedRequest <ValidatedRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <RequestedClaimTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Caller>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceValidationResult <RequestedResources>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Claim> <IssuedClaims>k__BackingField;
    public ValidatedRequest ValidatedRequest { get; public set; }
    public ClaimsPrincipal Subject { get; public set; }
    public IEnumerable`1<string> RequestedClaimTypes { get; public set; }
    public Client Client { get; public set; }
    public string Caller { get; public set; }
    public ResourceValidationResult RequestedResources { get; public set; }
    public List`1<Claim> IssuedClaims { get; public set; }
    public ProfileDataRequestContext(ClaimsPrincipal subject, Client client, string caller, IEnumerable`1<string> requestedClaimTypes);
    [CompilerGeneratedAttribute]
public ValidatedRequest get_ValidatedRequest();
    [CompilerGeneratedAttribute]
public void set_ValidatedRequest(ValidatedRequest value);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(ClaimsPrincipal value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_RequestedClaimTypes();
    [CompilerGeneratedAttribute]
public void set_RequestedClaimTypes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
    [CompilerGeneratedAttribute]
public string get_Caller();
    [CompilerGeneratedAttribute]
public void set_Caller(string value);
    [CompilerGeneratedAttribute]
public ResourceValidationResult get_RequestedResources();
    [CompilerGeneratedAttribute]
public void set_RequestedResources(ResourceValidationResult value);
    [CompilerGeneratedAttribute]
public List`1<Claim> get_IssuedClaims();
    [CompilerGeneratedAttribute]
public void set_IssuedClaims(List`1<Claim> value);
}
[ExtensionAttribute]
public static class IdentityServer4.Models.ProfileDataRequestContextExtensions : object {
    [ExtensionAttribute]
public static List`1<Claim> FilterClaims(ProfileDataRequestContext context, IEnumerable`1<Claim> claims);
    [ExtensionAttribute]
public static void AddRequestedClaims(ProfileDataRequestContext context, IEnumerable`1<Claim> claims);
    [ExtensionAttribute]
public static void LogProfileRequest(ProfileDataRequestContext context, ILogger logger);
    [ExtensionAttribute]
public static void LogIssuedClaims(ProfileDataRequestContext context, ILogger logger);
}
[ExtensionAttribute]
public static class IdentityServer4.Models.ResourceExtensions : object {
    [ExtensionAttribute]
public static IEnumerable`1<string> GetRequiredScopeValues(ResourceValidationResult resourceValidationResult);
    [ExtensionAttribute]
public static IEnumerable`1<string> ToScopeNames(Resources resources);
    [ExtensionAttribute]
public static IdentityResource FindIdentityResourcesByScope(Resources resources, string name);
    [ExtensionAttribute]
public static IEnumerable`1<ApiResource> FindApiResourcesByScope(Resources resources, string name);
    [ExtensionAttribute]
public static ApiScope FindApiScope(Resources resources, string name);
    [ExtensionAttribute]
internal static Resources FilterEnabled(Resources resources);
    [ExtensionAttribute]
internal static ICollection`1<string> FindMatchingSigningAlgorithms(IEnumerable`1<ApiResource> apiResources);
    private static IEnumerable`1<T> IntersectLists(IEnumerable`1<IEnumerable`1<T>> lists);
}
[ExtensionAttribute]
internal static class IdentityServer4.Models.ScopeExtensions : object {
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static string ToSpaceSeparatedString(IEnumerable`1<ApiScope> apiScopes);
    [ExtensionAttribute]
[DebuggerStepThroughAttribute]
public static IEnumerable`1<string> ToStringList(IEnumerable`1<ApiScope> apiScopes);
}
public class IdentityServer4.Models.SecurityKeyInfo : object {
    [CompilerGeneratedAttribute]
private SecurityKey <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SigningAlgorithm>k__BackingField;
    public SecurityKey Key { get; public set; }
    public string SigningAlgorithm { get; public set; }
    [CompilerGeneratedAttribute]
public SecurityKey get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(SecurityKey value);
    [CompilerGeneratedAttribute]
public string get_SigningAlgorithm();
    [CompilerGeneratedAttribute]
public void set_SigningAlgorithm(string value);
}
public class IdentityServer4.Models.TokenCreationRequest : object {
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceValidationResult <ValidatedResources>k__BackingField;
    [CompilerGeneratedAttribute]
private ValidatedRequest <ValidatedRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeAllIdentityClaims>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessTokenToHash>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthorizationCodeToHash>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StateHash>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Nonce>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    public ClaimsPrincipal Subject { get; public set; }
    public ResourceValidationResult ValidatedResources { get; public set; }
    public ValidatedRequest ValidatedRequest { get; public set; }
    public bool IncludeAllIdentityClaims { get; public set; }
    public string AccessTokenToHash { get; public set; }
    public string AuthorizationCodeToHash { get; public set; }
    public string StateHash { get; public set; }
    public string Nonce { get; public set; }
    public string Description { get; public set; }
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(ClaimsPrincipal value);
    [CompilerGeneratedAttribute]
public ResourceValidationResult get_ValidatedResources();
    [CompilerGeneratedAttribute]
public void set_ValidatedResources(ResourceValidationResult value);
    [CompilerGeneratedAttribute]
public ValidatedRequest get_ValidatedRequest();
    [CompilerGeneratedAttribute]
public void set_ValidatedRequest(ValidatedRequest value);
    [CompilerGeneratedAttribute]
public bool get_IncludeAllIdentityClaims();
    [CompilerGeneratedAttribute]
public void set_IncludeAllIdentityClaims(bool value);
    [CompilerGeneratedAttribute]
public string get_AccessTokenToHash();
    [CompilerGeneratedAttribute]
public void set_AccessTokenToHash(string value);
    [CompilerGeneratedAttribute]
public string get_AuthorizationCodeToHash();
    [CompilerGeneratedAttribute]
public void set_AuthorizationCodeToHash(string value);
    [CompilerGeneratedAttribute]
public string get_StateHash();
    [CompilerGeneratedAttribute]
public void set_StateHash(string value);
    [CompilerGeneratedAttribute]
public string get_Nonce();
    [CompilerGeneratedAttribute]
public void set_Nonce(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    public void Validate();
}
public enum IdentityServer4.Models.TokenRequestErrors : Enum {
    public int value__;
    public static TokenRequestErrors InvalidRequest;
    public static TokenRequestErrors InvalidClient;
    public static TokenRequestErrors InvalidGrant;
    public static TokenRequestErrors UnauthorizedClient;
    public static TokenRequestErrors UnsupportedGrantType;
    public static TokenRequestErrors InvalidScope;
    public static TokenRequestErrors InvalidTarget;
}
internal static class IdentityServer4.ObjectSerializer : object {
    private static JsonSerializerOptions Options;
    private static ObjectSerializer();
    public static string ToString(object o);
    public static T FromString(string value);
}
public class IdentityServer4.ResponseHandling.AuthorizeInteractionResponseGenerator : object {
    protected ILogger Logger;
    protected IConsentService Consent;
    protected IProfileService Profile;
    protected ISystemClock Clock;
    public AuthorizeInteractionResponseGenerator(ISystemClock clock, ILogger`1<AuthorizeInteractionResponseGenerator> logger, IConsentService consent, IProfileService profile);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.AuthorizeInteractionResponseGenerator/<ProcessInteractionAsync>d__5")]
public virtual Task`1<InteractionResponse> ProcessInteractionAsync(ValidatedAuthorizeRequest request, ConsentResponse consent);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.AuthorizeInteractionResponseGenerator/<ProcessLoginAsync>d__6")]
protected internal virtual Task`1<InteractionResponse> ProcessLoginAsync(ValidatedAuthorizeRequest request);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.AuthorizeInteractionResponseGenerator/<ProcessConsentAsync>d__7")]
protected internal virtual Task`1<InteractionResponse> ProcessConsentAsync(ValidatedAuthorizeRequest request, ConsentResponse consent);
}
public class IdentityServer4.ResponseHandling.AuthorizeResponse : object {
    [CompilerGeneratedAttribute]
private ValidatedAuthorizeRequest <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdentityToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AccessTokenLifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionState>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    public ValidatedAuthorizeRequest Request { get; public set; }
    public string RedirectUri { get; }
    public string State { get; }
    public string Scope { get; }
    public string IdentityToken { get; public set; }
    public string AccessToken { get; public set; }
    public int AccessTokenLifetime { get; public set; }
    public string Code { get; public set; }
    public string SessionState { get; public set; }
    public string Error { get; public set; }
    public string ErrorDescription { get; public set; }
    public bool IsError { get; }
    [CompilerGeneratedAttribute]
public ValidatedAuthorizeRequest get_Request();
    [CompilerGeneratedAttribute]
public void set_Request(ValidatedAuthorizeRequest value);
    public string get_RedirectUri();
    public string get_State();
    public string get_Scope();
    [CompilerGeneratedAttribute]
public string get_IdentityToken();
    [CompilerGeneratedAttribute]
public void set_IdentityToken(string value);
    [CompilerGeneratedAttribute]
public string get_AccessToken();
    [CompilerGeneratedAttribute]
public void set_AccessToken(string value);
    [CompilerGeneratedAttribute]
public int get_AccessTokenLifetime();
    [CompilerGeneratedAttribute]
public void set_AccessTokenLifetime(int value);
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(string value);
    [CompilerGeneratedAttribute]
public string get_SessionState();
    [CompilerGeneratedAttribute]
public void set_SessionState(string value);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
    public bool get_IsError();
}
public class IdentityServer4.ResponseHandling.AuthorizeResponseGenerator : object {
    protected ITokenService TokenService;
    protected IAuthorizationCodeStore AuthorizationCodeStore;
    protected IEventService Events;
    protected ILogger Logger;
    protected ISystemClock Clock;
    protected IKeyMaterialService KeyMaterialService;
    public AuthorizeResponseGenerator(ISystemClock clock, ITokenService tokenService, IKeyMaterialService keyMaterialService, IAuthorizationCodeStore authorizationCodeStore, ILogger`1<AuthorizeResponseGenerator> logger, IEventService events);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.AuthorizeResponseGenerator/<CreateResponseAsync>d__7")]
public virtual Task`1<AuthorizeResponse> CreateResponseAsync(ValidatedAuthorizeRequest request);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.AuthorizeResponseGenerator/<CreateHybridFlowResponseAsync>d__8")]
protected virtual Task`1<AuthorizeResponse> CreateHybridFlowResponseAsync(ValidatedAuthorizeRequest request);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.AuthorizeResponseGenerator/<CreateCodeFlowResponseAsync>d__9")]
protected virtual Task`1<AuthorizeResponse> CreateCodeFlowResponseAsync(ValidatedAuthorizeRequest request);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.AuthorizeResponseGenerator/<CreateImplicitFlowResponseAsync>d__10")]
protected virtual Task`1<AuthorizeResponse> CreateImplicitFlowResponseAsync(ValidatedAuthorizeRequest request, string authorizationCode);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.AuthorizeResponseGenerator/<CreateCodeAsync>d__11")]
protected virtual Task`1<AuthorizationCode> CreateCodeAsync(ValidatedAuthorizeRequest request);
}
public class IdentityServer4.ResponseHandling.DeviceAuthorizationResponse : object {
    [CompilerGeneratedAttribute]
private string <DeviceCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VerificationUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VerificationUriComplete>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DeviceCodeLifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Interval>k__BackingField;
    public string DeviceCode { get; public set; }
    public string UserCode { get; public set; }
    public string VerificationUri { get; public set; }
    public string VerificationUriComplete { get; public set; }
    public int DeviceCodeLifetime { get; public set; }
    public int Interval { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DeviceCode();
    [CompilerGeneratedAttribute]
public void set_DeviceCode(string value);
    [CompilerGeneratedAttribute]
public string get_UserCode();
    [CompilerGeneratedAttribute]
public void set_UserCode(string value);
    [CompilerGeneratedAttribute]
public string get_VerificationUri();
    [CompilerGeneratedAttribute]
public void set_VerificationUri(string value);
    [CompilerGeneratedAttribute]
public string get_VerificationUriComplete();
    [CompilerGeneratedAttribute]
public void set_VerificationUriComplete(string value);
    [CompilerGeneratedAttribute]
public int get_DeviceCodeLifetime();
    [CompilerGeneratedAttribute]
public void set_DeviceCodeLifetime(int value);
    [CompilerGeneratedAttribute]
public int get_Interval();
    [CompilerGeneratedAttribute]
public void set_Interval(int value);
}
public class IdentityServer4.ResponseHandling.DeviceAuthorizationResponseGenerator : object {
    protected IdentityServerOptions Options;
    protected IUserCodeService UserCodeService;
    protected IDeviceFlowCodeService DeviceFlowCodeService;
    protected ISystemClock Clock;
    protected ILogger Logger;
    public DeviceAuthorizationResponseGenerator(IdentityServerOptions options, IUserCodeService userCodeService, IDeviceFlowCodeService deviceFlowCodeService, ISystemClock clock, ILogger`1<DeviceAuthorizationResponseGenerator> logger);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.DeviceAuthorizationResponseGenerator/<ProcessAsync>d__6")]
public virtual Task`1<DeviceAuthorizationResponse> ProcessAsync(DeviceAuthorizationRequestValidationResult validationResult, string baseUrl);
}
public class IdentityServer4.ResponseHandling.DiscoveryResponseGenerator : object {
    protected IdentityServerOptions Options;
    protected ExtensionGrantValidator ExtensionGrants;
    protected IKeyMaterialService Keys;
    protected IResourceOwnerPasswordValidator ResourceOwnerValidator;
    protected IResourceStore ResourceStore;
    protected ISecretsListParser SecretParsers;
    protected ILogger Logger;
    public DiscoveryResponseGenerator(IdentityServerOptions options, IResourceStore resourceStore, IKeyMaterialService keys, ExtensionGrantValidator extensionGrants, ISecretsListParser secretParsers, IResourceOwnerPasswordValidator resourceOwnerValidator, ILogger`1<DiscoveryResponseGenerator> logger);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.DiscoveryResponseGenerator/<CreateDiscoveryDocumentAsync>d__8")]
public virtual Task`1<Dictionary`2<string, object>> CreateDiscoveryDocumentAsync(string baseUrl, string issuerUri);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.DiscoveryResponseGenerator/<CreateJwkDocumentAsync>d__9")]
public virtual Task`1<IEnumerable`1<JsonWebKey>> CreateJwkDocumentAsync();
    [CompilerGeneratedAttribute]
private string <CreateDiscoveryDocumentAsync>g__ConstructMtlsEndpoint|8_0(string endpoint, <>c__DisplayClass8_0& );
}
public interface IdentityServer4.ResponseHandling.IAuthorizeInteractionResponseGenerator {
    public abstract virtual Task`1<InteractionResponse> ProcessInteractionAsync(ValidatedAuthorizeRequest request, ConsentResponse consent);
}
public interface IdentityServer4.ResponseHandling.IAuthorizeResponseGenerator {
    public abstract virtual Task`1<AuthorizeResponse> CreateResponseAsync(ValidatedAuthorizeRequest request);
}
public interface IdentityServer4.ResponseHandling.IDeviceAuthorizationResponseGenerator {
    public abstract virtual Task`1<DeviceAuthorizationResponse> ProcessAsync(DeviceAuthorizationRequestValidationResult validationResult, string baseUrl);
}
public interface IdentityServer4.ResponseHandling.IDiscoveryResponseGenerator {
    public abstract virtual Task`1<Dictionary`2<string, object>> CreateDiscoveryDocumentAsync(string baseUrl, string issuerUri);
    public abstract virtual Task`1<IEnumerable`1<JsonWebKey>> CreateJwkDocumentAsync();
}
public interface IdentityServer4.ResponseHandling.IIntrospectionResponseGenerator {
    public abstract virtual Task`1<Dictionary`2<string, object>> ProcessAsync(IntrospectionRequestValidationResult validationResult);
}
public class IdentityServer4.ResponseHandling.InteractionResponse : object {
    [CompilerGeneratedAttribute]
private bool <IsLogin>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsConsent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RedirectUrl>k__BackingField;
    public bool IsLogin { get; public set; }
    public bool IsConsent { get; public set; }
    public bool IsError { get; }
    public string Error { get; public set; }
    public string ErrorDescription { get; public set; }
    public bool IsRedirect { get; }
    public string RedirectUrl { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsLogin();
    [CompilerGeneratedAttribute]
public void set_IsLogin(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsConsent();
    [CompilerGeneratedAttribute]
public void set_IsConsent(bool value);
    public bool get_IsError();
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
    public bool get_IsRedirect();
    [CompilerGeneratedAttribute]
public string get_RedirectUrl();
    [CompilerGeneratedAttribute]
public void set_RedirectUrl(string value);
}
public class IdentityServer4.ResponseHandling.IntrospectionResponseGenerator : object {
    protected IEventService Events;
    protected ILogger Logger;
    public IntrospectionResponseGenerator(IEventService events, ILogger`1<IntrospectionResponseGenerator> logger);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.IntrospectionResponseGenerator/<ProcessAsync>d__3")]
public virtual Task`1<Dictionary`2<string, object>> ProcessAsync(IntrospectionRequestValidationResult validationResult);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.IntrospectionResponseGenerator/<AreExpectedScopesPresentAsync>d__4")]
protected virtual Task`1<bool> AreExpectedScopesPresentAsync(IntrospectionRequestValidationResult validationResult);
}
public interface IdentityServer4.ResponseHandling.ITokenResponseGenerator {
    public abstract virtual Task`1<TokenResponse> ProcessAsync(TokenRequestValidationResult validationResult);
}
public interface IdentityServer4.ResponseHandling.ITokenRevocationResponseGenerator {
    public abstract virtual Task`1<TokenRevocationResponse> ProcessAsync(TokenRevocationRequestValidationResult validationResult);
}
public interface IdentityServer4.ResponseHandling.IUserInfoResponseGenerator {
    public abstract virtual Task`1<Dictionary`2<string, object>> ProcessAsync(UserInfoRequestValidationResult validationResult);
}
public class IdentityServer4.ResponseHandling.TokenErrorResponse : object {
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Custom>k__BackingField;
    public string Error { get; public set; }
    public string ErrorDescription { get; public set; }
    public Dictionary`2<string, object> Custom { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Custom();
    [CompilerGeneratedAttribute]
public void set_Custom(Dictionary`2<string, object> value);
}
public class IdentityServer4.ResponseHandling.TokenResponse : object {
    [CompilerGeneratedAttribute]
private string <IdentityToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AccessTokenLifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RefreshToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Custom>k__BackingField;
    public string IdentityToken { get; public set; }
    public string AccessToken { get; public set; }
    public int AccessTokenLifetime { get; public set; }
    public string RefreshToken { get; public set; }
    public string Scope { get; public set; }
    public Dictionary`2<string, object> Custom { get; public set; }
    [CompilerGeneratedAttribute]
public string get_IdentityToken();
    [CompilerGeneratedAttribute]
public void set_IdentityToken(string value);
    [CompilerGeneratedAttribute]
public string get_AccessToken();
    [CompilerGeneratedAttribute]
public void set_AccessToken(string value);
    [CompilerGeneratedAttribute]
public int get_AccessTokenLifetime();
    [CompilerGeneratedAttribute]
public void set_AccessTokenLifetime(int value);
    [CompilerGeneratedAttribute]
public string get_RefreshToken();
    [CompilerGeneratedAttribute]
public void set_RefreshToken(string value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Custom();
    [CompilerGeneratedAttribute]
public void set_Custom(Dictionary`2<string, object> value);
}
public class IdentityServer4.ResponseHandling.TokenResponseGenerator : object {
    protected ILogger Logger;
    protected ITokenService TokenService;
    protected IRefreshTokenService RefreshTokenService;
    [CompilerGeneratedAttribute]
private IScopeParser <ScopeParser>k__BackingField;
    protected IResourceStore Resources;
    protected IClientStore Clients;
    protected ISystemClock Clock;
    public IScopeParser ScopeParser { get; }
    public TokenResponseGenerator(ISystemClock clock, ITokenService tokenService, IRefreshTokenService refreshTokenService, IScopeParser scopeParser, IResourceStore resources, IClientStore clients, ILogger`1<TokenResponseGenerator> logger);
    [CompilerGeneratedAttribute]
public IScopeParser get_ScopeParser();
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.TokenResponseGenerator/<ProcessAsync>d__10")]
public virtual Task`1<TokenResponse> ProcessAsync(TokenRequestValidationResult request);
    protected virtual Task`1<TokenResponse> ProcessClientCredentialsRequestAsync(TokenRequestValidationResult request);
    protected virtual Task`1<TokenResponse> ProcessPasswordRequestAsync(TokenRequestValidationResult request);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.TokenResponseGenerator/<ProcessAuthorizationCodeRequestAsync>d__13")]
protected virtual Task`1<TokenResponse> ProcessAuthorizationCodeRequestAsync(TokenRequestValidationResult request);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.TokenResponseGenerator/<ProcessRefreshTokenRequestAsync>d__14")]
protected virtual Task`1<TokenResponse> ProcessRefreshTokenRequestAsync(TokenRequestValidationResult request);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.TokenResponseGenerator/<ProcessDeviceCodeRequestAsync>d__15")]
protected virtual Task`1<TokenResponse> ProcessDeviceCodeRequestAsync(TokenRequestValidationResult request);
    protected virtual Task`1<TokenResponse> ProcessExtensionGrantRequestAsync(TokenRequestValidationResult request);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.TokenResponseGenerator/<ProcessTokenRequestAsync>d__17")]
protected virtual Task`1<TokenResponse> ProcessTokenRequestAsync(TokenRequestValidationResult validationResult);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.TokenResponseGenerator/<CreateAccessTokenAsync>d__18")]
protected virtual Task`1<ValueTuple`2<string, string>> CreateAccessTokenAsync(ValidatedTokenRequest request);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.TokenResponseGenerator/<CreateIdTokenFromRefreshTokenRequestAsync>d__19")]
protected virtual Task`1<string> CreateIdTokenFromRefreshTokenRequestAsync(ValidatedTokenRequest request, string newAccessToken);
}
public class IdentityServer4.ResponseHandling.TokenRevocationResponse : object {
    [CompilerGeneratedAttribute]
private bool <Success>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    public bool Success { get; public set; }
    public string TokenType { get; public set; }
    public string Error { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Success();
    [CompilerGeneratedAttribute]
public void set_Success(bool value);
    [CompilerGeneratedAttribute]
public string get_TokenType();
    [CompilerGeneratedAttribute]
public void set_TokenType(string value);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
}
public class IdentityServer4.ResponseHandling.TokenRevocationResponseGenerator : object {
    protected IReferenceTokenStore ReferenceTokenStore;
    protected IRefreshTokenStore RefreshTokenStore;
    protected ILogger Logger;
    public TokenRevocationResponseGenerator(IReferenceTokenStore referenceTokenStore, IRefreshTokenStore refreshTokenStore, ILogger`1<TokenRevocationResponseGenerator> logger);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.TokenRevocationResponseGenerator/<ProcessAsync>d__4")]
public virtual Task`1<TokenRevocationResponse> ProcessAsync(TokenRevocationRequestValidationResult validationResult);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.TokenRevocationResponseGenerator/<RevokeAccessTokenAsync>d__5")]
protected virtual Task`1<bool> RevokeAccessTokenAsync(TokenRevocationRequestValidationResult validationResult);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.TokenRevocationResponseGenerator/<RevokeRefreshTokenAsync>d__6")]
protected virtual Task`1<bool> RevokeRefreshTokenAsync(TokenRevocationRequestValidationResult validationResult);
}
public class IdentityServer4.ResponseHandling.UserInfoResponseGenerator : object {
    protected ILogger Logger;
    protected IProfileService Profile;
    protected IResourceStore Resources;
    public UserInfoResponseGenerator(IProfileService profile, IResourceStore resourceStore, ILogger`1<UserInfoResponseGenerator> logger);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.UserInfoResponseGenerator/<ProcessAsync>d__4")]
public virtual Task`1<Dictionary`2<string, object>> ProcessAsync(UserInfoRequestValidationResult validationResult);
    [AsyncStateMachineAttribute("IdentityServer4.ResponseHandling.UserInfoResponseGenerator/<GetRequestedResourcesAsync>d__5")]
protected internal virtual Task`1<ResourceValidationResult> GetRequestedResourcesAsync(IEnumerable`1<string> scopes);
    protected internal virtual Task`1<IEnumerable`1<string>> GetRequestedClaimTypesAsync(ResourceValidationResult resourceValidationResult);
}
public class IdentityServer4.Services.BackChannelLogoutRequest : object {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LogoutUri>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SessionIdRequired>k__BackingField;
    public string ClientId { get; public set; }
    public string SubjectId { get; public set; }
    public string SessionId { get; public set; }
    public string LogoutUri { get; public set; }
    public bool SessionIdRequired { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_SessionId();
    [CompilerGeneratedAttribute]
public void set_SessionId(string value);
    [CompilerGeneratedAttribute]
public string get_LogoutUri();
    [CompilerGeneratedAttribute]
public void set_LogoutUri(string value);
    [CompilerGeneratedAttribute]
public bool get_SessionIdRequired();
    [CompilerGeneratedAttribute]
public void set_SessionIdRequired(bool value);
}
public class IdentityServer4.Services.Default.DefaultDeviceFlowCodeService : object {
    private IDeviceFlowStore _store;
    private IHandleGenerationService _handleGenerationService;
    public DefaultDeviceFlowCodeService(IDeviceFlowStore store, IHandleGenerationService handleGenerationService);
    [AsyncStateMachineAttribute("IdentityServer4.Services.Default.DefaultDeviceFlowCodeService/<StoreDeviceAuthorizationAsync>d__3")]
public sealed virtual Task`1<string> StoreDeviceAuthorizationAsync(string userCode, DeviceCode data);
    public sealed virtual Task`1<DeviceCode> FindByUserCodeAsync(string userCode);
    public sealed virtual Task`1<DeviceCode> FindByDeviceCodeAsync(string deviceCode);
    public sealed virtual Task UpdateByUserCodeAsync(string userCode, DeviceCode data);
    public sealed virtual Task RemoveByDeviceCodeAsync(string deviceCode);
}
public class IdentityServer4.Services.DefaultBackChannelLogoutHttpClient : object {
    private HttpClient _client;
    private ILogger`1<DefaultBackChannelLogoutHttpClient> _logger;
    public DefaultBackChannelLogoutHttpClient(HttpClient client, ILoggerFactory loggerFactory);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultBackChannelLogoutHttpClient/<PostAsync>d__3")]
public sealed virtual Task PostAsync(string url, Dictionary`2<string, string> payload);
}
public class IdentityServer4.Services.DefaultBackChannelLogoutService : object {
    protected static int DefaultLogoutTokenLifetime;
    [CompilerGeneratedAttribute]
private ISystemClock <Clock>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityServerTools <Tools>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogoutNotificationService <LogoutNotificationService>k__BackingField;
    [CompilerGeneratedAttribute]
private IBackChannelLogoutHttpClient <HttpClient>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger`1<IBackChannelLogoutService> <Logger>k__BackingField;
    protected ISystemClock Clock { get; }
    protected IdentityServerTools Tools { get; }
    public ILogoutNotificationService LogoutNotificationService { get; }
    protected IBackChannelLogoutHttpClient HttpClient { get; }
    protected ILogger`1<IBackChannelLogoutService> Logger { get; }
    public DefaultBackChannelLogoutService(ISystemClock clock, IdentityServerTools tools, ILogoutNotificationService logoutNotificationService, IBackChannelLogoutHttpClient backChannelLogoutHttpClient, ILogger`1<IBackChannelLogoutService> logger);
    [CompilerGeneratedAttribute]
protected ISystemClock get_Clock();
    [CompilerGeneratedAttribute]
protected IdentityServerTools get_Tools();
    [CompilerGeneratedAttribute]
public ILogoutNotificationService get_LogoutNotificationService();
    [CompilerGeneratedAttribute]
protected IBackChannelLogoutHttpClient get_HttpClient();
    [CompilerGeneratedAttribute]
protected ILogger`1<IBackChannelLogoutService> get_Logger();
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultBackChannelLogoutService/<SendLogoutNotificationsAsync>d__17")]
public virtual Task SendLogoutNotificationsAsync(LogoutNotificationContext context);
    protected virtual Task SendLogoutNotificationsAsync(IEnumerable`1<BackChannelLogoutRequest> requests);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultBackChannelLogoutService/<SendLogoutNotificationAsync>d__19")]
protected virtual Task SendLogoutNotificationAsync(BackChannelLogoutRequest request);
    protected virtual Task PostLogoutJwt(BackChannelLogoutRequest client, Dictionary`2<string, string> data);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultBackChannelLogoutService/<CreateFormPostPayloadAsync>d__21")]
protected Task`1<Dictionary`2<string, string>> CreateFormPostPayloadAsync(BackChannelLogoutRequest request);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultBackChannelLogoutService/<CreateTokenAsync>d__22")]
protected virtual Task`1<string> CreateTokenAsync(BackChannelLogoutRequest request);
    protected Task`1<IEnumerable`1<Claim>> CreateClaimsForTokenAsync(BackChannelLogoutRequest request);
}
public class IdentityServer4.Services.DefaultCache`1 : object {
    private static string KeySeparator;
    private IMemoryCache _cache;
    public DefaultCache`1(IMemoryCache cache);
    private string GetKey(string key);
    public sealed virtual Task`1<T> GetAsync(string key);
    public sealed virtual Task SetAsync(string key, T item, TimeSpan expiration);
}
public class IdentityServer4.Services.DefaultClaimsService : object {
    protected ILogger Logger;
    protected IProfileService Profile;
    public DefaultClaimsService(IProfileService profile, ILogger`1<DefaultClaimsService> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultClaimsService/<GetIdentityTokenClaimsAsync>d__3")]
public virtual Task`1<IEnumerable`1<Claim>> GetIdentityTokenClaimsAsync(ClaimsPrincipal subject, ResourceValidationResult resources, bool includeAllIdentityClaims, ValidatedRequest request);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultClaimsService/<GetAccessTokenClaimsAsync>d__4")]
public virtual Task`1<IEnumerable`1<Claim>> GetAccessTokenClaimsAsync(ClaimsPrincipal subject, ResourceValidationResult resourceResult, ValidatedRequest request);
    protected virtual IEnumerable`1<Claim> GetStandardSubjectClaims(ClaimsPrincipal subject);
    protected virtual IEnumerable`1<Claim> GetOptionalClaims(ClaimsPrincipal subject);
    protected virtual IEnumerable`1<Claim> FilterProtocolClaims(IEnumerable`1<Claim> claims);
    protected virtual IEnumerable`1<string> FilterRequestedClaimTypes(IEnumerable`1<string> claimTypes);
}
public class IdentityServer4.Services.DefaultConsentService : object {
    protected IUserConsentStore UserConsentStore;
    protected ISystemClock Clock;
    protected ILogger`1<DefaultConsentService> Logger;
    public DefaultConsentService(ISystemClock clock, IUserConsentStore userConsentStore, ILogger`1<DefaultConsentService> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultConsentService/<RequiresConsentAsync>d__4")]
public virtual Task`1<bool> RequiresConsentAsync(ClaimsPrincipal subject, Client client, IEnumerable`1<ParsedScopeValue> parsedScopes);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultConsentService/<UpdateConsentAsync>d__5")]
public virtual Task UpdateConsentAsync(ClaimsPrincipal subject, Client client, IEnumerable`1<ParsedScopeValue> parsedScopes);
}
public class IdentityServer4.Services.DefaultCorsPolicyService : object {
    protected ILogger Logger;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <AllowedOrigins>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowAll>k__BackingField;
    public ICollection`1<string> AllowedOrigins { get; public set; }
    public bool AllowAll { get; public set; }
    public DefaultCorsPolicyService(ILogger`1<DefaultCorsPolicyService> logger);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_AllowedOrigins();
    [CompilerGeneratedAttribute]
public void set_AllowedOrigins(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_AllowAll();
    [CompilerGeneratedAttribute]
public void set_AllowAll(bool value);
    public virtual Task`1<bool> IsOriginAllowedAsync(string origin);
}
internal class IdentityServer4.Services.DefaultDeviceFlowInteractionService : object {
    private IClientStore _clients;
    private IUserSession _session;
    private IDeviceFlowCodeService _devices;
    private IResourceStore _resourceStore;
    private IScopeParser _scopeParser;
    private ILogger`1<DefaultDeviceFlowInteractionService> _logger;
    public DefaultDeviceFlowInteractionService(IClientStore clients, IUserSession session, IDeviceFlowCodeService devices, IResourceStore resourceStore, IScopeParser scopeParser, ILogger`1<DefaultDeviceFlowInteractionService> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultDeviceFlowInteractionService/<GetAuthorizationContextAsync>d__7")]
public sealed virtual Task`1<DeviceFlowAuthorizationRequest> GetAuthorizationContextAsync(string userCode);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultDeviceFlowInteractionService/<HandleRequestAsync>d__8")]
public sealed virtual Task`1<DeviceFlowInteractionResult> HandleRequestAsync(string userCode, ConsentResponse consent);
    private DeviceFlowInteractionResult LogAndReturnError(string error, string errorDescription);
}
public class IdentityServer4.Services.DefaultEventSink : object {
    private ILogger _logger;
    public DefaultEventSink(ILogger`1<DefaultEventService> logger);
    public virtual Task PersistAsync(Event evt);
}
public class IdentityServer4.Services.DefaultHandleGenerationService : object {
    public sealed virtual Task`1<string> GenerateAsync(int length);
}
internal class IdentityServer4.Services.DefaultIdentityServerInteractionService : object {
    private ISystemClock _clock;
    private IHttpContextAccessor _context;
    private IMessageStore`1<LogoutMessage> _logoutMessageStore;
    private IMessageStore`1<ErrorMessage> _errorMessageStore;
    private IConsentMessageStore _consentMessageStore;
    private IPersistedGrantService _grants;
    private IUserSession _userSession;
    private ILogger _logger;
    private ReturnUrlParser _returnUrlParser;
    public DefaultIdentityServerInteractionService(ISystemClock clock, IHttpContextAccessor context, IMessageStore`1<LogoutMessage> logoutMessageStore, IMessageStore`1<ErrorMessage> errorMessageStore, IConsentMessageStore consentMessageStore, IPersistedGrantService grants, IUserSession userSession, ReturnUrlParser returnUrlParser, ILogger`1<DefaultIdentityServerInteractionService> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultIdentityServerInteractionService/<GetAuthorizationContextAsync>d__10")]
public sealed virtual Task`1<AuthorizationRequest> GetAuthorizationContextAsync(string returnUrl);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultIdentityServerInteractionService/<GetLogoutContextAsync>d__11")]
public sealed virtual Task`1<LogoutRequest> GetLogoutContextAsync(string logoutId);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultIdentityServerInteractionService/<CreateLogoutContextAsync>d__12")]
public sealed virtual Task`1<string> CreateLogoutContextAsync();
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultIdentityServerInteractionService/<GetErrorContextAsync>d__13")]
public sealed virtual Task`1<ErrorMessage> GetErrorContextAsync(string errorId);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultIdentityServerInteractionService/<GrantConsentAsync>d__14")]
public sealed virtual Task GrantConsentAsync(AuthorizationRequest request, ConsentResponse consent, string subject);
    public sealed virtual Task DenyAuthorizationAsync(AuthorizationRequest request, AuthorizationError error, string errorDescription);
    public sealed virtual bool IsValidReturnUrl(string returnUrl);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultIdentityServerInteractionService/<GetAllUserGrantsAsync>d__17")]
public sealed virtual Task`1<IEnumerable`1<Grant>> GetAllUserGrantsAsync();
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultIdentityServerInteractionService/<RevokeUserConsentAsync>d__18")]
public sealed virtual Task RevokeUserConsentAsync(string clientId);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultIdentityServerInteractionService/<RevokeTokensForCurrentSessionAsync>d__19")]
public sealed virtual Task RevokeTokensForCurrentSessionAsync();
}
public class IdentityServer4.Services.DefaultJwtRequestUriHttpClient : object {
    private HttpClient _client;
    private IdentityServerOptions _options;
    private ILogger`1<DefaultJwtRequestUriHttpClient> _logger;
    public DefaultJwtRequestUriHttpClient(HttpClient client, IdentityServerOptions options, ILoggerFactory loggerFactory);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultJwtRequestUriHttpClient/<GetJwtAsync>d__4")]
public sealed virtual Task`1<string> GetJwtAsync(string url, Client client);
}
public class IdentityServer4.Services.DefaultKeyMaterialService : object {
    private IEnumerable`1<ISigningCredentialStore> _signingCredentialStores;
    private IEnumerable`1<IValidationKeysStore> _validationKeysStores;
    public DefaultKeyMaterialService(IEnumerable`1<IValidationKeysStore> validationKeysStores, IEnumerable`1<ISigningCredentialStore> signingCredentialStores);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultKeyMaterialService/<GetSigningCredentialsAsync>d__3")]
public sealed virtual Task`1<SigningCredentials> GetSigningCredentialsAsync(IEnumerable`1<string> allowedAlgorithms);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultKeyMaterialService/<GetAllSigningCredentialsAsync>d__4")]
public sealed virtual Task`1<IEnumerable`1<SigningCredentials>> GetAllSigningCredentialsAsync();
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultKeyMaterialService/<GetValidationKeysAsync>d__5")]
public sealed virtual Task`1<IEnumerable`1<SecurityKeyInfo>> GetValidationKeysAsync();
}
public class IdentityServer4.Services.DefaultPersistedGrantService : object {
    private ILogger _logger;
    private IPersistedGrantStore _store;
    private IPersistentGrantSerializer _serializer;
    public DefaultPersistedGrantService(IPersistedGrantStore store, IPersistentGrantSerializer serializer, ILogger`1<DefaultPersistedGrantService> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultPersistedGrantService/<GetAllGrantsAsync>d__4")]
public sealed virtual Task`1<IEnumerable`1<Grant>> GetAllGrantsAsync(string subjectId);
    private IEnumerable`1<Grant> Join(IEnumerable`1<Grant> first, IEnumerable`1<Grant> second);
    public sealed virtual Task RemoveAllGrantsAsync(string subjectId, string clientId, string sessionId);
}
public class IdentityServer4.Services.DefaultProfileService : object {
    protected ILogger Logger;
    public DefaultProfileService(ILogger`1<DefaultProfileService> logger);
    public virtual Task GetProfileDataAsync(ProfileDataRequestContext context);
    public virtual Task IsActiveAsync(IsActiveContext context);
}
public class IdentityServer4.Services.DefaultRefreshTokenService : object {
    protected ILogger Logger;
    [CompilerGeneratedAttribute]
private IRefreshTokenStore <RefreshTokenStore>k__BackingField;
    [CompilerGeneratedAttribute]
private IProfileService <Profile>k__BackingField;
    [CompilerGeneratedAttribute]
private ISystemClock <Clock>k__BackingField;
    protected IRefreshTokenStore RefreshTokenStore { get; }
    protected IProfileService Profile { get; }
    protected ISystemClock Clock { get; }
    public DefaultRefreshTokenService(IRefreshTokenStore refreshTokenStore, IProfileService profile, ISystemClock clock, ILogger`1<DefaultRefreshTokenService> logger);
    [CompilerGeneratedAttribute]
protected IRefreshTokenStore get_RefreshTokenStore();
    [CompilerGeneratedAttribute]
protected IProfileService get_Profile();
    [CompilerGeneratedAttribute]
protected ISystemClock get_Clock();
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultRefreshTokenService/<ValidateRefreshTokenAsync>d__11")]
public virtual Task`1<TokenValidationResult> ValidateRefreshTokenAsync(string tokenHandle, Client client);
    protected virtual Task`1<bool> AcceptConsumedTokenAsync(RefreshToken refreshToken);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultRefreshTokenService/<CreateRefreshTokenAsync>d__13")]
public virtual Task`1<string> CreateRefreshTokenAsync(ClaimsPrincipal subject, Token accessToken, Client client);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultRefreshTokenService/<UpdateRefreshTokenAsync>d__14")]
public virtual Task`1<string> UpdateRefreshTokenAsync(string handle, RefreshToken refreshToken, Client client);
}
public class IdentityServer4.Services.DefaultReplayCache : object {
    private static string Prefix;
    private IDistributedCache _cache;
    public DefaultReplayCache(IDistributedCache cache);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultReplayCache/<AddAsync>d__3")]
public sealed virtual Task AddAsync(string purpose, string handle, DateTimeOffset expiration);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultReplayCache/<ExistsAsync>d__4")]
public sealed virtual Task`1<bool> ExistsAsync(string purpose, string handle);
}
public class IdentityServer4.Services.DefaultTokenCreationService : object {
    protected IKeyMaterialService Keys;
    protected ILogger Logger;
    protected ISystemClock Clock;
    protected IdentityServerOptions Options;
    public DefaultTokenCreationService(ISystemClock clock, IKeyMaterialService keys, IdentityServerOptions options, ILogger`1<DefaultTokenCreationService> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultTokenCreationService/<CreateTokenAsync>d__5")]
public virtual Task`1<string> CreateTokenAsync(Token token);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultTokenCreationService/<CreateHeaderAsync>d__6")]
protected virtual Task`1<JwtHeader> CreateHeaderAsync(Token token);
    protected virtual Task`1<JwtPayload> CreatePayloadAsync(Token token);
    protected virtual Task`1<string> CreateJwtAsync(JwtSecurityToken jwt);
}
public class IdentityServer4.Services.DefaultTokenService : object {
    protected ILogger Logger;
    protected IHttpContextAccessor ContextAccessor;
    protected IClaimsService ClaimsProvider;
    protected IReferenceTokenStore ReferenceTokenStore;
    protected ITokenCreationService CreationService;
    protected ISystemClock Clock;
    protected IKeyMaterialService KeyMaterialService;
    protected IdentityServerOptions Options;
    public DefaultTokenService(IClaimsService claimsProvider, IReferenceTokenStore referenceTokenStore, ITokenCreationService creationService, IHttpContextAccessor contextAccessor, ISystemClock clock, IKeyMaterialService keyMaterialService, IdentityServerOptions options, ILogger`1<DefaultTokenService> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultTokenService/<CreateIdentityTokenAsync>d__9")]
public virtual Task`1<Token> CreateIdentityTokenAsync(TokenCreationRequest request);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultTokenService/<CreateAccessTokenAsync>d__10")]
public virtual Task`1<Token> CreateAccessTokenAsync(TokenCreationRequest request);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultTokenService/<CreateSecurityTokenAsync>d__11")]
public virtual Task`1<string> CreateSecurityTokenAsync(Token token);
}
public class IdentityServer4.Services.DefaultUserCodeService : object {
    private IEnumerable`1<IUserCodeGenerator> _generators;
    public DefaultUserCodeService(IEnumerable`1<IUserCodeGenerator> generators);
    public sealed virtual Task`1<IUserCodeGenerator> GetGenerator(string userCodeType);
}
public class IdentityServer4.Services.DefaultUserSession : object {
    protected IHttpContextAccessor HttpContextAccessor;
    protected IAuthenticationHandlerProvider Handlers;
    protected IdentityServerOptions Options;
    protected ISystemClock Clock;
    protected ILogger Logger;
    protected ClaimsPrincipal Principal;
    protected AuthenticationProperties Properties;
    protected HttpContext HttpContext { get; }
    protected string CheckSessionCookieName { get; }
    protected string CheckSessionCookieDomain { get; }
    protected SameSiteMode CheckSessionCookieSameSiteMode { get; }
    public DefaultUserSession(IHttpContextAccessor httpContextAccessor, IAuthenticationHandlerProvider handlers, IdentityServerOptions options, ISystemClock clock, ILogger`1<IUserSession> logger);
    protected HttpContext get_HttpContext();
    protected string get_CheckSessionCookieName();
    protected string get_CheckSessionCookieDomain();
    protected SameSiteMode get_CheckSessionCookieSameSiteMode();
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultUserSession/<AuthenticateAsync>d__16")]
protected virtual Task AuthenticateAsync();
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultUserSession/<CreateSessionIdAsync>d__17")]
public virtual Task`1<string> CreateSessionIdAsync(ClaimsPrincipal principal, AuthenticationProperties properties);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultUserSession/<GetUserAsync>d__18")]
public virtual Task`1<ClaimsPrincipal> GetUserAsync();
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultUserSession/<GetSessionIdAsync>d__19")]
public virtual Task`1<string> GetSessionIdAsync();
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultUserSession/<EnsureSessionIdCookieAsync>d__20")]
public virtual Task EnsureSessionIdCookieAsync();
    public virtual Task RemoveSessionIdCookieAsync();
    public virtual CookieOptions CreateSessionIdCookieOptions();
    public virtual void IssueSessionIdCookie(string sid);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultUserSession/<AddClientIdAsync>d__24")]
public virtual Task AddClientIdAsync(string clientId);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultUserSession/<GetClientListAsync>d__25")]
public virtual Task`1<IEnumerable`1<string>> GetClientListAsync();
    [AsyncStateMachineAttribute("IdentityServer4.Services.DefaultUserSession/<UpdateSessionCookie>d__26")]
private Task UpdateSessionCookie();
}
public class IdentityServer4.Services.DistributedDeviceFlowThrottlingService : object {
    private IDistributedCache _cache;
    private ISystemClock _clock;
    private IdentityServerOptions _options;
    private static string KeyPrefix;
    public DistributedDeviceFlowThrottlingService(IDistributedCache cache, ISystemClock clock, IdentityServerOptions options);
    [AsyncStateMachineAttribute("IdentityServer4.Services.DistributedDeviceFlowThrottlingService/<ShouldSlowDown>d__5")]
public sealed virtual Task`1<bool> ShouldSlowDown(string deviceCode, DeviceCode details);
}
public interface IdentityServer4.Services.IBackChannelLogoutHttpClient {
    public abstract virtual Task PostAsync(string url, Dictionary`2<string, string> payload);
}
public interface IdentityServer4.Services.IBackChannelLogoutService {
    public abstract virtual Task SendLogoutNotificationsAsync(LogoutNotificationContext context);
}
public interface IdentityServer4.Services.ICache`1 {
    public abstract virtual Task`1<T> GetAsync(string key);
    public abstract virtual Task SetAsync(string key, T item, TimeSpan expiration);
}
public interface IdentityServer4.Services.IClaimsService {
    public abstract virtual Task`1<IEnumerable`1<Claim>> GetIdentityTokenClaimsAsync(ClaimsPrincipal subject, ResourceValidationResult resources, bool includeAllIdentityClaims, ValidatedRequest request);
    public abstract virtual Task`1<IEnumerable`1<Claim>> GetAccessTokenClaimsAsync(ClaimsPrincipal subject, ResourceValidationResult resources, ValidatedRequest request);
}
public interface IdentityServer4.Services.IConsentService {
    public abstract virtual Task`1<bool> RequiresConsentAsync(ClaimsPrincipal subject, Client client, IEnumerable`1<ParsedScopeValue> parsedScopes);
    public abstract virtual Task UpdateConsentAsync(ClaimsPrincipal subject, Client client, IEnumerable`1<ParsedScopeValue> parsedScopes);
}
public interface IdentityServer4.Services.IDeviceFlowCodeService {
    public abstract virtual Task`1<string> StoreDeviceAuthorizationAsync(string userCode, DeviceCode data);
    public abstract virtual Task`1<DeviceCode> FindByUserCodeAsync(string userCode);
    public abstract virtual Task`1<DeviceCode> FindByDeviceCodeAsync(string deviceCode);
    public abstract virtual Task UpdateByUserCodeAsync(string userCode, DeviceCode data);
    public abstract virtual Task RemoveByDeviceCodeAsync(string deviceCode);
}
public interface IdentityServer4.Services.IDeviceFlowInteractionService {
    public abstract virtual Task`1<DeviceFlowAuthorizationRequest> GetAuthorizationContextAsync(string userCode);
    public abstract virtual Task`1<DeviceFlowInteractionResult> HandleRequestAsync(string userCode, ConsentResponse consent);
}
public interface IdentityServer4.Services.IDeviceFlowThrottlingService {
    public abstract virtual Task`1<bool> ShouldSlowDown(string deviceCode, DeviceCode details);
}
public interface IdentityServer4.Services.IEventService {
    public abstract virtual Task RaiseAsync(Event evt);
    public abstract virtual bool CanRaiseEventType(EventTypes evtType);
}
public interface IdentityServer4.Services.IEventSink {
    public abstract virtual Task PersistAsync(Event evt);
}
public interface IdentityServer4.Services.IHandleGenerationService {
    public abstract virtual Task`1<string> GenerateAsync(int length);
}
public interface IdentityServer4.Services.IIdentityServerInteractionService {
    public abstract virtual Task`1<AuthorizationRequest> GetAuthorizationContextAsync(string returnUrl);
    public abstract virtual bool IsValidReturnUrl(string returnUrl);
    public abstract virtual Task`1<ErrorMessage> GetErrorContextAsync(string errorId);
    public abstract virtual Task`1<LogoutRequest> GetLogoutContextAsync(string logoutId);
    public abstract virtual Task`1<string> CreateLogoutContextAsync();
    public abstract virtual Task GrantConsentAsync(AuthorizationRequest request, ConsentResponse consent, string subject);
    public abstract virtual Task DenyAuthorizationAsync(AuthorizationRequest request, AuthorizationError error, string errorDescription);
    public abstract virtual Task`1<IEnumerable`1<Grant>> GetAllUserGrantsAsync();
    public abstract virtual Task RevokeUserConsentAsync(string clientId);
    public abstract virtual Task RevokeTokensForCurrentSessionAsync();
}
public interface IdentityServer4.Services.IJwtRequestUriHttpClient {
    public abstract virtual Task`1<string> GetJwtAsync(string url, Client client);
}
public interface IdentityServer4.Services.IKeyMaterialService {
    public abstract virtual Task`1<IEnumerable`1<SecurityKeyInfo>> GetValidationKeysAsync();
    public abstract virtual Task`1<SigningCredentials> GetSigningCredentialsAsync(IEnumerable`1<string> allowedAlgorithms);
    public abstract virtual Task`1<IEnumerable`1<SigningCredentials>> GetAllSigningCredentialsAsync();
}
public interface IdentityServer4.Services.ILogoutNotificationService {
    public abstract virtual Task`1<IEnumerable`1<string>> GetFrontChannelLogoutNotificationsUrlsAsync(LogoutNotificationContext context);
    public abstract virtual Task`1<IEnumerable`1<BackChannelLogoutRequest>> GetBackChannelLogoutNotificationsAsync(LogoutNotificationContext context);
}
public class IdentityServer4.Services.InMemoryCorsPolicyService : object {
    protected ILogger Logger;
    protected IEnumerable`1<Client> Clients;
    public InMemoryCorsPolicyService(ILogger`1<InMemoryCorsPolicyService> logger, IEnumerable`1<Client> clients);
    public virtual Task`1<bool> IsOriginAllowedAsync(string origin);
}
public interface IdentityServer4.Services.IPersistedGrantService {
    public abstract virtual Task`1<IEnumerable`1<Grant>> GetAllGrantsAsync(string subjectId);
    public abstract virtual Task RemoveAllGrantsAsync(string subjectId, string clientId, string sessionId);
}
public interface IdentityServer4.Services.IProfileService {
    public abstract virtual Task GetProfileDataAsync(ProfileDataRequestContext context);
    public abstract virtual Task IsActiveAsync(IsActiveContext context);
}
public interface IdentityServer4.Services.IRefreshTokenService {
    public abstract virtual Task`1<TokenValidationResult> ValidateRefreshTokenAsync(string token, Client client);
    public abstract virtual Task`1<string> CreateRefreshTokenAsync(ClaimsPrincipal subject, Token accessToken, Client client);
    public abstract virtual Task`1<string> UpdateRefreshTokenAsync(string handle, RefreshToken refreshToken, Client client);
}
public interface IdentityServer4.Services.IReplayCache {
    public abstract virtual Task AddAsync(string purpose, string handle, DateTimeOffset expiration);
    public abstract virtual Task`1<bool> ExistsAsync(string purpose, string handle);
}
public interface IdentityServer4.Services.IReturnUrlParser {
    public abstract virtual Task`1<AuthorizationRequest> ParseAsync(string returnUrl);
    public abstract virtual bool IsValidReturnUrl(string returnUrl);
}
public interface IdentityServer4.Services.ITokenCreationService {
    public abstract virtual Task`1<string> CreateTokenAsync(Token token);
}
public interface IdentityServer4.Services.ITokenService {
    public abstract virtual Task`1<Token> CreateIdentityTokenAsync(TokenCreationRequest request);
    public abstract virtual Task`1<Token> CreateAccessTokenAsync(TokenCreationRequest request);
    public abstract virtual Task`1<string> CreateSecurityTokenAsync(Token token);
}
public interface IdentityServer4.Services.IUserCodeGenerator {
    public string UserCodeType { get; }
    public int RetryLimit { get; }
    public abstract virtual string get_UserCodeType();
    public abstract virtual int get_RetryLimit();
    public abstract virtual Task`1<string> GenerateAsync();
}
public interface IdentityServer4.Services.IUserCodeService {
    public abstract virtual Task`1<IUserCodeGenerator> GetGenerator(string userCodeType);
}
public interface IdentityServer4.Services.IUserSession {
    public abstract virtual Task`1<string> CreateSessionIdAsync(ClaimsPrincipal principal, AuthenticationProperties properties);
    public abstract virtual Task`1<ClaimsPrincipal> GetUserAsync();
    public abstract virtual Task`1<string> GetSessionIdAsync();
    public abstract virtual Task EnsureSessionIdCookieAsync();
    public abstract virtual Task RemoveSessionIdCookieAsync();
    public abstract virtual Task AddClientIdAsync(string clientId);
    public abstract virtual Task`1<IEnumerable`1<string>> GetClientListAsync();
}
[ExtensionAttribute]
public static class IdentityServer4.Services.IUserSessionExtensions : object {
    [AsyncStateMachineAttribute("IdentityServer4.Services.IUserSessionExtensions/<GetLogoutNotificationContext>d__0")]
[ExtensionAttribute]
public static Task`1<LogoutNotificationContext> GetLogoutNotificationContext(IUserSession session);
}
public class IdentityServer4.Services.LogoutNotificationService : object {
    private IClientStore _clientStore;
    private IHttpContextAccessor _httpContextAccessor;
    private ILogger`1<LogoutNotificationService> _logger;
    public LogoutNotificationService(IClientStore clientStore, IHttpContextAccessor httpContextAccessor, ILogger`1<LogoutNotificationService> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Services.LogoutNotificationService/<GetFrontChannelLogoutNotificationsUrlsAsync>d__4")]
public sealed virtual Task`1<IEnumerable`1<string>> GetFrontChannelLogoutNotificationsUrlsAsync(LogoutNotificationContext context);
    [AsyncStateMachineAttribute("IdentityServer4.Services.LogoutNotificationService/<GetBackChannelLogoutNotificationsAsync>d__5")]
public sealed virtual Task`1<IEnumerable`1<BackChannelLogoutRequest>> GetBackChannelLogoutNotificationsAsync(LogoutNotificationContext context);
}
public class IdentityServer4.Services.NumericUserCodeGenerator : object {
    public string UserCodeType { get; }
    public int RetryLimit { get; }
    public sealed virtual string get_UserCodeType();
    public sealed virtual int get_RetryLimit();
    public sealed virtual Task`1<string> GenerateAsync();
    private int Next(int minValue, int maxValue);
}
internal class IdentityServer4.Services.OidcReturnUrlParser : object {
    private IAuthorizeRequestValidator _validator;
    private IUserSession _userSession;
    private ILogger _logger;
    private IAuthorizationParametersMessageStore _authorizationParametersMessageStore;
    public OidcReturnUrlParser(IAuthorizeRequestValidator validator, IUserSession userSession, ILogger`1<OidcReturnUrlParser> logger, IAuthorizationParametersMessageStore authorizationParametersMessageStore);
    [AsyncStateMachineAttribute("IdentityServer4.Services.OidcReturnUrlParser/<ParseAsync>d__5")]
public sealed virtual Task`1<AuthorizationRequest> ParseAsync(string returnUrl);
    public sealed virtual bool IsValidReturnUrl(string returnUrl);
}
public class IdentityServer4.Services.ReturnUrlParser : object {
    private IEnumerable`1<IReturnUrlParser> _parsers;
    public ReturnUrlParser(IEnumerable`1<IReturnUrlParser> parsers);
    [AsyncStateMachineAttribute("IdentityServer4.Services.ReturnUrlParser/<ParseAsync>d__2")]
public virtual Task`1<AuthorizationRequest> ParseAsync(string returnUrl);
    public virtual bool IsValidReturnUrl(string returnUrl);
}
public class IdentityServer4.Stores.CachingClientStore`1 : object {
    private IdentityServerOptions _options;
    private ICache`1<Client> _cache;
    private IClientStore _inner;
    private ILogger _logger;
    public CachingClientStore`1(IdentityServerOptions options, T inner, ICache`1<Client> cache, ILogger`1<CachingClientStore`1<T>> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Stores.CachingClientStore`1/<FindClientByIdAsync>d__5")]
public sealed virtual Task`1<Client> FindClientByIdAsync(string clientId);
}
public class IdentityServer4.Stores.CachingCorsPolicyService`1 : object {
    private IdentityServerOptions Options;
    private ICache`1<CorsCacheEntry<T>> CorsCache;
    private ICorsPolicyService Inner;
    private ILogger Logger;
    public CachingCorsPolicyService`1(IdentityServerOptions options, T inner, ICache`1<CorsCacheEntry<T>> corsCache, ILogger`1<CachingCorsPolicyService`1<T>> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Stores.CachingCorsPolicyService`1/<IsOriginAllowedAsync>d__6")]
public virtual Task`1<bool> IsOriginAllowedAsync(string origin);
}
public class IdentityServer4.Stores.CachingResourceStore`1 : object {
    private static string AllKey;
    private IdentityServerOptions _options;
    private ICache`1<IEnumerable`1<IdentityResource>> _identityCache;
    private ICache`1<IEnumerable`1<ApiResource>> _apiByScopeCache;
    private ICache`1<IEnumerable`1<ApiScope>> _apiScopeCache;
    private ICache`1<IEnumerable`1<ApiResource>> _apiResourceCache;
    private ICache`1<Resources> _allCache;
    private IResourceStore _inner;
    private ILogger _logger;
    public CachingResourceStore`1(IdentityServerOptions options, T inner, ICache`1<IEnumerable`1<IdentityResource>> identityCache, ICache`1<IEnumerable`1<ApiResource>> apiByScopeCache, ICache`1<IEnumerable`1<ApiResource>> apisCache, ICache`1<IEnumerable`1<ApiScope>> scopeCache, ICache`1<Resources> allCache, ILogger`1<CachingResourceStore`1<T>> logger);
    private string GetKey(IEnumerable`1<string> names);
    [AsyncStateMachineAttribute("IdentityServer4.Stores.CachingResourceStore`1/<GetAllResourcesAsync>d__11")]
public sealed virtual Task`1<Resources> GetAllResourcesAsync();
    [AsyncStateMachineAttribute("IdentityServer4.Stores.CachingResourceStore`1/<FindApiResourcesByNameAsync>d__12")]
public sealed virtual Task`1<IEnumerable`1<ApiResource>> FindApiResourcesByNameAsync(IEnumerable`1<string> apiResourceNames);
    [AsyncStateMachineAttribute("IdentityServer4.Stores.CachingResourceStore`1/<FindIdentityResourcesByScopeNameAsync>d__13")]
public sealed virtual Task`1<IEnumerable`1<IdentityResource>> FindIdentityResourcesByScopeNameAsync(IEnumerable`1<string> names);
    [AsyncStateMachineAttribute("IdentityServer4.Stores.CachingResourceStore`1/<FindApiResourcesByScopeNameAsync>d__14")]
public sealed virtual Task`1<IEnumerable`1<ApiResource>> FindApiResourcesByScopeNameAsync(IEnumerable`1<string> names);
    [AsyncStateMachineAttribute("IdentityServer4.Stores.CachingResourceStore`1/<FindApiScopesByNameAsync>d__15")]
public sealed virtual Task`1<IEnumerable`1<ApiScope>> FindApiScopesByNameAsync(IEnumerable`1<string> scopeNames);
    [AsyncStateMachineAttribute("IdentityServer4.Stores.CachingResourceStore`1/<<GetAllResourcesAsync>b__11_0>d")]
[CompilerGeneratedAttribute]
private Task`1<Resources> <GetAllResourcesAsync>b__11_0();
}
internal class IdentityServer4.Stores.ConsentMessageStore : object {
    protected MessageCookie`1<ConsentResponse> Cookie;
    public ConsentMessageStore(MessageCookie`1<ConsentResponse> cookie);
    public virtual Task DeleteAsync(string id);
    public virtual Task`1<Message`1<ConsentResponse>> ReadAsync(string id);
    public virtual Task WriteAsync(string id, Message`1<ConsentResponse> message);
}
public class IdentityServer4.Stores.Default.DistributedCacheAuthorizationParametersMessageStore : object {
    private IDistributedCache _distributedCache;
    private IHandleGenerationService _handleGenerationService;
    private string CacheKeyPrefix { get; }
    public DistributedCacheAuthorizationParametersMessageStore(IDistributedCache distributedCache, IHandleGenerationService handleGenerationService);
    private string get_CacheKeyPrefix();
    [AsyncStateMachineAttribute("IdentityServer4.Stores.Default.DistributedCacheAuthorizationParametersMessageStore/<WriteAsync>d__5")]
public sealed virtual Task`1<string> WriteAsync(Message`1<IDictionary`2<string, String[]>> message);
    [AsyncStateMachineAttribute("IdentityServer4.Stores.Default.DistributedCacheAuthorizationParametersMessageStore/<ReadAsync>d__6")]
public sealed virtual Task`1<Message`1<IDictionary`2<string, String[]>>> ReadAsync(string id);
    public sealed virtual Task DeleteAsync(string id);
}
public class IdentityServer4.Stores.DefaultAuthorizationCodeStore : DefaultGrantStore`1<AuthorizationCode> {
    public DefaultAuthorizationCodeStore(IPersistedGrantStore store, IPersistentGrantSerializer serializer, IHandleGenerationService handleGenerationService, ILogger`1<DefaultAuthorizationCodeStore> logger);
    public sealed virtual Task`1<string> StoreAuthorizationCodeAsync(AuthorizationCode code);
    public sealed virtual Task`1<AuthorizationCode> GetAuthorizationCodeAsync(string code);
    public sealed virtual Task RemoveAuthorizationCodeAsync(string code);
}
public class IdentityServer4.Stores.DefaultGrantStore`1 : object {
    [CompilerGeneratedAttribute]
private string <GrantType>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private IPersistedGrantStore <Store>k__BackingField;
    [CompilerGeneratedAttribute]
private IPersistentGrantSerializer <Serializer>k__BackingField;
    [CompilerGeneratedAttribute]
private IHandleGenerationService <HandleGenerationService>k__BackingField;
    private static string KeySeparator;
    protected string GrantType { get; }
    protected ILogger Logger { get; }
    protected IPersistedGrantStore Store { get; }
    protected IPersistentGrantSerializer Serializer { get; }
    protected IHandleGenerationService HandleGenerationService { get; }
    protected DefaultGrantStore`1(string grantType, IPersistedGrantStore store, IPersistentGrantSerializer serializer, IHandleGenerationService handleGenerationService, ILogger logger);
    [CompilerGeneratedAttribute]
protected string get_GrantType();
    [CompilerGeneratedAttribute]
protected ILogger get_Logger();
    [CompilerGeneratedAttribute]
protected IPersistedGrantStore get_Store();
    [CompilerGeneratedAttribute]
protected IPersistentGrantSerializer get_Serializer();
    [CompilerGeneratedAttribute]
protected IHandleGenerationService get_HandleGenerationService();
    protected virtual string GetHashedKey(string value);
    [AsyncStateMachineAttribute("IdentityServer4.Stores.DefaultGrantStore`1/<GetItemAsync>d__18")]
protected virtual Task`1<T> GetItemAsync(string key);
    [AsyncStateMachineAttribute("IdentityServer4.Stores.DefaultGrantStore`1/<CreateItemAsync>d__19")]
protected virtual Task`1<string> CreateItemAsync(T item, string clientId, string subjectId, string sessionId, string description, DateTime created, int lifetime);
    [AsyncStateMachineAttribute("IdentityServer4.Stores.DefaultGrantStore`1/<StoreItemAsync>d__20")]
protected virtual Task StoreItemAsync(string key, T item, string clientId, string subjectId, string sessionId, string description, DateTime created, Nullable`1<DateTime> expiration, Nullable`1<DateTime> consumedTime);
    [AsyncStateMachineAttribute("IdentityServer4.Stores.DefaultGrantStore`1/<RemoveItemAsync>d__21")]
protected virtual Task RemoveItemAsync(string key);
    [AsyncStateMachineAttribute("IdentityServer4.Stores.DefaultGrantStore`1/<RemoveAllAsync>d__22")]
protected virtual Task RemoveAllAsync(string subjectId, string clientId);
}
public class IdentityServer4.Stores.DefaultReferenceTokenStore : DefaultGrantStore`1<Token> {
    public DefaultReferenceTokenStore(IPersistedGrantStore store, IPersistentGrantSerializer serializer, IHandleGenerationService handleGenerationService, ILogger`1<DefaultReferenceTokenStore> logger);
    public sealed virtual Task`1<string> StoreReferenceTokenAsync(Token token);
    public sealed virtual Task`1<Token> GetReferenceTokenAsync(string handle);
    public sealed virtual Task RemoveReferenceTokenAsync(string handle);
    public sealed virtual Task RemoveReferenceTokensAsync(string subjectId, string clientId);
}
public class IdentityServer4.Stores.DefaultRefreshTokenStore : DefaultGrantStore`1<RefreshToken> {
    public DefaultRefreshTokenStore(IPersistedGrantStore store, IPersistentGrantSerializer serializer, IHandleGenerationService handleGenerationService, ILogger`1<DefaultRefreshTokenStore> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Stores.DefaultRefreshTokenStore/<StoreRefreshTokenAsync>d__1")]
public sealed virtual Task`1<string> StoreRefreshTokenAsync(RefreshToken refreshToken);
    public sealed virtual Task UpdateRefreshTokenAsync(string handle, RefreshToken refreshToken);
    public sealed virtual Task`1<RefreshToken> GetRefreshTokenAsync(string refreshTokenHandle);
    public sealed virtual Task RemoveRefreshTokenAsync(string refreshTokenHandle);
    public sealed virtual Task RemoveRefreshTokensAsync(string subjectId, string clientId);
}
public class IdentityServer4.Stores.DefaultUserConsentStore : DefaultGrantStore`1<Consent> {
    public DefaultUserConsentStore(IPersistedGrantStore store, IPersistentGrantSerializer serializer, IHandleGenerationService handleGenerationService, ILogger`1<DefaultUserConsentStore> logger);
    private string GetConsentKey(string subjectId, string clientId);
    public sealed virtual Task StoreUserConsentAsync(Consent consent);
    public sealed virtual Task`1<Consent> GetUserConsentAsync(string subjectId, string clientId);
    public sealed virtual Task RemoveUserConsentAsync(string subjectId, string clientId);
}
public interface IdentityServer4.Stores.IAuthorizationParametersMessageStore {
    public abstract virtual Task`1<string> WriteAsync(Message`1<IDictionary`2<string, String[]>> message);
    public abstract virtual Task`1<Message`1<IDictionary`2<string, String[]>>> ReadAsync(string id);
    public abstract virtual Task DeleteAsync(string id);
}
[ExtensionAttribute]
public static class IdentityServer4.Stores.IClientStoreExtensions : object {
    [AsyncStateMachineAttribute("IdentityServer4.Stores.IClientStoreExtensions/<FindEnabledClientByIdAsync>d__0")]
[ExtensionAttribute]
public static Task`1<Client> FindEnabledClientByIdAsync(IClientStore store, string clientId);
}
public interface IdentityServer4.Stores.IConsentMessageStore {
    public abstract virtual Task WriteAsync(string id, Message`1<ConsentResponse> message);
    public abstract virtual Task`1<Message`1<ConsentResponse>> ReadAsync(string id);
    public abstract virtual Task DeleteAsync(string id);
}
public interface IdentityServer4.Stores.IMessageStore`1 {
    public abstract virtual Task`1<string> WriteAsync(Message`1<TModel> message);
    public abstract virtual Task`1<Message`1<TModel>> ReadAsync(string id);
}
public class IdentityServer4.Stores.InMemoryClientStore : object {
    private IEnumerable`1<Client> _clients;
    public InMemoryClientStore(IEnumerable`1<Client> clients);
    public sealed virtual Task`1<Client> FindClientByIdAsync(string clientId);
}
public class IdentityServer4.Stores.InMemoryDeviceFlowStore : object {
    private List`1<InMemoryDeviceAuthorization> _repository;
    public sealed virtual Task StoreDeviceAuthorizationAsync(string deviceCode, string userCode, DeviceCode data);
    public sealed virtual Task`1<DeviceCode> FindByUserCodeAsync(string userCode);
    public sealed virtual Task`1<DeviceCode> FindByDeviceCodeAsync(string deviceCode);
    public sealed virtual Task UpdateByUserCodeAsync(string userCode, DeviceCode data);
    public sealed virtual Task RemoveByDeviceCodeAsync(string deviceCode);
}
public class IdentityServer4.Stores.InMemoryPersistedGrantStore : object {
    private ConcurrentDictionary`2<string, PersistedGrant> _repository;
    public sealed virtual Task StoreAsync(PersistedGrant grant);
    public sealed virtual Task`1<PersistedGrant> GetAsync(string key);
    public sealed virtual Task`1<IEnumerable`1<PersistedGrant>> GetAllAsync(PersistedGrantFilter filter);
    public sealed virtual Task RemoveAsync(string key);
    public sealed virtual Task RemoveAllAsync(PersistedGrantFilter filter);
    private IEnumerable`1<PersistedGrant> Filter(PersistedGrantFilter filter);
}
public class IdentityServer4.Stores.InMemoryResourcesStore : object {
    private IEnumerable`1<IdentityResource> _identityResources;
    private IEnumerable`1<ApiResource> _apiResources;
    private IEnumerable`1<ApiScope> _apiScopes;
    public InMemoryResourcesStore(IEnumerable`1<IdentityResource> identityResources, IEnumerable`1<ApiResource> apiResources, IEnumerable`1<ApiScope> apiScopes);
    public sealed virtual Task`1<Resources> GetAllResourcesAsync();
    public sealed virtual Task`1<IEnumerable`1<ApiResource>> FindApiResourcesByNameAsync(IEnumerable`1<string> apiResourceNames);
    public sealed virtual Task`1<IEnumerable`1<IdentityResource>> FindIdentityResourcesByScopeNameAsync(IEnumerable`1<string> scopeNames);
    public sealed virtual Task`1<IEnumerable`1<ApiResource>> FindApiResourcesByScopeNameAsync(IEnumerable`1<string> scopeNames);
    public sealed virtual Task`1<IEnumerable`1<ApiScope>> FindApiScopesByNameAsync(IEnumerable`1<string> scopeNames);
}
public class IdentityServer4.Stores.InMemorySigningCredentialsStore : object {
    private SigningCredentials _credential;
    public InMemorySigningCredentialsStore(SigningCredentials credential);
    public sealed virtual Task`1<SigningCredentials> GetSigningCredentialsAsync();
}
public class IdentityServer4.Stores.InMemoryValidationKeysStore : object {
    private IEnumerable`1<SecurityKeyInfo> _keys;
    public InMemoryValidationKeysStore(IEnumerable`1<SecurityKeyInfo> keys);
    public sealed virtual Task`1<IEnumerable`1<SecurityKeyInfo>> GetValidationKeysAsync();
}
[ExtensionAttribute]
public static class IdentityServer4.Stores.IResourceStoreExtensions : object {
    [AsyncStateMachineAttribute("IdentityServer4.Stores.IResourceStoreExtensions/<FindResourcesByScopeAsync>d__0")]
[ExtensionAttribute]
public static Task`1<Resources> FindResourcesByScopeAsync(IResourceStore store, IEnumerable`1<string> scopeNames);
    private static void Validate(IEnumerable`1<IdentityResource> identity, IEnumerable`1<ApiResource> apiResources, IEnumerable`1<ApiScope> apiScopes);
    private static IEnumerable`1<string> GetDuplicates(IEnumerable`1<string> names);
    [AsyncStateMachineAttribute("IdentityServer4.Stores.IResourceStoreExtensions/<FindEnabledResourcesByScopeAsync>d__3")]
[ExtensionAttribute]
public static Task`1<Resources> FindEnabledResourcesByScopeAsync(IResourceStore store, IEnumerable`1<string> scopeNames);
    [AsyncStateMachineAttribute("IdentityServer4.Stores.IResourceStoreExtensions/<CreateResourceValidationResult>d__4")]
[ExtensionAttribute]
public static Task`1<ResourceValidationResult> CreateResourceValidationResult(IResourceStore store, ParsedScopesResult parsedScopesResult);
    [AsyncStateMachineAttribute("IdentityServer4.Stores.IResourceStoreExtensions/<GetAllEnabledResourcesAsync>d__5")]
[ExtensionAttribute]
public static Task`1<Resources> GetAllEnabledResourcesAsync(IResourceStore store);
    [AsyncStateMachineAttribute("IdentityServer4.Stores.IResourceStoreExtensions/<FindEnabledIdentityResourcesByScopeAsync>d__6")]
[ExtensionAttribute]
public static Task`1<IEnumerable`1<IdentityResource>> FindEnabledIdentityResourcesByScopeAsync(IResourceStore store, IEnumerable`1<string> scopeNames);
}
public interface IdentityServer4.Stores.ISigningCredentialStore {
    public abstract virtual Task`1<SigningCredentials> GetSigningCredentialsAsync();
}
public interface IdentityServer4.Stores.IValidationKeysStore {
    public abstract virtual Task`1<IEnumerable`1<SecurityKeyInfo>> GetValidationKeysAsync();
}
public class IdentityServer4.Stores.ProtectedDataMessageStore`1 : object {
    private static string Purpose;
    protected IDataProtector Protector;
    protected ILogger Logger;
    public ProtectedDataMessageStore`1(IDataProtectionProvider provider, ILogger`1<ProtectedDataMessageStore`1<TModel>> logger);
    public virtual Task`1<Message`1<TModel>> ReadAsync(string value);
    public virtual Task`1<string> WriteAsync(Message`1<TModel> message);
}
internal class IdentityServer4.Stores.QueryStringAuthorizationParametersMessageStore : object {
    public sealed virtual Task`1<string> WriteAsync(Message`1<IDictionary`2<string, String[]>> message);
    public sealed virtual Task`1<Message`1<IDictionary`2<string, String[]>>> ReadAsync(string id);
    public sealed virtual Task DeleteAsync(string id);
}
public class IdentityServer4.Stores.ValidatingClientStore`1 : object {
    private IClientStore _inner;
    private IClientConfigurationValidator _validator;
    private IEventService _events;
    private ILogger`1<ValidatingClientStore`1<T>> _logger;
    private string _validatorType;
    public ValidatingClientStore`1(T inner, IClientConfigurationValidator validator, IEventService events, ILogger`1<ValidatingClientStore`1<T>> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Stores.ValidatingClientStore`1/<FindClientByIdAsync>d__6")]
public sealed virtual Task`1<Client> FindClientByIdAsync(string clientId);
}
public class IdentityServer4.Test.TestUser : object {
    [CompilerGeneratedAttribute]
private string <SubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProviderName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProviderSubjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsActive>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<Claim> <Claims>k__BackingField;
    public string SubjectId { get; public set; }
    public string Username { get; public set; }
    public string Password { get; public set; }
    public string ProviderName { get; public set; }
    public string ProviderSubjectId { get; public set; }
    public bool IsActive { get; public set; }
    public ICollection`1<Claim> Claims { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SubjectId();
    [CompilerGeneratedAttribute]
public void set_SubjectId(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public string get_ProviderName();
    [CompilerGeneratedAttribute]
public void set_ProviderName(string value);
    [CompilerGeneratedAttribute]
public string get_ProviderSubjectId();
    [CompilerGeneratedAttribute]
public void set_ProviderSubjectId(string value);
    [CompilerGeneratedAttribute]
public bool get_IsActive();
    [CompilerGeneratedAttribute]
public void set_IsActive(bool value);
    [CompilerGeneratedAttribute]
public ICollection`1<Claim> get_Claims();
    [CompilerGeneratedAttribute]
public void set_Claims(ICollection`1<Claim> value);
}
public class IdentityServer4.Test.TestUserProfileService : object {
    protected ILogger Logger;
    protected TestUserStore Users;
    public TestUserProfileService(TestUserStore users, ILogger`1<TestUserProfileService> logger);
    public virtual Task GetProfileDataAsync(ProfileDataRequestContext context);
    public virtual Task IsActiveAsync(IsActiveContext context);
}
public class IdentityServer4.Test.TestUserResourceOwnerPasswordValidator : object {
    private TestUserStore _users;
    private ISystemClock _clock;
    public TestUserResourceOwnerPasswordValidator(TestUserStore users, ISystemClock clock);
    public sealed virtual Task ValidateAsync(ResourceOwnerPasswordValidationContext context);
}
public class IdentityServer4.Test.TestUserStore : object {
    private List`1<TestUser> _users;
    public TestUserStore(List`1<TestUser> users);
    public bool ValidateCredentials(string username, string password);
    public TestUser FindBySubjectId(string subjectId);
    public TestUser FindByUsername(string username);
    public TestUser FindByExternalProvider(string provider, string userId);
    public TestUser AutoProvisionUser(string provider, string userId, List`1<Claim> claims);
}
public class IdentityServer4.Validation.ApiSecretValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private ApiResource <Resource>k__BackingField;
    public ApiResource Resource { get; public set; }
    [CompilerGeneratedAttribute]
public ApiResource get_Resource();
    [CompilerGeneratedAttribute]
public void set_Resource(ApiResource value);
}
public class IdentityServer4.Validation.ApiSecretValidator : object {
    private ILogger _logger;
    private IResourceStore _resources;
    private IEventService _events;
    private ISecretsListParser _parser;
    private ISecretsListValidator _validator;
    public ApiSecretValidator(IResourceStore resources, ISecretsListParser parsers, ISecretsListValidator validator, IEventService events, ILogger`1<ApiSecretValidator> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.ApiSecretValidator/<ValidateAsync>d__6")]
public sealed virtual Task`1<ApiSecretValidationResult> ValidateAsync(HttpContext context);
    private Task RaiseSuccessEventAsync(string clientId, string authMethod);
    private Task RaiseFailureEventAsync(string clientId, string message);
}
public class IdentityServer4.Validation.AuthorizeRequestValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private ValidatedAuthorizeRequest <ValidatedRequest>k__BackingField;
    public ValidatedAuthorizeRequest ValidatedRequest { get; }
    public AuthorizeRequestValidationResult(ValidatedAuthorizeRequest request);
    public AuthorizeRequestValidationResult(ValidatedAuthorizeRequest request, string error, string errorDescription);
    [CompilerGeneratedAttribute]
public ValidatedAuthorizeRequest get_ValidatedRequest();
}
internal class IdentityServer4.Validation.AuthorizeRequestValidator : object {
    private IdentityServerOptions _options;
    private IClientStore _clients;
    private ICustomAuthorizeRequestValidator _customValidator;
    private IRedirectUriValidator _uriValidator;
    private IResourceValidator _resourceValidator;
    private IUserSession _userSession;
    private JwtRequestValidator _jwtRequestValidator;
    private IJwtRequestUriHttpClient _jwtRequestUriHttpClient;
    private ILogger _logger;
    private ResponseTypeEqualityComparer _responseTypeEqualityComparer;
    public AuthorizeRequestValidator(IdentityServerOptions options, IClientStore clients, ICustomAuthorizeRequestValidator customValidator, IRedirectUriValidator uriValidator, IResourceValidator resourceValidator, IUserSession userSession, JwtRequestValidator jwtRequestValidator, IJwtRequestUriHttpClient jwtRequestUriHttpClient, ILogger`1<AuthorizeRequestValidator> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.AuthorizeRequestValidator/<ValidateAsync>d__11")]
public sealed virtual Task`1<AuthorizeRequestValidationResult> ValidateAsync(NameValueCollection parameters, ClaimsPrincipal subject);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.AuthorizeRequestValidator/<LoadRequestObjectAsync>d__12")]
private Task`1<AuthorizeRequestValidationResult> LoadRequestObjectAsync(ValidatedAuthorizeRequest request);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.AuthorizeRequestValidator/<LoadClientAsync>d__13")]
private Task`1<AuthorizeRequestValidationResult> LoadClientAsync(ValidatedAuthorizeRequest request);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.AuthorizeRequestValidator/<ValidateRequestObjectAsync>d__14")]
private Task`1<AuthorizeRequestValidationResult> ValidateRequestObjectAsync(ValidatedAuthorizeRequest request);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.AuthorizeRequestValidator/<ValidateClientAsync>d__15")]
private Task`1<AuthorizeRequestValidationResult> ValidateClientAsync(ValidatedAuthorizeRequest request);
    private AuthorizeRequestValidationResult ValidateCoreParameters(ValidatedAuthorizeRequest request);
    private AuthorizeRequestValidationResult ValidatePkceParameters(ValidatedAuthorizeRequest request);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.AuthorizeRequestValidator/<ValidateScopeAsync>d__18")]
private Task`1<AuthorizeRequestValidationResult> ValidateScopeAsync(ValidatedAuthorizeRequest request);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.AuthorizeRequestValidator/<ValidateOptionalParametersAsync>d__19")]
private Task`1<AuthorizeRequestValidationResult> ValidateOptionalParametersAsync(ValidatedAuthorizeRequest request);
    private AuthorizeRequestValidationResult Invalid(ValidatedAuthorizeRequest request, string error, string description);
    private AuthorizeRequestValidationResult Valid(ValidatedAuthorizeRequest request);
    private void LogError(string message, ValidatedAuthorizeRequest request);
    private void LogError(string message, string detail, ValidatedAuthorizeRequest request);
}
public class IdentityServer4.Validation.BasicAuthenticationSecretParser : object {
    private ILogger _logger;
    private IdentityServerOptions _options;
    public string AuthenticationMethod { get; }
    public BasicAuthenticationSecretParser(IdentityServerOptions options, ILogger`1<BasicAuthenticationSecretParser> logger);
    public sealed virtual string get_AuthenticationMethod();
    public sealed virtual Task`1<ParsedSecret> ParseAsync(HttpContext context);
    private string Decode(string value);
}
public enum IdentityServer4.Validation.BearerTokenUsageType : Enum {
    public int value__;
    public static BearerTokenUsageType AuthorizationHeader;
    public static BearerTokenUsageType PostBody;
    public static BearerTokenUsageType QueryString;
}
public class IdentityServer4.Validation.BearerTokenUsageValidationResult : object {
    [CompilerGeneratedAttribute]
private bool <TokenFound>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private BearerTokenUsageType <UsageType>k__BackingField;
    public bool TokenFound { get; public set; }
    public string Token { get; public set; }
    public BearerTokenUsageType UsageType { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_TokenFound();
    [CompilerGeneratedAttribute]
public void set_TokenFound(bool value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    [CompilerGeneratedAttribute]
public BearerTokenUsageType get_UsageType();
    [CompilerGeneratedAttribute]
public void set_UsageType(BearerTokenUsageType value);
}
internal class IdentityServer4.Validation.BearerTokenUsageValidator : object {
    private ILogger _logger;
    public BearerTokenUsageValidator(ILogger`1<BearerTokenUsageValidator> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.BearerTokenUsageValidator/<ValidateAsync>d__2")]
public Task`1<BearerTokenUsageValidationResult> ValidateAsync(HttpContext context);
    public BearerTokenUsageValidationResult ValidateAuthorizationHeader(HttpContext context);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.BearerTokenUsageValidator/<ValidatePostBodyAsync>d__4")]
public Task`1<BearerTokenUsageValidationResult> ValidatePostBodyAsync(HttpContext context);
}
public class IdentityServer4.Validation.ClientConfigurationValidationContext : object {
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsValid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    public Client Client { get; }
    public bool IsValid { get; public set; }
    public string ErrorMessage { get; public set; }
    public ClientConfigurationValidationContext(Client client);
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public bool get_IsValid();
    [CompilerGeneratedAttribute]
public void set_IsValid(bool value);
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public void set_ErrorMessage(string value);
    public void SetError(string message);
}
public class IdentityServer4.Validation.ClientSecretValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private ParsedSecret <Secret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Confirmation>k__BackingField;
    public Client Client { get; public set; }
    public ParsedSecret Secret { get; public set; }
    public string Confirmation { get; public set; }
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
    [CompilerGeneratedAttribute]
public ParsedSecret get_Secret();
    [CompilerGeneratedAttribute]
public void set_Secret(ParsedSecret value);
    [CompilerGeneratedAttribute]
public string get_Confirmation();
    [CompilerGeneratedAttribute]
public void set_Confirmation(string value);
}
public class IdentityServer4.Validation.ClientSecretValidator : object {
    private ILogger _logger;
    private IClientStore _clients;
    private IEventService _events;
    private ISecretsListValidator _validator;
    private ISecretsListParser _parser;
    public ClientSecretValidator(IClientStore clients, ISecretsListParser parser, ISecretsListValidator validator, IEventService events, ILogger`1<ClientSecretValidator> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.ClientSecretValidator/<ValidateAsync>d__6")]
public sealed virtual Task`1<ClientSecretValidationResult> ValidateAsync(HttpContext context);
    private Task RaiseSuccessEventAsync(string clientId, string authMethod);
    private Task RaiseFailureEventAsync(string clientId, string message);
}
public class IdentityServer4.Validation.CustomAuthorizeRequestValidationContext : object {
    [CompilerGeneratedAttribute]
private AuthorizeRequestValidationResult <Result>k__BackingField;
    public AuthorizeRequestValidationResult Result { get; public set; }
    [CompilerGeneratedAttribute]
public AuthorizeRequestValidationResult get_Result();
    [CompilerGeneratedAttribute]
public void set_Result(AuthorizeRequestValidationResult value);
}
public class IdentityServer4.Validation.CustomTokenRequestValidationContext : object {
    [CompilerGeneratedAttribute]
private TokenRequestValidationResult <Result>k__BackingField;
    public TokenRequestValidationResult Result { get; public set; }
    [CompilerGeneratedAttribute]
public TokenRequestValidationResult get_Result();
    [CompilerGeneratedAttribute]
public void set_Result(TokenRequestValidationResult value);
}
public class IdentityServer4.Validation.DefaultClientConfigurationValidator : object {
    private IdentityServerOptions _options;
    public DefaultClientConfigurationValidator(IdentityServerOptions options);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.DefaultClientConfigurationValidator/<ValidateAsync>d__2")]
public sealed virtual Task ValidateAsync(ClientConfigurationValidationContext context);
    protected virtual Task ValidateGrantTypesAsync(ClientConfigurationValidationContext context);
    protected virtual Task ValidateLifetimesAsync(ClientConfigurationValidationContext context);
    protected virtual Task ValidateRedirectUriAsync(ClientConfigurationValidationContext context);
    protected virtual Task ValidateAllowedCorsOriginsAsync(ClientConfigurationValidationContext context);
    protected virtual Task ValidateUriSchemesAsync(ClientConfigurationValidationContext context);
    protected virtual Task ValidateSecretsAsync(ClientConfigurationValidationContext context);
    protected virtual Task ValidatePropertiesAsync(ClientConfigurationValidationContext context);
}
internal class IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator : object {
    public sealed virtual Task ValidateAsync(CustomAuthorizeRequestValidationContext context);
}
internal class IdentityServer4.Validation.DefaultCustomTokenRequestValidator : object {
    public sealed virtual Task ValidateAsync(CustomTokenRequestValidationContext context);
}
public class IdentityServer4.Validation.DefaultCustomTokenValidator : object {
    protected ILogger Logger;
    protected IProfileService Profile;
    protected IClientStore Clients;
    public virtual Task`1<TokenValidationResult> ValidateAccessTokenAsync(TokenValidationResult result);
    public virtual Task`1<TokenValidationResult> ValidateIdentityTokenAsync(TokenValidationResult result);
}
public class IdentityServer4.Validation.DefaultResourceValidator : object {
    private ILogger _logger;
    private IScopeParser _scopeParser;
    private IResourceStore _store;
    public DefaultResourceValidator(IResourceStore store, IScopeParser scopeParser, ILogger`1<DefaultResourceValidator> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.DefaultResourceValidator/<ValidateRequestedResourcesAsync>d__4")]
public virtual Task`1<ResourceValidationResult> ValidateRequestedResourcesAsync(ResourceValidationRequest request);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.DefaultResourceValidator/<ValidateScopeAsync>d__5")]
protected virtual Task ValidateScopeAsync(Client client, Resources resourcesFromStore, ParsedScopeValue requestedScope, ResourceValidationResult result);
    protected virtual Task`1<bool> IsClientAllowedIdentityResourceAsync(Client client, IdentityResource identity);
    protected virtual Task`1<bool> IsClientAllowedApiScopeAsync(Client client, ApiScope apiScope);
    protected virtual Task`1<bool> IsClientAllowedOfflineAccessAsync(Client client);
}
public class IdentityServer4.Validation.DefaultScopeParser : object {
    private ILogger`1<DefaultScopeParser> _logger;
    public DefaultScopeParser(ILogger`1<DefaultScopeParser> logger);
    public sealed virtual ParsedScopesResult ParseScopeValues(IEnumerable`1<string> scopeValues);
    public virtual void ParseScopeValue(ParseScopeContext scopeContext);
}
public class IdentityServer4.Validation.DeviceAuthorizationRequestValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private ValidatedDeviceAuthorizationRequest <ValidatedRequest>k__BackingField;
    public ValidatedDeviceAuthorizationRequest ValidatedRequest { get; }
    public DeviceAuthorizationRequestValidationResult(ValidatedDeviceAuthorizationRequest request);
    public DeviceAuthorizationRequestValidationResult(ValidatedDeviceAuthorizationRequest request, string error, string errorDescription);
    [CompilerGeneratedAttribute]
public ValidatedDeviceAuthorizationRequest get_ValidatedRequest();
}
internal class IdentityServer4.Validation.DeviceAuthorizationRequestValidator : object {
    private IdentityServerOptions _options;
    private IResourceValidator _resourceValidator;
    private ILogger`1<DeviceAuthorizationRequestValidator> _logger;
    public DeviceAuthorizationRequestValidator(IdentityServerOptions options, IResourceValidator resourceValidator, ILogger`1<DeviceAuthorizationRequestValidator> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.DeviceAuthorizationRequestValidator/<ValidateAsync>d__4")]
public sealed virtual Task`1<DeviceAuthorizationRequestValidationResult> ValidateAsync(NameValueCollection parameters, ClientSecretValidationResult clientValidationResult);
    private DeviceAuthorizationRequestValidationResult Valid(ValidatedDeviceAuthorizationRequest request);
    private DeviceAuthorizationRequestValidationResult Invalid(ValidatedDeviceAuthorizationRequest request, string error, string description);
    private void LogError(string message, ValidatedDeviceAuthorizationRequest request);
    private void LogError(string message, string detail, ValidatedDeviceAuthorizationRequest request);
    private DeviceAuthorizationRequestValidationResult ValidateClient(ValidatedDeviceAuthorizationRequest request, ClientSecretValidationResult clientValidationResult);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.DeviceAuthorizationRequestValidator/<ValidateScopeAsync>d__10")]
private Task`1<DeviceAuthorizationRequestValidationResult> ValidateScopeAsync(ValidatedDeviceAuthorizationRequest request);
}
public class IdentityServer4.Validation.DeviceCodeValidationContext : object {
    [CompilerGeneratedAttribute]
private string <DeviceCode>k__BackingField;
    [CompilerGeneratedAttribute]
private ValidatedTokenRequest <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private TokenRequestValidationResult <Result>k__BackingField;
    public string DeviceCode { get; public set; }
    public ValidatedTokenRequest Request { get; public set; }
    public TokenRequestValidationResult Result { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DeviceCode();
    [CompilerGeneratedAttribute]
public void set_DeviceCode(string value);
    [CompilerGeneratedAttribute]
public ValidatedTokenRequest get_Request();
    [CompilerGeneratedAttribute]
public void set_Request(ValidatedTokenRequest value);
    [CompilerGeneratedAttribute]
public TokenRequestValidationResult get_Result();
    [CompilerGeneratedAttribute]
public void set_Result(TokenRequestValidationResult value);
}
internal class IdentityServer4.Validation.DeviceCodeValidator : object {
    private IDeviceFlowCodeService _devices;
    private IProfileService _profile;
    private IDeviceFlowThrottlingService _throttlingService;
    private ISystemClock _systemClock;
    private ILogger`1<DeviceCodeValidator> _logger;
    public DeviceCodeValidator(IDeviceFlowCodeService devices, IProfileService profile, IDeviceFlowThrottlingService throttlingService, ISystemClock systemClock, ILogger`1<DeviceCodeValidator> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.DeviceCodeValidator/<ValidateAsync>d__6")]
public sealed virtual Task ValidateAsync(DeviceCodeValidationContext context);
}
public class IdentityServer4.Validation.EndSessionCallbackValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <FrontChannelLogoutUrls>k__BackingField;
    public IEnumerable`1<string> FrontChannelLogoutUrls { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_FrontChannelLogoutUrls();
    [CompilerGeneratedAttribute]
public void set_FrontChannelLogoutUrls(IEnumerable`1<string> value);
}
public class IdentityServer4.Validation.EndSessionRequestValidator : object {
    protected ILogger Logger;
    protected IdentityServerOptions Options;
    protected ITokenValidator TokenValidator;
    protected IRedirectUriValidator UriValidator;
    protected IUserSession UserSession;
    [CompilerGeneratedAttribute]
private ILogoutNotificationService <LogoutNotificationService>k__BackingField;
    protected IMessageStore`1<LogoutNotificationContext> EndSessionMessageStore;
    protected IHttpContextAccessor Context;
    public ILogoutNotificationService LogoutNotificationService { get; }
    public EndSessionRequestValidator(IHttpContextAccessor context, IdentityServerOptions options, ITokenValidator tokenValidator, IRedirectUriValidator uriValidator, IUserSession userSession, ILogoutNotificationService logoutNotificationService, IMessageStore`1<LogoutNotificationContext> endSessionMessageStore, ILogger`1<EndSessionRequestValidator> logger);
    [CompilerGeneratedAttribute]
public ILogoutNotificationService get_LogoutNotificationService();
    [AsyncStateMachineAttribute("IdentityServer4.Validation.EndSessionRequestValidator/<ValidateAsync>d__11")]
public sealed virtual Task`1<EndSessionValidationResult> ValidateAsync(NameValueCollection parameters, ClaimsPrincipal subject);
    protected virtual EndSessionValidationResult Invalid(string message, ValidatedEndSessionRequest request);
    protected virtual void LogSuccess(ValidatedEndSessionRequest request);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.EndSessionRequestValidator/<ValidateCallbackAsync>d__14")]
public sealed virtual Task`1<EndSessionCallbackValidationResult> ValidateCallbackAsync(NameValueCollection parameters);
}
public class IdentityServer4.Validation.EndSessionValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private ValidatedEndSessionRequest <ValidatedRequest>k__BackingField;
    public ValidatedEndSessionRequest ValidatedRequest { get; public set; }
    [CompilerGeneratedAttribute]
public ValidatedEndSessionRequest get_ValidatedRequest();
    [CompilerGeneratedAttribute]
public void set_ValidatedRequest(ValidatedEndSessionRequest value);
}
public class IdentityServer4.Validation.ExtensionGrantValidationContext : object {
    [CompilerGeneratedAttribute]
private ValidatedTokenRequest <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private GrantValidationResult <Result>k__BackingField;
    public ValidatedTokenRequest Request { get; public set; }
    public GrantValidationResult Result { get; public set; }
    [CompilerGeneratedAttribute]
public ValidatedTokenRequest get_Request();
    [CompilerGeneratedAttribute]
public void set_Request(ValidatedTokenRequest value);
    [CompilerGeneratedAttribute]
public GrantValidationResult get_Result();
    [CompilerGeneratedAttribute]
public void set_Result(GrantValidationResult value);
}
public class IdentityServer4.Validation.ExtensionGrantValidator : object {
    private ILogger _logger;
    private IEnumerable`1<IExtensionGrantValidator> _validators;
    public ExtensionGrantValidator(IEnumerable`1<IExtensionGrantValidator> validators, ILogger`1<ExtensionGrantValidator> logger);
    public IEnumerable`1<string> GetAvailableGrantTypes();
    [AsyncStateMachineAttribute("IdentityServer4.Validation.ExtensionGrantValidator/<ValidateAsync>d__4")]
public Task`1<GrantValidationResult> ValidateAsync(ValidatedTokenRequest request);
}
public class IdentityServer4.Validation.GrantValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <CustomResponse>k__BackingField;
    public ClaimsPrincipal Subject { get; public set; }
    public Dictionary`2<string, object> CustomResponse { get; public set; }
    public GrantValidationResult(Dictionary`2<string, object> customResponse);
    public GrantValidationResult(ClaimsPrincipal principal, Dictionary`2<string, object> customResponse);
    public GrantValidationResult(TokenRequestErrors error, string errorDescription, Dictionary`2<string, object> customResponse);
    public GrantValidationResult(string subject, string authenticationMethod, IEnumerable`1<Claim> claims, string identityProvider, Dictionary`2<string, object> customResponse);
    public GrantValidationResult(string subject, string authenticationMethod, DateTime authTime, IEnumerable`1<Claim> claims, string identityProvider, Dictionary`2<string, object> customResponse);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(ClaimsPrincipal value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_CustomResponse();
    [CompilerGeneratedAttribute]
public void set_CustomResponse(Dictionary`2<string, object> value);
    private string ConvertTokenErrorEnumToString(TokenRequestErrors error);
}
public class IdentityServer4.Validation.HashedSharedSecretValidator : object {
    private ILogger _logger;
    public HashedSharedSecretValidator(ILogger`1<HashedSharedSecretValidator> logger);
    public sealed virtual Task`1<SecretValidationResult> ValidateAsync(IEnumerable`1<Secret> secrets, ParsedSecret parsedSecret);
}
public interface IdentityServer4.Validation.IApiSecretValidator {
    public abstract virtual Task`1<ApiSecretValidationResult> ValidateAsync(HttpContext context);
}
public interface IdentityServer4.Validation.IAuthorizeRequestValidator {
    public abstract virtual Task`1<AuthorizeRequestValidationResult> ValidateAsync(NameValueCollection parameters, ClaimsPrincipal subject);
}
public interface IdentityServer4.Validation.IClientConfigurationValidator {
    public abstract virtual Task ValidateAsync(ClientConfigurationValidationContext context);
}
public interface IdentityServer4.Validation.IClientSecretValidator {
    public abstract virtual Task`1<ClientSecretValidationResult> ValidateAsync(HttpContext context);
}
public interface IdentityServer4.Validation.ICustomAuthorizeRequestValidator {
    public abstract virtual Task ValidateAsync(CustomAuthorizeRequestValidationContext context);
}
public interface IdentityServer4.Validation.ICustomTokenRequestValidator {
    public abstract virtual Task ValidateAsync(CustomTokenRequestValidationContext context);
}
public interface IdentityServer4.Validation.ICustomTokenValidator {
    public abstract virtual Task`1<TokenValidationResult> ValidateAccessTokenAsync(TokenValidationResult result);
    public abstract virtual Task`1<TokenValidationResult> ValidateIdentityTokenAsync(TokenValidationResult result);
}
public interface IdentityServer4.Validation.IDeviceAuthorizationRequestValidator {
    public abstract virtual Task`1<DeviceAuthorizationRequestValidationResult> ValidateAsync(NameValueCollection parameters, ClientSecretValidationResult clientValidationResult);
}
public interface IdentityServer4.Validation.IDeviceCodeValidator {
    public abstract virtual Task ValidateAsync(DeviceCodeValidationContext context);
}
public interface IdentityServer4.Validation.IEndSessionRequestValidator {
    public abstract virtual Task`1<EndSessionValidationResult> ValidateAsync(NameValueCollection parameters, ClaimsPrincipal subject);
    public abstract virtual Task`1<EndSessionCallbackValidationResult> ValidateCallbackAsync(NameValueCollection parameters);
}
public interface IdentityServer4.Validation.IExtensionGrantValidator {
    public string GrantType { get; }
    public abstract virtual Task ValidateAsync(ExtensionGrantValidationContext context);
    public abstract virtual string get_GrantType();
}
public interface IdentityServer4.Validation.IIntrospectionRequestValidator {
    public abstract virtual Task`1<IntrospectionRequestValidationResult> ValidateAsync(NameValueCollection parameters, ApiResource api);
}
public enum IdentityServer4.Validation.IntrospectionRequestValidationFailureReason : Enum {
    public int value__;
    public static IntrospectionRequestValidationFailureReason None;
    public static IntrospectionRequestValidationFailureReason MissingToken;
    public static IntrospectionRequestValidationFailureReason InvalidToken;
    public static IntrospectionRequestValidationFailureReason InvalidScope;
}
public class IdentityServer4.Validation.IntrospectionRequestValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private NameValueCollection <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private ApiResource <Api>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsActive>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Claim> <Claims>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    public NameValueCollection Parameters { get; public set; }
    public ApiResource Api { get; public set; }
    public bool IsActive { get; public set; }
    public IEnumerable`1<Claim> Claims { get; public set; }
    public string Token { get; public set; }
    [CompilerGeneratedAttribute]
public NameValueCollection get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(NameValueCollection value);
    [CompilerGeneratedAttribute]
public ApiResource get_Api();
    [CompilerGeneratedAttribute]
public void set_Api(ApiResource value);
    [CompilerGeneratedAttribute]
public bool get_IsActive();
    [CompilerGeneratedAttribute]
public void set_IsActive(bool value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<Claim> get_Claims();
    [CompilerGeneratedAttribute]
public void set_Claims(IEnumerable`1<Claim> value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
}
internal class IdentityServer4.Validation.IntrospectionRequestValidator : object {
    private ILogger _logger;
    private ITokenValidator _tokenValidator;
    public IntrospectionRequestValidator(ITokenValidator tokenValidator, ILogger`1<IntrospectionRequestValidator> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.IntrospectionRequestValidator/<ValidateAsync>d__3")]
public sealed virtual Task`1<IntrospectionRequestValidationResult> ValidateAsync(NameValueCollection parameters, ApiResource api);
}
public interface IdentityServer4.Validation.IRedirectUriValidator {
    public abstract virtual Task`1<bool> IsRedirectUriValidAsync(string requestedUri, Client client);
    public abstract virtual Task`1<bool> IsPostLogoutRedirectUriValidAsync(string requestedUri, Client client);
}
public interface IdentityServer4.Validation.IResourceOwnerPasswordValidator {
    public abstract virtual Task ValidateAsync(ResourceOwnerPasswordValidationContext context);
}
public interface IdentityServer4.Validation.IResourceValidator {
    public abstract virtual Task`1<ResourceValidationResult> ValidateRequestedResourcesAsync(ResourceValidationRequest request);
}
public interface IdentityServer4.Validation.IScopeParser {
    public abstract virtual ParsedScopesResult ParseScopeValues(IEnumerable`1<string> scopeValues);
}
public interface IdentityServer4.Validation.ISecretParser {
    public string AuthenticationMethod { get; }
    public abstract virtual Task`1<ParsedSecret> ParseAsync(HttpContext context);
    public abstract virtual string get_AuthenticationMethod();
}
public interface IdentityServer4.Validation.ISecretsListParser {
    public abstract virtual Task`1<ParsedSecret> ParseAsync(HttpContext context);
    public abstract virtual IEnumerable`1<string> GetAvailableAuthenticationMethods();
}
public interface IdentityServer4.Validation.ISecretsListValidator {
    public abstract virtual Task`1<SecretValidationResult> ValidateAsync(IEnumerable`1<Secret> secrets, ParsedSecret parsedSecret);
}
public interface IdentityServer4.Validation.ISecretValidator {
    public abstract virtual Task`1<SecretValidationResult> ValidateAsync(IEnumerable`1<Secret> secrets, ParsedSecret parsedSecret);
}
public interface IdentityServer4.Validation.ITokenRequestValidator {
    public abstract virtual Task`1<TokenRequestValidationResult> ValidateRequestAsync(NameValueCollection parameters, ClientSecretValidationResult clientValidationResult);
}
public interface IdentityServer4.Validation.ITokenRevocationRequestValidator {
    public abstract virtual Task`1<TokenRevocationRequestValidationResult> ValidateRequestAsync(NameValueCollection parameters, Client client);
}
public interface IdentityServer4.Validation.ITokenValidator {
    public abstract virtual Task`1<TokenValidationResult> ValidateAccessTokenAsync(string token, string expectedScope);
    public abstract virtual Task`1<TokenValidationResult> ValidateIdentityTokenAsync(string token, string clientId, bool validateLifetime);
}
public interface IdentityServer4.Validation.IUserInfoRequestValidator {
    public abstract virtual Task`1<UserInfoRequestValidationResult> ValidateRequestAsync(string accessToken);
}
public class IdentityServer4.Validation.JwtBearerClientAssertionSecretParser : object {
    private IdentityServerOptions _options;
    private ILogger _logger;
    public string AuthenticationMethod { get; }
    public JwtBearerClientAssertionSecretParser(IdentityServerOptions options, ILogger`1<JwtBearerClientAssertionSecretParser> logger);
    public sealed virtual string get_AuthenticationMethod();
    [AsyncStateMachineAttribute("IdentityServer4.Validation.JwtBearerClientAssertionSecretParser/<ParseAsync>d__5")]
public sealed virtual Task`1<ParsedSecret> ParseAsync(HttpContext context);
    private string GetClientIdFromToken(string token);
}
public class IdentityServer4.Validation.JwtRequestValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Payload>k__BackingField;
    public Dictionary`2<string, string> Payload { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Payload();
    [CompilerGeneratedAttribute]
public void set_Payload(Dictionary`2<string, string> value);
}
public class IdentityServer4.Validation.JwtRequestValidator : object {
    private string _audienceUri;
    private IHttpContextAccessor _httpContextAccessor;
    protected JwtSecurityTokenHandler Handler;
    protected ILogger Logger;
    protected IdentityServerOptions Options;
    protected string AudienceUri { get; }
    public JwtRequestValidator(IHttpContextAccessor contextAccessor, IdentityServerOptions options, ILogger`1<JwtRequestValidator> logger);
    internal JwtRequestValidator(string audience, ILogger`1<JwtRequestValidator> logger);
    protected string get_AudienceUri();
    [AsyncStateMachineAttribute("IdentityServer4.Validation.JwtRequestValidator/<ValidateAsync>d__9")]
public virtual Task`1<JwtRequestValidationResult> ValidateAsync(Client client, string jwtTokenString);
    protected virtual Task`1<List`1<SecurityKey>> GetKeysAsync(Client client);
    protected virtual Task`1<JwtSecurityToken> ValidateJwtAsync(string jwtTokenString, IEnumerable`1<SecurityKey> keys, Client client);
    protected virtual Task`1<Dictionary`2<string, string>> ProcessPayloadAsync(JwtSecurityToken token);
}
public class IdentityServer4.Validation.MutualTlsSecretParser : object {
    private IdentityServerOptions _options;
    private ILogger`1<MutualTlsSecretParser> _logger;
    public string AuthenticationMethod { get; }
    public MutualTlsSecretParser(IdentityServerOptions options, ILogger`1<MutualTlsSecretParser> logger);
    public sealed virtual string get_AuthenticationMethod();
    [AsyncStateMachineAttribute("IdentityServer4.Validation.MutualTlsSecretParser/<ParseAsync>d__5")]
public sealed virtual Task`1<ParsedSecret> ParseAsync(HttpContext context);
}
public class IdentityServer4.Validation.NopClientConfigurationValidator : object {
    public sealed virtual Task ValidateAsync(ClientConfigurationValidationContext context);
}
public class IdentityServer4.Validation.NotSupportedResourceOwnerPasswordValidator : object {
    private ILogger _logger;
    public NotSupportedResourceOwnerPasswordValidator(ILogger`1<NotSupportedResourceOwnerPasswordValidator> logger);
    public sealed virtual Task ValidateAsync(ResourceOwnerPasswordValidationContext context);
}
public class IdentityServer4.Validation.ParsedScopesResult : object {
    [CompilerGeneratedAttribute]
private ICollection`1<ParsedScopeValue> <ParsedScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ParsedScopeValidationError> <Errors>k__BackingField;
    public ICollection`1<ParsedScopeValue> ParsedScopes { get; public set; }
    public ICollection`1<ParsedScopeValidationError> Errors { get; public set; }
    public bool Succeeded { get; }
    [CompilerGeneratedAttribute]
public ICollection`1<ParsedScopeValue> get_ParsedScopes();
    [CompilerGeneratedAttribute]
public void set_ParsedScopes(ICollection`1<ParsedScopeValue> value);
    [CompilerGeneratedAttribute]
public ICollection`1<ParsedScopeValidationError> get_Errors();
    [CompilerGeneratedAttribute]
public void set_Errors(ICollection`1<ParsedScopeValidationError> value);
    public bool get_Succeeded();
}
public class IdentityServer4.Validation.ParsedScopeValidationError : object {
    [CompilerGeneratedAttribute]
private string <RawValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    public string RawValue { get; public set; }
    public string Error { get; public set; }
    public ParsedScopeValidationError(string rawValue, string error);
    [CompilerGeneratedAttribute]
public string get_RawValue();
    [CompilerGeneratedAttribute]
public void set_RawValue(string value);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
}
public class IdentityServer4.Validation.ParsedScopeValue : object {
    [CompilerGeneratedAttribute]
private string <RawValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParsedName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParsedParameter>k__BackingField;
    public string RawValue { get; public set; }
    public string ParsedName { get; public set; }
    public string ParsedParameter { get; public set; }
    public ParsedScopeValue(string rawValue);
    public ParsedScopeValue(string rawValue, string parsedName, string parsedParameter);
    [CompilerGeneratedAttribute]
public string get_RawValue();
    [CompilerGeneratedAttribute]
public void set_RawValue(string value);
    [CompilerGeneratedAttribute]
public string get_ParsedName();
    [CompilerGeneratedAttribute]
public void set_ParsedName(string value);
    [CompilerGeneratedAttribute]
public string get_ParsedParameter();
    [CompilerGeneratedAttribute]
public void set_ParsedParameter(string value);
}
public class IdentityServer4.Validation.PlainTextSharedSecretValidator : object {
    private ILogger _logger;
    public PlainTextSharedSecretValidator(ILogger`1<PlainTextSharedSecretValidator> logger);
    public sealed virtual Task`1<SecretValidationResult> ValidateAsync(IEnumerable`1<Secret> secrets, ParsedSecret parsedSecret);
}
public class IdentityServer4.Validation.PostBodySecretParser : object {
    private ILogger _logger;
    private IdentityServerOptions _options;
    public string AuthenticationMethod { get; }
    public PostBodySecretParser(IdentityServerOptions options, ILogger`1<PostBodySecretParser> logger);
    public sealed virtual string get_AuthenticationMethod();
    [AsyncStateMachineAttribute("IdentityServer4.Validation.PostBodySecretParser/<ParseAsync>d__5")]
public sealed virtual Task`1<ParsedSecret> ParseAsync(HttpContext context);
}
public class IdentityServer4.Validation.PrivateKeyJwtSecretValidator : object {
    private IHttpContextAccessor _contextAccessor;
    private IReplayCache _replayCache;
    private ILogger _logger;
    private static string Purpose;
    public PrivateKeyJwtSecretValidator(IHttpContextAccessor contextAccessor, IReplayCache replayCache, ILogger`1<PrivateKeyJwtSecretValidator> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.PrivateKeyJwtSecretValidator/<ValidateAsync>d__5")]
public sealed virtual Task`1<SecretValidationResult> ValidateAsync(IEnumerable`1<Secret> secrets, ParsedSecret parsedSecret);
}
public class IdentityServer4.Validation.ResourceOwnerPasswordValidationContext : object {
    [CompilerGeneratedAttribute]
private string <UserName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private ValidatedTokenRequest <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private GrantValidationResult <Result>k__BackingField;
    public string UserName { get; public set; }
    public string Password { get; public set; }
    public ValidatedTokenRequest Request { get; public set; }
    public GrantValidationResult Result { get; public set; }
    [CompilerGeneratedAttribute]
public string get_UserName();
    [CompilerGeneratedAttribute]
public void set_UserName(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public ValidatedTokenRequest get_Request();
    [CompilerGeneratedAttribute]
public void set_Request(ValidatedTokenRequest value);
    [CompilerGeneratedAttribute]
public GrantValidationResult get_Result();
    [CompilerGeneratedAttribute]
public void set_Result(GrantValidationResult value);
}
public class IdentityServer4.Validation.ResourceValidationContext : object {
    [CompilerGeneratedAttribute]
private GrantValidationResult <Result>k__BackingField;
    public GrantValidationResult Result { get; public set; }
    [CompilerGeneratedAttribute]
public GrantValidationResult get_Result();
    [CompilerGeneratedAttribute]
public void set_Result(GrantValidationResult value);
}
public class IdentityServer4.Validation.ResourceValidationRequest : object {
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Scopes>k__BackingField;
    public Client Client { get; public set; }
    public IEnumerable`1<string> Scopes { get; public set; }
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(IEnumerable`1<string> value);
}
public class IdentityServer4.Validation.ResourceValidationResult : object {
    [CompilerGeneratedAttribute]
private Resources <Resources>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ParsedScopeValue> <ParsedScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <InvalidScopes>k__BackingField;
    public bool Succeeded { get; }
    public Resources Resources { get; public set; }
    public ICollection`1<ParsedScopeValue> ParsedScopes { get; public set; }
    public IEnumerable`1<string> RawScopeValues { get; }
    public ICollection`1<string> InvalidScopes { get; public set; }
    public ResourceValidationResult(Resources resources);
    public ResourceValidationResult(Resources resources, IEnumerable`1<ParsedScopeValue> parsedScopeValues);
    public bool get_Succeeded();
    [CompilerGeneratedAttribute]
public Resources get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(Resources value);
    [CompilerGeneratedAttribute]
public ICollection`1<ParsedScopeValue> get_ParsedScopes();
    [CompilerGeneratedAttribute]
public void set_ParsedScopes(ICollection`1<ParsedScopeValue> value);
    public IEnumerable`1<string> get_RawScopeValues();
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_InvalidScopes();
    [CompilerGeneratedAttribute]
public void set_InvalidScopes(ICollection`1<string> value);
    public ResourceValidationResult Filter(IEnumerable`1<string> scopeValues);
}
public class IdentityServer4.Validation.ResponseTypeEqualityComparer : object {
    public sealed virtual bool Equals(string x, string y);
    public sealed virtual int GetHashCode(string value);
}
public class IdentityServer4.Validation.SecretParser : object {
    private ILogger _logger;
    private IEnumerable`1<ISecretParser> _parsers;
    public SecretParser(IEnumerable`1<ISecretParser> parsers, ILogger`1<ISecretsListParser> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.SecretParser/<ParseAsync>d__3")]
public sealed virtual Task`1<ParsedSecret> ParseAsync(HttpContext context);
    public sealed virtual IEnumerable`1<string> GetAvailableAuthenticationMethods();
}
public class IdentityServer4.Validation.SecretValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private bool <Success>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Confirmation>k__BackingField;
    public bool Success { get; public set; }
    public string Confirmation { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Success();
    [CompilerGeneratedAttribute]
public void set_Success(bool value);
    [CompilerGeneratedAttribute]
public string get_Confirmation();
    [CompilerGeneratedAttribute]
public void set_Confirmation(string value);
}
public class IdentityServer4.Validation.SecretValidator : object {
    private ILogger _logger;
    private IEnumerable`1<ISecretValidator> _validators;
    private ISystemClock _clock;
    public SecretValidator(ISystemClock clock, IEnumerable`1<ISecretValidator> validators, ILogger`1<ISecretsListValidator> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.SecretValidator/<ValidateAsync>d__4")]
public sealed virtual Task`1<SecretValidationResult> ValidateAsync(IEnumerable`1<Secret> secrets, ParsedSecret parsedSecret);
    [CompilerGeneratedAttribute]
private bool <ValidateAsync>b__4_0(Secret s);
    [CompilerGeneratedAttribute]
private void <ValidateAsync>b__4_1(Secret ex);
    [CompilerGeneratedAttribute]
private bool <ValidateAsync>b__4_2(Secret s);
}
public class IdentityServer4.Validation.StrictRedirectUriValidator : object {
    protected bool StringCollectionContainsString(IEnumerable`1<string> uris, string requestedUri);
    public virtual Task`1<bool> IsRedirectUriValidAsync(string requestedUri, Client client);
    public virtual Task`1<bool> IsPostLogoutRedirectUriValidAsync(string requestedUri, Client client);
}
public class IdentityServer4.Validation.StrictRedirectUriValidatorAppAuth : StrictRedirectUriValidator {
    private ILogger _logger;
    public StrictRedirectUriValidatorAppAuth(ILogger`1<StrictRedirectUriValidatorAppAuth> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.StrictRedirectUriValidatorAppAuth/<IsRedirectUriValidAsync>d__2")]
public virtual Task`1<bool> IsRedirectUriValidAsync(string requestedUri, Client client);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.StrictRedirectUriValidatorAppAuth/<IsPostLogoutRedirectUriValidAsync>d__3")]
public virtual Task`1<bool> IsPostLogoutRedirectUriValidAsync(string requestedUri, Client client);
    internal bool IsLoopback(string requestedUri);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<bool> <>n__0(string requestedUri, Client client);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<bool> <>n__1(string requestedUri, Client client);
}
public class IdentityServer4.Validation.TokenRequestValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private ValidatedTokenRequest <ValidatedRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <CustomResponse>k__BackingField;
    public ValidatedTokenRequest ValidatedRequest { get; }
    public Dictionary`2<string, object> CustomResponse { get; public set; }
    public TokenRequestValidationResult(ValidatedTokenRequest validatedRequest, Dictionary`2<string, object> customResponse);
    public TokenRequestValidationResult(ValidatedTokenRequest validatedRequest, string error, string errorDescription, Dictionary`2<string, object> customResponse);
    [CompilerGeneratedAttribute]
public ValidatedTokenRequest get_ValidatedRequest();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_CustomResponse();
    [CompilerGeneratedAttribute]
public void set_CustomResponse(Dictionary`2<string, object> value);
}
internal class IdentityServer4.Validation.TokenRequestValidator : object {
    private IdentityServerOptions _options;
    private IAuthorizationCodeStore _authorizationCodeStore;
    private ExtensionGrantValidator _extensionGrantValidator;
    private ICustomTokenRequestValidator _customRequestValidator;
    private IResourceValidator _resourceValidator;
    private IResourceStore _resourceStore;
    private ITokenValidator _tokenValidator;
    private IRefreshTokenService _refreshTokenService;
    private IEventService _events;
    private IResourceOwnerPasswordValidator _resourceOwnerValidator;
    private IProfileService _profile;
    private IDeviceCodeValidator _deviceCodeValidator;
    private ISystemClock _clock;
    private ILogger _logger;
    private ValidatedTokenRequest _validatedRequest;
    public TokenRequestValidator(IdentityServerOptions options, IAuthorizationCodeStore authorizationCodeStore, IResourceOwnerPasswordValidator resourceOwnerValidator, IProfileService profile, IDeviceCodeValidator deviceCodeValidator, ExtensionGrantValidator extensionGrantValidator, ICustomTokenRequestValidator customRequestValidator, IResourceValidator resourceValidator, IResourceStore resourceStore, ITokenValidator tokenValidator, IRefreshTokenService refreshTokenService, IEventService events, ISystemClock clock, ILogger`1<TokenRequestValidator> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.TokenRequestValidator/<ValidateRequestAsync>d__16")]
public sealed virtual Task`1<TokenRequestValidationResult> ValidateRequestAsync(NameValueCollection parameters, ClientSecretValidationResult clientValidationResult);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.TokenRequestValidator/<RunValidationAsync>d__17")]
private Task`1<TokenRequestValidationResult> RunValidationAsync(Func`2<NameValueCollection, Task`1<TokenRequestValidationResult>> validationFunc, NameValueCollection parameters);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.TokenRequestValidator/<ValidateAuthorizationCodeRequestAsync>d__18")]
private Task`1<TokenRequestValidationResult> ValidateAuthorizationCodeRequestAsync(NameValueCollection parameters);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.TokenRequestValidator/<ValidateClientCredentialsRequestAsync>d__19")]
private Task`1<TokenRequestValidationResult> ValidateClientCredentialsRequestAsync(NameValueCollection parameters);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.TokenRequestValidator/<ValidateResourceOwnerCredentialRequestAsync>d__20")]
private Task`1<TokenRequestValidationResult> ValidateResourceOwnerCredentialRequestAsync(NameValueCollection parameters);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.TokenRequestValidator/<ValidateRefreshTokenRequestAsync>d__21")]
private Task`1<TokenRequestValidationResult> ValidateRefreshTokenRequestAsync(NameValueCollection parameters);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.TokenRequestValidator/<ValidateDeviceCodeRequestAsync>d__22")]
private Task`1<TokenRequestValidationResult> ValidateDeviceCodeRequestAsync(NameValueCollection parameters);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.TokenRequestValidator/<ValidateExtensionGrantRequestAsync>d__23")]
private Task`1<TokenRequestValidationResult> ValidateExtensionGrantRequestAsync(NameValueCollection parameters);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.TokenRequestValidator/<ValidateRequestedScopesAsync>d__24")]
private Task`1<bool> ValidateRequestedScopesAsync(NameValueCollection parameters, bool ignoreImplicitIdentityScopes, bool ignoreImplicitOfflineAccess);
    private TokenRequestValidationResult ValidateAuthorizationCodeWithProofKeyParameters(string codeVerifier, AuthorizationCode authZcode);
    private bool ValidateCodeVerifierAgainstCodeChallenge(string codeVerifier, string codeChallenge, string codeChallengeMethod);
    private TokenRequestValidationResult Valid(Dictionary`2<string, object> customResponse);
    private TokenRequestValidationResult Invalid(string error, string errorDescription, Dictionary`2<string, object> customResponse);
    private void LogError(string message, object values);
    private void LogWarning(string message, object values);
    private void LogInformation(string message, object values);
    private void LogWithRequestDetails(LogLevel logLevel, string message, object values);
    private void LogSuccess();
    private Task RaiseSuccessfulResourceOwnerAuthenticationEventAsync(string userName, string subjectId, string clientId);
    private Task RaiseFailedResourceOwnerAuthenticationEventAsync(string userName, string error, string clientId);
    [CompilerGeneratedAttribute]
private bool <ValidateRequestedScopesAsync>b__24_0(string x);
}
public class IdentityServer4.Validation.TokenRevocationRequestValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private string <TokenTypeHint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    public string TokenTypeHint { get; public set; }
    public string Token { get; public set; }
    public Client Client { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TokenTypeHint();
    [CompilerGeneratedAttribute]
public void set_TokenTypeHint(string value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
}
internal class IdentityServer4.Validation.TokenRevocationRequestValidator : object {
    private ILogger _logger;
    public TokenRevocationRequestValidator(ILogger`1<TokenRevocationRequestValidator> logger);
    public sealed virtual Task`1<TokenRevocationRequestValidationResult> ValidateRequestAsync(NameValueCollection parameters, Client client);
}
public class IdentityServer4.Validation.TokenValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private IEnumerable`1<Claim> <Claims>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Jwt>k__BackingField;
    [CompilerGeneratedAttribute]
private Token <ReferenceToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReferenceTokenId>k__BackingField;
    [CompilerGeneratedAttribute]
private RefreshToken <RefreshToken>k__BackingField;
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    public IEnumerable`1<Claim> Claims { get; public set; }
    public string Jwt { get; public set; }
    public Token ReferenceToken { get; public set; }
    public string ReferenceTokenId { get; public set; }
    public RefreshToken RefreshToken { get; public set; }
    public Client Client { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<Claim> get_Claims();
    [CompilerGeneratedAttribute]
public void set_Claims(IEnumerable`1<Claim> value);
    [CompilerGeneratedAttribute]
public string get_Jwt();
    [CompilerGeneratedAttribute]
public void set_Jwt(string value);
    [CompilerGeneratedAttribute]
public Token get_ReferenceToken();
    [CompilerGeneratedAttribute]
public void set_ReferenceToken(Token value);
    [CompilerGeneratedAttribute]
public string get_ReferenceTokenId();
    [CompilerGeneratedAttribute]
public void set_ReferenceTokenId(string value);
    [CompilerGeneratedAttribute]
public RefreshToken get_RefreshToken();
    [CompilerGeneratedAttribute]
public void set_RefreshToken(RefreshToken value);
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
}
internal class IdentityServer4.Validation.TokenValidator : object {
    private ILogger _logger;
    private IdentityServerOptions _options;
    private IHttpContextAccessor _context;
    private IReferenceTokenStore _referenceTokenStore;
    private ICustomTokenValidator _customValidator;
    private IClientStore _clients;
    private IProfileService _profile;
    private IKeyMaterialService _keys;
    private ISystemClock _clock;
    private TokenValidationLog _log;
    public TokenValidator(IdentityServerOptions options, IHttpContextAccessor context, IClientStore clients, IProfileService profile, IReferenceTokenStore referenceTokenStore, IRefreshTokenStore refreshTokenStore, ICustomTokenValidator customValidator, IKeyMaterialService keys, ISystemClock clock, ILogger`1<TokenValidator> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.TokenValidator/<ValidateIdentityTokenAsync>d__11")]
public sealed virtual Task`1<TokenValidationResult> ValidateIdentityTokenAsync(string token, string clientId, bool validateLifetime);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.TokenValidator/<ValidateAccessTokenAsync>d__12")]
public sealed virtual Task`1<TokenValidationResult> ValidateAccessTokenAsync(string token, string expectedScope);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.TokenValidator/<ValidateJwtAsync>d__13")]
private Task`1<TokenValidationResult> ValidateJwtAsync(string jwt, IEnumerable`1<SecurityKeyInfo> validationKeys, bool validateLifetime, string audience);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.TokenValidator/<ValidateReferenceAccessTokenAsync>d__14")]
private Task`1<TokenValidationResult> ValidateReferenceAccessTokenAsync(string tokenHandle);
    private IEnumerable`1<Claim> ReferenceTokenToClaims(Token token);
    private string GetClientIdFromJwt(string token);
    private TokenValidationResult Invalid(string error);
    private void LogError(string message);
    private void LogSuccess();
}
public class IdentityServer4.Validation.UserInfoRequestValidationResult : ValidationResult {
    [CompilerGeneratedAttribute]
private TokenValidationResult <TokenValidationResult>k__BackingField;
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Subject>k__BackingField;
    public TokenValidationResult TokenValidationResult { get; public set; }
    public ClaimsPrincipal Subject { get; public set; }
    [CompilerGeneratedAttribute]
public TokenValidationResult get_TokenValidationResult();
    [CompilerGeneratedAttribute]
public void set_TokenValidationResult(TokenValidationResult value);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(ClaimsPrincipal value);
}
internal class IdentityServer4.Validation.UserInfoRequestValidator : object {
    private ITokenValidator _tokenValidator;
    private IProfileService _profile;
    private ILogger _logger;
    public UserInfoRequestValidator(ITokenValidator tokenValidator, IProfileService profile, ILogger`1<UserInfoRequestValidator> logger);
    [AsyncStateMachineAttribute("IdentityServer4.Validation.UserInfoRequestValidator/<ValidateRequestAsync>d__4")]
public sealed virtual Task`1<UserInfoRequestValidationResult> ValidateRequestAsync(string accessToken);
}
public class IdentityServer4.Validation.ValidatedAuthorizeRequest : ValidatedRequest {
    [CompilerGeneratedAttribute]
private string <ResponseType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResponseMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GrantType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RedirectUri>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <RequestedScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WasConsentShown>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <State>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UiLocales>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOpenIdRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsApiResourceRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Nonce>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <AuthenticationContextReferenceClasses>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayMode>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <PromptModes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxAge>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LoginHint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CodeChallenge>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CodeChallengeMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <RequestObjectValues>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestObject>k__BackingField;
    public string ResponseType { get; public set; }
    public string ResponseMode { get; public set; }
    public string GrantType { get; public set; }
    public string RedirectUri { get; public set; }
    public List`1<string> RequestedScopes { get; public set; }
    public bool WasConsentShown { get; public set; }
    public string Description { get; public set; }
    public string State { get; public set; }
    public string UiLocales { get; public set; }
    public bool IsOpenIdRequest { get; public set; }
    public bool IsApiResourceRequest { get; public set; }
    public string Nonce { get; public set; }
    public List`1<string> AuthenticationContextReferenceClasses { get; public set; }
    public string DisplayMode { get; public set; }
    public IEnumerable`1<string> PromptModes { get; public set; }
    public Nullable`1<int> MaxAge { get; public set; }
    public string LoginHint { get; public set; }
    public string CodeChallenge { get; public set; }
    public string CodeChallengeMethod { get; public set; }
    public Dictionary`2<string, string> RequestObjectValues { get; public set; }
    public string RequestObject { get; public set; }
    public bool AccessTokenRequested { get; }
    [CompilerGeneratedAttribute]
public string get_ResponseType();
    [CompilerGeneratedAttribute]
public void set_ResponseType(string value);
    [CompilerGeneratedAttribute]
public string get_ResponseMode();
    [CompilerGeneratedAttribute]
public void set_ResponseMode(string value);
    [CompilerGeneratedAttribute]
public string get_GrantType();
    [CompilerGeneratedAttribute]
public void set_GrantType(string value);
    [CompilerGeneratedAttribute]
public string get_RedirectUri();
    [CompilerGeneratedAttribute]
public void set_RedirectUri(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_RequestedScopes();
    [CompilerGeneratedAttribute]
public void set_RequestedScopes(List`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_WasConsentShown();
    [CompilerGeneratedAttribute]
public void set_WasConsentShown(bool value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_State();
    [CompilerGeneratedAttribute]
public void set_State(string value);
    [CompilerGeneratedAttribute]
public string get_UiLocales();
    [CompilerGeneratedAttribute]
public void set_UiLocales(string value);
    [CompilerGeneratedAttribute]
public bool get_IsOpenIdRequest();
    [CompilerGeneratedAttribute]
public void set_IsOpenIdRequest(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsApiResourceRequest();
    [CompilerGeneratedAttribute]
public void set_IsApiResourceRequest(bool value);
    [CompilerGeneratedAttribute]
public string get_Nonce();
    [CompilerGeneratedAttribute]
public void set_Nonce(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_AuthenticationContextReferenceClasses();
    [CompilerGeneratedAttribute]
public void set_AuthenticationContextReferenceClasses(List`1<string> value);
    [CompilerGeneratedAttribute]
public string get_DisplayMode();
    [CompilerGeneratedAttribute]
public void set_DisplayMode(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_PromptModes();
    [CompilerGeneratedAttribute]
public void set_PromptModes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxAge();
    [CompilerGeneratedAttribute]
public void set_MaxAge(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_LoginHint();
    [CompilerGeneratedAttribute]
public void set_LoginHint(string value);
    [CompilerGeneratedAttribute]
public string get_CodeChallenge();
    [CompilerGeneratedAttribute]
public void set_CodeChallenge(string value);
    [CompilerGeneratedAttribute]
public string get_CodeChallengeMethod();
    [CompilerGeneratedAttribute]
public void set_CodeChallengeMethod(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_RequestObjectValues();
    [CompilerGeneratedAttribute]
public void set_RequestObjectValues(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_RequestObject();
    [CompilerGeneratedAttribute]
public void set_RequestObject(string value);
    public bool get_AccessTokenRequested();
}
[ExtensionAttribute]
public static class IdentityServer4.Validation.ValidatedAuthorizeRequestExtensions : object {
    [ExtensionAttribute]
public static void RemovePrompt(ValidatedAuthorizeRequest request);
    [ExtensionAttribute]
public static string GetPrefixedAcrValue(ValidatedAuthorizeRequest request, string prefix);
    [ExtensionAttribute]
public static void RemovePrefixedAcrValue(ValidatedAuthorizeRequest request, string prefix);
    [ExtensionAttribute]
public static string GetIdP(ValidatedAuthorizeRequest request);
    [ExtensionAttribute]
public static void RemoveIdP(ValidatedAuthorizeRequest request);
    [ExtensionAttribute]
public static string GetTenant(ValidatedAuthorizeRequest request);
    [ExtensionAttribute]
public static IEnumerable`1<string> GetAcrValues(ValidatedAuthorizeRequest request);
    [ExtensionAttribute]
public static void RemoveAcrValue(ValidatedAuthorizeRequest request, string value);
    [ExtensionAttribute]
public static void AddAcrValue(ValidatedAuthorizeRequest request, string value);
    [ExtensionAttribute]
public static string GenerateSessionStateValue(ValidatedAuthorizeRequest request);
}
public class IdentityServer4.Validation.ValidatedDeviceAuthorizationRequest : ValidatedRequest {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <RequestedScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOpenIdRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    public IEnumerable`1<string> RequestedScopes { get; public set; }
    public bool IsOpenIdRequest { get; public set; }
    public string Description { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_RequestedScopes();
    [CompilerGeneratedAttribute]
public void set_RequestedScopes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_IsOpenIdRequest();
    [CompilerGeneratedAttribute]
public void set_IsOpenIdRequest(bool value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
}
public class IdentityServer4.Validation.ValidatedEndSessionRequest : ValidatedRequest {
    [CompilerGeneratedAttribute]
private string <PostLogOutUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <State>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ClientIds>k__BackingField;
    public bool IsAuthenticated { get; }
    public string PostLogOutUri { get; public set; }
    public string State { get; public set; }
    public IEnumerable`1<string> ClientIds { get; public set; }
    public bool get_IsAuthenticated();
    [CompilerGeneratedAttribute]
public string get_PostLogOutUri();
    [CompilerGeneratedAttribute]
public void set_PostLogOutUri(string value);
    [CompilerGeneratedAttribute]
public string get_State();
    [CompilerGeneratedAttribute]
public void set_State(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ClientIds();
    [CompilerGeneratedAttribute]
public void set_ClientIds(IEnumerable`1<string> value);
}
public class IdentityServer4.Validation.ValidatedRequest : object {
    [CompilerGeneratedAttribute]
private NameValueCollection <Raw>k__BackingField;
    [CompilerGeneratedAttribute]
private Client <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private ParsedSecret <Secret>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AccessTokenLifetime>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<Claim> <ClientClaims>k__BackingField;
    [CompilerGeneratedAttribute]
private AccessTokenType <AccessTokenType>k__BackingField;
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SessionId>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityServerOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceValidationResult <ValidatedResources>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Confirmation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    public NameValueCollection Raw { get; public set; }
    public Client Client { get; public set; }
    public ParsedSecret Secret { get; public set; }
    public int AccessTokenLifetime { get; public set; }
    public ICollection`1<Claim> ClientClaims { get; public set; }
    public AccessTokenType AccessTokenType { get; public set; }
    public ClaimsPrincipal Subject { get; public set; }
    public string SessionId { get; public set; }
    public IdentityServerOptions Options { get; public set; }
    public ResourceValidationResult ValidatedResources { get; public set; }
    public string Confirmation { get; public set; }
    public string ClientId { get; public set; }
    [CompilerGeneratedAttribute]
public NameValueCollection get_Raw();
    [CompilerGeneratedAttribute]
public void set_Raw(NameValueCollection value);
    [CompilerGeneratedAttribute]
public Client get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(Client value);
    [CompilerGeneratedAttribute]
public ParsedSecret get_Secret();
    [CompilerGeneratedAttribute]
public void set_Secret(ParsedSecret value);
    [CompilerGeneratedAttribute]
public int get_AccessTokenLifetime();
    [CompilerGeneratedAttribute]
public void set_AccessTokenLifetime(int value);
    [CompilerGeneratedAttribute]
public ICollection`1<Claim> get_ClientClaims();
    [CompilerGeneratedAttribute]
public void set_ClientClaims(ICollection`1<Claim> value);
    [CompilerGeneratedAttribute]
public AccessTokenType get_AccessTokenType();
    [CompilerGeneratedAttribute]
public void set_AccessTokenType(AccessTokenType value);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(ClaimsPrincipal value);
    [CompilerGeneratedAttribute]
public string get_SessionId();
    [CompilerGeneratedAttribute]
public void set_SessionId(string value);
    [CompilerGeneratedAttribute]
public IdentityServerOptions get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(IdentityServerOptions value);
    [CompilerGeneratedAttribute]
public ResourceValidationResult get_ValidatedResources();
    [CompilerGeneratedAttribute]
public void set_ValidatedResources(ResourceValidationResult value);
    [CompilerGeneratedAttribute]
public string get_Confirmation();
    [CompilerGeneratedAttribute]
public void set_Confirmation(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    public void SetClient(Client client, ParsedSecret secret, string confirmation);
}
public class IdentityServer4.Validation.ValidatedTokenRequest : ValidatedRequest {
    [CompilerGeneratedAttribute]
private string <GrantType>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <RequestedScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserName>k__BackingField;
    [CompilerGeneratedAttribute]
private RefreshToken <RefreshToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RefreshTokenHandle>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthorizationCode <AuthorizationCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthorizationCodeHandle>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CodeVerifier>k__BackingField;
    [CompilerGeneratedAttribute]
private DeviceCode <DeviceCode>k__BackingField;
    public string GrantType { get; public set; }
    public IEnumerable`1<string> RequestedScopes { get; public set; }
    public string UserName { get; public set; }
    public RefreshToken RefreshToken { get; public set; }
    public string RefreshTokenHandle { get; public set; }
    public AuthorizationCode AuthorizationCode { get; public set; }
    public string AuthorizationCodeHandle { get; public set; }
    public string CodeVerifier { get; public set; }
    public DeviceCode DeviceCode { get; public set; }
    [CompilerGeneratedAttribute]
public string get_GrantType();
    [CompilerGeneratedAttribute]
public void set_GrantType(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_RequestedScopes();
    [CompilerGeneratedAttribute]
public void set_RequestedScopes(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_UserName();
    [CompilerGeneratedAttribute]
public void set_UserName(string value);
    [CompilerGeneratedAttribute]
public RefreshToken get_RefreshToken();
    [CompilerGeneratedAttribute]
public void set_RefreshToken(RefreshToken value);
    [CompilerGeneratedAttribute]
public string get_RefreshTokenHandle();
    [CompilerGeneratedAttribute]
public void set_RefreshTokenHandle(string value);
    [CompilerGeneratedAttribute]
public AuthorizationCode get_AuthorizationCode();
    [CompilerGeneratedAttribute]
public void set_AuthorizationCode(AuthorizationCode value);
    [CompilerGeneratedAttribute]
public string get_AuthorizationCodeHandle();
    [CompilerGeneratedAttribute]
public void set_AuthorizationCodeHandle(string value);
    [CompilerGeneratedAttribute]
public string get_CodeVerifier();
    [CompilerGeneratedAttribute]
public void set_CodeVerifier(string value);
    [CompilerGeneratedAttribute]
public DeviceCode get_DeviceCode();
    [CompilerGeneratedAttribute]
public void set_DeviceCode(DeviceCode value);
}
public class IdentityServer4.Validation.ValidationResult : object {
    [CompilerGeneratedAttribute]
private bool <IsError>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    public bool IsError { get; public set; }
    public string Error { get; public set; }
    public string ErrorDescription { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsError();
    [CompilerGeneratedAttribute]
public void set_IsError(bool value);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
}
public class IdentityServer4.Validation.X509NameSecretValidator : object {
    private ILogger`1<X509NameSecretValidator> _logger;
    public X509NameSecretValidator(ILogger`1<X509NameSecretValidator> logger);
    public sealed virtual Task`1<SecretValidationResult> ValidateAsync(IEnumerable`1<Secret> secrets, ParsedSecret parsedSecret);
}
public class IdentityServer4.Validation.X509ThumbprintSecretValidator : object {
    private ILogger`1<X509ThumbprintSecretValidator> _logger;
    public X509ThumbprintSecretValidator(ILogger`1<X509ThumbprintSecretValidator> logger);
    public sealed virtual Task`1<SecretValidationResult> ValidateAsync(IEnumerable`1<Secret> secrets, ParsedSecret parsedSecret);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.IdentityServerApplicationBuilderExtensions : object {
    [ExtensionAttribute]
public static IApplicationBuilder UseIdentityServer(IApplicationBuilder app, IdentityServerMiddlewareOptions options);
    [ExtensionAttribute]
internal static void Validate(IApplicationBuilder app);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Builder.IdentityServerApplicationBuilderExtensions/<ValidateAsync>d__2")]
private static Task ValidateAsync(IServiceProvider services, ILogger logger);
    private static void ValidateOptions(IdentityServerOptions options, ILogger logger);
    internal static object TestService(IServiceProvider serviceProvider, Type service, ILogger logger, string message, bool doThrow);
}
public class Microsoft.AspNetCore.Builder.IdentityServerMiddlewareOptions : object {
    [CompilerGeneratedAttribute]
private Action`1<IApplicationBuilder> <AuthenticationMiddleware>k__BackingField;
    public Action`1<IApplicationBuilder> AuthenticationMiddleware { get; public set; }
    [CompilerGeneratedAttribute]
public Action`1<IApplicationBuilder> get_AuthenticationMiddleware();
    [CompilerGeneratedAttribute]
public void set_AuthenticationMiddleware(Action`1<IApplicationBuilder> value);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Http.AuthenticationManagerExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Http.AuthenticationManagerExtensions/<SignInAsync>d__0")]
[ExtensionAttribute]
public static Task SignInAsync(HttpContext context, IdentityServerUser user);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Http.AuthenticationManagerExtensions/<SignInAsync>d__1")]
[ExtensionAttribute]
public static Task SignInAsync(HttpContext context, IdentityServerUser user, AuthenticationProperties properties);
    [ExtensionAttribute]
internal static ISystemClock GetClock(HttpContext context);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Http.AuthenticationManagerExtensions/<GetCookieAuthenticationSchemeAsync>d__3")]
[ExtensionAttribute]
internal static Task`1<string> GetCookieAuthenticationSchemeAsync(HttpContext context);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.IdentityServerBuilderExtensions : object {
    [ExtensionAttribute]
public static IIdentityServerBuilder AddTestUsers(IIdentityServerBuilder builder, List`1<TestUser> users);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.IdentityServerBuilderExtensionsAdditional : object {
    [ExtensionAttribute]
public static IIdentityServerBuilder AddExtensionGrantValidator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddRedirectUriValidator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddAppAuthRedirectUriValidator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddResourceOwnerValidator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddProfileService(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddResourceValidator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddScopeParser(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddClientStore(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddResourceStore(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddDeviceFlowStore(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddPersistedGrantStore(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddCorsPolicyService(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddCorsPolicyCache(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddSecretParser(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddSecretValidator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddClientStoreCache(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddResourceStoreCache(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddAuthorizeInteractionResponseGenerator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddCustomAuthorizeRequestValidator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddCustomTokenRequestValidator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddJwtBearerClientAuthentication(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddClientConfigurationValidator(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddMutualTlsSecretValidators(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddBackChannelLogoutService(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IHttpClientBuilder AddBackChannelLogoutHttpClient(IIdentityServerBuilder builder, Action`1<HttpClient> configureClient);
    [ExtensionAttribute]
public static IHttpClientBuilder AddJwtRequestUriHttpClient(IIdentityServerBuilder builder, Action`1<HttpClient> configureClient);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddAuthorizationParametersMessageStore(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddUserSession(IIdentityServerBuilder builder);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.IdentityServerBuilderExtensionsCore : object {
    [ExtensionAttribute]
public static IIdentityServerBuilder AddRequiredPlatformServices(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddCookieAuthentication(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddDefaultEndpoints(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddEndpoint(IIdentityServerBuilder builder, string name, PathString path);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddCoreServices(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddPluggableServices(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddValidators(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddResponseGenerators(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddDefaultSecretParsers(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddDefaultSecretValidators(IIdentityServerBuilder builder);
    [ExtensionAttribute]
internal static void AddTransientDecorator(IServiceCollection services);
    [ExtensionAttribute]
internal static void AddDecorator(IServiceCollection services);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.IdentityServerBuilderExtensionsCrypto : object {
    [ExtensionAttribute]
public static IIdentityServerBuilder AddSigningCredential(IIdentityServerBuilder builder, SigningCredentials credential);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddSigningCredential(IIdentityServerBuilder builder, X509Certificate2 certificate, string signingAlgorithm);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddSigningCredential(IIdentityServerBuilder builder, string name, StoreLocation location, NameType nameType, string signingAlgorithm);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddSigningCredential(IIdentityServerBuilder builder, SecurityKey key, string signingAlgorithm);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddSigningCredential(IIdentityServerBuilder builder, RsaSecurityKey key, RsaSigningAlgorithm signingAlgorithm);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddSigningCredential(IIdentityServerBuilder builder, ECDsaSecurityKey key, ECDsaSigningAlgorithm signingAlgorithm);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddDeveloperSigningCredential(IIdentityServerBuilder builder, bool persistKey, string filename, RsaSigningAlgorithm signingAlgorithm);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddValidationKey(IIdentityServerBuilder builder, SecurityKeyInfo[] keys);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddValidationKey(IIdentityServerBuilder builder, RsaSecurityKey key, RsaSigningAlgorithm signingAlgorithm);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddValidationKey(IIdentityServerBuilder builder, ECDsaSecurityKey key, ECDsaSigningAlgorithm signingAlgorithm);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddValidationKey(IIdentityServerBuilder builder, X509Certificate2 certificate, string signingAlgorithm);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddValidationKey(IIdentityServerBuilder builder, string name, StoreLocation location, NameType nameType, string signingAlgorithm);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.IdentityServerBuilderExtensionsInMemory : object {
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryCaching(IIdentityServerBuilder builder);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryIdentityResources(IIdentityServerBuilder builder, IEnumerable`1<IdentityResource> identityResources);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryIdentityResources(IIdentityServerBuilder builder, IConfigurationSection section);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryApiResources(IIdentityServerBuilder builder, IEnumerable`1<ApiResource> apiResources);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryApiResources(IIdentityServerBuilder builder, IConfigurationSection section);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryApiScopes(IIdentityServerBuilder builder, IEnumerable`1<ApiScope> apiScopes);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryApiScopes(IIdentityServerBuilder builder, IConfigurationSection section);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryClients(IIdentityServerBuilder builder, IEnumerable`1<Client> clients);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryClients(IIdentityServerBuilder builder, IConfigurationSection section);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddInMemoryPersistedGrants(IIdentityServerBuilder builder);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.IdentityServerServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IIdentityServerBuilder AddIdentityServerBuilder(IServiceCollection services);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddIdentityServer(IServiceCollection services);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddIdentityServer(IServiceCollection services, Action`1<IdentityServerOptions> setupAction);
    [ExtensionAttribute]
public static IIdentityServerBuilder AddIdentityServer(IServiceCollection services, IConfiguration configuration);
    [ExtensionAttribute]
public static IServiceCollection AddOidcStateDataFormatterCache(IServiceCollection services, String[] schemes);
}
public interface Microsoft.Extensions.DependencyInjection.IIdentityServerBuilder {
    public IServiceCollection Services { get; }
    public abstract virtual IServiceCollection get_Services();
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.LocalApiAuthenticationExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddLocalApiAuthentication(IServiceCollection services, Func`2<ClaimsPrincipal, Task`1<ClaimsPrincipal>> transformationFunc);
    [ExtensionAttribute]
public static AuthenticationBuilder AddLocalApi(AuthenticationBuilder builder);
    [ExtensionAttribute]
public static AuthenticationBuilder AddLocalApi(AuthenticationBuilder builder, Action`1<LocalApiAuthenticationOptions> configureOptions);
    [ExtensionAttribute]
public static AuthenticationBuilder AddLocalApi(AuthenticationBuilder builder, string authenticationScheme, Action`1<LocalApiAuthenticationOptions> configureOptions);
    [ExtensionAttribute]
public static AuthenticationBuilder AddLocalApi(AuthenticationBuilder builder, string authenticationScheme, string displayName, Action`1<LocalApiAuthenticationOptions> configureOptions);
}
