public class IdGen.DefaultTimeSource : StopwatchTimeSource {
    public DefaultTimeSource(DateTimeOffset epoch, TimeSpan tickDuration);
    public DefaultTimeSource(DateTimeOffset epoch);
    public virtual long GetTicks();
}
public class IdGen.Id : ValueType {
    [CompilerGeneratedAttribute]
private int <SequenceNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private int <GeneratorId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <DateTimeOffset>k__BackingField;
    public int SequenceNumber { get; private set; }
    public int GeneratorId { get; private set; }
    public DateTimeOffset DateTimeOffset { get; private set; }
    internal Id(int sequenceNumber, int generatorId, DateTimeOffset dateTimeOffset);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public int get_SequenceNumber();
    [CompilerGeneratedAttribute]
private void set_SequenceNumber(int value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public int get_GeneratorId();
    [CompilerGeneratedAttribute]
private void set_GeneratorId(int value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public DateTimeOffset get_DateTimeOffset();
    [CompilerGeneratedAttribute]
private void set_DateTimeOffset(DateTimeOffset value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(Id left, Id right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(Id left, Id right);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public sealed virtual bool Equals(Id other);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class IdGen.IdGenerator : object {
    private long _generatorid;
    private int _sequence;
    private long _lastgen;
    private long MASK_SEQUENCE;
    private long MASK_TIME;
    private long MASK_GENERATOR;
    private int SHIFT_TIME;
    private int SHIFT_GENERATOR;
    private object _genlock;
    [CompilerGeneratedAttribute]
private IdGeneratorOptions <Options>k__BackingField;
    public IdGeneratorOptions Options { get; }
    public int Id { get; }
    public IdGenerator(int generatorId);
    public IdGenerator(int generatorId, IdGeneratorOptions options);
    [CompilerGeneratedAttribute]
public IdGeneratorOptions get_Options();
    public int get_Id();
    public sealed virtual long CreateId();
    public bool TryCreateId(Int64& id);
    [NullableContextAttribute("2")]
private long CreateIdImpl(Exception& exception);
    public Id FromId(long id);
    private long GetTicks();
    private static long GetMask(byte bits);
    [IteratorStateMachineAttribute("IdGen.IdGenerator/<IdStream>d__22")]
private IEnumerable`1<long> IdStream();
    public sealed virtual IEnumerator`1<long> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [CompilerGeneratedAttribute]
private bool <CreateIdImpl>b__18_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class IdGen.IdGeneratorOptions : object {
    public static DateTime DefaultEpoch;
    private static IdStructure _defaultidstructure;
    private static ITimeSource _defaulttimesource;
    private static SequenceOverflowStrategy _defaultsequenceoverflowstrategy;
    public static IdGeneratorOptions Default;
    [CompilerGeneratedAttribute]
private IdStructure <IdStructure>k__BackingField;
    [CompilerGeneratedAttribute]
private ITimeSource <TimeSource>k__BackingField;
    [CompilerGeneratedAttribute]
private SequenceOverflowStrategy <SequenceOverflowStrategy>k__BackingField;
    public IdStructure IdStructure { get; public set; }
    public ITimeSource TimeSource { get; public set; }
    public SequenceOverflowStrategy SequenceOverflowStrategy { get; public set; }
    [NullableContextAttribute("2")]
public IdGeneratorOptions(IdStructure idStructure, ITimeSource timeSource, SequenceOverflowStrategy sequenceOverflowStrategy);
    private static IdGeneratorOptions();
    [CompilerGeneratedAttribute]
public IdStructure get_IdStructure();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IdStructure(IdStructure value);
    [CompilerGeneratedAttribute]
public ITimeSource get_TimeSource();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TimeSource(ITimeSource value);
    [CompilerGeneratedAttribute]
public SequenceOverflowStrategy get_SequenceOverflowStrategy();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SequenceOverflowStrategy(SequenceOverflowStrategy value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class IdGen.IdStructure : object {
    [CompilerGeneratedAttribute]
private byte <TimestampBits>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <GeneratorIdBits>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <SequenceBits>k__BackingField;
    public byte TimestampBits { get; private set; }
    public byte GeneratorIdBits { get; private set; }
    public byte SequenceBits { get; private set; }
    public long MaxIntervals { get; }
    public int MaxGenerators { get; }
    public int MaxSequenceIds { get; }
    public static IdStructure Default { get; }
    public IdStructure(byte timestampBits, byte generatorIdBits, byte sequenceBits);
    [CompilerGeneratedAttribute]
public byte get_TimestampBits();
    [CompilerGeneratedAttribute]
private void set_TimestampBits(byte value);
    [CompilerGeneratedAttribute]
public byte get_GeneratorIdBits();
    [CompilerGeneratedAttribute]
private void set_GeneratorIdBits(byte value);
    [CompilerGeneratedAttribute]
public byte get_SequenceBits();
    [CompilerGeneratedAttribute]
private void set_SequenceBits(byte value);
    public long get_MaxIntervals();
    public int get_MaxGenerators();
    public int get_MaxSequenceIds();
    public static IdStructure get_Default();
    public DateTimeOffset WraparoundDate(DateTimeOffset epoch, ITimeSource timeSource);
    public TimeSpan WraparoundInterval(ITimeSource timeSource);
}
public interface IdGen.IIdGenerator`1 {
    [NullableContextAttribute("1")]
public abstract virtual T CreateId();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class IdGen.InvalidSystemClockException : Exception {
    public InvalidSystemClockException(string message, Exception innerException);
    public InvalidSystemClockException(string message);
}
public interface IdGen.ITimeSource {
    public DateTimeOffset Epoch { get; }
    public TimeSpan TickDuration { get; }
    public abstract virtual DateTimeOffset get_Epoch();
    public abstract virtual TimeSpan get_TickDuration();
    public abstract virtual long GetTicks();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class IdGen.SequenceOverflowException : Exception {
    public SequenceOverflowException(string message, Exception innerException);
    public SequenceOverflowException(string message);
}
public enum IdGen.SequenceOverflowStrategy : Enum {
    public int value__;
    public static SequenceOverflowStrategy Throw;
    public static SequenceOverflowStrategy SpinWait;
}
public abstract class IdGen.StopwatchTimeSource : object {
    [NullableAttribute("1")]
private static Stopwatch _sw;
    private static DateTimeOffset _initialized;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Epoch>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Offset>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <TickDuration>k__BackingField;
    public DateTimeOffset Epoch { get; private set; }
    protected static TimeSpan Elapsed { get; }
    protected TimeSpan Offset { get; private set; }
    public TimeSpan TickDuration { get; private set; }
    public StopwatchTimeSource(DateTimeOffset epoch, TimeSpan tickDuration);
    private static StopwatchTimeSource();
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_Epoch();
    [CompilerGeneratedAttribute]
private void set_Epoch(DateTimeOffset value);
    protected static TimeSpan get_Elapsed();
    [CompilerGeneratedAttribute]
protected TimeSpan get_Offset();
    [CompilerGeneratedAttribute]
private void set_Offset(TimeSpan value);
    [CompilerGeneratedAttribute]
public sealed virtual TimeSpan get_TickDuration();
    [CompilerGeneratedAttribute]
private void set_TickDuration(TimeSpan value);
    public abstract virtual long GetTicks();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("6143")]
internal class System.Diagnostics.CodeAnalysis.ExperimentalAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <DiagnosticId>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <UrlFormat>k__BackingField;
    public string DiagnosticId { get; }
    [NullableAttribute("2")]
public string UrlFormat { get; public set; }
    public ExperimentalAttribute(string diagnosticId);
    [CompilerGeneratedAttribute]
public string get_DiagnosticId();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_UrlFormat();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_UrlFormat(string value);
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("32")]
internal class System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.StringSyntaxAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Syntax>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Object[] <Arguments>k__BackingField;
    public static string CompositeFormat;
    public static string DateOnlyFormat;
    public static string DateTimeFormat;
    public static string EnumFormat;
    public static string GuidFormat;
    public static string Json;
    public static string NumericFormat;
    public static string Regex;
    public static string TimeOnlyFormat;
    public static string TimeSpanFormat;
    public static string Uri;
    public static string Xml;
    public string Syntax { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object[] Arguments { get; }
    public StringSyntaxAttribute(string syntax);
    public StringSyntaxAttribute(string syntax, Object[] arguments);
    [CompilerGeneratedAttribute]
public string get_Syntax();
    [CompilerGeneratedAttribute]
public Object[] get_Arguments();
}
[AttributeUsageAttribute("2240")]
internal class System.Diagnostics.CodeAnalysis.UnscopedRefAttribute : Attribute {
}
[IsReadOnlyAttribute]
internal class System.Index : ValueType {
    private int _value;
    public static Index Start { get; }
    public static Index End { get; }
    public int Value { get; }
    public bool IsFromEnd { get; }
    public Index(int value, bool fromEnd);
    private Index(int value);
    public static Index get_Start();
    public static Index get_End();
    public static Index FromStart(int value);
    public static Index FromEnd(int value);
    public int get_Value();
    public bool get_IsFromEnd();
    public int GetOffset(int length);
    [NullableContextAttribute("2")]
public virtual bool Equals(object value);
    public sealed virtual bool Equals(Index other);
    public virtual int GetHashCode();
    public static Index op_Implicit(int value);
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
private string ToStringFromEnd();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("5212")]
internal class System.Runtime.CompilerServices.AsyncMethodBuilderAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <BuilderType>k__BackingField;
    public Type BuilderType { get; }
    public AsyncMethodBuilderAttribute(Type builderType);
    [CompilerGeneratedAttribute]
public Type get_BuilderType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2048")]
internal class System.Runtime.CompilerServices.CallerArgumentExpressionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public CallerArgumentExpressionAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1036")]
internal class System.Runtime.CompilerServices.CollectionBuilderAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <BuilderType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    public Type BuilderType { get; }
    public string MethodName { get; }
    public CollectionBuilderAttribute(Type builderType, string methodName);
    [CompilerGeneratedAttribute]
public Type get_BuilderType();
    [CompilerGeneratedAttribute]
public string get_MethodName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
internal class System.Runtime.CompilerServices.CompilerFeatureRequiredAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <FeatureName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOptional>k__BackingField;
    public static string RefStructs;
    public static string RequiredMembers;
    public string FeatureName { get; }
    public bool IsOptional { get; public set; }
    public CompilerFeatureRequiredAttribute(string featureName);
    [CompilerGeneratedAttribute]
public string get_FeatureName();
    [CompilerGeneratedAttribute]
public bool get_IsOptional();
    [CompilerGeneratedAttribute]
public void set_IsOptional(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2048")]
internal class System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Arguments>k__BackingField;
    public String[] Arguments { get; }
    public InterpolatedStringHandlerArgumentAttribute(string argument);
    public InterpolatedStringHandlerArgumentAttribute(String[] arguments);
    [CompilerGeneratedAttribute]
public String[] get_Arguments();
}
[AttributeUsageAttribute("12")]
internal class System.Runtime.CompilerServices.InterpolatedStringHandlerAttribute : Attribute {
}
[EditorBrowsableAttribute("1")]
internal static class System.Runtime.CompilerServices.IsExternalInit : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Runtime.CompilerServices.ModuleInitializerAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[AttributeUsageAttribute("396")]
internal class System.Runtime.CompilerServices.RequiredMemberAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[EditorBrowsableAttribute("1")]
internal class System.Runtime.CompilerServices.RequiresLocationAttribute : Attribute {
}
[AttributeUsageAttribute("1774")]
internal class System.Runtime.CompilerServices.SkipLocalsInitAttribute : Attribute {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("6143")]
internal class System.Runtime.Versioning.RequiresPreviewFeaturesAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    public string Url { get; public set; }
    public RequiresPreviewFeaturesAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
}
