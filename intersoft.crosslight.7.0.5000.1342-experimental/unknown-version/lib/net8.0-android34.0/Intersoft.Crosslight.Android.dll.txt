[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Intersoft.Crosslight.Android.AbsListViewBindingAdapter`1 : ControlBindingAdapterBase`1<T> {
    internal virtual BindingAdapterContext ResolveContext();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Intersoft.Crosslight.Android.AbsListViewExtensions : object {
    [ExtensionAttribute]
public static IListAccessor GetListAccessor(AbsListView listView);
    [ExtensionAttribute]
public static bool IsGroupingEnabled(AbsListView listView);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.AccountStoreService : AccountStoreServiceBase {
    private static Char[] a;
    private static object b;
    private KeyStore c;
    private object d;
    private PasswordProtection e;
    private static IntPtr f;
    private static string g;
    private static AccountStoreService();
    protected virtual object DeserializeCookies(string cookiesString);
    private void LoadEmptyKeyStore(Char[] a);
    public virtual string MakeAlias(IAccount account, string serviceId);
    protected virtual string SerializeCookies(object cookies);
    public virtual void SetOwner(object owner);
    public virtual void Delete(IAccount account);
    public virtual IAccount FindAccount(string serviceId);
    public virtual IEnumerable`1<IAccount> FindAccounts(string serviceId);
    public virtual void Save(IAccount account);
    protected virtual Context DispatchContext(object owner);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.ActionBarBindingAdapter : ControlBindingAdapterBase`1<ActionBar> {
    internal virtual BindingAdapterContext ResolveContext();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.ActionBarDrawer : ActionBarDrawerToggle {
    private Activity a;
    protected ActionBarDrawer(IntPtr a, JniHandleOwnership b);
    public ActionBarDrawer(Activity a, IDrawerViewModel b, DrawerLayout c, int d, int e, int f);
    public virtual void OnDrawerClosed(View a);
    public virtual void OnDrawerOpened(View a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.ActionDialogFragment : DialogFragmentBase {
    [CompilerGeneratedAttribute]
private Func`2<Context, Dialog> a;
    private Func`2<Context, Dialog> b { get; private set; }
    public ActionDialogFragment(string a, IListAdapter b, EventHandler`1<DialogClickEventArgs> c, string d, EventHandler`1<DialogClickEventArgs> e, string f, EventHandler`1<DialogClickEventArgs> g, string h, EventHandler`1<DialogClickEventArgs> i);
    [CompilerGeneratedAttribute]
private Func`2<Context, Dialog> get_b();
    [CompilerGeneratedAttribute]
private void set_b(Func`2<Context, Dialog> value);
    public virtual Dialog OnCreateDialog(Bundle a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ActionPresenter : PresenterBase {
    [CompilerGeneratedAttribute]
private DialogFragmentBase a;
    [CompilerGeneratedAttribute]
private object b;
    private DialogFragmentBase c { get; private set; }
    private object d { get; private set; }
    [CompilerGeneratedAttribute]
private DialogFragmentBase get_c();
    [CompilerGeneratedAttribute]
private void set_c(DialogFragmentBase value);
    [CompilerGeneratedAttribute]
private object get_d();
    [CompilerGeneratedAttribute]
private void set_d(object value);
    public sealed virtual void SetOwner(object owner);
    public sealed virtual void Show(string message);
    public sealed virtual void Show(string title, String[] buttons, Action`1<int> actionCallback);
    public sealed virtual void Show(string title, String[] buttons, int highlightButtonIndex, int cancelButtonIndex, Action`1<int> actionCallback);
    public sealed virtual void Dismiss();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Intersoft.Crosslight.Android.Activity`1 : Activity {
    private string a;
    [CompilerGeneratedAttribute]
private TViewModel b;
    [CompilerGeneratedAttribute]
private bool c;
    [CompilerGeneratedAttribute]
private bool d;
    [CompilerGeneratedAttribute]
private bool e;
    private int f;
    private List`1<BindingDefinition> g;
    private LocationManager h;
    private Action`1<object> i;
    private List`1<BindingContext> j;
    private Dictionary`2<string, object> k;
    private TViewModel l;
    [CompilerGeneratedAttribute]
private Action`2<LocationRequest, List`1<object>> m;
    [CompilerGeneratedAttribute]
private NavigationTarget n;
    [CompilerGeneratedAttribute]
private EventHandler`1<DismissViewEventArgs> o;
    public string Id { get; private set; }
    public TViewModel ViewModel { get; protected set; }
    protected bool IsRotating { get; private set; }
    protected bool IsRotated { get; private set; }
    protected bool IsDisposed { get; private set; }
    private int Intersoft.Crosslight.Android.IActivity.MenuLayoutId { get; }
    public LocationManager LocationManager { get; }
    public Action`2<LocationRequest, List`1<object>> LocationCallback { get; public set; }
    protected int ContentLayoutId { get; }
    protected int MenuLayoutId { get; }
    protected bool ShowActionBarUpButton { get; }
    private List`1<BindingDefinition> p { get; }
    private List`1<BindingContext> q { get; }
    private Dictionary`2<string, object> r { get; }
    private NavigationTarget Intersoft.Crosslight.Android.IActivity.NavigationTarget { get; private set; }
    private IViewModel Intersoft.Crosslight.ISupportViewModel.ViewModel { get; }
    protected Activity`1(int contentLayoutId);
    protected Activity`1(TViewModel viewModel);
    protected Activity`1(IntPtr intPtr, JniHandleOwnership handleOwnership);
    public sealed virtual string get_Id();
    private void set_Id(string value);
    [CompilerGeneratedAttribute]
public TViewModel get_ViewModel();
    [CompilerGeneratedAttribute]
protected void set_ViewModel(TViewModel value);
    [CompilerGeneratedAttribute]
protected bool get_IsRotating();
    [CompilerGeneratedAttribute]
private void set_IsRotating(bool value);
    [CompilerGeneratedAttribute]
protected bool get_IsRotated();
    [CompilerGeneratedAttribute]
private void set_IsRotated(bool value);
    [CompilerGeneratedAttribute]
protected bool get_IsDisposed();
    [CompilerGeneratedAttribute]
private void set_IsDisposed(bool value);
    protected virtual void OnCreate(Bundle savedInstanceState);
    protected virtual void OnRotate();
    protected virtual void OnStart();
    protected virtual void OnRestart();
    protected virtual void OnResume();
    protected virtual void OnPause();
    protected virtual void OnStop();
    protected virtual void OnDestroy();
    public virtual void OnRestoreNonConfigurationInstance();
    public virtual Object OnRetainNonConfigurationInstance();
    protected virtual void OnSaveInstanceState(Bundle outState);
    protected virtual void OnRestoreInstanceState(Bundle savedInstanceState);
    protected virtual void Dispose(bool disposing);
    protected virtual void InitializeViewModel();
    protected virtual void OnViewNavigated();
    protected virtual void OnViewModelDisposed();
    protected virtual void OnViewDisposed();
    protected virtual void OnViewModelPropertyChanged(PropertyChangedEventArgs e);
    protected virtual void OnViewModelResourcesChanged();
    protected virtual ViewState CreateViewState();
    private void ViewModel_PropertyChanged(object a, PropertyChangedEventArgs b);
    private sealed virtual override int Intersoft.Crosslight.Android.IActivity.get_MenuLayoutId();
    private sealed virtual override void Intersoft.Crosslight.Android.IActivity.SetViewModel(IViewModel a);
    private sealed virtual override void Intersoft.Crosslight.Android.IActivity.OnViewDisposed();
    private sealed virtual override void Intersoft.Crosslight.Android.IActivity.OnViewModelDisposed();
    private sealed virtual override void Intersoft.Crosslight.Android.IActivity.OnViewModelResourcesChanged();
    private sealed virtual override void Intersoft.Crosslight.Android.IActivity.OnRestoreNonConfigurationInstance();
    private sealed virtual override void Intersoft.Crosslight.Android.IActivity.LaunchActivity(Intent a, Bundle b);
    private sealed virtual override void Intersoft.Crosslight.Android.IActivity.LaunchActivityForResult(Intent a, int b, Bundle c);
    private sealed virtual override Type Intersoft.Crosslight.Android.IActivity.GetActivityContainerType();
    public LocationManager get_LocationManager();
    [CompilerGeneratedAttribute]
public Action`2<LocationRequest, List`1<object>> get_LocationCallback();
    [CompilerGeneratedAttribute]
public void set_LocationCallback(Action`2<LocationRequest, List`1<object>> value);
    protected virtual int get_ContentLayoutId();
    protected virtual int get_MenuLayoutId();
    protected virtual bool get_ShowActionBarUpButton();
    private List`1<BindingDefinition> get_p();
    private List`1<BindingContext> get_q();
    private Dictionary`2<string, object> get_r();
    public void AddBinding(View targetView, BindableProperty property, BindingDescription binding);
    public void AddBinding(View targetView, BindableProperty property, string path);
    public void AddBinding(View targetView, BindableProperty property, string path, BindingMode mode);
    public void AddBinding(string targetViewName, BindableProperty property, BindingDescription binding);
    public void AddBinding(string targetViewName, BindableProperty property, string path);
    public void AddBinding(string targetViewName, BindableProperty property, string path, BindingMode mode);
    protected virtual TViewModel CreateViewModel();
    private void ImportFromBindingProvider();
    protected virtual void InitializeBindings();
    private void InitializeNavigation();
    protected virtual void InitializeView();
    protected virtual void OnActivityResult(int requestCode, Result resultCode, Intent data);
    public virtual void OnBackPressed();
    public virtual bool OnCreateOptionsMenu(IMenu menu);
    protected virtual void OnNewIntent(Intent intent);
    public virtual bool OnOptionsItemSelected(IMenuItem item);
    protected virtual void OnViewCreated();
    internal void OnViewDismissed(NavigationResult a);
    protected virtual void OnViewInitialized();
    private void ProcessPropertySets();
    internal virtual void RegisterBindings();
    internal virtual void UnregisterBindings();
    public void RegisterViewIdentifier(string id, object view);
    public void ReinitializeBinding(string targetViewName, BindableProperty property);
    [CompilerGeneratedAttribute]
private sealed virtual override NavigationTarget Intersoft.Crosslight.Android.IActivity.get_NavigationTarget();
    [CompilerGeneratedAttribute]
private sealed virtual override void Intersoft.Crosslight.Android.IActivity.set_NavigationTarget(NavigationTarget value);
    private sealed virtual override IViewModel Intersoft.Crosslight.ISupportViewModel.get_ViewModel();
    public sealed virtual object FindName(string name);
    public sealed virtual T FindName(string name);
    private sealed virtual override void Intersoft.Crosslight.IViewContext.OnViewDismissed(NavigationResult a);
    public virtual TService GetService();
    public virtual TService GetService(bool newInstance);
    public sealed virtual void OnLocationChanged(Location location);
    public sealed virtual void OnProviderDisabled(string provider);
    public sealed virtual void OnProviderEnabled(string provider);
    public sealed virtual void OnStatusChanged(string provider, Availability status, Bundle extras);
    public sealed virtual void RequestLocationUpdates(string provider, long minTime, float minDistance, Action`2<LocationRequest, List`1<object>> locationCallback);
    public sealed virtual void StartModalActivity(Intent intent, int requestCode, Action`1<object> callback);
    [CompilerGeneratedAttribute]
public sealed virtual void add_ViewDismissed(EventHandler`1<DismissViewEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_ViewDismissed(EventHandler`1<DismissViewEventArgs> value);
}
[ExtensionAttribute]
public static class Intersoft.Crosslight.Android.ActivityExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool IsRootView(Activity activity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.ActivityLifecycleListener : Object {
    [CompilerGeneratedAttribute]
private Activity a;
    [CompilerGeneratedAttribute]
private List`1<Activity> b;
    [CompilerGeneratedAttribute]
private Activity c;
    private Activity d { get; private set; }
    private List`1<Activity> e { get; private set; }
    private Activity f { get; private set; }
    protected ActivityLifecycleListener(IntPtr a, JniHandleOwnership b);
    [CompilerGeneratedAttribute]
private Activity get_d();
    [CompilerGeneratedAttribute]
private void set_d(Activity value);
    private void Initialize();
    [CompilerGeneratedAttribute]
private List`1<Activity> get_e();
    [CompilerGeneratedAttribute]
private void set_e(List`1<Activity> value);
    [CompilerGeneratedAttribute]
private Activity get_f();
    [CompilerGeneratedAttribute]
private void set_f(Activity value);
    internal Activity GetActiveActivity();
    internal Activity GetRootActivity();
    public sealed virtual void OnActivityCreated(Activity a, Bundle b);
    public sealed virtual void OnActivityDestroyed(Activity a);
    public sealed virtual void OnActivityPaused(Activity a);
    public sealed virtual void OnActivityResumed(Activity a);
    public sealed virtual void OnActivitySaveInstanceState(Activity a, Bundle b);
    public sealed virtual void OnActivityStarted(Activity a);
    public sealed virtual void OnActivityStopped(Activity a);
    private bool IsRootView(Activity a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ActivityPresenter : PresenterBase {
    private ActivityDialog c;
    private object d;
    public sealed virtual void Hide();
    public sealed virtual void SetOwner(object owner);
    public sealed virtual void Show(string message);
    public sealed virtual void Show();
    public sealed virtual void Show(ActivityStyle style);
    public sealed virtual void Show(string message, ActivityStyle style);
    public sealed virtual void Show(string message, ActivityStyle style, IViewModel viewModel);
    public sealed virtual void Show(string message, ActivityStyle style, bool useOverlay);
    public void Show(string message, ActivityStyle style, bool useOverlay, IViewModel viewModel);
}
public enum Intersoft.Crosslight.Android.ActivityState : Enum {
    public int value__;
    public static ActivityState Active;
    public static ActivityState Paused;
    public static ActivityState Stopped;
    public static ActivityState Destroyed;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.AdapterOptions : object {
    [CompilerGeneratedAttribute]
private ViewTemplateSelector a;
    [CompilerGeneratedAttribute]
private ImageSettings b;
    [CompilerGeneratedAttribute]
private bool c;
    [CompilerGeneratedAttribute]
private IEnumerable`1<object> d;
    [CompilerGeneratedAttribute]
private int e;
    [CompilerGeneratedAttribute]
private bool f;
    [CompilerGeneratedAttribute]
private int g;
    [CompilerGeneratedAttribute]
private int h;
    [CompilerGeneratedAttribute]
private BasicImageLoaderSettings i;
    [CompilerGeneratedAttribute]
private ItemBindingDescription j;
    [CompilerGeneratedAttribute]
private int k;
    [CompilerGeneratedAttribute]
private IListViewModel l;
    public ViewTemplateSelector CellTemplateSelector { get; public set; }
    public ImageSettings ImageSettings { get; public set; }
    public bool AnimateOnNewItems { get; public set; }
    public IEnumerable`1<object> DefaultItems { get; public set; }
    public int DropDownLayoutId { get; public set; }
    public bool EnableGrouping { get; public set; }
    public int FastScrollLetters { get; public set; }
    public int GroupLayoutId { get; public set; }
    public BasicImageLoaderSettings ImageLoaderSettings { get; public set; }
    public ItemBindingDescription ItemBindingDescription { get; public set; }
    public int ItemLayoutId { get; public set; }
    public IListViewModel ListViewModel { get; public set; }
    [CompilerGeneratedAttribute]
public ViewTemplateSelector get_CellTemplateSelector();
    [CompilerGeneratedAttribute]
public void set_CellTemplateSelector(ViewTemplateSelector value);
    [CompilerGeneratedAttribute]
public ImageSettings get_ImageSettings();
    [CompilerGeneratedAttribute]
public void set_ImageSettings(ImageSettings value);
    [CompilerGeneratedAttribute]
public bool get_AnimateOnNewItems();
    [CompilerGeneratedAttribute]
public void set_AnimateOnNewItems(bool value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<object> get_DefaultItems();
    [CompilerGeneratedAttribute]
public void set_DefaultItems(IEnumerable`1<object> value);
    [CompilerGeneratedAttribute]
public int get_DropDownLayoutId();
    [CompilerGeneratedAttribute]
public void set_DropDownLayoutId(int value);
    [CompilerGeneratedAttribute]
public bool get_EnableGrouping();
    [CompilerGeneratedAttribute]
public void set_EnableGrouping(bool value);
    [CompilerGeneratedAttribute]
public int get_FastScrollLetters();
    [CompilerGeneratedAttribute]
public void set_FastScrollLetters(int value);
    [CompilerGeneratedAttribute]
public int get_GroupLayoutId();
    [CompilerGeneratedAttribute]
public void set_GroupLayoutId(int value);
    [CompilerGeneratedAttribute]
public BasicImageLoaderSettings get_ImageLoaderSettings();
    [CompilerGeneratedAttribute]
public void set_ImageLoaderSettings(BasicImageLoaderSettings value);
    [CompilerGeneratedAttribute]
public ItemBindingDescription get_ItemBindingDescription();
    [CompilerGeneratedAttribute]
public void set_ItemBindingDescription(ItemBindingDescription value);
    [CompilerGeneratedAttribute]
public int get_ItemLayoutId();
    [CompilerGeneratedAttribute]
public void set_ItemLayoutId(int value);
    [CompilerGeneratedAttribute]
public IListViewModel get_ListViewModel();
    [CompilerGeneratedAttribute]
public void set_ListViewModel(IListViewModel value);
}
[ExtensionAttribute]
internal static class Intersoft.Crosslight.Android.AddressDataKindExtensions : object {
    [ExtensionAttribute]
internal static AddressType ToAddressType(AddressDataKind a);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.AdvancedListViewBindingAdapter : AbsListViewBindingAdapter`1<ListView> {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[BroadcastReceiverAttribute]
[IntentFilterAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[IntentFilterAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.AlarmManagerBroadcastReceiver : BroadcastReceiver {
    [CompilerGeneratedAttribute]
private int a;
    private int b { get; private set; }
    private void ApplyUserInfoIntoIntent(Intent a, LocalNotification b);
    private PendingIntent CreateLaunchIntent(Context a, LocalNotification b, Intent c);
    private void CreateAlarmManager(Context a, Intent b, LocalNotification c);
    private void CreateNotification(Context a, LocalNotification b, Intent c);
    private void ShowNotification(Context a, LocalNotification b, Intent c);
    public virtual void OnReceive(Context context, Intent intent);
    [CompilerGeneratedAttribute]
private int get_b();
    [CompilerGeneratedAttribute]
private void set_b(int value);
    private int GenerateNotificationId();
    private Intent InitializeResultIntent(Intent a, Context b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ServiceAttribute]
[IntentFilterAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.AlarmNotificationService : Service {
    [CompilerGeneratedAttribute]
private AlarmManagerBroadcastReceiver a;
    private AlarmManagerBroadcastReceiver b { get; private set; }
    [CompilerGeneratedAttribute]
private AlarmManagerBroadcastReceiver get_b();
    [CompilerGeneratedAttribute]
private void set_b(AlarmManagerBroadcastReceiver value);
    public virtual IBinder OnBind(Intent intent);
    public virtual StartCommandResult OnStartCommand(Intent intent, StartCommandFlags flags, int startId);
    public virtual void OnCreate();
    public virtual void OnDestroy();
    public virtual bool OnUnbind(Intent intent);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Intersoft.Crosslight.Android.AlertDialogBuilderUtility : object {
    internal static Dialog CreateItemsDialog(Context a, string b, IListAdapter c, EventHandler`1<DialogClickEventArgs> d, string e, EventHandler`1<DialogClickEventArgs> f, string g, EventHandler`1<DialogClickEventArgs> h, string i, EventHandler`1<DialogClickEventArgs> j);
    internal static Dialog CreateTextDialog(Context a, string b, string c, string d, EventHandler`1<DialogClickEventArgs> e, string f, EventHandler`1<DialogClickEventArgs> g, string h, EventHandler`1<DialogClickEventArgs> i);
    internal static Dialog CreateCustomDialog(Context a, string b, View c, string d, EventHandler`1<DialogClickEventArgs> e, string f, EventHandler`1<DialogClickEventArgs> g, string h, EventHandler`1<DialogClickEventArgs> i);
    internal static Dialog CreateDialog(Context a, AlertDialogSettings b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Intersoft.Crosslight.Android.AlertDialogSettings : object {
    [CompilerGeneratedAttribute]
private string a;
    [CompilerGeneratedAttribute]
private string b;
    [CompilerGeneratedAttribute]
private string c;
    [CompilerGeneratedAttribute]
private string d;
    [CompilerGeneratedAttribute]
private EventHandler`1<DialogClickEventArgs> e;
    [CompilerGeneratedAttribute]
private EventHandler`1<DialogClickEventArgs> f;
    [CompilerGeneratedAttribute]
private EventHandler`1<DialogClickEventArgs> g;
    [CompilerGeneratedAttribute]
private bool h;
    internal string Title { get; internal set; }
    internal string PositiveButtonText { get; internal set; }
    internal string NegativeButtonText { get; internal set; }
    internal string NeutralButtonText { get; internal set; }
    internal EventHandler`1<DialogClickEventArgs> PositiveButtonHandler { get; internal set; }
    internal EventHandler`1<DialogClickEventArgs> NegativeButtonHandler { get; internal set; }
    internal EventHandler`1<DialogClickEventArgs> NeutralButtonHandler { get; internal set; }
    internal bool Dismisable { get; internal set; }
    [CompilerGeneratedAttribute]
internal string get_Title();
    [CompilerGeneratedAttribute]
internal void set_Title(string value);
    [CompilerGeneratedAttribute]
internal string get_PositiveButtonText();
    [CompilerGeneratedAttribute]
internal void set_PositiveButtonText(string value);
    [CompilerGeneratedAttribute]
internal string get_NegativeButtonText();
    [CompilerGeneratedAttribute]
internal void set_NegativeButtonText(string value);
    [CompilerGeneratedAttribute]
internal string get_NeutralButtonText();
    [CompilerGeneratedAttribute]
internal void set_NeutralButtonText(string value);
    [CompilerGeneratedAttribute]
internal EventHandler`1<DialogClickEventArgs> get_PositiveButtonHandler();
    [CompilerGeneratedAttribute]
internal void set_PositiveButtonHandler(EventHandler`1<DialogClickEventArgs> value);
    [CompilerGeneratedAttribute]
internal EventHandler`1<DialogClickEventArgs> get_NegativeButtonHandler();
    [CompilerGeneratedAttribute]
internal void set_NegativeButtonHandler(EventHandler`1<DialogClickEventArgs> value);
    [CompilerGeneratedAttribute]
internal EventHandler`1<DialogClickEventArgs> get_NeutralButtonHandler();
    [CompilerGeneratedAttribute]
internal void set_NeutralButtonHandler(EventHandler`1<DialogClickEventArgs> value);
    [CompilerGeneratedAttribute]
internal bool get_Dismisable();
    [CompilerGeneratedAttribute]
internal void set_Dismisable(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.AndroidApplication : Application {
    [CompilerGeneratedAttribute]
private NavigationTarget a;
    [CompilerGeneratedAttribute]
private Intent b;
    [CompilerGeneratedAttribute]
private ActivityLifecycleListener c;
    public NavigationTarget CurrentNavigationTarget { get; public set; }
    public Intent LaunchIntent { get; public set; }
    private ActivityLifecycleListener d { get; private set; }
    public AndroidApplication(IntPtr intPtr, JniHandleOwnership jniHandleOwnership);
    [CompilerGeneratedAttribute]
public NavigationTarget get_CurrentNavigationTarget();
    [CompilerGeneratedAttribute]
public void set_CurrentNavigationTarget(NavigationTarget value);
    [CompilerGeneratedAttribute]
public Intent get_LaunchIntent();
    [CompilerGeneratedAttribute]
public void set_LaunchIntent(Intent value);
    [CompilerGeneratedAttribute]
private ActivityLifecycleListener get_d();
    [CompilerGeneratedAttribute]
private void set_d(ActivityLifecycleListener value);
    public virtual void OnCreate();
    public Activity GetActiveActivity();
    public Activity GetRootActivity();
    public static void PreserveAssembly(Assembly assembly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Intersoft.Crosslight.Android.AndroidUtility : object {
    private static AtomicInteger a;
    [CompilerGeneratedAttribute]
private static int b;
    internal static int FormListIndex { get; internal set; }
    private static AndroidUtility();
    public static Activity GetActiveActivity();
    public static Activity GetRootActivity();
    public static BindingContext CreateBindingContext(object target, BindableProperty property, BindingDescription binding);
    public static BindingContext CreateBindingContext(View targetView, BindableProperty property, BindingDescription binding);
    public static BindingContext CreateBindingContext(View targetView, BindableProperty property, string path, object source);
    public static BindingContext CreateBindingContext(View targetView, BindableProperty property, string path, object source, BindingMode mode);
    public static BindingContext CreateBindingContext(string targetViewName, BindableProperty property, BindingDescription binding);
    public static BindingContext CreateBindingContext(string targetViewName, BindableProperty property, string path, object source);
    public static BindingContext CreateBindingContext(string targetViewName, BindableProperty property, string path, object source, BindingMode mode);
    public static void DeleteFromCache(Context context, string fileName);
    public static Fragment DispatchFragment(IViewModel viewModel);
    public static Context DispatchContext(object owner);
    public static string ExecuteGetRequest(URL url);
    public static Type FindViewContextType(NavigationTarget navigationTarget, Type[] excludedTypes, bool ignoreDeviceKind);
    public static Stream GenerateStreamFromString(string s);
    public static Context GetApplicationContext();
    public static Bitmap GetApplicationIcon(Context context);
    public static int GetApplicationIconId(Context context);
    public static T GetAttribute(Enum enumValue);
    public static string GetFileExtension(File file);
    public static FragmentManager GetFragmentManager(Context context);
    public static FragmentManager GetSupportFragmentManager(Context context);
    public static object GetLastActiveViewContext();
    public static Activity GetLastActivity();
    public static Intent GetLaunchIntent(Context context);
    public static string GetMimeTypeExtension(File file);
    public static int GetResourceIdFromResourceString(Context context, string fileName, string resourceFolder);
    internal static string GetResourceString(ISupportLocalization a, string b, string c);
    public static string GetSecureDeviceID(Context context);
    public static Uri GetUriFromResourceId(Context context, int resourceId);
    public static IViewContext GetViewContext(IViewModel viewModel);
    public static IViewContext GetViewContext(IViewModel viewModel, Type viewContextType);
    public static IViewContext[] GetViewContext(NavigationTarget navigationTarget);
    internal static int GuidToInt(Guid a);
    public static void HideKeyboard(Context context, View viewToFocus);
    public static bool IsApplicationInstalled(Context context, string packageName);
    public static bool IsHandlingIntentAvailable(Context context, Intent intent);
    public static bool IsHoneycombOrHigher();
    public static bool IsIceCreamSandwichOrHigher();
    public static bool IsTablet(Context context);
    public static int LookupHost(string hostname);
    public static T ParseJson(string jsonString, IEnumerable`1<Type> knownTypes);
    public static T PerformRequest(URL url, IEnumerable`1<Type> knownTypes);
    public static File PrepareFileCache(Context context, string fileName);
    public static Byte[] ReadFile(File file);
    public static void ShowKeyboard(Context context, View viewToFocus);
    public static File WriteEmptyFileToCache(Context context, string fileName);
    public static void WriteFile(File cacheFile, Byte[] fileToWrite);
    public static void WriteFile(File cacheFile, IEnumerable`1<Byte[]> bytes);
    public static File WriteToCache(Context context, string fileName, Byte[] fileToWrite);
    public static File WriteToCache(Context context, string fileName, Bitmap bitmap);
    public static int GenerateViewId();
    [CompilerGeneratedAttribute]
internal static int get_FormListIndex();
    [CompilerGeneratedAttribute]
internal static void set_FormListIndex(int value);
    internal static int GetPredeterminedIdBasedOnPosition();
    public static IWindowManager GetWindowManager();
    public static Orientation GetScreenOrientation();
    public static int ConvertDpToPixel(int dp);
    public static void SetAlpha(View view, float alpha);
    public static DeviceKind GetDeviceKind();
    public static DeviceKind GetInitialDeviceKind();
    public static Byte[] GetSnapshot(View view);
    public static Byte[] GetSnapshot(View view, Nullable`1<int> targetHeight, Nullable`1<int> targetWidth, string format);
    public static Byte[] GetJpgSnapshot(View view, Nullable`1<int> targetHeight, Nullable`1<int> targetWidth);
    public static Byte[] GetPngSnapshot(View view, Nullable`1<int> targetHeight, Nullable`1<int> targetWidth);
    public static Byte[] GetLocalImageFile(string uriString);
    public static int GetViewId(ViewGroup viewGroup, string name, Resources resources);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.AnimationDrawable : TransitionDrawable {
    [CompilerGeneratedAttribute]
private Drawable a;
    [CompilerGeneratedAttribute]
private Drawable b;
    [CompilerGeneratedAttribute]
private Action c;
    [CompilerGeneratedAttribute]
private a d;
    public Drawable After { get; public set; }
    public Drawable Before { get; public set; }
    public Action OnTransitionFinished { get; public set; }
    private a e { get; private set; }
    public AnimationDrawable(Drawable before, Drawable after);
    public AnimationDrawable(Drawable[] drawables);
    protected AnimationDrawable(IntPtr javaReference, JniHandleOwnership transfer);
    [CompilerGeneratedAttribute]
public Drawable get_After();
    [CompilerGeneratedAttribute]
public void set_After(Drawable value);
    [CompilerGeneratedAttribute]
public Drawable get_Before();
    [CompilerGeneratedAttribute]
public void set_Before(Drawable value);
    [CompilerGeneratedAttribute]
public Action get_OnTransitionFinished();
    [CompilerGeneratedAttribute]
public void set_OnTransitionFinished(Action value);
    [CompilerGeneratedAttribute]
private a get_e();
    [CompilerGeneratedAttribute]
private void set_e(a value);
    protected virtual void Dispose(bool disposing);
    private void OnTimerFinished();
    public void StartTransition(int duration, Action onTransitionFinished);
    public void Cancel();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.AppearanceAttribute : AppearanceAttributeBase {
    public static AppearanceProperty MarginBottomProperty;
    public static AppearanceProperty MarginLeftProperty;
    public static AppearanceProperty MarginTopProperty;
    public static AppearanceProperty MarginRightProperty;
    public static AppearanceProperty PaddingBottomProperty;
    public static AppearanceProperty PaddingLeftProperty;
    public static AppearanceProperty PaddingTopProperty;
    public static AppearanceProperty PaddingRightProperty;
    public static AppearanceProperty BackgroundColorProperty;
    public static AppearanceProperty TextColorProperty;
    public static AppearanceProperty TextSizeProperty;
    public static AppearanceProperty TypefaceProperty;
    public static AppearanceProperty TypefaceStyleProperty;
    public int MarginBottom { get; public set; }
    public int MarginLeft { get; public set; }
    public int MarginTop { get; public set; }
    public int MarginRight { get; public set; }
    public int PaddingBottom { get; public set; }
    public int PaddingLeft { get; public set; }
    public int PaddingTop { get; public set; }
    public int PaddingRight { get; public set; }
    public string BackgroundColor { get; public set; }
    public string TextColor { get; public set; }
    public int TextSize { get; public set; }
    public Typeface Typeface { get; public set; }
    public TypefaceStyle TypefaceStyle { get; public set; }
    private static AppearanceAttribute();
    public int get_MarginBottom();
    public void set_MarginBottom(int value);
    public int get_MarginLeft();
    public void set_MarginLeft(int value);
    public int get_MarginTop();
    public void set_MarginTop(int value);
    public int get_MarginRight();
    public void set_MarginRight(int value);
    public int get_PaddingBottom();
    public void set_PaddingBottom(int value);
    public int get_PaddingLeft();
    public void set_PaddingLeft(int value);
    public int get_PaddingTop();
    public void set_PaddingTop(int value);
    public int get_PaddingRight();
    public void set_PaddingRight(int value);
    public string get_BackgroundColor();
    public void set_BackgroundColor(string value);
    public string get_TextColor();
    public void set_TextColor(string value);
    public int get_TextSize();
    public void set_TextSize(int value);
    public Typeface get_Typeface();
    public void set_Typeface(Typeface value);
    public TypefaceStyle get_TypefaceStyle();
    public void set_TypefaceStyle(TypefaceStyle value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("384")]
public abstract class Intersoft.Crosslight.Android.AppearanceAttributeBase : Attribute {
    private Dictionary`2<AppearanceProperty, object> a;
    private Dictionary`2<AppearanceProperty, object> b { get; }
    private Dictionary`2<AppearanceProperty, object> get_b();
    public bool HasValue(AppearanceProperty property);
    public object GetValue(AppearanceProperty property);
    public void SetValue(AppearanceProperty property, object value);
    public void ResetValue(AppearanceProperty property);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.AppearanceProperty : object {
    private static Dictionary`2<Type, List`1<AppearanceProperty>> a;
    [CompilerGeneratedAttribute]
private string b;
    [CompilerGeneratedAttribute]
private Type c;
    [CompilerGeneratedAttribute]
private Type d;
    [CompilerGeneratedAttribute]
private object e;
    public string PropertyName { get; public set; }
    public Type PropertyType { get; public set; }
    public Type OwnerType { get; public set; }
    public object DefaultValue { get; public set; }
    private AppearanceProperty(string a, Type b, Type c, object d);
    private static AppearanceProperty();
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public void set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public Type get_PropertyType();
    [CompilerGeneratedAttribute]
public void set_PropertyType(Type value);
    [CompilerGeneratedAttribute]
public Type get_OwnerType();
    [CompilerGeneratedAttribute]
public void set_OwnerType(Type value);
    [CompilerGeneratedAttribute]
public object get_DefaultValue();
    [CompilerGeneratedAttribute]
public void set_DefaultValue(object value);
    public static AppearanceProperty Register(string propertyName, Type propertyType, Type ownerType, object defaultValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ApplicationContext : object {
    private IList`1<Type> a;
    private Context b;
    [CompilerGeneratedAttribute]
private object c;
    [CompilerGeneratedAttribute]
private CultureInfo d;
    [CompilerGeneratedAttribute]
private Type e;
    [CompilerGeneratedAttribute]
private Assembly f;
    [CompilerGeneratedAttribute]
private DeviceInfo g;
    [CompilerGeneratedAttribute]
private PlatformInfo h;
    [CompilerGeneratedAttribute]
private IViewModel i;
    [CompilerGeneratedAttribute]
private Type j;
    [CompilerGeneratedAttribute]
private object k;
    public object Tag { get; public set; }
    public CultureInfo SystemLanguage { get; private set; }
    public Type MainType { get; private set; }
    public Assembly MainAssembly { get; private set; }
    public DeviceInfo Device { get; private set; }
    public PlatformInfo Platform { get; private set; }
    public IViewModel RootViewModel { get; public set; }
    public Type RootViewModelType { get; public set; }
    public object Context { get; private set; }
    public Type[] ExportedTypes { get; }
    public ApplicationContext(Type mainType, IApplicationHost appHost);
    [CompilerGeneratedAttribute]
public object get_Tag();
    [CompilerGeneratedAttribute]
public void set_Tag(object value);
    [CompilerGeneratedAttribute]
public sealed virtual CultureInfo get_SystemLanguage();
    [CompilerGeneratedAttribute]
private void set_SystemLanguage(CultureInfo value);
    public sealed virtual void AddExportedType(Type type);
    public sealed virtual void AddExportedTypes(Type[] types);
    public IApplicationHost GetApplicationHost();
    public bool IsTelephonyAvailable();
    internal void SetApplicationContext(Context a);
    private string GetDeviceName();
    internal void SetDeviceInfo();
    public void SetDeviceKind(DeviceKind deviceKind);
    public sealed virtual Context GetNativeContext();
    [CompilerGeneratedAttribute]
public sealed virtual Type get_MainType();
    [CompilerGeneratedAttribute]
private void set_MainType(Type value);
    [CompilerGeneratedAttribute]
public sealed virtual Assembly get_MainAssembly();
    [CompilerGeneratedAttribute]
private void set_MainAssembly(Assembly value);
    [CompilerGeneratedAttribute]
public sealed virtual DeviceInfo get_Device();
    [CompilerGeneratedAttribute]
private void set_Device(DeviceInfo value);
    [CompilerGeneratedAttribute]
public sealed virtual PlatformInfo get_Platform();
    [CompilerGeneratedAttribute]
private void set_Platform(PlatformInfo value);
    [CompilerGeneratedAttribute]
public sealed virtual IViewModel get_RootViewModel();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RootViewModel(IViewModel value);
    [CompilerGeneratedAttribute]
public sealed virtual Type get_RootViewModelType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RootViewModelType(Type value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_Context();
    [CompilerGeneratedAttribute]
private void set_Context(object value);
    public sealed virtual Type[] get_ExportedTypes();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Intersoft.Crosslight.Android.AsyncUtility : object {
    private static HashSet`1<object> a;
    private static AsyncUtility();
    public static void Execute(TParam data, Func`2<TParam, TResult> doBackground);
    public static void Execute(TParam data, Func`2<TParam, TResult> doBackground, Action`2<TParam, TResult> onExecuted, Action`2<TParam, TResult> onCancelled, CancellationTokenSource cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.BackgroundSyncAdapter : AbstractThreadedSyncAdapter {
    [CompilerGeneratedAttribute]
private ContentResolver a;
    [CompilerGeneratedAttribute]
private SyncContext b;
    protected ContentResolver ContentResolver { get; protected set; }
    protected SyncContext CurrentSyncContext { get; protected set; }
    private object Intersoft.Crosslight.IApplicationHost.ApplicationInstance { get; }
    private Type Intersoft.Crosslight.IApplicationHost.ApplicationType { get; }
    public BackgroundSyncAdapter(Context context, bool autoInitialize);
    public BackgroundSyncAdapter(Context context, bool autoInitialize, bool allowParallelSyncs);
    [CompilerGeneratedAttribute]
protected ContentResolver get_ContentResolver();
    [CompilerGeneratedAttribute]
protected void set_ContentResolver(ContentResolver value);
    [CompilerGeneratedAttribute]
protected SyncContext get_CurrentSyncContext();
    [CompilerGeneratedAttribute]
protected void set_CurrentSyncContext(SyncContext value);
    private void Alert(string a);
    public virtual void OnPerformSync(Account account, Bundle extras, string authority, ContentProviderClient provider, SyncResult syncResult);
    protected virtual void OnSyncError(Exception ex);
    public virtual void OnSyncCanceled();
    public virtual void OnSyncCanceled(Thread thread);
    private void RunOnUIThread(Action a);
    private sealed virtual override object Intersoft.Crosslight.IApplicationHost.get_ApplicationInstance();
    private sealed virtual override Type Intersoft.Crosslight.IApplicationHost.get_ApplicationType();
    private sealed virtual override IEnumerable`1<Assembly> Intersoft.Crosslight.IApplicationHost.GetLoadedAssemblies();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.BackgroundSyncAuthenticator : AbstractAccountAuthenticator {
    public BackgroundSyncAuthenticator(Context context);
    public virtual Bundle AddAccount(AccountAuthenticatorResponse response, string accountType, string authTokenType, String[] requiredFeatures, Bundle options);
    public virtual Bundle ConfirmCredentials(AccountAuthenticatorResponse response, Account account, Bundle options);
    public virtual Bundle EditProperties(AccountAuthenticatorResponse response, string accountType);
    public virtual Bundle GetAuthToken(AccountAuthenticatorResponse response, Account account, string authTokenType, Bundle options);
    public virtual string GetAuthTokenLabel(string authTokenType);
    public virtual Bundle HasFeatures(AccountAuthenticatorResponse response, Account account, String[] features);
    public virtual Bundle UpdateCredentials(AccountAuthenticatorResponse response, Account account, string authTokenType, Bundle options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.BackgroundSyncAuthenticatorService : Service {
    protected BackgroundSyncAuthenticator Authenticator;
    public virtual IBinder OnBind(Intent intent);
    public virtual void OnCreate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.BackgroundSyncProvider : ContentProvider {
    public virtual int Delete(Uri uri, string selection, String[] selectionArgs);
    public virtual string GetType(Uri uri);
    public virtual Uri Insert(Uri uri, ContentValues values);
    public virtual bool OnCreate();
    public virtual ICursor Query(Uri uri, String[] projection, string selection, String[] selectionArgs, string sortOrder);
    public virtual int Update(Uri uri, ContentValues values, string selection, String[] selectionArgs);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.BackgroundSyncService : Service {
    public static BackgroundSyncAdapter SyncAdapter;
    public static object SyncAdapterLock;
    private static BackgroundSyncService();
    protected virtual BackgroundSyncAdapter InitializeSyncAdapter();
    public virtual IBinder OnBind(Intent intent);
    public virtual void OnCreate();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.BindingAdapter : BindingAdapterBase`1<View> {
    [CompilerGeneratedAttribute]
private static bool a;
    private static IViewService b;
    public static object UnspecifiedValue;
    internal static bool Initializing { get; internal set; }
    public static IViewService ViewService { get; }
    private static BindingAdapter();
    [CompilerGeneratedAttribute]
internal static bool get_Initializing();
    [CompilerGeneratedAttribute]
internal static void set_Initializing(bool value);
    public static IViewService get_ViewService();
    public static void UpdateSource(object sender, BindableProperty property);
    public static void UpdateSource(object sender, BindableProperty property, object value);
    public static void RunOnUIThread(Action action);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.BindingAdapters.AbsListViewBindingAdapterContext : ViewBindingAdapterContext {
    private Dictionary`2<AbsListView, IViewContext> b;
    private Dictionary`2<AbsListView, IViewContext> a { get; }
    private Dictionary`2<AbsListView, IViewContext> get_a();
    public virtual void Initialize(object a);
    public virtual void Attach(object a, BindingContext b);
    public virtual bool SetValue(object a, BindableProperty b, object c);
    public virtual void Uninitialize(object a);
    private void OnItemClick(object a, ItemClickEventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.BindingAdapters.ActionBarBindingAdapterContext : BindingAdapterContext {
    public virtual object GetValue(object a, BindableProperty b);
    public virtual bool SetValue(object a, BindableProperty b, object c);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.BindingAdapters.BindingAdapterContext : object {
    private Dictionary`2<object, List`1<BindingContext>> a;
    private Dictionary`2<object, List`1<BindingContext>> b { get; }
    private Dictionary`2<object, List`1<BindingContext>> get_b();
    public virtual void Initialize(object a);
    public virtual void Attach(object a, BindingContext b);
    public virtual object GetValue(object a, BindableProperty b);
    public virtual bool SetValue(object a, BindableProperty b, object c);
    public virtual void Detach(object a, BindingContext b);
    public virtual void Uninitialize(object a);
    public bool IsAttached(object a, BindableProperty b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.BindingAdapters.ButtonBaseBindingAdapterContext : ImageViewBindingAdapterContext {
    public virtual bool SetValue(object a, BindableProperty b, object c);
    public virtual void Detach(object a, BindingContext b);
    private static void OnCommandCanExecuteChanged(object a, EventArgs b);
    private static void InvalidateRequerySuggested(View a, ICommand b, object c);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.BindingAdapters.ButtonBindingAdapterContext : ButtonBaseBindingAdapterContext {
    public virtual void Initialize(object a);
    public virtual void Uninitialize(object a);
    private void OnClick(object a, EventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.BindingAdapters.DatePickerBindingAdapterContext : ViewBindingAdapterContext {
    public virtual void Initialize(object a);
    public virtual object GetValue(object a, BindableProperty b);
    public virtual bool SetValue(object a, BindableProperty b, object c);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.BindingAdapters.DateTimePickerBindingAdapter : ControlBindingAdapterBase`1<DateTimePickerWidget> {
    internal virtual BindingAdapterContext ResolveContext();
}
internal class Intersoft.Crosslight.Android.BindingAdapters.DateTimePickerBindingAdapterContext : ViewBindingAdapterContext {
    [NullableContextAttribute("1")]
public virtual bool SetValue(object a, BindableProperty b, object c);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.BindingAdapters.EditTextBindingAdapterContext : ViewBindingAdapterContext {
    public virtual void Initialize(object a);
    public virtual void Attach(object a, BindingContext b);
    public virtual object GetValue(object a, BindableProperty b);
    public virtual bool SetValue(object a, BindableProperty b, object c);
    public virtual void Detach(object a, BindingContext b);
    public virtual void Uninitialize(object a);
    private void OnEditorAction(object a, EditorActionEventArgs b);
    private void OnFocusChange(object a, FocusChangeEventArgs b);
    private void OnTextChanged(object a, TextChangedEventArgs b);
    private void HandleNextInput(EditText a);
    private View GetNextInputFocus(EditText a);
    private void UpdateSourceSafe(object a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.BindingAdapters.ImageViewBindingAdapterContext : ViewBindingAdapterContext {
    public virtual object GetValue(object a, BindableProperty b);
    public virtual bool SetValue(object a, BindableProperty b, object c);
    private ImageView ResolveImageView(object a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.BindingAdapters.MenuItemBindingAdapterContext : BindingAdapterContext {
    public virtual object GetValue(object a, BindableProperty b);
    public virtual bool SetValue(object a, BindableProperty b, object c);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.BindingAdapters.MessageInputViewBindingAdapterContext : ViewBindingAdapterContext {
    public virtual void Initialize(object a);
    public virtual void Attach(object a, BindingContext b);
    public virtual object GetValue(object a, BindableProperty b);
    public virtual bool SetValue(object a, BindableProperty b, object c);
    public virtual void Detach(object a, BindingContext b);
    public virtual void Uninitialize(object a);
    private void OnFocusChange(object a, FocusChangeEventArgs b);
    private void OnTextChanged(object a, TextChangedEventArgs b);
    private void OnLeftButtonClick(object a, EventArgs b);
    private void OnRightButtonClick(object a, EventArgs b);
    private void UpdateSourceSafe(object a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.BindingAdapters.NumericStepperBindingAdapterContext : ViewBindingAdapterContext {
    public virtual void Initialize(object a);
    public virtual void Uninitialize(object a);
    public virtual bool SetValue(object a, BindableProperty b, object c);
    private void OnValueChanged(object a, ValueChangedEventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.BindingAdapters.RadioGroupBindingAdapterContext : ViewBindingAdapterContext {
    public virtual void Initialize(object a);
    public virtual bool SetValue(object a, BindableProperty b, object c);
    public virtual void Detach(object a, BindingContext b);
    public virtual void Uninitialize(object a);
    private void OnCheckedChanged(object a, CheckedChangeEventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.BindingAdapters.RoundedButtonBindingAdapterContext : ButtonBaseBindingAdapterContext {
    public virtual void Initialize(object a);
    public virtual object GetValue(object a, BindableProperty b);
    public virtual bool SetValue(object a, BindableProperty b, object c);
    public virtual void Uninitialize(object a);
    private void OnClick(object a, EventArgs b);
    private static void OnCheckedChanged(object a, CheckedChangeEventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.BindingAdapters.SeekBarBindingAdapterContext : ViewBindingAdapterContext {
    public virtual void Initialize(object a);
    public virtual object GetValue(object a, BindableProperty b);
    public virtual bool SetValue(object a, BindableProperty b, object c);
    public virtual void Uninitialize(object a);
    private void OnProgressChanged(object a, ProgressChangedEventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.BindingAdapters.SelectionWidgetBindingAdapterContext : ViewBindingAdapterContext {
    public virtual object GetValue(object a, BindableProperty b);
    public virtual bool SetValue(object a, BindableProperty b, object c);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.BindingAdapters.SpinnerBindingAdapterContext : ViewBindingAdapterContext {
    public virtual void Initialize(object a);
    public virtual object GetValue(object a, BindableProperty b);
    public virtual bool SetValue(object a, BindableProperty b, object c);
    public virtual void Uninitialize(object a);
    private void OnItemSelected(object a, ItemSelectedEventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.BindingAdapters.TextViewBindingAdapterContext : ViewBindingAdapterContext {
    public virtual object GetValue(object a, BindableProperty b);
    public virtual bool SetValue(object a, BindableProperty b, object c);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.BindingAdapters.TimePickerBindingAdapterContext : ViewBindingAdapterContext {
    public virtual void Initialize(object a);
    public virtual object GetValue(object a, BindableProperty b);
    public virtual bool SetValue(object a, BindableProperty b, object c);
    public virtual void Uninitialize(object a);
    private void OnTimeChanged(object a, TimeChangedEventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.BindingAdapters.ToggleButtonBindingAdapterContext : ButtonBaseBindingAdapterContext {
    public virtual void Initialize(object a);
    public virtual object GetValue(object a, BindableProperty b);
    public virtual bool SetValue(object a, BindableProperty b, object c);
    public virtual void Uninitialize(object a);
    private static void OnCheckedChanged(object a, CheckedChangeEventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.BindingAdapters.ViewBindingAdapterContext : BindingAdapterContext {
    public virtual object GetValue(object a, BindableProperty b);
    public virtual bool SetValue(object a, BindableProperty b, object c);
}
[ExtensionAttribute]
public static class Intersoft.Crosslight.Android.BindingDescriptionExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static BindingDescription Clone(BindingDescription bindingDescription);
}
[ExtensionAttribute]
public static class Intersoft.Crosslight.Android.BitmapExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static Byte[] ToByteArray(Bitmap bitmap);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.BitmapLoaderDelegate : ImageLoaderDelegate {
    [CompilerGeneratedAttribute]
private ImageLoader a;
    private ImageLoader b { get; private set; }
    public BitmapLoaderDelegate(ImageLoader imageLoader);
    [CompilerGeneratedAttribute]
private ImageLoader get_b();
    [CompilerGeneratedAttribute]
private void set_b(ImageLoader value);
    public virtual void Canceled(IImageLoaderContext context, string reason);
    public virtual void Completed(IImageLoaderContext context, Byte[] resultData);
    public virtual void Failed(IImageLoaderContext context, Exception error);
    public virtual void Initializing(IImageLoaderContext context);
    private void ResetImageView(IImageLoaderContext a, bool b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Intersoft.Crosslight.Android.BitmapUtility : object {
    public static Bitmap GetBitmapFromResourceString(Context context, string resourceString, string folderName);
    public static Bitmap LoadAndResizeBitmap(string imageName, Context context, int width, int height);
    public static Bitmap LoadAndResizeBitmap(Byte[] byteArray, int width, int height);
    public static Bitmap LoadBitmap(Byte[] imageByte);
    public static Bitmap LoadBitmap(string url);
    public static Bitmap LoadBitmap(string url, int reqWidth, int reqHeight);
    private static int CalculateInSampleSize(Options a, int b, int c);
    internal static Bitmap CreateBlurredImage(Bitmap a, Context b, int c);
    internal static Bitmap CreateTransparentBitmap(int a, int b, Color c);
    private static Bitmap DecodeSampledBitmap(object a, int b, int c, Resources d);
    private static Bitmap DecodeSampledBitmapFromByteArray(Byte[] a, int b, int c);
    private static Bitmap DecodeSampledBitmapFromResId(int a, Resources b, int c, int d);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.ButtonBindingAdapter : ControlBindingAdapterBase`1<Button> {
    internal virtual BindingAdapterContext ResolveContext();
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.CheckBoxBindingAdapter : CheckBoxBindingAdapter`1<CheckBox> {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Intersoft.Crosslight.Android.CheckBoxBindingAdapter`1 : ControlBindingAdapterBase`1<T> {
    internal virtual BindingAdapterContext ResolveContext();
}
public enum Intersoft.Crosslight.Android.ChoiceInputMode : Enum {
    public int value__;
    public static ChoiceInputMode Single;
    public static ChoiceInputMode Multiple;
    public static ChoiceInputMode None;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.CircularViewSliderAdapter : PagerAdapter {
    [CompilerGeneratedAttribute]
private PagerAdapter a;
    private PagerAdapter b { get; private set; }
    public int Count { get; }
    public int RealCount { get; }
    public CircularViewSliderAdapter(ViewSliderAdapter adapter);
    [CompilerGeneratedAttribute]
private PagerAdapter get_b();
    [CompilerGeneratedAttribute]
private void set_b(PagerAdapter value);
    public virtual int get_Count();
    public int get_RealCount();
    public virtual Object InstantiateItem(ViewGroup container, int position);
    public virtual void DestroyItem(ViewGroup container, int position, Object object);
    public virtual void FinishUpdate(View container);
    public virtual bool IsViewFromObject(View view, Object object);
    public virtual void RestoreState(IParcelable state, ClassLoader loader);
    public virtual IParcelable SaveState();
    public virtual void StartUpdate(ViewGroup container);
    public virtual ICharSequence GetPageTitleFormatted(int position);
    public virtual float GetPageWidth(int position);
    public virtual void SetPrimaryItem(ViewGroup container, int position, Object object);
    public virtual void UnregisterDataSetObserver(DataSetObserver observer);
    public virtual void RegisterDataSetObserver(DataSetObserver observer);
    public virtual void NotifyDataSetChanged();
    public virtual int GetItemPosition(Object object);
    private int GetVirtualPosition(int a);
}
public static class Intersoft.Crosslight.Android.ColorUtility : object {
    [NullableContextAttribute("1")]
public static Color ParseColor(string colorString);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Intersoft.Crosslight.Android.CompoundControl : FrameLayout {
    private LayoutInflater a;
    [CompilerGeneratedAttribute]
private bool b;
    protected bool IsViewCreated { get; private set; }
    protected LayoutInflater LayoutInflater { get; }
    protected Int32[] AttributesResource { get; }
    protected int StyleResource { get; }
    public CompoundControl(Context context);
    public CompoundControl(Context context, IAttributeSet attrs);
    public CompoundControl(Context context, IAttributeSet attrs, int defStyle);
    protected CompoundControl(IntPtr javaReference, JniHandleOwnership transfer);
    [CompilerGeneratedAttribute]
protected bool get_IsViewCreated();
    [CompilerGeneratedAttribute]
private void set_IsViewCreated(bool value);
    protected LayoutInflater get_LayoutInflater();
    protected virtual Int32[] get_AttributesResource();
    protected virtual int get_StyleResource();
    protected virtual void ApplyAttributes(IAttributeSet attrs, int defStyle);
    protected virtual void ApplyAttribute(TypedArray attrsInfo, int attrId);
    protected virtual void InitializeView();
    protected virtual void OnViewCreated();
    protected virtual void OnSizeChanged(int w, int h, int oldw, int oldh);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[BroadcastReceiverAttribute]
public class Intersoft.Crosslight.Android.ConnectivityBroadcastReceiver : BroadcastReceiver {
    [CompilerGeneratedAttribute]
private ReachabilityChangesDelegate a;
    [CompilerGeneratedAttribute]
public void add_Received(ReachabilityChangesDelegate value);
    [CompilerGeneratedAttribute]
public void remove_Received(ReachabilityChangesDelegate value);
    public virtual void OnReceive(Context context, Intent intent);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Intersoft.Crosslight.Android.Constants : object {
    internal static string CallerFlag;
    internal static int CameraIntentRequestCode;
    internal static string ClearNavigationStackFlag;
    internal static string ClearTopFlag;
    internal static int CropIntentRequestCode;
    internal static int DetailFrameLayout;
    internal static string DoNotAddToNavigationStackFlag;
    internal static int DrawerActivityMainContainer;
    internal static int FragmentActivityContainer;
    internal static string FragmentNavigationFlag;
    internal static string IsModalInitiatorFlag;
    internal static string IsModalNavigationFlag;
    internal static string IsRootFlag;
    internal static string MasterDetailNavigationFlag;
    internal static string MasterDetailNavigationFlagV7;
    internal static string DrawerNavigationFLag;
    internal static string SharedElementsFlag;
    internal static string ItemPositionFlag;
    internal static string FragmentType;
    internal static int MasterFrameLayout;
    internal static int MediaPickerIntentRequestCode;
    internal static string ModalInstancesFlag;
    internal static string ModalInstanceIdentifiersFlag;
    internal static string NewTaskFlag;
    internal static string NotificationContentIntent;
    internal static string NotificationIdentifier;
    internal static string NotificationLargeIcon;
    internal static string NotificationMessage;
    internal static string NotificationRepeatInterval;
    internal static string NotificationScheduledDate;
    internal static string NotificationSmallIcon;
    internal static string NotificationSound;
    internal static string NotificationTitle;
    internal static string NotificationUserInfo;
    internal static string NotificationRequestCode;
    internal static string RequestCode;
    internal static string IsCancelled;
    internal static string SelfNavigationFlag;
    internal static string SingleTopFlag;
    public static int a;
    internal static int EmailIntentRequestCode;
    internal static int ContactPickerRequestCode;
    internal static int ModalInputAction;
    internal static int DialogInputAction;
    internal static string IsDialogNavigationFlag;
    internal static string LeftDrawerNavigation;
    internal static string RightDrawerNavigation;
    internal static string IsSearchResultFragment;
    internal static string SearchQuery;
    private static Constants();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Intersoft.Crosslight.Android.ContactUtility : object {
    internal static bool SaveContact(Contact a, ContentResolver b);
    internal static bool SaveNewContact(Contact a, ContentResolver b);
    internal static bool DeleteContact(Contact a, ContentResolver b);
    [IteratorStateMachineAttribute("Intersoft.Crosslight.Android.ContactUtility/a")]
internal static IEnumerable`1<Contact> GetContacts(ContentResolver a, Resources b);
    internal static Contact GetContacts(ContentResolver a, Resources b, string c);
    [IteratorStateMachineAttribute("Intersoft.Crosslight.Android.ContactUtility/b")]
private static IEnumerable`1<Contact> GetContacts(ICursor a, ContentResolver b, Resources c, int d);
    [IteratorStateMachineAttribute("Intersoft.Crosslight.Android.ContactUtility/c")]
private static IEnumerable`1<Contact> GetContacts(ContentResolver a, Resources b, String[] c);
    private static void FillContactWithRow(Resources a, Contact b, ICursor c);
    private static Note GetNote(ICursor a, Resources b);
    private static Relationship GetRelationship(ICursor a, Resources b);
    private static InstantMessagingAccount GetIMAccount(ICursor a, Resources b);
    private static Address GetAddress(ICursor a, Resources b);
    private static Phone GetPhone(ICursor a, Resources b);
    private static Email GetEmail(ICursor a, Resources b);
    private static Organization GetOrganization(ICursor a, Resources b);
    private static Website GetWebsite(ICursor a, Resources b);
}
[AttributeUsageAttribute("384")]
public class Intersoft.Crosslight.Android.ContainerAppearanceAttribute : AppearanceAttribute {
}
[AttributeUsageAttribute("384")]
public class Intersoft.Crosslight.Android.ContentAppearanceAttribute : AppearanceAttribute {
}
public enum Intersoft.Crosslight.Android.ContentPresentationStyle : Enum {
    public int value__;
    public static ContentPresentationStyle FormSheet;
    public static ContentPresentationStyle FullScreen;
    public static ContentPresentationStyle Edge;
}
[ExtensionAttribute]
public static class Intersoft.Crosslight.Android.ContextExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static int GetDrawableIdentifier(Context context, string imageFileName);
}
public class Intersoft.Crosslight.Android.ContextualActionBarSettings : object {
    [CompilerGeneratedAttribute]
private int a;
    [CompilerGeneratedAttribute]
private int b;
    [CompilerGeneratedAttribute]
private int c;
    [CompilerGeneratedAttribute]
private int d;
    public int ActionBarLayoutId { get; public set; }
    public int MenuCheckAllId { get; public set; }
    public int MenuMoreId { get; public set; }
    public int PopupMenuLayoutId { get; public set; }
    [CompilerGeneratedAttribute]
public int get_ActionBarLayoutId();
    [CompilerGeneratedAttribute]
public void set_ActionBarLayoutId(int value);
    [CompilerGeneratedAttribute]
public int get_MenuCheckAllId();
    [CompilerGeneratedAttribute]
public void set_MenuCheckAllId(int value);
    [CompilerGeneratedAttribute]
public int get_MenuMoreId();
    [CompilerGeneratedAttribute]
public void set_MenuMoreId(int value);
    [CompilerGeneratedAttribute]
public int get_PopupMenuLayoutId();
    [CompilerGeneratedAttribute]
public void set_PopupMenuLayoutId(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Intersoft.Crosslight.Android.ContextWrapperExtensions : object {
    [ExtensionAttribute]
public static void StartLocationService(ContextWrapper context);
    [ExtensionAttribute]
public static void StopLocationService(ContextWrapper context);
    private static Intent GetLocationServiceIntent(ContextWrapper a);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Intersoft.Crosslight.Android.ControlBindingAdapterBase`1 : BindingAdapterBase`1<T> {
    private Dictionary`2<int, List`1<BindingContext>> a;
    [CompilerGeneratedAttribute]
private bool b;
    [CompilerGeneratedAttribute]
private BindingAdapterContext c;
    internal bool HasInitializer { get; internal set; }
    internal BindingAdapterContext Context { get; internal set; }
    private Dictionary`2<int, List`1<BindingContext>> d { get; }
    [CompilerGeneratedAttribute]
internal bool get_HasInitializer();
    [CompilerGeneratedAttribute]
internal void set_HasInitializer(bool value);
    [CompilerGeneratedAttribute]
internal BindingAdapterContext get_Context();
    [CompilerGeneratedAttribute]
internal void set_Context(BindingAdapterContext value);
    private Dictionary`2<int, List`1<BindingContext>> get_d();
    internal virtual BindingAdapterContext ResolveContext();
    protected virtual void Initialize(T obj);
    public virtual void Attach(T obj, BindingContext context);
    public virtual object GetValue(T obj, BindableProperty property);
    public virtual void SetValue(T obj, BindableProperty property, object value);
    public virtual void Detach(T obj, BindingContext context);
    protected virtual void Uninitialize(T obj);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private void <>n__0(T a, BindableProperty b, object c);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Controls.BulletPageIndicator : View {
    private static int a;
    private static int b;
    private float c;
    private Paint d;
    private Paint e;
    private Paint f;
    private ViewPager g;
    private IOnPageChangeListener h;
    private int i;
    private int j;
    private int k;
    private int l;
    private int m;
    private int n;
    private bool o;
    private bool p;
    private static int q;
    private int r;
    private float s;
    private int t;
    private bool u;
    public BulletPageIndicator(Context context);
    public BulletPageIndicator(Context context, IAttributeSet attrs);
    public BulletPageIndicator(Context context, IAttributeSet attrs, int defStyle);
    protected BulletPageIndicator(IntPtr javaReference, JniHandleOwnership transfer);
    protected virtual void Dispose(bool disposing);
    public void SetCentered(bool centered);
    public bool IsCentered();
    public void SetPageColor(Color pageColor);
    public int GetPageColor();
    public void SetFillColor(Color fillColor);
    public int GetFillColor();
    public void SetOrientation(int orientation);
    public int GetOrientation();
    public void SetStrokeColor(Color strokeColor);
    public int GetStrokeColor();
    public void SetStrokeWidth(float strokeWidth);
    public float GetStrokeWidth();
    public void SetRadius(float radius);
    public float GetRadius();
    public void SetSnap(bool snap);
    public bool IsSnap();
    protected virtual void OnDraw(Canvas canvas);
    public virtual bool OnTouchEvent(MotionEvent ev);
    public sealed virtual void SetViewPager(ViewPager view);
    private void mViewPager_PageSelected(object a, PageSelectedEventArgs b);
    private void mViewPager_PageScrolled(object a, PageScrolledEventArgs b);
    private void mViewPager_PageScrollStateChanged(object a, PageScrollStateChangedEventArgs b);
    private void UpdatePageSize();
    public sealed virtual void SetViewPager(ViewPager view, int initialPosition);
    public sealed virtual void SetCurrentItem(int item);
    public sealed virtual void NotifyDataSetChanged();
    public sealed virtual void OnPageScrollStateChanged(int state);
    public sealed virtual void OnPageScrolled(int position, float positionOffset, int positionOffsetPixels);
    public sealed virtual void OnPageSelected(int position);
    public sealed virtual void SetOnPageChangeListener(IOnPageChangeListener listener);
    protected virtual void OnMeasure(int widthMeasureSpec, int heightMeasureSpec);
    private int MeasureLong(int a);
    private int MeasureShort(int a);
    protected virtual void OnRestoreInstanceState(IParcelable state);
    protected virtual IParcelable OnSaveInstanceState();
    private int GetItemsCount();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.Controls.ControlContext : object {
    internal static string ParcelableObject;
    private Dictionary`2<Property, object> a;
    [CompilerGeneratedAttribute]
private IView b;
    [CompilerGeneratedAttribute]
private bool c;
    private Dictionary`2<Property, object> d;
    internal Dictionary`2<Property, object> CurrentValues { get; internal set; }
    internal IView IView { get; internal set; }
    internal bool IsInitializing { get; internal set; }
    internal Dictionary`2<Property, object> OriginalValues { get; }
    internal ControlContext(IView a);
    internal Dictionary`2<Property, object> get_CurrentValues();
    internal void set_CurrentValues(Dictionary`2<Property, object> value);
    [CompilerGeneratedAttribute]
internal IView get_IView();
    [CompilerGeneratedAttribute]
internal void set_IView(IView value);
    [CompilerGeneratedAttribute]
internal bool get_IsInitializing();
    [CompilerGeneratedAttribute]
internal void set_IsInitializing(bool value);
    internal Dictionary`2<Property, object> get_OriginalValues();
    internal Bundle CreateBundle(IParcelable a);
    internal virtual void DisposePropertyBag();
    internal Int32[] FinalizeState(Int32[] a, List`1<Property> b);
    internal void GetParcelable(Bundle a);
    internal List`1<Property> GetStateProperties();
    internal object GetValue(Property a);
    internal void Initialize(Context a, IAttributeSet b, Int32[] c, int d, int e);
    internal bool IsPropertyChanged(Property a, object b);
    internal void SetValue(Property a, object b, bool c);
    internal void UpdateBinding(Property a);
    internal virtual void SetValueFromPropertyBinding(Property a, object b);
    internal void UpdateSource(BindableProperty a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Controls.FrameLayoutBase : FrameLayout {
    [CompilerGeneratedAttribute]
private ViewGroupContext a;
    [CompilerGeneratedAttribute]
private int b;
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler c;
    internal ViewGroupContext ControlContext { get; internal set; }
    public int LayoutId { get; public set; }
    public FrameLayoutBase(Context context);
    public FrameLayoutBase(IntPtr javaReference, JniHandleOwnership transfer);
    public FrameLayoutBase(Context context, IAttributeSet attrs);
    public FrameLayoutBase(Context context, IAttributeSet attrs, int defStyleAttr);
    public FrameLayoutBase(Context context, IAttributeSet attrs, Int32[] attributes, int defStyleAttr, int defStyleRef);
    [CompilerGeneratedAttribute]
internal ViewGroupContext get_ControlContext();
    [CompilerGeneratedAttribute]
internal void set_ControlContext(ViewGroupContext value);
    [CompilerGeneratedAttribute]
public virtual int get_LayoutId();
    [CompilerGeneratedAttribute]
public virtual void set_LayoutId(int value);
    protected virtual void Dispose(bool disposing);
    private void Initialize(Context a, IAttributeSet b, Int32[] c, int d, int e);
    protected virtual void Initialize();
    protected virtual void OnPropertyChanged(Property property, object oldValue, object newValue);
    private void OnPropertyChanged(PropertyChangedEventArgs a);
    protected virtual Int32[] OnCreateDrawableState(int extraSpace);
    protected virtual IParcelable OnSaveInstanceState();
    protected virtual void OnRestoreInstanceState(IParcelable state);
    protected virtual void OnViewCreated();
    protected virtual void OnViewInitializing();
    public sealed virtual object GetValue(Property property);
    private sealed virtual override void Intersoft.Crosslight.Android.Controls.IView.MergeDrawableStates(Int32[] a, Int32[] b);
    private sealed virtual override void Intersoft.Crosslight.Android.Controls.IView.OnPropertyChanged(Property a, object b, object c);
    public virtual void OnPropertyChanged(string propertyName);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    public sealed virtual void SetValue(Property property, object value);
}
public class Intersoft.Crosslight.Android.Controls.GenericParcelableCreator`1 : Object {
    [NullableAttribute("1")]
private Func`2<Parcel, T> a;
    [NullableContextAttribute("1")]
public GenericParcelableCreator`1(Func`2<Parcel, T> createFromParcelFunc);
    [NullableContextAttribute("1")]
public sealed virtual Object CreateFromParcel(Parcel source);
    [NullableContextAttribute("1")]
public sealed virtual Object[] NewArray(int size);
}
public interface Intersoft.Crosslight.Android.Controls.IPageIndicator {
    public abstract virtual void NotifyDataSetChanged();
    public abstract virtual void SetCurrentItem(int position);
    [NullableContextAttribute("1")]
public abstract virtual void SetOnPageChangeListener(IOnPageChangeListener listener);
    [NullableContextAttribute("1")]
public abstract virtual void SetViewPager(ViewPager viewPager);
    [NullableContextAttribute("1")]
public abstract virtual void SetViewPager(ViewPager viewPager, int initialPosition);
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.Controls.IView {
    public abstract virtual void MergeDrawableStates(Int32[] baseStates, Int32[] additionalStates);
    public abstract virtual void OnPropertyChanged(Property property, object oldValue, object newValue);
    public abstract virtual void OnPropertyChanged(string propertyName);
    public abstract virtual object GetValue(Property property);
    public abstract virtual void SetValue(Property property, object value);
}
public interface Intersoft.Crosslight.Android.Controls.IViewGroup {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Intersoft.Crosslight.Android.Controls.LinearLayoutBase : LinearLayout {
    [CompilerGeneratedAttribute]
private ViewGroupContext a;
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler b;
    public int LayoutId { get; public set; }
    internal ViewGroupContext ControlContext { get; internal set; }
    protected LinearLayoutBase(IntPtr javaReference, JniHandleOwnership transfer);
    public LinearLayoutBase(Context context);
    public LinearLayoutBase(Context context, IAttributeSet attrs);
    public LinearLayoutBase(Context context, IAttributeSet attrs, Int32[] attributes, int defStyleAttr, int defStyleRef);
    public abstract virtual int get_LayoutId();
    public abstract virtual void set_LayoutId(int value);
    [CompilerGeneratedAttribute]
internal ViewGroupContext get_ControlContext();
    [CompilerGeneratedAttribute]
internal void set_ControlContext(ViewGroupContext value);
    private void Initialize(Context a, IAttributeSet b, Int32[] c, int d, int e);
    protected virtual void Initialize();
    protected void ApplyPropertyBinding();
    protected virtual void Dispose(bool disposing);
    protected virtual Int32[] OnCreateDrawableState(int extraSpace);
    protected virtual IParcelable OnSaveInstanceState();
    protected virtual void OnRestoreInstanceState(IParcelable state);
    protected virtual void OnViewCreated();
    protected virtual void OnViewInitializing();
    private sealed virtual override void Intersoft.Crosslight.Android.Controls.IView.MergeDrawableStates(Int32[] a, Int32[] b);
    private sealed virtual override void Intersoft.Crosslight.Android.Controls.IView.OnPropertyChanged(Property a, object b, object c);
    protected virtual void OnPropertyChanged(Property property, object oldValue, object newValue);
    public sealed virtual object GetValue(Property property);
    public sealed virtual void SetValue(Property property, object value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    public virtual void OnPropertyChanged(string propertyName);
    private void OnPropertyChanged(PropertyChangedEventArgs a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Controls.ListView : ListView {
    public static Property GroupItemLayoutIdProperty;
    public static Property InteractionModeProperty;
    public static Property ItemLayoutIdProperty;
    public static Property FastScrollLettersProperty;
    public static Property AnimateOnNewsItemsProperty;
    public static Property ImageSettingsProperty;
    public static Property CellTemplateSelectorProperty;
    [CompilerGeneratedAttribute]
private ControlContext a;
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler b;
    internal ControlContext ControlContext { get; internal set; }
    public ViewTemplateSelector CellTemplateSelector { get; public set; }
    public ImageSettings ImageSettings { get; public set; }
    public int FastScrollLetters { get; public set; }
    public bool AnimateOnNewItems { get; public set; }
    public int GroupItemLayoutId { get; public set; }
    public ListViewInteraction InteractionMode { get; public set; }
    public int ItemLayoutId { get; public set; }
    public ListView(Context context);
    public ListView(Context context, IAttributeSet attrs);
    protected ListView(IntPtr javaReference, JniHandleOwnership transfer);
    public ListView(Context context, IAttributeSet attrs, int defStyle);
    private static ListView();
    [CompilerGeneratedAttribute]
internal ControlContext get_ControlContext();
    [CompilerGeneratedAttribute]
internal void set_ControlContext(ControlContext value);
    public ViewTemplateSelector get_CellTemplateSelector();
    public void set_CellTemplateSelector(ViewTemplateSelector value);
    public ImageSettings get_ImageSettings();
    public void set_ImageSettings(ImageSettings value);
    public int get_FastScrollLetters();
    public void set_FastScrollLetters(int value);
    public bool get_AnimateOnNewItems();
    public void set_AnimateOnNewItems(bool value);
    public int get_GroupItemLayoutId();
    public void set_GroupItemLayoutId(int value);
    public ListViewInteraction get_InteractionMode();
    public void set_InteractionMode(ListViewInteraction value);
    public int get_ItemLayoutId();
    public void set_ItemLayoutId(int value);
    protected virtual void Dispose(bool disposing);
    public void Initialize(Context context, IAttributeSet attrs);
    protected virtual void OnPropertyChanged(Property property, object oldValue, object newValue);
    private void OnPropertyChanged(PropertyChangedEventArgs a);
    protected virtual void OnViewCreated();
    protected virtual void OnViewInitializing();
    public sealed virtual object GetValue(Property property);
    private sealed virtual override void Intersoft.Crosslight.Android.Controls.IView.MergeDrawableStates(Int32[] a, Int32[] b);
    private sealed virtual override void Intersoft.Crosslight.Android.Controls.IView.OnPropertyChanged(Property a, object b, object c);
    public virtual void OnPropertyChanged(string propertyName);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    public sealed virtual void SetValue(Property property, object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Controls.Metadata : object {
    private Dictionary`2<string, TemplateBinding> a;
    private Dictionary`2<string, Property> b;
    private Dictionary`2<Property, TemplateBinding> c;
    [CompilerGeneratedAttribute]
private bool d;
    public Dictionary`2<string, TemplateBinding> ElementPropertyBindingDictionary { get; }
    public bool IsInitialized { get; public set; }
    public Dictionary`2<string, Property> Properties { get; }
    public Dictionary`2<Property, TemplateBinding> SourcePropertyBindingDictionary { get; }
    public Dictionary`2<string, TemplateBinding> get_ElementPropertyBindingDictionary();
    [CompilerGeneratedAttribute]
public bool get_IsInitialized();
    [CompilerGeneratedAttribute]
public void set_IsInitialized(bool value);
    public Dictionary`2<string, Property> get_Properties();
    public Dictionary`2<Property, TemplateBinding> get_SourcePropertyBindingDictionary();
    public void Initialize(Type type);
    public static Property Register(Property property);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Controls.MetadataStore : object {
    private static MetadataStore a;
    private Dictionary`2<Type, Metadata> b;
    public static MetadataStore Instance { get; }
    public Dictionary`2<Type, Metadata> TypeMap { get; }
    public static MetadataStore get_Instance();
    public Dictionary`2<Type, Metadata> get_TypeMap();
    public static Metadata GetMetadata(Type type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Controls.ParcelableObject : Object {
    [CompilerGeneratedAttribute]
private int a;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> b;
    private static GenericParcelableCreator`1<ParcelableObject> c;
    public int ID { get; public set; }
    public Dictionary`2<string, object> Values { get; public set; }
    public ParcelableObject(Parcel parcel);
    private static ParcelableObject();
    [CompilerGeneratedAttribute]
public int get_ID();
    [CompilerGeneratedAttribute]
public void set_ID(int value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(Dictionary`2<string, object> value);
    public sealed virtual int DescribeContents();
    public sealed virtual void WriteToParcel(Parcel dest, ParcelableWriteFlags flags);
    public static GenericParcelableCreator`1<ParcelableObject> GetCreator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Controls.Property : object {
    [CompilerGeneratedAttribute]
private BindableProperty a;
    [CompilerGeneratedAttribute]
private Type b;
    [CompilerGeneratedAttribute]
private object c;
    [CompilerGeneratedAttribute]
private bool d;
    [CompilerGeneratedAttribute]
private string e;
    [CompilerGeneratedAttribute]
private PropertyTypes f;
    [CompilerGeneratedAttribute]
private int g;
    [CompilerGeneratedAttribute]
private Int32[] h;
    [CompilerGeneratedAttribute]
private Type i;
    public BindableProperty BindableProperty { get; private set; }
    public Type DataType { get; private set; }
    public object DefaultValue { get; private set; }
    public bool IsStateProperty { get; private set; }
    public string Name { get; private set; }
    public PropertyTypes PropertyType { get; private set; }
    public int Reference { get; private set; }
    public Int32[] StateProperty { get; public set; }
    public Type Type { get; private set; }
    public Property(Type type, string name, Type dataType, PropertyTypes propertyType);
    public Property(Type type, string name, Type dataType, PropertyTypes propertyType, BindableProperty bindableProperty);
    public Property(Type type, string name, Type dataType, object defaultValue, int reference, PropertyTypes propertyType, bool isStateProperty, Int32[] stateProperty);
    public Property(Type type, string name, Type dataType, object defaultValue, int reference, PropertyTypes propertyType, BindableProperty bindableProperty, bool isStateProperty, Int32[] stateProperty);
    [CompilerGeneratedAttribute]
public BindableProperty get_BindableProperty();
    [CompilerGeneratedAttribute]
private void set_BindableProperty(BindableProperty value);
    [CompilerGeneratedAttribute]
public Type get_DataType();
    [CompilerGeneratedAttribute]
private void set_DataType(Type value);
    [CompilerGeneratedAttribute]
public object get_DefaultValue();
    [CompilerGeneratedAttribute]
private void set_DefaultValue(object value);
    [CompilerGeneratedAttribute]
public bool get_IsStateProperty();
    [CompilerGeneratedAttribute]
private void set_IsStateProperty(bool value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public PropertyTypes get_PropertyType();
    [CompilerGeneratedAttribute]
private void set_PropertyType(PropertyTypes value);
    [CompilerGeneratedAttribute]
public int get_Reference();
    [CompilerGeneratedAttribute]
private void set_Reference(int value);
    [CompilerGeneratedAttribute]
public Int32[] get_StateProperty();
    [CompilerGeneratedAttribute]
public void set_StateProperty(Int32[] value);
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(Type value);
}
public enum Intersoft.Crosslight.Android.Controls.PropertyTypes : Enum {
    public int value__;
    public static PropertyTypes Reference;
    public static PropertyTypes String;
    public static PropertyTypes Color;
    public static PropertyTypes Dimension;
    public static PropertyTypes Boolean;
    public static PropertyTypes Integer;
    public static PropertyTypes Float;
    public static PropertyTypes Fraction;
    public static PropertyTypes Enum;
    public static PropertyTypes Flag;
    public static PropertyTypes BindableProperty;
    public static PropertyTypes ComplexObject;
    public static PropertyTypes Enumerable;
    public static PropertyTypes Decimal;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Controls.StripPageIndicator : View {
    private static int a;
    private static int b;
    private Paint c;
    private bool d;
    private int e;
    private int f;
    private int g;
    private ViewPager h;
    private IOnPageChangeListener i;
    private int j;
    private int k;
    private float l;
    private int m;
    private float n;
    private int o;
    private bool p;
    [CompilerGeneratedAttribute]
private Runnable q;
    private Runnable r { get; private set; }
    public StripPageIndicator(Context context);
    public StripPageIndicator(Context context, IAttributeSet attrs);
    public StripPageIndicator(Context context, IAttributeSet attrs, int defStyle);
    protected StripPageIndicator(IntPtr javaReference, JniHandleOwnership transfer);
    private static StripPageIndicator();
    [CompilerGeneratedAttribute]
private Runnable get_r();
    [CompilerGeneratedAttribute]
private void set_r(Runnable value);
    protected virtual void Dispose(bool disposing);
    public bool GetFades();
    public void SetFades(bool fades);
    public int GetFadeDelay();
    public void SetFadeDelay(int fadeDelay);
    public int GetFadeLength();
    public void SetFadeLength(int fadeLength);
    public int GetSelectedColor();
    public void SetSelectedColor(Color selectedColor);
    protected virtual void OnDraw(Canvas canvas);
    public virtual bool OnTouchEvent(MotionEvent ev);
    public sealed virtual void SetViewPager(ViewPager viewPager);
    private void mViewPager_PageSelected(object a, PageSelectedEventArgs b);
    private void mViewPager_PageScrolled(object a, PageScrolledEventArgs b);
    private void mViewPager_PageScrollStateChanged(object a, PageScrollStateChangedEventArgs b);
    private int GetItemsCount();
    public sealed virtual void SetViewPager(ViewPager view, int initialPosition);
    public sealed virtual void SetCurrentItem(int item);
    public sealed virtual void NotifyDataSetChanged();
    public sealed virtual void OnPageScrollStateChanged(int state);
    public sealed virtual void OnPageScrolled(int position, float positionOffset, int positionOffsetPixels);
    public sealed virtual void OnPageSelected(int position);
    public sealed virtual void SetOnPageChangeListener(IOnPageChangeListener listener);
    protected virtual void OnRestoreInstanceState(IParcelable state);
    protected virtual IParcelable OnSaveInstanceState();
    [CompilerGeneratedAttribute]
private void <.ctor>b__22_0();
    [CompilerGeneratedAttribute]
private void <SetViewPager>b__35_0();
}
public enum Intersoft.Crosslight.Android.Controls.StrokeCap : Enum {
    public int value__;
    public static StrokeCap Butt;
    public static StrokeCap Round;
    public static StrokeCap Square;
}
public enum Intersoft.Crosslight.Android.Controls.StrokeJoin : Enum {
    public int value__;
    public static StrokeJoin Bevel;
    public static StrokeJoin Miter;
    public static StrokeJoin Round;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Controls.TabPageIndicator : HorizontalScrollView {
    [CompilerGeneratedAttribute]
private LayoutInflater a;
    [CompilerGeneratedAttribute]
private int b;
    [CompilerGeneratedAttribute]
private IOnPageChangeListener c;
    [CompilerGeneratedAttribute]
private int d;
    [CompilerGeneratedAttribute]
private LinearLayout e;
    [CompilerGeneratedAttribute]
private ViewPager f;
    [CompilerGeneratedAttribute]
private int g;
    private LayoutInflater h { get; private set; }
    public int MaxTabWidth { get; public set; }
    private IOnPageChangeListener i { get; private set; }
    private int j { get; private set; }
    private LinearLayout k { get; private set; }
    private ViewPager l { get; private set; }
    internal int ViewPagerIndicatorTabId { get; internal set; }
    public TabPageIndicator(Context context);
    public TabPageIndicator(Context context, IAttributeSet attrs);
    [CompilerGeneratedAttribute]
private LayoutInflater get_h();
    [CompilerGeneratedAttribute]
private void set_h(LayoutInflater value);
    [CompilerGeneratedAttribute]
public int get_MaxTabWidth();
    [CompilerGeneratedAttribute]
public void set_MaxTabWidth(int value);
    [CompilerGeneratedAttribute]
private IOnPageChangeListener get_i();
    [CompilerGeneratedAttribute]
private void set_i(IOnPageChangeListener value);
    [CompilerGeneratedAttribute]
private int get_j();
    [CompilerGeneratedAttribute]
private void set_j(int value);
    [CompilerGeneratedAttribute]
private LinearLayout get_k();
    [CompilerGeneratedAttribute]
private void set_k(LinearLayout value);
    [CompilerGeneratedAttribute]
private ViewPager get_l();
    [CompilerGeneratedAttribute]
private void set_l(ViewPager value);
    [CompilerGeneratedAttribute]
internal virtual int get_ViewPagerIndicatorTabId();
    [CompilerGeneratedAttribute]
internal virtual void set_ViewPagerIndicatorTabId(int value);
    private void AddTab(NavigationItem a, int b);
    private void AnimateToTab(int a);
    protected virtual void OnMeasure(int widthMeasureSpec, int heightMeasureSpec);
    public sealed virtual void SetCurrentItem(int position);
    public sealed virtual void OnPageScrollStateChanged(int state);
    public sealed virtual void OnPageScrolled(int position, float positionOffset, int positionOffsetPixels);
    public sealed virtual void OnPageSelected(int position);
    public sealed virtual void SetViewPager(ViewPager viewPager);
    public sealed virtual void NotifyDataSetChanged();
    public sealed virtual void SetViewPager(ViewPager viewPager, int initialPosition);
    public sealed virtual void SetOnPageChangeListener(IOnPageChangeListener listener);
    [CompilerGeneratedAttribute]
private void <AddTab>b__30_0(object a, EventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Controls.TemplateBinding : object {
    [CompilerGeneratedAttribute]
private string a;
    [CompilerGeneratedAttribute]
private Property b;
    [CompilerGeneratedAttribute]
private Property c;
    public string ElementName { get; public set; }
    public Property ElementProperty { get; public set; }
    public Property SourceProperty { get; public set; }
    public TemplateBinding(string elementName, Property elementProperty, Property sourceProperty);
    [CompilerGeneratedAttribute]
public string get_ElementName();
    [CompilerGeneratedAttribute]
public void set_ElementName(string value);
    [CompilerGeneratedAttribute]
public Property get_ElementProperty();
    [CompilerGeneratedAttribute]
public void set_ElementProperty(Property value);
    [CompilerGeneratedAttribute]
public Property get_SourceProperty();
    [CompilerGeneratedAttribute]
public void set_SourceProperty(Property value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("128")]
public class Intersoft.Crosslight.Android.Controls.TemplateBindingAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string a;
    public string BindingPath { get; public set; }
    public TemplateBindingAttribute(string bindingPath);
    [CompilerGeneratedAttribute]
public string get_BindingPath();
    [CompilerGeneratedAttribute]
public void set_BindingPath(string value);
}
[AttributeUsageAttribute("128")]
public class Intersoft.Crosslight.Android.Controls.TemplatedControlAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Intersoft.Crosslight.Android.Controls.ViewBase : View {
    [CompilerGeneratedAttribute]
private ControlContext a;
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler b;
    internal ControlContext ControlContext { get; internal set; }
    protected ViewBase(IntPtr javaReference, JniHandleOwnership transfer);
    public ViewBase(Context context);
    public ViewBase(Context context, IAttributeSet attrs);
    public ViewBase(Context context, IAttributeSet attrs, Int32[] attributes, int defStyleAttr, int defStyleRef);
    [CompilerGeneratedAttribute]
internal ControlContext get_ControlContext();
    [CompilerGeneratedAttribute]
internal void set_ControlContext(ControlContext value);
    private void Initialize(Context a, IAttributeSet b, Int32[] c, int d, int e);
    protected virtual void Initialize();
    public sealed virtual object GetValue(Property property);
    public sealed virtual void SetValue(Property property, object value);
    protected virtual void Dispose(bool disposing);
    protected virtual Int32[] OnCreateDrawableState(int extraSpace);
    protected virtual IParcelable OnSaveInstanceState();
    protected virtual void OnRestoreInstanceState(IParcelable state);
    protected virtual void OnViewCreated();
    protected virtual void OnViewInitializing();
    private sealed virtual override void Intersoft.Crosslight.Android.Controls.IView.MergeDrawableStates(Int32[] a, Int32[] b);
    private sealed virtual override void Intersoft.Crosslight.Android.Controls.IView.OnPropertyChanged(Property a, object b, object c);
    protected virtual void OnPropertyChanged(Property property, object oldValue, object newValue);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    public virtual void OnPropertyChanged(string propertyName);
    private void OnPropertyChanged(PropertyChangedEventArgs a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.Controls.ViewGroupContext : ControlContext {
    private Dictionary`2<string, IView> e;
    internal Dictionary`2<string, IView> Elements { get; }
    internal IViewGroup IViewGroup { get; }
    internal ViewGroupContext(IView a);
    internal Dictionary`2<string, IView> get_Elements();
    internal IViewGroup get_IViewGroup();
    internal void ApplyBinding();
    internal void DisposeElementPropertyChanged();
    internal virtual void DisposePropertyBag();
    internal void OnElementPropertyChanged(object a, PropertyChangedEventArgs b);
    internal virtual void SetValueFromPropertyBinding(Property a, object b);
    internal void SetValueFromPropertyBinding(TemplateBinding a, object b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Intersoft.Crosslight.Android.ConversionUtility : object {
    public static Int32[] ConvertHexStringToInt(string hexString);
    public static Byte[] ConvertToByteArray(File file);
    public static int ConvertToPixels(float dp, DisplayMetrics displayMetrics);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.CustomAlertDialogSettings : AlertDialogSettings {
    [CompilerGeneratedAttribute]
private View i;
    internal View View { get; internal set; }
    [CompilerGeneratedAttribute]
internal View get_View();
    [CompilerGeneratedAttribute]
internal void set_View(View value);
}
public class Intersoft.Crosslight.Android.DatePickerAppearanceAttribute : EditorAppearanceAttribute {
    [NullableAttribute("1")]
public static AppearanceProperty DatePickerModeProperty;
    public DatePickerMode DatePickerMode { get; public set; }
    private static DatePickerAppearanceAttribute();
    public DatePickerMode get_DatePickerMode();
    public void set_DatePickerMode(DatePickerMode value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.DatePickerBindingAdapter : ControlBindingAdapterBase`1<DatePicker> {
    internal virtual BindingAdapterContext ResolveContext();
}
public enum Intersoft.Crosslight.Android.DatePickerMode : Enum {
    public int value__;
    public static DatePickerMode Spinner;
    public static DatePickerMode Calendar;
    public static DatePickerMode SpinnerAndCalendar;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.DateTimePickerAppearanceAttribute : EditorAppearanceAttribute {
    public static AppearanceProperty DatePickerModeProperty;
    public static AppearanceProperty Is24HourViewProperty;
    public DatePickerMode DatePickerMode { get; public set; }
    public bool Is24HourView { get; public set; }
    private static DateTimePickerAppearanceAttribute();
    public DatePickerMode get_DatePickerMode();
    public void set_DatePickerMode(DatePickerMode value);
    public bool get_Is24HourView();
    public void set_Is24HourView(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.DefaultAppInitializer : object {
    private sealed virtual override IApplicationService Intersoft.Crosslight.IApplicationInitializer.GetApplicationService(IApplicationContext a);
    public sealed virtual void InitializeApplication(IApplicationHost appHost);
    public sealed virtual void InitializeComponents(IApplicationHost appHost);
    public sealed virtual void InitializeServices(IApplicationHost appHost);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ActivityAttribute]
public class Intersoft.Crosslight.Android.DialogActivity : FragmentActivity`1<DialogViewModel> {
    private IContentPresenterSettings a;
    [CompilerGeneratedAttribute]
private DialogResult b;
    [CompilerGeneratedAttribute]
private DialogData c;
    [CompilerGeneratedAttribute]
private ViewGroup d;
    [CompilerGeneratedAttribute]
private Button e;
    [CompilerGeneratedAttribute]
private Button f;
    [CompilerGeneratedAttribute]
private Button g;
    internal DialogResult DialogResult { get; internal set; }
    public IContentPresenterSettings Settings { get; private set; }
    private DialogData h { get; private set; }
    public ViewGroup RootLayout { get; public set; }
    public Button PositiveButton { get; private set; }
    public Button NegativeButton { get; private set; }
    public Button NeutralButton { get; private set; }
    protected DialogActivity(int contentLayoutId, int fragmentContainerId);
    protected DialogActivity(IntPtr intPtr, JniHandleOwnership handleOwnership);
    [CompilerGeneratedAttribute]
internal DialogResult get_DialogResult();
    [CompilerGeneratedAttribute]
internal void set_DialogResult(DialogResult value);
    public sealed virtual IContentPresenterSettings get_Settings();
    private void set_Settings(IContentPresenterSettings value);
    [CompilerGeneratedAttribute]
private DialogData get_h();
    [CompilerGeneratedAttribute]
private void set_h(DialogData value);
    [CompilerGeneratedAttribute]
public ViewGroup get_RootLayout();
    [CompilerGeneratedAttribute]
public void set_RootLayout(ViewGroup value);
    [CompilerGeneratedAttribute]
public Button get_PositiveButton();
    [CompilerGeneratedAttribute]
private void set_PositiveButton(Button value);
    [CompilerGeneratedAttribute]
public Button get_NegativeButton();
    [CompilerGeneratedAttribute]
private void set_NegativeButton(Button value);
    [CompilerGeneratedAttribute]
public Button get_NeutralButton();
    [CompilerGeneratedAttribute]
private void set_NeutralButton(Button value);
    protected virtual void InitializeFragment();
    protected virtual void InitializeView();
    public virtual bool OnTouchEvent(MotionEvent e);
    private void RootLayout_Touch(object a, TouchEventArgs b);
    public virtual void OnRestoreCustomNonConfigurationInstance();
    public virtual Object OnRetainCustomNonConfigurationInstance();
    protected virtual ViewState CreateViewState();
    internal void SetButtonTitle(Button a, string b);
    internal void SetButtonIcon(Button a, string b);
    internal void SetButtonBackground(Button a, Color b);
    internal void SetButtonForeground(Button a, Color b);
    private void NegativeButton_Click(object a, EventArgs b);
    private void NeutralButton_Click(object a, EventArgs b);
    private void PositiveButton_Click(object a, EventArgs b);
    private void ActionButton_Click(DialogButton a);
    public virtual void Finish();
    protected virtual void OnViewDisposed();
    private sealed virtual override void Intersoft.Crosslight.Android.IContentPresenter.Dismiss();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.DialogActivityViewState : FragmentActivityViewState {
    [CompilerGeneratedAttribute]
private DialogData a;
    [CompilerGeneratedAttribute]
private DialogResult b;
    public DialogData DialogData { get; internal set; }
    public DialogResult DialogResult { get; internal set; }
    [CompilerGeneratedAttribute]
public DialogData get_DialogData();
    [CompilerGeneratedAttribute]
internal void set_DialogData(DialogData value);
    [CompilerGeneratedAttribute]
public DialogResult get_DialogResult();
    [CompilerGeneratedAttribute]
internal void set_DialogResult(DialogResult value);
}
internal class Intersoft.Crosslight.Android.DialogBuilder : object {
    [NullableContextAttribute("1")]
public sealed virtual Dialog CreateAlertDialog(Context a, AlertDialogSettings b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.DialogBuilderManager : object {
    private static object a;
    private static Type b;
    private static IDialogBuilder c;
    private static DialogBuilderManager();
    [NullableContextAttribute("0")]
internal static void RegisterBuilder();
    internal static IDialogBuilder ResolveBuilder();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.DialogData : object {
    [CompilerGeneratedAttribute]
private IContentPresenter a;
    [CompilerGeneratedAttribute]
private IFragment b;
    [CompilerGeneratedAttribute]
private IViewModel c;
    [CompilerGeneratedAttribute]
private IContentPresenterSettings d;
    [CompilerGeneratedAttribute]
private DialogOptions e;
    [CompilerGeneratedAttribute]
private INavigable f;
    [CompilerGeneratedAttribute]
private NavigationTarget g;
    [CompilerGeneratedAttribute]
private Action`1<DialogResult> h;
    [CompilerGeneratedAttribute]
private bool i;
    public IContentPresenter ContentPresenter { get; public set; }
    public IFragment DialogFragment { get; public set; }
    public IViewModel DialogViewModel { get; public set; }
    public IContentPresenterSettings DialogSettings { get; public set; }
    public DialogOptions DialogOptions { get; public set; }
    public INavigable Sender { get; public set; }
    public NavigationTarget NavigationTarget { get; public set; }
    public Action`1<DialogResult> DismissCallback { get; public set; }
    public bool IsDismissed { get; public set; }
    [CompilerGeneratedAttribute]
public IContentPresenter get_ContentPresenter();
    [CompilerGeneratedAttribute]
public void set_ContentPresenter(IContentPresenter value);
    [CompilerGeneratedAttribute]
public IFragment get_DialogFragment();
    [CompilerGeneratedAttribute]
public void set_DialogFragment(IFragment value);
    [CompilerGeneratedAttribute]
public IViewModel get_DialogViewModel();
    [CompilerGeneratedAttribute]
public void set_DialogViewModel(IViewModel value);
    [CompilerGeneratedAttribute]
public IContentPresenterSettings get_DialogSettings();
    [CompilerGeneratedAttribute]
public void set_DialogSettings(IContentPresenterSettings value);
    [CompilerGeneratedAttribute]
public DialogOptions get_DialogOptions();
    [CompilerGeneratedAttribute]
public void set_DialogOptions(DialogOptions value);
    [CompilerGeneratedAttribute]
public INavigable get_Sender();
    [CompilerGeneratedAttribute]
public void set_Sender(INavigable value);
    [CompilerGeneratedAttribute]
public NavigationTarget get_NavigationTarget();
    [CompilerGeneratedAttribute]
public void set_NavigationTarget(NavigationTarget value);
    [CompilerGeneratedAttribute]
public Action`1<DialogResult> get_DismissCallback();
    [CompilerGeneratedAttribute]
public void set_DismissCallback(Action`1<DialogResult> value);
    [CompilerGeneratedAttribute]
public bool get_IsDismissed();
    [CompilerGeneratedAttribute]
public void set_IsDismissed(bool value);
    public void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Intersoft.Crosslight.Android.DialogFragmentBase : DialogFragment {
    private LayoutInflater b;
    public LayoutInflater LayoutInflater { get; }
    public DialogFragmentBase(IntPtr intPtr, JniHandleOwnership handleOwnership);
    public LayoutInflater get_LayoutInflater();
    public virtual void OnDestroyView();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.DialogPresenter : PresenterBase {
    private Stack`1<DialogData> e;
    [CompilerGeneratedAttribute]
private object b;
    private object a { get; private set; }
    internal Stack`1<DialogData> DialogStack { get; }
    [CompilerGeneratedAttribute]
private object get_a();
    [CompilerGeneratedAttribute]
private void set_a(object value);
    internal Stack`1<DialogData> get_DialogStack();
    public sealed virtual void SetOwner(object owner);
    public sealed virtual void Show(Action`1<DialogResult> callback);
    public sealed virtual void Show(NavigationParameter parameter, DialogOptions dialogOptions, Action`1<DialogResult> callback);
    public sealed virtual void Show(DialogOptions dialogOptions, Action`1<DialogResult> callback);
    public sealed virtual void Show(string targetName, DialogOptions dialogOptions, Action`1<DialogResult> callback);
    public sealed virtual void Show(NavigationTarget target, DialogOptions dialogOptions, Action`1<DialogResult> callback);
    public void Show(Context context, NavigationTarget target, DialogOptions dialogOptions, Action`1<DialogResult> callback);
    public sealed virtual void Dismiss();
    internal DialogData GetCurrentDialogData();
    private void CleanDialogStack();
    private sealed virtual override void Intersoft.Crosslight.IPresenter.Show(string a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.DialogPresenterSettings : OverlayPresenterSettings {
    [CompilerGeneratedAttribute]
private DialogOptions a;
    [CompilerGeneratedAttribute]
private int b;
    [CompilerGeneratedAttribute]
private int c;
    [CompilerGeneratedAttribute]
private int d;
    [CompilerGeneratedAttribute]
private int e;
    [CompilerGeneratedAttribute]
private Color f;
    [CompilerGeneratedAttribute]
private Typeface g;
    [CompilerGeneratedAttribute]
private TypefaceStyle h;
    [CompilerGeneratedAttribute]
private Typeface i;
    [CompilerGeneratedAttribute]
private TypefaceStyle j;
    [CompilerGeneratedAttribute]
private Typeface k;
    [CompilerGeneratedAttribute]
private TypefaceStyle l;
    [CompilerGeneratedAttribute]
private Typeface m;
    [CompilerGeneratedAttribute]
private TypefaceStyle n;
    [CompilerGeneratedAttribute]
private Color o;
    public DialogOptions DialogOptions { get; public set; }
    public int ContentContainerId { get; public set; }
    public int NegativeButtonId { get; public set; }
    public int NeutralButtonId { get; public set; }
    public int PositiveButtonId { get; public set; }
    public Color TitleColor { get; public set; }
    public Typeface TitleTypeface { get; public set; }
    public TypefaceStyle TitleTypefaceStyle { get; public set; }
    public Typeface NegativeButtonTypeface { get; public set; }
    public TypefaceStyle NegativeButtonTypefaceStyle { get; public set; }
    public Typeface NeutralButtonTypeface { get; public set; }
    public TypefaceStyle NeutralButtonTypefaceStyle { get; public set; }
    public Typeface PositiveButtonTypeface { get; public set; }
    public TypefaceStyle PositiveButtonTypefaceStyle { get; public set; }
    public Color SeparatorColor { get; public set; }
    [CompilerGeneratedAttribute]
public DialogOptions get_DialogOptions();
    [CompilerGeneratedAttribute]
public void set_DialogOptions(DialogOptions value);
    [CompilerGeneratedAttribute]
public int get_ContentContainerId();
    [CompilerGeneratedAttribute]
public void set_ContentContainerId(int value);
    [CompilerGeneratedAttribute]
public int get_NegativeButtonId();
    [CompilerGeneratedAttribute]
public void set_NegativeButtonId(int value);
    [CompilerGeneratedAttribute]
public int get_NeutralButtonId();
    [CompilerGeneratedAttribute]
public void set_NeutralButtonId(int value);
    [CompilerGeneratedAttribute]
public int get_PositiveButtonId();
    [CompilerGeneratedAttribute]
public void set_PositiveButtonId(int value);
    [CompilerGeneratedAttribute]
public Color get_TitleColor();
    [CompilerGeneratedAttribute]
public void set_TitleColor(Color value);
    [CompilerGeneratedAttribute]
public Typeface get_TitleTypeface();
    [CompilerGeneratedAttribute]
public void set_TitleTypeface(Typeface value);
    [CompilerGeneratedAttribute]
public TypefaceStyle get_TitleTypefaceStyle();
    [CompilerGeneratedAttribute]
public void set_TitleTypefaceStyle(TypefaceStyle value);
    [CompilerGeneratedAttribute]
public Typeface get_NegativeButtonTypeface();
    [CompilerGeneratedAttribute]
public void set_NegativeButtonTypeface(Typeface value);
    [CompilerGeneratedAttribute]
public TypefaceStyle get_NegativeButtonTypefaceStyle();
    [CompilerGeneratedAttribute]
public void set_NegativeButtonTypefaceStyle(TypefaceStyle value);
    [CompilerGeneratedAttribute]
public Typeface get_NeutralButtonTypeface();
    [CompilerGeneratedAttribute]
public void set_NeutralButtonTypeface(Typeface value);
    [CompilerGeneratedAttribute]
public TypefaceStyle get_NeutralButtonTypefaceStyle();
    [CompilerGeneratedAttribute]
public void set_NeutralButtonTypefaceStyle(TypefaceStyle value);
    [CompilerGeneratedAttribute]
public Typeface get_PositiveButtonTypeface();
    [CompilerGeneratedAttribute]
public void set_PositiveButtonTypeface(Typeface value);
    [CompilerGeneratedAttribute]
public TypefaceStyle get_PositiveButtonTypefaceStyle();
    [CompilerGeneratedAttribute]
public void set_PositiveButtonTypefaceStyle(TypefaceStyle value);
    [CompilerGeneratedAttribute]
public Color get_SeparatorColor();
    [CompilerGeneratedAttribute]
public void set_SeparatorColor(Color value);
}
public class Intersoft.Crosslight.Android.DialogViewModel : ViewModelBase {
}
[ExtensionAttribute]
public static class Intersoft.Crosslight.Android.DrawableExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static Byte[] ToByteArray(Drawable drawable);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Intersoft.Crosslight.Android.DrawerActivity`1 : FragmentActivity`1<TDrawerViewModel> {
    private DrawerState a;
    [CompilerGeneratedAttribute]
private ActionBarDrawer b;
    [CompilerGeneratedAttribute]
private IMenuItem c;
    [CompilerGeneratedAttribute]
private bool d;
    [CompilerGeneratedAttribute]
private string e;
    [CompilerGeneratedAttribute]
private IFragment f;
    [CompilerGeneratedAttribute]
private IFragment g;
    protected bool ShouldHandleNavigation { get; }
    private int Intersoft.Crosslight.Android.IDrawerActivity.LeftDrawerId { get; }
    private int Intersoft.Crosslight.Android.IDrawerActivity.RightDrawerId { get; }
    private DrawerState Intersoft.Crosslight.Android.IDrawerActivity.DrawerState { get; private set; }
    private DrawerSettings Intersoft.Crosslight.Android.IDrawerActivity.DrawerSettings { get; private set; }
    private IFragment Intersoft.Crosslight.Android.IDrawerActivity.RightFragment { get; private set; }
    private IFragment Intersoft.Crosslight.Android.IDrawerActivity.LeftFragment { get; private set; }
    private IMenuItem Intersoft.Crosslight.Android.IDrawerActivity.RightDrawerToggleButton { get; }
    private ActionBarDrawer h { get; private set; }
    private IMenuItem i { get; private set; }
    protected DrawerSettings DrawerSettings { get; }
    protected bool ShowActionBarUpButton { get; }
    private bool j { get; private set; }
    private DrawerState k { get; private set; }
    private string l { get; private set; }
    public IFragment RightFragment { get; private set; }
    public DrawerLayout DrawerLayout { get; }
    public ViewGroup LeftDrawer { get; }
    public ViewGroup RightDrawer { get; }
    public IFragment LeftFragment { get; private set; }
    public IFragment CenterFragment { get; }
    protected DrawerActivity`1(int contentLayoutId, int drawerContainerId);
    protected DrawerActivity`1(IntPtr intPtr, JniHandleOwnership handleOwnership);
    protected virtual bool get_ShouldHandleNavigation();
    public virtual void OnRestoreCustomNonConfigurationInstance();
    public virtual Object OnRetainCustomNonConfigurationInstance();
    protected virtual ViewState CreateViewState();
    private sealed virtual override int Intersoft.Crosslight.Android.IDrawerActivity.get_LeftDrawerId();
    private sealed virtual override int Intersoft.Crosslight.Android.IDrawerActivity.get_RightDrawerId();
    private sealed virtual override DrawerState Intersoft.Crosslight.Android.IDrawerActivity.get_DrawerState();
    private sealed virtual override void Intersoft.Crosslight.Android.IDrawerActivity.set_DrawerState(DrawerState value);
    private sealed virtual override DrawerSettings Intersoft.Crosslight.Android.IDrawerActivity.get_DrawerSettings();
    private sealed virtual override void Intersoft.Crosslight.Android.IDrawerActivity.set_DrawerSettings(DrawerSettings value);
    private sealed virtual override IFragment Intersoft.Crosslight.Android.IDrawerActivity.get_RightFragment();
    private sealed virtual override void Intersoft.Crosslight.Android.IDrawerActivity.set_RightFragment(IFragment value);
    private sealed virtual override IFragment Intersoft.Crosslight.Android.IDrawerActivity.get_LeftFragment();
    private sealed virtual override void Intersoft.Crosslight.Android.IDrawerActivity.set_LeftFragment(IFragment value);
    private sealed virtual override void Intersoft.Crosslight.Android.IDrawerActivity.OpenDrawer(int a);
    private sealed virtual override IMenuItem Intersoft.Crosslight.Android.IDrawerActivity.get_RightDrawerToggleButton();
    [CompilerGeneratedAttribute]
private ActionBarDrawer get_h();
    [CompilerGeneratedAttribute]
private void set_h(ActionBarDrawer value);
    [CompilerGeneratedAttribute]
private IMenuItem get_i();
    [CompilerGeneratedAttribute]
private void set_i(IMenuItem value);
    protected virtual DrawerSettings get_DrawerSettings();
    protected virtual bool get_ShowActionBarUpButton();
    [CompilerGeneratedAttribute]
private bool get_j();
    [CompilerGeneratedAttribute]
private void set_j(bool value);
    private DrawerState get_k();
    private void set_k(DrawerState value);
    [CompilerGeneratedAttribute]
private string get_l();
    [CompilerGeneratedAttribute]
private void set_l(string value);
    public virtual void Navigate(INavigable sender, NavigationTarget navigationTarget, NavigationOptions navigationOptions);
    private void AttachFragment(IFragment a, DrawerSide b);
    private void CloseNavigationDrawer();
    private void Filter();
    private void InitializeDrawer();
    private void OnDrawerOpened(View a);
    private void OnDrawerClosed(View a);
    private void ToggleRightDrawer();
    private void OnDrawerStateChanged();
    public sealed virtual void ShowDrawerIndicator();
    public sealed virtual void HideDrawerIndicator();
    protected virtual void InitializeFragment();
    public virtual void OnConfigurationChanged(Configuration newConfig);
    protected virtual void OnCreate(Bundle savedInstanceState);
    protected virtual void OnFragmentAttached(IFragment fragment);
    public virtual bool OnOptionsItemSelected(IMenuItem item);
    protected virtual void OnPostCreate(Bundle savedInstanceState);
    public virtual bool OnPrepareOptionsMenu(IMenu menu);
    protected virtual void OnViewInitialized();
    protected virtual void OnViewModelPropertyChanged(PropertyChangedEventArgs e);
    internal virtual void RegisterBindings();
    private void ToggleMenuVisibility(IMenu a, bool b);
    [CompilerGeneratedAttribute]
public IFragment get_RightFragment();
    [CompilerGeneratedAttribute]
private void set_RightFragment(IFragment value);
    public DrawerLayout get_DrawerLayout();
    public ViewGroup get_LeftDrawer();
    public ViewGroup get_RightDrawer();
    [CompilerGeneratedAttribute]
public IFragment get_LeftFragment();
    [CompilerGeneratedAttribute]
private void set_LeftFragment(IFragment value);
    public sealed virtual IFragment get_CenterFragment();
    private sealed virtual override void Intersoft.Crosslight.Android.IDrawerActivity.CloseNavigationDrawer();
    private sealed virtual override void Intersoft.Crosslight.Android.IDrawerActivity.OnDrawerOpened(View a);
    private sealed virtual override void Intersoft.Crosslight.Android.IDrawerActivity.OnDrawerClosed(View a);
    public sealed virtual void HandleIntent(Intent intent);
    [CompilerGeneratedAttribute]
private void <CloseNavigationDrawer>b__53_0();
    [CompilerGeneratedAttribute]
private void <InitializeDrawer>b__55_1();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.DrawerActivityViewState : FragmentActivityViewState {
    [CompilerGeneratedAttribute]
private DrawerState c;
    [CompilerGeneratedAttribute]
private ViewState d;
    [CompilerGeneratedAttribute]
private ViewState e;
    public DrawerState DrawerState { get; internal set; }
    public ViewState LeftFragmentViewState { get; internal set; }
    public ViewState RightFragmentViewState { get; internal set; }
    [CompilerGeneratedAttribute]
public DrawerState get_DrawerState();
    [CompilerGeneratedAttribute]
internal void set_DrawerState(DrawerState value);
    [CompilerGeneratedAttribute]
public ViewState get_LeftFragmentViewState();
    [CompilerGeneratedAttribute]
internal void set_LeftFragmentViewState(ViewState value);
    [CompilerGeneratedAttribute]
public ViewState get_RightFragmentViewState();
    [CompilerGeneratedAttribute]
internal void set_RightFragmentViewState(ViewState value);
}
public class Intersoft.Crosslight.Android.DrawerSettings : object {
    public static int DefaultActionBarDrawerIcon;
    public static int DefaultCloseDrawerHintId;
    public static Color DefaultLeftDrawerBackgroundColor;
    public static int DefaultLeftDrawerShadowId;
    public static int DefaultLeftDrawerWidth;
    public static Color DefaultRightDrawerBackgroundColor;
    public static int DefaultRightDrawerShadowId;
    public static int DefaultRightDrawerWidth;
    public static int DefaultOpenDrawerHintId;
    public static Color DefaultShadowColor;
    [CompilerGeneratedAttribute]
private int a;
    [CompilerGeneratedAttribute]
private int b;
    [CompilerGeneratedAttribute]
private int c;
    [CompilerGeneratedAttribute]
private Color d;
    [CompilerGeneratedAttribute]
private int e;
    [CompilerGeneratedAttribute]
private int f;
    [CompilerGeneratedAttribute]
private int g;
    [CompilerGeneratedAttribute]
private int h;
    [CompilerGeneratedAttribute]
private Color i;
    [CompilerGeneratedAttribute]
private int j;
    [CompilerGeneratedAttribute]
private int k;
    [CompilerGeneratedAttribute]
private int l;
    [CompilerGeneratedAttribute]
private Color m;
    public int ActionBarDrawerIcon { get; public set; }
    public int CloseDrawerHintId { get; public set; }
    public int LeftDrawerBackground { get; public set; }
    public Color LeftDrawerBackgroundColor { get; public set; }
    public int LeftDrawerShadowId { get; public set; }
    public int LeftDrawerWidth { get; public set; }
    public int OpenDrawerHintId { get; public set; }
    public int RightDrawerBackground { get; public set; }
    public Color RightDrawerBackgroundColor { get; public set; }
    public int RightDrawerButtonID { get; public set; }
    public int RightDrawerShadowId { get; public set; }
    public int RightDrawerWidth { get; public set; }
    public Color ShadowColor { get; public set; }
    private static DrawerSettings();
    [CompilerGeneratedAttribute]
public int get_ActionBarDrawerIcon();
    [CompilerGeneratedAttribute]
public void set_ActionBarDrawerIcon(int value);
    [CompilerGeneratedAttribute]
public int get_CloseDrawerHintId();
    [CompilerGeneratedAttribute]
public void set_CloseDrawerHintId(int value);
    [CompilerGeneratedAttribute]
public int get_LeftDrawerBackground();
    [CompilerGeneratedAttribute]
public void set_LeftDrawerBackground(int value);
    [CompilerGeneratedAttribute]
public Color get_LeftDrawerBackgroundColor();
    [CompilerGeneratedAttribute]
public void set_LeftDrawerBackgroundColor(Color value);
    [CompilerGeneratedAttribute]
public int get_LeftDrawerShadowId();
    [CompilerGeneratedAttribute]
public void set_LeftDrawerShadowId(int value);
    [CompilerGeneratedAttribute]
public int get_LeftDrawerWidth();
    [CompilerGeneratedAttribute]
public void set_LeftDrawerWidth(int value);
    [CompilerGeneratedAttribute]
public int get_OpenDrawerHintId();
    [CompilerGeneratedAttribute]
public void set_OpenDrawerHintId(int value);
    [CompilerGeneratedAttribute]
public int get_RightDrawerBackground();
    [CompilerGeneratedAttribute]
public void set_RightDrawerBackground(int value);
    [CompilerGeneratedAttribute]
public Color get_RightDrawerBackgroundColor();
    [CompilerGeneratedAttribute]
public void set_RightDrawerBackgroundColor(Color value);
    [CompilerGeneratedAttribute]
public int get_RightDrawerButtonID();
    [CompilerGeneratedAttribute]
public void set_RightDrawerButtonID(int value);
    [CompilerGeneratedAttribute]
public int get_RightDrawerShadowId();
    [CompilerGeneratedAttribute]
public void set_RightDrawerShadowId(int value);
    [CompilerGeneratedAttribute]
public int get_RightDrawerWidth();
    [CompilerGeneratedAttribute]
public void set_RightDrawerWidth(int value);
    [CompilerGeneratedAttribute]
public Color get_ShadowColor();
    [CompilerGeneratedAttribute]
public void set_ShadowColor(Color value);
}
public enum Intersoft.Crosslight.Android.DrawerState : Enum {
    public int value__;
    public static DrawerState None;
    public static DrawerState Left;
    public static DrawerState Right;
}
public enum Intersoft.Crosslight.Android.EdgePresentationPosition : Enum {
    public int value__;
    public static EdgePresentationPosition Left;
    public static EdgePresentationPosition Top;
    public static EdgePresentationPosition Right;
    public static EdgePresentationPosition Bottom;
}
[FlagsAttribute]
public enum Intersoft.Crosslight.Android.EditingOptions : Enum {
    public int value__;
    public static EditingOptions Default;
    public static EditingOptions AllowEditing;
    public static EditingOptions AllowReorder;
    public static EditingOptions AllowMultipleSelection;
}
public class Intersoft.Crosslight.Android.EditorAppearanceAttribute : ContentAppearanceAttribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.EditTextBindingAdapter : ControlBindingAdapterBase`1<EditText> {
    internal virtual BindingAdapterContext ResolveContext();
}
[ExtensionAttribute]
internal static class Intersoft.Crosslight.Android.EmailDataKindExtensions : object {
    [ExtensionAttribute]
internal static EmailType ToEmailType(EmailDataKind a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.FileCacheObserver : FileObserver {
    private string a;
    [CompilerGeneratedAttribute]
private FileChangeEvent b;
    public FileCacheObserver(IntPtr javaReference, JniHandleOwnership transfer);
    public FileCacheObserver(string path);
    public FileCacheObserver(string path, FileObserverEvents mask);
    [CompilerGeneratedAttribute]
public void add_FileChanged(FileChangeEvent value);
    [CompilerGeneratedAttribute]
public void remove_FileChanged(FileChangeEvent value);
    public virtual void OnEvent(FileObserverEvents fileObserverEvents, string path);
    protected virtual void OnFileChanged(FileChangedArgs args);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.FileChangedArgs : object {
    private Byte[] a;
    private string b;
    public Byte[] Data { get; }
    public string Path { get; }
    public FileChangedArgs(string path, Byte[] data);
    public Byte[] get_Data();
    public string get_Path();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Intersoft.Crosslight.Android.FormActivity`1 : FormActivityBase`1<TViewModel> {
    private PropertyDefinition a;
    private Dictionary`2<PropertyDefinition, VisibilityBindingAttribute> b;
    [CompilerGeneratedAttribute]
private FormDefinition c;
    [CompilerGeneratedAttribute]
private bool d;
    [CompilerGeneratedAttribute]
private bool e;
    [CompilerGeneratedAttribute]
private bool f;
    protected int ContentLayoutId { get; }
    protected int FormContainerId { get; }
    public FormDefinition Form { get; public set; }
    private Dictionary`2<PropertyDefinition, VisibilityBindingAttribute> g { get; }
    public PropertyDefinition ActiveProperty { get; public set; }
    private bool Intersoft.Crosslight.Android.IForm.ShowSeparator { get; private set; }
    public bool DisableAllForm { get; public set; }
    public bool DelayInitializeForm { get; public set; }
    public int SeparatorLayoutId { get; }
    protected FormActivity`1(IntPtr intPtr, JniHandleOwnership jniHandleOwnership);
    protected virtual int get_ContentLayoutId();
    protected virtual int get_FormContainerId();
    [CompilerGeneratedAttribute]
public virtual FormDefinition get_Form();
    [CompilerGeneratedAttribute]
public virtual void set_Form(FormDefinition value);
    private Dictionary`2<PropertyDefinition, VisibilityBindingAttribute> get_g();
    protected virtual void Dispose(bool disposing);
    private void InitializeForm();
    protected virtual void InitializeView();
    public virtual void OnBackPressed();
    public virtual bool OnOptionsItemSelected(IMenuItem item);
    protected virtual void OnCreate(Bundle savedInstanceState);
    public virtual PropertyDefinition get_ActiveProperty();
    public virtual void set_ActiveProperty(PropertyDefinition value);
    private sealed virtual override void Intersoft.Crosslight.Android.IForm.CancelForm(object a);
    private sealed virtual override void Intersoft.Crosslight.Android.IForm.SaveForm(object a);
    private sealed virtual override bool Intersoft.Crosslight.Android.IForm.CloseForm();
    [CompilerGeneratedAttribute]
private sealed virtual override bool Intersoft.Crosslight.Android.IForm.get_ShowSeparator();
    [CompilerGeneratedAttribute]
private sealed virtual override void Intersoft.Crosslight.Android.IForm.set_ShowSeparator(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_DisableAllForm();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DisableAllForm(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_DelayInitializeForm();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DelayInitializeForm(bool value);
    public sealed virtual int get_SeparatorLayoutId();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Intersoft.Crosslight.Android.FormActivityBase`1 : FragmentActivity {
    private string a;
    [CompilerGeneratedAttribute]
private TViewModel b;
    [CompilerGeneratedAttribute]
private bool c;
    [CompilerGeneratedAttribute]
private bool d;
    [CompilerGeneratedAttribute]
private bool e;
    private int f;
    private List`1<BindingDefinition> g;
    private LocationManager h;
    private Action`1<object> i;
    private List`1<BindingContext> j;
    private Dictionary`2<string, object> k;
    private TViewModel l;
    [CompilerGeneratedAttribute]
private Action`2<LocationRequest, List`1<object>> m;
    [CompilerGeneratedAttribute]
private NavigationTarget n;
    [CompilerGeneratedAttribute]
private EventHandler`1<DismissViewEventArgs> o;
    public string Id { get; private set; }
    public TViewModel ViewModel { get; protected set; }
    protected bool IsRotating { get; private set; }
    protected bool IsRotated { get; private set; }
    protected bool IsDisposed { get; private set; }
    private int Intersoft.Crosslight.Android.IActivity.MenuLayoutId { get; }
    public LocationManager LocationManager { get; }
    private Action`2<LocationRequest, List`1<object>> p { get; private set; }
    protected int ContentLayoutId { get; }
    protected int MenuLayoutId { get; }
    protected bool ShowActionBarUpButton { get; }
    private List`1<BindingDefinition> q { get; }
    private List`1<BindingContext> r { get; }
    private Dictionary`2<string, object> s { get; }
    private NavigationTarget Intersoft.Crosslight.Android.IActivity.NavigationTarget { get; private set; }
    private IViewModel Intersoft.Crosslight.ISupportViewModel.ViewModel { get; }
    protected FormActivityBase`1(int contentLayoutId);
    protected FormActivityBase`1(TViewModel viewModel);
    protected FormActivityBase`1(IntPtr intPtr, JniHandleOwnership handleOwnership);
    public sealed virtual string get_Id();
    private void set_Id(string value);
    [CompilerGeneratedAttribute]
public TViewModel get_ViewModel();
    [CompilerGeneratedAttribute]
protected void set_ViewModel(TViewModel value);
    [CompilerGeneratedAttribute]
protected bool get_IsRotating();
    [CompilerGeneratedAttribute]
private void set_IsRotating(bool value);
    [CompilerGeneratedAttribute]
protected bool get_IsRotated();
    [CompilerGeneratedAttribute]
private void set_IsRotated(bool value);
    [CompilerGeneratedAttribute]
protected bool get_IsDisposed();
    [CompilerGeneratedAttribute]
private void set_IsDisposed(bool value);
    protected virtual void OnCreate(Bundle savedInstanceState);
    protected virtual void OnRotate();
    protected virtual void OnStart();
    protected virtual void OnRestart();
    protected virtual void OnResume();
    protected virtual void OnPause();
    protected virtual void OnStop();
    protected virtual void OnDestroy();
    public virtual void OnRestoreCustomNonConfigurationInstance();
    public virtual Object OnRetainCustomNonConfigurationInstance();
    protected virtual void OnSaveInstanceState(Bundle outState);
    protected virtual void OnRestoreInstanceState(Bundle savedInstanceState);
    protected virtual void Dispose(bool disposing);
    protected virtual void InitializeViewModel();
    protected virtual void OnViewNavigated();
    protected virtual void OnViewModelDisposed();
    protected virtual void OnViewDisposed();
    protected virtual void OnViewModelPropertyChanged(PropertyChangedEventArgs e);
    protected virtual void OnViewModelResourcesChanged();
    protected virtual ViewState CreateViewState();
    private void ViewModel_PropertyChanged(object a, PropertyChangedEventArgs b);
    protected virtual void OnRestoreNonConfigurationInstance();
    private sealed virtual override int Intersoft.Crosslight.Android.IActivity.get_MenuLayoutId();
    private sealed virtual override void Intersoft.Crosslight.Android.IActivity.SetViewModel(IViewModel a);
    private sealed virtual override void Intersoft.Crosslight.Android.IActivity.OnViewDisposed();
    private sealed virtual override void Intersoft.Crosslight.Android.IActivity.OnViewModelDisposed();
    private sealed virtual override void Intersoft.Crosslight.Android.IActivity.OnViewModelResourcesChanged();
    private sealed virtual override void Intersoft.Crosslight.Android.IActivity.OnRestoreNonConfigurationInstance();
    private sealed virtual override void Intersoft.Crosslight.Android.IActivity.LaunchActivity(Intent a, Bundle b);
    private sealed virtual override void Intersoft.Crosslight.Android.IActivity.LaunchActivityForResult(Intent a, int b, Bundle c);
    private sealed virtual override Type Intersoft.Crosslight.Android.IActivity.GetActivityContainerType();
    public LocationManager get_LocationManager();
    [CompilerGeneratedAttribute]
private Action`2<LocationRequest, List`1<object>> get_p();
    [CompilerGeneratedAttribute]
private void set_p(Action`2<LocationRequest, List`1<object>> value);
    protected virtual int get_ContentLayoutId();
    protected virtual int get_MenuLayoutId();
    protected virtual bool get_ShowActionBarUpButton();
    private List`1<BindingDefinition> get_q();
    private List`1<BindingContext> get_r();
    private Dictionary`2<string, object> get_s();
    public void AddBinding(View targetView, BindableProperty property, BindingDescription binding);
    public void AddBinding(View targetView, BindableProperty property, string path);
    public void AddBinding(View targetView, BindableProperty property, string path, BindingMode mode);
    public void AddBinding(string targetViewName, BindableProperty property, BindingDescription binding);
    public void AddBinding(string targetViewName, BindableProperty property, string path);
    public void AddBinding(string targetViewName, BindableProperty property, string path, BindingMode mode);
    protected virtual TViewModel CreateViewModel();
    private void ImportFromBindingProvider();
    protected virtual void InitializeBindings();
    private void InitializeNavigation();
    protected virtual void InitializeView();
    protected virtual void OnActivityResult(int requestCode, Result resultCode, Intent data);
    public virtual void OnBackPressed();
    public virtual bool OnCreateOptionsMenu(IMenu menu);
    protected virtual void OnNewIntent(Intent intent);
    public virtual bool OnOptionsItemSelected(IMenuItem item);
    protected virtual void OnViewCreated();
    internal void OnViewDismissed(NavigationResult a);
    protected virtual void OnViewInitialized();
    private void ProcessPropertySets();
    internal virtual void RegisterBindings();
    internal virtual void UnregisterBindings();
    public void RegisterViewIdentifier(string id, object view);
    public void ReinitializeBinding(string targetViewName, BindableProperty property);
    [CompilerGeneratedAttribute]
private sealed virtual override NavigationTarget Intersoft.Crosslight.Android.IActivity.get_NavigationTarget();
    [CompilerGeneratedAttribute]
private sealed virtual override void Intersoft.Crosslight.Android.IActivity.set_NavigationTarget(NavigationTarget value);
    private sealed virtual override IViewModel Intersoft.Crosslight.ISupportViewModel.get_ViewModel();
    public sealed virtual object FindName(string name);
    public sealed virtual T FindName(string name);
    private sealed virtual override void Intersoft.Crosslight.IViewContext.OnViewDismissed(NavigationResult a);
    public virtual TService GetService();
    public virtual TService GetService(bool newInstance);
    public sealed virtual void OnLocationChanged(Location location);
    public sealed virtual void OnProviderDisabled(string provider);
    public sealed virtual void OnProviderEnabled(string provider);
    public sealed virtual void OnStatusChanged(string provider, Availability status, Bundle extras);
    public sealed virtual void RequestLocationUpdates(string provider, long minTime, float minDistance, Action`2<LocationRequest, List`1<object>> locationCallback);
    public sealed virtual void StartModalActivity(Intent intent, int requestCode, Action`1<object> callback);
    [CompilerGeneratedAttribute]
public sealed virtual void add_ViewDismissed(EventHandler`1<DismissViewEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_ViewDismissed(EventHandler`1<DismissViewEventArgs> value);
}
[AttributeUsageAttribute("4")]
public class Intersoft.Crosslight.Android.FormAppearanceAttribute : AppearanceAttribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.FormBuilderService : FormBuilderServiceBase`1<View> {
    internal static List`1<Type> UIMetadataTypes;
    private static Dictionary`2<Type, UIFormDefinition> a;
    private static FormBuilderService();
    [NullableContextAttribute("2")]
public static void RegisterUIMetadata();
    public static UIFormDefinition ResolveUIMetadata(Type metadataType);
    private static UIFormDefinition GenerateUIFormDefinition(Type a);
    private static UISectionDefinition GenerateUISectionDefinition(PropertyInfo a);
    private static UISectionDefinition GenerateUISectionDefinition(FieldInfo a);
    private static UIPropertyDefinition GenerateUIPropertyDefinition(PropertyInfo a);
    private static UIPropertyDefinition GenerateUIPropertyDefinition(FieldInfo a);
    public virtual View Build(object viewHost, FormDefinition form);
    private View GetFormScrollView(object a);
    private View InflateLayout(Activity a, PropertyDefinition b);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.FormFragment`1 : Fragment`1<TViewModel> {
    private PropertyDefinition a;
    private Dictionary`2<PropertyDefinition, VisibilityBindingAttribute> b;
    [CompilerGeneratedAttribute]
private FormDefinition c;
    [CompilerGeneratedAttribute]
private bool d;
    [CompilerGeneratedAttribute]
private bool e;
    [CompilerGeneratedAttribute]
private bool f;
    protected int ContentLayoutId { get; }
    protected int FormContainerId { get; }
    public FormDefinition Form { get; public set; }
    private Dictionary`2<PropertyDefinition, VisibilityBindingAttribute> g { get; }
    public PropertyDefinition ActiveProperty { get; public set; }
    private bool Intersoft.Crosslight.Android.IForm.ShowSeparator { get; private set; }
    public bool DisableAllForm { get; public set; }
    public bool DelayInitializeForm { get; public set; }
    public int SeparatorLayoutId { get; }
    protected FormFragment`1(int contentLayoutId);
    protected FormFragment`1(IntPtr intPtr, JniHandleOwnership handleOwnership);
    protected virtual int get_ContentLayoutId();
    protected virtual int get_FormContainerId();
    [CompilerGeneratedAttribute]
public virtual FormDefinition get_Form();
    [CompilerGeneratedAttribute]
public virtual void set_Form(FormDefinition value);
    private Dictionary`2<PropertyDefinition, VisibilityBindingAttribute> get_g();
    public virtual void OnCreate(Bundle savedInstanceState);
    protected virtual void InitializeView();
    protected virtual void OnViewCreated();
    public virtual void DisposeFragment();
    private void InitializeForm();
    public sealed virtual PropertyDefinition get_ActiveProperty();
    public sealed virtual void set_ActiveProperty(PropertyDefinition value);
    private sealed virtual override void Intersoft.Crosslight.Android.IForm.SaveForm(object a);
    private sealed virtual override void Intersoft.Crosslight.Android.IForm.CancelForm(object a);
    private sealed virtual override bool Intersoft.Crosslight.Android.IForm.CloseForm();
    [CompilerGeneratedAttribute]
private sealed virtual override bool Intersoft.Crosslight.Android.IForm.get_ShowSeparator();
    [CompilerGeneratedAttribute]
private sealed virtual override void Intersoft.Crosslight.Android.IForm.set_ShowSeparator(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_DisableAllForm();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DisableAllForm(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_DelayInitializeForm();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DelayInitializeForm(bool value);
    public sealed virtual int get_SeparatorLayoutId();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Intersoft.Crosslight.Android.Fragment`1 : Fragment {
    [CompilerGeneratedAttribute]
private TViewModel a;
    [CompilerGeneratedAttribute]
private bool b;
    [CompilerGeneratedAttribute]
private bool c;
    [CompilerGeneratedAttribute]
private bool d;
    [CompilerGeneratedAttribute]
private bool e;
    private LayoutInflater f;
    private int g;
    private List`1<BindingDefinition> h;
    private bool i;
    private LocationManager j;
    private List`1<BindingContext> k;
    private Dictionary`2<string, object> l;
    private TViewModel m;
    [CompilerGeneratedAttribute]
private Action`2<LocationRequest, List`1<object>> n;
    [CompilerGeneratedAttribute]
private INavigable o;
    [CompilerGeneratedAttribute]
private bool p;
    [CompilerGeneratedAttribute]
private NavigationTarget q;
    [CompilerGeneratedAttribute]
private NavigationItem r;
    [CompilerGeneratedAttribute]
private Type s;
    [CompilerGeneratedAttribute]
private Action`1<IContentPresenterSettings> t;
    [CompilerGeneratedAttribute]
private bool u;
    public TViewModel ViewModel { get; protected set; }
    protected bool IsRotating { get; private set; }
    protected bool IsRotated { get; private set; }
    protected bool IsDisposed { get; private set; }
    protected bool ShouldHandleNavigation { get; }
    private int Intersoft.Crosslight.Android.IFragment.MenuLayoutId { get; }
    private int Intersoft.Crosslight.Android.IFragment.IconId { get; }
    private string Intersoft.Crosslight.Android.IFragment.Title { get; }
    private List`1<int> Intersoft.Crosslight.Android.IFragment.SourceSharedElementIds { get; }
    private List`1<int> Intersoft.Crosslight.Android.IFragment.TargetSharedElementIds { get; }
    private Dictionary`2<string, View> Intersoft.Crosslight.Android.IFragment.SourceSharedElements { get; }
    private Dictionary`2<string, View> Intersoft.Crosslight.Android.IFragment.TargetSharedElements { get; }
    private bool Intersoft.Crosslight.Android.IFragment.IsNavigating { get; private set; }
    internal bool IsNavigating { get; internal set; }
    public LocationManager LocationManager { get; }
    private Action`2<LocationRequest, List`1<object>> v { get; private set; }
    protected bool ShowActionBarUpButton { get; }
    protected LayoutInflater LayoutInflater { get; }
    protected int ContentLayoutId { get; }
    protected int IconId { get; }
    protected int MenuLayoutId { get; }
    public INavigable NavigationInitiator { get; public set; }
    protected Dictionary`2<Type, int> NestedFragments { get; }
    internal List`1<BindingDefinition> PropertySets { get; }
    internal List`1<BindingContext> RegisteredBindings { get; }
    private Dictionary`2<string, object> w { get; }
    protected string Title { get; }
    private bool x { get; private set; }
    private NavigationTarget y { get; private set; }
    private NavigationItem z { get; private set; }
    private Type aa { get; private set; }
    private Action`1<IContentPresenterSettings> ab { get; private set; }
    private bool Intersoft.Crosslight.Android.IFragment.ShowActionBarUpButton { get; }
    public bool ShouldNotDispose { get; public set; }
    private NavigationTarget Intersoft.Crosslight.Android.IFragment.NavigationTarget { get; private set; }
    private NavigationItem Intersoft.Crosslight.Android.IFragment.NavigationItem { get; private set; }
    private Type Intersoft.Crosslight.Android.IFragment.DialogPresenterType { get; private set; }
    private Action`1<IContentPresenterSettings> Intersoft.Crosslight.Android.IFragment.DialogPresenterSettingsCallback { get; private set; }
    private IViewModel Intersoft.Crosslight.ISupportViewModel.ViewModel { get; }
    private bool Intersoft.Crosslight.Android.ISupportMasterDetail.IsMasterFragment { get; private set; }
    protected Fragment`1(int contentLayoutId);
    protected Fragment`1(TViewModel viewModel);
    protected Fragment`1(IntPtr intPtr, JniHandleOwnership handleOwnership);
    [CompilerGeneratedAttribute]
public TViewModel get_ViewModel();
    [CompilerGeneratedAttribute]
protected void set_ViewModel(TViewModel value);
    [CompilerGeneratedAttribute]
protected bool get_IsRotating();
    [CompilerGeneratedAttribute]
private void set_IsRotating(bool value);
    [CompilerGeneratedAttribute]
protected bool get_IsRotated();
    [CompilerGeneratedAttribute]
private void set_IsRotated(bool value);
    [CompilerGeneratedAttribute]
protected bool get_IsDisposed();
    [CompilerGeneratedAttribute]
private void set_IsDisposed(bool value);
    protected virtual bool get_ShouldHandleNavigation();
    public virtual void OnAttach(Activity activity);
    public virtual void OnCreate(Bundle savedInstanceState);
    public virtual void OnViewCreated(View view, Bundle savedInstanceState);
    private void PerformNavigation();
    public sealed virtual void ForceNavigation();
    protected virtual void OnRotate();
    public virtual void OnStart();
    public virtual void OnResume();
    public virtual void OnPause();
    public virtual void OnStop();
    public virtual void OnDestroyView();
    public virtual void OnDestroy();
    public virtual void DisposeFragment();
    protected virtual void Dispose(bool disposing);
    protected virtual void OnRestoreNonConfigurationInstance(ViewState viewState);
    protected virtual ViewState OnRetainNonConfigurationInstance();
    protected virtual void InitializeViewModel();
    protected virtual void OnViewNavigated();
    protected virtual void OnViewModelDisposed();
    protected virtual void OnViewDisposed();
    protected virtual void OnViewModelPropertyChanged(PropertyChangedEventArgs e);
    protected virtual void OnViewModelResourcesChanged();
    protected virtual ViewState CreateViewState();
    private void ViewModel_PropertyChanged(object a, PropertyChangedEventArgs b);
    private sealed virtual override int Intersoft.Crosslight.Android.IFragment.get_MenuLayoutId();
    private sealed virtual override int Intersoft.Crosslight.Android.IFragment.get_IconId();
    private sealed virtual override string Intersoft.Crosslight.Android.IFragment.get_Title();
    private sealed virtual override List`1<int> Intersoft.Crosslight.Android.IFragment.get_SourceSharedElementIds();
    private sealed virtual override List`1<int> Intersoft.Crosslight.Android.IFragment.get_TargetSharedElementIds();
    private sealed virtual override Dictionary`2<string, View> Intersoft.Crosslight.Android.IFragment.get_SourceSharedElements();
    private sealed virtual override Dictionary`2<string, View> Intersoft.Crosslight.Android.IFragment.get_TargetSharedElements();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.OnViewDisposed();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.OnViewModelDisposed();
    private sealed virtual override bool Intersoft.Crosslight.Android.IFragment.get_IsNavigating();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.set_IsNavigating(bool value);
    [CompilerGeneratedAttribute]
internal bool get_IsNavigating();
    [CompilerGeneratedAttribute]
internal void set_IsNavigating(bool value);
    public LocationManager get_LocationManager();
    [CompilerGeneratedAttribute]
private Action`2<LocationRequest, List`1<object>> get_v();
    [CompilerGeneratedAttribute]
private void set_v(Action`2<LocationRequest, List`1<object>> value);
    protected virtual bool get_ShowActionBarUpButton();
    protected LayoutInflater get_LayoutInflater();
    protected virtual int get_ContentLayoutId();
    protected virtual int get_IconId();
    protected virtual int get_MenuLayoutId();
    [CompilerGeneratedAttribute]
public INavigable get_NavigationInitiator();
    [CompilerGeneratedAttribute]
public void set_NavigationInitiator(INavigable value);
    protected virtual Dictionary`2<Type, int> get_NestedFragments();
    internal List`1<BindingDefinition> get_PropertySets();
    internal List`1<BindingContext> get_RegisteredBindings();
    private Dictionary`2<string, object> get_w();
    protected virtual string get_Title();
    [CompilerGeneratedAttribute]
private bool get_x();
    [CompilerGeneratedAttribute]
private void set_x(bool value);
    [CompilerGeneratedAttribute]
private NavigationTarget get_y();
    [CompilerGeneratedAttribute]
private void set_y(NavigationTarget value);
    [CompilerGeneratedAttribute]
private NavigationItem get_z();
    [CompilerGeneratedAttribute]
private void set_z(NavigationItem value);
    [CompilerGeneratedAttribute]
private Type get_aa();
    [CompilerGeneratedAttribute]
private void set_aa(Type value);
    [CompilerGeneratedAttribute]
private Action`1<IContentPresenterSettings> get_ab();
    [CompilerGeneratedAttribute]
private void set_ab(Action`1<IContentPresenterSettings> value);
    public void AddBinding(View targetView, BindableProperty property, BindingDescription binding);
    public void AddBinding(View targetView, BindableProperty property, string path);
    public void AddBinding(View targetView, BindableProperty property, string path, BindingMode mode);
    public void AddBinding(string targetViewName, BindableProperty property, BindingDescription binding);
    public void AddBinding(string targetViewName, BindableProperty property, string path);
    public void AddBinding(string targetViewName, BindableProperty property, string path, BindingMode mode);
    protected virtual TViewModel CreateViewModel();
    public object FindName(string name);
    public T FindName(string name);
    private void ImportFromBindingProvider();
    protected virtual void InitializeBindings();
    private void InitializeNavigation();
    protected virtual void InitializeNestedFragments();
    protected virtual void InitializeView();
    public virtual void OnCreateOptionsMenu(IMenu menu, MenuInflater inflater);
    public virtual View OnCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState);
    public virtual bool OnOptionsItemSelected(IMenuItem item);
    protected virtual void OnViewCreated();
    protected virtual void OnViewInitialized();
    private void ProcessPropertySets();
    internal virtual void RegisterBindings();
    internal virtual void UnregisterBindings();
    public void RegisterViewIdentifier(string id, object view);
    public void ReinitializeBinding(string targetViewName, BindableProperty property);
    private void ReinitializeViewModel(TViewModel a);
    private sealed virtual override bool Intersoft.Crosslight.Android.IFragment.get_ShowActionBarUpButton();
    [CompilerGeneratedAttribute]
public bool get_ShouldNotDispose();
    [CompilerGeneratedAttribute]
public void set_ShouldNotDispose(bool value);
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.NavigateBack(NavigationContext a, NavigationOptions b);
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.Navigate(INavigable a, NavigationTarget b, NavigationOptions c);
    public virtual void OnAttached(INavigable sender);
    public sealed virtual void SetViewModel(IViewModel viewModel);
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.OnRestoreNonConfigurationInstance(ViewState a);
    private sealed virtual override ViewState Intersoft.Crosslight.Android.IFragment.OnRetainNonConfigurationInstance();
    private sealed virtual override NavigationTarget Intersoft.Crosslight.Android.IFragment.get_NavigationTarget();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.set_NavigationTarget(NavigationTarget value);
    private sealed virtual override NavigationItem Intersoft.Crosslight.Android.IFragment.get_NavigationItem();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.set_NavigationItem(NavigationItem value);
    private sealed virtual override Type Intersoft.Crosslight.Android.IFragment.get_DialogPresenterType();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.set_DialogPresenterType(Type value);
    private sealed virtual override Action`1<IContentPresenterSettings> Intersoft.Crosslight.Android.IFragment.get_DialogPresenterSettingsCallback();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.set_DialogPresenterSettingsCallback(Action`1<IContentPresenterSettings> value);
    public virtual TService GetService();
    public virtual TService GetService(bool newInstance);
    public sealed virtual void OnLocationChanged(Location location);
    public sealed virtual void OnProviderDisabled(string provider);
    public sealed virtual void OnProviderEnabled(string provider);
    public sealed virtual void OnStatusChanged(string provider, Availability status, Bundle extras);
    public sealed virtual void RequestLocationUpdates(string provider, long minTime, float minDistance, Action`2<LocationRequest, List`1<object>> locationCallback);
    private sealed virtual override void Intersoft.Crosslight.IViewContext.OnViewDismissed(NavigationResult a);
    private sealed virtual override T Intersoft.Crosslight.IViewContext.FindName(string a);
    private sealed virtual override object Intersoft.Crosslight.IViewContext.FindName(string a);
    private sealed virtual override IViewModel Intersoft.Crosslight.ISupportViewModel.get_ViewModel();
    private sealed virtual override bool Intersoft.Crosslight.Android.ISupportMasterDetail.get_IsMasterFragment();
    private sealed virtual override void Intersoft.Crosslight.Android.ISupportMasterDetail.set_IsMasterFragment(bool value);
    private sealed virtual override Bundle Intersoft.Crosslight.Android.IFragment.get_Arguments();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.set_Arguments(Bundle a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Intersoft.Crosslight.Android.FragmentActivity`1 : FragmentActivity {
    private string a;
    [CompilerGeneratedAttribute]
private TViewModel b;
    [CompilerGeneratedAttribute]
private bool c;
    [CompilerGeneratedAttribute]
private bool d;
    [CompilerGeneratedAttribute]
private bool e;
    [CompilerGeneratedAttribute]
private ActivityState f;
    [CompilerGeneratedAttribute]
private bool g;
    private int h;
    private int i;
    private List`1<BindingDefinition> j;
    private LocationManager k;
    private Action`1<object> l;
    private Stack`1<NavigationContext> m;
    private List`1<BindingContext> n;
    private Dictionary`2<string, object> o;
    [CompilerGeneratedAttribute]
private Action`2<LocationRequest, List`1<object>> p;
    [CompilerGeneratedAttribute]
private IFragment q;
    [CompilerGeneratedAttribute]
private NavigationTarget r;
    [CompilerGeneratedAttribute]
private EventHandler`1<DismissViewEventArgs> s;
    public string Id { get; private set; }
    public TViewModel ViewModel { get; protected set; }
    protected bool IsRotating { get; private set; }
    protected bool IsRotated { get; private set; }
    protected bool IsDisposed { get; private set; }
    protected bool ShouldHandleNavigation { get; }
    public ActivityState State { get; public set; }
    public bool HasPendingClose { get; public set; }
    private int Intersoft.Crosslight.Android.IActivity.MenuLayoutId { get; }
    private int Intersoft.Crosslight.Android.IFragmentActivity.FragmentContainerId { get; }
    public LocationManager LocationManager { get; }
    private Action`2<LocationRequest, List`1<object>> t { get; private set; }
    protected int ContentLayoutId { get; private set; }
    protected int FragmentContainerId { get; protected set; }
    protected int MenuLayoutId { get; }
    internal List`1<BindingDefinition> PropertySets { get; }
    internal List`1<BindingContext> RegisteredBindings { get; }
    protected bool ShowActionBarUpButton { get; }
    internal Stack`1<NavigationContext> NavigationStack { get; internal set; }
    private Dictionary`2<string, object> u { get; }
    private IViewModel Intersoft.Crosslight.ISupportViewModel.ViewModel { get; }
    public IFragment Fragment { get; public set; }
    private NavigationTarget Intersoft.Crosslight.Android.IActivity.NavigationTarget { get; private set; }
    protected FragmentActivity`1(int contentLayoutId, int fragmentContainerId);
    protected FragmentActivity`1(IntPtr intPtr, JniHandleOwnership handleOwnership);
    public sealed virtual string get_Id();
    private void set_Id(string value);
    [CompilerGeneratedAttribute]
public TViewModel get_ViewModel();
    [CompilerGeneratedAttribute]
protected void set_ViewModel(TViewModel value);
    [CompilerGeneratedAttribute]
protected bool get_IsRotating();
    [CompilerGeneratedAttribute]
private void set_IsRotating(bool value);
    [CompilerGeneratedAttribute]
protected bool get_IsRotated();
    [CompilerGeneratedAttribute]
private void set_IsRotated(bool value);
    [CompilerGeneratedAttribute]
protected bool get_IsDisposed();
    [CompilerGeneratedAttribute]
private void set_IsDisposed(bool value);
    protected virtual bool get_ShouldHandleNavigation();
    [CompilerGeneratedAttribute]
public sealed virtual ActivityState get_State();
    [CompilerGeneratedAttribute]
public sealed virtual void set_State(ActivityState value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_HasPendingClose();
    [CompilerGeneratedAttribute]
public sealed virtual void set_HasPendingClose(bool value);
    protected virtual void OnCreate(Bundle savedInstanceState);
    protected virtual void OnRotate();
    protected virtual void OnStart();
    protected virtual void OnRestart();
    protected virtual void OnResume();
    protected virtual void OnPause();
    protected virtual void OnStop();
    protected virtual void OnDestroy();
    public virtual void OnRestoreCustomNonConfigurationInstance();
    public virtual Object OnRetainCustomNonConfigurationInstance();
    protected virtual void Dispose(bool disposing);
    protected virtual void InitializeViewModel();
    protected virtual void OnViewNavigated();
    protected virtual void OnViewModelDisposed();
    protected virtual void OnViewDisposed();
    protected virtual void OnViewModelPropertyChanged(PropertyChangedEventArgs e);
    protected virtual void OnViewModelResourcesChanged();
    protected virtual ViewState CreateViewState();
    private void ViewModel_PropertyChanged(object a, PropertyChangedEventArgs b);
    protected virtual void OnRestoreNonConfigurationInstance();
    private sealed virtual override int Intersoft.Crosslight.Android.IActivity.get_MenuLayoutId();
    private sealed virtual override void Intersoft.Crosslight.Android.IActivity.SetViewModel(IViewModel a);
    private sealed virtual override void Intersoft.Crosslight.Android.IActivity.OnViewDisposed();
    private sealed virtual override void Intersoft.Crosslight.Android.IActivity.OnViewModelDisposed();
    private sealed virtual override void Intersoft.Crosslight.Android.IActivity.OnViewModelResourcesChanged();
    private sealed virtual override void Intersoft.Crosslight.Android.IActivity.OnRestoreNonConfigurationInstance();
    private sealed virtual override int Intersoft.Crosslight.Android.IFragmentActivity.get_FragmentContainerId();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragmentActivity.OnFragmentAttached(IFragment a);
    private sealed virtual override void Intersoft.Crosslight.Android.IFragmentActivity.OnFragmentDetached(IFragment a);
    private sealed virtual override void Intersoft.Crosslight.Android.IActivity.LaunchActivity(Intent a, Bundle b);
    private sealed virtual override void Intersoft.Crosslight.Android.IActivity.LaunchActivityForResult(Intent a, int b, Bundle c);
    private sealed virtual override Type Intersoft.Crosslight.Android.IActivity.GetActivityContainerType();
    public LocationManager get_LocationManager();
    [CompilerGeneratedAttribute]
private Action`2<LocationRequest, List`1<object>> get_t();
    [CompilerGeneratedAttribute]
private void set_t(Action`2<LocationRequest, List`1<object>> value);
    protected virtual int get_ContentLayoutId();
    private void set_ContentLayoutId(int value);
    protected virtual int get_FragmentContainerId();
    protected virtual void set_FragmentContainerId(int value);
    protected virtual int get_MenuLayoutId();
    internal List`1<BindingDefinition> get_PropertySets();
    internal List`1<BindingContext> get_RegisteredBindings();
    protected virtual bool get_ShowActionBarUpButton();
    internal Stack`1<NavigationContext> get_NavigationStack();
    internal void set_NavigationStack(Stack`1<NavigationContext> value);
    private Dictionary`2<string, object> get_u();
    public void AddBinding(View targetView, BindableProperty property, BindingDescription binding);
    public void AddBinding(View targetView, BindableProperty property, string path);
    public void AddBinding(View targetView, BindableProperty property, string path, BindingMode mode);
    public void AddBinding(string targetViewName, BindableProperty property, BindingDescription binding);
    public void AddBinding(string targetViewName, BindableProperty property, string path);
    public void AddBinding(string targetViewName, BindableProperty property, string path, BindingMode mode);
    public void ApplyFragmentAttribute();
    protected virtual TViewModel CreateViewModel();
    private void ImportFromBindingProvider();
    protected virtual void InitializeBindings();
    protected virtual void InitializeFragment();
    private void InitializeNavigation();
    protected virtual void InitializeView();
    private bool MasterDetailNavigateBack(IMasterDetailFragment a);
    protected virtual void OnActivityResult(int requestCode, Result resultCode, Intent data);
    public virtual void OnBackPressed();
    public virtual bool OnCreateOptionsMenu(IMenu menu);
    protected virtual void OnFragmentAttached(IFragment fragment);
    protected virtual void OnFragmentDetached(IFragment fragment);
    protected virtual void OnNewIntent(Intent intent);
    public virtual bool OnOptionsItemSelected(IMenuItem item);
    protected virtual void OnViewCreated();
    internal void OnViewDismissed(NavigationResult a);
    protected virtual void OnViewInitialized();
    private void ProcessPropertySets();
    internal virtual void RegisterBindings();
    internal virtual void UnregisterBindings();
    public void RegisterViewIdentifier(string id, object view);
    public void ReinitializeBinding(string targetViewName, BindableProperty property);
    private void ReinitializeViewModel(IViewModel a);
    protected void RemoveFragment(IFragment frag);
    protected IFragment ResolveFragment(Type viewModelType, string targetName, Bundle fragmentArguments, int fragmentContainerId);
    private Type ResolveFragmentContextType(NavigationTarget a);
    protected virtual void UpdateView();
    private sealed virtual override IViewModel Intersoft.Crosslight.ISupportViewModel.get_ViewModel();
    public sealed virtual object FindName(string name);
    public sealed virtual T FindName(string name);
    public virtual TService GetService();
    public virtual TService GetService(bool newInstance);
    public sealed virtual void OnLocationChanged(Location location);
    public sealed virtual void OnProviderDisabled(string provider);
    public sealed virtual void OnProviderEnabled(string provider);
    public sealed virtual void OnStatusChanged(string provider, Availability status, Bundle extras);
    public sealed virtual void RequestLocationUpdates(string provider, long minTime, float minDistance, Action`2<LocationRequest, List`1<object>> locationCallback);
    [CompilerGeneratedAttribute]
public virtual IFragment get_Fragment();
    [CompilerGeneratedAttribute]
public virtual void set_Fragment(IFragment value);
    public virtual void Navigate(INavigable sender, NavigationTarget navigationTarget, NavigationOptions navigationOptions);
    private void NavigateBack(NavigationContext a, NavigationOptions b);
    [CompilerGeneratedAttribute]
private sealed virtual override NavigationTarget Intersoft.Crosslight.Android.IActivity.get_NavigationTarget();
    [CompilerGeneratedAttribute]
private sealed virtual override void Intersoft.Crosslight.Android.IActivity.set_NavigationTarget(NavigationTarget value);
    public sealed virtual void StartModalActivity(Intent intent, int requestCode, Action`1<object> callback);
    private sealed virtual override void Intersoft.Crosslight.IViewContext.OnViewDismissed(NavigationResult a);
    [CompilerGeneratedAttribute]
public sealed virtual void add_ViewDismissed(EventHandler`1<DismissViewEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_ViewDismissed(EventHandler`1<DismissViewEventArgs> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.FragmentActivityViewState : ViewState {
    [CompilerGeneratedAttribute]
private ViewState f;
    [CompilerGeneratedAttribute]
private Stack`1<NavigationContext> g;
    public ViewState FragmentViewState { get; internal set; }
    public Stack`1<NavigationContext> NavigationStack { get; internal set; }
    [CompilerGeneratedAttribute]
public ViewState get_FragmentViewState();
    [CompilerGeneratedAttribute]
internal void set_FragmentViewState(ViewState value);
    [CompilerGeneratedAttribute]
public Stack`1<NavigationContext> get_NavigationStack();
    [CompilerGeneratedAttribute]
internal void set_NavigationStack(Stack`1<NavigationContext> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
public class Intersoft.Crosslight.Android.FragmentAttribute : Attribute {
    [CompilerGeneratedAttribute]
private int a;
    [CompilerGeneratedAttribute]
private string b;
    public int IconId { get; public set; }
    public string Label { get; public set; }
    [CompilerGeneratedAttribute]
public int get_IconId();
    [CompilerGeneratedAttribute]
public void set_IconId(int value);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
}
[ExtensionAttribute]
public static class Intersoft.Crosslight.Android.FragmentManagerExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void ClearBackStack(FragmentManager fragmentManager);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.FragmentNavigationState : object {
    [CompilerGeneratedAttribute]
private IViewModel a;
    [CompilerGeneratedAttribute]
private IViewModel b;
    [CompilerGeneratedAttribute]
private Stack`1<NavigationContext> c;
    internal IViewModel ActivityViewModel { get; internal set; }
    internal IViewModel FragmentViewModel { get; internal set; }
    internal Stack`1<NavigationContext> NavigationStack { get; internal set; }
    [CompilerGeneratedAttribute]
internal IViewModel get_ActivityViewModel();
    [CompilerGeneratedAttribute]
internal void set_ActivityViewModel(IViewModel value);
    [CompilerGeneratedAttribute]
internal IViewModel get_FragmentViewModel();
    [CompilerGeneratedAttribute]
internal void set_FragmentViewModel(IViewModel value);
    [CompilerGeneratedAttribute]
internal Stack`1<NavigationContext> get_NavigationStack();
    [CompilerGeneratedAttribute]
internal void set_NavigationStack(Stack`1<NavigationContext> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.FragmentViewState : ViewState {
    [CompilerGeneratedAttribute]
private List`1<ViewState> h;
    [CompilerGeneratedAttribute]
private List`1<int> i;
    internal List`1<ViewState> ChildViewStates { get; internal set; }
    internal List`1<int> FragmentContainers { get; internal set; }
    [CompilerGeneratedAttribute]
internal List`1<ViewState> get_ChildViewStates();
    [CompilerGeneratedAttribute]
internal void set_ChildViewStates(List`1<ViewState> value);
    [CompilerGeneratedAttribute]
internal List`1<int> get_FragmentContainers();
    [CompilerGeneratedAttribute]
internal void set_FragmentContainers(List`1<int> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Intersoft.Crosslight.Android.GridActivity`1 : Activity`1<TViewModel> {
    private ContextualActionBarSettings a;
    private bool b;
    [CompilerGeneratedAttribute]
private GridView c;
    [CompilerGeneratedAttribute]
private PopupMenu d;
    [CompilerGeneratedAttribute]
private IMenuItem e;
    [CompilerGeneratedAttribute]
private IListAdapter f;
    [CompilerGeneratedAttribute]
private bool g;
    [CompilerGeneratedAttribute]
private bool h;
    private Dictionary`2<Type, IItemBindingAdapter> i;
    public GridView GridView { get; private set; }
    private PopupMenu j { get; private set; }
    private IMenuItem k { get; private set; }
    private IListAdapter l { get; private set; }
    protected int ContentLayoutId { get; }
    protected int GridItemLayoutId { get; }
    protected int GridViewId { get; }
    protected int GroupItemLayoutId { get; }
    protected BasicImageLoaderSettings ImageLoaderSettings { get; }
    protected int EmptyListViewLayoutId { get; }
    protected bool FastScrollAlwaysVisible { get; }
    protected bool FastScrollEnabled { get; }
    protected int FastScrollLetters { get; }
    protected bool AnimateOnNewItems { get; }
    protected ContextualActionBarSettings ContextualActionBarSettings { get; }
    public EditingOptions EditingOptions { get; }
    protected int CheckedIcon { get; }
    protected int UncheckedIcon { get; }
    private bool m { get; private set; }
    private bool n { get; private set; }
    private bool o { get; private set; }
    public ListViewInteraction InteractionMode { get; }
    public ChoiceInputMode ChoiceInputMode { get; }
    private AbsListView Intersoft.Crosslight.Android.IScrollView.ScrollView { get; }
    public Dictionary`2<Type, IItemBindingAdapter> ItemBindingAdapters { get; }
    protected GridActivity`1(TViewModel viewModel);
    protected GridActivity`1(IntPtr intPtr, JniHandleOwnership jniHandleOwnership);
    protected virtual void OnPostCreate(Bundle savedInstanceState);
    protected virtual void OnViewModelDisposed();
    protected virtual void OnViewDisposed();
    [CompilerGeneratedAttribute]
public sealed virtual GridView get_GridView();
    [CompilerGeneratedAttribute]
private void set_GridView(GridView value);
    [CompilerGeneratedAttribute]
private PopupMenu get_j();
    [CompilerGeneratedAttribute]
private void set_j(PopupMenu value);
    [CompilerGeneratedAttribute]
private IMenuItem get_k();
    [CompilerGeneratedAttribute]
private void set_k(IMenuItem value);
    [CompilerGeneratedAttribute]
private IListAdapter get_l();
    [CompilerGeneratedAttribute]
private void set_l(IListAdapter value);
    protected virtual int get_ContentLayoutId();
    protected virtual int get_GridItemLayoutId();
    protected virtual int get_GridViewId();
    protected virtual int get_GroupItemLayoutId();
    protected virtual BasicImageLoaderSettings get_ImageLoaderSettings();
    protected virtual int get_EmptyListViewLayoutId();
    protected virtual bool get_FastScrollAlwaysVisible();
    protected virtual bool get_FastScrollEnabled();
    protected virtual int get_FastScrollLetters();
    protected virtual bool get_AnimateOnNewItems();
    protected virtual ContextualActionBarSettings get_ContextualActionBarSettings();
    public virtual EditingOptions get_EditingOptions();
    protected virtual int get_CheckedIcon();
    protected virtual int get_UncheckedIcon();
    [CompilerGeneratedAttribute]
private bool get_m();
    [CompilerGeneratedAttribute]
private void set_m(bool value);
    private bool get_n();
    private void set_n(bool value);
    [CompilerGeneratedAttribute]
private bool get_o();
    [CompilerGeneratedAttribute]
private void set_o(bool value);
    public void RegisterItemBindingAdapter();
    protected virtual void Initialize();
    protected virtual void InitializeView();
    protected virtual void OnViewCreated();
    private void InitializeListAdapter();
    public void SetAllItemChecked(bool isChecked);
    private void OnIsAllItemCheckedChanged(bool a, bool b);
    protected void SynchronizeCheckedItems();
    private void ApplySingleSelection();
    private void ApplyMultipleSelection();
    public virtual ListViewInteraction get_InteractionMode();
    public virtual ChoiceInputMode get_ChoiceInputMode();
    private sealed virtual override AbsListView Intersoft.Crosslight.Android.IScrollView.get_ScrollView();
    public sealed virtual void ScrollToTop();
    public sealed virtual void ScrollToBottom();
    public sealed virtual void ScrollToPosition(int position);
    public sealed virtual Dictionary`2<Type, IItemBindingAdapter> get_ItemBindingAdapters();
    public virtual bool OnActionItemClicked(ActionMode mode, IMenuItem menuItem);
    public sealed virtual bool OnCreateActionMode(ActionMode mode, IMenu menu);
    public sealed virtual void OnDestroyActionMode(ActionMode mode);
    public sealed virtual bool OnPrepareActionMode(ActionMode mode, IMenu menu);
    public sealed virtual void OnItemCheckedStateChanged(ActionMode mode, int position, long id, bool isChecked);
    private void SynchronizeIsAllItemCheckedState();
    [CompilerGeneratedAttribute]
private void <ScrollToTop>b__79_0();
    [CompilerGeneratedAttribute]
private void <OnActionItemClicked>b__85_0(object a, MenuItemClickEventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.GridFragment`1 : Fragment`1<TViewModel> {
    private ContextualActionBarSettings a;
    private bool b;
    [CompilerGeneratedAttribute]
private GridView c;
    [CompilerGeneratedAttribute]
private PopupMenu d;
    [CompilerGeneratedAttribute]
private IMenuItem e;
    [CompilerGeneratedAttribute]
private IListAdapter f;
    [CompilerGeneratedAttribute]
private bool g;
    [CompilerGeneratedAttribute]
private bool h;
    private Dictionary`2<Type, IItemBindingAdapter> i;
    [CompilerGeneratedAttribute]
private ActionMode j;
    public GridView GridView { get; private set; }
    private PopupMenu k { get; private set; }
    private IMenuItem l { get; private set; }
    private IListAdapter m { get; private set; }
    protected bool AnimateOnNewItems { get; }
    protected int BackgroundDrawableId { get; }
    protected int ContentLayoutId { get; }
    protected int GridViewId { get; }
    protected ContextualActionBarSettings ContextualActionBarSettings { get; }
    public EditingOptions EditingOptions { get; }
    protected int EmptyListViewLayoutId { get; }
    protected bool FastScrollAlwaysVisible { get; }
    protected bool FastScrollEnabled { get; }
    protected int FastScrollLetters { get; }
    protected int GroupItemLayoutId { get; }
    protected BasicImageLoaderSettings ImageLoaderSettings { get; }
    protected int GridItemLayoutId { get; }
    protected int CheckedIcon { get; }
    protected int UncheckedIcon { get; }
    private bool n { get; private set; }
    private bool o { get; private set; }
    private bool p { get; private set; }
    public ListViewInteraction InteractionMode { get; }
    public ChoiceInputMode ChoiceInputMode { get; }
    private AbsListView Intersoft.Crosslight.Android.IScrollView.ScrollView { get; }
    public Dictionary`2<Type, IItemBindingAdapter> ItemBindingAdapters { get; }
    private ActionMode q { get; private set; }
    protected GridFragment`1(TViewModel viewModel);
    protected GridFragment`1(IntPtr intPtr, JniHandleOwnership handleOwnership);
    public virtual void OnStart();
    public virtual void OnStop();
    public virtual void OnDestroyView();
    protected virtual void OnViewModelDisposed();
    protected virtual void OnViewDisposed();
    [CompilerGeneratedAttribute]
public sealed virtual GridView get_GridView();
    [CompilerGeneratedAttribute]
private void set_GridView(GridView value);
    [CompilerGeneratedAttribute]
private PopupMenu get_k();
    [CompilerGeneratedAttribute]
private void set_k(PopupMenu value);
    [CompilerGeneratedAttribute]
private IMenuItem get_l();
    [CompilerGeneratedAttribute]
private void set_l(IMenuItem value);
    [CompilerGeneratedAttribute]
private IListAdapter get_m();
    [CompilerGeneratedAttribute]
private void set_m(IListAdapter value);
    protected virtual bool get_AnimateOnNewItems();
    protected virtual int get_BackgroundDrawableId();
    protected virtual int get_ContentLayoutId();
    protected virtual int get_GridViewId();
    protected virtual ContextualActionBarSettings get_ContextualActionBarSettings();
    public virtual EditingOptions get_EditingOptions();
    protected virtual int get_EmptyListViewLayoutId();
    protected virtual bool get_FastScrollAlwaysVisible();
    protected virtual bool get_FastScrollEnabled();
    protected virtual int get_FastScrollLetters();
    protected virtual int get_GroupItemLayoutId();
    protected virtual BasicImageLoaderSettings get_ImageLoaderSettings();
    protected virtual int get_GridItemLayoutId();
    protected virtual int get_CheckedIcon();
    protected virtual int get_UncheckedIcon();
    [CompilerGeneratedAttribute]
private bool get_n();
    [CompilerGeneratedAttribute]
private void set_n(bool value);
    private bool get_o();
    private void set_o(bool value);
    [CompilerGeneratedAttribute]
private bool get_p();
    [CompilerGeneratedAttribute]
private void set_p(bool value);
    protected virtual void Initialize();
    public void RegisterItemBindingAdapter();
    protected virtual void InitializeView();
    protected virtual void OnViewCreated();
    private void InitializeListAdapter();
    public void SetAllItemChecked(bool isChecked);
    private void OnIsAllItemCheckedChanged(bool a, bool b);
    protected void SynchronizeCheckedItems();
    private void ApplySingleSelection();
    private void ApplyMultipleSelection();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.NavigateBack(NavigationContext a, NavigationOptions b);
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.Navigate(INavigable a, NavigationTarget b, NavigationOptions c);
    public virtual ListViewInteraction get_InteractionMode();
    public virtual ChoiceInputMode get_ChoiceInputMode();
    private sealed virtual override AbsListView Intersoft.Crosslight.Android.IScrollView.get_ScrollView();
    public sealed virtual void ScrollToTop();
    public sealed virtual void ScrollToBottom();
    public sealed virtual void ScrollToPosition(int position);
    public sealed virtual Dictionary`2<Type, IItemBindingAdapter> get_ItemBindingAdapters();
    public virtual bool OnActionItemClicked(ActionMode mode, IMenuItem menuItem);
    [CompilerGeneratedAttribute]
private ActionMode get_q();
    [CompilerGeneratedAttribute]
private void set_q(ActionMode value);
    public sealed virtual bool OnCreateActionMode(ActionMode mode, IMenu menu);
    public sealed virtual void OnDestroyActionMode(ActionMode mode);
    public sealed virtual bool OnPrepareActionMode(ActionMode mode, IMenu menu);
    public sealed virtual void OnItemCheckedStateChanged(ActionMode mode, int position, long id, bool isChecked);
    private void SynchronizeIsAllItemCheckedState();
    private sealed virtual override Bundle Intersoft.Crosslight.Android.IFragment.get_Arguments();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.set_Arguments(Bundle a);
    [CompilerGeneratedAttribute]
private void <ScrollToTop>b__85_0();
    [CompilerGeneratedAttribute]
private void <OnActionItemClicked>b__91_0(object a, MenuItemClickEventArgs b);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.GridViewBindingAdapter : AbsListViewBindingAdapter`1<GridView> {
}
public class Intersoft.Crosslight.Android.HeaderAppearanceAttribute : ContentAppearanceAttribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.HttpGetAsyncTask`1 : AsyncTask`3<URL, int, T> {
    private IEnumerable`1<Type> a;
    private URL b;
    public HttpGetAsyncTask`1(URL url, IEnumerable`1<Type> knownTypes);
    protected virtual T RunInBackground(URL[] urls);
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.IActivity {
    public int MenuLayoutId { get; }
    public string Id { get; }
    public NavigationTarget NavigationTarget { get; public set; }
    public abstract virtual int get_MenuLayoutId();
    public abstract virtual string get_Id();
    public abstract virtual NavigationTarget get_NavigationTarget();
    public abstract virtual void set_NavigationTarget(NavigationTarget value);
    public abstract virtual void OnRestoreNonConfigurationInstance();
    public abstract virtual void OnViewDisposed();
    public abstract virtual void OnViewModelDisposed();
    public abstract virtual void OnViewModelResourcesChanged();
    public abstract virtual void SetViewModel(IViewModel viewModel);
    public abstract virtual void LaunchActivity(Intent intent, Bundle options);
    public abstract virtual void LaunchActivityForResult(Intent intent, int requestCode, Bundle options);
    public abstract virtual Type GetActivityContainerType();
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.IAndroidApplicationContext {
    public abstract virtual Context GetNativeContext();
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.IContentPresenter {
    public IContentPresenterSettings Settings { get; }
    public abstract virtual IContentPresenterSettings get_Settings();
    public abstract virtual void Dismiss();
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.IContentPresenterSettings {
    public bool DisableBackButton { get; public set; }
    public int CommandLayoutId { get; public set; }
    public List`1<string> CommandViewId { get; public set; }
    public Color ContentBackground { get; public set; }
    public bool DismissOnTap { get; public set; }
    public ContentPresentationStyle PresentationStyle { get; public set; }
    public EdgePresentationPosition EdgePresentationPosition { get; public set; }
    public Size PreferredContentSize { get; public set; }
    public Size PreferredContentPercentage { get; public set; }
    public Size PreferredContentSizeLandscape { get; public set; }
    public Size PreferredContentPercentageLandscape { get; public set; }
    public TransitionMode EnterTransition { get; public set; }
    public TransitionMode ExitTransition { get; public set; }
    public int CustomEnterTransition { get; public set; }
    public int CustomExitTransition { get; public set; }
    public bool ShowToolbar { get; public set; }
    public abstract virtual bool get_DisableBackButton();
    public abstract virtual void set_DisableBackButton(bool value);
    public abstract virtual int get_CommandLayoutId();
    public abstract virtual void set_CommandLayoutId(int value);
    public abstract virtual List`1<string> get_CommandViewId();
    public abstract virtual void set_CommandViewId(List`1<string> value);
    public abstract virtual Color get_ContentBackground();
    public abstract virtual void set_ContentBackground(Color value);
    public abstract virtual bool get_DismissOnTap();
    public abstract virtual void set_DismissOnTap(bool value);
    public abstract virtual ContentPresentationStyle get_PresentationStyle();
    public abstract virtual void set_PresentationStyle(ContentPresentationStyle value);
    public abstract virtual EdgePresentationPosition get_EdgePresentationPosition();
    public abstract virtual void set_EdgePresentationPosition(EdgePresentationPosition value);
    public abstract virtual Size get_PreferredContentSize();
    public abstract virtual void set_PreferredContentSize(Size value);
    public abstract virtual Size get_PreferredContentPercentage();
    public abstract virtual void set_PreferredContentPercentage(Size value);
    public abstract virtual Size get_PreferredContentSizeLandscape();
    public abstract virtual void set_PreferredContentSizeLandscape(Size value);
    public abstract virtual Size get_PreferredContentPercentageLandscape();
    public abstract virtual void set_PreferredContentPercentageLandscape(Size value);
    public abstract virtual TransitionMode get_EnterTransition();
    public abstract virtual void set_EnterTransition(TransitionMode value);
    public abstract virtual TransitionMode get_ExitTransition();
    public abstract virtual void set_ExitTransition(TransitionMode value);
    public abstract virtual int get_CustomEnterTransition();
    public abstract virtual void set_CustomEnterTransition(int value);
    public abstract virtual int get_CustomExitTransition();
    public abstract virtual void set_CustomExitTransition(int value);
    public abstract virtual bool get_ShowToolbar();
    public abstract virtual void set_ShowToolbar(bool value);
}
[NullableContextAttribute("1")]
internal interface Intersoft.Crosslight.Android.IContext {
    public abstract virtual CContext GetCoreContext();
    public abstract virtual VContext GetViewContext();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Intersoft.Crosslight.Android.ICursorExtensions : object {
    [ExtensionAttribute]
internal static string GetString(ICursor a, string b);
    [ExtensionAttribute]
internal static int GetInt(ICursor a, string b);
    [ExtensionAttribute]
internal static Byte[] GetBlob(ICursor a, string b);
}
[NullableContextAttribute("1")]
internal interface Intersoft.Crosslight.Android.IDialogBuilder {
    public abstract virtual Dialog CreateAlertDialog(Context a, AlertDialogSettings b);
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.IDrawerActivity {
    public int LeftDrawerId { get; }
    public int RightDrawerId { get; }
    public IFragment CenterFragment { get; }
    public DrawerSettings DrawerSettings { get; public set; }
    public DrawerState DrawerState { get; public set; }
    public IFragment LeftFragment { get; public set; }
    public IMenuItem RightDrawerToggleButton { get; }
    public IFragment RightFragment { get; public set; }
    public abstract virtual int get_LeftDrawerId();
    public abstract virtual int get_RightDrawerId();
    public abstract virtual IFragment get_CenterFragment();
    public abstract virtual DrawerSettings get_DrawerSettings();
    public abstract virtual void set_DrawerSettings(DrawerSettings value);
    public abstract virtual DrawerState get_DrawerState();
    public abstract virtual void set_DrawerState(DrawerState value);
    public abstract virtual IFragment get_LeftFragment();
    public abstract virtual void set_LeftFragment(IFragment value);
    public abstract virtual IMenuItem get_RightDrawerToggleButton();
    public abstract virtual IFragment get_RightFragment();
    public abstract virtual void set_RightFragment(IFragment value);
    public abstract virtual void CloseNavigationDrawer();
    public abstract virtual void HideDrawerIndicator();
    public abstract virtual void OnDrawerClosed(View drawerView);
    public abstract virtual void OnDrawerOpened(View drawerView);
    public abstract virtual void OpenDrawer(int gravity);
    public abstract virtual void ShowDrawerIndicator();
}
[NullableContextAttribute("1")]
internal interface Intersoft.Crosslight.Android.IEnvironmentDelegate {
    public abstract virtual Context GetContextForInflater(Activity a);
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.IForm {
    public PropertyDefinition ActiveProperty { get; public set; }
    public FormDefinition Form { get; public set; }
    public bool ShowSeparator { get; public set; }
    public int SeparatorLayoutId { get; }
    public bool DisableAllForm { get; public set; }
    public bool DelayInitializeForm { get; public set; }
    public abstract virtual PropertyDefinition get_ActiveProperty();
    public abstract virtual void set_ActiveProperty(PropertyDefinition value);
    public abstract virtual FormDefinition get_Form();
    public abstract virtual void set_Form(FormDefinition value);
    public abstract virtual void CancelForm(object parameter);
    public abstract virtual void SaveForm(object parameter);
    public abstract virtual bool CloseForm();
    public abstract virtual bool get_ShowSeparator();
    public abstract virtual void set_ShowSeparator(bool value);
    public abstract virtual int get_SeparatorLayoutId();
    public abstract virtual bool get_DisableAllForm();
    public abstract virtual void set_DisableAllForm(bool value);
    public abstract virtual bool get_DelayInitializeForm();
    public abstract virtual void set_DelayInitializeForm(bool value);
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.IFragment {
    public Bundle Arguments { get; public set; }
    public NavigationTarget NavigationTarget { get; public set; }
    public NavigationItem NavigationItem { get; public set; }
    public bool ShowActionBarUpButton { get; }
    public Type DialogPresenterType { get; public set; }
    public Action`1<IContentPresenterSettings> DialogPresenterSettingsCallback { get; public set; }
    public int MenuLayoutId { get; }
    public string Title { get; }
    public int IconId { get; }
    public List`1<int> SourceSharedElementIds { get; }
    public List`1<int> TargetSharedElementIds { get; }
    public Dictionary`2<string, View> SourceSharedElements { get; }
    public Dictionary`2<string, View> TargetSharedElements { get; }
    public bool IsNavigating { get; public set; }
    public abstract virtual Bundle get_Arguments();
    public abstract virtual void set_Arguments(Bundle value);
    public abstract virtual NavigationTarget get_NavigationTarget();
    public abstract virtual void set_NavigationTarget(NavigationTarget value);
    public abstract virtual NavigationItem get_NavigationItem();
    public abstract virtual void set_NavigationItem(NavigationItem value);
    public abstract virtual bool get_ShowActionBarUpButton();
    public abstract virtual Type get_DialogPresenterType();
    public abstract virtual void set_DialogPresenterType(Type value);
    public abstract virtual Action`1<IContentPresenterSettings> get_DialogPresenterSettingsCallback();
    public abstract virtual void set_DialogPresenterSettingsCallback(Action`1<IContentPresenterSettings> value);
    public abstract virtual int get_MenuLayoutId();
    public abstract virtual string get_Title();
    public abstract virtual int get_IconId();
    public abstract virtual List`1<int> get_SourceSharedElementIds();
    public abstract virtual List`1<int> get_TargetSharedElementIds();
    public abstract virtual Dictionary`2<string, View> get_SourceSharedElements();
    public abstract virtual Dictionary`2<string, View> get_TargetSharedElements();
    public abstract virtual bool get_IsNavigating();
    public abstract virtual void set_IsNavigating(bool value);
    public abstract virtual void Navigate(INavigable sender, NavigationTarget navigationTarget, NavigationOptions navigationOptions);
    public abstract virtual void NavigateBack(NavigationContext navigationContext, NavigationOptions navigationOptions);
    public abstract virtual void OnAttached(INavigable sender);
    public abstract virtual void SetViewModel(IViewModel viewModel);
    public abstract virtual void OnRestoreNonConfigurationInstance(ViewState viewState);
    public abstract virtual ViewState OnRetainNonConfigurationInstance();
    public abstract virtual void Dispose();
    public abstract virtual void DisposeFragment();
    public abstract virtual void ForceNavigation();
    public abstract virtual void OnViewDisposed();
    public abstract virtual void OnViewModelDisposed();
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.IFragmentActivity {
    public int FragmentContainerId { get; }
    public IFragment Fragment { get; public set; }
    public ActivityState State { get; public set; }
    public bool HasPendingClose { get; public set; }
    public abstract virtual int get_FragmentContainerId();
    public abstract virtual IFragment get_Fragment();
    public abstract virtual void set_Fragment(IFragment value);
    public abstract virtual ActivityState get_State();
    public abstract virtual void set_State(ActivityState value);
    public abstract virtual bool get_HasPendingClose();
    public abstract virtual void set_HasPendingClose(bool value);
    public abstract virtual void OnFragmentAttached(IFragment fragment);
    public abstract virtual void OnFragmentDetached(IFragment fragment);
    public abstract virtual void OnRestoreCustomNonConfigurationInstance();
    public abstract virtual void Navigate(INavigable sender, NavigationTarget navigationTarget, NavigationOptions navigationOptions);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Intersoft.Crosslight.Android.IFragmentExtensions : object {
    [ExtensionAttribute]
public static void ConfigurePresenter(IFragment fragment, Action`1<IContentPresenterSettings> settingsCallback);
    [ExtensionAttribute]
public static void RegisterPresenter(IFragment fragment, Action`1<IContentPresenterSettings> settingsCallback);
}
public interface Intersoft.Crosslight.Android.IGridFragment {
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.IGridView {
    public GridView GridView { get; }
    public abstract virtual GridView get_GridView();
}
[NullableContextAttribute("1")]
internal interface Intersoft.Crosslight.Android.IHeaderViewListener {
    public abstract virtual void OnStateChanged(View a, int b);
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.IImageControl {
    public abstract virtual ImageView GetImageView();
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.IItemViewModelBinder {
    public abstract virtual void PerformBinding(ListItemViewHolder viewHolder, IViewModel viewModel, object model);
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.IItemViewModelBinder`2 {
    public abstract virtual void PerformBinding(ListItemViewHolder viewHolder, TViewModel viewModel, TModel model);
}
public interface Intersoft.Crosslight.Android.IListFragment {
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.IListView {
    public ListView ListView { get; }
    public bool AutoSelectFirstItem { get; }
    public abstract virtual ListView get_ListView();
    public abstract virtual bool get_AutoSelectFirstItem();
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.ILocationProvider {
    public abstract virtual void GetCurrentLocation(Action`1<LocationResult> resultCallback);
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.ILocationProviderSettings {
    public Type Type { get; }
    public int RequestInterval { get; public set; }
    public int FastestRequestInterval { get; public set; }
    public int RequestPriority { get; public set; }
    public abstract virtual Type get_Type();
    public abstract virtual int get_RequestInterval();
    public abstract virtual void set_RequestInterval(int value);
    public abstract virtual int get_FastestRequestInterval();
    public abstract virtual void set_FastestRequestInterval(int value);
    public abstract virtual int get_RequestPriority();
    public abstract virtual void set_RequestPriority(int value);
}
public class Intersoft.Crosslight.Android.ImageAppearanceAttribute : EditorAppearanceAttribute {
    [NullableAttribute("1")]
public static AppearanceProperty AlphaProperty;
    public int Alpha { get; public set; }
    private static ImageAppearanceAttribute();
    public int get_Alpha();
    public void set_Alpha(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.ImageButtonBindingAdapter : ControlBindingAdapterBase`1<ImageButton> {
    internal virtual BindingAdapterContext ResolveContext();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ImageData : object {
    [CompilerGeneratedAttribute]
private object a;
    [CompilerGeneratedAttribute]
private string b;
    internal object Item { get; internal set; }
    internal string Url { get; internal set; }
    [CompilerGeneratedAttribute]
internal object get_Item();
    [CompilerGeneratedAttribute]
internal void set_Item(object value);
    [CompilerGeneratedAttribute]
internal string get_Url();
    [CompilerGeneratedAttribute]
internal void set_Url(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ImageLoader : object {
    private IImageLoaderDelegate a;
    [CompilerGeneratedAttribute]
private ImageLoadingMode b;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Drawable> c;
    [CompilerGeneratedAttribute]
private ImageSettings d;
    [CompilerGeneratedAttribute]
private bool e;
    [CompilerGeneratedAttribute]
private Dictionary`2<ImageView, Action> f;
    [CompilerGeneratedAttribute]
private Dictionary`2<object, Drawable> g;
    internal ImageLoadingMode ImageLoadingMode { get; internal set; }
    private IImageLoaderDelegate h { get; }
    private Dictionary`2<string, Drawable> i { get; private set; }
    private ImageSettings j { get; private set; }
    public bool IsListLoader { get; public set; }
    private Dictionary`2<ImageView, Action> k { get; private set; }
    private Dictionary`2<object, Drawable> l { get; private set; }
    public ImageLoader(ImageSettings settings);
    private void OnImageViewLayoutChange(object a, LayoutChangeEventArgs b);
    private void Initialize();
    [CompilerGeneratedAttribute]
internal ImageLoadingMode get_ImageLoadingMode();
    [CompilerGeneratedAttribute]
internal void set_ImageLoadingMode(ImageLoadingMode value);
    private IImageLoaderDelegate get_h();
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Drawable> get_i();
    [CompilerGeneratedAttribute]
private void set_i(Dictionary`2<string, Drawable> value);
    [CompilerGeneratedAttribute]
private ImageSettings get_j();
    [CompilerGeneratedAttribute]
private void set_j(ImageSettings value);
    [CompilerGeneratedAttribute]
public bool get_IsListLoader();
    [CompilerGeneratedAttribute]
public void set_IsListLoader(bool value);
    [CompilerGeneratedAttribute]
private Dictionary`2<ImageView, Action> get_k();
    [CompilerGeneratedAttribute]
private void set_k(Dictionary`2<ImageView, Action> value);
    internal void Cancel(ImageView a);
    private Drawable GetImagePlaceHolder(ImageView a, string b, ImageSettings c);
    public void LoadAsync(ImageView imageView, object imageSource, string imagePlaceholder, ImageLoaderSettings imageLoaderSettings);
    [CompilerGeneratedAttribute]
private Dictionary`2<object, Drawable> get_l();
    [CompilerGeneratedAttribute]
private void set_l(Dictionary`2<object, Drawable> value);
    internal void LoadDirectAsync(ImageView a, object b, string c, ImageLoaderSettings d);
    internal void LoadDirectAsync(ImageView a, object b, string c, ImageLoaderSettings d, bool e, string f);
    private void LoadDirectAsync(ImageView a, ImageLoaderData b, bool c);
    [AsyncStateMachineAttribute("Intersoft.Crosslight.Android.ImageLoader/e")]
private void LoadFromUriAsync(ImageView a, ImageLoaderData b);
    internal static void ShowParallaxImage(ImageView a);
    internal static void InitializeParallaxImage(ImageView a, Drawable b, bool c);
    private bool ShouldUseImageLoaderService(object a);
    internal static Drawable CreateRoundedDrawable(Drawable a, ImageView b, ImageSettings c);
    internal static Drawable CreateRoundedDrawable(Bitmap a, ImageView b, ImageSettings c);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.ImageLoaderData : Object {
    [CompilerGeneratedAttribute]
private ImageLoaderSettings a;
    [CompilerGeneratedAttribute]
private string b;
    [CompilerGeneratedAttribute]
private object c;
    [CompilerGeneratedAttribute]
private object d;
    [CompilerGeneratedAttribute]
private Dictionary`2<object, Drawable> e;
    [CompilerGeneratedAttribute]
private string f;
    internal ImageLoaderSettings ImageLoaderSettings { get; internal set; }
    internal string ImagePlaceholder { get; internal set; }
    internal object ImageSource { get; internal set; }
    internal object ImageTag { get; internal set; }
    internal Dictionary`2<object, Drawable> CachedDrawables { get; internal set; }
    internal string Uri { get; internal set; }
    [CompilerGeneratedAttribute]
internal ImageLoaderSettings get_ImageLoaderSettings();
    [CompilerGeneratedAttribute]
internal void set_ImageLoaderSettings(ImageLoaderSettings value);
    [CompilerGeneratedAttribute]
internal string get_ImagePlaceholder();
    [CompilerGeneratedAttribute]
internal void set_ImagePlaceholder(string value);
    [CompilerGeneratedAttribute]
internal object get_ImageSource();
    [CompilerGeneratedAttribute]
internal void set_ImageSource(object value);
    [CompilerGeneratedAttribute]
internal object get_ImageTag();
    [CompilerGeneratedAttribute]
internal void set_ImageTag(object value);
    [CompilerGeneratedAttribute]
internal Dictionary`2<object, Drawable> get_CachedDrawables();
    [CompilerGeneratedAttribute]
internal void set_CachedDrawables(Dictionary`2<object, Drawable> value);
    [CompilerGeneratedAttribute]
internal string get_Uri();
    [CompilerGeneratedAttribute]
internal void set_Uri(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.ImageLoaderTask : AsyncTask {
    [CompilerGeneratedAttribute]
private ImageSettings a;
    [CompilerGeneratedAttribute]
private WeakReference b;
    [CompilerGeneratedAttribute]
private Object c;
    public ImageSettings d { get; public set; }
    private WeakReference e { get; private set; }
    private Object f { get; private set; }
    public ImageLoaderTask(ImageView a);
    protected ImageLoaderTask(IntPtr a, JniHandleOwnership b);
    [CompilerGeneratedAttribute]
public ImageSettings get_d();
    [CompilerGeneratedAttribute]
public void set_d(ImageSettings value);
    [CompilerGeneratedAttribute]
private WeakReference get_e();
    [CompilerGeneratedAttribute]
private void set_e(WeakReference value);
    [CompilerGeneratedAttribute]
private Object get_f();
    [CompilerGeneratedAttribute]
private void set_f(Object value);
    internal void CancelAction();
    internal static Drawable CreateDrawable(ImageView a, string b, bool c, bool d, ImageSettings e);
    internal static Drawable CreateDrawable(ImageView a, int b, bool c, bool d, ImageSettings e);
    internal static Drawable CreateDrawable(ImageView a, Byte[] b, bool c, bool d, ImageSettings e);
    internal static Drawable CreateDrawable(ImageView a, Bitmap b, bool c, bool d, ImageSettings e);
    internal static Drawable CreateDrawable(ImageView a, Drawable b, bool c, bool d, ImageSettings e);
    protected virtual void Dispose(bool a);
    protected virtual Object DoInBackground(Object[] a);
    private ImageView GetImageView();
    protected virtual void OnCancelled();
    protected virtual void OnPostExecute(Object a);
}
internal enum Intersoft.Crosslight.Android.ImageLoadingMode : Enum {
    public int value__;
    public static ImageLoadingMode a;
    public static ImageLoadingMode b;
}
public class Intersoft.Crosslight.Android.ImageSettings : object {
    [CompilerGeneratedAttribute]
private float a;
    [CompilerGeneratedAttribute]
private SizeF b;
    [CompilerGeneratedAttribute]
private int c;
    public float CornerRadius { get; public set; }
    public SizeF ImageSize { get; public set; }
    internal int Delay { get; internal set; }
    [CompilerGeneratedAttribute]
public float get_CornerRadius();
    [CompilerGeneratedAttribute]
public void set_CornerRadius(float value);
    [CompilerGeneratedAttribute]
public SizeF get_ImageSize();
    [CompilerGeneratedAttribute]
public void set_ImageSize(SizeF value);
    [CompilerGeneratedAttribute]
internal int get_Delay();
    [CompilerGeneratedAttribute]
internal void set_Delay(int value);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.ImageViewBindingAdapter : ImageViewBindingAdapter`1<ImageView> {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.ImageViewBindingAdapter`1 : ControlBindingAdapterBase`1<T> {
    internal virtual BindingAdapterContext ResolveContext();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Intersoft.Crosslight.Android.ImageViewExtensions : object {
    [ExtensionAttribute]
internal static void SetImageDrawable(ImageView a, Drawable b, bool c);
    [ExtensionAttribute]
public static void SetImagePlaceHolder(ImageView imageView, string imagePlaceholder);
    [ExtensionAttribute]
public static void SetImagePlaceHolder(ImageView imageView, ImageSettings imagesettings, string imagePlaceholder);
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.IMasterDetailFragment {
    public IViewModel ActiveChildListViewModel { get; public set; }
    public int DetailLayoutId { get; }
    public int MasterLayoutId { get; }
    public Stack`1<NavigationContext> NavigationStack { get; }
    public IFragment MasterFragment { get; public set; }
    public IFragment DetailFragment { get; public set; }
    public bool DontUseEmptyViewModel { get; public set; }
    public bool CacheDetailViewModel { get; public set; }
    public abstract virtual IViewModel get_ActiveChildListViewModel();
    public abstract virtual void set_ActiveChildListViewModel(IViewModel value);
    public abstract virtual int get_DetailLayoutId();
    public abstract virtual int get_MasterLayoutId();
    public abstract virtual Stack`1<NavigationContext> get_NavigationStack();
    public abstract virtual IFragment get_MasterFragment();
    public abstract virtual void set_MasterFragment(IFragment value);
    public abstract virtual IFragment get_DetailFragment();
    public abstract virtual void set_DetailFragment(IFragment value);
    public abstract virtual bool get_DontUseEmptyViewModel();
    public abstract virtual void set_DontUseEmptyViewModel(bool value);
    public abstract virtual bool get_CacheDetailViewModel();
    public abstract virtual void set_CacheDetailViewModel(bool value);
    public abstract virtual void Navigate(INavigable sender, NavigationTarget navigationTarget, NavigationOptions navigationOptions, NavigationContext navigationContext);
}
[ExtensionAttribute]
internal static class Intersoft.Crosslight.Android.IMenuItemExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static string GetMenuName(IMenuItem a, Context b);
}
[ExtensionAttribute]
internal static class Intersoft.Crosslight.Android.IMProtocolDataKindExtensions : object {
    [ExtensionAttribute]
internal static InstantMessagingService ToInstantMessagingService(IMProtocolDataKind a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.Infrastructure.ActivityContext : ViewContext {
    private string a;
    [CompilerGeneratedAttribute]
private TaskCompletionSource`1<Dictionary`2<string, bool>> b;
    [CompilerGeneratedAttribute]
private Action`1<object> c;
    [CompilerGeneratedAttribute]
private Stack`1<NavigationContext> d;
    [CompilerGeneratedAttribute]
private ActivityState e;
    public static int f;
    internal Activity Activity { get; }
    internal IActivity IActivity { get; }
    internal IFragmentActivity IFragmentActivity { get; }
    internal string Id { get; internal set; }
    internal TaskCompletionSource`1<Dictionary`2<string, bool>> PermissionTaskSource { get; internal set; }
    internal Action`1<object> ModalCallback { get; internal set; }
    internal Stack`1<NavigationContext> NavigationStack { get; internal set; }
    internal ActivityState State { get; internal set; }
    private static ActivityContext();
    internal Activity get_Activity();
    internal IActivity get_IActivity();
    internal IFragmentActivity get_IFragmentActivity();
    internal string get_Id();
    internal void set_Id(string value);
    [CompilerGeneratedAttribute]
internal TaskCompletionSource`1<Dictionary`2<string, bool>> get_PermissionTaskSource();
    [CompilerGeneratedAttribute]
internal void set_PermissionTaskSource(TaskCompletionSource`1<Dictionary`2<string, bool>> value);
    [CompilerGeneratedAttribute]
internal Action`1<object> get_ModalCallback();
    [CompilerGeneratedAttribute]
internal void set_ModalCallback(Action`1<object> value);
    [CompilerGeneratedAttribute]
internal Stack`1<NavigationContext> get_NavigationStack();
    [CompilerGeneratedAttribute]
internal void set_NavigationStack(Stack`1<NavigationContext> value);
    [CompilerGeneratedAttribute]
internal ActivityState get_State();
    [CompilerGeneratedAttribute]
internal void set_State(ActivityState value);
    internal virtual void InitializeNavigation();
    private void OnActivityResult(INavigable a, Result b, Intent c);
    [AsyncStateMachineAttribute("Intersoft.Crosslight.Android.Infrastructure.ActivityContext/a")]
public Task`1<Dictionary`2<string, bool>> CheckPermission(Activity a, String[] b);
    public void OnRequestPermission(Dictionary`2<string, bool> a);
    internal virtual void OnActivityResult(int a, Result b, Intent c);
    internal virtual bool OnBackPressed();
    internal virtual bool OnCreateOptionsMenu(IMenu a);
    internal virtual void OnDestroy();
    internal virtual void OnNewIntent(Intent a);
    internal virtual bool OnOptionsItemSelected(IMenuItem a);
    internal virtual void OnPause();
    internal virtual void OnRestart();
    internal virtual void OnRestoreNonConfigurationInstance();
    internal virtual void OnResume();
    internal virtual void OnRotate();
    internal virtual void OnStop();
    internal virtual void OnViewDismissed(NavigationResult a);
    internal virtual void OnViewDisposed();
    internal virtual void OnViewModelDisposed();
    internal virtual void OnViewModelPropertyChanged(PropertyChangedEventArgs a);
    internal virtual void RelaunchActivity();
    internal virtual void StartModalActivity(Intent a, int b, Action`1<object> c);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.Infrastructure.Context`2 : object {
    [CompilerGeneratedAttribute]
private TCoreContext a;
    [CompilerGeneratedAttribute]
private TViewContext b;
    internal TCoreContext Core { get; private set; }
    internal TViewContext View { get; private set; }
    internal Context`2(IViewContext a);
    [CompilerGeneratedAttribute]
internal TCoreContext get_Core();
    [CompilerGeneratedAttribute]
private void set_Core(TCoreContext value);
    [CompilerGeneratedAttribute]
internal TViewContext get_View();
    [CompilerGeneratedAttribute]
private void set_View(TViewContext value);
    public sealed virtual void Dispose();
    private sealed virtual override CContext Intersoft.Crosslight.Android.IContext.GetCoreContext();
    private sealed virtual override VContext Intersoft.Crosslight.Android.IContext.GetViewContext();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.Infrastructure.CoreContext : object {
    [CompilerGeneratedAttribute]
private IViewContext a;
    [CompilerGeneratedAttribute]
private List`1<BindingDefinition> b;
    [CompilerGeneratedAttribute]
private List`1<BindingContext> c;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> d;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> e;
    [CompilerGeneratedAttribute]
private ViewContext f;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> g;
    internal IViewContext Context { get; internal set; }
    internal List`1<BindingDefinition> PropertySets { get; internal set; }
    internal List`1<BindingContext> RegisteredBindings { get; internal set; }
    internal Dictionary`2<string, object> RegisteredComponents { get; internal set; }
    internal Dictionary`2<string, object> ViewAlias { get; internal set; }
    internal ViewContext ViewContext { get; internal set; }
    internal Nullable`1<bool> IsComponentInitialized { get; internal set; }
    [CompilerGeneratedAttribute]
internal IViewContext get_Context();
    [CompilerGeneratedAttribute]
internal void set_Context(IViewContext value);
    [CompilerGeneratedAttribute]
internal List`1<BindingDefinition> get_PropertySets();
    [CompilerGeneratedAttribute]
internal void set_PropertySets(List`1<BindingDefinition> value);
    [CompilerGeneratedAttribute]
internal List`1<BindingContext> get_RegisteredBindings();
    [CompilerGeneratedAttribute]
internal void set_RegisteredBindings(List`1<BindingContext> value);
    [CompilerGeneratedAttribute]
internal Dictionary`2<string, object> get_RegisteredComponents();
    [CompilerGeneratedAttribute]
internal void set_RegisteredComponents(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
internal Dictionary`2<string, object> get_ViewAlias();
    [CompilerGeneratedAttribute]
internal void set_ViewAlias(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
internal ViewContext get_ViewContext();
    [CompilerGeneratedAttribute]
internal void set_ViewContext(ViewContext value);
    [CompilerGeneratedAttribute]
internal Nullable`1<bool> get_IsComponentInitialized();
    [CompilerGeneratedAttribute]
internal void set_IsComponentInitialized(Nullable`1<bool> value);
    internal void AddBinding(View a, BindableProperty b, BindingDescription c);
    internal void AddBinding(View a, BindableProperty b, string c);
    internal void AddBinding(View a, BindableProperty b, string c, BindingMode d);
    internal void AddBinding(string a, BindableProperty b, BindingDescription c);
    internal void AddBinding(string a, BindableProperty b, string c);
    internal void AddBinding(string a, BindableProperty b, string c, BindingMode d);
    internal object FindName(string a);
    internal T FindName(string a);
    internal virtual TService GetService();
    internal virtual TService GetService(bool a);
    internal void ImportFromBindingProvider(IBindingProvider a);
    internal IBindingProvider ResolveBindingProvider();
    internal void ProcessPropertySets();
    internal void RegisterBindings();
    internal void InitializeComponents();
    internal void RegisterViewIdentifier(string a, object b);
    internal void UnregisterBindings();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.Infrastructure.DrawerActivityContext : FragmentActivityContext {
    private IViewService a { get; }
    private IViewService get_a();
    internal virtual void CloseNavigationDrawer();
    internal virtual ViewState CreateViewState();
    internal virtual void InvalidateNavigationListFragment();
    internal virtual void Navigate(INavigable a, NavigationTarget b, NavigationOptions c, NavigationContext d);
    internal virtual void NavigateHome();
    internal virtual bool OnBackPressed();
    internal virtual void OnFragmentAttached(IFragment a);
    internal virtual bool OnOptionsItemSelected(IMenuItem a);
    internal virtual Object OnRetainCustomNonConfigurationInstance();
    [CompilerGeneratedAttribute]
private void <CloseNavigationDrawer>b__2_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.Infrastructure.FormActivityContext : FragmentActivityContext {
    internal IForm IFormActivity { get; }
    internal IForm get_IFormActivity();
    internal virtual bool OnBackPressed();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.Infrastructure.FormContext : CoreContext {
    private Dictionary`2<PropertyDefinition, VisibilityBindingAttribute> h;
    internal IDetailViewModel DetailViewModel { get; }
    internal FormDefinition Form { get; }
    internal IForm IForm { get; }
    internal ISupportViewModel ISupportViewModel { get; }
    private Dictionary`2<PropertyDefinition, VisibilityBindingAttribute> a { get; }
    internal IDetailViewModel get_DetailViewModel();
    internal FormDefinition get_Form();
    internal IForm get_IForm();
    internal ISupportViewModel get_ISupportViewModel();
    private Dictionary`2<PropertyDefinition, VisibilityBindingAttribute> get_a();
    internal virtual void FinalizeFormBinding();
    private Type GetFormMetadataType(Type a);
    internal void PreInitializeForm(Type a);
    internal View InitializeForm(Type a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.Infrastructure.FormFragmentContext : FragmentContext {
    [CompilerGeneratedAttribute]
private bool g;
    internal IForm IForm { get; }
    internal bool IsCloseNavigationHandled { get; internal set; }
    internal IForm get_IForm();
    [CompilerGeneratedAttribute]
internal bool get_IsCloseNavigationHandled();
    [CompilerGeneratedAttribute]
internal void set_IsCloseNavigationHandled(bool value);
    internal virtual void DisposeFragment();
    internal virtual void OnDestroyView();
    private void CancelForm(object a);
    private void SaveForm(object a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.Infrastructure.FragmentActivityContext : ActivityContext {
    internal FragmentActivity FragmentActivity { get; }
    internal IDrawerActivity IDrawerActivity { get; }
    internal FragmentActivity get_FragmentActivity();
    internal IDrawerActivity get_IDrawerActivity();
    internal virtual void ApplyFragmentAttribute();
    internal virtual ViewState CreateViewState();
    internal virtual void FinalizeFragmentTransaction(FragmentTransaction a, NavigationTarget b, NavigationOptions c, NavigationContext d, Fragment e);
    internal IFragment FindFragmentById(int a);
    internal ViewState GetLastCustomNonConfigurationInstance();
    internal virtual void InitializeNavigation();
    internal virtual bool MasterDetailNavigateBack(IMasterDetailFragment a);
    internal virtual void Navigate(INavigable a, NavigationTarget b, NavigationOptions c);
    internal virtual void Navigate(INavigable a, NavigationTarget b, NavigationOptions c, NavigationContext d);
    internal virtual void NavigateBack(NavigationContext a, NavigationOptions b);
    internal virtual bool NavigateBack();
    internal virtual bool OnBackPressed();
    internal virtual void OnFragmentAttached(IFragment a);
    internal virtual void OnFragmentDetached(IFragment a);
    internal virtual bool OnOptionsItemSelected(IMenuItem a);
    internal virtual void OnRestoreCustomNonConfigurationInstance();
    internal virtual void OnResume();
    internal virtual Object OnRetainCustomNonConfigurationInstance();
    internal virtual void OnRotate();
    internal virtual void RemoveFragment(IFragment a);
    internal virtual IFragment ResolveFragment(NavigationTarget a, Bundle b, int c, bool d);
    internal virtual IFragment ResolveFragment(Type a, Bundle b, int c);
    internal virtual Type ResolveFragmentContextType(NavigationTarget a, bool b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.Infrastructure.FragmentContext : ViewContext {
    [CompilerGeneratedAttribute]
private List`1<int> h;
    [CompilerGeneratedAttribute]
private bool i;
    [CompilerGeneratedAttribute]
private bool j;
    [CompilerGeneratedAttribute]
private INavigable k;
    [CompilerGeneratedAttribute]
private NavigationItem l;
    [CompilerGeneratedAttribute]
private NavigationTarget m;
    [CompilerGeneratedAttribute]
private FragmentSupportContextV4 n;
    internal Fragment Fragment { get; }
    internal IFragment IFragment { get; }
    internal List`1<int> FragmentContainers { get; internal set; }
    internal bool IsMasterFragment { get; internal set; }
    internal bool IsNavigationInitialized { get; internal set; }
    internal INavigable NavigationInitiator { get; internal set; }
    internal NavigationItem NavigationItem { get; internal set; }
    internal NavigationTarget NavigationTarget { get; internal set; }
    internal FragmentSupportContextV4 SupportContext { get; internal set; }
    internal Fragment get_Fragment();
    internal IFragment get_IFragment();
    [CompilerGeneratedAttribute]
internal List`1<int> get_FragmentContainers();
    [CompilerGeneratedAttribute]
internal void set_FragmentContainers(List`1<int> value);
    [CompilerGeneratedAttribute]
internal bool get_IsMasterFragment();
    [CompilerGeneratedAttribute]
internal void set_IsMasterFragment(bool value);
    [CompilerGeneratedAttribute]
internal bool get_IsNavigationInitialized();
    [CompilerGeneratedAttribute]
internal void set_IsNavigationInitialized(bool value);
    [CompilerGeneratedAttribute]
internal INavigable get_NavigationInitiator();
    [CompilerGeneratedAttribute]
internal void set_NavigationInitiator(INavigable value);
    [CompilerGeneratedAttribute]
internal NavigationItem get_NavigationItem();
    [CompilerGeneratedAttribute]
internal void set_NavigationItem(NavigationItem value);
    [CompilerGeneratedAttribute]
internal NavigationTarget get_NavigationTarget();
    [CompilerGeneratedAttribute]
internal void set_NavigationTarget(NavigationTarget value);
    [CompilerGeneratedAttribute]
internal FragmentSupportContextV4 get_SupportContext();
    [CompilerGeneratedAttribute]
internal void set_SupportContext(FragmentSupportContextV4 value);
    internal virtual ViewState CreateViewState();
    internal virtual void DisposeFragment();
    internal void ForceNavigation();
    internal virtual void InitializeNavigation();
    internal virtual void Navigate(INavigable a, NavigationTarget b, NavigationOptions c);
    internal virtual void NavigateBack(NavigationContext a, NavigationOptions b);
    internal virtual void OnDestroyView();
    internal virtual void OnOptionsItemSelected(IMenuItem a);
    internal virtual void OnRestoreNonConfigurationInstance(ViewState a);
    internal virtual ViewState OnRetainNonConfigurationInstance();
    internal virtual void OnViewDisposed();
    internal virtual void OnViewInitialized();
    internal virtual void OnViewModelDisposed();
    public virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.Infrastructure.FragmentSupportContextV4 : object {
    [CompilerGeneratedAttribute]
private FragmentContext a;
    internal Fragment Fragment { get; }
    internal FragmentContext FragmentContext { get; internal set; }
    internal IFragment IFragment { get; }
    public FragmentSupportContextV4(FragmentContext a);
    internal Fragment get_Fragment();
    [CompilerGeneratedAttribute]
internal FragmentContext get_FragmentContext();
    [CompilerGeneratedAttribute]
internal void set_FragmentContext(FragmentContext value);
    internal IFragment get_IFragment();
    internal virtual void OnViewInitialized();
    internal virtual void RegisterComponents();
    internal virtual void SetDisplayHomeAsUpEnabled(bool a);
    internal virtual void SetIcon(int a);
    internal virtual void SetTitle(string a);
}
internal class Intersoft.Crosslight.Android.Infrastructure.MasterDetailFragmentContext : FragmentContext {
    internal virtual void InitializeNavigation();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.Infrastructure.ViewContext : object {
    [CompilerGeneratedAttribute]
private IViewContext o;
    [CompilerGeneratedAttribute]
private CoreContext p;
    [CompilerGeneratedAttribute]
private bool q;
    [CompilerGeneratedAttribute]
private bool r;
    internal IViewContext Context { get; internal set; }
    internal CoreContext CoreContext { get; internal set; }
    internal IDisposable IDisposable { get; }
    internal bool IsRotated { get; internal set; }
    internal bool IsRotating { get; internal set; }
    [CompilerGeneratedAttribute]
internal IViewContext get_Context();
    [CompilerGeneratedAttribute]
internal void set_Context(IViewContext value);
    [CompilerGeneratedAttribute]
internal CoreContext get_CoreContext();
    [CompilerGeneratedAttribute]
internal void set_CoreContext(CoreContext value);
    internal IDisposable get_IDisposable();
    [CompilerGeneratedAttribute]
internal bool get_IsRotated();
    [CompilerGeneratedAttribute]
internal void set_IsRotated(bool value);
    [CompilerGeneratedAttribute]
internal bool get_IsRotating();
    [CompilerGeneratedAttribute]
internal void set_IsRotating(bool value);
    internal virtual ViewState CreateViewState();
    internal virtual void InitializeNavigation();
    public virtual void Dispose();
}
internal class Intersoft.Crosslight.Android.Infrastructure.ViewPagerFragmentContext : FragmentContext {
    [NullableContextAttribute("1")]
internal virtual ViewState CreateViewState();
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.IPermissionActivity {
    public abstract virtual Task`1<Dictionary`2<string, bool>> CheckPermission(String[] permissions);
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.IPushNotificationDelegate {
    public abstract virtual void OnNotificationReceived(Intent intent);
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.IScrollView {
    public ChoiceInputMode ChoiceInputMode { get; }
    public ListViewInteraction InteractionMode { get; }
    public AbsListView ScrollView { get; }
    public abstract virtual ChoiceInputMode get_ChoiceInputMode();
    public abstract virtual ListViewInteraction get_InteractionMode();
    public abstract virtual AbsListView get_ScrollView();
    public abstract virtual void ScrollToTop();
    public abstract virtual void ScrollToBottom();
    public abstract virtual void ScrollToPosition(int position);
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.ISearchableListFragment {
    public abstract virtual void Filter(string queryText);
    public abstract virtual void RefreshAdapter();
}
public interface Intersoft.Crosslight.Android.ISearchActivity {
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.ISupportBannerPresenter {
    public abstract virtual void ShowWarningBanner(string message, long animationDurtion);
    public abstract virtual void ShowErrorBanner(string message, long animationDurtion);
    public abstract virtual void ShowSuccessBanner(string message, long animationDurtion);
    public abstract virtual void Hide(long animationDurtion);
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.ISupportDrawableState {
    public abstract virtual void SetDrawableState(Int32[] states);
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.ISupportLocationResult {
    public abstract virtual void RequestLocationUpdates(string provider, long minTime, float minDistance, Action`2<LocationRequest, List`1<object>> locationCallback);
}
public interface Intersoft.Crosslight.Android.ISupportMasterDetail {
    public bool IsMasterFragment { get; public set; }
    public abstract virtual bool get_IsMasterFragment();
    public abstract virtual void set_IsMasterFragment(bool value);
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.ISupportModalActivity {
    public abstract virtual void StartModalActivity(Intent intent, int requestCode, Action`1<object> callback);
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.ISupportSearchableActivity {
    public abstract virtual void HandleIntent(Intent intent);
}
public interface Intersoft.Crosslight.Android.ITabActivity {
}
public interface Intersoft.Crosslight.Android.ITabFragment {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Intersoft.Crosslight.Android.ItemBindingAdapterBase : object {
    private Dictionary`2<object, IEnumerable`1<BindingContext>> a;
    private Dictionary`2<object, IEnumerable`1<BindingContext>> b { get; }
    private Dictionary`2<object, IEnumerable`1<BindingContext>> get_b();
    public virtual bool Attach(object view, IViewModel viewModel, object model, IEnumerable`1<BindingContext> bindingContexts);
    public virtual void Detach(object view);
    protected void RegisterBindingContext(object view, IEnumerable`1<BindingContext> bindingContexts);
    protected void UnregisterBindingContext(object view);
    protected BindingContext GetBindingContext(object view, BindableProperty property);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ItemButtonBindingAdapter : ItemBindingAdapterBase {
    public virtual bool Attach(object view, IViewModel viewModel, object model, IEnumerable`1<BindingContext> bindingContexts);
    public virtual void Detach(object view);
    private void OnButtonClick(object a, EventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ItemCheckBoxBindingAdapter : ItemBindingAdapterBase {
    public virtual bool Attach(object view, IViewModel viewModel, object model, IEnumerable`1<BindingContext> bindingContexts);
    public virtual void Detach(object view);
    private void OnCheckedChanged(object a, CheckedChangeEventArgs b);
    private void UpdateCheckedSource(object a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ItemEditTextBindingAdapter : ItemBindingAdapterBase {
    public virtual bool Attach(object view, IViewModel viewModel, object model, IEnumerable`1<BindingContext> bindingContexts);
    public virtual void Detach(object view);
    private void OnFocusChange(object a, FocusChangeEventArgs b);
    private void OnTextChanged(object a, TextChangedEventArgs b);
    private void UpdateTextSource(object a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ItemNumericStepperBindingAdapter : ItemBindingAdapterBase {
    public virtual bool Attach(object view, IViewModel viewModel, object model, IEnumerable`1<BindingContext> bindingContexts);
    public virtual void Detach(object view);
    private void OnValueChanged(object a, ValueChangedEventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.ItemsAlertDialogSettings : AlertDialogSettings {
    [CompilerGeneratedAttribute]
private IListAdapter j;
    [CompilerGeneratedAttribute]
private EventHandler`1<DialogClickEventArgs> k;
    internal IListAdapter Adapter { get; internal set; }
    internal EventHandler`1<DialogClickEventArgs> ItemClickHandler { get; internal set; }
    [CompilerGeneratedAttribute]
internal IListAdapter get_Adapter();
    [CompilerGeneratedAttribute]
internal void set_Adapter(IListAdapter value);
    [CompilerGeneratedAttribute]
internal EventHandler`1<DialogClickEventArgs> get_ItemClickHandler();
    [CompilerGeneratedAttribute]
internal void set_ItemClickHandler(EventHandler`1<DialogClickEventArgs> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ItemSpinnerBindingAdapter : ItemBindingAdapterBase {
    public virtual bool Attach(object view, IViewModel viewModel, object model, IEnumerable`1<BindingContext> bindingContexts);
    public virtual void Detach(object view);
    private void OnItemSelected(object a, ItemSelectedEventArgs b);
    private void UpdateSelectedItemSource(object a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ItemToggleButtonBindingAdapter : ItemBindingAdapterBase {
    public virtual bool Attach(object view, IViewModel viewModel, object model, IEnumerable`1<BindingContext> bindingContexts);
    public virtual void Detach(object view);
    private void OnButtonClick(object a, EventArgs b);
    private void UpdateCheckedSource(object a);
}
public interface Intersoft.Crosslight.Android.IViewPagerActivity {
    [NullableContextAttribute("1")]
public abstract virtual IViewModel GetSelectedViewModel();
}
public interface Intersoft.Crosslight.Android.IViewPagerFragment {
    [NullableAttribute("1")]
public IFragment ActiveFragment { get; }
    [NullableContextAttribute("1")]
public abstract virtual IFragment get_ActiveFragment();
    [NullableContextAttribute("1")]
public abstract virtual IViewModel GetSelectedViewModel();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Intersoft.Crosslight.Android.ListActivity`1 : Activity`1<TViewModel> {
    [CompilerGeneratedAttribute]
private ViewTemplateSelector a;
    private ContextualActionBarSettings b;
    private bool c;
    [CompilerGeneratedAttribute]
private ListView d;
    [CompilerGeneratedAttribute]
private ViewGroup e;
    [CompilerGeneratedAttribute]
private ViewGroup f;
    [CompilerGeneratedAttribute]
private View g;
    [CompilerGeneratedAttribute]
private View h;
    [CompilerGeneratedAttribute]
private View i;
    [CompilerGeneratedAttribute]
private View j;
    [CompilerGeneratedAttribute]
private PopupMenu k;
    [CompilerGeneratedAttribute]
private IMenuItem l;
    [CompilerGeneratedAttribute]
private IListAdapter m;
    [CompilerGeneratedAttribute]
private bool n;
    [CompilerGeneratedAttribute]
private bool o;
    [CompilerGeneratedAttribute]
private bool p;
    private Dictionary`2<Type, IItemBindingAdapter> q;
    [CompilerGeneratedAttribute]
private SwipeRefreshLayout r;
    public ViewTemplateSelector CellTemplateSelector { get; public set; }
    public ListView ListView { get; private set; }
    private ViewGroup s { get; private set; }
    private ViewGroup t { get; private set; }
    private View u { get; private set; }
    private View v { get; private set; }
    private View w { get; private set; }
    private View x { get; private set; }
    private PopupMenu y { get; private set; }
    private IMenuItem z { get; private set; }
    public ImageSettings ImageSettings { get; }
    private IListAdapter aa { get; private set; }
    protected bool AnimateOnNewItems { get; }
    protected int ContentLayoutId { get; }
    protected ContextualActionBarSettings ContextualActionBarSettings { get; }
    public EditingOptions EditingOptions { get; }
    protected int EmptyListViewLayoutId { get; }
    protected bool FastScrollAlwaysVisible { get; }
    protected bool FastScrollEnabled { get; }
    protected int FastScrollLetters { get; }
    protected int FooterLayoutId { get; }
    protected int FooterProgressLayoutId { get; }
    protected int GroupItemLayoutId { get; }
    protected int HeaderLayoutId { get; }
    protected int HeaderProgressLayoutId { get; }
    protected BasicImageLoaderSettings ImageLoaderSettings { get; }
    protected int ListItemLayoutId { get; }
    protected int ListViewId { get; }
    protected int CheckedIcon { get; }
    protected int UncheckedIcon { get; }
    private bool ab { get; private set; }
    private bool ac { get; private set; }
    private bool ad { get; private set; }
    private bool ae { get; private set; }
    public ListViewInteraction InteractionMode { get; }
    public ChoiceInputMode ChoiceInputMode { get; }
    public bool AutoSelectFirstItem { get; }
    private AbsListView Intersoft.Crosslight.Android.IScrollView.ScrollView { get; }
    public Dictionary`2<Type, IItemBindingAdapter> ItemBindingAdapters { get; }
    public SwipeRefreshLayout SwipeRefreshLayout { get; private set; }
    protected ListActivity`1(TViewModel viewModel);
    protected ListActivity`1(IntPtr intPtr, JniHandleOwnership jniHandleOwnership);
    protected virtual void OnPostCreate(Bundle savedInstanceState);
    protected virtual void OnViewModelDisposed();
    protected virtual void OnViewDisposed();
    [CompilerGeneratedAttribute]
public ViewTemplateSelector get_CellTemplateSelector();
    [CompilerGeneratedAttribute]
public void set_CellTemplateSelector(ViewTemplateSelector value);
    [CompilerGeneratedAttribute]
public sealed virtual ListView get_ListView();
    [CompilerGeneratedAttribute]
private void set_ListView(ListView value);
    [CompilerGeneratedAttribute]
private ViewGroup get_s();
    [CompilerGeneratedAttribute]
private void set_s(ViewGroup value);
    [CompilerGeneratedAttribute]
private ViewGroup get_t();
    [CompilerGeneratedAttribute]
private void set_t(ViewGroup value);
    [CompilerGeneratedAttribute]
private View get_u();
    [CompilerGeneratedAttribute]
private void set_u(View value);
    [CompilerGeneratedAttribute]
private View get_v();
    [CompilerGeneratedAttribute]
private void set_v(View value);
    [CompilerGeneratedAttribute]
private View get_w();
    [CompilerGeneratedAttribute]
private void set_w(View value);
    [CompilerGeneratedAttribute]
private View get_x();
    [CompilerGeneratedAttribute]
private void set_x(View value);
    [CompilerGeneratedAttribute]
private PopupMenu get_y();
    [CompilerGeneratedAttribute]
private void set_y(PopupMenu value);
    [CompilerGeneratedAttribute]
private IMenuItem get_z();
    [CompilerGeneratedAttribute]
private void set_z(IMenuItem value);
    public virtual ImageSettings get_ImageSettings();
    [CompilerGeneratedAttribute]
private IListAdapter get_aa();
    [CompilerGeneratedAttribute]
private void set_aa(IListAdapter value);
    protected virtual bool get_AnimateOnNewItems();
    protected virtual int get_ContentLayoutId();
    protected virtual ContextualActionBarSettings get_ContextualActionBarSettings();
    public virtual EditingOptions get_EditingOptions();
    protected virtual int get_EmptyListViewLayoutId();
    protected virtual bool get_FastScrollAlwaysVisible();
    protected virtual bool get_FastScrollEnabled();
    protected virtual int get_FastScrollLetters();
    protected virtual int get_FooterLayoutId();
    protected virtual int get_FooterProgressLayoutId();
    protected virtual int get_GroupItemLayoutId();
    protected virtual int get_HeaderLayoutId();
    protected virtual int get_HeaderProgressLayoutId();
    protected virtual BasicImageLoaderSettings get_ImageLoaderSettings();
    protected virtual int get_ListItemLayoutId();
    protected virtual int get_ListViewId();
    protected virtual int get_CheckedIcon();
    protected virtual int get_UncheckedIcon();
    [CompilerGeneratedAttribute]
private bool get_ab();
    [CompilerGeneratedAttribute]
private void set_ab(bool value);
    private bool get_ac();
    private void set_ac(bool value);
    [CompilerGeneratedAttribute]
private bool get_ad();
    [CompilerGeneratedAttribute]
private void set_ad(bool value);
    [CompilerGeneratedAttribute]
private bool get_ae();
    [CompilerGeneratedAttribute]
private void set_ae(bool value);
    protected virtual void Initialize();
    protected virtual void InitializeView();
    protected virtual void OnViewCreated();
    private void OnListViewScrolled(object a, ScrollEventArgs b);
    private void InitializeListAdapter();
    protected virtual void OnViewModelPropertyChanged(PropertyChangedEventArgs e);
    public void SetAllItemChecked(bool isChecked);
    private void OnIsAllItemCheckedChanged(bool a, bool b);
    protected void SynchronizeCheckedItems();
    private void ApplySingleSelection();
    private void ApplyMultipleSelection();
    private void MakeFooterVisible(View a);
    public void RegisterItemBindingAdapter();
    public virtual ListViewInteraction get_InteractionMode();
    public virtual ChoiceInputMode get_ChoiceInputMode();
    public virtual bool get_AutoSelectFirstItem();
    private sealed virtual override AbsListView Intersoft.Crosslight.Android.IScrollView.get_ScrollView();
    public sealed virtual void ScrollToTop();
    public sealed virtual void ScrollToBottom();
    public sealed virtual void ScrollToPosition(int position);
    public virtual bool OnActionItemClicked(ActionMode mode, IMenuItem menuItem);
    public sealed virtual bool OnCreateActionMode(ActionMode mode, IMenu menu);
    public sealed virtual void OnDestroyActionMode(ActionMode mode);
    public sealed virtual bool OnPrepareActionMode(ActionMode mode, IMenu menu);
    public sealed virtual void OnItemCheckedStateChanged(ActionMode mode, int position, long id, bool isChecked);
    private void SynchronizeIsAllItemCheckedState();
    public sealed virtual Dictionary`2<Type, IItemBindingAdapter> get_ItemBindingAdapters();
    [CompilerGeneratedAttribute]
public SwipeRefreshLayout get_SwipeRefreshLayout();
    [CompilerGeneratedAttribute]
private void set_SwipeRefreshLayout(SwipeRefreshLayout value);
    public sealed virtual void OnRefresh();
    protected void InvalidateSwipeRefreshLayout();
    protected virtual bool CanRefresh();
    [CompilerGeneratedAttribute]
private void <ScrollToTop>b__126_0();
    [CompilerGeneratedAttribute]
private void <OnActionItemClicked>b__129_0(object a, MenuItemClickEventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Intersoft.Crosslight.Android.ListActivity`2 : ListActivity`1<TViewModel> {
    private ImageLoader a;
    private ImageLoader b { get; }
    private ImageLoader get_b();
    protected void LoadImageAsync(ImageView imageView, object imageSource, string imagePlaceholder);
    public virtual void PerformBinding(ListItemViewHolder viewHolder, TViewModel viewModel, TModel model);
    private sealed virtual override void Intersoft.Crosslight.Android.IItemViewModelBinder.PerformBinding(ListItemViewHolder a, IViewModel b, object c);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Intersoft.Crosslight.Android.ListFragment`1 : ListFragment {
    [CompilerGeneratedAttribute]
private TViewModel a;
    [CompilerGeneratedAttribute]
private bool b;
    [CompilerGeneratedAttribute]
private bool c;
    [CompilerGeneratedAttribute]
private bool d;
    [CompilerGeneratedAttribute]
private bool e;
    [CompilerGeneratedAttribute]
private ViewTemplateSelector f;
    private ListView g;
    private ContextualActionBarSettings h;
    private bool i;
    private bool j;
    private List`1<BindingDefinition> k;
    private LocationManager l;
    private bool m;
    private List`1<BindingContext> n;
    private Dictionary`2<string, object> o;
    private TViewModel p;
    [CompilerGeneratedAttribute]
private ViewGroup q;
    [CompilerGeneratedAttribute]
private ViewGroup r;
    [CompilerGeneratedAttribute]
private View s;
    [CompilerGeneratedAttribute]
private View t;
    [CompilerGeneratedAttribute]
private View u;
    [CompilerGeneratedAttribute]
private View v;
    [CompilerGeneratedAttribute]
private PopupMenu w;
    [CompilerGeneratedAttribute]
private IMenuItem x;
    [CompilerGeneratedAttribute]
private Action`2<LocationRequest, List`1<object>> y;
    [CompilerGeneratedAttribute]
private INavigable z;
    [CompilerGeneratedAttribute]
private bool aa;
    [CompilerGeneratedAttribute]
private bool ab;
    [CompilerGeneratedAttribute]
private bool ac;
    [CompilerGeneratedAttribute]
private bool ad;
    [CompilerGeneratedAttribute]
private NavigationTarget ae;
    [CompilerGeneratedAttribute]
private NavigationItem af;
    [CompilerGeneratedAttribute]
private Type ag;
    [CompilerGeneratedAttribute]
private Action`1<IContentPresenterSettings> ah;
    [CompilerGeneratedAttribute]
private bool ai;
    [CompilerGeneratedAttribute]
private ActionMode aj;
    private Dictionary`2<Type, IItemBindingAdapter> ak;
    [CompilerGeneratedAttribute]
private SwipeRefreshLayout al;
    public TViewModel ViewModel { get; protected set; }
    protected bool IsRotating { get; private set; }
    protected bool IsRotated { get; private set; }
    protected bool IsDisposed { get; private set; }
    protected bool ShouldHandleNavigation { get; }
    private bool Intersoft.Crosslight.Android.IFragment.IsNavigating { get; private set; }
    internal bool IsNavigating { get; internal set; }
    public ViewTemplateSelector CellTemplateSelector { get; public set; }
    private ViewGroup am { get; private set; }
    private ViewGroup an { get; private set; }
    private View ao { get; private set; }
    private View ap { get; private set; }
    private View aq { get; private set; }
    private View ar { get; private set; }
    private PopupMenu as { get; private set; }
    private IMenuItem at { get; private set; }
    public ImageSettings ImageSettings { get; }
    public LocationManager LocationManager { get; }
    private Action`2<LocationRequest, List`1<object>> au { get; private set; }
    protected bool ShowActionBarUpButton { get; }
    protected bool AnimateOnNewItems { get; }
    protected int BackgroundDrawableId { get; }
    protected int ContentLayoutId { get; }
    protected int ListViewId { get; }
    public ListView ListView { get; }
    protected ContextualActionBarSettings ContextualActionBarSettings { get; }
    public EditingOptions EditingOptions { get; }
    protected int EmptyListViewLayoutId { get; }
    protected bool FastScrollAlwaysVisible { get; }
    protected bool FastScrollEnabled { get; }
    protected int FastScrollLetters { get; }
    protected int FooterLayoutId { get; }
    protected int FooterProgressLayoutId { get; }
    protected int GroupItemLayoutId { get; }
    protected int HeaderLayoutId { get; }
    protected int HeaderProgressLayoutId { get; }
    protected int IconId { get; }
    protected BasicImageLoaderSettings ImageLoaderSettings { get; }
    protected int ListItemLayoutId { get; }
    protected int CheckedIcon { get; }
    protected int UncheckedIcon { get; }
    protected int MenuLayoutId { get; }
    public INavigable NavigationInitiator { get; public set; }
    protected Dictionary`2<Type, int> NestedFragments { get; }
    internal List`1<BindingDefinition> PropertySets { get; }
    internal List`1<BindingContext> RegisteredBindings { get; }
    private Dictionary`2<string, object> av { get; }
    protected string Title { get; }
    private bool aw { get; private set; }
    private bool ax { get; private set; }
    private bool ay { get; private set; }
    private bool az { get; private set; }
    private bool ba { get; private set; }
    private NavigationTarget bb { get; private set; }
    private NavigationItem bc { get; private set; }
    private Type bd { get; private set; }
    private Action`1<IContentPresenterSettings> be { get; private set; }
    private bool Intersoft.Crosslight.Android.IFragment.ShowActionBarUpButton { get; }
    public bool ShouldNotDispose { get; public set; }
    public ListViewInteraction InteractionMode { get; }
    public ChoiceInputMode ChoiceInputMode { get; }
    public bool AutoSelectFirstItem { get; }
    private AbsListView Intersoft.Crosslight.Android.IScrollView.ScrollView { get; }
    private NavigationTarget Intersoft.Crosslight.Android.IFragment.NavigationTarget { get; private set; }
    private NavigationItem Intersoft.Crosslight.Android.IFragment.NavigationItem { get; private set; }
    private Type Intersoft.Crosslight.Android.IFragment.DialogPresenterType { get; private set; }
    private Action`1<IContentPresenterSettings> Intersoft.Crosslight.Android.IFragment.DialogPresenterSettingsCallback { get; private set; }
    private ActionMode bf { get; private set; }
    private IViewModel Intersoft.Crosslight.ISupportViewModel.ViewModel { get; }
    private bool Intersoft.Crosslight.Android.ISupportMasterDetail.IsMasterFragment { get; private set; }
    public Dictionary`2<Type, IItemBindingAdapter> ItemBindingAdapters { get; }
    public SwipeRefreshLayout SwipeRefreshLayout { get; private set; }
    private int Intersoft.Crosslight.Android.IFragment.MenuLayoutId { get; }
    private int Intersoft.Crosslight.Android.IFragment.IconId { get; }
    private string Intersoft.Crosslight.Android.IFragment.Title { get; }
    private List`1<int> Intersoft.Crosslight.Android.IFragment.SourceSharedElementIds { get; }
    private List`1<int> Intersoft.Crosslight.Android.IFragment.TargetSharedElementIds { get; }
    private Dictionary`2<string, View> Intersoft.Crosslight.Android.IFragment.SourceSharedElements { get; }
    private Dictionary`2<string, View> Intersoft.Crosslight.Android.IFragment.TargetSharedElements { get; }
    protected ListFragment`1(IntPtr intPtr, JniHandleOwnership handleOwnership);
    protected ListFragment`1(TViewModel viewModel);
    [CompilerGeneratedAttribute]
public TViewModel get_ViewModel();
    [CompilerGeneratedAttribute]
protected void set_ViewModel(TViewModel value);
    [CompilerGeneratedAttribute]
protected bool get_IsRotating();
    [CompilerGeneratedAttribute]
private void set_IsRotating(bool value);
    [CompilerGeneratedAttribute]
protected bool get_IsRotated();
    [CompilerGeneratedAttribute]
private void set_IsRotated(bool value);
    [CompilerGeneratedAttribute]
protected bool get_IsDisposed();
    [CompilerGeneratedAttribute]
private void set_IsDisposed(bool value);
    protected virtual bool get_ShouldHandleNavigation();
    public virtual void OnAttach(Activity activity);
    public virtual void OnCreate(Bundle savedInstanceState);
    public virtual void OnViewCreated(View view, Bundle bundle);
    private void PerformNavigation();
    public sealed virtual void ForceNavigation();
    protected virtual void OnRotate();
    public virtual void OnStart();
    public virtual void OnStop();
    public virtual void OnDestroyView();
    public virtual void OnDestroy();
    public virtual void DisposeFragment();
    protected virtual void Dispose(bool disposing);
    protected virtual void OnRestoreNonConfigurationInstance(ViewState viewState);
    protected virtual ViewState OnRetainNonConfigurationInstance();
    private sealed virtual override bool Intersoft.Crosslight.Android.IFragment.get_IsNavigating();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.set_IsNavigating(bool value);
    [CompilerGeneratedAttribute]
internal bool get_IsNavigating();
    [CompilerGeneratedAttribute]
internal void set_IsNavigating(bool value);
    protected virtual void InitializeViewModel();
    protected virtual void OnViewNavigated();
    protected virtual void OnViewModelDisposed();
    protected virtual void OnViewDisposed();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.OnViewDisposed();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.OnViewModelDisposed();
    protected virtual void OnViewModelResourcesChanged();
    protected virtual ViewState CreateViewState();
    private void ViewModel_PropertyChanged(object a, PropertyChangedEventArgs b);
    [CompilerGeneratedAttribute]
public ViewTemplateSelector get_CellTemplateSelector();
    [CompilerGeneratedAttribute]
public void set_CellTemplateSelector(ViewTemplateSelector value);
    [CompilerGeneratedAttribute]
private ViewGroup get_am();
    [CompilerGeneratedAttribute]
private void set_am(ViewGroup value);
    [CompilerGeneratedAttribute]
private ViewGroup get_an();
    [CompilerGeneratedAttribute]
private void set_an(ViewGroup value);
    [CompilerGeneratedAttribute]
private View get_ao();
    [CompilerGeneratedAttribute]
private void set_ao(View value);
    [CompilerGeneratedAttribute]
private View get_ap();
    [CompilerGeneratedAttribute]
private void set_ap(View value);
    [CompilerGeneratedAttribute]
private View get_aq();
    [CompilerGeneratedAttribute]
private void set_aq(View value);
    [CompilerGeneratedAttribute]
private View get_ar();
    [CompilerGeneratedAttribute]
private void set_ar(View value);
    [CompilerGeneratedAttribute]
private PopupMenu get_as();
    [CompilerGeneratedAttribute]
private void set_as(PopupMenu value);
    [CompilerGeneratedAttribute]
private IMenuItem get_at();
    [CompilerGeneratedAttribute]
private void set_at(IMenuItem value);
    public virtual ImageSettings get_ImageSettings();
    public LocationManager get_LocationManager();
    [CompilerGeneratedAttribute]
private Action`2<LocationRequest, List`1<object>> get_au();
    [CompilerGeneratedAttribute]
private void set_au(Action`2<LocationRequest, List`1<object>> value);
    protected virtual bool get_ShowActionBarUpButton();
    protected virtual bool get_AnimateOnNewItems();
    protected virtual int get_BackgroundDrawableId();
    protected virtual int get_ContentLayoutId();
    protected virtual int get_ListViewId();
    public virtual ListView get_ListView();
    protected virtual ContextualActionBarSettings get_ContextualActionBarSettings();
    public virtual EditingOptions get_EditingOptions();
    protected virtual int get_EmptyListViewLayoutId();
    protected virtual bool get_FastScrollAlwaysVisible();
    protected virtual bool get_FastScrollEnabled();
    protected virtual int get_FastScrollLetters();
    protected virtual int get_FooterLayoutId();
    protected virtual int get_FooterProgressLayoutId();
    protected virtual int get_GroupItemLayoutId();
    protected virtual int get_HeaderLayoutId();
    protected virtual int get_HeaderProgressLayoutId();
    protected virtual int get_IconId();
    protected virtual BasicImageLoaderSettings get_ImageLoaderSettings();
    protected virtual int get_ListItemLayoutId();
    protected virtual int get_CheckedIcon();
    protected virtual int get_UncheckedIcon();
    protected virtual int get_MenuLayoutId();
    [CompilerGeneratedAttribute]
public INavigable get_NavigationInitiator();
    [CompilerGeneratedAttribute]
public void set_NavigationInitiator(INavigable value);
    protected virtual Dictionary`2<Type, int> get_NestedFragments();
    internal List`1<BindingDefinition> get_PropertySets();
    internal List`1<BindingContext> get_RegisteredBindings();
    private Dictionary`2<string, object> get_av();
    protected virtual string get_Title();
    [CompilerGeneratedAttribute]
private bool get_aw();
    [CompilerGeneratedAttribute]
private void set_aw(bool value);
    private bool get_ax();
    private void set_ax(bool value);
    [CompilerGeneratedAttribute]
private bool get_ay();
    [CompilerGeneratedAttribute]
private void set_ay(bool value);
    [CompilerGeneratedAttribute]
private bool get_az();
    [CompilerGeneratedAttribute]
private void set_az(bool value);
    [CompilerGeneratedAttribute]
private bool get_ba();
    [CompilerGeneratedAttribute]
private void set_ba(bool value);
    [CompilerGeneratedAttribute]
private NavigationTarget get_bb();
    [CompilerGeneratedAttribute]
private void set_bb(NavigationTarget value);
    [CompilerGeneratedAttribute]
private NavigationItem get_bc();
    [CompilerGeneratedAttribute]
private void set_bc(NavigationItem value);
    [CompilerGeneratedAttribute]
private Type get_bd();
    [CompilerGeneratedAttribute]
private void set_bd(Type value);
    [CompilerGeneratedAttribute]
private Action`1<IContentPresenterSettings> get_be();
    [CompilerGeneratedAttribute]
private void set_be(Action`1<IContentPresenterSettings> value);
    protected virtual void Initialize();
    public void AddBinding(View targetView, BindableProperty property, BindingDescription binding);
    public void AddBinding(View targetView, BindableProperty property, string path);
    public void AddBinding(View targetView, BindableProperty property, string path, BindingMode mode);
    public void AddBinding(string targetViewName, BindableProperty property, BindingDescription binding);
    public void AddBinding(string targetViewName, BindableProperty property, string path);
    public void AddBinding(string targetViewName, BindableProperty property, string path, BindingMode mode);
    protected virtual TViewModel CreateViewModel();
    private void ImportFromBindingProvider();
    protected virtual void InitializeBindings();
    protected virtual void InitializeListAdapter();
    private void InitializeNavigation();
    protected virtual void InitializeNestedFragments();
    protected virtual void InitializeView();
    private void MakeFooterVisible(View a);
    public virtual void OnCreateOptionsMenu(IMenu menu, MenuInflater inflater);
    public virtual View OnCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState);
    public virtual bool OnOptionsItemSelected(IMenuItem item);
    protected virtual void OnViewCreated();
    private void OnListViewScrolled(object a, ScrollEventArgs b);
    protected virtual void OnViewInitialized();
    protected virtual void OnViewModelPropertyChanged(PropertyChangedEventArgs e);
    private void ProcessPropertySets();
    public void RegisterItemBindingAdapter();
    private void RegisterBindings();
    private void UnregisterBindings();
    public void RegisterViewIdentifier(string id, object view);
    public void ReinitializeBinding(string targetViewName, BindableProperty property);
    private void ReinitializeViewModel(TViewModel a);
    public void SetAllItemChecked(bool isChecked);
    private void OnIsAllItemCheckedChanged(bool a, bool b);
    protected void SynchronizeCheckedItems();
    private void ApplySingleSelection();
    private void ApplyMultipleSelection();
    private sealed virtual override bool Intersoft.Crosslight.Android.IFragment.get_ShowActionBarUpButton();
    [CompilerGeneratedAttribute]
public bool get_ShouldNotDispose();
    [CompilerGeneratedAttribute]
public void set_ShouldNotDispose(bool value);
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.NavigateBack(NavigationContext a, NavigationOptions b);
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.Navigate(INavigable a, NavigationTarget b, NavigationOptions c);
    public virtual void OnAttached(INavigable sender);
    public sealed virtual void SetViewModel(IViewModel viewModel);
    public virtual void SetActivateOnItemClick(bool activateOnItemClick);
    public virtual ListViewInteraction get_InteractionMode();
    public virtual ChoiceInputMode get_ChoiceInputMode();
    public virtual bool get_AutoSelectFirstItem();
    private sealed virtual override AbsListView Intersoft.Crosslight.Android.IScrollView.get_ScrollView();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.OnRestoreNonConfigurationInstance(ViewState a);
    private sealed virtual override ViewState Intersoft.Crosslight.Android.IFragment.OnRetainNonConfigurationInstance();
    private sealed virtual override NavigationTarget Intersoft.Crosslight.Android.IFragment.get_NavigationTarget();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.set_NavigationTarget(NavigationTarget value);
    private sealed virtual override NavigationItem Intersoft.Crosslight.Android.IFragment.get_NavigationItem();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.set_NavigationItem(NavigationItem value);
    public sealed virtual void ScrollToTop();
    public sealed virtual void ScrollToBottom();
    public sealed virtual void ScrollToPosition(int position);
    private sealed virtual override Type Intersoft.Crosslight.Android.IFragment.get_DialogPresenterType();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.set_DialogPresenterType(Type value);
    private sealed virtual override Action`1<IContentPresenterSettings> Intersoft.Crosslight.Android.IFragment.get_DialogPresenterSettingsCallback();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.set_DialogPresenterSettingsCallback(Action`1<IContentPresenterSettings> value);
    public virtual bool OnActionItemClicked(ActionMode mode, IMenuItem menuItem);
    [CompilerGeneratedAttribute]
private ActionMode get_bf();
    [CompilerGeneratedAttribute]
private void set_bf(ActionMode value);
    public sealed virtual bool OnCreateActionMode(ActionMode mode, IMenu menu);
    public sealed virtual void OnDestroyActionMode(ActionMode mode);
    public sealed virtual bool OnPrepareActionMode(ActionMode mode, IMenu menu);
    public sealed virtual void OnItemCheckedStateChanged(ActionMode mode, int position, long id, bool isChecked);
    private void SynchronizeIsAllItemCheckedState();
    private sealed virtual override void Intersoft.Crosslight.IViewContext.OnViewDismissed(NavigationResult a);
    public sealed virtual object FindName(string name);
    public sealed virtual T FindName(string name);
    public virtual TService GetService();
    public virtual TService GetService(bool newInstance);
    public sealed virtual void OnLocationChanged(Location location);
    public sealed virtual void OnProviderDisabled(string provider);
    public sealed virtual void OnProviderEnabled(string provider);
    public sealed virtual void OnStatusChanged(string provider, Availability status, Bundle extras);
    public sealed virtual void RequestLocationUpdates(string provider, long minTime, float minDistance, Action`2<LocationRequest, List`1<object>> locationCallback);
    private sealed virtual override IViewModel Intersoft.Crosslight.ISupportViewModel.get_ViewModel();
    private sealed virtual override bool Intersoft.Crosslight.Android.ISupportMasterDetail.get_IsMasterFragment();
    private sealed virtual override void Intersoft.Crosslight.Android.ISupportMasterDetail.set_IsMasterFragment(bool value);
    public sealed virtual Dictionary`2<Type, IItemBindingAdapter> get_ItemBindingAdapters();
    [CompilerGeneratedAttribute]
public SwipeRefreshLayout get_SwipeRefreshLayout();
    [CompilerGeneratedAttribute]
private void set_SwipeRefreshLayout(SwipeRefreshLayout value);
    public sealed virtual void OnRefresh();
    protected void InvalidateSwipeRefreshLayout();
    protected virtual bool CanRefresh();
    private sealed virtual override int Intersoft.Crosslight.Android.IFragment.get_MenuLayoutId();
    private sealed virtual override int Intersoft.Crosslight.Android.IFragment.get_IconId();
    private sealed virtual override string Intersoft.Crosslight.Android.IFragment.get_Title();
    private sealed virtual override List`1<int> Intersoft.Crosslight.Android.IFragment.get_SourceSharedElementIds();
    private sealed virtual override List`1<int> Intersoft.Crosslight.Android.IFragment.get_TargetSharedElementIds();
    private sealed virtual override Dictionary`2<string, View> Intersoft.Crosslight.Android.IFragment.get_SourceSharedElements();
    private sealed virtual override Dictionary`2<string, View> Intersoft.Crosslight.Android.IFragment.get_TargetSharedElements();
    private sealed virtual override Bundle Intersoft.Crosslight.Android.IFragment.get_Arguments();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.set_Arguments(Bundle a);
    [CompilerGeneratedAttribute]
private void <ScrollToTop>b__261_0();
    [CompilerGeneratedAttribute]
private void <OnActionItemClicked>b__270_0(object a, MenuItemClickEventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Intersoft.Crosslight.Android.ListFragment`2 : ListFragment`1<TViewModel> {
    private ImageLoader a;
    private ImageLoader b { get; }
    private ImageLoader get_b();
    protected void LoadImageAsync(ImageView imageView, object imageSource, string imagePlaceholder);
    public virtual void PerformBinding(ListItemViewHolder viewHolder, TViewModel viewModel, TModel model);
    private sealed virtual override void Intersoft.Crosslight.Android.IItemViewModelBinder.PerformBinding(ListItemViewHolder a, IViewModel b, object c);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ListItemViewHolder : ViewHolder {
    [CompilerGeneratedAttribute]
private TextView b;
    [CompilerGeneratedAttribute]
private TextView c;
    [CompilerGeneratedAttribute]
private TextView d;
    [CompilerGeneratedAttribute]
private ImageView e;
    [CompilerGeneratedAttribute]
private ImageButton f;
    public TextView DisplayTextView { get; public set; }
    public TextView DetailTextView { get; public set; }
    public TextView GroupTextView { get; public set; }
    public ImageView ImageView { get; public set; }
    public ImageButton DetailButton { get; public set; }
    [CompilerGeneratedAttribute]
public TextView get_DisplayTextView();
    [CompilerGeneratedAttribute]
public void set_DisplayTextView(TextView value);
    [CompilerGeneratedAttribute]
public TextView get_DetailTextView();
    [CompilerGeneratedAttribute]
public void set_DetailTextView(TextView value);
    [CompilerGeneratedAttribute]
public TextView get_GroupTextView();
    [CompilerGeneratedAttribute]
public void set_GroupTextView(TextView value);
    [CompilerGeneratedAttribute]
public ImageView get_ImageView();
    [CompilerGeneratedAttribute]
public void set_ImageView(ImageView value);
    [CompilerGeneratedAttribute]
public ImageButton get_DetailButton();
    [CompilerGeneratedAttribute]
public void set_DetailButton(ImageButton value);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.ListViewBindingAdapter : AbsListViewBindingAdapter`1<ListView> {
}
public enum Intersoft.Crosslight.Android.ListViewInteraction : Enum {
    public int value__;
    public static ListViewInteraction Standard;
    public static ListViewInteraction ChoiceInput;
    public static ListViewInteraction Navigation;
    public static ListViewInteraction None;
}
public enum Intersoft.Crosslight.Android.LocationRequest : Enum {
    public int value__;
    public static LocationRequest OnLocationChanged;
    public static LocationRequest OnProviderDisabled;
    public static LocationRequest OnProviderEnabled;
    public static LocationRequest OnStatusChanged;
}
public class Intersoft.Crosslight.Android.LocationRequestPriority : object {
    public static int BalancedPowerAccuracy;
    public static int HighAccuracy;
    public static int LowPower;
    public static int NoPower;
}
internal class Intersoft.Crosslight.Android.Log : object {
    [NullableContextAttribute("1")]
internal static void Write(string a, string b);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Intersoft.Crosslight.Android.MasterDetailFragment`1 : Fragment`1<TMasterViewModel> {
    private Stack`1<NavigationContext> a;
    [CompilerGeneratedAttribute]
private bool b;
    [CompilerGeneratedAttribute]
private bool c;
    [CompilerGeneratedAttribute]
private IFragment d;
    [CompilerGeneratedAttribute]
private IFragment e;
    [CompilerGeneratedAttribute]
private IViewModel f;
    protected bool ShouldHandleNavigation { get; }
    public bool CacheDetailViewModel { get; public set; }
    public bool DontUseEmptyViewModel { get; public set; }
    protected int ContentLayoutId { get; }
    public IFragment MasterFragment { get; public set; }
    public IFragment DetailFragment { get; public set; }
    private IViewModel Intersoft.Crosslight.Android.IMasterDetailFragment.ActiveChildListViewModel { get; private set; }
    public int DetailLayoutId { get; }
    public int MasterLayoutId { get; }
    private Stack`1<NavigationContext> Intersoft.Crosslight.Android.IMasterDetailFragment.NavigationStack { get; }
    protected MasterDetailFragment`1(IntPtr intPtr, JniHandleOwnership jniHandleOwnership);
    protected virtual bool get_ShouldHandleNavigation();
    public virtual void DisposeFragment();
    protected virtual void OnRestoreNonConfigurationInstance(ViewState viewState);
    protected virtual ViewState OnRetainNonConfigurationInstance();
    protected virtual ViewState CreateViewState();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_CacheDetailViewModel();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CacheDetailViewModel(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_DontUseEmptyViewModel();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DontUseEmptyViewModel(bool value);
    protected virtual int get_ContentLayoutId();
    [CompilerGeneratedAttribute]
public virtual IFragment get_MasterFragment();
    [CompilerGeneratedAttribute]
public virtual void set_MasterFragment(IFragment value);
    [CompilerGeneratedAttribute]
public virtual IFragment get_DetailFragment();
    [CompilerGeneratedAttribute]
public virtual void set_DetailFragment(IFragment value);
    protected virtual void InitializeNestedFragments();
    public sealed virtual void Navigate(INavigable sender, NavigationTarget navigationTarget, NavigationOptions navigationOptions, NavigationContext navigationContext);
    [CompilerGeneratedAttribute]
private sealed virtual override IViewModel Intersoft.Crosslight.Android.IMasterDetailFragment.get_ActiveChildListViewModel();
    [CompilerGeneratedAttribute]
private sealed virtual override void Intersoft.Crosslight.Android.IMasterDetailFragment.set_ActiveChildListViewModel(IViewModel value);
    public virtual int get_DetailLayoutId();
    public virtual int get_MasterLayoutId();
    private sealed virtual override Stack`1<NavigationContext> Intersoft.Crosslight.Android.IMasterDetailFragment.get_NavigationStack();
    private sealed virtual override Bundle Intersoft.Crosslight.Android.IFragment.get_Arguments();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.set_Arguments(Bundle a);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Intersoft.Crosslight.Android.MasterDetailFragment`2 : Fragment`1<TMasterViewModel> {
    private Stack`1<NavigationContext> a;
    [CompilerGeneratedAttribute]
private bool b;
    [CompilerGeneratedAttribute]
private bool c;
    [CompilerGeneratedAttribute]
private IFragment d;
    [CompilerGeneratedAttribute]
private IFragment e;
    [CompilerGeneratedAttribute]
private IViewModel f;
    protected bool ShouldHandleNavigation { get; }
    public bool CacheDetailViewModel { get; public set; }
    public bool DontUseEmptyViewModel { get; public set; }
    protected int ContentLayoutId { get; }
    public IFragment MasterFragment { get; public set; }
    public IFragment DetailFragment { get; public set; }
    private IViewModel Intersoft.Crosslight.Android.IMasterDetailFragment.ActiveChildListViewModel { get; private set; }
    public int DetailLayoutId { get; }
    public int MasterLayoutId { get; }
    private Stack`1<NavigationContext> Intersoft.Crosslight.Android.IMasterDetailFragment.NavigationStack { get; }
    protected MasterDetailFragment`2(IntPtr intPtr, JniHandleOwnership jniHandleOwnership);
    protected virtual bool get_ShouldHandleNavigation();
    public virtual void DisposeFragment();
    protected virtual void OnRestoreNonConfigurationInstance(ViewState viewState);
    protected virtual ViewState OnRetainNonConfigurationInstance();
    protected virtual ViewState CreateViewState();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_CacheDetailViewModel();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CacheDetailViewModel(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_DontUseEmptyViewModel();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DontUseEmptyViewModel(bool value);
    protected virtual int get_ContentLayoutId();
    [CompilerGeneratedAttribute]
public virtual IFragment get_MasterFragment();
    [CompilerGeneratedAttribute]
public virtual void set_MasterFragment(IFragment value);
    [CompilerGeneratedAttribute]
public virtual IFragment get_DetailFragment();
    [CompilerGeneratedAttribute]
public virtual void set_DetailFragment(IFragment value);
    protected virtual void InitializeNestedFragments();
    public sealed virtual void Navigate(INavigable sender, NavigationTarget navigationTarget, NavigationOptions navigationOptions, NavigationContext navigationContext);
    [CompilerGeneratedAttribute]
private sealed virtual override IViewModel Intersoft.Crosslight.Android.IMasterDetailFragment.get_ActiveChildListViewModel();
    [CompilerGeneratedAttribute]
private sealed virtual override void Intersoft.Crosslight.Android.IMasterDetailFragment.set_ActiveChildListViewModel(IViewModel value);
    public virtual int get_DetailLayoutId();
    public virtual int get_MasterLayoutId();
    private sealed virtual override Stack`1<NavigationContext> Intersoft.Crosslight.Android.IMasterDetailFragment.get_NavigationStack();
    private sealed virtual override Bundle Intersoft.Crosslight.Android.IFragment.get_Arguments();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.set_Arguments(Bundle a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.MasterDetailViewState : ViewState {
    [CompilerGeneratedAttribute]
private Stack`1<NavigationContext> j;
    [CompilerGeneratedAttribute]
private ViewState k;
    [CompilerGeneratedAttribute]
private ViewState l;
    public Stack`1<NavigationContext> MasterDetailNavigationStack { get; internal set; }
    public ViewState MasterFragmentViewState { get; internal set; }
    public ViewState DetailFragmentViewState { get; internal set; }
    [CompilerGeneratedAttribute]
public Stack`1<NavigationContext> get_MasterDetailNavigationStack();
    [CompilerGeneratedAttribute]
internal void set_MasterDetailNavigationStack(Stack`1<NavigationContext> value);
    [CompilerGeneratedAttribute]
public ViewState get_MasterFragmentViewState();
    [CompilerGeneratedAttribute]
internal void set_MasterFragmentViewState(ViewState value);
    [CompilerGeneratedAttribute]
public ViewState get_DetailFragmentViewState();
    [CompilerGeneratedAttribute]
internal void set_DetailFragmentViewState(ViewState value);
}
public class Intersoft.Crosslight.Android.MaxLengthInputFilter : Object {
    private int a;
    public MaxLengthInputFilter(int maxLength);
    [NullableContextAttribute("1")]
public sealed virtual ICharSequence FilterFormatted(ICharSequence source, int start, int end, ISpanned dest, int dstart, int dend);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Intersoft.Crosslight.Android.MenuCommandManager : object {
    internal static Dictionary`2<IViewContext, List`1<IMenu>> RegisteredMenu;
    private static MenuCommandManager();
    internal static IMenuItem GetOriginalMenuItem(IViewContext a, IMenuItem b);
    public static bool ExecuteCommand(IViewContext viewContext, IMenuItem menuItem);
    private static Context GetContext(object a);
    private static void HandleCanExecuteChanged(object a, EventArgs b);
    public static void Register(IViewContext viewContext, IMenu menu);
    internal static void Unregister(IViewContext a);
    internal static void Unregister(IMenu a);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.MenuItemBindingAdapter : ControlBindingAdapterBase`1<IMenuItem> {
    internal virtual BindingAdapterContext ResolveContext();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.MessageDialogFragment : DialogFragmentBase {
    [CompilerGeneratedAttribute]
private Func`2<Context, Dialog> a;
    private Func`2<Context, Dialog> b { get; private set; }
    public MessageDialogFragment(IntPtr a, JniHandleOwnership b);
    public MessageDialogFragment(string a, string b, string c, EventHandler`1<DialogClickEventArgs> d, string e, EventHandler`1<DialogClickEventArgs> f, string g, EventHandler`1<DialogClickEventArgs> h);
    [CompilerGeneratedAttribute]
private Func`2<Context, Dialog> get_b();
    [CompilerGeneratedAttribute]
private void set_b(Func`2<Context, Dialog> value);
    public virtual Dialog OnCreateDialog(Bundle a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.MessageInputView : CompoundControl {
    private int c;
    private int d;
    private EditText e;
    private ImageButton f;
    private Button g;
    [CompilerGeneratedAttribute]
private FrameLayout h;
    [CompilerGeneratedAttribute]
private FrameLayout i;
    [CompilerGeneratedAttribute]
private FrameLayout j;
    [CompilerGeneratedAttribute]
private bool k;
    [CompilerGeneratedAttribute]
private EventHandler`1<TextChangedEventArgs> l;
    [CompilerGeneratedAttribute]
private EventHandler m;
    [CompilerGeneratedAttribute]
private EventHandler n;
    private FrameLayout a { get; private set; }
    private FrameLayout b { get; private set; }
    private FrameLayout o { get; private set; }
    public EditText MessageBox { get; private set; }
    public ImageButton LeftButton { get; private set; }
    public Button RightButton { get; private set; }
    public string Text { get; public set; }
    public ColorStateList TextColors { get; public set; }
    public Typeface Typeface { get; public set; }
    public string Hint { get; public set; }
    public ColorStateList HintTextColors { get; public set; }
    public int MaxInputHeightPortrait { get; public set; }
    public int MaxInputHeightLandscape { get; public set; }
    public string SendCaption { get; public set; }
    public bool AutoScrollToBottom { get; public set; }
    public MessageInputView(Context context);
    public MessageInputView(Context context, IAttributeSet attrs);
    public MessageInputView(Context context, IAttributeSet attrs, int defStyle);
    protected MessageInputView(IntPtr javaReference, JniHandleOwnership transfer);
    [CompilerGeneratedAttribute]
private FrameLayout get_a();
    [CompilerGeneratedAttribute]
private void set_a(FrameLayout value);
    [CompilerGeneratedAttribute]
private FrameLayout get_b();
    [CompilerGeneratedAttribute]
private void set_b(FrameLayout value);
    [CompilerGeneratedAttribute]
private FrameLayout get_o();
    [CompilerGeneratedAttribute]
private void set_o(FrameLayout value);
    public EditText get_MessageBox();
    private void set_MessageBox(EditText value);
    public ImageButton get_LeftButton();
    private void set_LeftButton(ImageButton value);
    public Button get_RightButton();
    private void set_RightButton(Button value);
    public string get_Text();
    public void set_Text(string value);
    public ColorStateList get_TextColors();
    public void set_TextColors(ColorStateList value);
    public Typeface get_Typeface();
    public void set_Typeface(Typeface value);
    public string get_Hint();
    public void set_Hint(string value);
    public ColorStateList get_HintTextColors();
    public void set_HintTextColors(ColorStateList value);
    public int get_MaxInputHeightPortrait();
    public void set_MaxInputHeightPortrait(int value);
    public int get_MaxInputHeightLandscape();
    public void set_MaxInputHeightLandscape(int value);
    public string get_SendCaption();
    public void set_SendCaption(string value);
    [CompilerGeneratedAttribute]
public bool get_AutoScrollToBottom();
    [CompilerGeneratedAttribute]
public void set_AutoScrollToBottom(bool value);
    [CompilerGeneratedAttribute]
public void add_TextChanged(EventHandler`1<TextChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_TextChanged(EventHandler`1<TextChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public void add_LeftButtonClick(EventHandler value);
    [CompilerGeneratedAttribute]
public void remove_LeftButtonClick(EventHandler value);
    [CompilerGeneratedAttribute]
public void add_RightButtonClick(EventHandler value);
    [CompilerGeneratedAttribute]
public void remove_RightButtonClick(EventHandler value);
    protected virtual void InitializeView();
    protected virtual void OnViewCreated();
    protected virtual void OnLayout(bool changed, int left, int top, int right, int bottom);
    protected virtual void OnConfigurationChanged(Configuration newConfig);
    protected virtual void Dispose(bool disposing);
    public void SetLeftButton(string commandName, string imageName, int width);
    public void HideVirtualKeyboard();
    public void ShowVirtualKeyboard();
    private void OnMessageBoxTextChanged(object a, TextChangedEventArgs b);
    private void OnLeftButtonClick(object a, EventArgs b);
    private void OnRightButtonClick(object a, EventArgs b);
    private void InvalidateMaxInputHeight();
    [CompilerGeneratedAttribute]
private void <OnViewCreated>b__68_0();
    [CompilerGeneratedAttribute]
private void <OnViewCreated>b__68_1();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.MessageInputViewBindingAdapter : ControlBindingAdapterBase`1<MessageInputView> {
    internal virtual BindingAdapterContext ResolveContext();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.MessagePresenter : PresenterBase {
    [CompilerGeneratedAttribute]
private object b;
    private object a { get; private set; }
    [CompilerGeneratedAttribute]
private object get_a();
    [CompilerGeneratedAttribute]
private void set_a(object value);
    public sealed virtual void SetOwner(object owner);
    public sealed virtual void Show(string message);
    public sealed virtual void Show(string message, string title);
    public sealed virtual void Show(string message, string title, String[] buttons, Action`1<int> actionCallback);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Intersoft.Crosslight.Android.MobileServices.AndroidMobileComponentServiceBase : MobileComponentServiceBase {
    protected virtual T DispatchViewInitiator(object owner);
    public virtual bool IsSupported();
    protected virtual void ShowToast(string message);
    protected virtual Context DispatchContext(object owner);
}
public class Intersoft.Crosslight.Android.MobileServices.BrowserService : AndroidMobileComponentServiceBase {
    [NullableAttribute("1")]
private Intent c;
    protected virtual void Dispose(bool disposing);
    protected virtual void OnInitialize();
    public virtual bool IsSupported();
    [NullableContextAttribute("1")]
public sealed virtual void Navigate(string url);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.MobileServices.CameraService : AndroidMobileComponentServiceBase {
    private Intent d;
    private File e;
    private Intent f;
    private File g;
    private File h;
    private Intent i;
    private File CreateTempFile(Intent a);
    private void DeleteTempFiles();
    protected virtual void Dispose(bool disposing);
    protected virtual void OnInitialize();
    private Intent PrepareCropIntent(Context a, int b, int c, Byte[] d);
    private void ProcessIntent(Intent a, Action`1<MediaPickerResult> b, CameraCaptureSettings c);
    private int ProcessRequestCode(Intent a);
    public virtual bool IsSupported();
    public sealed virtual void Capture(CameraCaptureMode mode, Action`1<MediaPickerResult> resultCallback);
    public sealed virtual void Capture(CameraCaptureSettings settings, Action`1<MediaPickerResult> resultCallback);
    [AsyncStateMachineAttribute("Intersoft.Crosslight.Android.MobileServices.CameraService/c")]
public void CheckCameraPermission(CameraCaptureSettings settings, Action`1<MediaPickerResult> resultCallback);
}
public class Intersoft.Crosslight.Android.MobileServices.ContactService : AndroidMobileComponentServiceBase {
    public virtual bool IsSupported();
    [NullableContextAttribute("1")]
public sealed virtual IEnumerable`1<Contact> LoadContacts();
    [NullableContextAttribute("1")]
public sealed virtual bool SaveContact(Contact contact);
    [NullableContextAttribute("1")]
public sealed virtual bool DeleteContact(Contact contact);
    [NullableContextAttribute("1")]
public sealed virtual void PickContact(Action`1<ContactPickerResult> callback);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.MobileServices.LocalStorageService : AndroidMobileComponentServiceBase {
    [AsyncStateMachineAttribute("Intersoft.Crosslight.Android.MobileServices.LocalStorageService/f")]
public sealed virtual Task`1<Byte[]> ReadFileAsync(string fileName, LocalFolderKind folderKind);
    [AsyncStateMachineAttribute("Intersoft.Crosslight.Android.MobileServices.LocalStorageService/g")]
public sealed virtual Task`1<string> ReadTextFileAsync(string fileName, LocalFolderKind folderKind);
    [AsyncStateMachineAttribute("Intersoft.Crosslight.Android.MobileServices.LocalStorageService/h")]
public sealed virtual Task`1<bool> WriteFileAsync(Byte[] data, string fileName, LocalFolderKind folderKind, FileWriteMode writeMode);
    [AsyncStateMachineAttribute("Intersoft.Crosslight.Android.MobileServices.LocalStorageService/i")]
public sealed virtual Task`1<bool> WriteTextFileAsync(string data, string fileName, LocalFolderKind folderKind, FileWriteMode writeMode);
    public sealed virtual Task`1<bool> DeleteFileAsync(string fileName, LocalFolderKind folderKind);
    public sealed virtual bool IsFileExisted(string fileName, LocalFolderKind folderKind);
    public Task`1<string> GetFolderPathTask(LocalFolderKind folderKind);
    public sealed virtual string GetFolderPath(LocalFolderKind folderKind);
    public sealed virtual string GetFilePath(string fileName, LocalFolderKind folderKind);
    private string GetExternalCacheFolderIfAny();
    public virtual bool IsSupported();
    public sealed virtual Task`1<LocalFileInfo> GetFileInfoAsync(string fileName, LocalFolderKind folderKind);
    public sealed virtual Task`1<List`1<LocalFileInfo>> GetFilesAsync(string searchPattern, LocalFolderKind folderKind);
    public sealed virtual Task`1<bool> RenameFileAsync(string sourceName, string targetName, LocalFolderKind folderKind);
    private LocalFileInfo GetFileInfo(string a, LocalFolderKind b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.MobileServices.LocationService : AndroidMobileComponentServiceBase {
    private Criteria j;
    private Location k;
    private LocationManager l;
    private Action`1<LocationResult> m;
    private ILocationProvider a { get; }
    private LocationManager b { get; }
    private Criteria c { get; }
    private string d { get; }
    private bool e { get; }
    private bool f { get; }
    private ILocationProvider get_a();
    private LocationManager get_b();
    private Criteria get_c();
    private string get_d();
    private bool get_e();
    private bool get_f();
    private string BuildQuery(PlacemarkAddress a);
    private void BuildString(StringBuilder a, string b);
    protected virtual void Dispose(bool disposing);
    protected virtual void OnInitialize();
    private void UpdateLocation(Location a);
    public virtual bool IsSupported();
    public sealed virtual void GetCurrentLocation(double desiredAccuracy, Action`1<LocationResult> resultCallback);
    public sealed virtual void GetPlacemark(PlacemarkAddress address, Action`1<PlacemarkResult> resultCallback);
    public sealed virtual void GetPlacemarks(Location location, Action`1<IList`1<PlacemarkResult>> resultCallback);
    public sealed virtual bool IsLocationInRange(LocationCoordinate sourcelocation, LocationCoordinate targetLocation, double radius);
}
public class Intersoft.Crosslight.Android.MobileServices.MailService : AndroidMobileComponentServiceBase {
    [NullableAttribute("1")]
private Intent n;
    protected virtual void Dispose(bool disposing);
    protected virtual void OnInitialize();
    public virtual bool IsSupported();
    [NullableContextAttribute("1")]
public sealed virtual void ComposeMail(string to, string subject, string body, Action`1<ComposeMailResult> resultCallback);
    [NullableContextAttribute("1")]
public sealed virtual void ComposeMail(MailMessage mailMessage, Action`1<ComposeMailResult> resultCallback);
    [NullableContextAttribute("1")]
public void GrantUriPermission(Context context, Uri fileUri);
}
public class Intersoft.Crosslight.Android.MobileServices.MapService : AndroidMobileComponentServiceBase {
    [NullableAttribute("1")]
private Intent o;
    [NullableContextAttribute("1")]
private string BuildQuery(PlacemarkAddress a);
    [NullableContextAttribute("1")]
private void BuildString(StringBuilder a, string b);
    protected virtual void Dispose(bool disposing);
    protected virtual void OnInitialize();
    public virtual bool IsSupported();
    [NullableContextAttribute("1")]
public sealed virtual void Navigate(Placemark placemark, int zoomScale);
    public sealed virtual void NavigateToCurrentLocation();
    [NullableContextAttribute("1")]
public sealed virtual void ShowDirections(Placemark from, Placemark to, MapDirectionMode directionMode);
    [CompilerGeneratedAttribute]
private void <NavigateToCurrentLocation>b__7_0(LocationResult a);
}
public class Intersoft.Crosslight.Android.MobileServices.MediaLibraryService : AndroidMobileComponentServiceBase {
    [NullableAttribute("1")]
private Intent p;
    protected virtual void Dispose(bool disposing);
    protected virtual void OnInitialize();
    public virtual bool IsSupported();
    [NullableContextAttribute("1")]
public sealed virtual void ShowPicker(MediaLibrarySettings settings, Action`1<MediaPickerResult> resultCallback);
}
public class Intersoft.Crosslight.Android.MobileServices.MediaService : AndroidMobileComponentServiceBase {
    [NullableAttribute("1")]
private Intent q;
    [NullableAttribute("1")]
private Intent r;
    [NullableAttribute("1")]
private Intent s;
    protected virtual void Dispose(bool disposing);
    protected virtual void OnInitialize();
    [NullableContextAttribute("1")]
private void OpenApp(Intent a);
    public virtual bool IsSupported();
    public sealed virtual void OpenMusicApp();
    public sealed virtual void OpenVideoApp();
    [NullableContextAttribute("1")]
public sealed virtual void OpenYouTube(string videoId);
    [NullableContextAttribute("1")]
public sealed virtual void PlaySound(string soundFileName);
}
public class Intersoft.Crosslight.Android.MobileServices.MessagingService : AndroidMobileComponentServiceBase {
    [NullableAttribute("1")]
private Intent t;
    protected virtual void Dispose(bool disposing);
    protected virtual void OnInitialize();
    public virtual bool IsSupported();
    [NullableContextAttribute("1")]
public sealed virtual void SendMessage(string phoneNumber);
}
public class Intersoft.Crosslight.Android.MobileServices.NotificationService : AndroidMobileComponentServiceBase {
    [NullableAttribute("1")]
private Intent u;
    [NullableAttribute("1")]
private AlarmManager v;
    [NullableAttribute("1")]
private NotificationManager w;
    [CompilerGeneratedAttribute]
private int x;
    private int a { get; private set; }
    protected virtual void Dispose(bool disposing);
    protected virtual void OnInitialize();
    [CompilerGeneratedAttribute]
private int get_a();
    [CompilerGeneratedAttribute]
private void set_a(int value);
    private int GenerateNotificationId();
    public virtual bool IsSupported();
    public sealed virtual void CancelAllLocalNotifications();
    public sealed virtual void CancelLocalNotification(Guid notificationIdentifier);
    [NullableContextAttribute("1")]
public sealed virtual void ScheduleLocalNotification(string message, string title);
    [NullableContextAttribute("1")]
public sealed virtual void ScheduleLocalNotification(LocalNotification notification);
    [NullableContextAttribute("1")]
private Type GetStartActivityUserType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.MobileServices.SocialService : AndroidMobileComponentServiceBase {
    private Intent y;
    private Intent z;
    private static string aa;
    private static string ab;
    private static string ac;
    private static string ad;
    private static string ae;
    private static string af;
    protected virtual void Dispose(bool disposing);
    protected virtual void OnInitialize();
    private void ProcessShareActivityType(Dictionary`2<string, ShareActivityType> a, ShareActivityType b);
    private void ShowAllShareOptions(Dictionary`2<string, ShareActivityType> a);
    private File WriteBitmapToCache(Context a, Byte[] b, bool c);
    public virtual bool IsSupported();
    public sealed virtual void ShowShareOptions(string text, Object[] additionalData, ShareActivityType activityType);
    public sealed virtual void PostToFacebook(string text, Byte[] image, IEnumerable`1<Byte[]> additionalImages);
    public sealed virtual void PostToTwitter(string text, Byte[] image, IEnumerable`1<Byte[]> additionalImages);
}
public class Intersoft.Crosslight.Android.MobileServices.TelephonyService : AndroidMobileComponentServiceBase {
    [NullableAttribute("1")]
private Intent ag;
    protected virtual void Dispose(bool disposing);
    protected virtual void OnInitialize();
    public virtual bool IsSupported();
    [NullableContextAttribute("1")]
public sealed virtual void Call(string phoneNumber);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.MultipleSelectionObserver : object {
    private INotifyCollectionChanged a;
    private View b;
    private INotifyCollectionChanged c { get; private set; }
    internal MultipleSelectionObserver(View a, INotifyCollectionChanged b);
    private INotifyCollectionChanged get_c();
    private void set_c(INotifyCollectionChanged value);
    private void AddItems(IEnumerable a);
    private void OnCollectionChanged(object a, NotifyCollectionChangedEventArgs b);
    public sealed virtual void OnSelectedItemsChanged(INotifyCollectionChanged a);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.NavigationContext : object {
    [CompilerGeneratedAttribute]
private NavigationTarget a;
    [CompilerGeneratedAttribute]
private INavigable b;
    [CompilerGeneratedAttribute]
private IFragment c;
    [CompilerGeneratedAttribute]
private bool d;
    internal NavigationTarget NavigationTarget { get; internal set; }
    internal INavigable Sender { get; internal set; }
    internal IFragment Fragment { get; internal set; }
    internal bool ForceNavigate { get; internal set; }
    public NavigationContext(INavigable sender, NavigationTarget navigationTarget);
    [CompilerGeneratedAttribute]
internal NavigationTarget get_NavigationTarget();
    [CompilerGeneratedAttribute]
internal void set_NavigationTarget(NavigationTarget value);
    [CompilerGeneratedAttribute]
internal INavigable get_Sender();
    [CompilerGeneratedAttribute]
internal void set_Sender(INavigable value);
    [CompilerGeneratedAttribute]
internal IFragment get_Fragment();
    [CompilerGeneratedAttribute]
internal void set_Fragment(IFragment value);
    [CompilerGeneratedAttribute]
internal bool get_ForceNavigate();
    [CompilerGeneratedAttribute]
internal void set_ForceNavigate(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.NavigationOptions : object {
    [CompilerGeneratedAttribute]
private bool a;
    [CompilerGeneratedAttribute]
private bool b;
    [CompilerGeneratedAttribute]
private bool c;
    [CompilerGeneratedAttribute]
private int d;
    [CompilerGeneratedAttribute]
private bool e;
    [CompilerGeneratedAttribute]
private IViewModel f;
    internal bool ClearBackStack { get; internal set; }
    internal bool DirectlySetViewModel { get; internal set; }
    internal bool DoNotAddToNavigationStack { get; internal set; }
    public int FragmentContainerId { get; public set; }
    internal bool IsSelfNavigation { get; internal set; }
    internal IViewModel ViewModel { get; internal set; }
    [CompilerGeneratedAttribute]
internal bool get_ClearBackStack();
    [CompilerGeneratedAttribute]
internal void set_ClearBackStack(bool value);
    [CompilerGeneratedAttribute]
internal bool get_DirectlySetViewModel();
    [CompilerGeneratedAttribute]
internal void set_DirectlySetViewModel(bool value);
    [CompilerGeneratedAttribute]
internal bool get_DoNotAddToNavigationStack();
    [CompilerGeneratedAttribute]
internal void set_DoNotAddToNavigationStack(bool value);
    [CompilerGeneratedAttribute]
public int get_FragmentContainerId();
    [CompilerGeneratedAttribute]
public void set_FragmentContainerId(int value);
    [CompilerGeneratedAttribute]
internal bool get_IsSelfNavigation();
    [CompilerGeneratedAttribute]
internal void set_IsSelfNavigation(bool value);
    [CompilerGeneratedAttribute]
internal IViewModel get_ViewModel();
    [CompilerGeneratedAttribute]
internal void set_ViewModel(IViewModel value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.NavigationResultIntent : Intent {
    [CompilerGeneratedAttribute]
private NavigationResult a;
    public NavigationResult Result { get; private set; }
    public NavigationResultIntent(NavigationResult result);
    [CompilerGeneratedAttribute]
public NavigationResult get_Result();
    [CompilerGeneratedAttribute]
private void set_Result(NavigationResult value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.NavigationService : object {
    private NavigationTarget a;
    private bool b;
    private static HashSet`1<string> c;
    [CompilerGeneratedAttribute]
private IViewModel d;
    [CompilerGeneratedAttribute]
private Action`1<NavigationResult> e;
    [CompilerGeneratedAttribute]
private static NavigationResult f;
    private static Dictionary`2<string, Type> g;
    protected IViewModel ViewModel { get; protected set; }
    protected Activity Activity { get; }
    protected Fragment Fragment { get; }
    internal static HashSet`1<string> PendingViewDismissal { get; }
    private Action`1<NavigationResult> h { get; private set; }
    internal static NavigationResult ModalNavigationResult { get; internal set; }
    internal static Dictionary`2<string, Type> NavigationTypes { get; }
    [CompilerGeneratedAttribute]
protected IViewModel get_ViewModel();
    [CompilerGeneratedAttribute]
protected void set_ViewModel(IViewModel value);
    protected Activity get_Activity();
    protected Fragment get_Fragment();
    internal static HashSet`1<string> get_PendingViewDismissal();
    [CompilerGeneratedAttribute]
private Action`1<NavigationResult> get_h();
    [CompilerGeneratedAttribute]
private void set_h(Action`1<NavigationResult> value);
    [CompilerGeneratedAttribute]
internal static NavigationResult get_ModalNavigationResult();
    [CompilerGeneratedAttribute]
internal static void set_ModalNavigationResult(NavigationResult value);
    protected virtual Intent CreateIntent(NavigationTarget target, Type activityType);
    private int GetEmptyArraySlot(Array a);
    protected internal virtual void OnModalNavigationFinished(NavigationResult result);
    protected internal virtual void OnModalNavigationStarted(Activity targetActivity);
    protected internal virtual void OnNavigationStarted(Activity targetActivity);
    protected internal virtual void OnNavigationStarted(IFragment targetFragment);
    public virtual void ProcessModalTransitionStyle(Activity activity, ModalTransitionStyle modalTransitionStyle, Type targetActivityType);
    private sealed virtual override void Intersoft.Crosslight.INavigationService.Initialize(IViewModel a);
    public virtual bool Navigate();
    public virtual bool Navigate(string targetName);
    public virtual bool Navigate(NavigationParameter parameter);
    public virtual bool Navigate(NavigationParameter parameter, Action`1<NavigationResult> resultCallback);
    public virtual bool Navigate(NavigationTarget navigationTarget);
    public virtual bool Navigate(NavigationTarget navigationTarget, Action`1<NavigationResult> resultCallback);
    public virtual void Close();
    public virtual void Close(NavigationResult result);
    internal static Dictionary`2<string, Type> get_NavigationTypes();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.NonScrollableListView : ListView {
    [CompilerGeneratedAttribute]
private int a;
    public int ItemHeight { get; public set; }
    public NonScrollableListView(Context context);
    public NonScrollableListView(Context context, IAttributeSet attrs);
    protected NonScrollableListView(IntPtr javaReference, JniHandleOwnership transfer);
    public NonScrollableListView(Context context, IAttributeSet attrs, int defStyle);
    [CompilerGeneratedAttribute]
public int get_ItemHeight();
    [CompilerGeneratedAttribute]
public void set_ItemHeight(int value);
    public virtual void Draw(Canvas canvas);
    private int GetTotalHeightOfListView();
    public int GetListViewHeightBasedOnChildren();
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.NonScrollableListViewBindingAdapter : AbsListViewBindingAdapter`1<NonScrollableListView> {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.NumericStepper : CompoundControl {
    private decimal o;
    [CompilerGeneratedAttribute]
private TextView p;
    [CompilerGeneratedAttribute]
private View q;
    [CompilerGeneratedAttribute]
private View r;
    [CompilerGeneratedAttribute]
private int s;
    [CompilerGeneratedAttribute]
private int t;
    [CompilerGeneratedAttribute]
private int u;
    [CompilerGeneratedAttribute]
private EventHandler`1<ValueChangedEventArgs> v;
    [CompilerGeneratedAttribute]
private EventHandler w;
    [CompilerGeneratedAttribute]
private EventHandler x;
    public TextView NumericBox { get; public set; }
    public View DecreaseButton { get; public set; }
    public View IncreaseButton { get; public set; }
    public decimal Value { get; public set; }
    public int Step { get; public set; }
    public int MinValue { get; public set; }
    public int MaxValue { get; public set; }
    public ColorStateList TextColors { get; public set; }
    public Typeface Typeface { get; public set; }
    protected Int32[] AttributesResource { get; }
    public NumericStepper(Context context);
    public NumericStepper(Context context, IAttributeSet attrs);
    public NumericStepper(Context context, IAttributeSet attrs, int defStyle);
    protected NumericStepper(IntPtr javaReference, JniHandleOwnership transfer);
    [CompilerGeneratedAttribute]
public TextView get_NumericBox();
    [CompilerGeneratedAttribute]
public void set_NumericBox(TextView value);
    [CompilerGeneratedAttribute]
public View get_DecreaseButton();
    [CompilerGeneratedAttribute]
public void set_DecreaseButton(View value);
    [CompilerGeneratedAttribute]
public View get_IncreaseButton();
    [CompilerGeneratedAttribute]
public void set_IncreaseButton(View value);
    public decimal get_Value();
    public void set_Value(decimal value);
    [CompilerGeneratedAttribute]
public int get_Step();
    [CompilerGeneratedAttribute]
public void set_Step(int value);
    [CompilerGeneratedAttribute]
public int get_MinValue();
    [CompilerGeneratedAttribute]
public void set_MinValue(int value);
    [CompilerGeneratedAttribute]
public int get_MaxValue();
    [CompilerGeneratedAttribute]
public void set_MaxValue(int value);
    public ColorStateList get_TextColors();
    public void set_TextColors(ColorStateList value);
    public Typeface get_Typeface();
    public void set_Typeface(Typeface value);
    [CompilerGeneratedAttribute]
public void add_ValueChanged(EventHandler`1<ValueChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_ValueChanged(EventHandler`1<ValueChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public void add_DecreaseButtonClick(EventHandler value);
    [CompilerGeneratedAttribute]
public void remove_DecreaseButtonClick(EventHandler value);
    [CompilerGeneratedAttribute]
public void add_IncreaseButtonClick(EventHandler value);
    [CompilerGeneratedAttribute]
public void remove_IncreaseButtonClick(EventHandler value);
    protected virtual Int32[] get_AttributesResource();
    protected virtual void ApplyAttribute(TypedArray attrsInfo, int attrId);
    protected virtual void InitializeView();
    protected virtual void OnViewCreated();
    protected virtual void Dispose(bool disposing);
    private void NumericBox_Click(object a, EventArgs b);
    private void OnDecreaseButtonClick(object a, EventArgs b);
    private void OnIncreaseButtonClick(object a, EventArgs b);
    private void OnValueChanged(decimal a, decimal b);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.NumericStepperBindingAdapter : ControlBindingAdapterBase`1<NumericStepper> {
    internal virtual BindingAdapterContext ResolveContext();
}
[ExtensionAttribute]
public static class Intersoft.Crosslight.Android.ObjectExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static Byte[] ToByteArray(object obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.ObjectPool`1 : object {
    private List`1<T> a;
    private List`1<T> b;
    [CompilerGeneratedAttribute]
private Func`2<object, T> c;
    private Func`2<object, T> d { get; private set; }
    private List`1<T> e { get; }
    private List`1<T> f { get; }
    internal ObjectPool`1(Func`2<object, T> a);
    [CompilerGeneratedAttribute]
private Func`2<object, T> get_d();
    [CompilerGeneratedAttribute]
private void set_d(Func`2<object, T> value);
    private List`1<T> get_e();
    private List`1<T> get_f();
    internal T Take(object a);
    internal void Return(T a);
    internal void Reset();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ObjectWrapper : Object {
    [CompilerGeneratedAttribute]
private object a;
    public object Object { get; private set; }
    public ObjectWrapper(object obj);
    [CompilerGeneratedAttribute]
public object get_Object();
    [CompilerGeneratedAttribute]
private void set_Object(object value);
    protected virtual void Dispose(bool disposing);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class Intersoft.Crosslight.Android.ObservableListAdapter : BaseAdapter {
    private ViewTemplateSelector a;
    private ImageSettings b;
    private static object c;
    private bool d;
    private Context e;
    private Fragment f;
    private int g;
    private int h;
    private int i;
    private BasicImageLoaderSettings j;
    private IInterpolator k;
    private int l;
    private Dictionary`2<object, int> m;
    private List`1<Object> n;
    private ItemBindingDescription o;
    private long p;
    private bool q;
    private IList`1<IGroupItem> r;
    private ImageLoader s;
    private IEnumerable t;
    private int u;
    private IEnumerable v;
    private double w;
    private IListViewModel x;
    private List`1<object> y;
    [CompilerGeneratedAttribute]
private ScrollSpeedListener z;
    [CompilerGeneratedAttribute]
private List`1<int> aa;
    private static long ab;
    private static int ac;
    private Dictionary`2<View, ListItemViewHolder> ad;
    private ScrollSpeedListener ae { get; private set; }
    public int Count { get; }
    public bool EnableGrouping { get; public set; }
    private IList`1<IGroupItem> af { get; }
    private bool ag { get; }
    public int ViewTypeCount { get; }
    protected ItemBindingDescription BindingDescription { get; }
    private List`1<object> ah { get; }
    private ImageLoader ai { get; }
    private List`1<int> aj { get; private set; }
    private Dictionary`2<View, ListItemViewHolder> ak { get; }
    public object Item { get; }
    public IViewModel ViewModel { get; }
    public ObservableListAdapter(IntPtr javaReference, JniHandleOwnership transfer);
    public ObservableListAdapter(Context context, AdapterOptions adapterOptions);
    public ObservableListAdapter(Fragment fragment, AdapterOptions adapterOptions);
    private static ObservableListAdapter();
    [CompilerGeneratedAttribute]
private ScrollSpeedListener get_ae();
    [CompilerGeneratedAttribute]
private void set_ae(ScrollSpeedListener value);
    public virtual int get_Count();
    public bool get_EnableGrouping();
    public void set_EnableGrouping(bool value);
    private IList`1<IGroupItem> get_af();
    private bool get_ag();
    public virtual int get_ViewTypeCount();
    protected ItemBindingDescription get_BindingDescription();
    private List`1<object> get_ah();
    private ImageLoader get_ai();
    [CompilerGeneratedAttribute]
private List`1<int> get_aj();
    [CompilerGeneratedAttribute]
private void set_aj(List`1<int> value);
    public virtual bool AreAllItemsEnabled();
    protected virtual void Dispose(bool disposing);
    public virtual Object GetItem(int position);
    public virtual long GetItemId(int position);
    public virtual int GetItemViewType(int position);
    private int GetItemsCountForSection(int a, bool b);
    private int GetSection(int a);
    private Dictionary`2<View, ListItemViewHolder> get_ak();
    private ListItemViewHolder GetViewHolder(View a);
    public virtual View GetView(int position, View view, ViewGroup parent, int layoutResourceId);
    private void DetailButton_Click(object a, EventArgs b);
    private void LoadImageAsync(ImageView a, object b);
    public virtual View GetView(int position, View convertView, ViewGroup parent);
    public virtual bool IsEnabled(int position);
    public virtual void NotifyDataSetChanged();
    private bool IsBatchUpdating();
    private void ExecuteNotifyDataSetChanged();
    private void OnCollectionChanged(object a, NotifyCollectionChangedEventArgs b);
    private void OnItemsChanged(IEnumerable a, IEnumerable b);
    private void OnViewModelDataChanged(object a, DataChangedEventArgs b);
    private void OnViewModelPropertyChanged(object a, PropertyChangedEventArgs b);
    private object GetViewContext();
    public sealed virtual object get_Item(int position);
    public sealed virtual object GetItemAt(IndexPath indexPath);
    public sealed virtual IndexPath GetItemIndex(object item);
    public sealed virtual void SetItems(IEnumerable items);
    public sealed virtual int GetPositionForSection(int section);
    public sealed virtual int GetSectionForPosition(int position);
    public sealed virtual Object[] GetSections();
    public sealed virtual IViewModel get_ViewModel();
    [CompilerGeneratedAttribute]
private void <NotifyDataSetChanged>b__71_0();
    [CompilerGeneratedAttribute]
private void <OnCollectionChanged>b__74_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ObservableSpinnerAdapter : ObservableListAdapter {
    private AdapterOptions ae;
    private Context e;
    public ObservableSpinnerAdapter(Context context, AdapterOptions adapterOptions);
    public virtual View GetDropDownView(int position, View convertView, ViewGroup parent);
}
[ExtensionAttribute]
internal static class Intersoft.Crosslight.Android.OrganizationDataKindExtensions : object {
    [ExtensionAttribute]
internal static OrganizationType ToOrganizationType(OrganizationDataKind a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.OverlayPresenterSettings : object {
    [CompilerGeneratedAttribute]
private bool p;
    [CompilerGeneratedAttribute]
private int q;
    [CompilerGeneratedAttribute]
private List`1<string> r;
    [CompilerGeneratedAttribute]
private Color s;
    [CompilerGeneratedAttribute]
private bool t;
    [CompilerGeneratedAttribute]
private ContentPresentationStyle u;
    [CompilerGeneratedAttribute]
private EdgePresentationPosition v;
    [CompilerGeneratedAttribute]
private Size w;
    [CompilerGeneratedAttribute]
private Size x;
    [CompilerGeneratedAttribute]
private Size y;
    [CompilerGeneratedAttribute]
private Size z;
    [CompilerGeneratedAttribute]
private TransitionMode aa;
    [CompilerGeneratedAttribute]
private TransitionMode ab;
    [CompilerGeneratedAttribute]
private int ac;
    [CompilerGeneratedAttribute]
private int ad;
    [CompilerGeneratedAttribute]
private bool ae;
    public bool DisableBackButton { get; public set; }
    public int CommandLayoutId { get; public set; }
    public List`1<string> CommandViewId { get; public set; }
    public Color ContentBackground { get; public set; }
    public bool DismissOnTap { get; public set; }
    public ContentPresentationStyle PresentationStyle { get; public set; }
    public EdgePresentationPosition EdgePresentationPosition { get; public set; }
    public Size PreferredContentSize { get; public set; }
    public Size PreferredContentPercentage { get; public set; }
    public Size PreferredContentSizeLandscape { get; public set; }
    public Size PreferredContentPercentageLandscape { get; public set; }
    public TransitionMode EnterTransition { get; public set; }
    public TransitionMode ExitTransition { get; public set; }
    public int CustomEnterTransition { get; public set; }
    public int CustomExitTransition { get; public set; }
    public bool ShowToolbar { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_DisableBackButton();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DisableBackButton(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_CommandLayoutId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CommandLayoutId(int value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<string> get_CommandViewId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CommandViewId(List`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Color get_ContentBackground();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContentBackground(Color value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_DismissOnTap();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DismissOnTap(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual ContentPresentationStyle get_PresentationStyle();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PresentationStyle(ContentPresentationStyle value);
    [CompilerGeneratedAttribute]
public sealed virtual EdgePresentationPosition get_EdgePresentationPosition();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EdgePresentationPosition(EdgePresentationPosition value);
    [CompilerGeneratedAttribute]
public sealed virtual Size get_PreferredContentSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreferredContentSize(Size value);
    [CompilerGeneratedAttribute]
public sealed virtual Size get_PreferredContentPercentage();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreferredContentPercentage(Size value);
    [CompilerGeneratedAttribute]
public sealed virtual Size get_PreferredContentSizeLandscape();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreferredContentSizeLandscape(Size value);
    [CompilerGeneratedAttribute]
public sealed virtual Size get_PreferredContentPercentageLandscape();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreferredContentPercentageLandscape(Size value);
    [CompilerGeneratedAttribute]
public sealed virtual TransitionMode get_EnterTransition();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EnterTransition(TransitionMode value);
    [CompilerGeneratedAttribute]
public sealed virtual TransitionMode get_ExitTransition();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExitTransition(TransitionMode value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_CustomEnterTransition();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CustomEnterTransition(int value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_CustomExitTransition();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CustomExitTransition(int value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_ShowToolbar();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ShowToolbar(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Intersoft.Crosslight.Android.PaintExtensions : object {
    [ExtensionAttribute]
public static Cap ToPaintCap(int paintCapEnum);
    [ExtensionAttribute]
public static Join ToPaintJoin(int paintJointEnum);
}
[ExtensionAttribute]
internal static class Intersoft.Crosslight.Android.PhoneDataKindExtensions : object {
    [ExtensionAttribute]
internal static PhoneType ToPhoneType(PhoneDataKind a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.PlatformInitializer : object {
    public IApplicationInitializer RunAppInitializer(IApplicationHost host);
    public void RunExternalInitializer(IApplicationHost host);
    public DefaultAppInitializer RunFrameworkInitializer(IApplicationHost host);
    public void RunFormBuilderInitializer(IApplicationHost host);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Intersoft.Crosslight.Android.PointFExtensions : object {
    [ExtensionAttribute]
public static PointF[] ToSystemPoint(PointF[] androidPoints);
    [ExtensionAttribute]
public static PointF[] ToAndroidPoint(PointF[] systemPoints);
}
public abstract class Intersoft.Crosslight.Android.PresenterBase : object {
    [NullableContextAttribute("1")]
protected virtual Context DispatchContext(object owner);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.RadioButtonBindingAdapter : ControlBindingAdapterBase`1<RadioButton> {
    internal virtual BindingAdapterContext ResolveContext();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.RadioGroupBindingAdapter : ControlBindingAdapterBase`1<RadioGroup> {
    internal virtual BindingAdapterContext ResolveContext();
}
public class Intersoft.Crosslight.Android.Resource : Resource {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.RoundedButton : CompoundControl {
    private RoundedButtonContentStyle y;
    private string z;
    private string aa;
    private bool ab;
    private bool ac;
    private ColorStateList ad;
    private ColorStateList ae;
    private int af;
    private int ag;
    [CompilerGeneratedAttribute]
private RelativeLayout ah;
    [CompilerGeneratedAttribute]
private ImageView ai;
    [CompilerGeneratedAttribute]
private TextView aj;
    [CompilerGeneratedAttribute]
private TextView ak;
    [CompilerGeneratedAttribute]
private TextView al;
    [CompilerGeneratedAttribute]
private bool am;
    private static ScaleType[] an;
    [CompilerGeneratedAttribute]
private EventHandler ao;
    [CompilerGeneratedAttribute]
private EventHandler`1<CheckedChangeEventArgs> ap;
    private RelativeLayout a { get; private set; }
    private ImageView b { get; private set; }
    private TextView c { get; private set; }
    private TextView d { get; private set; }
    private TextView e { get; private set; }
    public RoundedButtonContentStyle ContentStyle { get; public set; }
    public string Title { get; public set; }
    public string Subtitle { get; public set; }
    public bool IsToggle { get; public set; }
    public bool Checked { get; public set; }
    public ColorStateList TitleColors { get; public set; }
    public ColorStateList SubtitleColors { get; public set; }
    public int TitleTextSize { get; public set; }
    public int SubtitleTextSize { get; public set; }
    protected Int32[] AttributesResource { get; }
    private bool f { get; private set; }
    public RoundedButton(Context context);
    public RoundedButton(Context context, IAttributeSet attrs);
    public RoundedButton(Context context, IAttributeSet attrs, int defStyle);
    protected RoundedButton(IntPtr javaReference, JniHandleOwnership transfer);
    private static RoundedButton();
    [CompilerGeneratedAttribute]
private RelativeLayout get_a();
    [CompilerGeneratedAttribute]
private void set_a(RelativeLayout value);
    [CompilerGeneratedAttribute]
private ImageView get_b();
    [CompilerGeneratedAttribute]
private void set_b(ImageView value);
    [CompilerGeneratedAttribute]
private TextView get_c();
    [CompilerGeneratedAttribute]
private void set_c(TextView value);
    [CompilerGeneratedAttribute]
private TextView get_d();
    [CompilerGeneratedAttribute]
private void set_d(TextView value);
    [CompilerGeneratedAttribute]
private TextView get_e();
    [CompilerGeneratedAttribute]
private void set_e(TextView value);
    public RoundedButtonContentStyle get_ContentStyle();
    public void set_ContentStyle(RoundedButtonContentStyle value);
    public string get_Title();
    public void set_Title(string value);
    public string get_Subtitle();
    public void set_Subtitle(string value);
    public bool get_IsToggle();
    public void set_IsToggle(bool value);
    public bool get_Checked();
    public void set_Checked(bool value);
    public ColorStateList get_TitleColors();
    public void set_TitleColors(ColorStateList value);
    public ColorStateList get_SubtitleColors();
    public void set_SubtitleColors(ColorStateList value);
    public int get_TitleTextSize();
    public void set_TitleTextSize(int value);
    public int get_SubtitleTextSize();
    public void set_SubtitleTextSize(int value);
    protected virtual Int32[] get_AttributesResource();
    [CompilerGeneratedAttribute]
private bool get_f();
    [CompilerGeneratedAttribute]
private void set_f(bool value);
    [CompilerGeneratedAttribute]
public void add_Click(EventHandler value);
    [CompilerGeneratedAttribute]
public void remove_Click(EventHandler value);
    [CompilerGeneratedAttribute]
public void add_CheckedChange(EventHandler`1<CheckedChangeEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_CheckedChange(EventHandler`1<CheckedChangeEventArgs> value);
    protected virtual void InitializeView();
    protected virtual void ApplyAttribute(TypedArray attrsInfo, int attrId);
    protected virtual void OnViewCreated();
    public virtual bool OnTouchEvent(MotionEvent e);
    public void SetImageBackground(Drawable drawable);
    public void SetImageBackground(int resourceId);
    public void SetImageBackground(Color color);
    public void SetImageSource(Drawable drawable);
    public void SetImageSource(int resourceId);
    public void SetImageSource(Bitmap bitmap);
    public void SetImageSource(Uri uri);
    private void OnContentStyleChanged(RoundedButtonContentStyle a, RoundedButtonContentStyle b);
    private void OnTitleChanged(string a, string b);
    private void OnSubtitleChanged(string a, string b);
    private void OnCheckedChanged(bool a, bool b);
    private void OnTitleColorsChanged(ColorStateList a, ColorStateList b);
    private void OnSubtitleColorsChanged(ColorStateList a, ColorStateList b);
    private void OnTitleTextSizeChanged(int a, int b);
    private void OnSubtitleTextSizeChanged(int a, int b);
    private sealed virtual override ImageView Intersoft.Crosslight.Android.IImageControl.GetImageView();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.RoundedButtonBindingAdapter : ControlBindingAdapterBase`1<RoundedButton> {
    internal virtual BindingAdapterContext ResolveContext();
}
public enum Intersoft.Crosslight.Android.RoundedButtonContentStyle : Enum {
    public int value__;
    public static RoundedButtonContentStyle Title;
    public static RoundedButtonContentStyle Subtitle;
    public static RoundedButtonContentStyle Image;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.RoundedDrawable : Drawable {
    private float a;
    private RectF b;
    private BitmapShader c;
    private Paint d;
    private int e;
    public int Opacity { get; }
    public RoundedDrawable(Bitmap bitmap, float cornerRadius, Rect area, ScaleType scaleType);
    protected virtual void OnBoundsChange(Rect bounds);
    public virtual void Draw(Canvas canvas);
    public virtual int get_Opacity();
    public virtual void SetAlpha(int alpha);
    public virtual void SetColorFilter(ColorFilter cf);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.RoundedImageView : ImageView {
    public static Property CornerRadiusProperty;
    [CompilerGeneratedAttribute]
private Int32[] a;
    [CompilerGeneratedAttribute]
private bool b;
    [CompilerGeneratedAttribute]
private ControlContext c;
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler d;
    public int CornerRadius { get; public set; }
    private Int32[] e { get; private set; }
    internal bool IsInternalSet { get; internal set; }
    internal ControlContext ControlContext { get; internal set; }
    public RoundedImageView(Context context);
    public RoundedImageView(IntPtr javaReference, JniHandleOwnership transfer);
    public RoundedImageView(Context context, IAttributeSet attrs);
    public RoundedImageView(Context context, IAttributeSet attrs, int defStyleAttr);
    private static RoundedImageView();
    public int get_CornerRadius();
    public void set_CornerRadius(int value);
    [CompilerGeneratedAttribute]
private Int32[] get_e();
    [CompilerGeneratedAttribute]
private void set_e(Int32[] value);
    [CompilerGeneratedAttribute]
internal bool get_IsInternalSet();
    [CompilerGeneratedAttribute]
internal void set_IsInternalSet(bool value);
    protected virtual void Initialize();
    public sealed virtual void SetDrawableState(Int32[] states);
    public virtual Int32[] OnCreateDrawableState(int extraSpace);
    public virtual void SetImageDrawable(Drawable drawable);
    public virtual void SetImageResource(int resId);
    [CompilerGeneratedAttribute]
internal ControlContext get_ControlContext();
    [CompilerGeneratedAttribute]
internal void set_ControlContext(ControlContext value);
    protected virtual void Dispose(bool disposing);
    private void Initialize(Context a, IAttributeSet b, Int32[] c, int d, int e);
    protected virtual void OnPropertyChanged(Property property, object oldValue, object newValue);
    private void OnPropertyChanged(PropertyChangedEventArgs a);
    protected virtual void OnViewCreated();
    protected virtual void OnViewInitializing();
    public sealed virtual object GetValue(Property property);
    private sealed virtual override void Intersoft.Crosslight.Android.Controls.IView.MergeDrawableStates(Int32[] a, Int32[] b);
    private sealed virtual override void Intersoft.Crosslight.Android.Controls.IView.OnPropertyChanged(Property a, object b, object c);
    public virtual void OnPropertyChanged(string propertyName);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    public sealed virtual void SetValue(Property property, object value);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.RoundedImageViewBindingAdapter : ImageViewBindingAdapter`1<RoundedImageView> {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ScrollableDatePicker : DatePicker {
    public ScrollableDatePicker(Context context);
    public ScrollableDatePicker(Context context, IAttributeSet attrs);
    protected ScrollableDatePicker(IntPtr javaReference, JniHandleOwnership transfer);
    public ScrollableDatePicker(Context context, IAttributeSet attrs, int defStyle);
    public virtual bool OnInterceptTouchEvent(MotionEvent e);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ScrollableTimePicker : TimePicker {
    public ScrollableTimePicker(Context context);
    public ScrollableTimePicker(Context context, IAttributeSet attrs);
    protected ScrollableTimePicker(IntPtr javaReference, JniHandleOwnership transfer);
    public ScrollableTimePicker(Context context, IAttributeSet attrs, int defStyle);
    public virtual bool OnInterceptTouchEvent(MotionEvent e);
}
public class Intersoft.Crosslight.Android.ScrollSpeedListener : Object {
    private long a;
    private long b;
    private int c;
    private double d;
    private long e;
    public double GetSpeed();
    [NullableContextAttribute("1")]
public sealed virtual void OnScroll(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount);
    [NullableContextAttribute("1")]
public sealed virtual void OnScrollStateChanged(AbsListView view, ScrollState scrollState);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Intersoft.Crosslight.Android.SearchableListActivity`1 : ListActivity`1<TViewModel> {
    private string a;
    private bool b;
    [CompilerGeneratedAttribute]
private SearchView c;
    [CompilerGeneratedAttribute]
private IMenuItem d;
    [CompilerGeneratedAttribute]
private string e;
    [CompilerGeneratedAttribute]
private bool f;
    public SearchView SearchView { get; private set; }
    private IMenuItem g { get; private set; }
    protected bool HideSearchBarInitially { get; }
    protected int SearchButtonId { get; }
    protected string SearchHint { get; }
    public string SearchScope { get; public set; }
    private bool h { get; private set; }
    private string i { get; private set; }
    private bool j { get; private set; }
    protected SearchableListActivity`1(IntPtr intPtr, JniHandleOwnership jniHandleOwnership);
    protected virtual void OnViewDisposed();
    protected virtual ViewState CreateViewState();
    public virtual void OnRestoreNonConfigurationInstance();
    public virtual Object OnRetainNonConfigurationInstance();
    [CompilerGeneratedAttribute]
public SearchView get_SearchView();
    [CompilerGeneratedAttribute]
private void set_SearchView(SearchView value);
    [CompilerGeneratedAttribute]
private IMenuItem get_g();
    [CompilerGeneratedAttribute]
private void set_g(IMenuItem value);
    protected virtual bool get_HideSearchBarInitially();
    protected abstract virtual int get_SearchButtonId();
    protected virtual string get_SearchHint();
    public virtual string get_SearchScope();
    public virtual void set_SearchScope(string value);
    private bool get_h();
    private void set_h(bool value);
    [CompilerGeneratedAttribute]
private string get_i();
    [CompilerGeneratedAttribute]
private void set_i(string value);
    [CompilerGeneratedAttribute]
private bool get_j();
    [CompilerGeneratedAttribute]
private void set_j(bool value);
    public void Filter();
    private void HideKeyboard();
    protected virtual void OnCreate(Bundle savedInstanceState);
    public virtual bool OnCreateOptionsMenu(IMenu menu);
    protected virtual void OnNewIntent(Intent intent);
    public virtual bool OnOptionsItemSelected(IMenuItem item);
    private void OnQueryTextChanged(object a, QueryTextChangeEventArgs b);
    private void OnQueryTextSubmit(object a, QueryTextSubmitEventArgs b);
    protected virtual void OnIsSearchingChanged(bool oldValue, bool newValue);
    protected virtual bool CanRefresh();
    private void RefreshAdapter();
    protected virtual void OnViewModelPropertyChanged(PropertyChangedEventArgs e);
    public sealed virtual void HandleIntent(Intent intent);
    public sealed virtual bool OnMenuItemActionCollapse(IMenuItem item);
    public sealed virtual bool OnMenuItemActionExpand(IMenuItem item);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Intersoft.Crosslight.Android.SearchableListFragment`1 : ListFragment`1<TViewModel> {
    private string a;
    private bool b;
    [CompilerGeneratedAttribute]
private string c;
    [CompilerGeneratedAttribute]
private SearchView d;
    [CompilerGeneratedAttribute]
private IMenuItem e;
    [CompilerGeneratedAttribute]
private bool f;
    protected bool HideSearchBarInitially { get; }
    protected int SearchButtonId { get; }
    protected string SearchHint { get; }
    protected string SearchScope { get; protected set; }
    private bool g { get; private set; }
    private string h { get; private set; }
    private SearchView i { get; private set; }
    private IMenuItem j { get; private set; }
    private bool k { get; private set; }
    protected SearchableListFragment`1(IntPtr intPtr, JniHandleOwnership jniHandleOwnership);
    public virtual void OnViewCreated(View view, Bundle bundle);
    protected virtual void OnViewDisposed();
    protected virtual ViewState CreateViewState();
    protected virtual void OnRestoreNonConfigurationInstance(ViewState viewState);
    protected virtual ViewState OnRetainNonConfigurationInstance();
    protected virtual bool get_HideSearchBarInitially();
    protected virtual int get_SearchButtonId();
    protected virtual string get_SearchHint();
    protected virtual string get_SearchScope();
    protected virtual void set_SearchScope(string value);
    private bool get_g();
    private void set_g(bool value);
    [CompilerGeneratedAttribute]
private string get_h();
    [CompilerGeneratedAttribute]
private void set_h(string value);
    [CompilerGeneratedAttribute]
private SearchView get_i();
    [CompilerGeneratedAttribute]
private void set_i(SearchView value);
    [CompilerGeneratedAttribute]
private IMenuItem get_j();
    [CompilerGeneratedAttribute]
private void set_j(IMenuItem value);
    [CompilerGeneratedAttribute]
private bool get_k();
    [CompilerGeneratedAttribute]
private void set_k(bool value);
    private IMenuItem FindMenu(IViewContext a, int b);
    private void HideKeyboard();
    public virtual void OnCreateOptionsMenu(IMenu menu, MenuInflater inflater);
    public virtual bool OnOptionsItemSelected(IMenuItem item);
    private void OnQueryTextChanged(object a, QueryTextChangeEventArgs b);
    private void OnQueryTextSubmit(object a, QueryTextSubmitEventArgs b);
    protected virtual void OnIsSearchingChanged(bool oldValue, bool newValue);
    protected virtual void OnViewModelPropertyChanged(PropertyChangedEventArgs e);
    protected virtual bool CanRefresh();
    public sealed virtual void Filter(string queryText);
    public sealed virtual void RefreshAdapter();
    public sealed virtual bool OnMenuItemActionCollapse(IMenuItem item);
    public sealed virtual bool OnMenuItemActionExpand(IMenuItem item);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.SearchViewState : ViewState {
    [CompilerGeneratedAttribute]
private bool m;
    [CompilerGeneratedAttribute]
private string n;
    public bool ShouldDisplayingFilterItems { get; internal set; }
    public string QueryText { get; internal set; }
    [CompilerGeneratedAttribute]
public bool get_ShouldDisplayingFilterItems();
    [CompilerGeneratedAttribute]
internal void set_ShouldDisplayingFilterItems(bool value);
    [CompilerGeneratedAttribute]
public string get_QueryText();
    [CompilerGeneratedAttribute]
internal void set_QueryText(string value);
}
[AttributeUsageAttribute("384")]
public class Intersoft.Crosslight.Android.SectionAppearanceAttribute : AppearanceAttribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.SeekBarBindingAdapter : ControlBindingAdapterBase`1<SeekBar> {
    internal virtual BindingAdapterContext ResolveContext();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.SelectionWidgetBindingAdapter : ControlBindingAdapterBase`1<SelectionWidget> {
    internal virtual BindingAdapterContext ResolveContext();
}
public class Intersoft.Crosslight.Android.Services.ApplicationService : ApplicationServiceBase {
    [NullableContextAttribute("1")]
public ApplicationService(IApplicationContext context);
}
public class Intersoft.Crosslight.Android.Services.HashCryptographicService : object {
    [NullableContextAttribute("1")]
private string GetBase64Signature(HashAlgorithm a, string b);
    public sealed virtual bool IsAlgorithmSupported(HashAlgorithmKind algorithmKind);
    [NullableContextAttribute("1")]
public sealed virtual string CreateSignature(HashAlgorithmKind algorithmKind, string input, Byte[] key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Services.SyncService : object {
    private AccountManager a;
    private ProviderInfo b;
    public AccountManager AccountManager { get; }
    public ProviderInfo DefaultProvider { get; }
    public AccountManager get_AccountManager();
    public ProviderInfo get_DefaultProvider();
    private void CancelSync(Account a, string b);
    private void DisableSync(Account a, string b);
    private void EnableSync(long a, IAccount b, Account c, string d);
    private Account GetAccount(IAccount a);
    private string GetProvider(string a);
    public sealed virtual void CancelSync(IAccount account, string provider);
    public sealed virtual void DisableSync(IAccount account, string provider);
    public sealed virtual void EnableSync(IAccount account, long interval, string provider);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Services.ViewService : object {
    private Type a;
    private Dictionary`2<string, int> b;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<KeyValuePair`2<Type, string>, int> c;
    private Type d { get; }
    private Dictionary`2<string, int> e { get; }
    private static ViewService();
    private Type get_d();
    private Dictionary`2<string, int> get_e();
    private int TranslateNameToId(string a);
    public static int TranslateNameToId(Type resourceType, string name);
    public sealed virtual object FindName(object view, string name);
    public sealed virtual T FindName(object view, string name);
    public sealed virtual bool IsRunningOnUIThread();
    public sealed virtual void RunOnUIThread(Action action);
    public sealed virtual void RunOnUIThreadIfNeeded(Action action);
    public sealed virtual IAsyncResult RunOnBackgroundThread(Action action, int delay);
}
public enum Intersoft.Crosslight.Android.SlideDirection : Enum {
    public int value__;
    public static SlideDirection Left;
    public static SlideDirection Right;
}
public enum Intersoft.Crosslight.Android.SliderIndicatorMode : Enum {
    public int value__;
    public static SliderIndicatorMode None;
    public static SliderIndicatorMode Bullet;
    public static SliderIndicatorMode Strip;
    public static SliderIndicatorMode Custom;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.SmoothProgressBar : ProgressBar {
    private static int a;
    private static int b;
    private static int c;
    private static int d;
    public SmoothProgressBar(Context context);
    public SmoothProgressBar(Context context, IAttributeSet attrs);
    public SmoothProgressBar(Context context, IAttributeSet attrs, int defStyle);
    internal void SetInterpolator(IInterpolator a);
    internal void ApplyStyle(int a);
    private SmoothProgressDrawable CheckIndeterminateDrawable();
    internal void SetSmoothProgressDrawableColor(int a);
    internal void SetSmoothProgressDrawableColors(Int32[] a);
    internal void SetSmoothProgressDrawableInterpolator(IInterpolator a);
    internal void SetSmoothProgressDrawableMirrorMode(bool a);
    internal void SetSmoothProgressDrawableReversed(bool a);
    internal void SetSmoothProgressDrawableSectionsCount(int a);
    internal void SetSmoothProgressDrawableSeparatorLength(int a);
    internal void SetSmoothProgressDrawableSpeed(float a);
    internal void SetSmoothProgressDrawableStrokeWidth(float a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.SmoothProgressBarBuilder : object {
    private Int32[] a;
    private IInterpolator b;
    private bool c;
    private bool d;
    private int e;
    private float f;
    private int g;
    private float h;
    internal SmoothProgressBarBuilder(Context a);
    internal SmoothProgressDrawable Build();
    internal SmoothProgressBarBuilder Color(int a);
    internal SmoothProgressBarBuilder Colors(Int32[] a);
    private void initValues(Context a);
    internal SmoothProgressBarBuilder Interpolator(IInterpolator a);
    internal SmoothProgressBarBuilder MirrorMode(bool a);
    internal SmoothProgressBarBuilder Reversed(bool a);
    internal SmoothProgressBarBuilder SectionsCount(int a);
    internal SmoothProgressBarBuilder SeparatorLength(int a);
    internal SmoothProgressBarBuilder Speed(float a);
    internal SmoothProgressBarBuilder StrokeWidth(float a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.SmoothProgressDrawable : Drawable {
    private Paint a;
    private Runnable b;
    private Rect c;
    private Int32[] d;
    private int e;
    private float f;
    private IInterpolator g;
    private float h;
    private bool i;
    private bool j;
    private bool k;
    private bool l;
    private int m;
    private int n;
    private float o;
    private static long p;
    private static float q;
    public int Opacity { get; }
    public bool IsRunning { get; }
    internal SmoothProgressDrawable(IInterpolator a, int b, int c, Int32[] d, float e, float f, bool g, bool h);
    public virtual int get_Opacity();
    private int DecrementColor(int a);
    public virtual void Draw(Canvas a);
    private void DrawLine(Canvas a, int b, float c, float d, float e, float f, int g);
    private void DrawStrokes(Canvas a);
    private int IncrementColor(int a);
    public void ScheduleSelf(Runnable a, long b);
    public virtual void SetAlpha(int a);
    public void SetColor(int a);
    public virtual void SetColorFilter(ColorFilter a);
    internal void SetColors(Int32[] a);
    internal void SetInterpolator(IInterpolator a);
    internal void SetMirrorMode(bool a);
    internal void SetReversed(bool a);
    internal void SetSectionsCount(int a);
    internal void SetSeparatorLength(int a);
    internal void SetSpeed(float a);
    internal void SetStrokeWidth(float a);
    public sealed virtual void Start();
    public sealed virtual void Stop();
    public sealed virtual bool get_IsRunning();
    [CompilerGeneratedAttribute]
private void <.ctor>b__17_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.SpinnerBindingAdapter : ControlBindingAdapterBase`1<Spinner> {
    internal virtual BindingAdapterContext ResolveContext();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Intersoft.Crosslight.Android.StartActivity : Activity`1<EmptyViewModel> {
    [CompilerGeneratedAttribute]
private static string a;
    private IApplicationInitializer b;
    private IApplicationInitializer c;
    internal static string NotificationJson { get; internal set; }
    protected int SplashScreenLatency { get; }
    private object Intersoft.Crosslight.IApplicationHost.ApplicationInstance { get; }
    private Type Intersoft.Crosslight.IApplicationHost.ApplicationType { get; }
    protected StartActivity(int contentLayoutId);
    protected StartActivity(IntPtr intPtr, JniHandleOwnership handleOwnership);
    [CompilerGeneratedAttribute]
internal static string get_NotificationJson();
    [CompilerGeneratedAttribute]
internal static void set_NotificationJson(string value);
    protected virtual int get_SplashScreenLatency();
    protected virtual void OnCreate(Bundle savedInstanceState);
    private void Initialize();
    protected virtual void OnViewCreated();
    private void StartApplication();
    private sealed virtual override object Intersoft.Crosslight.IApplicationHost.get_ApplicationInstance();
    private sealed virtual override Type Intersoft.Crosslight.IApplicationHost.get_ApplicationType();
    private sealed virtual override IEnumerable`1<Assembly> Intersoft.Crosslight.IApplicationHost.GetLoadedAssemblies();
    [CompilerGeneratedAttribute]
private void <StartApplication>b__14_0();
    [CompilerGeneratedAttribute]
private void <StartApplication>b__14_1();
    [CompilerGeneratedAttribute]
private void <StartApplication>b__14_2();
    [CompilerGeneratedAttribute]
private void <StartApplication>b__14_3();
}
[ExtensionAttribute]
public static class Intersoft.Crosslight.Android.StreamExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static Byte[] ToByte(Stream input);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Intersoft.Crosslight.Android.StringExtensions : object {
    [ExtensionAttribute]
public static bool IsUri(string str);
    [ExtensionAttribute]
public static String[] SplitBy(string value, int size);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.SwitchAppearanceAttribute : EditorAppearanceAttribute {
    public static AppearanceProperty OnTextProperty;
    public static AppearanceProperty OffTextProperty;
    public string OnText { get; public set; }
    public string OffText { get; public set; }
    private static SwitchAppearanceAttribute();
    public string get_OnText();
    public void set_OnText(string value);
    public string get_OffText();
    public void set_OffText(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.SwitchBindingAdapter : ControlBindingAdapterBase`1<Switch> {
    internal virtual BindingAdapterContext ResolveContext();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Intersoft.Crosslight.Android.TabActivity`1 : FragmentActivity`1<TViewModel> {
    private int a;
    private int b;
    private Dictionary`2<NavigationItem, Fragment> c;
    private Dictionary`2<NavigationItem, IViewModel> d;
    [CompilerGeneratedAttribute]
private bool e;
    protected bool ShouldHandleNavigation { get; }
    protected int ContentLayoutId { get; }
    protected int TabContainerId { get; }
    private Dictionary`2<NavigationItem, Fragment> f { get; }
    private Dictionary`2<NavigationItem, IViewModel> g { get; }
    private bool h { get; private set; }
    internal bool AutoCreateChildViewModels { get; }
    protected TabActivity`1(int contentLayoutId, int tabContainerId);
    protected TabActivity`1(IntPtr intPtr, JniHandleOwnership handleOwnership);
    protected virtual bool get_ShouldHandleNavigation();
    protected virtual void OnViewInitialized();
    protected virtual void OnViewCreated();
    protected virtual void OnViewDisposed();
    protected virtual void OnViewModelPropertyChanged(PropertyChangedEventArgs e);
    public virtual void OnRestoreCustomNonConfigurationInstance();
    public virtual Object OnRetainCustomNonConfigurationInstance();
    protected virtual ViewState CreateViewState();
    protected IViewModel ResolveViewModel(int index);
    private void InitializeChildViewModels();
    private void InitializeTabItems();
    protected virtual int get_ContentLayoutId();
    protected virtual int get_TabContainerId();
    private Dictionary`2<NavigationItem, Fragment> get_f();
    private Dictionary`2<NavigationItem, IViewModel> get_g();
    [CompilerGeneratedAttribute]
private bool get_h();
    [CompilerGeneratedAttribute]
private void set_h(bool value);
    internal virtual bool get_AutoCreateChildViewModels();
    private void AddTabToActionBar(NavigationItem a, int b, int c);
    private void OnTabSelected(object a, TabEventArgs b);
    private Type ResolveFragmentType(NavigationTarget a);
    private void SelectTab(int a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.TabActivityViewState : FragmentActivityViewState {
    [CompilerGeneratedAttribute]
private Dictionary`2<NavigationItem, Fragment> o;
    [CompilerGeneratedAttribute]
private Dictionary`2<NavigationItem, IViewModel> p;
    public Dictionary`2<NavigationItem, Fragment> CachedFragments { get; internal set; }
    public Dictionary`2<NavigationItem, IViewModel> CachedViewModels { get; internal set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<NavigationItem, Fragment> get_CachedFragments();
    [CompilerGeneratedAttribute]
internal void set_CachedFragments(Dictionary`2<NavigationItem, Fragment> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<NavigationItem, IViewModel> get_CachedViewModels();
    [CompilerGeneratedAttribute]
internal void set_CachedViewModels(Dictionary`2<NavigationItem, IViewModel> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Intersoft.Crosslight.Android.TabFragment`1 : Fragment`1<TViewModel> {
    private int a;
    private int b;
    private Dictionary`2<NavigationItem, Fragment> c;
    private Dictionary`2<NavigationItem, IViewModel> d;
    [CompilerGeneratedAttribute]
private IFragment e;
    [CompilerGeneratedAttribute]
private bool f;
    protected int ContentLayoutId { get; }
    protected int TabContainerId { get; }
    private IFragment g { get; private set; }
    private Dictionary`2<NavigationItem, Fragment> h { get; }
    private Dictionary`2<NavigationItem, IViewModel> i { get; }
    private bool j { get; private set; }
    internal bool AutoCreateChildViewModels { get; }
    protected TabFragment`1(int contentLayoutId, int tabContainerId);
    protected TabFragment`1(IntPtr intPtr, JniHandleOwnership handleOwnership);
    protected virtual void OnViewInitialized();
    protected virtual void OnViewCreated();
    protected virtual void OnViewDisposed();
    public virtual void DisposeFragment();
    protected virtual void OnViewModelPropertyChanged(PropertyChangedEventArgs e);
    protected virtual void OnRestoreNonConfigurationInstance(ViewState viewState);
    protected virtual ViewState OnRetainNonConfigurationInstance();
    protected virtual ViewState CreateViewState();
    protected IViewModel ResolveViewModel(int index);
    private void InitializeChildViewModels();
    private void InitializeTabItems();
    protected virtual int get_ContentLayoutId();
    protected virtual int get_TabContainerId();
    [CompilerGeneratedAttribute]
private IFragment get_g();
    [CompilerGeneratedAttribute]
private void set_g(IFragment value);
    private Dictionary`2<NavigationItem, Fragment> get_h();
    private Dictionary`2<NavigationItem, IViewModel> get_i();
    [CompilerGeneratedAttribute]
private bool get_j();
    [CompilerGeneratedAttribute]
private void set_j(bool value);
    internal virtual bool get_AutoCreateChildViewModels();
    private void AddTabToActionBar(NavigationItem a, int b, int c);
    private void OnTabSelected(object a, TabEventArgs b);
    private Type ResolveFragmentType(NavigationTarget a);
    private void SelectTab(int a);
    private sealed virtual override Bundle Intersoft.Crosslight.Android.IFragment.get_Arguments();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.set_Arguments(Bundle a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.TabViewState : ViewState {
    [CompilerGeneratedAttribute]
private Dictionary`2<NavigationItem, Fragment> o;
    [CompilerGeneratedAttribute]
private Dictionary`2<NavigationItem, IViewModel> p;
    public Dictionary`2<NavigationItem, Fragment> CachedFragments { get; internal set; }
    public Dictionary`2<NavigationItem, IViewModel> CachedViewModels { get; internal set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<NavigationItem, Fragment> get_CachedFragments();
    [CompilerGeneratedAttribute]
internal void set_CachedFragments(Dictionary`2<NavigationItem, Fragment> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<NavigationItem, IViewModel> get_CachedViewModels();
    [CompilerGeneratedAttribute]
internal void set_CachedViewModels(Dictionary`2<NavigationItem, IViewModel> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.TextAlertDialogSettings : AlertDialogSettings {
    [CompilerGeneratedAttribute]
private string l;
    internal string Message { get; internal set; }
    [CompilerGeneratedAttribute]
internal string get_Message();
    [CompilerGeneratedAttribute]
internal void set_Message(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.TextAppearanceAttribute : EditorAppearanceAttribute {
    public static AppearanceProperty IsTextSelectableProperty;
    public static AppearanceProperty HintTextColorProperty;
    public static AppearanceProperty LinkTextColorProperty;
    public static AppearanceProperty HighlightColorProperty;
    public bool IsTextSelectable { get; public set; }
    public string HintTextColor { get; public set; }
    public string LinkTextColor { get; public set; }
    public string HighlightColor { get; public set; }
    private static TextAppearanceAttribute();
    public bool get_IsTextSelectable();
    public void set_IsTextSelectable(bool value);
    public string get_HintTextColor();
    public void set_HintTextColor(string value);
    public string get_LinkTextColor();
    public void set_LinkTextColor(string value);
    public string get_HighlightColor();
    public void set_HighlightColor(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.TextViewBindingAdapter : ControlBindingAdapterBase`1<TextView> {
    internal virtual BindingAdapterContext ResolveContext();
}
public class Intersoft.Crosslight.Android.TimePickerAppearanceAttribute : EditorAppearanceAttribute {
    [NullableAttribute("1")]
public static AppearanceProperty Is24HourViewProperty;
    public bool Is24HourView { get; public set; }
    private static TimePickerAppearanceAttribute();
    public bool get_Is24HourView();
    public void set_Is24HourView(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.TimePickerBindingAdapter : ControlBindingAdapterBase`1<TimePicker> {
    internal virtual BindingAdapterContext ResolveContext();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ToastPresenter : PresenterBase {
    private Context f;
    private Animation g;
    private Animation h;
    private bool i;
    private LinearLayout j;
    private object d;
    private Toast k;
    private void OnEnterAnimationStart(object a, AnimationStartEventArgs b);
    private void OnExitAnimationEnd(object a, AnimationEndEventArgs b);
    private void OnOverlayLayoutTouch(object a, TouchEventArgs b);
    public sealed virtual void SetOwner(object owner);
    public sealed virtual void Show(string message);
    public sealed virtual void Show(string message, double duration);
    public sealed virtual void Show(string message, string title);
    public sealed virtual void Show(string message, string title, string image);
    public sealed virtual void Show(string message, string title, double duration);
    public sealed virtual void Show(string message, string title, string image, double duration);
    public sealed virtual void Show(string message, string title, string image, double duration, ToastGravity gravity);
    public sealed virtual void Show(string message, string title, string image, ToastSettings settings);
    [CompilerGeneratedAttribute]
private void <OnEnterAnimationStart>b__7_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.ToggleButtonBindingAdapter : ControlBindingAdapterBase`1<ToggleButton> {
    internal virtual BindingAdapterContext ResolveContext();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ToggleImageButton : ImageButton {
    private static Int32[] a;
    private bool b;
    [CompilerGeneratedAttribute]
private bool c;
    [CompilerGeneratedAttribute]
private IOnCheckedChangeListener d;
    [CompilerGeneratedAttribute]
private EventHandler`1<CheckedChangeEventArgs> e;
    public bool Checked { get; public set; }
    private bool f { get; private set; }
    private IOnCheckedChangeListener g { get; private set; }
    public ToggleImageButton(Context context);
    public ToggleImageButton(Context context, IAttributeSet attrs);
    public ToggleImageButton(Context context, IAttributeSet attrs, int defStyle);
    protected ToggleImageButton(IntPtr javaReference, JniHandleOwnership transfer);
    private static ToggleImageButton();
    public sealed virtual bool get_Checked();
    public sealed virtual void set_Checked(bool value);
    [CompilerGeneratedAttribute]
private bool get_f();
    [CompilerGeneratedAttribute]
private void set_f(bool value);
    [CompilerGeneratedAttribute]
private IOnCheckedChangeListener get_g();
    [CompilerGeneratedAttribute]
private void set_g(IOnCheckedChangeListener value);
    [CompilerGeneratedAttribute]
public void add_CheckedChange(EventHandler`1<CheckedChangeEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_CheckedChange(EventHandler`1<CheckedChangeEventArgs> value);
    private void InitAttr(Context a, IAttributeSet b, int c);
    public virtual bool PerformClick();
    public sealed virtual void Toggle();
    protected virtual IParcelable OnSaveInstanceState();
    public virtual Int32[] OnCreateDrawableState(int extraSpace);
    protected virtual void OnRestoreInstanceState(IParcelable state);
    public void SetOnCheckedChangeListener(IOnCheckedChangeListener onCheckedChangeListener);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.ToggleImageButtonBindingAdapter : ControlBindingAdapterBase`1<ToggleImageButton> {
    internal virtual BindingAdapterContext ResolveContext();
}
public enum Intersoft.Crosslight.Android.TransitionMode : Enum {
    public int value__;
    public static TransitionMode Fade;
    public static TransitionMode SlideLeft;
    public static TransitionMode SlideRight;
    public static TransitionMode SlideUp;
    public static TransitionMode SlideDown;
    public static TransitionMode Custom;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Intersoft.Crosslight.Android.TypeExtensions : object {
    [ExtensionAttribute]
public static bool IsDateTime(Type type);
    [ExtensionAttribute]
public static bool IsNumericDecimal(Type type);
    [ExtensionAttribute]
public static bool IsNumericNonDecimal(Type type);
    [ExtensionAttribute]
public static bool IsRootView(Type type);
}
public enum Intersoft.Crosslight.Android.Typeface : Enum {
    public int value__;
    public static Typeface Default;
    public static Typeface DefaultBold;
    public static Typeface Serif;
    public static Typeface SansSerif;
    public static Typeface Monospace;
}
public enum Intersoft.Crosslight.Android.TypefaceStyle : Enum {
    public int value__;
    public static TypefaceStyle Bold;
    public static TypefaceStyle Italic;
    public static TypefaceStyle BoldItalic;
    public static TypefaceStyle Normal;
}
public class Intersoft.Crosslight.Android.UIContainerDefinition : UIDefinition {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Intersoft.Crosslight.Android.UIDefinition : object {
    [CompilerGeneratedAttribute]
private UIDefinition g;
    [CompilerGeneratedAttribute]
private AppearanceAttributeBase h;
    public UIDefinition Parent { get; public set; }
    public AppearanceAttributeBase AppearanceMetadata { get; public set; }
    [CompilerGeneratedAttribute]
public UIDefinition get_Parent();
    [CompilerGeneratedAttribute]
public void set_Parent(UIDefinition value);
    [CompilerGeneratedAttribute]
public AppearanceAttributeBase get_AppearanceMetadata();
    [CompilerGeneratedAttribute]
public void set_AppearanceMetadata(AppearanceAttributeBase value);
    public object GetActualValue(AppearanceProperty property);
    public string GetActualTextColor();
    public int GetActualTextSize();
    public Typeface GetActualTypeface();
    public TypefaceStyle GetActualTypefaceStyle();
}
public class Intersoft.Crosslight.Android.UIEditorDefinition : UIDefinition {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.UIFormDefinition : UIDefinition {
    private List`1<UISectionDefinition> a;
    private List`1<UIPropertyDefinition> b;
    public List`1<UISectionDefinition> Sections { get; }
    public List`1<UIPropertyDefinition> Properties { get; }
    public List`1<UISectionDefinition> get_Sections();
    public List`1<UIPropertyDefinition> get_Properties();
}
public class Intersoft.Crosslight.Android.UIHeaderDefinition : UIDefinition {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Intersoft.Crosslight.Android.UIProperties : object {
    public static BindableProperty HasStaticViewProperty;
    public static BindableProperty IsActivityRestartingProperty;
    public static BindableProperty RuntimeStylesProperty;
    internal static BindableProperty IsDisposedProperty;
    internal static BindableProperty BindingSourcesProperty;
    internal static BindableProperty AsyncLoaderProperty;
    internal static BindableProperty DelayBindingProperty;
    internal static BindableProperty MultipleSelectionObserverProperty;
    internal static BindableProperty ImageSettingsProperty;
    private static UIProperties();
    internal static bool GetIsDisposed(object a);
    internal static void SetIsDisposed(object a, bool b);
    internal static IMultipleSelectionObserver GetMultipleSelectionObserver(object a);
    internal static void SetMultipleSelectionObserver(object a, IMultipleSelectionObserver b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.UIPropertyDefinition : UIDefinition {
    [CompilerGeneratedAttribute]
private string c;
    [CompilerGeneratedAttribute]
private UIContainerDefinition d;
    [CompilerGeneratedAttribute]
private UIHeaderDefinition e;
    [CompilerGeneratedAttribute]
private UIEditorDefinition f;
    public string Name { get; public set; }
    public UIContainerDefinition ContainerDefinition { get; public set; }
    public UIHeaderDefinition HeaderDefinition { get; public set; }
    public UIEditorDefinition EditorDefinition { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public UIContainerDefinition get_ContainerDefinition();
    [CompilerGeneratedAttribute]
public void set_ContainerDefinition(UIContainerDefinition value);
    [CompilerGeneratedAttribute]
public UIHeaderDefinition get_HeaderDefinition();
    [CompilerGeneratedAttribute]
public void set_HeaderDefinition(UIHeaderDefinition value);
    [CompilerGeneratedAttribute]
public UIEditorDefinition get_EditorDefinition();
    [CompilerGeneratedAttribute]
public void set_EditorDefinition(UIEditorDefinition value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.UISectionDefinition : UIDefinition {
    private List`1<UIPropertyDefinition> b;
    [CompilerGeneratedAttribute]
private string c;
    public string Name { get; public set; }
    public List`1<UIPropertyDefinition> Properties { get; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public List`1<UIPropertyDefinition> get_Properties();
}
[NullableContextAttribute("1")]
public interface Intersoft.Crosslight.Android.v7.ISearchableRecyclerViewFragment {
    public bool IsSearchResultFragment { get; public set; }
    public string Query { get; public set; }
    public bool IsNavigatingToSearchFragment { get; public set; }
    public abstract virtual bool get_IsSearchResultFragment();
    public abstract virtual void set_IsSearchResultFragment(bool value);
    public abstract virtual string get_Query();
    public abstract virtual void set_Query(string value);
    public abstract virtual bool get_IsNavigatingToSearchFragment();
    public abstract virtual void set_IsNavigatingToSearchFragment(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Intersoft.Crosslight.Android.ViewBindingAdapter : ControlBindingAdapterBase`1<View> {
    internal virtual BindingAdapterContext ResolveContext();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewBuilders.ButtonWidgetBuilder : ComponentViewBuilder {
    public string EditorIdentifier { get; }
    public virtual string get_EditorIdentifier();
    public virtual IComponentView Build(object viewHost, PropertyDefinition property);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewBuilders.CheckBoxWidgetBuilder : ComponentViewBuilder {
    public string EditorIdentifier { get; }
    public virtual string get_EditorIdentifier();
    public virtual IComponentView Build(object viewHost, PropertyDefinition property);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewBuilders.ChildNavigationWidgetBuilder : ComponentViewBuilder {
    public string EditorIdentifier { get; }
    public virtual string get_EditorIdentifier();
    public virtual IComponentView Build(object viewHost, PropertyDefinition property);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewBuilders.ComponentViewBuilder : object {
    public ComponentType ComponentType { get; }
    public string EditorIdentifier { get; }
    public virtual IComponentView Build(object viewHost, PropertyDefinition property);
    public virtual ComponentType get_ComponentType();
    public virtual string get_EditorIdentifier();
    private sealed virtual override T Intersoft.Crosslight.IViewBuilder.Build(object a, ComponentDefinitionBase b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewBuilders.DatePickerWidgetBuilder : ComponentViewBuilder {
    public string EditorIdentifier { get; }
    public virtual string get_EditorIdentifier();
    public virtual IComponentView Build(object viewHost, PropertyDefinition property);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewBuilders.DateTimePickerWidgetBuilder : ComponentViewBuilder {
    public string EditorIdentifier { get; }
    public virtual string get_EditorIdentifier();
    public virtual IComponentView Build(object viewHost, PropertyDefinition property);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewBuilders.FormContainerBuilder : object {
    public string EditorIdentifier { get; }
    public ComponentType ComponentType { get; }
    public virtual IContainerView Build(object viewHost, ComponentDefinitionBase definition);
    public sealed virtual string get_EditorIdentifier();
    public virtual ComponentType get_ComponentType();
    public sealed virtual T Build(object viewHost, ComponentDefinitionBase definition);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewBuilders.HyperlinkWidgetBuilder : ComponentViewBuilder {
    public string EditorIdentifier { get; }
    public virtual string get_EditorIdentifier();
    public virtual IComponentView Build(object viewHost, PropertyDefinition property);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewBuilders.ImageWidgetBuilder : ComponentViewBuilder {
    public string EditorIdentifier { get; }
    public virtual string get_EditorIdentifier();
    public virtual IComponentView Build(object viewHost, PropertyDefinition property);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewBuilders.ListViewWidgetBuilder : ComponentViewBuilder {
    public string EditorIdentifier { get; }
    public virtual string get_EditorIdentifier();
    public virtual IComponentView Build(object viewHost, PropertyDefinition property);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewBuilders.NumericStepperWidgetBuilder : ComponentViewBuilder {
    public string EditorIdentifier { get; }
    public virtual string get_EditorIdentifier();
    public virtual IComponentView Build(object viewHost, PropertyDefinition property);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewBuilders.RadioButtonWidgetBuilder : ComponentViewBuilder {
    public string EditorIdentifier { get; }
    public virtual string get_EditorIdentifier();
    public virtual IComponentView Build(object viewHost, PropertyDefinition property);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewBuilders.RadioGroupWidgetBuilder : ComponentViewBuilder {
    public string EditorIdentifier { get; }
    public virtual string get_EditorIdentifier();
    public virtual IComponentView Build(object viewHost, PropertyDefinition property);
}
public class Intersoft.Crosslight.Android.ViewBuilders.SectionContainerBuilder : FormContainerBuilder {
    public ComponentType ComponentType { get; }
    public virtual ComponentType get_ComponentType();
    [NullableContextAttribute("1")]
public virtual IContainerView Build(object viewHost, ComponentDefinitionBase definition);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewBuilders.SeekBarWidgetBuilder : ComponentViewBuilder {
    public string EditorIdentifier { get; }
    public virtual string get_EditorIdentifier();
    public virtual IComponentView Build(object viewHost, PropertyDefinition property);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewBuilders.SegmentedWidgetBuilder : ComponentViewBuilder {
    public string EditorIdentifier { get; }
    public virtual string get_EditorIdentifier();
    public virtual IComponentView Build(object viewHost, PropertyDefinition property);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewBuilders.SelectionWidgetBuilder : ComponentViewBuilder {
    public string EditorIdentifier { get; }
    public virtual string get_EditorIdentifier();
    public virtual IComponentView Build(object viewHost, PropertyDefinition property);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewBuilders.SpinnerWidgetBuilder : ComponentViewBuilder {
    public string EditorIdentifier { get; }
    public virtual string get_EditorIdentifier();
    public virtual IComponentView Build(object viewHost, PropertyDefinition property);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewBuilders.SwitchWidgetBuilder : ComponentViewBuilder {
    public string EditorIdentifier { get; }
    public virtual string get_EditorIdentifier();
    public virtual IComponentView Build(object viewHost, PropertyDefinition property);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewBuilders.TimePickerWidgetBuilder : ComponentViewBuilder {
    public string EditorIdentifier { get; }
    public virtual string get_EditorIdentifier();
    public virtual IComponentView Build(object viewHost, PropertyDefinition property);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Intersoft.Crosslight.Android.ViewContextManager : object {
    public static Dictionary`2<Type, Type> _activities;
    public static Dictionary`2<Type, Type> _fragments;
    public static Dictionary`2<Type, Type> Activities { get; }
    public static Dictionary`2<Type, Type> Fragments { get; }
    public static Dictionary`2<Type, Type> get_Activities();
    public static Dictionary`2<Type, Type> get_Fragments();
    [NullableContextAttribute("2")]
public static void RegisterActivity();
    [NullableContextAttribute("2")]
public static void RegisterFragment();
    public static Type ResolveViewContextType(NavigationTarget navigationTarget, Type excludedType, bool ignoreDeviceKind);
    public static Type ResolveViewContextType(NavigationTarget navigationTarget, Type[] excludedTypes, bool ignoreDeviceKind);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Intersoft.Crosslight.Android.ViewExtensions : object {
    private static Dictionary`2<View, Dictionary`2<BindableProperty, object>> a;
    private static ViewExtensions();
    [ExtensionAttribute]
public static T GetElement(View view, string name);
    [ExtensionAttribute]
public static IFragment GetFragment(View view);
    [ExtensionAttribute]
public static object GetBindingSource(View view, BindableProperty property);
    [ExtensionAttribute]
internal static bool HasBindingSource(View a);
    [ExtensionAttribute]
internal static void SetBindingSource(View a, BindableProperty b, object c);
    [ExtensionAttribute]
internal static void ClearBindingSource(View a, BindableProperty b);
    [ExtensionAttribute]
internal static void ClearBindingSource(View a);
    [ExtensionAttribute]
public static bool IsVisible(View view);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewHolder : object {
    private Dictionary`2<string, View> a;
    public Dictionary`2<string, View> Views { get; }
    public Dictionary`2<string, View> get_Views();
    public T GetView(string name);
    public View GetView(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Intersoft.Crosslight.Android.ViewPagerActivity`1 : FragmentActivity`1<TViewModel> {
    private int a;
    private int b;
    private int c;
    private int d;
    private Dictionary`2<NavigationItem, Fragment> e;
    private Dictionary`2<NavigationItem, IViewModel> f;
    [CompilerGeneratedAttribute]
private TabPageIndicator g;
    [CompilerGeneratedAttribute]
private ViewPager h;
    protected bool ShouldHandleNavigation { get; }
    protected int ContentLayoutId { get; }
    private TabPageIndicator i { get; private set; }
    protected int TabPageIndicatorId { get; }
    public ViewPager ViewPager { get; private set; }
    protected int ViewPagerId { get; }
    public int ViewPagerIndicatorTabId { get; public set; }
    private Dictionary`2<NavigationItem, Fragment> j { get; }
    private Dictionary`2<NavigationItem, IViewModel> k { get; }
    internal bool AutoCreateChildViewModels { get; }
    protected ViewPagerActivity`1(IntPtr intPtr, JniHandleOwnership jniHandleOwnership);
    protected ViewPagerActivity`1(int contentLayoutId, int viewPagerId);
    protected virtual bool get_ShouldHandleNavigation();
    public virtual void OnRestoreCustomNonConfigurationInstance();
    public virtual Object OnRetainCustomNonConfigurationInstance();
    protected virtual ViewState CreateViewState();
    protected IViewModel ResolveViewModel(int index);
    protected virtual int get_ContentLayoutId();
    [CompilerGeneratedAttribute]
private TabPageIndicator get_i();
    [CompilerGeneratedAttribute]
private void set_i(TabPageIndicator value);
    protected virtual int get_TabPageIndicatorId();
    [CompilerGeneratedAttribute]
public ViewPager get_ViewPager();
    [CompilerGeneratedAttribute]
private void set_ViewPager(ViewPager value);
    protected virtual int get_ViewPagerId();
    public virtual int get_ViewPagerIndicatorTabId();
    public virtual void set_ViewPagerIndicatorTabId(int value);
    private Dictionary`2<NavigationItem, Fragment> get_j();
    private Dictionary`2<NavigationItem, IViewModel> get_k();
    internal virtual bool get_AutoCreateChildViewModels();
    private void InitializePager();
    protected virtual void InitializeView();
    protected virtual void OnViewInitialized();
    protected virtual void OnViewDisposed();
    protected virtual void OnViewModelPropertyChanged(PropertyChangedEventArgs e);
    private void OnViewPagerPageSelected(object a, PageSelectedEventArgs b);
    protected virtual void OnViewPagerPageSelected(int position);
    protected virtual void OnViewCreated();
    private void InitializeChildViewModels();
    private sealed virtual override IViewModel Intersoft.Crosslight.Android.IViewPagerActivity.GetSelectedViewModel();
    private sealed virtual override void AndroidX.ViewPager.Widget.ViewPager.IOnPageChangeListener.OnPageScrollStateChanged(int a);
    private sealed virtual override void AndroidX.ViewPager.Widget.ViewPager.IOnPageChangeListener.OnPageScrolled(int a, float b, int c);
    private sealed virtual override void AndroidX.ViewPager.Widget.ViewPager.IOnPageChangeListener.OnPageSelected(int a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewPagerActivityViewState : FragmentActivityViewState {
    [CompilerGeneratedAttribute]
private Dictionary`2<NavigationItem, Fragment> o;
    [CompilerGeneratedAttribute]
private Dictionary`2<NavigationItem, IViewModel> p;
    [CompilerGeneratedAttribute]
private Bundle q;
    public Dictionary`2<NavigationItem, Fragment> CachedFragments { get; internal set; }
    public Dictionary`2<NavigationItem, IViewModel> CachedViewModels { get; internal set; }
    public Bundle AdapterState { get; internal set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<NavigationItem, Fragment> get_CachedFragments();
    [CompilerGeneratedAttribute]
internal void set_CachedFragments(Dictionary`2<NavigationItem, Fragment> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<NavigationItem, IViewModel> get_CachedViewModels();
    [CompilerGeneratedAttribute]
internal void set_CachedViewModels(Dictionary`2<NavigationItem, IViewModel> value);
    [CompilerGeneratedAttribute]
public Bundle get_AdapterState();
    [CompilerGeneratedAttribute]
internal void set_AdapterState(Bundle value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewPagerAdapter : FragmentStatePagerAdapter {
    private Dictionary`2<Type, Fragment> a;
    [CompilerGeneratedAttribute]
private FragmentManager b;
    [CompilerGeneratedAttribute]
private IMultiPageViewModel c;
    [CompilerGeneratedAttribute]
private Dictionary`2<NavigationItem, Fragment> d;
    [CompilerGeneratedAttribute]
private Dictionary`2<NavigationItem, IViewModel> e;
    [CompilerGeneratedAttribute]
private Bundle f;
    public int Count { get; }
    private FragmentManager g { get; private set; }
    private IMultiPageViewModel h { get; private set; }
    internal Dictionary`2<NavigationItem, Fragment> CachedFragments { get; internal set; }
    internal Dictionary`2<NavigationItem, IViewModel> CachedViewModels { get; internal set; }
    internal Bundle State { get; internal set; }
    public ViewPagerAdapter(FragmentManager fragmentManager, IMultiPageViewModel viewModel);
    protected ViewPagerAdapter(IntPtr javaReference, JniHandleOwnership transfer);
    public virtual int get_Count();
    [CompilerGeneratedAttribute]
private FragmentManager get_g();
    [CompilerGeneratedAttribute]
private void set_g(FragmentManager value);
    [CompilerGeneratedAttribute]
private IMultiPageViewModel get_h();
    [CompilerGeneratedAttribute]
private void set_h(IMultiPageViewModel value);
    [CompilerGeneratedAttribute]
internal Dictionary`2<NavigationItem, Fragment> get_CachedFragments();
    [CompilerGeneratedAttribute]
internal void set_CachedFragments(Dictionary`2<NavigationItem, Fragment> value);
    [CompilerGeneratedAttribute]
internal Dictionary`2<NavigationItem, IViewModel> get_CachedViewModels();
    [CompilerGeneratedAttribute]
internal void set_CachedViewModels(Dictionary`2<NavigationItem, IViewModel> value);
    [CompilerGeneratedAttribute]
internal Bundle get_State();
    [CompilerGeneratedAttribute]
internal void set_State(Bundle value);
    public virtual Fragment GetItem(int position);
    public virtual IParcelable SaveState();
    public NavigationItem GetNavigationItem(int position);
    public virtual ICharSequence GetPageTitleFormatted(int position);
    private Type ResolveFragmentContextType(NavigationTarget a);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Intersoft.Crosslight.Android.ViewPagerFragment`1 : Fragment`1<TViewModel> {
    private Dictionary`2<NavigationItem, Fragment> a;
    private Dictionary`2<NavigationItem, IViewModel> b;
    [CompilerGeneratedAttribute]
private TabPageIndicator c;
    [CompilerGeneratedAttribute]
private ViewPager d;
    [CompilerGeneratedAttribute]
private IFragment e;
    protected int ContentLayoutId { get; }
    private TabPageIndicator f { get; private set; }
    protected int TabPageIndicatorId { get; }
    private ViewPager g { get; private set; }
    protected int ViewPagerId { get; }
    public int ViewPagerIndicatorTabId { get; }
    private Dictionary`2<NavigationItem, Fragment> h { get; }
    private Dictionary`2<NavigationItem, IViewModel> i { get; }
    internal bool AutoCreateChildViewModels { get; }
    public IFragment Fragment { get; public set; }
    private IFragment Intersoft.Crosslight.Android.IViewPagerFragment.ActiveFragment { get; }
    protected ViewPagerFragment`1(IntPtr intPtr, JniHandleOwnership jniHandleOwnership);
    protected virtual void OnRestoreNonConfigurationInstance(ViewState viewState);
    protected virtual ViewState OnRetainNonConfigurationInstance();
    protected virtual ViewState CreateViewState();
    protected virtual void OnViewDisposed();
    public virtual void DisposeFragment();
    protected IViewModel ResolveViewModel(int index);
    protected virtual int get_ContentLayoutId();
    [CompilerGeneratedAttribute]
private TabPageIndicator get_f();
    [CompilerGeneratedAttribute]
private void set_f(TabPageIndicator value);
    protected virtual int get_TabPageIndicatorId();
    [CompilerGeneratedAttribute]
private ViewPager get_g();
    [CompilerGeneratedAttribute]
private void set_g(ViewPager value);
    protected virtual int get_ViewPagerId();
    public virtual int get_ViewPagerIndicatorTabId();
    private Dictionary`2<NavigationItem, Fragment> get_h();
    private Dictionary`2<NavigationItem, IViewModel> get_i();
    internal virtual bool get_AutoCreateChildViewModels();
    [CompilerGeneratedAttribute]
public virtual IFragment get_Fragment();
    [CompilerGeneratedAttribute]
public virtual void set_Fragment(IFragment value);
    private void InitializePager();
    protected virtual void InitializeView();
    public virtual void OnViewCreated(View view, Bundle savedInstanceState);
    protected virtual void OnViewModelPropertyChanged(PropertyChangedEventArgs e);
    private void OnViewPagerPageSelected(object a, PageSelectedEventArgs b);
    protected virtual void OnViewPagerPageSelected(int position);
    internal void ApplyFragmentAttribute();
    private void InitializeChildViewModels();
    private sealed virtual override IFragment Intersoft.Crosslight.Android.IViewPagerFragment.get_ActiveFragment();
    private sealed virtual override IViewModel Intersoft.Crosslight.Android.IViewPagerFragment.GetSelectedViewModel();
    private sealed virtual override void AndroidX.ViewPager.Widget.ViewPager.IOnPageChangeListener.OnPageScrollStateChanged(int a);
    private sealed virtual override void AndroidX.ViewPager.Widget.ViewPager.IOnPageChangeListener.OnPageScrolled(int a, float b, int c);
    private sealed virtual override void AndroidX.ViewPager.Widget.ViewPager.IOnPageChangeListener.OnPageSelected(int a);
    private sealed virtual override Bundle Intersoft.Crosslight.Android.IFragment.get_Arguments();
    private sealed virtual override void Intersoft.Crosslight.Android.IFragment.set_Arguments(Bundle a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewPagerViewState : ViewState {
    [CompilerGeneratedAttribute]
private Dictionary`2<NavigationItem, Fragment> o;
    [CompilerGeneratedAttribute]
private Dictionary`2<NavigationItem, IViewModel> p;
    [CompilerGeneratedAttribute]
private Bundle q;
    public Dictionary`2<NavigationItem, Fragment> CachedFragments { get; internal set; }
    public Dictionary`2<NavigationItem, IViewModel> CachedViewModels { get; internal set; }
    public Bundle AdapterState { get; internal set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<NavigationItem, Fragment> get_CachedFragments();
    [CompilerGeneratedAttribute]
internal void set_CachedFragments(Dictionary`2<NavigationItem, Fragment> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<NavigationItem, IViewModel> get_CachedViewModels();
    [CompilerGeneratedAttribute]
internal void set_CachedViewModels(Dictionary`2<NavigationItem, IViewModel> value);
    [CompilerGeneratedAttribute]
public Bundle get_AdapterState();
    [CompilerGeneratedAttribute]
internal void set_AdapterState(Bundle value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.Views.ActivityDialog : Dialog {
    private static Context a;
    private static ActivityDialog b;
    private static Animation c;
    private static Animation d;
    private static bool e;
    private static LinearLayout f;
    public ActivityDialog(Context a);
    public ActivityDialog(Context a, int b);
    public ActivityDialog(IntPtr a, JniHandleOwnership b);
    private static View InitializeLayout(LayoutInflater a, int b, string c);
    public static ActivityDialog Show(Context a, string b, string c, bool d, bool e, IDialogInterfaceOnCancelListener f, ActivityStyle g, bool h);
    private static void OnDialogDismissed(object a, EventArgs b);
    private static void OnEnterAnimationStart(object a, AnimationStartEventArgs b);
    private static void OnExitAnimationEnd(object a, AnimationEndEventArgs b);
    private static void OnOverlayLayoutTouch(object a, TouchEventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Views.ButtonWidget : FormComponentBase {
    public ButtonWidget(Context context);
    public ButtonWidget(Context context, IAttributeSet attrs);
    public ButtonWidget(Context context, IAttributeSet attrs, int defStyle);
    public ButtonWidget(IntPtr javaReference, JniHandleOwnership transfer);
    public ButtonWidget(Context context, PropertyDefinition property, WidgetSettings widgetSettings);
    public ButtonWidget(Fragment fragment, PropertyDefinition property, WidgetSettings widgetSettings);
    public virtual void ApplyBinding();
    protected virtual void ApplyEditorUIMetadata(UIEditorDefinition editorDefinition);
    protected virtual View CreateEditor();
    private void ParseBackgroundImage(Button a, string b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Views.CheckBoxWidget : FormComponentBase {
    public CheckBoxWidget(Context context);
    public CheckBoxWidget(Context context, IAttributeSet attrs);
    public CheckBoxWidget(Context context, IAttributeSet attrs, int defStyle);
    public CheckBoxWidget(IntPtr javaReference, JniHandleOwnership transfer);
    public CheckBoxWidget(Context context, PropertyDefinition property, WidgetSettings widgetSettings);
    public CheckBoxWidget(Fragment fragment, PropertyDefinition property, WidgetSettings widgetSettings);
    public virtual void ApplyBinding();
    protected virtual void ApplyEditorUIMetadata(UIEditorDefinition editorDefinition);
    protected virtual View CreateEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Views.ChildNavigationWidget : FormComponentBase {
    [CompilerGeneratedAttribute]
private TextView a;
    public TextView RightText { get; internal set; }
    public ChildNavigationWidget(Context context);
    public ChildNavigationWidget(Context context, IAttributeSet attrs);
    public ChildNavigationWidget(Context context, IAttributeSet attrs, int defStyle);
    public ChildNavigationWidget(IntPtr javaReference, JniHandleOwnership transfer);
    public ChildNavigationWidget(Context context, PropertyDefinition property, WidgetSettings widgetSettings);
    public ChildNavigationWidget(Fragment fragment, PropertyDefinition property, WidgetSettings widgetSettings);
    [CompilerGeneratedAttribute]
public TextView get_RightText();
    [CompilerGeneratedAttribute]
internal void set_RightText(TextView value);
    public virtual void ApplyBinding();
    protected virtual void ApplyEditorUIMetadata(UIEditorDefinition editorDefinition);
    private NavigationTarget BuildNavigationTarget();
    protected virtual View CreateEditor();
    protected virtual void Dispose(bool disposing);
    private void OnClick(object a, EventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.Views.DatePickerDialogFragment : DialogFragmentBase {
    [CompilerGeneratedAttribute]
private DatePicker c;
    [CompilerGeneratedAttribute]
private BindingDescription d;
    [CompilerGeneratedAttribute]
private DateTime e;
    [CompilerGeneratedAttribute]
private DatePickerMode f;
    [CompilerGeneratedAttribute]
private string g;
    [CompilerGeneratedAttribute]
private IDetailViewModel h;
    private DatePicker a { get; private set; }
    private BindingDescription b { get; private set; }
    public DateTime i { get; public set; }
    internal DatePickerMode DatePickerMode { get; internal set; }
    private string j { get; private set; }
    private IDetailViewModel k { get; private set; }
    public DatePickerDialogFragment(BindingDescription a, IDetailViewModel b, string c);
    [CompilerGeneratedAttribute]
private DatePicker get_a();
    [CompilerGeneratedAttribute]
private void set_a(DatePicker value);
    [CompilerGeneratedAttribute]
private BindingDescription get_b();
    [CompilerGeneratedAttribute]
private void set_b(BindingDescription value);
    [CompilerGeneratedAttribute]
public DateTime get_i();
    [CompilerGeneratedAttribute]
public void set_i(DateTime value);
    [CompilerGeneratedAttribute]
internal DatePickerMode get_DatePickerMode();
    [CompilerGeneratedAttribute]
internal void set_DatePickerMode(DatePickerMode value);
    [CompilerGeneratedAttribute]
private string get_j();
    [CompilerGeneratedAttribute]
private void set_j(string value);
    [CompilerGeneratedAttribute]
private IDetailViewModel get_k();
    [CompilerGeneratedAttribute]
private void set_k(IDetailViewModel value);
    public virtual Dialog OnCreateDialog(Bundle a);
    private void OnDateSet(object a, DateSetEventArgs b);
    public virtual void OnSaveInstanceState(Bundle a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Views.DatePickerWidget : FormComponentBase {
    [CompilerGeneratedAttribute]
private DatePickerMode b;
    [CompilerGeneratedAttribute]
private View c;
    [CompilerGeneratedAttribute]
private TextView d;
    private DatePickerMode a { get; private set; }
    internal View ParentTextView { get; internal set; }
    internal TextView TextView { get; internal set; }
    public DatePickerWidget(Context context);
    public DatePickerWidget(Context context, IAttributeSet attrs);
    public DatePickerWidget(Context context, IAttributeSet attrs, int defStyle);
    public DatePickerWidget(IntPtr javaReference, JniHandleOwnership transfer);
    public DatePickerWidget(Context context, PropertyDefinition property, WidgetSettings widgetSettings);
    public DatePickerWidget(Fragment fragment, PropertyDefinition property, WidgetSettings widgetSettings);
    [CompilerGeneratedAttribute]
private DatePickerMode get_a();
    [CompilerGeneratedAttribute]
private void set_a(DatePickerMode value);
    [CompilerGeneratedAttribute]
internal View get_ParentTextView();
    [CompilerGeneratedAttribute]
internal void set_ParentTextView(View value);
    [CompilerGeneratedAttribute]
internal TextView get_TextView();
    [CompilerGeneratedAttribute]
internal void set_TextView(TextView value);
    public virtual void ApplyBinding();
    protected virtual void ApplyEditorUIMetadata(UIEditorDefinition editorDefinition);
    protected virtual View CreateEditor();
    protected virtual void Dispose(bool disposing);
    private void Parent_Click(object a, EventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.Views.DateTimePickerDialogFragment : DialogFragmentBase {
    [CompilerGeneratedAttribute]
private DatePicker c;
    [CompilerGeneratedAttribute]
private TimePicker i;
    [CompilerGeneratedAttribute]
private BindingDescription d;
    [CompilerGeneratedAttribute]
private DateTime e;
    [CompilerGeneratedAttribute]
private DatePickerMode f;
    [CompilerGeneratedAttribute]
private bool j;
    [CompilerGeneratedAttribute]
private string g;
    [CompilerGeneratedAttribute]
private IDetailViewModel h;
    private DatePicker a { get; private set; }
    private TimePicker b { get; private set; }
    private BindingDescription k { get; private set; }
    public DateTime l { get; public set; }
    internal DatePickerMode DatePickerMode { get; internal set; }
    internal bool Is24HourView { get; internal set; }
    private string m { get; private set; }
    private IDetailViewModel n { get; private set; }
    public DateTimePickerDialogFragment(BindingDescription a, IDetailViewModel b, string c);
    [CompilerGeneratedAttribute]
private DatePicker get_a();
    [CompilerGeneratedAttribute]
private void set_a(DatePicker value);
    [CompilerGeneratedAttribute]
private TimePicker get_b();
    [CompilerGeneratedAttribute]
private void set_b(TimePicker value);
    [CompilerGeneratedAttribute]
private BindingDescription get_k();
    [CompilerGeneratedAttribute]
private void set_k(BindingDescription value);
    [CompilerGeneratedAttribute]
public DateTime get_l();
    [CompilerGeneratedAttribute]
public void set_l(DateTime value);
    [CompilerGeneratedAttribute]
internal DatePickerMode get_DatePickerMode();
    [CompilerGeneratedAttribute]
internal void set_DatePickerMode(DatePickerMode value);
    [CompilerGeneratedAttribute]
internal bool get_Is24HourView();
    [CompilerGeneratedAttribute]
internal void set_Is24HourView(bool value);
    [CompilerGeneratedAttribute]
private string get_m();
    [CompilerGeneratedAttribute]
private void set_m(string value);
    [CompilerGeneratedAttribute]
private IDetailViewModel get_n();
    [CompilerGeneratedAttribute]
private void set_n(IDetailViewModel value);
    private void OnClick(object a, DialogClickEventArgs b);
    public virtual Dialog OnCreateDialog(Bundle a);
    public virtual void OnSaveInstanceState(Bundle a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Views.DateTimePickerWidget : FormComponentBase {
    [CompilerGeneratedAttribute]
private DatePickerMode b;
    [CompilerGeneratedAttribute]
private TextView e;
    [CompilerGeneratedAttribute]
private bool f;
    [CompilerGeneratedAttribute]
private View c;
    private DatePickerMode a { get; private set; }
    internal TextView DateTimeTextView { get; internal set; }
    private bool d { get; private set; }
    internal View ParentTextView { get; internal set; }
    public DateTimePickerWidget(Context context);
    public DateTimePickerWidget(Context context, IAttributeSet attrs);
    public DateTimePickerWidget(Context context, IAttributeSet attrs, int defStyle);
    public DateTimePickerWidget(IntPtr javaReference, JniHandleOwnership transfer);
    public DateTimePickerWidget(Context context, PropertyDefinition property, WidgetSettings widgetSettings);
    public DateTimePickerWidget(Fragment fragment, PropertyDefinition property, WidgetSettings widgetSettings);
    [CompilerGeneratedAttribute]
private DatePickerMode get_a();
    [CompilerGeneratedAttribute]
private void set_a(DatePickerMode value);
    [CompilerGeneratedAttribute]
internal TextView get_DateTimeTextView();
    [CompilerGeneratedAttribute]
internal void set_DateTimeTextView(TextView value);
    [CompilerGeneratedAttribute]
private bool get_d();
    [CompilerGeneratedAttribute]
private void set_d(bool value);
    [CompilerGeneratedAttribute]
internal View get_ParentTextView();
    [CompilerGeneratedAttribute]
internal void set_ParentTextView(View value);
    public virtual void ApplyBinding();
    protected virtual void ApplyEditorUIMetadata(UIEditorDefinition editorDefinition);
    protected virtual View CreateEditor();
    protected virtual void Dispose(bool disposing);
    private void Parent_Click(object a, EventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Views.FormComponentBase : LinearLayout {
    private Nullable`1<bool> g;
    [CompilerGeneratedAttribute]
private BindableAttribute h;
    [CompilerGeneratedAttribute]
private BindingAttribute i;
    [CompilerGeneratedAttribute]
private ButtonAttribute j;
    [CompilerGeneratedAttribute]
private BindingAttribute k;
    [CompilerGeneratedAttribute]
private DisplayAttribute l;
    [CompilerGeneratedAttribute]
private EditableAttribute m;
    [CompilerGeneratedAttribute]
private EditorAttribute n;
    [CompilerGeneratedAttribute]
private EnabledBindingAttribute o;
    [CompilerGeneratedAttribute]
private LayoutAttribute p;
    [CompilerGeneratedAttribute]
private NavigateActionAttribute q;
    [CompilerGeneratedAttribute]
private RangeInputAttribute r;
    [CompilerGeneratedAttribute]
private SelectedItemBindingAttribute s;
    [CompilerGeneratedAttribute]
private SelectedItemsBindingAttribute t;
    [CompilerGeneratedAttribute]
private SelectedValueBindingAttribute u;
    [CompilerGeneratedAttribute]
private StringInputAttribute v;
    [CompilerGeneratedAttribute]
private VisibilityBindingAttribute w;
    private Context x;
    private View y;
    private ViewGroup z;
    private View aa;
    private BindingDescription ab;
    private bool ac;
    private ViewGroup ad;
    private PropertyDefinition ae;
    private BindingDescription af;
    private BindingDescription ag;
    private BindingDescription ah;
    private TextView ai;
    private ViewGroup aj;
    private TextView ak;
    private BindingDescription al;
    private BindingDescription am;
    private Dictionary`2<PropertyDefinition, VisibilityBindingAttribute> an;
    [CompilerGeneratedAttribute]
private Fragment ao;
    [CompilerGeneratedAttribute]
private bool ap;
    [CompilerGeneratedAttribute]
private View aq;
    [CompilerGeneratedAttribute]
private WidgetSettings ar;
    protected BindableAttribute BindableAttribute { get; protected set; }
    protected BindingAttribute BindingAttribute { get; protected set; }
    protected ButtonAttribute ButtonAttribute { get; protected set; }
    protected BindingAttribute CommandBindingAttribute { get; protected set; }
    protected DisplayAttribute DisplayAttribute { get; protected set; }
    protected EditableAttribute EditableAttribute { get; protected set; }
    protected internal EditorAttribute EditorAttribute { get; protected internal set; }
    protected EnabledBindingAttribute EnabledBindingAttribute { get; protected set; }
    protected LayoutAttribute LayoutAttribute { get; protected set; }
    protected NavigateActionAttribute NavigateActionAttribute { get; protected set; }
    protected RangeInputAttribute RangeInputAttribute { get; protected set; }
    protected internal SelectedItemBindingAttribute SelectedItemBindingAttribute { get; protected internal set; }
    protected internal SelectedItemsBindingAttribute SelectedItemsBindingAttribute { get; protected internal set; }
    protected SelectedValueBindingAttribute SelectedValueBindingAttribute { get; protected set; }
    public bool ShowSeparator { get; public set; }
    protected StringInputAttribute StringInputAttribute { get; protected set; }
    protected VisibilityBindingAttribute VisibilityBindingAttribute { get; protected set; }
    public View Editor { get; }
    public ViewGroup EditorContainer { get; }
    private View a { get; }
    public BindingDescription EnabledBinding { get; }
    public Fragment Fragment { get; protected set; }
    private bool b { get; private set; }
    public ViewGroup LayoutContainer { get; }
    public PropertyDefinition Property { get; }
    public BindingDescription SelectedItemBinding { get; }
    public BindingDescription SelectedItemsBinding { get; }
    public BindingDescription SelectedValueBinding { get; }
    public ViewGroup TitleContainer { get; }
    public TextView TitleText { get; }
    public BindingDescription ValueBinding { get; }
    public View View { get; public set; }
    public IDetailViewModel ViewModel { get; }
    public Dictionary`2<PropertyDefinition, VisibilityBindingAttribute> VisibilityBindings { get; }
    internal WidgetSettings WidgetSettings { get; internal set; }
    public FormComponentBase(Context context);
    public FormComponentBase(Context context, IAttributeSet attrs);
    public FormComponentBase(Context context, IAttributeSet attrs, int defStyle);
    public FormComponentBase(IntPtr javaReference, JniHandleOwnership transfer);
    public FormComponentBase(Context context, PropertyDefinition property, WidgetSettings widgetSettings);
    public FormComponentBase(Fragment fragment, PropertyDefinition property, WidgetSettings widgetSettings);
    private void Initialize(Context a, PropertyDefinition b, WidgetSettings c);
    [CompilerGeneratedAttribute]
protected BindableAttribute get_BindableAttribute();
    [CompilerGeneratedAttribute]
protected void set_BindableAttribute(BindableAttribute value);
    [CompilerGeneratedAttribute]
protected BindingAttribute get_BindingAttribute();
    [CompilerGeneratedAttribute]
protected void set_BindingAttribute(BindingAttribute value);
    [CompilerGeneratedAttribute]
protected ButtonAttribute get_ButtonAttribute();
    [CompilerGeneratedAttribute]
protected void set_ButtonAttribute(ButtonAttribute value);
    [CompilerGeneratedAttribute]
protected BindingAttribute get_CommandBindingAttribute();
    [CompilerGeneratedAttribute]
protected void set_CommandBindingAttribute(BindingAttribute value);
    [CompilerGeneratedAttribute]
protected DisplayAttribute get_DisplayAttribute();
    [CompilerGeneratedAttribute]
protected void set_DisplayAttribute(DisplayAttribute value);
    [CompilerGeneratedAttribute]
protected EditableAttribute get_EditableAttribute();
    [CompilerGeneratedAttribute]
protected void set_EditableAttribute(EditableAttribute value);
    [CompilerGeneratedAttribute]
protected internal EditorAttribute get_EditorAttribute();
    [CompilerGeneratedAttribute]
protected internal void set_EditorAttribute(EditorAttribute value);
    [CompilerGeneratedAttribute]
protected EnabledBindingAttribute get_EnabledBindingAttribute();
    [CompilerGeneratedAttribute]
protected void set_EnabledBindingAttribute(EnabledBindingAttribute value);
    [CompilerGeneratedAttribute]
protected LayoutAttribute get_LayoutAttribute();
    [CompilerGeneratedAttribute]
protected void set_LayoutAttribute(LayoutAttribute value);
    [CompilerGeneratedAttribute]
protected NavigateActionAttribute get_NavigateActionAttribute();
    [CompilerGeneratedAttribute]
protected void set_NavigateActionAttribute(NavigateActionAttribute value);
    [CompilerGeneratedAttribute]
protected RangeInputAttribute get_RangeInputAttribute();
    [CompilerGeneratedAttribute]
protected void set_RangeInputAttribute(RangeInputAttribute value);
    [CompilerGeneratedAttribute]
protected internal SelectedItemBindingAttribute get_SelectedItemBindingAttribute();
    [CompilerGeneratedAttribute]
protected internal void set_SelectedItemBindingAttribute(SelectedItemBindingAttribute value);
    [CompilerGeneratedAttribute]
protected internal SelectedItemsBindingAttribute get_SelectedItemsBindingAttribute();
    [CompilerGeneratedAttribute]
protected internal void set_SelectedItemsBindingAttribute(SelectedItemsBindingAttribute value);
    [CompilerGeneratedAttribute]
protected SelectedValueBindingAttribute get_SelectedValueBindingAttribute();
    [CompilerGeneratedAttribute]
protected void set_SelectedValueBindingAttribute(SelectedValueBindingAttribute value);
    public bool get_ShowSeparator();
    public void set_ShowSeparator(bool value);
    [CompilerGeneratedAttribute]
protected StringInputAttribute get_StringInputAttribute();
    [CompilerGeneratedAttribute]
protected void set_StringInputAttribute(StringInputAttribute value);
    [CompilerGeneratedAttribute]
protected VisibilityBindingAttribute get_VisibilityBindingAttribute();
    [CompilerGeneratedAttribute]
protected void set_VisibilityBindingAttribute(VisibilityBindingAttribute value);
    public virtual View get_Editor();
    public ViewGroup get_EditorContainer();
    private View get_a();
    public BindingDescription get_EnabledBinding();
    [CompilerGeneratedAttribute]
public Fragment get_Fragment();
    [CompilerGeneratedAttribute]
protected void set_Fragment(Fragment value);
    [CompilerGeneratedAttribute]
private bool get_b();
    [CompilerGeneratedAttribute]
private void set_b(bool value);
    public virtual ViewGroup get_LayoutContainer();
    public PropertyDefinition get_Property();
    public BindingDescription get_SelectedItemBinding();
    public BindingDescription get_SelectedItemsBinding();
    public BindingDescription get_SelectedValueBinding();
    public ViewGroup get_TitleContainer();
    public virtual TextView get_TitleText();
    public BindingDescription get_ValueBinding();
    [CompilerGeneratedAttribute]
public View get_View();
    [CompilerGeneratedAttribute]
public void set_View(View value);
    public IDetailViewModel get_ViewModel();
    public Dictionary`2<PropertyDefinition, VisibilityBindingAttribute> get_VisibilityBindings();
    [CompilerGeneratedAttribute]
internal WidgetSettings get_WidgetSettings();
    [CompilerGeneratedAttribute]
internal void set_WidgetSettings(WidgetSettings value);
    protected virtual bool ActivateNextProperty();
    protected virtual bool ActivateNextPropertyFromNextSection();
    public virtual void ApplyBinding();
    protected virtual void ApplyContainerUIMetadata(UIContainerDefinition containerDefinition);
    protected virtual void ApplyEditorUIMetadata(UIEditorDefinition editorDefinition);
    protected virtual void ApplyHeaderUIMetadata(UIHeaderDefinition headerDefinition);
    public void ApplyUIMetadata();
    protected virtual void ConfigureBinding(View targetView, BindableProperty property, BindingAttribute specificBinding, BindingDescription bindingDescription);
    protected virtual void ConfigureBinding(TextView textField);
    protected virtual void ConfigureInputTraits(EditText editText);
    protected virtual void ConfigureLayout();
    private void ConfigureTextFieldEvents(View a);
    protected virtual void ConfigureView();
    protected virtual BindingDescription CreateBindingDescription(BindingAttribute binding);
    protected virtual View CreateEditor();
    protected virtual TextView CreateTextView();
    internal void DetermineEditorLayoutParams(TextView a);
    protected virtual void Dispose(bool disposing);
    public T EvaluateValueBinding(BindingAttribute bindingAttribute, BindingDescription valueBinding);
    public T GetAttribute();
    public virtual PropertyDefinition GetNextProperty();
    public virtual SectionDefinition GetNextSection();
    protected virtual void HandleEnabledBinding(bool isInitializing);
    protected virtual void HandleVisibilityBinding(bool isInitializing);
    protected internal View InflateLayout(int resourceId);
    public virtual bool IsNextPropertyTextBasedEditor();
    public virtual bool IsTextFieldBasedEditor();
    protected virtual bool IsTextFieldBasedEditor(PropertyDefinition property);
    private void NotifyVisibilityChanged(string a, BindingSourceType b);
    private void OnEditTextTouch(object a, TouchEventArgs b);
    private void PopulateVisibilityBindings();
    public virtual void PrepareBinding();
    private void ProcessTextEditorType(EditText a, EditorType b);
    private void TextField_TextChanged(object a, TextChangedEventArgs b);
    protected virtual void ProcessStringInputAttributeAlignment(EditText editText, TextAlignment textAlignment);
    protected virtual void ProcessStringInputAttributeAutoCorrection(EditText editText, AutoCorrectionType autoCorrectionType);
    protected virtual void ProcessStringInputAttributeAutoResize(EditText editText, bool isAutoResize);
    protected virtual void ProcessStringInputAttributeClearButtonVisibility(EditText editText, ClearButtonVisibility clearButtonVisibility);
    protected virtual void ProcessStringInputAttributeInputType(EditText editText, InputType inputType);
    protected virtual void ProcessStringInputAttributeIsSecure(EditText editText, bool isSecure);
    private void ProcessStringInputAttributeMaxLength(EditText a, int b);
    protected virtual void ProcessStringInputAttributeMinMaxHeight(EditText editText, float minHeight, float maxHeight);
    protected virtual void ProcessStringInputAttributePlaceholder(EditText editText, string placeholder);
    protected virtual void ProcessStringInputAttributeReturnKeyType(EditText editText, ReturnKeyType returnKeyType);
    public virtual void Activate();
    public virtual void Deactivate();
    public virtual void EnabledChanged(bool isEnabled);
    public virtual float GetHeight();
    public sealed virtual TService GetService();
    public sealed virtual TService GetService(bool newInstance);
    public sealed virtual IViewContext GetViewContext();
    public virtual void InvalidateSize(bool isInitializing);
    public virtual void ValueChanged(object newValue);
    public virtual void VisibilityChanged(bool isVisible);
    public virtual void WillDisplay();
    public sealed virtual bool OnEditorAction(TextView textView, ImeAction actionId, KeyEvent e);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <ApplyUIMetadata>b__142_2(UIPropertyDefinition a);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <ApplyUIMetadata>b__142_0(UIPropertyDefinition a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Views.FormContainerView : LinearLayout {
    [CompilerGeneratedAttribute]
private ViewGroup a;
    [CompilerGeneratedAttribute]
private Fragment b;
    [CompilerGeneratedAttribute]
private ViewGroup c;
    public ViewGroup ContainerLayout { get; private set; }
    public Fragment Fragment { get; private set; }
    internal int LayoutId { get; }
    public ViewGroup RootLayout { get; private set; }
    public FormContainerView(Context context, IAttributeSet attrs);
    public FormContainerView(Context context, IAttributeSet attrs, int defStyle);
    public FormContainerView(IntPtr javaReference, JniHandleOwnership transfer);
    public FormContainerView(Context context);
    public FormContainerView(Fragment fragment);
    public FormContainerView(Context context, FormDefinition form);
    public FormContainerView(Fragment fragment, FormDefinition form);
    [CompilerGeneratedAttribute]
public ViewGroup get_ContainerLayout();
    [CompilerGeneratedAttribute]
private void set_ContainerLayout(ViewGroup value);
    [CompilerGeneratedAttribute]
public Fragment get_Fragment();
    [CompilerGeneratedAttribute]
private void set_Fragment(Fragment value);
    internal virtual int get_LayoutId();
    [CompilerGeneratedAttribute]
public ViewGroup get_RootLayout();
    [CompilerGeneratedAttribute]
private void set_RootLayout(ViewGroup value);
    protected virtual void Dispose(bool disposing);
    public virtual void AddView(IView view);
    public virtual void EnabledChanged(bool isEnabled);
    public virtual float GetHeight();
    public virtual IComponentView GetViewAt(int index);
    public sealed virtual IViewContext GetViewContext();
    public virtual IEnumerable`1<IComponentView> GetViews();
    public virtual int GetViewsCount();
    public virtual void InvalidateSize(bool isInitializing);
    public virtual void VisibilityChanged(bool isVisible);
    public virtual TService GetService();
    public virtual TService GetService(bool newInstance);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Views.HyperlinkWidget : FormComponentBase {
    public HyperlinkWidget(Context context);
    public HyperlinkWidget(Context context, IAttributeSet attrs);
    public HyperlinkWidget(Context context, IAttributeSet attrs, int defStyle);
    public HyperlinkWidget(IntPtr javaReference, JniHandleOwnership transfer);
    public HyperlinkWidget(Context context, PropertyDefinition property, WidgetSettings widgetSettings);
    public HyperlinkWidget(Fragment fragment, PropertyDefinition property, WidgetSettings widgetSettings);
    public virtual void ApplyBinding();
    protected virtual void ApplyEditorUIMetadata(UIEditorDefinition editorDefinition);
    private NavigationTarget BuildNavigationTarget();
    protected virtual View CreateEditor();
    protected virtual void Dispose(bool disposing);
    private void OnClick(object a, EventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.Views.ImagePickerDialogFragment : DialogFragmentBase {
    private Dictionary`2<string, ICommand> k;
    private File l;
    private File m;
    [CompilerGeneratedAttribute]
private DelegateCommand n;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, ICommand> o;
    [CompilerGeneratedAttribute]
private DelegateCommand p;
    [CompilerGeneratedAttribute]
private ImageAttribute q;
    [CompilerGeneratedAttribute]
private ImagePickerAttribute r;
    [CompilerGeneratedAttribute]
private PropertyDefinition s;
    [CompilerGeneratedAttribute]
private DelegateCommand t;
    [CompilerGeneratedAttribute]
private BindingDescription u;
    [CompilerGeneratedAttribute]
private IDetailViewModel h;
    private DelegateCommand a { get; private set; }
    private Dictionary`2<string, ICommand> b { get; }
    private Dictionary`2<string, ICommand> c { get; private set; }
    private DelegateCommand d { get; private set; }
    private ImageAttribute e { get; private set; }
    private ImagePickerAttribute f { get; private set; }
    private object g { get; private set; }
    private PropertyDefinition i { get; private set; }
    private DelegateCommand j { get; private set; }
    private BindingDescription v { get; private set; }
    private IDetailViewModel w { get; private set; }
    public ImagePickerDialogFragment(IDetailViewModel a, Dictionary`2<string, ICommand> b, BindingDescription c, PropertyDefinition d, ImagePickerAttribute e, ImageAttribute f);
    [CompilerGeneratedAttribute]
private DelegateCommand get_a();
    [CompilerGeneratedAttribute]
private void set_a(DelegateCommand value);
    private Dictionary`2<string, ICommand> get_b();
    [CompilerGeneratedAttribute]
private Dictionary`2<string, ICommand> get_c();
    [CompilerGeneratedAttribute]
private void set_c(Dictionary`2<string, ICommand> value);
    [CompilerGeneratedAttribute]
private DelegateCommand get_d();
    [CompilerGeneratedAttribute]
private void set_d(DelegateCommand value);
    [CompilerGeneratedAttribute]
private ImageAttribute get_e();
    [CompilerGeneratedAttribute]
private void set_e(ImageAttribute value);
    [CompilerGeneratedAttribute]
private ImagePickerAttribute get_f();
    [CompilerGeneratedAttribute]
private void set_f(ImagePickerAttribute value);
    private object get_g();
    private void set_g(object value);
    [CompilerGeneratedAttribute]
private PropertyDefinition get_i();
    [CompilerGeneratedAttribute]
private void set_i(PropertyDefinition value);
    [CompilerGeneratedAttribute]
private DelegateCommand get_j();
    [CompilerGeneratedAttribute]
private void set_j(DelegateCommand value);
    [CompilerGeneratedAttribute]
private BindingDescription get_v();
    [CompilerGeneratedAttribute]
private void set_v(BindingDescription value);
    [CompilerGeneratedAttribute]
private IDetailViewModel get_w();
    [CompilerGeneratedAttribute]
private void set_w(IDetailViewModel value);
    private void AddToCommandDictionary(string a, ICommand b);
    private void CheckForCrop(string a, Byte[] b);
    private void CheckModalActivity(string a, Activity b, Intent c, ImagePickerAttribute d, Byte[] e);
    private void ChooseFromGallery(object a);
    private File CreateImageFile(Byte[] a);
    private Bitmap DecodeUriAsBitmap(Uri a);
    private void DeleteImage(object a);
    private ImagePickerWidget GetOwner();
    private Byte[] GetThumbnailImage(object a, ImagePickerAttribute b);
    private void InitializeCommands();
    public virtual Dialog OnCreateDialog(Bundle a);
    private void OnListItemClick(object a, DialogClickEventArgs b);
    private void PostImagePickerResultParameter(Byte[] a, Byte[] b, string c);
    private Intent PrepareCropIntent(ImagePickerAttribute a, Byte[] b);
    private void TakePhoto(object a);
    private void UseFullImage(string a, Byte[] b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Views.ImagePickerWidget : FormComponentBase {
    protected BitmapLoaderDelegate _bitmapLoaderDelegate;
    private CancellationTokenSource as;
    private File at;
    protected ImageAttribute _imageAttribute;
    protected ImageView _imageView;
    [CompilerGeneratedAttribute]
private ImageLoader au;
    [CompilerGeneratedAttribute]
private ImagePickerAttribute av;
    [CompilerGeneratedAttribute]
private ImageSettings aw;
    private ImageLoader a { get; private set; }
    protected ImagePickerAttribute ImagePickerAttribute { get; protected set; }
    private ImageSettings b { get; private set; }
    public object ImageSource { get; public set; }
    public ImagePickerWidget(Context context);
    public ImagePickerWidget(Context context, IAttributeSet attrs);
    public ImagePickerWidget(Context context, IAttributeSet attrs, int defStyle);
    public ImagePickerWidget(IntPtr javaReference, JniHandleOwnership transfer);
    public ImagePickerWidget(Context context, PropertyDefinition property, WidgetSettings widgetSettings);
    public ImagePickerWidget(Fragment fragment, PropertyDefinition property, WidgetSettings widgetSettings);
    [CompilerGeneratedAttribute]
private ImageLoader get_a();
    [CompilerGeneratedAttribute]
private void set_a(ImageLoader value);
    [CompilerGeneratedAttribute]
protected ImagePickerAttribute get_ImagePickerAttribute();
    [CompilerGeneratedAttribute]
protected void set_ImagePickerAttribute(ImagePickerAttribute value);
    [CompilerGeneratedAttribute]
private ImageSettings get_b();
    [CompilerGeneratedAttribute]
private void set_b(ImageSettings value);
    public object get_ImageSource();
    public void set_ImageSource(object value);
    public virtual void ApplyBinding();
    protected virtual void ApplyEditorUIMetadata(UIEditorDefinition editorDefinition);
    protected virtual View CreateEditor();
    private void CreateImageSaveDirectory();
    protected virtual void Dispose(bool disposing);
    private void GetImageAsync(string a);
    private void ImageViewOnClick(object a, EventArgs b);
    public virtual void LoadImageAsync(object imageSource);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Views.ListViewWidget : FormComponentBase {
    private ListViewWidgetFragment ax;
    private ListViewWidgetFragment a { get; private set; }
    public ListViewWidget(Context context, PropertyDefinition property, WidgetSettings widgetSettings);
    public ListViewWidget(Fragment fragment, PropertyDefinition property, WidgetSettings widgetSettings);
    private ListViewWidgetFragment get_a();
    private void set_a(ListViewWidgetFragment value);
    protected virtual void ConfigureView();
    protected virtual View CreateEditor();
    protected virtual void Dispose(bool disposing);
    private void InvalidateListFragment();
    private void OnItemChanged(object a, PropertyChangedEventArgs b);
    private void OnListFragmentSizeChanged(object a, SizeChangedEventArgs b);
    private void ViewModel_PropertyChanged(object a, PropertyChangedEventArgs b);
}
public class Intersoft.Crosslight.Android.Views.ListViewWidgetBindingProvider : BindingProvider {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ImportBindingAttribute("Intersoft.Crosslight.Android.Views.ListViewWidgetBindingProvider")]
public class Intersoft.Crosslight.Android.Views.ListViewWidgetFragment : ListFragment`1<ListViewWidgetViewModel> {
    private ListViewInteraction a;
    private ChoiceInputMode b;
    [CompilerGeneratedAttribute]
private EventHandler`1<SizeChangedEventArgs> c;
    [CompilerGeneratedAttribute]
private NavigationTarget d;
    [CompilerGeneratedAttribute]
private ItemBindingDescription e;
    [CompilerGeneratedAttribute]
private IEnumerable`1<object> f;
    [CompilerGeneratedAttribute]
private IDetailViewModel g;
    [CompilerGeneratedAttribute]
private SelectedItemBindingAttribute h;
    [CompilerGeneratedAttribute]
private SelectedItemsBindingAttribute i;
    [CompilerGeneratedAttribute]
private int j;
    protected int ContentLayoutId { get; }
    protected int ListItemLayoutId { get; }
    public ListViewInteraction InteractionMode { get; }
    public ChoiceInputMode ChoiceInputMode { get; }
    private NavigationTarget k { get; private set; }
    public ItemBindingDescription ItemBindingDescription { get; public set; }
    public IEnumerable`1<object> Items { get; public set; }
    public IDetailViewModel FormViewModel { get; public set; }
    public SelectedItemBindingAttribute SelectedItemBindingAttribute { get; public set; }
    public SelectedItemsBindingAttribute SelectedItemsBindingAttribute { get; public set; }
    public int ItemHeight { get; public set; }
    public ListViewWidgetFragment(ChoiceInputMode choiceInputMode);
    public ListViewWidgetFragment(NavigationTarget detailNavigationTarget);
    [CompilerGeneratedAttribute]
public void add_SizeChanged(EventHandler`1<SizeChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_SizeChanged(EventHandler`1<SizeChangedEventArgs> value);
    protected virtual int get_ContentLayoutId();
    protected virtual int get_ListItemLayoutId();
    public virtual ListViewInteraction get_InteractionMode();
    public virtual ChoiceInputMode get_ChoiceInputMode();
    [CompilerGeneratedAttribute]
private NavigationTarget get_k();
    [CompilerGeneratedAttribute]
private void set_k(NavigationTarget value);
    [CompilerGeneratedAttribute]
public ItemBindingDescription get_ItemBindingDescription();
    [CompilerGeneratedAttribute]
public void set_ItemBindingDescription(ItemBindingDescription value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<object> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IEnumerable`1<object> value);
    [CompilerGeneratedAttribute]
public IDetailViewModel get_FormViewModel();
    [CompilerGeneratedAttribute]
public void set_FormViewModel(IDetailViewModel value);
    [CompilerGeneratedAttribute]
public SelectedItemBindingAttribute get_SelectedItemBindingAttribute();
    [CompilerGeneratedAttribute]
public void set_SelectedItemBindingAttribute(SelectedItemBindingAttribute value);
    [CompilerGeneratedAttribute]
public SelectedItemsBindingAttribute get_SelectedItemsBindingAttribute();
    [CompilerGeneratedAttribute]
public void set_SelectedItemsBindingAttribute(SelectedItemsBindingAttribute value);
    [CompilerGeneratedAttribute]
public int get_ItemHeight();
    [CompilerGeneratedAttribute]
public void set_ItemHeight(int value);
    protected virtual void InitializeViewModel();
    protected virtual void InitializeView();
    protected virtual void InitializeListAdapter();
    private void ListView_LayoutChanged(object a, LayoutChangeEventArgs b);
    protected virtual void OnViewCreated();
    protected virtual void OnViewModelPropertyChanged(PropertyChangedEventArgs e);
    internal void SetItemsInternal(IEnumerable`1<object> a);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Views.ListViewWidgetViewModel : ViewModelBase {
    private IEnumerable a;
    private object b;
    private IList c;
    private ICollection d;
    private NavigationTarget e;
    private IDetailViewModel f;
    private bool g;
    public IEnumerable Items { get; public set; }
    public object SelectedItem { get; public set; }
    public IList SelectedItems { get; public set; }
    public ICollection SourceItems { get; public set; }
    public NavigationTarget DetailNavigationTarget { get; public set; }
    public bool IsBatchUpdating { get; public set; }
    public IDetailViewModel FormViewModel { get; public set; }
    public sealed virtual IEnumerable get_Items();
    public sealed virtual void set_Items(IEnumerable value);
    public sealed virtual object get_SelectedItem();
    public sealed virtual void set_SelectedItem(object value);
    public sealed virtual IList get_SelectedItems();
    public sealed virtual void set_SelectedItems(IList value);
    public sealed virtual ICollection get_SourceItems();
    public sealed virtual void set_SourceItems(ICollection value);
    public NavigationTarget get_DetailNavigationTarget();
    public void set_DetailNavigationTarget(NavigationTarget value);
    public bool get_IsBatchUpdating();
    public void set_IsBatchUpdating(bool value);
    public IDetailViewModel get_FormViewModel();
    public void set_FormViewModel(IDetailViewModel value);
    private void OnFormViewModelPropertyChanged(object a, PropertyChangedEventArgs b);
    private void InvalidateIsBatchUpdating();
    private void OnSourceItemsChanged();
    protected virtual void Dispose(bool isDisposing);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Views.NumericStepperWidget : FormComponentBase {
    private NumericStepper a { get; }
    public NumericStepperWidget(Context context);
    public NumericStepperWidget(Context context, IAttributeSet attrs);
    public NumericStepperWidget(Context context, IAttributeSet attrs, int defStyle);
    public NumericStepperWidget(IntPtr javaReference, JniHandleOwnership transfer);
    public NumericStepperWidget(Context context, PropertyDefinition property, WidgetSettings widgetSettings);
    public NumericStepperWidget(Fragment fragment, PropertyDefinition property, WidgetSettings widgetSettings);
    private NumericStepper get_a();
    public virtual void ApplyBinding();
    protected virtual void ApplyEditorUIMetadata(UIEditorDefinition editorDefinition);
    protected virtual View CreateEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Views.RadioButtonWidget : FormComponentBase {
    public RadioButtonWidget(Context context);
    public RadioButtonWidget(Context context, IAttributeSet attrs);
    public RadioButtonWidget(Context context, IAttributeSet attrs, int defStyle);
    public RadioButtonWidget(IntPtr javaReference, JniHandleOwnership transfer);
    public RadioButtonWidget(Context context, PropertyDefinition property, WidgetSettings widgetSettings);
    public RadioButtonWidget(Fragment fragment, PropertyDefinition property, WidgetSettings widgetSettings);
    public virtual void ApplyBinding();
    protected virtual View CreateEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Views.RadioGroupWidget : FormComponentBase {
    [CompilerGeneratedAttribute]
private List`1<PropertyDefinition> ay;
    private List`1<PropertyDefinition> a { get; private set; }
    public RadioGroupWidget(Context context);
    public RadioGroupWidget(Context context, IAttributeSet attrs);
    public RadioGroupWidget(Context context, IAttributeSet attrs, int defStyle);
    public RadioGroupWidget(IntPtr javaReference, JniHandleOwnership transfer);
    public RadioGroupWidget(Context context, PropertyDefinition property, WidgetSettings widgetSettings);
    public RadioGroupWidget(Fragment fragment, PropertyDefinition property, WidgetSettings widgetSettings);
    [CompilerGeneratedAttribute]
private List`1<PropertyDefinition> get_a();
    [CompilerGeneratedAttribute]
private void set_a(List`1<PropertyDefinition> value);
    public virtual void ApplyBinding();
    protected virtual View CreateEditor();
    public virtual void PrepareBinding();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Views.SectionContainerView : FormContainerView {
    internal Context _context;
    private EnabledBindingAttribute d;
    private SectionDefinition e;
    internal SectionAttribute _sectionAttribute;
    private VisibilityBindingAttribute f;
    private BindingDescription g;
    private ViewGroup h;
    internal ViewGroup _layoutContainer;
    private int i;
    private List`1<View> j;
    private BindingDescription k;
    [CompilerGeneratedAttribute]
private TextView l;
    [CompilerGeneratedAttribute]
private TextView m;
    private TextView a { get; private set; }
    private TextView b { get; private set; }
    public IDetailViewModel ViewModel { get; }
    public SectionContainerView(Context context);
    public SectionContainerView(Context context, IAttributeSet attrs);
    public SectionContainerView(Context context, IAttributeSet attrs, int defStyle);
    public SectionContainerView(IntPtr javaReference, JniHandleOwnership transfer);
    public SectionContainerView(Context context, SectionDefinition section);
    public SectionContainerView(Fragment fragment, SectionDefinition section);
    [CompilerGeneratedAttribute]
private TextView get_a();
    [CompilerGeneratedAttribute]
private void set_a(TextView value);
    [CompilerGeneratedAttribute]
private TextView get_b();
    [CompilerGeneratedAttribute]
private void set_b(TextView value);
    public IDetailViewModel get_ViewModel();
    private void AddToViewContainer(ViewGroup a, IView b, ViewGroup c, PropertyDefinition d);
    public virtual void AddView(IView view);
    public virtual void ApplyBinding();
    public void ApplyUIMetadata();
    protected virtual void ApplyUIMetadata(UISectionDefinition sectionDefinition);
    private void CheckPropertyDefinitionAndAddToView(PropertyDefinition a, ViewGroup b, IView c);
    protected virtual void ConfigureView();
    private void ConfigureViewMinWidth();
    private void GetViewMaxWidth(View a);
    private void HandleEnabledBinding();
    internal virtual void HandleSectionAttribute();
    private void HandleVisibilityBinding(bool a);
    public virtual void PrepareBinding();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Views.SeekBarWidget : FormComponentBase {
    public SeekBarWidget(Context context);
    public SeekBarWidget(Context context, IAttributeSet attrs);
    public SeekBarWidget(Context context, IAttributeSet attrs, int defStyle);
    public SeekBarWidget(IntPtr javaReference, JniHandleOwnership transfer);
    public SeekBarWidget(Context context, PropertyDefinition property, WidgetSettings widgetSettings);
    public SeekBarWidget(Fragment fragment, PropertyDefinition property, WidgetSettings widgetSettings);
    public virtual void ApplyBinding();
    protected virtual void ApplyEditorUIMetadata(UIEditorDefinition editorDefinition);
    protected virtual View CreateEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Views.SegmentedWidget : FormComponentBase {
    public SegmentedWidget(Context context);
    public SegmentedWidget(Context context, IAttributeSet attrs);
    public SegmentedWidget(Context context, IAttributeSet attrs, int defStyle);
    public SegmentedWidget(IntPtr javaReference, JniHandleOwnership transfer);
    public SegmentedWidget(Context context, PropertyDefinition property, WidgetSettings widgetSettings);
    public SegmentedWidget(Fragment fragment, PropertyDefinition property, WidgetSettings widgetSettings);
    public virtual void ApplyBinding();
    protected virtual View CreateEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.Views.SelectionDialogFragment : DialogFragmentBase {
    [CompilerGeneratedAttribute]
private AdapterOptions v;
    [CompilerGeneratedAttribute]
private ObservableListAdapter w;
    [CompilerGeneratedAttribute]
private ListView x;
    [CompilerGeneratedAttribute]
private PropertyDefinition s;
    [CompilerGeneratedAttribute]
private BindingDescription y;
    [CompilerGeneratedAttribute]
private SelectedItemBindingAttribute z;
    [CompilerGeneratedAttribute]
private string aa;
    [CompilerGeneratedAttribute]
private IDetailViewModel h;
    private AdapterOptions a { get; private set; }
    private ObservableListAdapter b { get; private set; }
    private ListView c { get; private set; }
    private PropertyDefinition d { get; private set; }
    private BindingDescription e { get; private set; }
    private SelectedItemBindingAttribute f { get; private set; }
    private string g { get; private set; }
    private IDetailViewModel i { get; private set; }
    public SelectionDialogFragment(string a, AdapterOptions b, IDetailViewModel c, PropertyDefinition d, BindingDescription e, SelectedItemBindingAttribute f);
    [CompilerGeneratedAttribute]
private AdapterOptions get_a();
    [CompilerGeneratedAttribute]
private void set_a(AdapterOptions value);
    [CompilerGeneratedAttribute]
private ObservableListAdapter get_b();
    [CompilerGeneratedAttribute]
private void set_b(ObservableListAdapter value);
    [CompilerGeneratedAttribute]
private ListView get_c();
    [CompilerGeneratedAttribute]
private void set_c(ListView value);
    [CompilerGeneratedAttribute]
private PropertyDefinition get_d();
    [CompilerGeneratedAttribute]
private void set_d(PropertyDefinition value);
    [CompilerGeneratedAttribute]
private BindingDescription get_e();
    [CompilerGeneratedAttribute]
private void set_e(BindingDescription value);
    [CompilerGeneratedAttribute]
private SelectedItemBindingAttribute get_f();
    [CompilerGeneratedAttribute]
private void set_f(SelectedItemBindingAttribute value);
    [CompilerGeneratedAttribute]
private string get_g();
    [CompilerGeneratedAttribute]
private void set_g(string value);
    [CompilerGeneratedAttribute]
private IDetailViewModel get_i();
    [CompilerGeneratedAttribute]
private void set_i(IDetailViewModel value);
    public virtual void Dismiss();
    protected virtual void Dispose(bool a);
    private void InvalidateSelection();
    public virtual void OnCancel(IDialogInterface a);
    public virtual Dialog OnCreateDialog(Bundle a);
    private void OnListViewItemClick(object a, ItemClickEventArgs b);
    private void OnListViewModelPropertyChanged(object a, PropertyChangedEventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Views.SelectionWidget : FormComponentBase {
    [CompilerGeneratedAttribute]
private TextView d;
    [CompilerGeneratedAttribute]
private View az;
    internal int ItemLayoutId { get; }
    internal TextView TextView { get; internal set; }
    internal View TextViewContainer { get; internal set; }
    public SelectionWidget(Context context);
    public SelectionWidget(Context context, IAttributeSet attrs);
    public SelectionWidget(Context context, IAttributeSet attrs, int defStyle);
    public SelectionWidget(IntPtr javaReference, JniHandleOwnership transfer);
    public SelectionWidget(Context context, PropertyDefinition property, WidgetSettings widgetSettings);
    public SelectionWidget(Fragment fragment, PropertyDefinition property, WidgetSettings widgetSettings);
    internal virtual int get_ItemLayoutId();
    [CompilerGeneratedAttribute]
internal TextView get_TextView();
    [CompilerGeneratedAttribute]
internal void set_TextView(TextView value);
    [CompilerGeneratedAttribute]
internal View get_TextViewContainer();
    [CompilerGeneratedAttribute]
internal void set_TextViewContainer(View value);
    public virtual void ApplyBinding();
    protected virtual void ApplyEditorUIMetadata(UIEditorDefinition editorDefinition);
    protected virtual View CreateEditor();
    protected virtual void Dispose(bool disposing);
    private void OnTextViewContainerClick(object a, EventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.Views.SelectionWidgetViewModel : ViewModelBase {
    private IEnumerable a;
    private object b;
    private ICollection c;
    public IEnumerable Items { get; public set; }
    public object SelectedItem { get; public set; }
    private IList Intersoft.Crosslight.IListViewModel.SelectedItems { get; private set; }
    public ICollection SourceItems { get; public set; }
    private void OnSourceItemsChanged();
    public sealed virtual IEnumerable get_Items();
    public sealed virtual void set_Items(IEnumerable value);
    public sealed virtual object get_SelectedItem();
    public sealed virtual void set_SelectedItem(object value);
    private sealed virtual override IList Intersoft.Crosslight.IListViewModel.get_SelectedItems();
    private sealed virtual override void Intersoft.Crosslight.IListViewModel.set_SelectedItems(IList value);
    public sealed virtual ICollection get_SourceItems();
    public sealed virtual void set_SourceItems(ICollection value);
}
public class Intersoft.Crosslight.Android.Views.SizeChangedEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private int a;
    [CompilerGeneratedAttribute]
private int b;
    public int Width { get; public set; }
    public int Height { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(int value);
    [CompilerGeneratedAttribute]
public int get_Height();
    [CompilerGeneratedAttribute]
public void set_Height(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Views.SpinnerWidget : FormComponentBase {
    [CompilerGeneratedAttribute]
private int ba;
    [CompilerGeneratedAttribute]
private Spinner bb;
    [CompilerGeneratedAttribute]
private ObservableListAdapter bc;
    internal int DropDownItemLayoutId { get; private set; }
    internal Spinner Spinner { get; internal set; }
    private ObservableListAdapter a { get; private set; }
    public SpinnerWidget(Context context);
    public SpinnerWidget(Context context, IAttributeSet attrs);
    public SpinnerWidget(Context context, IAttributeSet attrs, int defStyle);
    public SpinnerWidget(IntPtr javaReference, JniHandleOwnership transfer);
    public SpinnerWidget(Context context, PropertyDefinition property, WidgetSettings widgetSettings);
    public SpinnerWidget(Fragment fragment, PropertyDefinition property, WidgetSettings widgetSettings);
    [CompilerGeneratedAttribute]
internal virtual int get_DropDownItemLayoutId();
    [CompilerGeneratedAttribute]
private void set_DropDownItemLayoutId(int value);
    [CompilerGeneratedAttribute]
internal Spinner get_Spinner();
    [CompilerGeneratedAttribute]
internal void set_Spinner(Spinner value);
    [CompilerGeneratedAttribute]
private ObservableListAdapter get_a();
    [CompilerGeneratedAttribute]
private void set_a(ObservableListAdapter value);
    public virtual void ApplyBinding();
    protected virtual void ApplyEditorUIMetadata(UIEditorDefinition editorDefinition);
    protected virtual View CreateEditor();
    protected virtual void Dispose(bool disposing);
    private void InvalidateSelection();
    private void OnDismiss(IDialogInterface a);
    private void OnListViewModelPropertyChanged(object a, PropertyChangedEventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Views.SwitchWidget : FormComponentBase {
    private Switch a { get; }
    public SwitchWidget(Context context);
    public SwitchWidget(Context context, IAttributeSet attrs);
    public SwitchWidget(Context context, IAttributeSet attrs, int defStyle);
    public SwitchWidget(IntPtr javaReference, JniHandleOwnership transfer);
    public SwitchWidget(Context context, PropertyDefinition property, WidgetSettings widgetSettings);
    public SwitchWidget(Fragment fragment, PropertyDefinition property, WidgetSettings widgetSettings);
    private Switch get_a();
    public virtual void ApplyBinding();
    protected virtual void ApplyEditorUIMetadata(UIEditorDefinition editorDefinition);
    protected virtual View CreateEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Intersoft.Crosslight.Android.Views.TimePickerDialogFragment : DialogFragmentBase {
    [CompilerGeneratedAttribute]
private bool j;
    [CompilerGeneratedAttribute]
private TimePicker i;
    [CompilerGeneratedAttribute]
private BindingDescription d;
    [CompilerGeneratedAttribute]
private DateTime e;
    [CompilerGeneratedAttribute]
private string g;
    [CompilerGeneratedAttribute]
private IDetailViewModel h;
    internal bool Is24HourView { get; internal set; }
    internal TimePicker TimePicker { get; internal set; }
    private BindingDescription a { get; private set; }
    public DateTime b { get; public set; }
    private string c { get; private set; }
    private IDetailViewModel f { get; private set; }
    public TimePickerDialogFragment(BindingDescription a, IDetailViewModel b, string c);
    [CompilerGeneratedAttribute]
internal bool get_Is24HourView();
    [CompilerGeneratedAttribute]
internal void set_Is24HourView(bool value);
    [CompilerGeneratedAttribute]
internal TimePicker get_TimePicker();
    [CompilerGeneratedAttribute]
internal void set_TimePicker(TimePicker value);
    [CompilerGeneratedAttribute]
private BindingDescription get_a();
    [CompilerGeneratedAttribute]
private void set_a(BindingDescription value);
    [CompilerGeneratedAttribute]
public DateTime get_b();
    [CompilerGeneratedAttribute]
public void set_b(DateTime value);
    [CompilerGeneratedAttribute]
private string get_c();
    [CompilerGeneratedAttribute]
private void set_c(string value);
    [CompilerGeneratedAttribute]
private IDetailViewModel get_f();
    [CompilerGeneratedAttribute]
private void set_f(IDetailViewModel value);
    protected virtual void Dispose(bool a);
    public virtual Dialog OnCreateDialog(Bundle a);
    public virtual void OnSaveInstanceState(Bundle a);
    private void OnTimeSet(object a, TimeSetEventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.Views.TimePickerWidget : FormComponentBase {
    [CompilerGeneratedAttribute]
private bool f;
    [CompilerGeneratedAttribute]
private TextView d;
    [CompilerGeneratedAttribute]
private View az;
    private bool a { get; private set; }
    internal TextView TextView { get; internal set; }
    internal View TextViewContainer { get; internal set; }
    public TimePickerWidget(Context context);
    public TimePickerWidget(Context context, IAttributeSet attrs);
    public TimePickerWidget(Context context, IAttributeSet attrs, int defStyle);
    public TimePickerWidget(IntPtr javaReference, JniHandleOwnership transfer);
    public TimePickerWidget(Context context, PropertyDefinition property, WidgetSettings widgetSettings);
    public TimePickerWidget(Fragment fragment, PropertyDefinition property, WidgetSettings widgetSettings);
    [CompilerGeneratedAttribute]
private bool get_a();
    [CompilerGeneratedAttribute]
private void set_a(bool value);
    [CompilerGeneratedAttribute]
internal TextView get_TextView();
    [CompilerGeneratedAttribute]
internal void set_TextView(TextView value);
    [CompilerGeneratedAttribute]
internal View get_TextViewContainer();
    [CompilerGeneratedAttribute]
internal void set_TextViewContainer(View value);
    public virtual void ApplyBinding();
    protected virtual void ApplyEditorUIMetadata(UIEditorDefinition editorDefinition);
    protected virtual View CreateEditor();
    protected virtual void Dispose(bool disposing);
    private void OnTextViewContainerClick(object a, EventArgs b);
}
public class Intersoft.Crosslight.Android.Views.WidgetSettings : object {
    [CompilerGeneratedAttribute]
private int a;
    [CompilerGeneratedAttribute]
private int b;
    [CompilerGeneratedAttribute]
private int c;
    [CompilerGeneratedAttribute]
private int d;
    [CompilerGeneratedAttribute]
private int e;
    [CompilerGeneratedAttribute]
private int f;
    [CompilerGeneratedAttribute]
private int g;
    public int DetailOnlyLayout { get; public set; }
    public int EditTextLayout { get; public set; }
    public int LeftDetailLayout { get; public set; }
    public int RightDetailLayout { get; public set; }
    public int RowDetailLayout { get; public set; }
    public int SeparatorLayoutId { get; public set; }
    public int TextLayout { get; public set; }
    [CompilerGeneratedAttribute]
public int get_DetailOnlyLayout();
    [CompilerGeneratedAttribute]
public void set_DetailOnlyLayout(int value);
    [CompilerGeneratedAttribute]
public int get_EditTextLayout();
    [CompilerGeneratedAttribute]
public void set_EditTextLayout(int value);
    [CompilerGeneratedAttribute]
public int get_LeftDetailLayout();
    [CompilerGeneratedAttribute]
public void set_LeftDetailLayout(int value);
    [CompilerGeneratedAttribute]
public int get_RightDetailLayout();
    [CompilerGeneratedAttribute]
public void set_RightDetailLayout(int value);
    [CompilerGeneratedAttribute]
public int get_RowDetailLayout();
    [CompilerGeneratedAttribute]
public void set_RowDetailLayout(int value);
    [CompilerGeneratedAttribute]
public int get_SeparatorLayoutId();
    [CompilerGeneratedAttribute]
public void set_SeparatorLayoutId(int value);
    [CompilerGeneratedAttribute]
public int get_TextLayout();
    [CompilerGeneratedAttribute]
public void set_TextLayout(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Intersoft.Crosslight.Android.ViewSliderActivity`1 : Activity`1<TViewModel> {
    public static int CircularTransitionDelay;
    private Handler a;
    [CompilerGeneratedAttribute]
private ViewPager b;
    [CompilerGeneratedAttribute]
private PagerAdapter c;
    [CompilerGeneratedAttribute]
private IPageIndicator d;
    [CompilerGeneratedAttribute]
private FrameLayout e;
    [CompilerGeneratedAttribute]
private Runnable f;
    [CompilerGeneratedAttribute]
private bool g;
    [CompilerGeneratedAttribute]
private bool h;
    [CompilerGeneratedAttribute]
private float i;
    [CompilerGeneratedAttribute]
private float j;
    private Dictionary`2<Type, IItemBindingAdapter> k;
    public ViewPager ViewSlider { get; private set; }
    private PagerAdapter l { get; private set; }
    protected int ContentLayoutId { get; }
    protected int ViewSliderItemLayoutId { get; }
    protected int ViewSliderId { get; }
    protected BasicImageLoaderSettings ImageLoaderSettings { get; }
    protected SliderIndicatorMode IndicatorMode { get; }
    protected int IndicatorContainerId { get; }
    protected int AutoSlideInterval { get; }
    protected bool AutoSlide { get; }
    protected SlideDirection AutoSlideDirection { get; }
    protected bool IsCircular { get; }
    public IPageIndicator PageIndicator { get; public set; }
    protected int PageIndicatorLayout { get; }
    protected int PageIndicatorId { get; }
    public FrameLayout PageIndicatorContainer { get; public set; }
    private Handler m { get; }
    private Runnable n { get; private set; }
    private bool o { get; private set; }
    private bool p { get; private set; }
    private float q { get; private set; }
    private float r { get; private set; }
    public Dictionary`2<Type, IItemBindingAdapter> ItemBindingAdapters { get; }
    protected ViewSliderActivity`1(TViewModel viewModel);
    protected ViewSliderActivity`1(IntPtr intPtr, JniHandleOwnership jniHandleOwnership);
    private static ViewSliderActivity`1();
    protected virtual void OnViewModelDisposed();
    protected virtual void OnViewDisposed();
    [CompilerGeneratedAttribute]
public ViewPager get_ViewSlider();
    [CompilerGeneratedAttribute]
private void set_ViewSlider(ViewPager value);
    [CompilerGeneratedAttribute]
private PagerAdapter get_l();
    [CompilerGeneratedAttribute]
private void set_l(PagerAdapter value);
    protected virtual int get_ContentLayoutId();
    protected virtual int get_ViewSliderItemLayoutId();
    protected virtual int get_ViewSliderId();
    protected virtual BasicImageLoaderSettings get_ImageLoaderSettings();
    protected virtual SliderIndicatorMode get_IndicatorMode();
    protected virtual int get_IndicatorContainerId();
    protected virtual int get_AutoSlideInterval();
    protected virtual bool get_AutoSlide();
    protected virtual SlideDirection get_AutoSlideDirection();
    protected virtual bool get_IsCircular();
    [CompilerGeneratedAttribute]
public IPageIndicator get_PageIndicator();
    [CompilerGeneratedAttribute]
public void set_PageIndicator(IPageIndicator value);
    protected int get_PageIndicatorLayout();
    protected int get_PageIndicatorId();
    [CompilerGeneratedAttribute]
public FrameLayout get_PageIndicatorContainer();
    [CompilerGeneratedAttribute]
public void set_PageIndicatorContainer(FrameLayout value);
    private Handler get_m();
    [CompilerGeneratedAttribute]
private Runnable get_n();
    [CompilerGeneratedAttribute]
private void set_n(Runnable value);
    [CompilerGeneratedAttribute]
private bool get_o();
    [CompilerGeneratedAttribute]
private void set_o(bool value);
    [CompilerGeneratedAttribute]
private bool get_p();
    [CompilerGeneratedAttribute]
private void set_p(bool value);
    [CompilerGeneratedAttribute]
private float get_q();
    [CompilerGeneratedAttribute]
private void set_q(float value);
    [CompilerGeneratedAttribute]
private float get_r();
    [CompilerGeneratedAttribute]
private void set_r(float value);
    protected virtual void Initialize();
    public void RegisterItemBindingAdapter();
    protected virtual void InitializeView();
    protected virtual void OnViewCreated();
    protected virtual void OnViewModelPropertyChanged(PropertyChangedEventArgs e);
    private void InitializeViewSlider();
    private void OnViewSliderItemSelected(object a, PageSelectedEventArgs b);
    private void ExecuteSlide(int a, int b);
    private void CancelSlide();
    private void InvalidateCurrentItem();
    private IEnumerable`1<object> GetItems();
    private int GetRealIndex(int a);
    private int GetVirtualIndex(int a);
    private int GetItemsCount();
    private void OnClick(int a);
    private void OnViewSliderTouch(object a, TouchEventArgs b);
    public sealed virtual Dictionary`2<Type, IItemBindingAdapter> get_ItemBindingAdapters();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewSliderActivityViewState : FragmentActivityViewState {
    [CompilerGeneratedAttribute]
private Dictionary`2<object, Fragment> o;
    [CompilerGeneratedAttribute]
private Dictionary`2<object, Fragment> r;
    [CompilerGeneratedAttribute]
private Dictionary`2<object, IViewModel> p;
    [CompilerGeneratedAttribute]
private Bundle q;
    public Dictionary`2<object, Fragment> CachedFragments { get; internal set; }
    public Dictionary`2<object, Fragment> CachedFakeFragments { get; internal set; }
    public Dictionary`2<object, IViewModel> CachedViewModels { get; internal set; }
    public Bundle AdapterState { get; internal set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<object, Fragment> get_CachedFragments();
    [CompilerGeneratedAttribute]
internal void set_CachedFragments(Dictionary`2<object, Fragment> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<object, Fragment> get_CachedFakeFragments();
    [CompilerGeneratedAttribute]
internal void set_CachedFakeFragments(Dictionary`2<object, Fragment> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<object, IViewModel> get_CachedViewModels();
    [CompilerGeneratedAttribute]
internal void set_CachedViewModels(Dictionary`2<object, IViewModel> value);
    [CompilerGeneratedAttribute]
public Bundle get_AdapterState();
    [CompilerGeneratedAttribute]
internal void set_AdapterState(Bundle value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewSliderAdapter : PagerAdapter {
    private LayoutInflater a;
    private List`1<View> b;
    private Stack`1<View> c;
    private Dictionary`2<View, ListItemViewHolder> d;
    private ImageLoader e;
    private List`1<object> f;
    [CompilerGeneratedAttribute]
private Context g;
    [CompilerGeneratedAttribute]
private Fragment h;
    [CompilerGeneratedAttribute]
private IEnumerable i;
    [CompilerGeneratedAttribute]
private int j;
    [CompilerGeneratedAttribute]
private IListViewModel k;
    [CompilerGeneratedAttribute]
private ItemBindingDescription l;
    [CompilerGeneratedAttribute]
private BasicImageLoaderSettings m;
    protected Context Context { get; private set; }
    protected Fragment Fragment { get; private set; }
    protected LayoutInflater LayoutInflater { get; }
    public IEnumerable Items { get; public set; }
    private int n { get; private set; }
    private IListViewModel o { get; private set; }
    private ItemBindingDescription p { get; private set; }
    private List`1<object> q { get; }
    public int Count { get; }
    private List`1<View> r { get; }
    private Stack`1<View> s { get; }
    private Dictionary`2<View, ListItemViewHolder> t { get; }
    private ImageLoader u { get; }
    private BasicImageLoaderSettings v { get; private set; }
    public ViewSliderAdapter(Context context, AdapterOptions adapterOptions);
    public ViewSliderAdapter(Fragment fragment, AdapterOptions adapterOptions);
    protected ViewSliderAdapter(IntPtr javaReference, JniHandleOwnership transfer);
    [CompilerGeneratedAttribute]
protected Context get_Context();
    [CompilerGeneratedAttribute]
private void set_Context(Context value);
    [CompilerGeneratedAttribute]
protected Fragment get_Fragment();
    [CompilerGeneratedAttribute]
private void set_Fragment(Fragment value);
    protected LayoutInflater get_LayoutInflater();
    [CompilerGeneratedAttribute]
public IEnumerable get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IEnumerable value);
    [CompilerGeneratedAttribute]
private int get_n();
    [CompilerGeneratedAttribute]
private void set_n(int value);
    [CompilerGeneratedAttribute]
private IListViewModel get_o();
    [CompilerGeneratedAttribute]
private void set_o(IListViewModel value);
    [CompilerGeneratedAttribute]
private ItemBindingDescription get_p();
    [CompilerGeneratedAttribute]
private void set_p(ItemBindingDescription value);
    private List`1<object> get_q();
    public virtual int get_Count();
    private List`1<View> get_r();
    private Stack`1<View> get_s();
    private Dictionary`2<View, ListItemViewHolder> get_t();
    private ImageLoader get_u();
    [CompilerGeneratedAttribute]
private BasicImageLoaderSettings get_v();
    [CompilerGeneratedAttribute]
private void set_v(BasicImageLoaderSettings value);
    public virtual int GetItemPosition(Object object);
    public virtual bool IsViewFromObject(View view, Object object);
    public virtual Object InstantiateItem(ViewGroup container, int position);
    public virtual void DestroyItem(ViewGroup container, int position, Object object);
    public virtual View GetView(int position, object item);
    protected virtual void ApplyBinding(View view, int position, object item);
    protected virtual void Dispose(bool disposing);
    private object GetViewContext();
    private ListItemViewHolder GetViewHolder(View a);
    public virtual void LoadImageAsync(ImageView imageView, object item);
    private void OnItemsChanged(IEnumerable a, IEnumerable b);
    private void OnViewModelDataChanged(object a, DataChangedEventArgs b);
    private void OnViewModelPropertyChanged(object a, PropertyChangedEventArgs b);
    private void ExecuteNotifyDataSetChanged();
    private void OnCollectionChanged(object a, NotifyCollectionChangedEventArgs b);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Intersoft.Crosslight.Android.ViewSliderFragment`1 : Fragment`1<TViewModel> {
    public static int CircularTransitionDelay;
    private Handler a;
    [CompilerGeneratedAttribute]
private ViewPager b;
    [CompilerGeneratedAttribute]
private PagerAdapter c;
    [CompilerGeneratedAttribute]
private IPageIndicator d;
    [CompilerGeneratedAttribute]
private FrameLayout e;
    [CompilerGeneratedAttribute]
private Runnable f;
    [CompilerGeneratedAttribute]
private bool g;
    [CompilerGeneratedAttribute]
private bool h;
    [CompilerGeneratedAttribute]
private float i;
    [CompilerGeneratedAttribute]
private float j;
    private Dictionary`2<Type, IItemBindingAdapter> k;
    public ViewPager ViewSlider { get; private set; }
    private PagerAdapter l { get; private set; }
    protected int ContentLayoutId { get; }
    protected int ViewSliderItemLayoutId { get; }
    protected int ViewSliderId { get; }
    protected BasicImageLoaderSettings ImageLoaderSettings { get; }
    protected SliderIndicatorMode IndicatorMode { get; }
    protected int IndicatorContainerId { get; }
    protected int AutoSlideInterval { get; }
    protected bool AutoSlide { get; }
    protected SlideDirection AutoSlideDirection { get; }
    protected bool IsCircular { get; }
    public IPageIndicator PageIndicator { get; public set; }
    protected int PageIndicatorLayout { get; }
    protected int PageIndicatorId { get; }
    public FrameLayout PageIndicatorContainer { get; public set; }
    private Handler m { get; }
    private Runnable n { get; private set; }
    private bool o { get; private set; }
    private bool p { get; private set; }
    private float q { get; private set; }
    private float r { get; private set; }
    public Dictionary`2<Type, IItemBindingAdapter> ItemBindingAdapters { get; }
    protected ViewSliderFragment`1(IntPtr intPtr, JniHandleOwnership handleOwnership);
    protected ViewSliderFragment`1(TViewModel viewModel);
    private static ViewSliderFragment`1();
    protected virtual void OnViewModelDisposed();
    protected virtual void OnViewDisposed();
    [CompilerGeneratedAttribute]
public ViewPager get_ViewSlider();
    [CompilerGeneratedAttribute]
private void set_ViewSlider(ViewPager value);
    [CompilerGeneratedAttribute]
private PagerAdapter get_l();
    [CompilerGeneratedAttribute]
private void set_l(PagerAdapter value);
    protected virtual int get_ContentLayoutId();
    protected virtual int get_ViewSliderItemLayoutId();
    protected virtual int get_ViewSliderId();
    protected virtual BasicImageLoaderSettings get_ImageLoaderSettings();
    protected virtual SliderIndicatorMode get_IndicatorMode();
    protected virtual int get_IndicatorContainerId();
    protected virtual int get_AutoSlideInterval();
    protected virtual bool get_AutoSlide();
    protected virtual SlideDirection get_AutoSlideDirection();
    protected virtual bool get_IsCircular();
    [CompilerGeneratedAttribute]
public IPageIndicator get_PageIndicator();
    [CompilerGeneratedAttribute]
public void set_PageIndicator(IPageIndicator value);
    protected int get_PageIndicatorLayout();
    protected int get_PageIndicatorId();
    [CompilerGeneratedAttribute]
public FrameLayout get_PageIndicatorContainer();
    [CompilerGeneratedAttribute]
public void set_PageIndicatorContainer(FrameLayout value);
    private Handler get_m();
    [CompilerGeneratedAttribute]
private Runnable get_n();
    [CompilerGeneratedAttribute]
private void set_n(Runnable value);
    [CompilerGeneratedAttribute]
private bool get_o();
    [CompilerGeneratedAttribute]
private void set_o(bool value);
    [CompilerGeneratedAttribute]
private bool get_p();
    [CompilerGeneratedAttribute]
private void set_p(bool value);
    [CompilerGeneratedAttribute]
private float get_q();
    [CompilerGeneratedAttribute]
private void set_q(float value);
    [CompilerGeneratedAttribute]
private float get_r();
    [CompilerGeneratedAttribute]
private void set_r(float value);
    protected virtual void Initialize();
    public void RegisterItemBindingAdapter();
    protected virtual void InitializeView();
    protected virtual void OnViewCreated();
    protected virtual void OnViewModelPropertyChanged(PropertyChangedEventArgs e);
    private void InitializeViewSlider();
    private void OnViewSliderItemSelected(object a, PageSelectedEventArgs b);
    private void ExecuteSlide(int a, int b);
    private void CancelSlide();
    private void InvalidateCurrentItem();
    private IEnumerable`1<object> GetItems();
    private int GetRealIndex(int a);
    private int GetVirtualIndex(int a);
    private int GetItemsCount();
    private void OnClick(int a);
    private void OnViewSliderTouch(object a, TouchEventArgs b);
    public sealed virtual Dictionary`2<Type, IItemBindingAdapter> get_ItemBindingAdapters();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewSliderViewState : ViewState {
    [CompilerGeneratedAttribute]
private Dictionary`2<object, Fragment> o;
    [CompilerGeneratedAttribute]
private Dictionary`2<object, Fragment> r;
    [CompilerGeneratedAttribute]
private Dictionary`2<object, IViewModel> p;
    [CompilerGeneratedAttribute]
private Bundle q;
    public Dictionary`2<object, Fragment> CachedFragments { get; internal set; }
    public Dictionary`2<object, Fragment> CachedFakeFragments { get; internal set; }
    public Dictionary`2<object, IViewModel> CachedViewModels { get; internal set; }
    public Bundle AdapterState { get; internal set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<object, Fragment> get_CachedFragments();
    [CompilerGeneratedAttribute]
internal void set_CachedFragments(Dictionary`2<object, Fragment> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<object, Fragment> get_CachedFakeFragments();
    [CompilerGeneratedAttribute]
internal void set_CachedFakeFragments(Dictionary`2<object, Fragment> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<object, IViewModel> get_CachedViewModels();
    [CompilerGeneratedAttribute]
internal void set_CachedViewModels(Dictionary`2<object, IViewModel> value);
    [CompilerGeneratedAttribute]
public Bundle get_AdapterState();
    [CompilerGeneratedAttribute]
internal void set_AdapterState(Bundle value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewState : Object {
    [CompilerGeneratedAttribute]
private string s;
    [CompilerGeneratedAttribute]
private IViewModel t;
    [CompilerGeneratedAttribute]
private NavigationTarget u;
    [CompilerGeneratedAttribute]
private NavigationItem v;
    [CompilerGeneratedAttribute]
private Action`1<object> w;
    public string Id { get; internal set; }
    public IViewModel ViewModel { get; internal set; }
    public NavigationTarget NavigationTarget { get; internal set; }
    public NavigationItem NavigationItem { get; internal set; }
    internal Action`1<object> ModalCallback { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(string value);
    [CompilerGeneratedAttribute]
public IViewModel get_ViewModel();
    [CompilerGeneratedAttribute]
internal void set_ViewModel(IViewModel value);
    [CompilerGeneratedAttribute]
public NavigationTarget get_NavigationTarget();
    [CompilerGeneratedAttribute]
internal void set_NavigationTarget(NavigationTarget value);
    [CompilerGeneratedAttribute]
public NavigationItem get_NavigationItem();
    [CompilerGeneratedAttribute]
internal void set_NavigationItem(NavigationItem value);
    [CompilerGeneratedAttribute]
internal Action`1<object> get_ModalCallback();
    [CompilerGeneratedAttribute]
internal void set_ModalCallback(Action`1<object> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewTemplateSelector : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, int> a;
    [CompilerGeneratedAttribute]
private Func`3<int, object, string> b;
    public Dictionary`2<string, int> CellTemplates { get; private set; }
    internal Func`3<int, object, string> CallBack { get; internal set; }
    public ViewTemplateSelector(Dictionary`2<string, int> cellTemplates, Func`3<int, object, string> callBack);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, int> get_CellTemplates();
    [CompilerGeneratedAttribute]
private void set_CellTemplates(Dictionary`2<string, int> value);
    [CompilerGeneratedAttribute]
internal Func`3<int, object, string> get_CallBack();
    [CompilerGeneratedAttribute]
internal void set_CallBack(Func`3<int, object, string> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Intersoft.Crosslight.Android.ViewWrapper : LinearLayout {
    [CompilerGeneratedAttribute]
private PropertyDefinition a;
    [CompilerGeneratedAttribute]
private View b;
    public PropertyDefinition Property { get; public set; }
    public View View { get; public set; }
    public ViewWrapper(View view, Context context, PropertyDefinition property);
    [CompilerGeneratedAttribute]
public PropertyDefinition get_Property();
    [CompilerGeneratedAttribute]
public void set_Property(PropertyDefinition value);
    [CompilerGeneratedAttribute]
public View get_View();
    [CompilerGeneratedAttribute]
public void set_View(View value);
    public sealed virtual TService GetService();
    public sealed virtual TService GetService(bool newInstance);
    public sealed virtual IViewContext GetViewContext();
    public sealed virtual float GetHeight();
    public sealed virtual void InvalidateSize(bool isInitializing);
    public sealed virtual void VisibilityChanged(bool isVisible);
    public sealed virtual void EnabledChanged(bool isEnabled);
    public sealed virtual void Activate();
    public sealed virtual void Deactivate();
    public sealed virtual void WillDisplay();
    public sealed virtual void ValueChanged(object newValue);
}
public class Inventory.Crosslight.Android.MobileServices.ConnectivityService : AndroidMobileComponentServiceBase {
    [NullableAttribute("1")]
private ConnectivityBroadcastReceiver a;
    [NullableAttribute("1")]
private ConnectivityManager b;
    protected virtual void Dispose(bool disposing);
    protected virtual void OnInitialize();
    public virtual bool IsSupported();
    public sealed virtual NetworkConnectionStatus GetConnectionStatus();
    [NullableContextAttribute("1")]
public sealed virtual void GetHostReachability(string host, Action`1<ReachabilityResult> resultCallback);
    [NullableContextAttribute("1")]
public sealed virtual void StartMonitoringReachabilityChanges(ReachabilityChangesDelegate reachabilityChangesDelegate);
    [NullableContextAttribute("1")]
public sealed virtual void StopMonitoringReachabilityChanges(ReachabilityChangesDelegate reachabilityChangesDelegate);
    public sealed virtual void ShowNetworkActivityIndicator();
    public sealed virtual void HideNetworkActivityIndicator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
public class Inventory.Crosslight.Android.Models.GoogleDistance : object {
    [CompilerGeneratedAttribute]
private string a;
    [CompilerGeneratedAttribute]
private int b;
    [DataMemberAttribute]
public string Text { get; public set; }
    [DataMemberAttribute]
public int Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public int get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
public class Inventory.Crosslight.Android.Models.GoogleDuration : object {
    [CompilerGeneratedAttribute]
private string a;
    [CompilerGeneratedAttribute]
private int b;
    [DataMemberAttribute]
public string Text { get; public set; }
    [DataMemberAttribute]
public int Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public int get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
public class Inventory.Crosslight.Android.Models.GoogleGeometryBounds : object {
    [CompilerGeneratedAttribute]
private GoogleGeometryLocation a;
    [CompilerGeneratedAttribute]
private GoogleGeometryLocation b;
    [DataMemberAttribute]
public GoogleGeometryLocation NorthEast { get; public set; }
    [DataMemberAttribute]
public GoogleGeometryLocation SouthWest { get; public set; }
    [CompilerGeneratedAttribute]
public GoogleGeometryLocation get_NorthEast();
    [CompilerGeneratedAttribute]
public void set_NorthEast(GoogleGeometryLocation value);
    [CompilerGeneratedAttribute]
public GoogleGeometryLocation get_SouthWest();
    [CompilerGeneratedAttribute]
public void set_SouthWest(GoogleGeometryLocation value);
}
[DataContractAttribute]
public class Inventory.Crosslight.Android.Models.GoogleGeometryLocation : object {
    [CompilerGeneratedAttribute]
private double a;
    [CompilerGeneratedAttribute]
private double b;
    [DataMemberAttribute]
public double Latitude { get; public set; }
    [DataMemberAttribute]
public double Longitude { get; public set; }
    [CompilerGeneratedAttribute]
public double get_Latitude();
    [CompilerGeneratedAttribute]
public void set_Latitude(double value);
    [CompilerGeneratedAttribute]
public double get_Longitude();
    [CompilerGeneratedAttribute]
public void set_Longitude(double value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
public class Inventory.Crosslight.Android.Models.GooglePlacesAddressComponents : object {
    [CompilerGeneratedAttribute]
private string a;
    [CompilerGeneratedAttribute]
private string b;
    [CompilerGeneratedAttribute]
private String[] c;
    [DataMemberAttribute]
public string LongName { get; public set; }
    [DataMemberAttribute]
public string ShortName { get; public set; }
    [DataMemberAttribute]
public String[] Types { get; public set; }
    [CompilerGeneratedAttribute]
public string get_LongName();
    [CompilerGeneratedAttribute]
public void set_LongName(string value);
    [CompilerGeneratedAttribute]
public string get_ShortName();
    [CompilerGeneratedAttribute]
public void set_ShortName(string value);
    [CompilerGeneratedAttribute]
public String[] get_Types();
    [CompilerGeneratedAttribute]
public void set_Types(String[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
public class Inventory.Crosslight.Android.Models.GooglePlacesAspects : object {
    [CompilerGeneratedAttribute]
private double a;
    [CompilerGeneratedAttribute]
private string b;
    [DataMemberAttribute]
public double Rating { get; public set; }
    [DataMemberAttribute]
public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public double get_Rating();
    [CompilerGeneratedAttribute]
public void set_Rating(double value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
public class Inventory.Crosslight.Android.Models.GooglePlacesGeometry : object {
    [CompilerGeneratedAttribute]
private GoogleGeometryBounds a;
    [CompilerGeneratedAttribute]
private GoogleGeometryLocation b;
    [CompilerGeneratedAttribute]
private string c;
    [CompilerGeneratedAttribute]
private GoogleGeometryBounds d;
    [DataMemberAttribute]
public GoogleGeometryBounds Bounds { get; public set; }
    [DataMemberAttribute]
public GoogleGeometryLocation Location { get; public set; }
    [DataMemberAttribute]
public string LocationType { get; public set; }
    [DataMemberAttribute]
public GoogleGeometryBounds Viewport { get; public set; }
    [CompilerGeneratedAttribute]
public GoogleGeometryBounds get_Bounds();
    [CompilerGeneratedAttribute]
public void set_Bounds(GoogleGeometryBounds value);
    [CompilerGeneratedAttribute]
public GoogleGeometryLocation get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(GoogleGeometryLocation value);
    [CompilerGeneratedAttribute]
public string get_LocationType();
    [CompilerGeneratedAttribute]
public void set_LocationType(string value);
    [CompilerGeneratedAttribute]
public GoogleGeometryBounds get_Viewport();
    [CompilerGeneratedAttribute]
public void set_Viewport(GoogleGeometryBounds value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
public class Inventory.Crosslight.Android.Models.GooglePlacesPhotos : object {
    [CompilerGeneratedAttribute]
private int a;
    [CompilerGeneratedAttribute]
private String[] b;
    [CompilerGeneratedAttribute]
private string c;
    [CompilerGeneratedAttribute]
private int d;
    [DataMemberAttribute]
public int Height { get; public set; }
    [DataMemberAttribute]
public String[] HtmlAttributions { get; public set; }
    [DataMemberAttribute]
public string PhotoReference { get; public set; }
    [DataMemberAttribute]
public int Width { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Height();
    [CompilerGeneratedAttribute]
public void set_Height(int value);
    [CompilerGeneratedAttribute]
public String[] get_HtmlAttributions();
    [CompilerGeneratedAttribute]
public void set_HtmlAttributions(String[] value);
    [CompilerGeneratedAttribute]
public string get_PhotoReference();
    [CompilerGeneratedAttribute]
public void set_PhotoReference(string value);
    [CompilerGeneratedAttribute]
public int get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
public class Inventory.Crosslight.Android.Models.GooglePlacesResponse : object {
    [CompilerGeneratedAttribute]
private String[] a;
    [CompilerGeneratedAttribute]
private GooglePlacesResult[] b;
    [CompilerGeneratedAttribute]
private string c;
    [DataMemberAttribute]
public String[] HtmlAttributions { get; public set; }
    [DataMemberAttribute]
public GooglePlacesResult[] Results { get; public set; }
    [DataMemberAttribute]
public string Status { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_HtmlAttributions();
    [CompilerGeneratedAttribute]
public void set_HtmlAttributions(String[] value);
    [CompilerGeneratedAttribute]
public GooglePlacesResult[] get_Results();
    [CompilerGeneratedAttribute]
public void set_Results(GooglePlacesResult[] value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
public class Inventory.Crosslight.Android.Models.GooglePlacesResult : object {
    [CompilerGeneratedAttribute]
private GooglePlacesAddressComponents a;
    [CompilerGeneratedAttribute]
private string b;
    [CompilerGeneratedAttribute]
private string c;
    [CompilerGeneratedAttribute]
private GooglePlacesGeometry d;
    [CompilerGeneratedAttribute]
private string e;
    [CompilerGeneratedAttribute]
private string f;
    [CompilerGeneratedAttribute]
private string g;
    [CompilerGeneratedAttribute]
private string h;
    [CompilerGeneratedAttribute]
private GooglePlacesPhotos i;
    [CompilerGeneratedAttribute]
private double j;
    [CompilerGeneratedAttribute]
private string k;
    [CompilerGeneratedAttribute]
private GooglePlacesReviews l;
    [CompilerGeneratedAttribute]
private String[] m;
    [CompilerGeneratedAttribute]
private string n;
    [CompilerGeneratedAttribute]
private int o;
    [CompilerGeneratedAttribute]
private string p;
    [CompilerGeneratedAttribute]
private string q;
    [DataMemberAttribute]
public GooglePlacesAddressComponents AddressComponents { get; public set; }
    [DataMemberAttribute]
public string FormattedAddress { get; public set; }
    [DataMemberAttribute]
public string FormattedPhoneNumber { get; public set; }
    [DataMemberAttribute]
public GooglePlacesGeometry Geometry { get; public set; }
    [DataMemberAttribute]
public string Icon { get; public set; }
    [DataMemberAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
public string InternationalPhoneNumber { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public GooglePlacesPhotos Photos { get; public set; }
    [DataMemberAttribute]
public double Rating { get; public set; }
    [DataMemberAttribute]
public string Reference { get; public set; }
    [DataMemberAttribute]
public GooglePlacesReviews Reviews { get; public set; }
    [DataMemberAttribute]
public String[] Types { get; public set; }
    [DataMemberAttribute]
public string URL { get; public set; }
    [DataMemberAttribute]
public int UTCOffset { get; public set; }
    [DataMemberAttribute]
public string Vicinity { get; public set; }
    [DataMemberAttribute]
public string Website { get; public set; }
    [CompilerGeneratedAttribute]
public GooglePlacesAddressComponents get_AddressComponents();
    [CompilerGeneratedAttribute]
public void set_AddressComponents(GooglePlacesAddressComponents value);
    [CompilerGeneratedAttribute]
public string get_FormattedAddress();
    [CompilerGeneratedAttribute]
public void set_FormattedAddress(string value);
    [CompilerGeneratedAttribute]
public string get_FormattedPhoneNumber();
    [CompilerGeneratedAttribute]
public void set_FormattedPhoneNumber(string value);
    [CompilerGeneratedAttribute]
public GooglePlacesGeometry get_Geometry();
    [CompilerGeneratedAttribute]
public void set_Geometry(GooglePlacesGeometry value);
    [CompilerGeneratedAttribute]
public string get_Icon();
    [CompilerGeneratedAttribute]
public void set_Icon(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_InternationalPhoneNumber();
    [CompilerGeneratedAttribute]
public void set_InternationalPhoneNumber(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public GooglePlacesPhotos get_Photos();
    [CompilerGeneratedAttribute]
public void set_Photos(GooglePlacesPhotos value);
    [CompilerGeneratedAttribute]
public double get_Rating();
    [CompilerGeneratedAttribute]
public void set_Rating(double value);
    [CompilerGeneratedAttribute]
public string get_Reference();
    [CompilerGeneratedAttribute]
public void set_Reference(string value);
    [CompilerGeneratedAttribute]
public GooglePlacesReviews get_Reviews();
    [CompilerGeneratedAttribute]
public void set_Reviews(GooglePlacesReviews value);
    [CompilerGeneratedAttribute]
public String[] get_Types();
    [CompilerGeneratedAttribute]
public void set_Types(String[] value);
    [CompilerGeneratedAttribute]
public string get_URL();
    [CompilerGeneratedAttribute]
public void set_URL(string value);
    [CompilerGeneratedAttribute]
public int get_UTCOffset();
    [CompilerGeneratedAttribute]
public void set_UTCOffset(int value);
    [CompilerGeneratedAttribute]
public string get_Vicinity();
    [CompilerGeneratedAttribute]
public void set_Vicinity(string value);
    [CompilerGeneratedAttribute]
public string get_Website();
    [CompilerGeneratedAttribute]
public void set_Website(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
public class Inventory.Crosslight.Android.Models.GooglePlacesReviews : object {
    [CompilerGeneratedAttribute]
private GooglePlacesAspects a;
    [CompilerGeneratedAttribute]
private string b;
    [CompilerGeneratedAttribute]
private string c;
    [CompilerGeneratedAttribute]
private string d;
    [CompilerGeneratedAttribute]
private long e;
    [DataMemberAttribute]
public GooglePlacesAspects Aspects { get; public set; }
    [DataMemberAttribute]
public string AuthorName { get; public set; }
    [DataMemberAttribute]
public string AuthorURL { get; public set; }
    [DataMemberAttribute]
public string Text { get; public set; }
    [DataMemberAttribute]
public long Time { get; public set; }
    [CompilerGeneratedAttribute]
public GooglePlacesAspects get_Aspects();
    [CompilerGeneratedAttribute]
public void set_Aspects(GooglePlacesAspects value);
    [CompilerGeneratedAttribute]
public string get_AuthorName();
    [CompilerGeneratedAttribute]
public void set_AuthorName(string value);
    [CompilerGeneratedAttribute]
public string get_AuthorURL();
    [CompilerGeneratedAttribute]
public void set_AuthorURL(string value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public long get_Time();
    [CompilerGeneratedAttribute]
public void set_Time(long value);
}
